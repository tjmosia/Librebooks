import {
  AnnounceProvider,
  ArrowDown,
  ArrowLeft,
  ArrowRight,
  ArrowUp,
  BackgroundAppearanceProvider,
  Backspace,
  CustomStyleHooksContext,
  CustomStyleHooksProvider,
  Delete,
  End,
  Enter,
  Escape,
  Field,
  FieldContextProvider,
  GroupperMoveFocusActions,
  GroupperMoveFocusEvent,
  Home,
  IdPrefixProvider,
  Input,
  KEYBORG_FOCUSIN,
  Label,
  MoverKeys,
  MoverMoveFocusEvent,
  OverridesProvider,
  PageDown,
  PageUp,
  Portal,
  PortalMountNodeProvider,
  Provider,
  SLOT_ELEMENT_TYPE_SYMBOL,
  SLOT_RENDER_FUNCTION_SYMBOL,
  SSRProvider,
  Shift,
  Space,
  Tab,
  TabsterMoveFocusEventName,
  ThemeClassNameProvider,
  ThemeContext,
  ThemeProvider,
  TooltipVisibilityProvider,
  applyTriggerPropsToChildren,
  assertSlots,
  canUseDOM,
  clamp,
  createCustomFocusIndicatorStyle,
  createDarkTheme,
  createFocusOutlineStyle,
  createHighContrastTheme,
  createLightTheme,
  createPriorityQueue,
  createTeamsDarkTheme,
  elementContains,
  fieldClassNames,
  getEventClientCoords,
  getIntrinsicElementProps,
  getNativeElementProps,
  getPartitionedNativeProps,
  getRTLSafeKey,
  getSlots,
  getTriggerChild,
  import_react,
  inputClassNames,
  isHTMLElement,
  isInteractiveHTMLElement,
  isMouseEvent,
  isResolvedShorthand,
  isTouchEvent,
  jsx,
  jsxs,
  labelClassNames,
  mergeArrowOffset,
  mergeCallbacks,
  omit,
  renderField_unstable,
  renderInput_unstable,
  renderLabel_unstable,
  renderPortal_unstable,
  resetIdsForTests,
  resolvePositioningShorthand,
  resolveShorthand,
  slot_exports,
  teamsDarkTheme,
  teamsHighContrastTheme,
  teamsLightTheme,
  themeToTokensObject,
  toMountNodeProps,
  tokens,
  typographyStyles,
  useAnimationFrame,
  useAnnounce,
  useArrowNavigationGroup,
  useBackgroundAppearance,
  useControllableState,
  useCustomStyleHook,
  useEventCallback,
  useFieldContextValues_unstable,
  useFieldContext_unstable,
  useFieldControlProps_unstable,
  useFieldStyles_unstable,
  useField_unstable,
  useFirstMount,
  useFluent,
  useFocusFinders,
  useFocusObserved,
  useFocusVisible,
  useFocusWithin,
  useFocusableGroup,
  useFocusedElementChange,
  useForceUpdate,
  useId,
  useInputStyles_unstable,
  useInput_unstable,
  useIsSSR,
  useIsomorphicLayoutEffect,
  useKeyboardNavAttribute,
  useLabelStyles_unstable,
  useLabel_unstable,
  useMergedRefs,
  useMergedTabsterAttributes_unstable,
  useModalAttributes,
  useObservedElement,
  useOnClickOutside,
  useOnKeyboardNavigationChange,
  useOnScrollOutside,
  useOverrides,
  usePortalMountNode,
  usePortal_unstable,
  usePositioning,
  usePositioningMouseTarget,
  useRestoreFocusSource,
  useRestoreFocusTarget,
  useScrollbarWidth,
  useSelection,
  useSetKeyboardNavigation,
  useTabsterAttributes,
  useThemeClassName,
  useTimeout,
  useTooltipVisibility,
  useUncontrolledFocus,
  webDarkTheme,
  webLightTheme
} from "./chunk-DGZP3PHX.js";
import {
  ArrowDownRegular,
  ArrowUpRegular,
  Checkmark12Filled,
  Checkmark16Filled,
  CheckmarkCircleFilled,
  CheckmarkFilled,
  ChevronDown16Regular,
  ChevronDownRegular,
  ChevronLeftFilled,
  ChevronLeftRegular,
  ChevronRight12Regular,
  ChevronRightFilled,
  ChevronRightRegular,
  ChevronUp16Regular,
  CircleFilled,
  Dismiss12Regular,
  Dismiss20Regular,
  DismissCircleFilled,
  DismissFilled,
  DismissRegular,
  IconDirectionContextProvider,
  Info12Filled,
  Info12Regular,
  Info16Filled,
  Info16Regular,
  Info20Filled,
  Info20Regular,
  InfoFilled,
  Lightbulb16Regular,
  MoreHorizontalRegular,
  PauseCircleRegular,
  PersonRegular,
  PlayCircleRegular,
  PresenceAvailable10Filled,
  PresenceAvailable10Regular,
  PresenceAvailable12Filled,
  PresenceAvailable12Regular,
  PresenceAvailable16Filled,
  PresenceAvailable16Regular,
  PresenceAvailable20Filled,
  PresenceAvailable20Regular,
  PresenceAway10Filled,
  PresenceAway10Regular,
  PresenceAway12Filled,
  PresenceAway12Regular,
  PresenceAway16Filled,
  PresenceAway16Regular,
  PresenceAway20Filled,
  PresenceAway20Regular,
  PresenceBlocked10Regular,
  PresenceBlocked12Regular,
  PresenceBlocked16Regular,
  PresenceBlocked20Regular,
  PresenceBusy10Filled,
  PresenceBusy12Filled,
  PresenceBusy16Filled,
  PresenceBusy20Filled,
  PresenceDnd10Filled,
  PresenceDnd10Regular,
  PresenceDnd12Filled,
  PresenceDnd12Regular,
  PresenceDnd16Filled,
  PresenceDnd16Regular,
  PresenceDnd20Filled,
  PresenceDnd20Regular,
  PresenceOffline10Regular,
  PresenceOffline12Regular,
  PresenceOffline16Regular,
  PresenceOffline20Regular,
  PresenceOof10Regular,
  PresenceOof12Regular,
  PresenceOof16Regular,
  PresenceOof20Regular,
  PresenceUnknown10Regular,
  PresenceUnknown12Regular,
  PresenceUnknown16Regular,
  PresenceUnknown20Regular,
  ProhibitedFilled,
  RendererProvider,
  SearchRegular,
  Square12Filled,
  Square16Filled,
  StarFilled,
  StarRegular,
  TextDirectionProvider,
  WarningFilled,
  __css,
  __resetCSS,
  __resetStyles,
  __styles,
  __styles2,
  bundleIcon_default,
  createDOMRenderer,
  iconFilledClassName,
  iconRegularClassName,
  makeResetStyles,
  makeStaticStyles,
  makeStyles,
  mergeClasses,
  renderToStyleElements,
  shorthands,
  useRenderer
} from "./chunk-S7MDVNOS.js";
import "./chunk-KBTYAULA.js";
import {
  require_react_dom
} from "./chunk-RPCDYKBN.js";
import {
  require_react
} from "./chunk-QCHXOAYK.js";
import {
  __commonJS,
  __toESM
} from "./chunk-WOOG5QLI.js";

// node_modules/@fluentui/react-accordion/node_modules/scheduler/cjs/scheduler.development.js
var require_scheduler_development = __commonJS({
  "node_modules/@fluentui/react-accordion/node_modules/scheduler/cjs/scheduler.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
        }
        var enableSchedulerDebugging = false;
        var enableProfiling = false;
        var frameYieldMs = 5;
        function push(heap, node) {
          var index = heap.length;
          heap.push(node);
          siftUp(heap, node, index);
        }
        function peek(heap) {
          return heap.length === 0 ? null : heap[0];
        }
        function pop(heap) {
          if (heap.length === 0) {
            return null;
          }
          var first = heap[0];
          var last = heap.pop();
          if (last !== first) {
            heap[0] = last;
            siftDown(heap, last, 0);
          }
          return first;
        }
        function siftUp(heap, node, i) {
          var index = i;
          while (index > 0) {
            var parentIndex = index - 1 >>> 1;
            var parent = heap[parentIndex];
            if (compare(parent, node) > 0) {
              heap[parentIndex] = node;
              heap[index] = parent;
              index = parentIndex;
            } else {
              return;
            }
          }
        }
        function siftDown(heap, node, i) {
          var index = i;
          var length = heap.length;
          var halfLength = length >>> 1;
          while (index < halfLength) {
            var leftIndex = (index + 1) * 2 - 1;
            var left = heap[leftIndex];
            var rightIndex = leftIndex + 1;
            var right = heap[rightIndex];
            if (compare(left, node) < 0) {
              if (rightIndex < length && compare(right, left) < 0) {
                heap[index] = right;
                heap[rightIndex] = node;
                index = rightIndex;
              } else {
                heap[index] = left;
                heap[leftIndex] = node;
                index = leftIndex;
              }
            } else if (rightIndex < length && compare(right, node) < 0) {
              heap[index] = right;
              heap[rightIndex] = node;
              index = rightIndex;
            } else {
              return;
            }
          }
        }
        function compare(a, b) {
          var diff = a.sortIndex - b.sortIndex;
          return diff !== 0 ? diff : a.id - b.id;
        }
        var ImmediatePriority = 1;
        var UserBlockingPriority = 2;
        var NormalPriority16 = 3;
        var LowPriority = 4;
        var IdlePriority = 5;
        function markTaskErrored(task, ms) {
        }
        var hasPerformanceNow = typeof performance === "object" && typeof performance.now === "function";
        if (hasPerformanceNow) {
          var localPerformance = performance;
          exports.unstable_now = function() {
            return localPerformance.now();
          };
        } else {
          var localDate = Date;
          var initialTime = localDate.now();
          exports.unstable_now = function() {
            return localDate.now() - initialTime;
          };
        }
        var maxSigned31BitInt = 1073741823;
        var IMMEDIATE_PRIORITY_TIMEOUT = -1;
        var USER_BLOCKING_PRIORITY_TIMEOUT = 250;
        var NORMAL_PRIORITY_TIMEOUT = 5e3;
        var LOW_PRIORITY_TIMEOUT = 1e4;
        var IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt;
        var taskQueue = [];
        var timerQueue = [];
        var taskIdCounter = 1;
        var currentTask = null;
        var currentPriorityLevel = NormalPriority16;
        var isPerformingWork = false;
        var isHostCallbackScheduled = false;
        var isHostTimeoutScheduled = false;
        var localSetTimeout = typeof setTimeout === "function" ? setTimeout : null;
        var localClearTimeout = typeof clearTimeout === "function" ? clearTimeout : null;
        var localSetImmediate = typeof setImmediate !== "undefined" ? setImmediate : null;
        var isInputPending = typeof navigator !== "undefined" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 ? navigator.scheduling.isInputPending.bind(navigator.scheduling) : null;
        function advanceTimers(currentTime) {
          var timer = peek(timerQueue);
          while (timer !== null) {
            if (timer.callback === null) {
              pop(timerQueue);
            } else if (timer.startTime <= currentTime) {
              pop(timerQueue);
              timer.sortIndex = timer.expirationTime;
              push(taskQueue, timer);
            } else {
              return;
            }
            timer = peek(timerQueue);
          }
        }
        function handleTimeout(currentTime) {
          isHostTimeoutScheduled = false;
          advanceTimers(currentTime);
          if (!isHostCallbackScheduled) {
            if (peek(taskQueue) !== null) {
              isHostCallbackScheduled = true;
              requestHostCallback(flushWork);
            } else {
              var firstTimer = peek(timerQueue);
              if (firstTimer !== null) {
                requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
              }
            }
          }
        }
        function flushWork(hasTimeRemaining, initialTime2) {
          isHostCallbackScheduled = false;
          if (isHostTimeoutScheduled) {
            isHostTimeoutScheduled = false;
            cancelHostTimeout();
          }
          isPerformingWork = true;
          var previousPriorityLevel = currentPriorityLevel;
          try {
            if (enableProfiling) {
              try {
                return workLoop(hasTimeRemaining, initialTime2);
              } catch (error) {
                if (currentTask !== null) {
                  var currentTime = exports.unstable_now();
                  markTaskErrored(currentTask, currentTime);
                  currentTask.isQueued = false;
                }
                throw error;
              }
            } else {
              return workLoop(hasTimeRemaining, initialTime2);
            }
          } finally {
            currentTask = null;
            currentPriorityLevel = previousPriorityLevel;
            isPerformingWork = false;
          }
        }
        function workLoop(hasTimeRemaining, initialTime2) {
          var currentTime = initialTime2;
          advanceTimers(currentTime);
          currentTask = peek(taskQueue);
          while (currentTask !== null && !enableSchedulerDebugging) {
            if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {
              break;
            }
            var callback = currentTask.callback;
            if (typeof callback === "function") {
              currentTask.callback = null;
              currentPriorityLevel = currentTask.priorityLevel;
              var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;
              var continuationCallback = callback(didUserCallbackTimeout);
              currentTime = exports.unstable_now();
              if (typeof continuationCallback === "function") {
                currentTask.callback = continuationCallback;
              } else {
                if (currentTask === peek(taskQueue)) {
                  pop(taskQueue);
                }
              }
              advanceTimers(currentTime);
            } else {
              pop(taskQueue);
            }
            currentTask = peek(taskQueue);
          }
          if (currentTask !== null) {
            return true;
          } else {
            var firstTimer = peek(timerQueue);
            if (firstTimer !== null) {
              requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
            }
            return false;
          }
        }
        function unstable_runWithPriority(priorityLevel, eventHandler) {
          switch (priorityLevel) {
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority16:
            case LowPriority:
            case IdlePriority:
              break;
            default:
              priorityLevel = NormalPriority16;
          }
          var previousPriorityLevel = currentPriorityLevel;
          currentPriorityLevel = priorityLevel;
          try {
            return eventHandler();
          } finally {
            currentPriorityLevel = previousPriorityLevel;
          }
        }
        function unstable_next(eventHandler) {
          var priorityLevel;
          switch (currentPriorityLevel) {
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority16:
              priorityLevel = NormalPriority16;
              break;
            default:
              priorityLevel = currentPriorityLevel;
              break;
          }
          var previousPriorityLevel = currentPriorityLevel;
          currentPriorityLevel = priorityLevel;
          try {
            return eventHandler();
          } finally {
            currentPriorityLevel = previousPriorityLevel;
          }
        }
        function unstable_wrapCallback(callback) {
          var parentPriorityLevel = currentPriorityLevel;
          return function() {
            var previousPriorityLevel = currentPriorityLevel;
            currentPriorityLevel = parentPriorityLevel;
            try {
              return callback.apply(this, arguments);
            } finally {
              currentPriorityLevel = previousPriorityLevel;
            }
          };
        }
        function unstable_scheduleCallback(priorityLevel, callback, options) {
          var currentTime = exports.unstable_now();
          var startTime2;
          if (typeof options === "object" && options !== null) {
            var delay = options.delay;
            if (typeof delay === "number" && delay > 0) {
              startTime2 = currentTime + delay;
            } else {
              startTime2 = currentTime;
            }
          } else {
            startTime2 = currentTime;
          }
          var timeout2;
          switch (priorityLevel) {
            case ImmediatePriority:
              timeout2 = IMMEDIATE_PRIORITY_TIMEOUT;
              break;
            case UserBlockingPriority:
              timeout2 = USER_BLOCKING_PRIORITY_TIMEOUT;
              break;
            case IdlePriority:
              timeout2 = IDLE_PRIORITY_TIMEOUT;
              break;
            case LowPriority:
              timeout2 = LOW_PRIORITY_TIMEOUT;
              break;
            case NormalPriority16:
            default:
              timeout2 = NORMAL_PRIORITY_TIMEOUT;
              break;
          }
          var expirationTime = startTime2 + timeout2;
          var newTask = {
            id: taskIdCounter++,
            callback,
            priorityLevel,
            startTime: startTime2,
            expirationTime,
            sortIndex: -1
          };
          if (startTime2 > currentTime) {
            newTask.sortIndex = startTime2;
            push(timerQueue, newTask);
            if (peek(taskQueue) === null && newTask === peek(timerQueue)) {
              if (isHostTimeoutScheduled) {
                cancelHostTimeout();
              } else {
                isHostTimeoutScheduled = true;
              }
              requestHostTimeout(handleTimeout, startTime2 - currentTime);
            }
          } else {
            newTask.sortIndex = expirationTime;
            push(taskQueue, newTask);
            if (!isHostCallbackScheduled && !isPerformingWork) {
              isHostCallbackScheduled = true;
              requestHostCallback(flushWork);
            }
          }
          return newTask;
        }
        function unstable_pauseExecution() {
        }
        function unstable_continueExecution() {
          if (!isHostCallbackScheduled && !isPerformingWork) {
            isHostCallbackScheduled = true;
            requestHostCallback(flushWork);
          }
        }
        function unstable_getFirstCallbackNode() {
          return peek(taskQueue);
        }
        function unstable_cancelCallback(task) {
          task.callback = null;
        }
        function unstable_getCurrentPriorityLevel() {
          return currentPriorityLevel;
        }
        var isMessageLoopRunning = false;
        var scheduledHostCallback = null;
        var taskTimeoutID = -1;
        var frameInterval = frameYieldMs;
        var startTime = -1;
        function shouldYieldToHost() {
          var timeElapsed = exports.unstable_now() - startTime;
          if (timeElapsed < frameInterval) {
            return false;
          }
          return true;
        }
        function requestPaint() {
        }
        function forceFrameRate(fps) {
          if (fps < 0 || fps > 125) {
            console["error"]("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported");
            return;
          }
          if (fps > 0) {
            frameInterval = Math.floor(1e3 / fps);
          } else {
            frameInterval = frameYieldMs;
          }
        }
        var performWorkUntilDeadline = function() {
          if (scheduledHostCallback !== null) {
            var currentTime = exports.unstable_now();
            startTime = currentTime;
            var hasTimeRemaining = true;
            var hasMoreWork = true;
            try {
              hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);
            } finally {
              if (hasMoreWork) {
                schedulePerformWorkUntilDeadline();
              } else {
                isMessageLoopRunning = false;
                scheduledHostCallback = null;
              }
            }
          } else {
            isMessageLoopRunning = false;
          }
        };
        var schedulePerformWorkUntilDeadline;
        if (typeof localSetImmediate === "function") {
          schedulePerformWorkUntilDeadline = function() {
            localSetImmediate(performWorkUntilDeadline);
          };
        } else if (typeof MessageChannel !== "undefined") {
          var channel = new MessageChannel();
          var port = channel.port2;
          channel.port1.onmessage = performWorkUntilDeadline;
          schedulePerformWorkUntilDeadline = function() {
            port.postMessage(null);
          };
        } else {
          schedulePerformWorkUntilDeadline = function() {
            localSetTimeout(performWorkUntilDeadline, 0);
          };
        }
        function requestHostCallback(callback) {
          scheduledHostCallback = callback;
          if (!isMessageLoopRunning) {
            isMessageLoopRunning = true;
            schedulePerformWorkUntilDeadline();
          }
        }
        function requestHostTimeout(callback, ms) {
          taskTimeoutID = localSetTimeout(function() {
            callback(exports.unstable_now());
          }, ms);
        }
        function cancelHostTimeout() {
          localClearTimeout(taskTimeoutID);
          taskTimeoutID = -1;
        }
        var unstable_requestPaint = requestPaint;
        var unstable_Profiling = null;
        exports.unstable_IdlePriority = IdlePriority;
        exports.unstable_ImmediatePriority = ImmediatePriority;
        exports.unstable_LowPriority = LowPriority;
        exports.unstable_NormalPriority = NormalPriority16;
        exports.unstable_Profiling = unstable_Profiling;
        exports.unstable_UserBlockingPriority = UserBlockingPriority;
        exports.unstable_cancelCallback = unstable_cancelCallback;
        exports.unstable_continueExecution = unstable_continueExecution;
        exports.unstable_forceFrameRate = forceFrameRate;
        exports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;
        exports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;
        exports.unstable_next = unstable_next;
        exports.unstable_pauseExecution = unstable_pauseExecution;
        exports.unstable_requestPaint = unstable_requestPaint;
        exports.unstable_runWithPriority = unstable_runWithPriority;
        exports.unstable_scheduleCallback = unstable_scheduleCallback;
        exports.unstable_shouldYield = shouldYieldToHost;
        exports.unstable_wrapCallback = unstable_wrapCallback;
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
        }
      })();
    }
  }
});

// node_modules/@fluentui/react-accordion/node_modules/scheduler/index.js
var require_scheduler = __commonJS({
  "node_modules/@fluentui/react-accordion/node_modules/scheduler/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_scheduler_development();
    }
  }
});

// node_modules/@fluentui/react-motion/node_modules/react-is/cjs/react-is.development.js
var require_react_is_development = __commonJS({
  "node_modules/@fluentui/react-motion/node_modules/react-is/cjs/react-is.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var REACT_ELEMENT_TYPE = 60103;
        var REACT_PORTAL_TYPE = 60106;
        var REACT_FRAGMENT_TYPE = 60107;
        var REACT_STRICT_MODE_TYPE = 60108;
        var REACT_PROFILER_TYPE = 60114;
        var REACT_PROVIDER_TYPE = 60109;
        var REACT_CONTEXT_TYPE = 60110;
        var REACT_FORWARD_REF_TYPE = 60112;
        var REACT_SUSPENSE_TYPE = 60113;
        var REACT_SUSPENSE_LIST_TYPE = 60120;
        var REACT_MEMO_TYPE = 60115;
        var REACT_LAZY_TYPE = 60116;
        var REACT_BLOCK_TYPE = 60121;
        var REACT_SERVER_BLOCK_TYPE = 60122;
        var REACT_FUNDAMENTAL_TYPE = 60117;
        var REACT_SCOPE_TYPE = 60119;
        var REACT_OPAQUE_ID_TYPE = 60128;
        var REACT_DEBUG_TRACING_MODE_TYPE = 60129;
        var REACT_OFFSCREEN_TYPE = 60130;
        var REACT_LEGACY_HIDDEN_TYPE = 60131;
        if (typeof Symbol === "function" && Symbol.for) {
          var symbolFor = Symbol.for;
          REACT_ELEMENT_TYPE = symbolFor("react.element");
          REACT_PORTAL_TYPE = symbolFor("react.portal");
          REACT_FRAGMENT_TYPE = symbolFor("react.fragment");
          REACT_STRICT_MODE_TYPE = symbolFor("react.strict_mode");
          REACT_PROFILER_TYPE = symbolFor("react.profiler");
          REACT_PROVIDER_TYPE = symbolFor("react.provider");
          REACT_CONTEXT_TYPE = symbolFor("react.context");
          REACT_FORWARD_REF_TYPE = symbolFor("react.forward_ref");
          REACT_SUSPENSE_TYPE = symbolFor("react.suspense");
          REACT_SUSPENSE_LIST_TYPE = symbolFor("react.suspense_list");
          REACT_MEMO_TYPE = symbolFor("react.memo");
          REACT_LAZY_TYPE = symbolFor("react.lazy");
          REACT_BLOCK_TYPE = symbolFor("react.block");
          REACT_SERVER_BLOCK_TYPE = symbolFor("react.server.block");
          REACT_FUNDAMENTAL_TYPE = symbolFor("react.fundamental");
          REACT_SCOPE_TYPE = symbolFor("react.scope");
          REACT_OPAQUE_ID_TYPE = symbolFor("react.opaque.id");
          REACT_DEBUG_TRACING_MODE_TYPE = symbolFor("react.debug_trace_mode");
          REACT_OFFSCREEN_TYPE = symbolFor("react.offscreen");
          REACT_LEGACY_HIDDEN_TYPE = symbolFor("react.legacy_hidden");
        }
        var enableScopeAPI = false;
        function isValidElementType(type) {
          if (typeof type === "string" || typeof type === "function") {
            return true;
          }
          if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || type === REACT_DEBUG_TRACING_MODE_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_LEGACY_HIDDEN_TYPE || enableScopeAPI) {
            return true;
          }
          if (typeof type === "object" && type !== null) {
            if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_BLOCK_TYPE || type[0] === REACT_SERVER_BLOCK_TYPE) {
              return true;
            }
          }
          return false;
        }
        function typeOf(object) {
          if (typeof object === "object" && object !== null) {
            var $$typeof = object.$$typeof;
            switch ($$typeof) {
              case REACT_ELEMENT_TYPE:
                var type = object.type;
                switch (type) {
                  case REACT_FRAGMENT_TYPE:
                  case REACT_PROFILER_TYPE:
                  case REACT_STRICT_MODE_TYPE:
                  case REACT_SUSPENSE_TYPE:
                  case REACT_SUSPENSE_LIST_TYPE:
                    return type;
                  default:
                    var $$typeofType = type && type.$$typeof;
                    switch ($$typeofType) {
                      case REACT_CONTEXT_TYPE:
                      case REACT_FORWARD_REF_TYPE:
                      case REACT_LAZY_TYPE:
                      case REACT_MEMO_TYPE:
                      case REACT_PROVIDER_TYPE:
                        return $$typeofType;
                      default:
                        return $$typeof;
                    }
                }
              case REACT_PORTAL_TYPE:
                return $$typeof;
            }
          }
          return void 0;
        }
        var ContextConsumer = REACT_CONTEXT_TYPE;
        var ContextProvider = REACT_PROVIDER_TYPE;
        var Element2 = REACT_ELEMENT_TYPE;
        var ForwardRef = REACT_FORWARD_REF_TYPE;
        var Fragment6 = REACT_FRAGMENT_TYPE;
        var Lazy = REACT_LAZY_TYPE;
        var Memo = REACT_MEMO_TYPE;
        var Portal2 = REACT_PORTAL_TYPE;
        var Profiler = REACT_PROFILER_TYPE;
        var StrictMode = REACT_STRICT_MODE_TYPE;
        var Suspense = REACT_SUSPENSE_TYPE;
        var hasWarnedAboutDeprecatedIsAsyncMode = false;
        var hasWarnedAboutDeprecatedIsConcurrentMode = false;
        function isAsyncMode(object) {
          {
            if (!hasWarnedAboutDeprecatedIsAsyncMode) {
              hasWarnedAboutDeprecatedIsAsyncMode = true;
              console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 18+.");
            }
          }
          return false;
        }
        function isConcurrentMode(object) {
          {
            if (!hasWarnedAboutDeprecatedIsConcurrentMode) {
              hasWarnedAboutDeprecatedIsConcurrentMode = true;
              console["warn"]("The ReactIs.isConcurrentMode() alias has been deprecated, and will be removed in React 18+.");
            }
          }
          return false;
        }
        function isContextConsumer(object) {
          return typeOf(object) === REACT_CONTEXT_TYPE;
        }
        function isContextProvider(object) {
          return typeOf(object) === REACT_PROVIDER_TYPE;
        }
        function isElement(object) {
          return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
        }
        function isForwardRef2(object) {
          return typeOf(object) === REACT_FORWARD_REF_TYPE;
        }
        function isFragment(object) {
          return typeOf(object) === REACT_FRAGMENT_TYPE;
        }
        function isLazy(object) {
          return typeOf(object) === REACT_LAZY_TYPE;
        }
        function isMemo(object) {
          return typeOf(object) === REACT_MEMO_TYPE;
        }
        function isPortal(object) {
          return typeOf(object) === REACT_PORTAL_TYPE;
        }
        function isProfiler(object) {
          return typeOf(object) === REACT_PROFILER_TYPE;
        }
        function isStrictMode(object) {
          return typeOf(object) === REACT_STRICT_MODE_TYPE;
        }
        function isSuspense(object) {
          return typeOf(object) === REACT_SUSPENSE_TYPE;
        }
        exports.ContextConsumer = ContextConsumer;
        exports.ContextProvider = ContextProvider;
        exports.Element = Element2;
        exports.ForwardRef = ForwardRef;
        exports.Fragment = Fragment6;
        exports.Lazy = Lazy;
        exports.Memo = Memo;
        exports.Portal = Portal2;
        exports.Profiler = Profiler;
        exports.StrictMode = StrictMode;
        exports.Suspense = Suspense;
        exports.isAsyncMode = isAsyncMode;
        exports.isConcurrentMode = isConcurrentMode;
        exports.isContextConsumer = isContextConsumer;
        exports.isContextProvider = isContextProvider;
        exports.isElement = isElement;
        exports.isForwardRef = isForwardRef2;
        exports.isFragment = isFragment;
        exports.isLazy = isLazy;
        exports.isMemo = isMemo;
        exports.isPortal = isPortal;
        exports.isProfiler = isProfiler;
        exports.isStrictMode = isStrictMode;
        exports.isSuspense = isSuspense;
        exports.isValidElementType = isValidElementType;
        exports.typeOf = typeOf;
      })();
    }
  }
});

// node_modules/@fluentui/react-motion/node_modules/react-is/index.js
var require_react_is = __commonJS({
  "node_modules/@fluentui/react-motion/node_modules/react-is/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_is_development();
    }
  }
});

// node_modules/@fluentui/react-avatar/node_modules/scheduler/cjs/scheduler.development.js
var require_scheduler_development2 = __commonJS({
  "node_modules/@fluentui/react-avatar/node_modules/scheduler/cjs/scheduler.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
        }
        var enableSchedulerDebugging = false;
        var enableProfiling = false;
        var frameYieldMs = 5;
        function push(heap, node) {
          var index = heap.length;
          heap.push(node);
          siftUp(heap, node, index);
        }
        function peek(heap) {
          return heap.length === 0 ? null : heap[0];
        }
        function pop(heap) {
          if (heap.length === 0) {
            return null;
          }
          var first = heap[0];
          var last = heap.pop();
          if (last !== first) {
            heap[0] = last;
            siftDown(heap, last, 0);
          }
          return first;
        }
        function siftUp(heap, node, i) {
          var index = i;
          while (index > 0) {
            var parentIndex = index - 1 >>> 1;
            var parent = heap[parentIndex];
            if (compare(parent, node) > 0) {
              heap[parentIndex] = node;
              heap[index] = parent;
              index = parentIndex;
            } else {
              return;
            }
          }
        }
        function siftDown(heap, node, i) {
          var index = i;
          var length = heap.length;
          var halfLength = length >>> 1;
          while (index < halfLength) {
            var leftIndex = (index + 1) * 2 - 1;
            var left = heap[leftIndex];
            var rightIndex = leftIndex + 1;
            var right = heap[rightIndex];
            if (compare(left, node) < 0) {
              if (rightIndex < length && compare(right, left) < 0) {
                heap[index] = right;
                heap[rightIndex] = node;
                index = rightIndex;
              } else {
                heap[index] = left;
                heap[leftIndex] = node;
                index = leftIndex;
              }
            } else if (rightIndex < length && compare(right, node) < 0) {
              heap[index] = right;
              heap[rightIndex] = node;
              index = rightIndex;
            } else {
              return;
            }
          }
        }
        function compare(a, b) {
          var diff = a.sortIndex - b.sortIndex;
          return diff !== 0 ? diff : a.id - b.id;
        }
        var ImmediatePriority = 1;
        var UserBlockingPriority = 2;
        var NormalPriority16 = 3;
        var LowPriority = 4;
        var IdlePriority = 5;
        function markTaskErrored(task, ms) {
        }
        var hasPerformanceNow = typeof performance === "object" && typeof performance.now === "function";
        if (hasPerformanceNow) {
          var localPerformance = performance;
          exports.unstable_now = function() {
            return localPerformance.now();
          };
        } else {
          var localDate = Date;
          var initialTime = localDate.now();
          exports.unstable_now = function() {
            return localDate.now() - initialTime;
          };
        }
        var maxSigned31BitInt = 1073741823;
        var IMMEDIATE_PRIORITY_TIMEOUT = -1;
        var USER_BLOCKING_PRIORITY_TIMEOUT = 250;
        var NORMAL_PRIORITY_TIMEOUT = 5e3;
        var LOW_PRIORITY_TIMEOUT = 1e4;
        var IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt;
        var taskQueue = [];
        var timerQueue = [];
        var taskIdCounter = 1;
        var currentTask = null;
        var currentPriorityLevel = NormalPriority16;
        var isPerformingWork = false;
        var isHostCallbackScheduled = false;
        var isHostTimeoutScheduled = false;
        var localSetTimeout = typeof setTimeout === "function" ? setTimeout : null;
        var localClearTimeout = typeof clearTimeout === "function" ? clearTimeout : null;
        var localSetImmediate = typeof setImmediate !== "undefined" ? setImmediate : null;
        var isInputPending = typeof navigator !== "undefined" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 ? navigator.scheduling.isInputPending.bind(navigator.scheduling) : null;
        function advanceTimers(currentTime) {
          var timer = peek(timerQueue);
          while (timer !== null) {
            if (timer.callback === null) {
              pop(timerQueue);
            } else if (timer.startTime <= currentTime) {
              pop(timerQueue);
              timer.sortIndex = timer.expirationTime;
              push(taskQueue, timer);
            } else {
              return;
            }
            timer = peek(timerQueue);
          }
        }
        function handleTimeout(currentTime) {
          isHostTimeoutScheduled = false;
          advanceTimers(currentTime);
          if (!isHostCallbackScheduled) {
            if (peek(taskQueue) !== null) {
              isHostCallbackScheduled = true;
              requestHostCallback(flushWork);
            } else {
              var firstTimer = peek(timerQueue);
              if (firstTimer !== null) {
                requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
              }
            }
          }
        }
        function flushWork(hasTimeRemaining, initialTime2) {
          isHostCallbackScheduled = false;
          if (isHostTimeoutScheduled) {
            isHostTimeoutScheduled = false;
            cancelHostTimeout();
          }
          isPerformingWork = true;
          var previousPriorityLevel = currentPriorityLevel;
          try {
            if (enableProfiling) {
              try {
                return workLoop(hasTimeRemaining, initialTime2);
              } catch (error) {
                if (currentTask !== null) {
                  var currentTime = exports.unstable_now();
                  markTaskErrored(currentTask, currentTime);
                  currentTask.isQueued = false;
                }
                throw error;
              }
            } else {
              return workLoop(hasTimeRemaining, initialTime2);
            }
          } finally {
            currentTask = null;
            currentPriorityLevel = previousPriorityLevel;
            isPerformingWork = false;
          }
        }
        function workLoop(hasTimeRemaining, initialTime2) {
          var currentTime = initialTime2;
          advanceTimers(currentTime);
          currentTask = peek(taskQueue);
          while (currentTask !== null && !enableSchedulerDebugging) {
            if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {
              break;
            }
            var callback = currentTask.callback;
            if (typeof callback === "function") {
              currentTask.callback = null;
              currentPriorityLevel = currentTask.priorityLevel;
              var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;
              var continuationCallback = callback(didUserCallbackTimeout);
              currentTime = exports.unstable_now();
              if (typeof continuationCallback === "function") {
                currentTask.callback = continuationCallback;
              } else {
                if (currentTask === peek(taskQueue)) {
                  pop(taskQueue);
                }
              }
              advanceTimers(currentTime);
            } else {
              pop(taskQueue);
            }
            currentTask = peek(taskQueue);
          }
          if (currentTask !== null) {
            return true;
          } else {
            var firstTimer = peek(timerQueue);
            if (firstTimer !== null) {
              requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
            }
            return false;
          }
        }
        function unstable_runWithPriority(priorityLevel, eventHandler) {
          switch (priorityLevel) {
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority16:
            case LowPriority:
            case IdlePriority:
              break;
            default:
              priorityLevel = NormalPriority16;
          }
          var previousPriorityLevel = currentPriorityLevel;
          currentPriorityLevel = priorityLevel;
          try {
            return eventHandler();
          } finally {
            currentPriorityLevel = previousPriorityLevel;
          }
        }
        function unstable_next(eventHandler) {
          var priorityLevel;
          switch (currentPriorityLevel) {
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority16:
              priorityLevel = NormalPriority16;
              break;
            default:
              priorityLevel = currentPriorityLevel;
              break;
          }
          var previousPriorityLevel = currentPriorityLevel;
          currentPriorityLevel = priorityLevel;
          try {
            return eventHandler();
          } finally {
            currentPriorityLevel = previousPriorityLevel;
          }
        }
        function unstable_wrapCallback(callback) {
          var parentPriorityLevel = currentPriorityLevel;
          return function() {
            var previousPriorityLevel = currentPriorityLevel;
            currentPriorityLevel = parentPriorityLevel;
            try {
              return callback.apply(this, arguments);
            } finally {
              currentPriorityLevel = previousPriorityLevel;
            }
          };
        }
        function unstable_scheduleCallback(priorityLevel, callback, options) {
          var currentTime = exports.unstable_now();
          var startTime2;
          if (typeof options === "object" && options !== null) {
            var delay = options.delay;
            if (typeof delay === "number" && delay > 0) {
              startTime2 = currentTime + delay;
            } else {
              startTime2 = currentTime;
            }
          } else {
            startTime2 = currentTime;
          }
          var timeout2;
          switch (priorityLevel) {
            case ImmediatePriority:
              timeout2 = IMMEDIATE_PRIORITY_TIMEOUT;
              break;
            case UserBlockingPriority:
              timeout2 = USER_BLOCKING_PRIORITY_TIMEOUT;
              break;
            case IdlePriority:
              timeout2 = IDLE_PRIORITY_TIMEOUT;
              break;
            case LowPriority:
              timeout2 = LOW_PRIORITY_TIMEOUT;
              break;
            case NormalPriority16:
            default:
              timeout2 = NORMAL_PRIORITY_TIMEOUT;
              break;
          }
          var expirationTime = startTime2 + timeout2;
          var newTask = {
            id: taskIdCounter++,
            callback,
            priorityLevel,
            startTime: startTime2,
            expirationTime,
            sortIndex: -1
          };
          if (startTime2 > currentTime) {
            newTask.sortIndex = startTime2;
            push(timerQueue, newTask);
            if (peek(taskQueue) === null && newTask === peek(timerQueue)) {
              if (isHostTimeoutScheduled) {
                cancelHostTimeout();
              } else {
                isHostTimeoutScheduled = true;
              }
              requestHostTimeout(handleTimeout, startTime2 - currentTime);
            }
          } else {
            newTask.sortIndex = expirationTime;
            push(taskQueue, newTask);
            if (!isHostCallbackScheduled && !isPerformingWork) {
              isHostCallbackScheduled = true;
              requestHostCallback(flushWork);
            }
          }
          return newTask;
        }
        function unstable_pauseExecution() {
        }
        function unstable_continueExecution() {
          if (!isHostCallbackScheduled && !isPerformingWork) {
            isHostCallbackScheduled = true;
            requestHostCallback(flushWork);
          }
        }
        function unstable_getFirstCallbackNode() {
          return peek(taskQueue);
        }
        function unstable_cancelCallback(task) {
          task.callback = null;
        }
        function unstable_getCurrentPriorityLevel() {
          return currentPriorityLevel;
        }
        var isMessageLoopRunning = false;
        var scheduledHostCallback = null;
        var taskTimeoutID = -1;
        var frameInterval = frameYieldMs;
        var startTime = -1;
        function shouldYieldToHost() {
          var timeElapsed = exports.unstable_now() - startTime;
          if (timeElapsed < frameInterval) {
            return false;
          }
          return true;
        }
        function requestPaint() {
        }
        function forceFrameRate(fps) {
          if (fps < 0 || fps > 125) {
            console["error"]("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported");
            return;
          }
          if (fps > 0) {
            frameInterval = Math.floor(1e3 / fps);
          } else {
            frameInterval = frameYieldMs;
          }
        }
        var performWorkUntilDeadline = function() {
          if (scheduledHostCallback !== null) {
            var currentTime = exports.unstable_now();
            startTime = currentTime;
            var hasTimeRemaining = true;
            var hasMoreWork = true;
            try {
              hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);
            } finally {
              if (hasMoreWork) {
                schedulePerformWorkUntilDeadline();
              } else {
                isMessageLoopRunning = false;
                scheduledHostCallback = null;
              }
            }
          } else {
            isMessageLoopRunning = false;
          }
        };
        var schedulePerformWorkUntilDeadline;
        if (typeof localSetImmediate === "function") {
          schedulePerformWorkUntilDeadline = function() {
            localSetImmediate(performWorkUntilDeadline);
          };
        } else if (typeof MessageChannel !== "undefined") {
          var channel = new MessageChannel();
          var port = channel.port2;
          channel.port1.onmessage = performWorkUntilDeadline;
          schedulePerformWorkUntilDeadline = function() {
            port.postMessage(null);
          };
        } else {
          schedulePerformWorkUntilDeadline = function() {
            localSetTimeout(performWorkUntilDeadline, 0);
          };
        }
        function requestHostCallback(callback) {
          scheduledHostCallback = callback;
          if (!isMessageLoopRunning) {
            isMessageLoopRunning = true;
            schedulePerformWorkUntilDeadline();
          }
        }
        function requestHostTimeout(callback, ms) {
          taskTimeoutID = localSetTimeout(function() {
            callback(exports.unstable_now());
          }, ms);
        }
        function cancelHostTimeout() {
          localClearTimeout(taskTimeoutID);
          taskTimeoutID = -1;
        }
        var unstable_requestPaint = requestPaint;
        var unstable_Profiling = null;
        exports.unstable_IdlePriority = IdlePriority;
        exports.unstable_ImmediatePriority = ImmediatePriority;
        exports.unstable_LowPriority = LowPriority;
        exports.unstable_NormalPriority = NormalPriority16;
        exports.unstable_Profiling = unstable_Profiling;
        exports.unstable_UserBlockingPriority = UserBlockingPriority;
        exports.unstable_cancelCallback = unstable_cancelCallback;
        exports.unstable_continueExecution = unstable_continueExecution;
        exports.unstable_forceFrameRate = forceFrameRate;
        exports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;
        exports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;
        exports.unstable_next = unstable_next;
        exports.unstable_pauseExecution = unstable_pauseExecution;
        exports.unstable_requestPaint = unstable_requestPaint;
        exports.unstable_runWithPriority = unstable_runWithPriority;
        exports.unstable_scheduleCallback = unstable_scheduleCallback;
        exports.unstable_shouldYield = shouldYieldToHost;
        exports.unstable_wrapCallback = unstable_wrapCallback;
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
        }
      })();
    }
  }
});

// node_modules/@fluentui/react-avatar/node_modules/scheduler/index.js
var require_scheduler2 = __commonJS({
  "node_modules/@fluentui/react-avatar/node_modules/scheduler/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_scheduler_development2();
    }
  }
});

// node_modules/@fluentui/react-popover/node_modules/scheduler/cjs/scheduler.development.js
var require_scheduler_development3 = __commonJS({
  "node_modules/@fluentui/react-popover/node_modules/scheduler/cjs/scheduler.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
        }
        var enableSchedulerDebugging = false;
        var enableProfiling = false;
        var frameYieldMs = 5;
        function push(heap, node) {
          var index = heap.length;
          heap.push(node);
          siftUp(heap, node, index);
        }
        function peek(heap) {
          return heap.length === 0 ? null : heap[0];
        }
        function pop(heap) {
          if (heap.length === 0) {
            return null;
          }
          var first = heap[0];
          var last = heap.pop();
          if (last !== first) {
            heap[0] = last;
            siftDown(heap, last, 0);
          }
          return first;
        }
        function siftUp(heap, node, i) {
          var index = i;
          while (index > 0) {
            var parentIndex = index - 1 >>> 1;
            var parent = heap[parentIndex];
            if (compare(parent, node) > 0) {
              heap[parentIndex] = node;
              heap[index] = parent;
              index = parentIndex;
            } else {
              return;
            }
          }
        }
        function siftDown(heap, node, i) {
          var index = i;
          var length = heap.length;
          var halfLength = length >>> 1;
          while (index < halfLength) {
            var leftIndex = (index + 1) * 2 - 1;
            var left = heap[leftIndex];
            var rightIndex = leftIndex + 1;
            var right = heap[rightIndex];
            if (compare(left, node) < 0) {
              if (rightIndex < length && compare(right, left) < 0) {
                heap[index] = right;
                heap[rightIndex] = node;
                index = rightIndex;
              } else {
                heap[index] = left;
                heap[leftIndex] = node;
                index = leftIndex;
              }
            } else if (rightIndex < length && compare(right, node) < 0) {
              heap[index] = right;
              heap[rightIndex] = node;
              index = rightIndex;
            } else {
              return;
            }
          }
        }
        function compare(a, b) {
          var diff = a.sortIndex - b.sortIndex;
          return diff !== 0 ? diff : a.id - b.id;
        }
        var ImmediatePriority = 1;
        var UserBlockingPriority = 2;
        var NormalPriority16 = 3;
        var LowPriority = 4;
        var IdlePriority = 5;
        function markTaskErrored(task, ms) {
        }
        var hasPerformanceNow = typeof performance === "object" && typeof performance.now === "function";
        if (hasPerformanceNow) {
          var localPerformance = performance;
          exports.unstable_now = function() {
            return localPerformance.now();
          };
        } else {
          var localDate = Date;
          var initialTime = localDate.now();
          exports.unstable_now = function() {
            return localDate.now() - initialTime;
          };
        }
        var maxSigned31BitInt = 1073741823;
        var IMMEDIATE_PRIORITY_TIMEOUT = -1;
        var USER_BLOCKING_PRIORITY_TIMEOUT = 250;
        var NORMAL_PRIORITY_TIMEOUT = 5e3;
        var LOW_PRIORITY_TIMEOUT = 1e4;
        var IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt;
        var taskQueue = [];
        var timerQueue = [];
        var taskIdCounter = 1;
        var currentTask = null;
        var currentPriorityLevel = NormalPriority16;
        var isPerformingWork = false;
        var isHostCallbackScheduled = false;
        var isHostTimeoutScheduled = false;
        var localSetTimeout = typeof setTimeout === "function" ? setTimeout : null;
        var localClearTimeout = typeof clearTimeout === "function" ? clearTimeout : null;
        var localSetImmediate = typeof setImmediate !== "undefined" ? setImmediate : null;
        var isInputPending = typeof navigator !== "undefined" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 ? navigator.scheduling.isInputPending.bind(navigator.scheduling) : null;
        function advanceTimers(currentTime) {
          var timer = peek(timerQueue);
          while (timer !== null) {
            if (timer.callback === null) {
              pop(timerQueue);
            } else if (timer.startTime <= currentTime) {
              pop(timerQueue);
              timer.sortIndex = timer.expirationTime;
              push(taskQueue, timer);
            } else {
              return;
            }
            timer = peek(timerQueue);
          }
        }
        function handleTimeout(currentTime) {
          isHostTimeoutScheduled = false;
          advanceTimers(currentTime);
          if (!isHostCallbackScheduled) {
            if (peek(taskQueue) !== null) {
              isHostCallbackScheduled = true;
              requestHostCallback(flushWork);
            } else {
              var firstTimer = peek(timerQueue);
              if (firstTimer !== null) {
                requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
              }
            }
          }
        }
        function flushWork(hasTimeRemaining, initialTime2) {
          isHostCallbackScheduled = false;
          if (isHostTimeoutScheduled) {
            isHostTimeoutScheduled = false;
            cancelHostTimeout();
          }
          isPerformingWork = true;
          var previousPriorityLevel = currentPriorityLevel;
          try {
            if (enableProfiling) {
              try {
                return workLoop(hasTimeRemaining, initialTime2);
              } catch (error) {
                if (currentTask !== null) {
                  var currentTime = exports.unstable_now();
                  markTaskErrored(currentTask, currentTime);
                  currentTask.isQueued = false;
                }
                throw error;
              }
            } else {
              return workLoop(hasTimeRemaining, initialTime2);
            }
          } finally {
            currentTask = null;
            currentPriorityLevel = previousPriorityLevel;
            isPerformingWork = false;
          }
        }
        function workLoop(hasTimeRemaining, initialTime2) {
          var currentTime = initialTime2;
          advanceTimers(currentTime);
          currentTask = peek(taskQueue);
          while (currentTask !== null && !enableSchedulerDebugging) {
            if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {
              break;
            }
            var callback = currentTask.callback;
            if (typeof callback === "function") {
              currentTask.callback = null;
              currentPriorityLevel = currentTask.priorityLevel;
              var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;
              var continuationCallback = callback(didUserCallbackTimeout);
              currentTime = exports.unstable_now();
              if (typeof continuationCallback === "function") {
                currentTask.callback = continuationCallback;
              } else {
                if (currentTask === peek(taskQueue)) {
                  pop(taskQueue);
                }
              }
              advanceTimers(currentTime);
            } else {
              pop(taskQueue);
            }
            currentTask = peek(taskQueue);
          }
          if (currentTask !== null) {
            return true;
          } else {
            var firstTimer = peek(timerQueue);
            if (firstTimer !== null) {
              requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
            }
            return false;
          }
        }
        function unstable_runWithPriority(priorityLevel, eventHandler) {
          switch (priorityLevel) {
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority16:
            case LowPriority:
            case IdlePriority:
              break;
            default:
              priorityLevel = NormalPriority16;
          }
          var previousPriorityLevel = currentPriorityLevel;
          currentPriorityLevel = priorityLevel;
          try {
            return eventHandler();
          } finally {
            currentPriorityLevel = previousPriorityLevel;
          }
        }
        function unstable_next(eventHandler) {
          var priorityLevel;
          switch (currentPriorityLevel) {
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority16:
              priorityLevel = NormalPriority16;
              break;
            default:
              priorityLevel = currentPriorityLevel;
              break;
          }
          var previousPriorityLevel = currentPriorityLevel;
          currentPriorityLevel = priorityLevel;
          try {
            return eventHandler();
          } finally {
            currentPriorityLevel = previousPriorityLevel;
          }
        }
        function unstable_wrapCallback(callback) {
          var parentPriorityLevel = currentPriorityLevel;
          return function() {
            var previousPriorityLevel = currentPriorityLevel;
            currentPriorityLevel = parentPriorityLevel;
            try {
              return callback.apply(this, arguments);
            } finally {
              currentPriorityLevel = previousPriorityLevel;
            }
          };
        }
        function unstable_scheduleCallback(priorityLevel, callback, options) {
          var currentTime = exports.unstable_now();
          var startTime2;
          if (typeof options === "object" && options !== null) {
            var delay = options.delay;
            if (typeof delay === "number" && delay > 0) {
              startTime2 = currentTime + delay;
            } else {
              startTime2 = currentTime;
            }
          } else {
            startTime2 = currentTime;
          }
          var timeout2;
          switch (priorityLevel) {
            case ImmediatePriority:
              timeout2 = IMMEDIATE_PRIORITY_TIMEOUT;
              break;
            case UserBlockingPriority:
              timeout2 = USER_BLOCKING_PRIORITY_TIMEOUT;
              break;
            case IdlePriority:
              timeout2 = IDLE_PRIORITY_TIMEOUT;
              break;
            case LowPriority:
              timeout2 = LOW_PRIORITY_TIMEOUT;
              break;
            case NormalPriority16:
            default:
              timeout2 = NORMAL_PRIORITY_TIMEOUT;
              break;
          }
          var expirationTime = startTime2 + timeout2;
          var newTask = {
            id: taskIdCounter++,
            callback,
            priorityLevel,
            startTime: startTime2,
            expirationTime,
            sortIndex: -1
          };
          if (startTime2 > currentTime) {
            newTask.sortIndex = startTime2;
            push(timerQueue, newTask);
            if (peek(taskQueue) === null && newTask === peek(timerQueue)) {
              if (isHostTimeoutScheduled) {
                cancelHostTimeout();
              } else {
                isHostTimeoutScheduled = true;
              }
              requestHostTimeout(handleTimeout, startTime2 - currentTime);
            }
          } else {
            newTask.sortIndex = expirationTime;
            push(taskQueue, newTask);
            if (!isHostCallbackScheduled && !isPerformingWork) {
              isHostCallbackScheduled = true;
              requestHostCallback(flushWork);
            }
          }
          return newTask;
        }
        function unstable_pauseExecution() {
        }
        function unstable_continueExecution() {
          if (!isHostCallbackScheduled && !isPerformingWork) {
            isHostCallbackScheduled = true;
            requestHostCallback(flushWork);
          }
        }
        function unstable_getFirstCallbackNode() {
          return peek(taskQueue);
        }
        function unstable_cancelCallback(task) {
          task.callback = null;
        }
        function unstable_getCurrentPriorityLevel() {
          return currentPriorityLevel;
        }
        var isMessageLoopRunning = false;
        var scheduledHostCallback = null;
        var taskTimeoutID = -1;
        var frameInterval = frameYieldMs;
        var startTime = -1;
        function shouldYieldToHost() {
          var timeElapsed = exports.unstable_now() - startTime;
          if (timeElapsed < frameInterval) {
            return false;
          }
          return true;
        }
        function requestPaint() {
        }
        function forceFrameRate(fps) {
          if (fps < 0 || fps > 125) {
            console["error"]("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported");
            return;
          }
          if (fps > 0) {
            frameInterval = Math.floor(1e3 / fps);
          } else {
            frameInterval = frameYieldMs;
          }
        }
        var performWorkUntilDeadline = function() {
          if (scheduledHostCallback !== null) {
            var currentTime = exports.unstable_now();
            startTime = currentTime;
            var hasTimeRemaining = true;
            var hasMoreWork = true;
            try {
              hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);
            } finally {
              if (hasMoreWork) {
                schedulePerformWorkUntilDeadline();
              } else {
                isMessageLoopRunning = false;
                scheduledHostCallback = null;
              }
            }
          } else {
            isMessageLoopRunning = false;
          }
        };
        var schedulePerformWorkUntilDeadline;
        if (typeof localSetImmediate === "function") {
          schedulePerformWorkUntilDeadline = function() {
            localSetImmediate(performWorkUntilDeadline);
          };
        } else if (typeof MessageChannel !== "undefined") {
          var channel = new MessageChannel();
          var port = channel.port2;
          channel.port1.onmessage = performWorkUntilDeadline;
          schedulePerformWorkUntilDeadline = function() {
            port.postMessage(null);
          };
        } else {
          schedulePerformWorkUntilDeadline = function() {
            localSetTimeout(performWorkUntilDeadline, 0);
          };
        }
        function requestHostCallback(callback) {
          scheduledHostCallback = callback;
          if (!isMessageLoopRunning) {
            isMessageLoopRunning = true;
            schedulePerformWorkUntilDeadline();
          }
        }
        function requestHostTimeout(callback, ms) {
          taskTimeoutID = localSetTimeout(function() {
            callback(exports.unstable_now());
          }, ms);
        }
        function cancelHostTimeout() {
          localClearTimeout(taskTimeoutID);
          taskTimeoutID = -1;
        }
        var unstable_requestPaint = requestPaint;
        var unstable_Profiling = null;
        exports.unstable_IdlePriority = IdlePriority;
        exports.unstable_ImmediatePriority = ImmediatePriority;
        exports.unstable_LowPriority = LowPriority;
        exports.unstable_NormalPriority = NormalPriority16;
        exports.unstable_Profiling = unstable_Profiling;
        exports.unstable_UserBlockingPriority = UserBlockingPriority;
        exports.unstable_cancelCallback = unstable_cancelCallback;
        exports.unstable_continueExecution = unstable_continueExecution;
        exports.unstable_forceFrameRate = forceFrameRate;
        exports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;
        exports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;
        exports.unstable_next = unstable_next;
        exports.unstable_pauseExecution = unstable_pauseExecution;
        exports.unstable_requestPaint = unstable_requestPaint;
        exports.unstable_runWithPriority = unstable_runWithPriority;
        exports.unstable_scheduleCallback = unstable_scheduleCallback;
        exports.unstable_shouldYield = shouldYieldToHost;
        exports.unstable_wrapCallback = unstable_wrapCallback;
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
        }
      })();
    }
  }
});

// node_modules/@fluentui/react-popover/node_modules/scheduler/index.js
var require_scheduler3 = __commonJS({
  "node_modules/@fluentui/react-popover/node_modules/scheduler/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_scheduler_development3();
    }
  }
});

// node_modules/@fluentui/react-combobox/node_modules/scheduler/cjs/scheduler.development.js
var require_scheduler_development4 = __commonJS({
  "node_modules/@fluentui/react-combobox/node_modules/scheduler/cjs/scheduler.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
        }
        var enableSchedulerDebugging = false;
        var enableProfiling = false;
        var frameYieldMs = 5;
        function push(heap, node) {
          var index = heap.length;
          heap.push(node);
          siftUp(heap, node, index);
        }
        function peek(heap) {
          return heap.length === 0 ? null : heap[0];
        }
        function pop(heap) {
          if (heap.length === 0) {
            return null;
          }
          var first = heap[0];
          var last = heap.pop();
          if (last !== first) {
            heap[0] = last;
            siftDown(heap, last, 0);
          }
          return first;
        }
        function siftUp(heap, node, i) {
          var index = i;
          while (index > 0) {
            var parentIndex = index - 1 >>> 1;
            var parent = heap[parentIndex];
            if (compare(parent, node) > 0) {
              heap[parentIndex] = node;
              heap[index] = parent;
              index = parentIndex;
            } else {
              return;
            }
          }
        }
        function siftDown(heap, node, i) {
          var index = i;
          var length = heap.length;
          var halfLength = length >>> 1;
          while (index < halfLength) {
            var leftIndex = (index + 1) * 2 - 1;
            var left = heap[leftIndex];
            var rightIndex = leftIndex + 1;
            var right = heap[rightIndex];
            if (compare(left, node) < 0) {
              if (rightIndex < length && compare(right, left) < 0) {
                heap[index] = right;
                heap[rightIndex] = node;
                index = rightIndex;
              } else {
                heap[index] = left;
                heap[leftIndex] = node;
                index = leftIndex;
              }
            } else if (rightIndex < length && compare(right, node) < 0) {
              heap[index] = right;
              heap[rightIndex] = node;
              index = rightIndex;
            } else {
              return;
            }
          }
        }
        function compare(a, b) {
          var diff = a.sortIndex - b.sortIndex;
          return diff !== 0 ? diff : a.id - b.id;
        }
        var ImmediatePriority = 1;
        var UserBlockingPriority = 2;
        var NormalPriority16 = 3;
        var LowPriority = 4;
        var IdlePriority = 5;
        function markTaskErrored(task, ms) {
        }
        var hasPerformanceNow = typeof performance === "object" && typeof performance.now === "function";
        if (hasPerformanceNow) {
          var localPerformance = performance;
          exports.unstable_now = function() {
            return localPerformance.now();
          };
        } else {
          var localDate = Date;
          var initialTime = localDate.now();
          exports.unstable_now = function() {
            return localDate.now() - initialTime;
          };
        }
        var maxSigned31BitInt = 1073741823;
        var IMMEDIATE_PRIORITY_TIMEOUT = -1;
        var USER_BLOCKING_PRIORITY_TIMEOUT = 250;
        var NORMAL_PRIORITY_TIMEOUT = 5e3;
        var LOW_PRIORITY_TIMEOUT = 1e4;
        var IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt;
        var taskQueue = [];
        var timerQueue = [];
        var taskIdCounter = 1;
        var currentTask = null;
        var currentPriorityLevel = NormalPriority16;
        var isPerformingWork = false;
        var isHostCallbackScheduled = false;
        var isHostTimeoutScheduled = false;
        var localSetTimeout = typeof setTimeout === "function" ? setTimeout : null;
        var localClearTimeout = typeof clearTimeout === "function" ? clearTimeout : null;
        var localSetImmediate = typeof setImmediate !== "undefined" ? setImmediate : null;
        var isInputPending = typeof navigator !== "undefined" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 ? navigator.scheduling.isInputPending.bind(navigator.scheduling) : null;
        function advanceTimers(currentTime) {
          var timer = peek(timerQueue);
          while (timer !== null) {
            if (timer.callback === null) {
              pop(timerQueue);
            } else if (timer.startTime <= currentTime) {
              pop(timerQueue);
              timer.sortIndex = timer.expirationTime;
              push(taskQueue, timer);
            } else {
              return;
            }
            timer = peek(timerQueue);
          }
        }
        function handleTimeout(currentTime) {
          isHostTimeoutScheduled = false;
          advanceTimers(currentTime);
          if (!isHostCallbackScheduled) {
            if (peek(taskQueue) !== null) {
              isHostCallbackScheduled = true;
              requestHostCallback(flushWork);
            } else {
              var firstTimer = peek(timerQueue);
              if (firstTimer !== null) {
                requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
              }
            }
          }
        }
        function flushWork(hasTimeRemaining, initialTime2) {
          isHostCallbackScheduled = false;
          if (isHostTimeoutScheduled) {
            isHostTimeoutScheduled = false;
            cancelHostTimeout();
          }
          isPerformingWork = true;
          var previousPriorityLevel = currentPriorityLevel;
          try {
            if (enableProfiling) {
              try {
                return workLoop(hasTimeRemaining, initialTime2);
              } catch (error) {
                if (currentTask !== null) {
                  var currentTime = exports.unstable_now();
                  markTaskErrored(currentTask, currentTime);
                  currentTask.isQueued = false;
                }
                throw error;
              }
            } else {
              return workLoop(hasTimeRemaining, initialTime2);
            }
          } finally {
            currentTask = null;
            currentPriorityLevel = previousPriorityLevel;
            isPerformingWork = false;
          }
        }
        function workLoop(hasTimeRemaining, initialTime2) {
          var currentTime = initialTime2;
          advanceTimers(currentTime);
          currentTask = peek(taskQueue);
          while (currentTask !== null && !enableSchedulerDebugging) {
            if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {
              break;
            }
            var callback = currentTask.callback;
            if (typeof callback === "function") {
              currentTask.callback = null;
              currentPriorityLevel = currentTask.priorityLevel;
              var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;
              var continuationCallback = callback(didUserCallbackTimeout);
              currentTime = exports.unstable_now();
              if (typeof continuationCallback === "function") {
                currentTask.callback = continuationCallback;
              } else {
                if (currentTask === peek(taskQueue)) {
                  pop(taskQueue);
                }
              }
              advanceTimers(currentTime);
            } else {
              pop(taskQueue);
            }
            currentTask = peek(taskQueue);
          }
          if (currentTask !== null) {
            return true;
          } else {
            var firstTimer = peek(timerQueue);
            if (firstTimer !== null) {
              requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
            }
            return false;
          }
        }
        function unstable_runWithPriority(priorityLevel, eventHandler) {
          switch (priorityLevel) {
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority16:
            case LowPriority:
            case IdlePriority:
              break;
            default:
              priorityLevel = NormalPriority16;
          }
          var previousPriorityLevel = currentPriorityLevel;
          currentPriorityLevel = priorityLevel;
          try {
            return eventHandler();
          } finally {
            currentPriorityLevel = previousPriorityLevel;
          }
        }
        function unstable_next(eventHandler) {
          var priorityLevel;
          switch (currentPriorityLevel) {
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority16:
              priorityLevel = NormalPriority16;
              break;
            default:
              priorityLevel = currentPriorityLevel;
              break;
          }
          var previousPriorityLevel = currentPriorityLevel;
          currentPriorityLevel = priorityLevel;
          try {
            return eventHandler();
          } finally {
            currentPriorityLevel = previousPriorityLevel;
          }
        }
        function unstable_wrapCallback(callback) {
          var parentPriorityLevel = currentPriorityLevel;
          return function() {
            var previousPriorityLevel = currentPriorityLevel;
            currentPriorityLevel = parentPriorityLevel;
            try {
              return callback.apply(this, arguments);
            } finally {
              currentPriorityLevel = previousPriorityLevel;
            }
          };
        }
        function unstable_scheduleCallback(priorityLevel, callback, options) {
          var currentTime = exports.unstable_now();
          var startTime2;
          if (typeof options === "object" && options !== null) {
            var delay = options.delay;
            if (typeof delay === "number" && delay > 0) {
              startTime2 = currentTime + delay;
            } else {
              startTime2 = currentTime;
            }
          } else {
            startTime2 = currentTime;
          }
          var timeout2;
          switch (priorityLevel) {
            case ImmediatePriority:
              timeout2 = IMMEDIATE_PRIORITY_TIMEOUT;
              break;
            case UserBlockingPriority:
              timeout2 = USER_BLOCKING_PRIORITY_TIMEOUT;
              break;
            case IdlePriority:
              timeout2 = IDLE_PRIORITY_TIMEOUT;
              break;
            case LowPriority:
              timeout2 = LOW_PRIORITY_TIMEOUT;
              break;
            case NormalPriority16:
            default:
              timeout2 = NORMAL_PRIORITY_TIMEOUT;
              break;
          }
          var expirationTime = startTime2 + timeout2;
          var newTask = {
            id: taskIdCounter++,
            callback,
            priorityLevel,
            startTime: startTime2,
            expirationTime,
            sortIndex: -1
          };
          if (startTime2 > currentTime) {
            newTask.sortIndex = startTime2;
            push(timerQueue, newTask);
            if (peek(taskQueue) === null && newTask === peek(timerQueue)) {
              if (isHostTimeoutScheduled) {
                cancelHostTimeout();
              } else {
                isHostTimeoutScheduled = true;
              }
              requestHostTimeout(handleTimeout, startTime2 - currentTime);
            }
          } else {
            newTask.sortIndex = expirationTime;
            push(taskQueue, newTask);
            if (!isHostCallbackScheduled && !isPerformingWork) {
              isHostCallbackScheduled = true;
              requestHostCallback(flushWork);
            }
          }
          return newTask;
        }
        function unstable_pauseExecution() {
        }
        function unstable_continueExecution() {
          if (!isHostCallbackScheduled && !isPerformingWork) {
            isHostCallbackScheduled = true;
            requestHostCallback(flushWork);
          }
        }
        function unstable_getFirstCallbackNode() {
          return peek(taskQueue);
        }
        function unstable_cancelCallback(task) {
          task.callback = null;
        }
        function unstable_getCurrentPriorityLevel() {
          return currentPriorityLevel;
        }
        var isMessageLoopRunning = false;
        var scheduledHostCallback = null;
        var taskTimeoutID = -1;
        var frameInterval = frameYieldMs;
        var startTime = -1;
        function shouldYieldToHost() {
          var timeElapsed = exports.unstable_now() - startTime;
          if (timeElapsed < frameInterval) {
            return false;
          }
          return true;
        }
        function requestPaint() {
        }
        function forceFrameRate(fps) {
          if (fps < 0 || fps > 125) {
            console["error"]("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported");
            return;
          }
          if (fps > 0) {
            frameInterval = Math.floor(1e3 / fps);
          } else {
            frameInterval = frameYieldMs;
          }
        }
        var performWorkUntilDeadline = function() {
          if (scheduledHostCallback !== null) {
            var currentTime = exports.unstable_now();
            startTime = currentTime;
            var hasTimeRemaining = true;
            var hasMoreWork = true;
            try {
              hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);
            } finally {
              if (hasMoreWork) {
                schedulePerformWorkUntilDeadline();
              } else {
                isMessageLoopRunning = false;
                scheduledHostCallback = null;
              }
            }
          } else {
            isMessageLoopRunning = false;
          }
        };
        var schedulePerformWorkUntilDeadline;
        if (typeof localSetImmediate === "function") {
          schedulePerformWorkUntilDeadline = function() {
            localSetImmediate(performWorkUntilDeadline);
          };
        } else if (typeof MessageChannel !== "undefined") {
          var channel = new MessageChannel();
          var port = channel.port2;
          channel.port1.onmessage = performWorkUntilDeadline;
          schedulePerformWorkUntilDeadline = function() {
            port.postMessage(null);
          };
        } else {
          schedulePerformWorkUntilDeadline = function() {
            localSetTimeout(performWorkUntilDeadline, 0);
          };
        }
        function requestHostCallback(callback) {
          scheduledHostCallback = callback;
          if (!isMessageLoopRunning) {
            isMessageLoopRunning = true;
            schedulePerformWorkUntilDeadline();
          }
        }
        function requestHostTimeout(callback, ms) {
          taskTimeoutID = localSetTimeout(function() {
            callback(exports.unstable_now());
          }, ms);
        }
        function cancelHostTimeout() {
          localClearTimeout(taskTimeoutID);
          taskTimeoutID = -1;
        }
        var unstable_requestPaint = requestPaint;
        var unstable_Profiling = null;
        exports.unstable_IdlePriority = IdlePriority;
        exports.unstable_ImmediatePriority = ImmediatePriority;
        exports.unstable_LowPriority = LowPriority;
        exports.unstable_NormalPriority = NormalPriority16;
        exports.unstable_Profiling = unstable_Profiling;
        exports.unstable_UserBlockingPriority = UserBlockingPriority;
        exports.unstable_cancelCallback = unstable_cancelCallback;
        exports.unstable_continueExecution = unstable_continueExecution;
        exports.unstable_forceFrameRate = forceFrameRate;
        exports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;
        exports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;
        exports.unstable_next = unstable_next;
        exports.unstable_pauseExecution = unstable_pauseExecution;
        exports.unstable_requestPaint = unstable_requestPaint;
        exports.unstable_runWithPriority = unstable_runWithPriority;
        exports.unstable_scheduleCallback = unstable_scheduleCallback;
        exports.unstable_shouldYield = shouldYieldToHost;
        exports.unstable_wrapCallback = unstable_wrapCallback;
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
        }
      })();
    }
  }
});

// node_modules/@fluentui/react-combobox/node_modules/scheduler/index.js
var require_scheduler4 = __commonJS({
  "node_modules/@fluentui/react-combobox/node_modules/scheduler/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_scheduler_development4();
    }
  }
});

// node_modules/@fluentui/react-menu/node_modules/scheduler/cjs/scheduler.development.js
var require_scheduler_development5 = __commonJS({
  "node_modules/@fluentui/react-menu/node_modules/scheduler/cjs/scheduler.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
        }
        var enableSchedulerDebugging = false;
        var enableProfiling = false;
        var frameYieldMs = 5;
        function push(heap, node) {
          var index = heap.length;
          heap.push(node);
          siftUp(heap, node, index);
        }
        function peek(heap) {
          return heap.length === 0 ? null : heap[0];
        }
        function pop(heap) {
          if (heap.length === 0) {
            return null;
          }
          var first = heap[0];
          var last = heap.pop();
          if (last !== first) {
            heap[0] = last;
            siftDown(heap, last, 0);
          }
          return first;
        }
        function siftUp(heap, node, i) {
          var index = i;
          while (index > 0) {
            var parentIndex = index - 1 >>> 1;
            var parent = heap[parentIndex];
            if (compare(parent, node) > 0) {
              heap[parentIndex] = node;
              heap[index] = parent;
              index = parentIndex;
            } else {
              return;
            }
          }
        }
        function siftDown(heap, node, i) {
          var index = i;
          var length = heap.length;
          var halfLength = length >>> 1;
          while (index < halfLength) {
            var leftIndex = (index + 1) * 2 - 1;
            var left = heap[leftIndex];
            var rightIndex = leftIndex + 1;
            var right = heap[rightIndex];
            if (compare(left, node) < 0) {
              if (rightIndex < length && compare(right, left) < 0) {
                heap[index] = right;
                heap[rightIndex] = node;
                index = rightIndex;
              } else {
                heap[index] = left;
                heap[leftIndex] = node;
                index = leftIndex;
              }
            } else if (rightIndex < length && compare(right, node) < 0) {
              heap[index] = right;
              heap[rightIndex] = node;
              index = rightIndex;
            } else {
              return;
            }
          }
        }
        function compare(a, b) {
          var diff = a.sortIndex - b.sortIndex;
          return diff !== 0 ? diff : a.id - b.id;
        }
        var ImmediatePriority = 1;
        var UserBlockingPriority = 2;
        var NormalPriority16 = 3;
        var LowPriority = 4;
        var IdlePriority = 5;
        function markTaskErrored(task, ms) {
        }
        var hasPerformanceNow = typeof performance === "object" && typeof performance.now === "function";
        if (hasPerformanceNow) {
          var localPerformance = performance;
          exports.unstable_now = function() {
            return localPerformance.now();
          };
        } else {
          var localDate = Date;
          var initialTime = localDate.now();
          exports.unstable_now = function() {
            return localDate.now() - initialTime;
          };
        }
        var maxSigned31BitInt = 1073741823;
        var IMMEDIATE_PRIORITY_TIMEOUT = -1;
        var USER_BLOCKING_PRIORITY_TIMEOUT = 250;
        var NORMAL_PRIORITY_TIMEOUT = 5e3;
        var LOW_PRIORITY_TIMEOUT = 1e4;
        var IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt;
        var taskQueue = [];
        var timerQueue = [];
        var taskIdCounter = 1;
        var currentTask = null;
        var currentPriorityLevel = NormalPriority16;
        var isPerformingWork = false;
        var isHostCallbackScheduled = false;
        var isHostTimeoutScheduled = false;
        var localSetTimeout = typeof setTimeout === "function" ? setTimeout : null;
        var localClearTimeout = typeof clearTimeout === "function" ? clearTimeout : null;
        var localSetImmediate = typeof setImmediate !== "undefined" ? setImmediate : null;
        var isInputPending = typeof navigator !== "undefined" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 ? navigator.scheduling.isInputPending.bind(navigator.scheduling) : null;
        function advanceTimers(currentTime) {
          var timer = peek(timerQueue);
          while (timer !== null) {
            if (timer.callback === null) {
              pop(timerQueue);
            } else if (timer.startTime <= currentTime) {
              pop(timerQueue);
              timer.sortIndex = timer.expirationTime;
              push(taskQueue, timer);
            } else {
              return;
            }
            timer = peek(timerQueue);
          }
        }
        function handleTimeout(currentTime) {
          isHostTimeoutScheduled = false;
          advanceTimers(currentTime);
          if (!isHostCallbackScheduled) {
            if (peek(taskQueue) !== null) {
              isHostCallbackScheduled = true;
              requestHostCallback(flushWork);
            } else {
              var firstTimer = peek(timerQueue);
              if (firstTimer !== null) {
                requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
              }
            }
          }
        }
        function flushWork(hasTimeRemaining, initialTime2) {
          isHostCallbackScheduled = false;
          if (isHostTimeoutScheduled) {
            isHostTimeoutScheduled = false;
            cancelHostTimeout();
          }
          isPerformingWork = true;
          var previousPriorityLevel = currentPriorityLevel;
          try {
            if (enableProfiling) {
              try {
                return workLoop(hasTimeRemaining, initialTime2);
              } catch (error) {
                if (currentTask !== null) {
                  var currentTime = exports.unstable_now();
                  markTaskErrored(currentTask, currentTime);
                  currentTask.isQueued = false;
                }
                throw error;
              }
            } else {
              return workLoop(hasTimeRemaining, initialTime2);
            }
          } finally {
            currentTask = null;
            currentPriorityLevel = previousPriorityLevel;
            isPerformingWork = false;
          }
        }
        function workLoop(hasTimeRemaining, initialTime2) {
          var currentTime = initialTime2;
          advanceTimers(currentTime);
          currentTask = peek(taskQueue);
          while (currentTask !== null && !enableSchedulerDebugging) {
            if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {
              break;
            }
            var callback = currentTask.callback;
            if (typeof callback === "function") {
              currentTask.callback = null;
              currentPriorityLevel = currentTask.priorityLevel;
              var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;
              var continuationCallback = callback(didUserCallbackTimeout);
              currentTime = exports.unstable_now();
              if (typeof continuationCallback === "function") {
                currentTask.callback = continuationCallback;
              } else {
                if (currentTask === peek(taskQueue)) {
                  pop(taskQueue);
                }
              }
              advanceTimers(currentTime);
            } else {
              pop(taskQueue);
            }
            currentTask = peek(taskQueue);
          }
          if (currentTask !== null) {
            return true;
          } else {
            var firstTimer = peek(timerQueue);
            if (firstTimer !== null) {
              requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
            }
            return false;
          }
        }
        function unstable_runWithPriority(priorityLevel, eventHandler) {
          switch (priorityLevel) {
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority16:
            case LowPriority:
            case IdlePriority:
              break;
            default:
              priorityLevel = NormalPriority16;
          }
          var previousPriorityLevel = currentPriorityLevel;
          currentPriorityLevel = priorityLevel;
          try {
            return eventHandler();
          } finally {
            currentPriorityLevel = previousPriorityLevel;
          }
        }
        function unstable_next(eventHandler) {
          var priorityLevel;
          switch (currentPriorityLevel) {
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority16:
              priorityLevel = NormalPriority16;
              break;
            default:
              priorityLevel = currentPriorityLevel;
              break;
          }
          var previousPriorityLevel = currentPriorityLevel;
          currentPriorityLevel = priorityLevel;
          try {
            return eventHandler();
          } finally {
            currentPriorityLevel = previousPriorityLevel;
          }
        }
        function unstable_wrapCallback(callback) {
          var parentPriorityLevel = currentPriorityLevel;
          return function() {
            var previousPriorityLevel = currentPriorityLevel;
            currentPriorityLevel = parentPriorityLevel;
            try {
              return callback.apply(this, arguments);
            } finally {
              currentPriorityLevel = previousPriorityLevel;
            }
          };
        }
        function unstable_scheduleCallback(priorityLevel, callback, options) {
          var currentTime = exports.unstable_now();
          var startTime2;
          if (typeof options === "object" && options !== null) {
            var delay = options.delay;
            if (typeof delay === "number" && delay > 0) {
              startTime2 = currentTime + delay;
            } else {
              startTime2 = currentTime;
            }
          } else {
            startTime2 = currentTime;
          }
          var timeout2;
          switch (priorityLevel) {
            case ImmediatePriority:
              timeout2 = IMMEDIATE_PRIORITY_TIMEOUT;
              break;
            case UserBlockingPriority:
              timeout2 = USER_BLOCKING_PRIORITY_TIMEOUT;
              break;
            case IdlePriority:
              timeout2 = IDLE_PRIORITY_TIMEOUT;
              break;
            case LowPriority:
              timeout2 = LOW_PRIORITY_TIMEOUT;
              break;
            case NormalPriority16:
            default:
              timeout2 = NORMAL_PRIORITY_TIMEOUT;
              break;
          }
          var expirationTime = startTime2 + timeout2;
          var newTask = {
            id: taskIdCounter++,
            callback,
            priorityLevel,
            startTime: startTime2,
            expirationTime,
            sortIndex: -1
          };
          if (startTime2 > currentTime) {
            newTask.sortIndex = startTime2;
            push(timerQueue, newTask);
            if (peek(taskQueue) === null && newTask === peek(timerQueue)) {
              if (isHostTimeoutScheduled) {
                cancelHostTimeout();
              } else {
                isHostTimeoutScheduled = true;
              }
              requestHostTimeout(handleTimeout, startTime2 - currentTime);
            }
          } else {
            newTask.sortIndex = expirationTime;
            push(taskQueue, newTask);
            if (!isHostCallbackScheduled && !isPerformingWork) {
              isHostCallbackScheduled = true;
              requestHostCallback(flushWork);
            }
          }
          return newTask;
        }
        function unstable_pauseExecution() {
        }
        function unstable_continueExecution() {
          if (!isHostCallbackScheduled && !isPerformingWork) {
            isHostCallbackScheduled = true;
            requestHostCallback(flushWork);
          }
        }
        function unstable_getFirstCallbackNode() {
          return peek(taskQueue);
        }
        function unstable_cancelCallback(task) {
          task.callback = null;
        }
        function unstable_getCurrentPriorityLevel() {
          return currentPriorityLevel;
        }
        var isMessageLoopRunning = false;
        var scheduledHostCallback = null;
        var taskTimeoutID = -1;
        var frameInterval = frameYieldMs;
        var startTime = -1;
        function shouldYieldToHost() {
          var timeElapsed = exports.unstable_now() - startTime;
          if (timeElapsed < frameInterval) {
            return false;
          }
          return true;
        }
        function requestPaint() {
        }
        function forceFrameRate(fps) {
          if (fps < 0 || fps > 125) {
            console["error"]("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported");
            return;
          }
          if (fps > 0) {
            frameInterval = Math.floor(1e3 / fps);
          } else {
            frameInterval = frameYieldMs;
          }
        }
        var performWorkUntilDeadline = function() {
          if (scheduledHostCallback !== null) {
            var currentTime = exports.unstable_now();
            startTime = currentTime;
            var hasTimeRemaining = true;
            var hasMoreWork = true;
            try {
              hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);
            } finally {
              if (hasMoreWork) {
                schedulePerformWorkUntilDeadline();
              } else {
                isMessageLoopRunning = false;
                scheduledHostCallback = null;
              }
            }
          } else {
            isMessageLoopRunning = false;
          }
        };
        var schedulePerformWorkUntilDeadline;
        if (typeof localSetImmediate === "function") {
          schedulePerformWorkUntilDeadline = function() {
            localSetImmediate(performWorkUntilDeadline);
          };
        } else if (typeof MessageChannel !== "undefined") {
          var channel = new MessageChannel();
          var port = channel.port2;
          channel.port1.onmessage = performWorkUntilDeadline;
          schedulePerformWorkUntilDeadline = function() {
            port.postMessage(null);
          };
        } else {
          schedulePerformWorkUntilDeadline = function() {
            localSetTimeout(performWorkUntilDeadline, 0);
          };
        }
        function requestHostCallback(callback) {
          scheduledHostCallback = callback;
          if (!isMessageLoopRunning) {
            isMessageLoopRunning = true;
            schedulePerformWorkUntilDeadline();
          }
        }
        function requestHostTimeout(callback, ms) {
          taskTimeoutID = localSetTimeout(function() {
            callback(exports.unstable_now());
          }, ms);
        }
        function cancelHostTimeout() {
          localClearTimeout(taskTimeoutID);
          taskTimeoutID = -1;
        }
        var unstable_requestPaint = requestPaint;
        var unstable_Profiling = null;
        exports.unstable_IdlePriority = IdlePriority;
        exports.unstable_ImmediatePriority = ImmediatePriority;
        exports.unstable_LowPriority = LowPriority;
        exports.unstable_NormalPriority = NormalPriority16;
        exports.unstable_Profiling = unstable_Profiling;
        exports.unstable_UserBlockingPriority = UserBlockingPriority;
        exports.unstable_cancelCallback = unstable_cancelCallback;
        exports.unstable_continueExecution = unstable_continueExecution;
        exports.unstable_forceFrameRate = forceFrameRate;
        exports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;
        exports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;
        exports.unstable_next = unstable_next;
        exports.unstable_pauseExecution = unstable_pauseExecution;
        exports.unstable_requestPaint = unstable_requestPaint;
        exports.unstable_runWithPriority = unstable_runWithPriority;
        exports.unstable_scheduleCallback = unstable_scheduleCallback;
        exports.unstable_shouldYield = shouldYieldToHost;
        exports.unstable_wrapCallback = unstable_wrapCallback;
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
        }
      })();
    }
  }
});

// node_modules/@fluentui/react-menu/node_modules/scheduler/index.js
var require_scheduler5 = __commonJS({
  "node_modules/@fluentui/react-menu/node_modules/scheduler/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_scheduler_development5();
    }
  }
});

// node_modules/@fluentui/react-tabs/node_modules/scheduler/cjs/scheduler.development.js
var require_scheduler_development6 = __commonJS({
  "node_modules/@fluentui/react-tabs/node_modules/scheduler/cjs/scheduler.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
        }
        var enableSchedulerDebugging = false;
        var enableProfiling = false;
        var frameYieldMs = 5;
        function push(heap, node) {
          var index = heap.length;
          heap.push(node);
          siftUp(heap, node, index);
        }
        function peek(heap) {
          return heap.length === 0 ? null : heap[0];
        }
        function pop(heap) {
          if (heap.length === 0) {
            return null;
          }
          var first = heap[0];
          var last = heap.pop();
          if (last !== first) {
            heap[0] = last;
            siftDown(heap, last, 0);
          }
          return first;
        }
        function siftUp(heap, node, i) {
          var index = i;
          while (index > 0) {
            var parentIndex = index - 1 >>> 1;
            var parent = heap[parentIndex];
            if (compare(parent, node) > 0) {
              heap[parentIndex] = node;
              heap[index] = parent;
              index = parentIndex;
            } else {
              return;
            }
          }
        }
        function siftDown(heap, node, i) {
          var index = i;
          var length = heap.length;
          var halfLength = length >>> 1;
          while (index < halfLength) {
            var leftIndex = (index + 1) * 2 - 1;
            var left = heap[leftIndex];
            var rightIndex = leftIndex + 1;
            var right = heap[rightIndex];
            if (compare(left, node) < 0) {
              if (rightIndex < length && compare(right, left) < 0) {
                heap[index] = right;
                heap[rightIndex] = node;
                index = rightIndex;
              } else {
                heap[index] = left;
                heap[leftIndex] = node;
                index = leftIndex;
              }
            } else if (rightIndex < length && compare(right, node) < 0) {
              heap[index] = right;
              heap[rightIndex] = node;
              index = rightIndex;
            } else {
              return;
            }
          }
        }
        function compare(a, b) {
          var diff = a.sortIndex - b.sortIndex;
          return diff !== 0 ? diff : a.id - b.id;
        }
        var ImmediatePriority = 1;
        var UserBlockingPriority = 2;
        var NormalPriority16 = 3;
        var LowPriority = 4;
        var IdlePriority = 5;
        function markTaskErrored(task, ms) {
        }
        var hasPerformanceNow = typeof performance === "object" && typeof performance.now === "function";
        if (hasPerformanceNow) {
          var localPerformance = performance;
          exports.unstable_now = function() {
            return localPerformance.now();
          };
        } else {
          var localDate = Date;
          var initialTime = localDate.now();
          exports.unstable_now = function() {
            return localDate.now() - initialTime;
          };
        }
        var maxSigned31BitInt = 1073741823;
        var IMMEDIATE_PRIORITY_TIMEOUT = -1;
        var USER_BLOCKING_PRIORITY_TIMEOUT = 250;
        var NORMAL_PRIORITY_TIMEOUT = 5e3;
        var LOW_PRIORITY_TIMEOUT = 1e4;
        var IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt;
        var taskQueue = [];
        var timerQueue = [];
        var taskIdCounter = 1;
        var currentTask = null;
        var currentPriorityLevel = NormalPriority16;
        var isPerformingWork = false;
        var isHostCallbackScheduled = false;
        var isHostTimeoutScheduled = false;
        var localSetTimeout = typeof setTimeout === "function" ? setTimeout : null;
        var localClearTimeout = typeof clearTimeout === "function" ? clearTimeout : null;
        var localSetImmediate = typeof setImmediate !== "undefined" ? setImmediate : null;
        var isInputPending = typeof navigator !== "undefined" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 ? navigator.scheduling.isInputPending.bind(navigator.scheduling) : null;
        function advanceTimers(currentTime) {
          var timer = peek(timerQueue);
          while (timer !== null) {
            if (timer.callback === null) {
              pop(timerQueue);
            } else if (timer.startTime <= currentTime) {
              pop(timerQueue);
              timer.sortIndex = timer.expirationTime;
              push(taskQueue, timer);
            } else {
              return;
            }
            timer = peek(timerQueue);
          }
        }
        function handleTimeout(currentTime) {
          isHostTimeoutScheduled = false;
          advanceTimers(currentTime);
          if (!isHostCallbackScheduled) {
            if (peek(taskQueue) !== null) {
              isHostCallbackScheduled = true;
              requestHostCallback(flushWork);
            } else {
              var firstTimer = peek(timerQueue);
              if (firstTimer !== null) {
                requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
              }
            }
          }
        }
        function flushWork(hasTimeRemaining, initialTime2) {
          isHostCallbackScheduled = false;
          if (isHostTimeoutScheduled) {
            isHostTimeoutScheduled = false;
            cancelHostTimeout();
          }
          isPerformingWork = true;
          var previousPriorityLevel = currentPriorityLevel;
          try {
            if (enableProfiling) {
              try {
                return workLoop(hasTimeRemaining, initialTime2);
              } catch (error) {
                if (currentTask !== null) {
                  var currentTime = exports.unstable_now();
                  markTaskErrored(currentTask, currentTime);
                  currentTask.isQueued = false;
                }
                throw error;
              }
            } else {
              return workLoop(hasTimeRemaining, initialTime2);
            }
          } finally {
            currentTask = null;
            currentPriorityLevel = previousPriorityLevel;
            isPerformingWork = false;
          }
        }
        function workLoop(hasTimeRemaining, initialTime2) {
          var currentTime = initialTime2;
          advanceTimers(currentTime);
          currentTask = peek(taskQueue);
          while (currentTask !== null && !enableSchedulerDebugging) {
            if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {
              break;
            }
            var callback = currentTask.callback;
            if (typeof callback === "function") {
              currentTask.callback = null;
              currentPriorityLevel = currentTask.priorityLevel;
              var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;
              var continuationCallback = callback(didUserCallbackTimeout);
              currentTime = exports.unstable_now();
              if (typeof continuationCallback === "function") {
                currentTask.callback = continuationCallback;
              } else {
                if (currentTask === peek(taskQueue)) {
                  pop(taskQueue);
                }
              }
              advanceTimers(currentTime);
            } else {
              pop(taskQueue);
            }
            currentTask = peek(taskQueue);
          }
          if (currentTask !== null) {
            return true;
          } else {
            var firstTimer = peek(timerQueue);
            if (firstTimer !== null) {
              requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
            }
            return false;
          }
        }
        function unstable_runWithPriority(priorityLevel, eventHandler) {
          switch (priorityLevel) {
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority16:
            case LowPriority:
            case IdlePriority:
              break;
            default:
              priorityLevel = NormalPriority16;
          }
          var previousPriorityLevel = currentPriorityLevel;
          currentPriorityLevel = priorityLevel;
          try {
            return eventHandler();
          } finally {
            currentPriorityLevel = previousPriorityLevel;
          }
        }
        function unstable_next(eventHandler) {
          var priorityLevel;
          switch (currentPriorityLevel) {
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority16:
              priorityLevel = NormalPriority16;
              break;
            default:
              priorityLevel = currentPriorityLevel;
              break;
          }
          var previousPriorityLevel = currentPriorityLevel;
          currentPriorityLevel = priorityLevel;
          try {
            return eventHandler();
          } finally {
            currentPriorityLevel = previousPriorityLevel;
          }
        }
        function unstable_wrapCallback(callback) {
          var parentPriorityLevel = currentPriorityLevel;
          return function() {
            var previousPriorityLevel = currentPriorityLevel;
            currentPriorityLevel = parentPriorityLevel;
            try {
              return callback.apply(this, arguments);
            } finally {
              currentPriorityLevel = previousPriorityLevel;
            }
          };
        }
        function unstable_scheduleCallback(priorityLevel, callback, options) {
          var currentTime = exports.unstable_now();
          var startTime2;
          if (typeof options === "object" && options !== null) {
            var delay = options.delay;
            if (typeof delay === "number" && delay > 0) {
              startTime2 = currentTime + delay;
            } else {
              startTime2 = currentTime;
            }
          } else {
            startTime2 = currentTime;
          }
          var timeout2;
          switch (priorityLevel) {
            case ImmediatePriority:
              timeout2 = IMMEDIATE_PRIORITY_TIMEOUT;
              break;
            case UserBlockingPriority:
              timeout2 = USER_BLOCKING_PRIORITY_TIMEOUT;
              break;
            case IdlePriority:
              timeout2 = IDLE_PRIORITY_TIMEOUT;
              break;
            case LowPriority:
              timeout2 = LOW_PRIORITY_TIMEOUT;
              break;
            case NormalPriority16:
            default:
              timeout2 = NORMAL_PRIORITY_TIMEOUT;
              break;
          }
          var expirationTime = startTime2 + timeout2;
          var newTask = {
            id: taskIdCounter++,
            callback,
            priorityLevel,
            startTime: startTime2,
            expirationTime,
            sortIndex: -1
          };
          if (startTime2 > currentTime) {
            newTask.sortIndex = startTime2;
            push(timerQueue, newTask);
            if (peek(taskQueue) === null && newTask === peek(timerQueue)) {
              if (isHostTimeoutScheduled) {
                cancelHostTimeout();
              } else {
                isHostTimeoutScheduled = true;
              }
              requestHostTimeout(handleTimeout, startTime2 - currentTime);
            }
          } else {
            newTask.sortIndex = expirationTime;
            push(taskQueue, newTask);
            if (!isHostCallbackScheduled && !isPerformingWork) {
              isHostCallbackScheduled = true;
              requestHostCallback(flushWork);
            }
          }
          return newTask;
        }
        function unstable_pauseExecution() {
        }
        function unstable_continueExecution() {
          if (!isHostCallbackScheduled && !isPerformingWork) {
            isHostCallbackScheduled = true;
            requestHostCallback(flushWork);
          }
        }
        function unstable_getFirstCallbackNode() {
          return peek(taskQueue);
        }
        function unstable_cancelCallback(task) {
          task.callback = null;
        }
        function unstable_getCurrentPriorityLevel() {
          return currentPriorityLevel;
        }
        var isMessageLoopRunning = false;
        var scheduledHostCallback = null;
        var taskTimeoutID = -1;
        var frameInterval = frameYieldMs;
        var startTime = -1;
        function shouldYieldToHost() {
          var timeElapsed = exports.unstable_now() - startTime;
          if (timeElapsed < frameInterval) {
            return false;
          }
          return true;
        }
        function requestPaint() {
        }
        function forceFrameRate(fps) {
          if (fps < 0 || fps > 125) {
            console["error"]("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported");
            return;
          }
          if (fps > 0) {
            frameInterval = Math.floor(1e3 / fps);
          } else {
            frameInterval = frameYieldMs;
          }
        }
        var performWorkUntilDeadline = function() {
          if (scheduledHostCallback !== null) {
            var currentTime = exports.unstable_now();
            startTime = currentTime;
            var hasTimeRemaining = true;
            var hasMoreWork = true;
            try {
              hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);
            } finally {
              if (hasMoreWork) {
                schedulePerformWorkUntilDeadline();
              } else {
                isMessageLoopRunning = false;
                scheduledHostCallback = null;
              }
            }
          } else {
            isMessageLoopRunning = false;
          }
        };
        var schedulePerformWorkUntilDeadline;
        if (typeof localSetImmediate === "function") {
          schedulePerformWorkUntilDeadline = function() {
            localSetImmediate(performWorkUntilDeadline);
          };
        } else if (typeof MessageChannel !== "undefined") {
          var channel = new MessageChannel();
          var port = channel.port2;
          channel.port1.onmessage = performWorkUntilDeadline;
          schedulePerformWorkUntilDeadline = function() {
            port.postMessage(null);
          };
        } else {
          schedulePerformWorkUntilDeadline = function() {
            localSetTimeout(performWorkUntilDeadline, 0);
          };
        }
        function requestHostCallback(callback) {
          scheduledHostCallback = callback;
          if (!isMessageLoopRunning) {
            isMessageLoopRunning = true;
            schedulePerformWorkUntilDeadline();
          }
        }
        function requestHostTimeout(callback, ms) {
          taskTimeoutID = localSetTimeout(function() {
            callback(exports.unstable_now());
          }, ms);
        }
        function cancelHostTimeout() {
          localClearTimeout(taskTimeoutID);
          taskTimeoutID = -1;
        }
        var unstable_requestPaint = requestPaint;
        var unstable_Profiling = null;
        exports.unstable_IdlePriority = IdlePriority;
        exports.unstable_ImmediatePriority = ImmediatePriority;
        exports.unstable_LowPriority = LowPriority;
        exports.unstable_NormalPriority = NormalPriority16;
        exports.unstable_Profiling = unstable_Profiling;
        exports.unstable_UserBlockingPriority = UserBlockingPriority;
        exports.unstable_cancelCallback = unstable_cancelCallback;
        exports.unstable_continueExecution = unstable_continueExecution;
        exports.unstable_forceFrameRate = forceFrameRate;
        exports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;
        exports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;
        exports.unstable_next = unstable_next;
        exports.unstable_pauseExecution = unstable_pauseExecution;
        exports.unstable_requestPaint = unstable_requestPaint;
        exports.unstable_runWithPriority = unstable_runWithPriority;
        exports.unstable_scheduleCallback = unstable_scheduleCallback;
        exports.unstable_shouldYield = shouldYieldToHost;
        exports.unstable_wrapCallback = unstable_wrapCallback;
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
        }
      })();
    }
  }
});

// node_modules/@fluentui/react-tabs/node_modules/scheduler/index.js
var require_scheduler6 = __commonJS({
  "node_modules/@fluentui/react-tabs/node_modules/scheduler/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_scheduler_development6();
    }
  }
});

// node_modules/@fluentui/react-dialog/node_modules/scheduler/cjs/scheduler.development.js
var require_scheduler_development7 = __commonJS({
  "node_modules/@fluentui/react-dialog/node_modules/scheduler/cjs/scheduler.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
        }
        var enableSchedulerDebugging = false;
        var enableProfiling = false;
        var frameYieldMs = 5;
        function push(heap, node) {
          var index = heap.length;
          heap.push(node);
          siftUp(heap, node, index);
        }
        function peek(heap) {
          return heap.length === 0 ? null : heap[0];
        }
        function pop(heap) {
          if (heap.length === 0) {
            return null;
          }
          var first = heap[0];
          var last = heap.pop();
          if (last !== first) {
            heap[0] = last;
            siftDown(heap, last, 0);
          }
          return first;
        }
        function siftUp(heap, node, i) {
          var index = i;
          while (index > 0) {
            var parentIndex = index - 1 >>> 1;
            var parent = heap[parentIndex];
            if (compare(parent, node) > 0) {
              heap[parentIndex] = node;
              heap[index] = parent;
              index = parentIndex;
            } else {
              return;
            }
          }
        }
        function siftDown(heap, node, i) {
          var index = i;
          var length = heap.length;
          var halfLength = length >>> 1;
          while (index < halfLength) {
            var leftIndex = (index + 1) * 2 - 1;
            var left = heap[leftIndex];
            var rightIndex = leftIndex + 1;
            var right = heap[rightIndex];
            if (compare(left, node) < 0) {
              if (rightIndex < length && compare(right, left) < 0) {
                heap[index] = right;
                heap[rightIndex] = node;
                index = rightIndex;
              } else {
                heap[index] = left;
                heap[leftIndex] = node;
                index = leftIndex;
              }
            } else if (rightIndex < length && compare(right, node) < 0) {
              heap[index] = right;
              heap[rightIndex] = node;
              index = rightIndex;
            } else {
              return;
            }
          }
        }
        function compare(a, b) {
          var diff = a.sortIndex - b.sortIndex;
          return diff !== 0 ? diff : a.id - b.id;
        }
        var ImmediatePriority = 1;
        var UserBlockingPriority = 2;
        var NormalPriority16 = 3;
        var LowPriority = 4;
        var IdlePriority = 5;
        function markTaskErrored(task, ms) {
        }
        var hasPerformanceNow = typeof performance === "object" && typeof performance.now === "function";
        if (hasPerformanceNow) {
          var localPerformance = performance;
          exports.unstable_now = function() {
            return localPerformance.now();
          };
        } else {
          var localDate = Date;
          var initialTime = localDate.now();
          exports.unstable_now = function() {
            return localDate.now() - initialTime;
          };
        }
        var maxSigned31BitInt = 1073741823;
        var IMMEDIATE_PRIORITY_TIMEOUT = -1;
        var USER_BLOCKING_PRIORITY_TIMEOUT = 250;
        var NORMAL_PRIORITY_TIMEOUT = 5e3;
        var LOW_PRIORITY_TIMEOUT = 1e4;
        var IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt;
        var taskQueue = [];
        var timerQueue = [];
        var taskIdCounter = 1;
        var currentTask = null;
        var currentPriorityLevel = NormalPriority16;
        var isPerformingWork = false;
        var isHostCallbackScheduled = false;
        var isHostTimeoutScheduled = false;
        var localSetTimeout = typeof setTimeout === "function" ? setTimeout : null;
        var localClearTimeout = typeof clearTimeout === "function" ? clearTimeout : null;
        var localSetImmediate = typeof setImmediate !== "undefined" ? setImmediate : null;
        var isInputPending = typeof navigator !== "undefined" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 ? navigator.scheduling.isInputPending.bind(navigator.scheduling) : null;
        function advanceTimers(currentTime) {
          var timer = peek(timerQueue);
          while (timer !== null) {
            if (timer.callback === null) {
              pop(timerQueue);
            } else if (timer.startTime <= currentTime) {
              pop(timerQueue);
              timer.sortIndex = timer.expirationTime;
              push(taskQueue, timer);
            } else {
              return;
            }
            timer = peek(timerQueue);
          }
        }
        function handleTimeout(currentTime) {
          isHostTimeoutScheduled = false;
          advanceTimers(currentTime);
          if (!isHostCallbackScheduled) {
            if (peek(taskQueue) !== null) {
              isHostCallbackScheduled = true;
              requestHostCallback(flushWork);
            } else {
              var firstTimer = peek(timerQueue);
              if (firstTimer !== null) {
                requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
              }
            }
          }
        }
        function flushWork(hasTimeRemaining, initialTime2) {
          isHostCallbackScheduled = false;
          if (isHostTimeoutScheduled) {
            isHostTimeoutScheduled = false;
            cancelHostTimeout();
          }
          isPerformingWork = true;
          var previousPriorityLevel = currentPriorityLevel;
          try {
            if (enableProfiling) {
              try {
                return workLoop(hasTimeRemaining, initialTime2);
              } catch (error) {
                if (currentTask !== null) {
                  var currentTime = exports.unstable_now();
                  markTaskErrored(currentTask, currentTime);
                  currentTask.isQueued = false;
                }
                throw error;
              }
            } else {
              return workLoop(hasTimeRemaining, initialTime2);
            }
          } finally {
            currentTask = null;
            currentPriorityLevel = previousPriorityLevel;
            isPerformingWork = false;
          }
        }
        function workLoop(hasTimeRemaining, initialTime2) {
          var currentTime = initialTime2;
          advanceTimers(currentTime);
          currentTask = peek(taskQueue);
          while (currentTask !== null && !enableSchedulerDebugging) {
            if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {
              break;
            }
            var callback = currentTask.callback;
            if (typeof callback === "function") {
              currentTask.callback = null;
              currentPriorityLevel = currentTask.priorityLevel;
              var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;
              var continuationCallback = callback(didUserCallbackTimeout);
              currentTime = exports.unstable_now();
              if (typeof continuationCallback === "function") {
                currentTask.callback = continuationCallback;
              } else {
                if (currentTask === peek(taskQueue)) {
                  pop(taskQueue);
                }
              }
              advanceTimers(currentTime);
            } else {
              pop(taskQueue);
            }
            currentTask = peek(taskQueue);
          }
          if (currentTask !== null) {
            return true;
          } else {
            var firstTimer = peek(timerQueue);
            if (firstTimer !== null) {
              requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
            }
            return false;
          }
        }
        function unstable_runWithPriority(priorityLevel, eventHandler) {
          switch (priorityLevel) {
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority16:
            case LowPriority:
            case IdlePriority:
              break;
            default:
              priorityLevel = NormalPriority16;
          }
          var previousPriorityLevel = currentPriorityLevel;
          currentPriorityLevel = priorityLevel;
          try {
            return eventHandler();
          } finally {
            currentPriorityLevel = previousPriorityLevel;
          }
        }
        function unstable_next(eventHandler) {
          var priorityLevel;
          switch (currentPriorityLevel) {
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority16:
              priorityLevel = NormalPriority16;
              break;
            default:
              priorityLevel = currentPriorityLevel;
              break;
          }
          var previousPriorityLevel = currentPriorityLevel;
          currentPriorityLevel = priorityLevel;
          try {
            return eventHandler();
          } finally {
            currentPriorityLevel = previousPriorityLevel;
          }
        }
        function unstable_wrapCallback(callback) {
          var parentPriorityLevel = currentPriorityLevel;
          return function() {
            var previousPriorityLevel = currentPriorityLevel;
            currentPriorityLevel = parentPriorityLevel;
            try {
              return callback.apply(this, arguments);
            } finally {
              currentPriorityLevel = previousPriorityLevel;
            }
          };
        }
        function unstable_scheduleCallback(priorityLevel, callback, options) {
          var currentTime = exports.unstable_now();
          var startTime2;
          if (typeof options === "object" && options !== null) {
            var delay = options.delay;
            if (typeof delay === "number" && delay > 0) {
              startTime2 = currentTime + delay;
            } else {
              startTime2 = currentTime;
            }
          } else {
            startTime2 = currentTime;
          }
          var timeout2;
          switch (priorityLevel) {
            case ImmediatePriority:
              timeout2 = IMMEDIATE_PRIORITY_TIMEOUT;
              break;
            case UserBlockingPriority:
              timeout2 = USER_BLOCKING_PRIORITY_TIMEOUT;
              break;
            case IdlePriority:
              timeout2 = IDLE_PRIORITY_TIMEOUT;
              break;
            case LowPriority:
              timeout2 = LOW_PRIORITY_TIMEOUT;
              break;
            case NormalPriority16:
            default:
              timeout2 = NORMAL_PRIORITY_TIMEOUT;
              break;
          }
          var expirationTime = startTime2 + timeout2;
          var newTask = {
            id: taskIdCounter++,
            callback,
            priorityLevel,
            startTime: startTime2,
            expirationTime,
            sortIndex: -1
          };
          if (startTime2 > currentTime) {
            newTask.sortIndex = startTime2;
            push(timerQueue, newTask);
            if (peek(taskQueue) === null && newTask === peek(timerQueue)) {
              if (isHostTimeoutScheduled) {
                cancelHostTimeout();
              } else {
                isHostTimeoutScheduled = true;
              }
              requestHostTimeout(handleTimeout, startTime2 - currentTime);
            }
          } else {
            newTask.sortIndex = expirationTime;
            push(taskQueue, newTask);
            if (!isHostCallbackScheduled && !isPerformingWork) {
              isHostCallbackScheduled = true;
              requestHostCallback(flushWork);
            }
          }
          return newTask;
        }
        function unstable_pauseExecution() {
        }
        function unstable_continueExecution() {
          if (!isHostCallbackScheduled && !isPerformingWork) {
            isHostCallbackScheduled = true;
            requestHostCallback(flushWork);
          }
        }
        function unstable_getFirstCallbackNode() {
          return peek(taskQueue);
        }
        function unstable_cancelCallback(task) {
          task.callback = null;
        }
        function unstable_getCurrentPriorityLevel() {
          return currentPriorityLevel;
        }
        var isMessageLoopRunning = false;
        var scheduledHostCallback = null;
        var taskTimeoutID = -1;
        var frameInterval = frameYieldMs;
        var startTime = -1;
        function shouldYieldToHost() {
          var timeElapsed = exports.unstable_now() - startTime;
          if (timeElapsed < frameInterval) {
            return false;
          }
          return true;
        }
        function requestPaint() {
        }
        function forceFrameRate(fps) {
          if (fps < 0 || fps > 125) {
            console["error"]("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported");
            return;
          }
          if (fps > 0) {
            frameInterval = Math.floor(1e3 / fps);
          } else {
            frameInterval = frameYieldMs;
          }
        }
        var performWorkUntilDeadline = function() {
          if (scheduledHostCallback !== null) {
            var currentTime = exports.unstable_now();
            startTime = currentTime;
            var hasTimeRemaining = true;
            var hasMoreWork = true;
            try {
              hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);
            } finally {
              if (hasMoreWork) {
                schedulePerformWorkUntilDeadline();
              } else {
                isMessageLoopRunning = false;
                scheduledHostCallback = null;
              }
            }
          } else {
            isMessageLoopRunning = false;
          }
        };
        var schedulePerformWorkUntilDeadline;
        if (typeof localSetImmediate === "function") {
          schedulePerformWorkUntilDeadline = function() {
            localSetImmediate(performWorkUntilDeadline);
          };
        } else if (typeof MessageChannel !== "undefined") {
          var channel = new MessageChannel();
          var port = channel.port2;
          channel.port1.onmessage = performWorkUntilDeadline;
          schedulePerformWorkUntilDeadline = function() {
            port.postMessage(null);
          };
        } else {
          schedulePerformWorkUntilDeadline = function() {
            localSetTimeout(performWorkUntilDeadline, 0);
          };
        }
        function requestHostCallback(callback) {
          scheduledHostCallback = callback;
          if (!isMessageLoopRunning) {
            isMessageLoopRunning = true;
            schedulePerformWorkUntilDeadline();
          }
        }
        function requestHostTimeout(callback, ms) {
          taskTimeoutID = localSetTimeout(function() {
            callback(exports.unstable_now());
          }, ms);
        }
        function cancelHostTimeout() {
          localClearTimeout(taskTimeoutID);
          taskTimeoutID = -1;
        }
        var unstable_requestPaint = requestPaint;
        var unstable_Profiling = null;
        exports.unstable_IdlePriority = IdlePriority;
        exports.unstable_ImmediatePriority = ImmediatePriority;
        exports.unstable_LowPriority = LowPriority;
        exports.unstable_NormalPriority = NormalPriority16;
        exports.unstable_Profiling = unstable_Profiling;
        exports.unstable_UserBlockingPriority = UserBlockingPriority;
        exports.unstable_cancelCallback = unstable_cancelCallback;
        exports.unstable_continueExecution = unstable_continueExecution;
        exports.unstable_forceFrameRate = forceFrameRate;
        exports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;
        exports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;
        exports.unstable_next = unstable_next;
        exports.unstable_pauseExecution = unstable_pauseExecution;
        exports.unstable_requestPaint = unstable_requestPaint;
        exports.unstable_runWithPriority = unstable_runWithPriority;
        exports.unstable_scheduleCallback = unstable_scheduleCallback;
        exports.unstable_shouldYield = shouldYieldToHost;
        exports.unstable_wrapCallback = unstable_wrapCallback;
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
        }
      })();
    }
  }
});

// node_modules/@fluentui/react-dialog/node_modules/scheduler/index.js
var require_scheduler7 = __commonJS({
  "node_modules/@fluentui/react-dialog/node_modules/scheduler/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_scheduler_development7();
    }
  }
});

// node_modules/@fluentui/react-overflow/node_modules/scheduler/cjs/scheduler.development.js
var require_scheduler_development8 = __commonJS({
  "node_modules/@fluentui/react-overflow/node_modules/scheduler/cjs/scheduler.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
        }
        var enableSchedulerDebugging = false;
        var enableProfiling = false;
        var frameYieldMs = 5;
        function push(heap, node) {
          var index = heap.length;
          heap.push(node);
          siftUp(heap, node, index);
        }
        function peek(heap) {
          return heap.length === 0 ? null : heap[0];
        }
        function pop(heap) {
          if (heap.length === 0) {
            return null;
          }
          var first = heap[0];
          var last = heap.pop();
          if (last !== first) {
            heap[0] = last;
            siftDown(heap, last, 0);
          }
          return first;
        }
        function siftUp(heap, node, i) {
          var index = i;
          while (index > 0) {
            var parentIndex = index - 1 >>> 1;
            var parent = heap[parentIndex];
            if (compare(parent, node) > 0) {
              heap[parentIndex] = node;
              heap[index] = parent;
              index = parentIndex;
            } else {
              return;
            }
          }
        }
        function siftDown(heap, node, i) {
          var index = i;
          var length = heap.length;
          var halfLength = length >>> 1;
          while (index < halfLength) {
            var leftIndex = (index + 1) * 2 - 1;
            var left = heap[leftIndex];
            var rightIndex = leftIndex + 1;
            var right = heap[rightIndex];
            if (compare(left, node) < 0) {
              if (rightIndex < length && compare(right, left) < 0) {
                heap[index] = right;
                heap[rightIndex] = node;
                index = rightIndex;
              } else {
                heap[index] = left;
                heap[leftIndex] = node;
                index = leftIndex;
              }
            } else if (rightIndex < length && compare(right, node) < 0) {
              heap[index] = right;
              heap[rightIndex] = node;
              index = rightIndex;
            } else {
              return;
            }
          }
        }
        function compare(a, b) {
          var diff = a.sortIndex - b.sortIndex;
          return diff !== 0 ? diff : a.id - b.id;
        }
        var ImmediatePriority = 1;
        var UserBlockingPriority = 2;
        var NormalPriority16 = 3;
        var LowPriority = 4;
        var IdlePriority = 5;
        function markTaskErrored(task, ms) {
        }
        var hasPerformanceNow = typeof performance === "object" && typeof performance.now === "function";
        if (hasPerformanceNow) {
          var localPerformance = performance;
          exports.unstable_now = function() {
            return localPerformance.now();
          };
        } else {
          var localDate = Date;
          var initialTime = localDate.now();
          exports.unstable_now = function() {
            return localDate.now() - initialTime;
          };
        }
        var maxSigned31BitInt = 1073741823;
        var IMMEDIATE_PRIORITY_TIMEOUT = -1;
        var USER_BLOCKING_PRIORITY_TIMEOUT = 250;
        var NORMAL_PRIORITY_TIMEOUT = 5e3;
        var LOW_PRIORITY_TIMEOUT = 1e4;
        var IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt;
        var taskQueue = [];
        var timerQueue = [];
        var taskIdCounter = 1;
        var currentTask = null;
        var currentPriorityLevel = NormalPriority16;
        var isPerformingWork = false;
        var isHostCallbackScheduled = false;
        var isHostTimeoutScheduled = false;
        var localSetTimeout = typeof setTimeout === "function" ? setTimeout : null;
        var localClearTimeout = typeof clearTimeout === "function" ? clearTimeout : null;
        var localSetImmediate = typeof setImmediate !== "undefined" ? setImmediate : null;
        var isInputPending = typeof navigator !== "undefined" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 ? navigator.scheduling.isInputPending.bind(navigator.scheduling) : null;
        function advanceTimers(currentTime) {
          var timer = peek(timerQueue);
          while (timer !== null) {
            if (timer.callback === null) {
              pop(timerQueue);
            } else if (timer.startTime <= currentTime) {
              pop(timerQueue);
              timer.sortIndex = timer.expirationTime;
              push(taskQueue, timer);
            } else {
              return;
            }
            timer = peek(timerQueue);
          }
        }
        function handleTimeout(currentTime) {
          isHostTimeoutScheduled = false;
          advanceTimers(currentTime);
          if (!isHostCallbackScheduled) {
            if (peek(taskQueue) !== null) {
              isHostCallbackScheduled = true;
              requestHostCallback(flushWork);
            } else {
              var firstTimer = peek(timerQueue);
              if (firstTimer !== null) {
                requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
              }
            }
          }
        }
        function flushWork(hasTimeRemaining, initialTime2) {
          isHostCallbackScheduled = false;
          if (isHostTimeoutScheduled) {
            isHostTimeoutScheduled = false;
            cancelHostTimeout();
          }
          isPerformingWork = true;
          var previousPriorityLevel = currentPriorityLevel;
          try {
            if (enableProfiling) {
              try {
                return workLoop(hasTimeRemaining, initialTime2);
              } catch (error) {
                if (currentTask !== null) {
                  var currentTime = exports.unstable_now();
                  markTaskErrored(currentTask, currentTime);
                  currentTask.isQueued = false;
                }
                throw error;
              }
            } else {
              return workLoop(hasTimeRemaining, initialTime2);
            }
          } finally {
            currentTask = null;
            currentPriorityLevel = previousPriorityLevel;
            isPerformingWork = false;
          }
        }
        function workLoop(hasTimeRemaining, initialTime2) {
          var currentTime = initialTime2;
          advanceTimers(currentTime);
          currentTask = peek(taskQueue);
          while (currentTask !== null && !enableSchedulerDebugging) {
            if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {
              break;
            }
            var callback = currentTask.callback;
            if (typeof callback === "function") {
              currentTask.callback = null;
              currentPriorityLevel = currentTask.priorityLevel;
              var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;
              var continuationCallback = callback(didUserCallbackTimeout);
              currentTime = exports.unstable_now();
              if (typeof continuationCallback === "function") {
                currentTask.callback = continuationCallback;
              } else {
                if (currentTask === peek(taskQueue)) {
                  pop(taskQueue);
                }
              }
              advanceTimers(currentTime);
            } else {
              pop(taskQueue);
            }
            currentTask = peek(taskQueue);
          }
          if (currentTask !== null) {
            return true;
          } else {
            var firstTimer = peek(timerQueue);
            if (firstTimer !== null) {
              requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
            }
            return false;
          }
        }
        function unstable_runWithPriority(priorityLevel, eventHandler) {
          switch (priorityLevel) {
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority16:
            case LowPriority:
            case IdlePriority:
              break;
            default:
              priorityLevel = NormalPriority16;
          }
          var previousPriorityLevel = currentPriorityLevel;
          currentPriorityLevel = priorityLevel;
          try {
            return eventHandler();
          } finally {
            currentPriorityLevel = previousPriorityLevel;
          }
        }
        function unstable_next(eventHandler) {
          var priorityLevel;
          switch (currentPriorityLevel) {
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority16:
              priorityLevel = NormalPriority16;
              break;
            default:
              priorityLevel = currentPriorityLevel;
              break;
          }
          var previousPriorityLevel = currentPriorityLevel;
          currentPriorityLevel = priorityLevel;
          try {
            return eventHandler();
          } finally {
            currentPriorityLevel = previousPriorityLevel;
          }
        }
        function unstable_wrapCallback(callback) {
          var parentPriorityLevel = currentPriorityLevel;
          return function() {
            var previousPriorityLevel = currentPriorityLevel;
            currentPriorityLevel = parentPriorityLevel;
            try {
              return callback.apply(this, arguments);
            } finally {
              currentPriorityLevel = previousPriorityLevel;
            }
          };
        }
        function unstable_scheduleCallback(priorityLevel, callback, options) {
          var currentTime = exports.unstable_now();
          var startTime2;
          if (typeof options === "object" && options !== null) {
            var delay = options.delay;
            if (typeof delay === "number" && delay > 0) {
              startTime2 = currentTime + delay;
            } else {
              startTime2 = currentTime;
            }
          } else {
            startTime2 = currentTime;
          }
          var timeout2;
          switch (priorityLevel) {
            case ImmediatePriority:
              timeout2 = IMMEDIATE_PRIORITY_TIMEOUT;
              break;
            case UserBlockingPriority:
              timeout2 = USER_BLOCKING_PRIORITY_TIMEOUT;
              break;
            case IdlePriority:
              timeout2 = IDLE_PRIORITY_TIMEOUT;
              break;
            case LowPriority:
              timeout2 = LOW_PRIORITY_TIMEOUT;
              break;
            case NormalPriority16:
            default:
              timeout2 = NORMAL_PRIORITY_TIMEOUT;
              break;
          }
          var expirationTime = startTime2 + timeout2;
          var newTask = {
            id: taskIdCounter++,
            callback,
            priorityLevel,
            startTime: startTime2,
            expirationTime,
            sortIndex: -1
          };
          if (startTime2 > currentTime) {
            newTask.sortIndex = startTime2;
            push(timerQueue, newTask);
            if (peek(taskQueue) === null && newTask === peek(timerQueue)) {
              if (isHostTimeoutScheduled) {
                cancelHostTimeout();
              } else {
                isHostTimeoutScheduled = true;
              }
              requestHostTimeout(handleTimeout, startTime2 - currentTime);
            }
          } else {
            newTask.sortIndex = expirationTime;
            push(taskQueue, newTask);
            if (!isHostCallbackScheduled && !isPerformingWork) {
              isHostCallbackScheduled = true;
              requestHostCallback(flushWork);
            }
          }
          return newTask;
        }
        function unstable_pauseExecution() {
        }
        function unstable_continueExecution() {
          if (!isHostCallbackScheduled && !isPerformingWork) {
            isHostCallbackScheduled = true;
            requestHostCallback(flushWork);
          }
        }
        function unstable_getFirstCallbackNode() {
          return peek(taskQueue);
        }
        function unstable_cancelCallback(task) {
          task.callback = null;
        }
        function unstable_getCurrentPriorityLevel() {
          return currentPriorityLevel;
        }
        var isMessageLoopRunning = false;
        var scheduledHostCallback = null;
        var taskTimeoutID = -1;
        var frameInterval = frameYieldMs;
        var startTime = -1;
        function shouldYieldToHost() {
          var timeElapsed = exports.unstable_now() - startTime;
          if (timeElapsed < frameInterval) {
            return false;
          }
          return true;
        }
        function requestPaint() {
        }
        function forceFrameRate(fps) {
          if (fps < 0 || fps > 125) {
            console["error"]("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported");
            return;
          }
          if (fps > 0) {
            frameInterval = Math.floor(1e3 / fps);
          } else {
            frameInterval = frameYieldMs;
          }
        }
        var performWorkUntilDeadline = function() {
          if (scheduledHostCallback !== null) {
            var currentTime = exports.unstable_now();
            startTime = currentTime;
            var hasTimeRemaining = true;
            var hasMoreWork = true;
            try {
              hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);
            } finally {
              if (hasMoreWork) {
                schedulePerformWorkUntilDeadline();
              } else {
                isMessageLoopRunning = false;
                scheduledHostCallback = null;
              }
            }
          } else {
            isMessageLoopRunning = false;
          }
        };
        var schedulePerformWorkUntilDeadline;
        if (typeof localSetImmediate === "function") {
          schedulePerformWorkUntilDeadline = function() {
            localSetImmediate(performWorkUntilDeadline);
          };
        } else if (typeof MessageChannel !== "undefined") {
          var channel = new MessageChannel();
          var port = channel.port2;
          channel.port1.onmessage = performWorkUntilDeadline;
          schedulePerformWorkUntilDeadline = function() {
            port.postMessage(null);
          };
        } else {
          schedulePerformWorkUntilDeadline = function() {
            localSetTimeout(performWorkUntilDeadline, 0);
          };
        }
        function requestHostCallback(callback) {
          scheduledHostCallback = callback;
          if (!isMessageLoopRunning) {
            isMessageLoopRunning = true;
            schedulePerformWorkUntilDeadline();
          }
        }
        function requestHostTimeout(callback, ms) {
          taskTimeoutID = localSetTimeout(function() {
            callback(exports.unstable_now());
          }, ms);
        }
        function cancelHostTimeout() {
          localClearTimeout(taskTimeoutID);
          taskTimeoutID = -1;
        }
        var unstable_requestPaint = requestPaint;
        var unstable_Profiling = null;
        exports.unstable_IdlePriority = IdlePriority;
        exports.unstable_ImmediatePriority = ImmediatePriority;
        exports.unstable_LowPriority = LowPriority;
        exports.unstable_NormalPriority = NormalPriority16;
        exports.unstable_Profiling = unstable_Profiling;
        exports.unstable_UserBlockingPriority = UserBlockingPriority;
        exports.unstable_cancelCallback = unstable_cancelCallback;
        exports.unstable_continueExecution = unstable_continueExecution;
        exports.unstable_forceFrameRate = forceFrameRate;
        exports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;
        exports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;
        exports.unstable_next = unstable_next;
        exports.unstable_pauseExecution = unstable_pauseExecution;
        exports.unstable_requestPaint = unstable_requestPaint;
        exports.unstable_runWithPriority = unstable_runWithPriority;
        exports.unstable_scheduleCallback = unstable_scheduleCallback;
        exports.unstable_shouldYield = shouldYieldToHost;
        exports.unstable_wrapCallback = unstable_wrapCallback;
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
        }
      })();
    }
  }
});

// node_modules/@fluentui/react-overflow/node_modules/scheduler/index.js
var require_scheduler8 = __commonJS({
  "node_modules/@fluentui/react-overflow/node_modules/scheduler/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_scheduler_development8();
    }
  }
});

// node_modules/@fluentui/react-toolbar/node_modules/scheduler/cjs/scheduler.development.js
var require_scheduler_development9 = __commonJS({
  "node_modules/@fluentui/react-toolbar/node_modules/scheduler/cjs/scheduler.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
        }
        var enableSchedulerDebugging = false;
        var enableProfiling = false;
        var frameYieldMs = 5;
        function push(heap, node) {
          var index = heap.length;
          heap.push(node);
          siftUp(heap, node, index);
        }
        function peek(heap) {
          return heap.length === 0 ? null : heap[0];
        }
        function pop(heap) {
          if (heap.length === 0) {
            return null;
          }
          var first = heap[0];
          var last = heap.pop();
          if (last !== first) {
            heap[0] = last;
            siftDown(heap, last, 0);
          }
          return first;
        }
        function siftUp(heap, node, i) {
          var index = i;
          while (index > 0) {
            var parentIndex = index - 1 >>> 1;
            var parent = heap[parentIndex];
            if (compare(parent, node) > 0) {
              heap[parentIndex] = node;
              heap[index] = parent;
              index = parentIndex;
            } else {
              return;
            }
          }
        }
        function siftDown(heap, node, i) {
          var index = i;
          var length = heap.length;
          var halfLength = length >>> 1;
          while (index < halfLength) {
            var leftIndex = (index + 1) * 2 - 1;
            var left = heap[leftIndex];
            var rightIndex = leftIndex + 1;
            var right = heap[rightIndex];
            if (compare(left, node) < 0) {
              if (rightIndex < length && compare(right, left) < 0) {
                heap[index] = right;
                heap[rightIndex] = node;
                index = rightIndex;
              } else {
                heap[index] = left;
                heap[leftIndex] = node;
                index = leftIndex;
              }
            } else if (rightIndex < length && compare(right, node) < 0) {
              heap[index] = right;
              heap[rightIndex] = node;
              index = rightIndex;
            } else {
              return;
            }
          }
        }
        function compare(a, b) {
          var diff = a.sortIndex - b.sortIndex;
          return diff !== 0 ? diff : a.id - b.id;
        }
        var ImmediatePriority = 1;
        var UserBlockingPriority = 2;
        var NormalPriority16 = 3;
        var LowPriority = 4;
        var IdlePriority = 5;
        function markTaskErrored(task, ms) {
        }
        var hasPerformanceNow = typeof performance === "object" && typeof performance.now === "function";
        if (hasPerformanceNow) {
          var localPerformance = performance;
          exports.unstable_now = function() {
            return localPerformance.now();
          };
        } else {
          var localDate = Date;
          var initialTime = localDate.now();
          exports.unstable_now = function() {
            return localDate.now() - initialTime;
          };
        }
        var maxSigned31BitInt = 1073741823;
        var IMMEDIATE_PRIORITY_TIMEOUT = -1;
        var USER_BLOCKING_PRIORITY_TIMEOUT = 250;
        var NORMAL_PRIORITY_TIMEOUT = 5e3;
        var LOW_PRIORITY_TIMEOUT = 1e4;
        var IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt;
        var taskQueue = [];
        var timerQueue = [];
        var taskIdCounter = 1;
        var currentTask = null;
        var currentPriorityLevel = NormalPriority16;
        var isPerformingWork = false;
        var isHostCallbackScheduled = false;
        var isHostTimeoutScheduled = false;
        var localSetTimeout = typeof setTimeout === "function" ? setTimeout : null;
        var localClearTimeout = typeof clearTimeout === "function" ? clearTimeout : null;
        var localSetImmediate = typeof setImmediate !== "undefined" ? setImmediate : null;
        var isInputPending = typeof navigator !== "undefined" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 ? navigator.scheduling.isInputPending.bind(navigator.scheduling) : null;
        function advanceTimers(currentTime) {
          var timer = peek(timerQueue);
          while (timer !== null) {
            if (timer.callback === null) {
              pop(timerQueue);
            } else if (timer.startTime <= currentTime) {
              pop(timerQueue);
              timer.sortIndex = timer.expirationTime;
              push(taskQueue, timer);
            } else {
              return;
            }
            timer = peek(timerQueue);
          }
        }
        function handleTimeout(currentTime) {
          isHostTimeoutScheduled = false;
          advanceTimers(currentTime);
          if (!isHostCallbackScheduled) {
            if (peek(taskQueue) !== null) {
              isHostCallbackScheduled = true;
              requestHostCallback(flushWork);
            } else {
              var firstTimer = peek(timerQueue);
              if (firstTimer !== null) {
                requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
              }
            }
          }
        }
        function flushWork(hasTimeRemaining, initialTime2) {
          isHostCallbackScheduled = false;
          if (isHostTimeoutScheduled) {
            isHostTimeoutScheduled = false;
            cancelHostTimeout();
          }
          isPerformingWork = true;
          var previousPriorityLevel = currentPriorityLevel;
          try {
            if (enableProfiling) {
              try {
                return workLoop(hasTimeRemaining, initialTime2);
              } catch (error) {
                if (currentTask !== null) {
                  var currentTime = exports.unstable_now();
                  markTaskErrored(currentTask, currentTime);
                  currentTask.isQueued = false;
                }
                throw error;
              }
            } else {
              return workLoop(hasTimeRemaining, initialTime2);
            }
          } finally {
            currentTask = null;
            currentPriorityLevel = previousPriorityLevel;
            isPerformingWork = false;
          }
        }
        function workLoop(hasTimeRemaining, initialTime2) {
          var currentTime = initialTime2;
          advanceTimers(currentTime);
          currentTask = peek(taskQueue);
          while (currentTask !== null && !enableSchedulerDebugging) {
            if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {
              break;
            }
            var callback = currentTask.callback;
            if (typeof callback === "function") {
              currentTask.callback = null;
              currentPriorityLevel = currentTask.priorityLevel;
              var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;
              var continuationCallback = callback(didUserCallbackTimeout);
              currentTime = exports.unstable_now();
              if (typeof continuationCallback === "function") {
                currentTask.callback = continuationCallback;
              } else {
                if (currentTask === peek(taskQueue)) {
                  pop(taskQueue);
                }
              }
              advanceTimers(currentTime);
            } else {
              pop(taskQueue);
            }
            currentTask = peek(taskQueue);
          }
          if (currentTask !== null) {
            return true;
          } else {
            var firstTimer = peek(timerQueue);
            if (firstTimer !== null) {
              requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
            }
            return false;
          }
        }
        function unstable_runWithPriority(priorityLevel, eventHandler) {
          switch (priorityLevel) {
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority16:
            case LowPriority:
            case IdlePriority:
              break;
            default:
              priorityLevel = NormalPriority16;
          }
          var previousPriorityLevel = currentPriorityLevel;
          currentPriorityLevel = priorityLevel;
          try {
            return eventHandler();
          } finally {
            currentPriorityLevel = previousPriorityLevel;
          }
        }
        function unstable_next(eventHandler) {
          var priorityLevel;
          switch (currentPriorityLevel) {
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority16:
              priorityLevel = NormalPriority16;
              break;
            default:
              priorityLevel = currentPriorityLevel;
              break;
          }
          var previousPriorityLevel = currentPriorityLevel;
          currentPriorityLevel = priorityLevel;
          try {
            return eventHandler();
          } finally {
            currentPriorityLevel = previousPriorityLevel;
          }
        }
        function unstable_wrapCallback(callback) {
          var parentPriorityLevel = currentPriorityLevel;
          return function() {
            var previousPriorityLevel = currentPriorityLevel;
            currentPriorityLevel = parentPriorityLevel;
            try {
              return callback.apply(this, arguments);
            } finally {
              currentPriorityLevel = previousPriorityLevel;
            }
          };
        }
        function unstable_scheduleCallback(priorityLevel, callback, options) {
          var currentTime = exports.unstable_now();
          var startTime2;
          if (typeof options === "object" && options !== null) {
            var delay = options.delay;
            if (typeof delay === "number" && delay > 0) {
              startTime2 = currentTime + delay;
            } else {
              startTime2 = currentTime;
            }
          } else {
            startTime2 = currentTime;
          }
          var timeout2;
          switch (priorityLevel) {
            case ImmediatePriority:
              timeout2 = IMMEDIATE_PRIORITY_TIMEOUT;
              break;
            case UserBlockingPriority:
              timeout2 = USER_BLOCKING_PRIORITY_TIMEOUT;
              break;
            case IdlePriority:
              timeout2 = IDLE_PRIORITY_TIMEOUT;
              break;
            case LowPriority:
              timeout2 = LOW_PRIORITY_TIMEOUT;
              break;
            case NormalPriority16:
            default:
              timeout2 = NORMAL_PRIORITY_TIMEOUT;
              break;
          }
          var expirationTime = startTime2 + timeout2;
          var newTask = {
            id: taskIdCounter++,
            callback,
            priorityLevel,
            startTime: startTime2,
            expirationTime,
            sortIndex: -1
          };
          if (startTime2 > currentTime) {
            newTask.sortIndex = startTime2;
            push(timerQueue, newTask);
            if (peek(taskQueue) === null && newTask === peek(timerQueue)) {
              if (isHostTimeoutScheduled) {
                cancelHostTimeout();
              } else {
                isHostTimeoutScheduled = true;
              }
              requestHostTimeout(handleTimeout, startTime2 - currentTime);
            }
          } else {
            newTask.sortIndex = expirationTime;
            push(taskQueue, newTask);
            if (!isHostCallbackScheduled && !isPerformingWork) {
              isHostCallbackScheduled = true;
              requestHostCallback(flushWork);
            }
          }
          return newTask;
        }
        function unstable_pauseExecution() {
        }
        function unstable_continueExecution() {
          if (!isHostCallbackScheduled && !isPerformingWork) {
            isHostCallbackScheduled = true;
            requestHostCallback(flushWork);
          }
        }
        function unstable_getFirstCallbackNode() {
          return peek(taskQueue);
        }
        function unstable_cancelCallback(task) {
          task.callback = null;
        }
        function unstable_getCurrentPriorityLevel() {
          return currentPriorityLevel;
        }
        var isMessageLoopRunning = false;
        var scheduledHostCallback = null;
        var taskTimeoutID = -1;
        var frameInterval = frameYieldMs;
        var startTime = -1;
        function shouldYieldToHost() {
          var timeElapsed = exports.unstable_now() - startTime;
          if (timeElapsed < frameInterval) {
            return false;
          }
          return true;
        }
        function requestPaint() {
        }
        function forceFrameRate(fps) {
          if (fps < 0 || fps > 125) {
            console["error"]("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported");
            return;
          }
          if (fps > 0) {
            frameInterval = Math.floor(1e3 / fps);
          } else {
            frameInterval = frameYieldMs;
          }
        }
        var performWorkUntilDeadline = function() {
          if (scheduledHostCallback !== null) {
            var currentTime = exports.unstable_now();
            startTime = currentTime;
            var hasTimeRemaining = true;
            var hasMoreWork = true;
            try {
              hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);
            } finally {
              if (hasMoreWork) {
                schedulePerformWorkUntilDeadline();
              } else {
                isMessageLoopRunning = false;
                scheduledHostCallback = null;
              }
            }
          } else {
            isMessageLoopRunning = false;
          }
        };
        var schedulePerformWorkUntilDeadline;
        if (typeof localSetImmediate === "function") {
          schedulePerformWorkUntilDeadline = function() {
            localSetImmediate(performWorkUntilDeadline);
          };
        } else if (typeof MessageChannel !== "undefined") {
          var channel = new MessageChannel();
          var port = channel.port2;
          channel.port1.onmessage = performWorkUntilDeadline;
          schedulePerformWorkUntilDeadline = function() {
            port.postMessage(null);
          };
        } else {
          schedulePerformWorkUntilDeadline = function() {
            localSetTimeout(performWorkUntilDeadline, 0);
          };
        }
        function requestHostCallback(callback) {
          scheduledHostCallback = callback;
          if (!isMessageLoopRunning) {
            isMessageLoopRunning = true;
            schedulePerformWorkUntilDeadline();
          }
        }
        function requestHostTimeout(callback, ms) {
          taskTimeoutID = localSetTimeout(function() {
            callback(exports.unstable_now());
          }, ms);
        }
        function cancelHostTimeout() {
          localClearTimeout(taskTimeoutID);
          taskTimeoutID = -1;
        }
        var unstable_requestPaint = requestPaint;
        var unstable_Profiling = null;
        exports.unstable_IdlePriority = IdlePriority;
        exports.unstable_ImmediatePriority = ImmediatePriority;
        exports.unstable_LowPriority = LowPriority;
        exports.unstable_NormalPriority = NormalPriority16;
        exports.unstable_Profiling = unstable_Profiling;
        exports.unstable_UserBlockingPriority = UserBlockingPriority;
        exports.unstable_cancelCallback = unstable_cancelCallback;
        exports.unstable_continueExecution = unstable_continueExecution;
        exports.unstable_forceFrameRate = forceFrameRate;
        exports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;
        exports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;
        exports.unstable_next = unstable_next;
        exports.unstable_pauseExecution = unstable_pauseExecution;
        exports.unstable_requestPaint = unstable_requestPaint;
        exports.unstable_runWithPriority = unstable_runWithPriority;
        exports.unstable_scheduleCallback = unstable_scheduleCallback;
        exports.unstable_shouldYield = shouldYieldToHost;
        exports.unstable_wrapCallback = unstable_wrapCallback;
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
        }
      })();
    }
  }
});

// node_modules/@fluentui/react-toolbar/node_modules/scheduler/index.js
var require_scheduler9 = __commonJS({
  "node_modules/@fluentui/react-toolbar/node_modules/scheduler/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_scheduler_development9();
    }
  }
});

// node_modules/@fluentui/react-table/node_modules/scheduler/cjs/scheduler.development.js
var require_scheduler_development10 = __commonJS({
  "node_modules/@fluentui/react-table/node_modules/scheduler/cjs/scheduler.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
        }
        var enableSchedulerDebugging = false;
        var enableProfiling = false;
        var frameYieldMs = 5;
        function push(heap, node) {
          var index = heap.length;
          heap.push(node);
          siftUp(heap, node, index);
        }
        function peek(heap) {
          return heap.length === 0 ? null : heap[0];
        }
        function pop(heap) {
          if (heap.length === 0) {
            return null;
          }
          var first = heap[0];
          var last = heap.pop();
          if (last !== first) {
            heap[0] = last;
            siftDown(heap, last, 0);
          }
          return first;
        }
        function siftUp(heap, node, i) {
          var index = i;
          while (index > 0) {
            var parentIndex = index - 1 >>> 1;
            var parent = heap[parentIndex];
            if (compare(parent, node) > 0) {
              heap[parentIndex] = node;
              heap[index] = parent;
              index = parentIndex;
            } else {
              return;
            }
          }
        }
        function siftDown(heap, node, i) {
          var index = i;
          var length = heap.length;
          var halfLength = length >>> 1;
          while (index < halfLength) {
            var leftIndex = (index + 1) * 2 - 1;
            var left = heap[leftIndex];
            var rightIndex = leftIndex + 1;
            var right = heap[rightIndex];
            if (compare(left, node) < 0) {
              if (rightIndex < length && compare(right, left) < 0) {
                heap[index] = right;
                heap[rightIndex] = node;
                index = rightIndex;
              } else {
                heap[index] = left;
                heap[leftIndex] = node;
                index = leftIndex;
              }
            } else if (rightIndex < length && compare(right, node) < 0) {
              heap[index] = right;
              heap[rightIndex] = node;
              index = rightIndex;
            } else {
              return;
            }
          }
        }
        function compare(a, b) {
          var diff = a.sortIndex - b.sortIndex;
          return diff !== 0 ? diff : a.id - b.id;
        }
        var ImmediatePriority = 1;
        var UserBlockingPriority = 2;
        var NormalPriority16 = 3;
        var LowPriority = 4;
        var IdlePriority = 5;
        function markTaskErrored(task, ms) {
        }
        var hasPerformanceNow = typeof performance === "object" && typeof performance.now === "function";
        if (hasPerformanceNow) {
          var localPerformance = performance;
          exports.unstable_now = function() {
            return localPerformance.now();
          };
        } else {
          var localDate = Date;
          var initialTime = localDate.now();
          exports.unstable_now = function() {
            return localDate.now() - initialTime;
          };
        }
        var maxSigned31BitInt = 1073741823;
        var IMMEDIATE_PRIORITY_TIMEOUT = -1;
        var USER_BLOCKING_PRIORITY_TIMEOUT = 250;
        var NORMAL_PRIORITY_TIMEOUT = 5e3;
        var LOW_PRIORITY_TIMEOUT = 1e4;
        var IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt;
        var taskQueue = [];
        var timerQueue = [];
        var taskIdCounter = 1;
        var currentTask = null;
        var currentPriorityLevel = NormalPriority16;
        var isPerformingWork = false;
        var isHostCallbackScheduled = false;
        var isHostTimeoutScheduled = false;
        var localSetTimeout = typeof setTimeout === "function" ? setTimeout : null;
        var localClearTimeout = typeof clearTimeout === "function" ? clearTimeout : null;
        var localSetImmediate = typeof setImmediate !== "undefined" ? setImmediate : null;
        var isInputPending = typeof navigator !== "undefined" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 ? navigator.scheduling.isInputPending.bind(navigator.scheduling) : null;
        function advanceTimers(currentTime) {
          var timer = peek(timerQueue);
          while (timer !== null) {
            if (timer.callback === null) {
              pop(timerQueue);
            } else if (timer.startTime <= currentTime) {
              pop(timerQueue);
              timer.sortIndex = timer.expirationTime;
              push(taskQueue, timer);
            } else {
              return;
            }
            timer = peek(timerQueue);
          }
        }
        function handleTimeout(currentTime) {
          isHostTimeoutScheduled = false;
          advanceTimers(currentTime);
          if (!isHostCallbackScheduled) {
            if (peek(taskQueue) !== null) {
              isHostCallbackScheduled = true;
              requestHostCallback(flushWork);
            } else {
              var firstTimer = peek(timerQueue);
              if (firstTimer !== null) {
                requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
              }
            }
          }
        }
        function flushWork(hasTimeRemaining, initialTime2) {
          isHostCallbackScheduled = false;
          if (isHostTimeoutScheduled) {
            isHostTimeoutScheduled = false;
            cancelHostTimeout();
          }
          isPerformingWork = true;
          var previousPriorityLevel = currentPriorityLevel;
          try {
            if (enableProfiling) {
              try {
                return workLoop(hasTimeRemaining, initialTime2);
              } catch (error) {
                if (currentTask !== null) {
                  var currentTime = exports.unstable_now();
                  markTaskErrored(currentTask, currentTime);
                  currentTask.isQueued = false;
                }
                throw error;
              }
            } else {
              return workLoop(hasTimeRemaining, initialTime2);
            }
          } finally {
            currentTask = null;
            currentPriorityLevel = previousPriorityLevel;
            isPerformingWork = false;
          }
        }
        function workLoop(hasTimeRemaining, initialTime2) {
          var currentTime = initialTime2;
          advanceTimers(currentTime);
          currentTask = peek(taskQueue);
          while (currentTask !== null && !enableSchedulerDebugging) {
            if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {
              break;
            }
            var callback = currentTask.callback;
            if (typeof callback === "function") {
              currentTask.callback = null;
              currentPriorityLevel = currentTask.priorityLevel;
              var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;
              var continuationCallback = callback(didUserCallbackTimeout);
              currentTime = exports.unstable_now();
              if (typeof continuationCallback === "function") {
                currentTask.callback = continuationCallback;
              } else {
                if (currentTask === peek(taskQueue)) {
                  pop(taskQueue);
                }
              }
              advanceTimers(currentTime);
            } else {
              pop(taskQueue);
            }
            currentTask = peek(taskQueue);
          }
          if (currentTask !== null) {
            return true;
          } else {
            var firstTimer = peek(timerQueue);
            if (firstTimer !== null) {
              requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
            }
            return false;
          }
        }
        function unstable_runWithPriority(priorityLevel, eventHandler) {
          switch (priorityLevel) {
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority16:
            case LowPriority:
            case IdlePriority:
              break;
            default:
              priorityLevel = NormalPriority16;
          }
          var previousPriorityLevel = currentPriorityLevel;
          currentPriorityLevel = priorityLevel;
          try {
            return eventHandler();
          } finally {
            currentPriorityLevel = previousPriorityLevel;
          }
        }
        function unstable_next(eventHandler) {
          var priorityLevel;
          switch (currentPriorityLevel) {
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority16:
              priorityLevel = NormalPriority16;
              break;
            default:
              priorityLevel = currentPriorityLevel;
              break;
          }
          var previousPriorityLevel = currentPriorityLevel;
          currentPriorityLevel = priorityLevel;
          try {
            return eventHandler();
          } finally {
            currentPriorityLevel = previousPriorityLevel;
          }
        }
        function unstable_wrapCallback(callback) {
          var parentPriorityLevel = currentPriorityLevel;
          return function() {
            var previousPriorityLevel = currentPriorityLevel;
            currentPriorityLevel = parentPriorityLevel;
            try {
              return callback.apply(this, arguments);
            } finally {
              currentPriorityLevel = previousPriorityLevel;
            }
          };
        }
        function unstable_scheduleCallback(priorityLevel, callback, options) {
          var currentTime = exports.unstable_now();
          var startTime2;
          if (typeof options === "object" && options !== null) {
            var delay = options.delay;
            if (typeof delay === "number" && delay > 0) {
              startTime2 = currentTime + delay;
            } else {
              startTime2 = currentTime;
            }
          } else {
            startTime2 = currentTime;
          }
          var timeout2;
          switch (priorityLevel) {
            case ImmediatePriority:
              timeout2 = IMMEDIATE_PRIORITY_TIMEOUT;
              break;
            case UserBlockingPriority:
              timeout2 = USER_BLOCKING_PRIORITY_TIMEOUT;
              break;
            case IdlePriority:
              timeout2 = IDLE_PRIORITY_TIMEOUT;
              break;
            case LowPriority:
              timeout2 = LOW_PRIORITY_TIMEOUT;
              break;
            case NormalPriority16:
            default:
              timeout2 = NORMAL_PRIORITY_TIMEOUT;
              break;
          }
          var expirationTime = startTime2 + timeout2;
          var newTask = {
            id: taskIdCounter++,
            callback,
            priorityLevel,
            startTime: startTime2,
            expirationTime,
            sortIndex: -1
          };
          if (startTime2 > currentTime) {
            newTask.sortIndex = startTime2;
            push(timerQueue, newTask);
            if (peek(taskQueue) === null && newTask === peek(timerQueue)) {
              if (isHostTimeoutScheduled) {
                cancelHostTimeout();
              } else {
                isHostTimeoutScheduled = true;
              }
              requestHostTimeout(handleTimeout, startTime2 - currentTime);
            }
          } else {
            newTask.sortIndex = expirationTime;
            push(taskQueue, newTask);
            if (!isHostCallbackScheduled && !isPerformingWork) {
              isHostCallbackScheduled = true;
              requestHostCallback(flushWork);
            }
          }
          return newTask;
        }
        function unstable_pauseExecution() {
        }
        function unstable_continueExecution() {
          if (!isHostCallbackScheduled && !isPerformingWork) {
            isHostCallbackScheduled = true;
            requestHostCallback(flushWork);
          }
        }
        function unstable_getFirstCallbackNode() {
          return peek(taskQueue);
        }
        function unstable_cancelCallback(task) {
          task.callback = null;
        }
        function unstable_getCurrentPriorityLevel() {
          return currentPriorityLevel;
        }
        var isMessageLoopRunning = false;
        var scheduledHostCallback = null;
        var taskTimeoutID = -1;
        var frameInterval = frameYieldMs;
        var startTime = -1;
        function shouldYieldToHost() {
          var timeElapsed = exports.unstable_now() - startTime;
          if (timeElapsed < frameInterval) {
            return false;
          }
          return true;
        }
        function requestPaint() {
        }
        function forceFrameRate(fps) {
          if (fps < 0 || fps > 125) {
            console["error"]("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported");
            return;
          }
          if (fps > 0) {
            frameInterval = Math.floor(1e3 / fps);
          } else {
            frameInterval = frameYieldMs;
          }
        }
        var performWorkUntilDeadline = function() {
          if (scheduledHostCallback !== null) {
            var currentTime = exports.unstable_now();
            startTime = currentTime;
            var hasTimeRemaining = true;
            var hasMoreWork = true;
            try {
              hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);
            } finally {
              if (hasMoreWork) {
                schedulePerformWorkUntilDeadline();
              } else {
                isMessageLoopRunning = false;
                scheduledHostCallback = null;
              }
            }
          } else {
            isMessageLoopRunning = false;
          }
        };
        var schedulePerformWorkUntilDeadline;
        if (typeof localSetImmediate === "function") {
          schedulePerformWorkUntilDeadline = function() {
            localSetImmediate(performWorkUntilDeadline);
          };
        } else if (typeof MessageChannel !== "undefined") {
          var channel = new MessageChannel();
          var port = channel.port2;
          channel.port1.onmessage = performWorkUntilDeadline;
          schedulePerformWorkUntilDeadline = function() {
            port.postMessage(null);
          };
        } else {
          schedulePerformWorkUntilDeadline = function() {
            localSetTimeout(performWorkUntilDeadline, 0);
          };
        }
        function requestHostCallback(callback) {
          scheduledHostCallback = callback;
          if (!isMessageLoopRunning) {
            isMessageLoopRunning = true;
            schedulePerformWorkUntilDeadline();
          }
        }
        function requestHostTimeout(callback, ms) {
          taskTimeoutID = localSetTimeout(function() {
            callback(exports.unstable_now());
          }, ms);
        }
        function cancelHostTimeout() {
          localClearTimeout(taskTimeoutID);
          taskTimeoutID = -1;
        }
        var unstable_requestPaint = requestPaint;
        var unstable_Profiling = null;
        exports.unstable_IdlePriority = IdlePriority;
        exports.unstable_ImmediatePriority = ImmediatePriority;
        exports.unstable_LowPriority = LowPriority;
        exports.unstable_NormalPriority = NormalPriority16;
        exports.unstable_Profiling = unstable_Profiling;
        exports.unstable_UserBlockingPriority = UserBlockingPriority;
        exports.unstable_cancelCallback = unstable_cancelCallback;
        exports.unstable_continueExecution = unstable_continueExecution;
        exports.unstable_forceFrameRate = forceFrameRate;
        exports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;
        exports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;
        exports.unstable_next = unstable_next;
        exports.unstable_pauseExecution = unstable_pauseExecution;
        exports.unstable_requestPaint = unstable_requestPaint;
        exports.unstable_runWithPriority = unstable_runWithPriority;
        exports.unstable_scheduleCallback = unstable_scheduleCallback;
        exports.unstable_shouldYield = shouldYieldToHost;
        exports.unstable_wrapCallback = unstable_wrapCallback;
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
        }
      })();
    }
  }
});

// node_modules/@fluentui/react-table/node_modules/scheduler/index.js
var require_scheduler10 = __commonJS({
  "node_modules/@fluentui/react-table/node_modules/scheduler/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_scheduler_development10();
    }
  }
});

// node_modules/@fluentui/react-tree/node_modules/scheduler/cjs/scheduler.development.js
var require_scheduler_development11 = __commonJS({
  "node_modules/@fluentui/react-tree/node_modules/scheduler/cjs/scheduler.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
        }
        var enableSchedulerDebugging = false;
        var enableProfiling = false;
        var frameYieldMs = 5;
        function push(heap, node) {
          var index = heap.length;
          heap.push(node);
          siftUp(heap, node, index);
        }
        function peek(heap) {
          return heap.length === 0 ? null : heap[0];
        }
        function pop(heap) {
          if (heap.length === 0) {
            return null;
          }
          var first = heap[0];
          var last = heap.pop();
          if (last !== first) {
            heap[0] = last;
            siftDown(heap, last, 0);
          }
          return first;
        }
        function siftUp(heap, node, i) {
          var index = i;
          while (index > 0) {
            var parentIndex = index - 1 >>> 1;
            var parent = heap[parentIndex];
            if (compare(parent, node) > 0) {
              heap[parentIndex] = node;
              heap[index] = parent;
              index = parentIndex;
            } else {
              return;
            }
          }
        }
        function siftDown(heap, node, i) {
          var index = i;
          var length = heap.length;
          var halfLength = length >>> 1;
          while (index < halfLength) {
            var leftIndex = (index + 1) * 2 - 1;
            var left = heap[leftIndex];
            var rightIndex = leftIndex + 1;
            var right = heap[rightIndex];
            if (compare(left, node) < 0) {
              if (rightIndex < length && compare(right, left) < 0) {
                heap[index] = right;
                heap[rightIndex] = node;
                index = rightIndex;
              } else {
                heap[index] = left;
                heap[leftIndex] = node;
                index = leftIndex;
              }
            } else if (rightIndex < length && compare(right, node) < 0) {
              heap[index] = right;
              heap[rightIndex] = node;
              index = rightIndex;
            } else {
              return;
            }
          }
        }
        function compare(a, b) {
          var diff = a.sortIndex - b.sortIndex;
          return diff !== 0 ? diff : a.id - b.id;
        }
        var ImmediatePriority = 1;
        var UserBlockingPriority = 2;
        var NormalPriority16 = 3;
        var LowPriority = 4;
        var IdlePriority = 5;
        function markTaskErrored(task, ms) {
        }
        var hasPerformanceNow = typeof performance === "object" && typeof performance.now === "function";
        if (hasPerformanceNow) {
          var localPerformance = performance;
          exports.unstable_now = function() {
            return localPerformance.now();
          };
        } else {
          var localDate = Date;
          var initialTime = localDate.now();
          exports.unstable_now = function() {
            return localDate.now() - initialTime;
          };
        }
        var maxSigned31BitInt = 1073741823;
        var IMMEDIATE_PRIORITY_TIMEOUT = -1;
        var USER_BLOCKING_PRIORITY_TIMEOUT = 250;
        var NORMAL_PRIORITY_TIMEOUT = 5e3;
        var LOW_PRIORITY_TIMEOUT = 1e4;
        var IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt;
        var taskQueue = [];
        var timerQueue = [];
        var taskIdCounter = 1;
        var currentTask = null;
        var currentPriorityLevel = NormalPriority16;
        var isPerformingWork = false;
        var isHostCallbackScheduled = false;
        var isHostTimeoutScheduled = false;
        var localSetTimeout = typeof setTimeout === "function" ? setTimeout : null;
        var localClearTimeout = typeof clearTimeout === "function" ? clearTimeout : null;
        var localSetImmediate = typeof setImmediate !== "undefined" ? setImmediate : null;
        var isInputPending = typeof navigator !== "undefined" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 ? navigator.scheduling.isInputPending.bind(navigator.scheduling) : null;
        function advanceTimers(currentTime) {
          var timer = peek(timerQueue);
          while (timer !== null) {
            if (timer.callback === null) {
              pop(timerQueue);
            } else if (timer.startTime <= currentTime) {
              pop(timerQueue);
              timer.sortIndex = timer.expirationTime;
              push(taskQueue, timer);
            } else {
              return;
            }
            timer = peek(timerQueue);
          }
        }
        function handleTimeout(currentTime) {
          isHostTimeoutScheduled = false;
          advanceTimers(currentTime);
          if (!isHostCallbackScheduled) {
            if (peek(taskQueue) !== null) {
              isHostCallbackScheduled = true;
              requestHostCallback(flushWork);
            } else {
              var firstTimer = peek(timerQueue);
              if (firstTimer !== null) {
                requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
              }
            }
          }
        }
        function flushWork(hasTimeRemaining, initialTime2) {
          isHostCallbackScheduled = false;
          if (isHostTimeoutScheduled) {
            isHostTimeoutScheduled = false;
            cancelHostTimeout();
          }
          isPerformingWork = true;
          var previousPriorityLevel = currentPriorityLevel;
          try {
            if (enableProfiling) {
              try {
                return workLoop(hasTimeRemaining, initialTime2);
              } catch (error) {
                if (currentTask !== null) {
                  var currentTime = exports.unstable_now();
                  markTaskErrored(currentTask, currentTime);
                  currentTask.isQueued = false;
                }
                throw error;
              }
            } else {
              return workLoop(hasTimeRemaining, initialTime2);
            }
          } finally {
            currentTask = null;
            currentPriorityLevel = previousPriorityLevel;
            isPerformingWork = false;
          }
        }
        function workLoop(hasTimeRemaining, initialTime2) {
          var currentTime = initialTime2;
          advanceTimers(currentTime);
          currentTask = peek(taskQueue);
          while (currentTask !== null && !enableSchedulerDebugging) {
            if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {
              break;
            }
            var callback = currentTask.callback;
            if (typeof callback === "function") {
              currentTask.callback = null;
              currentPriorityLevel = currentTask.priorityLevel;
              var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;
              var continuationCallback = callback(didUserCallbackTimeout);
              currentTime = exports.unstable_now();
              if (typeof continuationCallback === "function") {
                currentTask.callback = continuationCallback;
              } else {
                if (currentTask === peek(taskQueue)) {
                  pop(taskQueue);
                }
              }
              advanceTimers(currentTime);
            } else {
              pop(taskQueue);
            }
            currentTask = peek(taskQueue);
          }
          if (currentTask !== null) {
            return true;
          } else {
            var firstTimer = peek(timerQueue);
            if (firstTimer !== null) {
              requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
            }
            return false;
          }
        }
        function unstable_runWithPriority(priorityLevel, eventHandler) {
          switch (priorityLevel) {
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority16:
            case LowPriority:
            case IdlePriority:
              break;
            default:
              priorityLevel = NormalPriority16;
          }
          var previousPriorityLevel = currentPriorityLevel;
          currentPriorityLevel = priorityLevel;
          try {
            return eventHandler();
          } finally {
            currentPriorityLevel = previousPriorityLevel;
          }
        }
        function unstable_next(eventHandler) {
          var priorityLevel;
          switch (currentPriorityLevel) {
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority16:
              priorityLevel = NormalPriority16;
              break;
            default:
              priorityLevel = currentPriorityLevel;
              break;
          }
          var previousPriorityLevel = currentPriorityLevel;
          currentPriorityLevel = priorityLevel;
          try {
            return eventHandler();
          } finally {
            currentPriorityLevel = previousPriorityLevel;
          }
        }
        function unstable_wrapCallback(callback) {
          var parentPriorityLevel = currentPriorityLevel;
          return function() {
            var previousPriorityLevel = currentPriorityLevel;
            currentPriorityLevel = parentPriorityLevel;
            try {
              return callback.apply(this, arguments);
            } finally {
              currentPriorityLevel = previousPriorityLevel;
            }
          };
        }
        function unstable_scheduleCallback(priorityLevel, callback, options) {
          var currentTime = exports.unstable_now();
          var startTime2;
          if (typeof options === "object" && options !== null) {
            var delay = options.delay;
            if (typeof delay === "number" && delay > 0) {
              startTime2 = currentTime + delay;
            } else {
              startTime2 = currentTime;
            }
          } else {
            startTime2 = currentTime;
          }
          var timeout2;
          switch (priorityLevel) {
            case ImmediatePriority:
              timeout2 = IMMEDIATE_PRIORITY_TIMEOUT;
              break;
            case UserBlockingPriority:
              timeout2 = USER_BLOCKING_PRIORITY_TIMEOUT;
              break;
            case IdlePriority:
              timeout2 = IDLE_PRIORITY_TIMEOUT;
              break;
            case LowPriority:
              timeout2 = LOW_PRIORITY_TIMEOUT;
              break;
            case NormalPriority16:
            default:
              timeout2 = NORMAL_PRIORITY_TIMEOUT;
              break;
          }
          var expirationTime = startTime2 + timeout2;
          var newTask = {
            id: taskIdCounter++,
            callback,
            priorityLevel,
            startTime: startTime2,
            expirationTime,
            sortIndex: -1
          };
          if (startTime2 > currentTime) {
            newTask.sortIndex = startTime2;
            push(timerQueue, newTask);
            if (peek(taskQueue) === null && newTask === peek(timerQueue)) {
              if (isHostTimeoutScheduled) {
                cancelHostTimeout();
              } else {
                isHostTimeoutScheduled = true;
              }
              requestHostTimeout(handleTimeout, startTime2 - currentTime);
            }
          } else {
            newTask.sortIndex = expirationTime;
            push(taskQueue, newTask);
            if (!isHostCallbackScheduled && !isPerformingWork) {
              isHostCallbackScheduled = true;
              requestHostCallback(flushWork);
            }
          }
          return newTask;
        }
        function unstable_pauseExecution() {
        }
        function unstable_continueExecution() {
          if (!isHostCallbackScheduled && !isPerformingWork) {
            isHostCallbackScheduled = true;
            requestHostCallback(flushWork);
          }
        }
        function unstable_getFirstCallbackNode() {
          return peek(taskQueue);
        }
        function unstable_cancelCallback(task) {
          task.callback = null;
        }
        function unstable_getCurrentPriorityLevel() {
          return currentPriorityLevel;
        }
        var isMessageLoopRunning = false;
        var scheduledHostCallback = null;
        var taskTimeoutID = -1;
        var frameInterval = frameYieldMs;
        var startTime = -1;
        function shouldYieldToHost() {
          var timeElapsed = exports.unstable_now() - startTime;
          if (timeElapsed < frameInterval) {
            return false;
          }
          return true;
        }
        function requestPaint() {
        }
        function forceFrameRate(fps) {
          if (fps < 0 || fps > 125) {
            console["error"]("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported");
            return;
          }
          if (fps > 0) {
            frameInterval = Math.floor(1e3 / fps);
          } else {
            frameInterval = frameYieldMs;
          }
        }
        var performWorkUntilDeadline = function() {
          if (scheduledHostCallback !== null) {
            var currentTime = exports.unstable_now();
            startTime = currentTime;
            var hasTimeRemaining = true;
            var hasMoreWork = true;
            try {
              hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);
            } finally {
              if (hasMoreWork) {
                schedulePerformWorkUntilDeadline();
              } else {
                isMessageLoopRunning = false;
                scheduledHostCallback = null;
              }
            }
          } else {
            isMessageLoopRunning = false;
          }
        };
        var schedulePerformWorkUntilDeadline;
        if (typeof localSetImmediate === "function") {
          schedulePerformWorkUntilDeadline = function() {
            localSetImmediate(performWorkUntilDeadline);
          };
        } else if (typeof MessageChannel !== "undefined") {
          var channel = new MessageChannel();
          var port = channel.port2;
          channel.port1.onmessage = performWorkUntilDeadline;
          schedulePerformWorkUntilDeadline = function() {
            port.postMessage(null);
          };
        } else {
          schedulePerformWorkUntilDeadline = function() {
            localSetTimeout(performWorkUntilDeadline, 0);
          };
        }
        function requestHostCallback(callback) {
          scheduledHostCallback = callback;
          if (!isMessageLoopRunning) {
            isMessageLoopRunning = true;
            schedulePerformWorkUntilDeadline();
          }
        }
        function requestHostTimeout(callback, ms) {
          taskTimeoutID = localSetTimeout(function() {
            callback(exports.unstable_now());
          }, ms);
        }
        function cancelHostTimeout() {
          localClearTimeout(taskTimeoutID);
          taskTimeoutID = -1;
        }
        var unstable_requestPaint = requestPaint;
        var unstable_Profiling = null;
        exports.unstable_IdlePriority = IdlePriority;
        exports.unstable_ImmediatePriority = ImmediatePriority;
        exports.unstable_LowPriority = LowPriority;
        exports.unstable_NormalPriority = NormalPriority16;
        exports.unstable_Profiling = unstable_Profiling;
        exports.unstable_UserBlockingPriority = UserBlockingPriority;
        exports.unstable_cancelCallback = unstable_cancelCallback;
        exports.unstable_continueExecution = unstable_continueExecution;
        exports.unstable_forceFrameRate = forceFrameRate;
        exports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;
        exports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;
        exports.unstable_next = unstable_next;
        exports.unstable_pauseExecution = unstable_pauseExecution;
        exports.unstable_requestPaint = unstable_requestPaint;
        exports.unstable_runWithPriority = unstable_runWithPriority;
        exports.unstable_scheduleCallback = unstable_scheduleCallback;
        exports.unstable_shouldYield = shouldYieldToHost;
        exports.unstable_wrapCallback = unstable_wrapCallback;
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
        }
      })();
    }
  }
});

// node_modules/@fluentui/react-tree/node_modules/scheduler/index.js
var require_scheduler11 = __commonJS({
  "node_modules/@fluentui/react-tree/node_modules/scheduler/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_scheduler_development11();
    }
  }
});

// node_modules/react-is/cjs/react-is.development.js
var require_react_is_development2 = __commonJS({
  "node_modules/react-is/cjs/react-is.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var hasSymbol = typeof Symbol === "function" && Symbol.for;
        var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for("react.element") : 60103;
        var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for("react.portal") : 60106;
        var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for("react.fragment") : 60107;
        var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for("react.strict_mode") : 60108;
        var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for("react.profiler") : 60114;
        var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for("react.provider") : 60109;
        var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for("react.context") : 60110;
        var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for("react.async_mode") : 60111;
        var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for("react.concurrent_mode") : 60111;
        var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for("react.forward_ref") : 60112;
        var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for("react.suspense") : 60113;
        var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for("react.suspense_list") : 60120;
        var REACT_MEMO_TYPE = hasSymbol ? Symbol.for("react.memo") : 60115;
        var REACT_LAZY_TYPE = hasSymbol ? Symbol.for("react.lazy") : 60116;
        var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for("react.block") : 60121;
        var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for("react.fundamental") : 60117;
        var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for("react.responder") : 60118;
        var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for("react.scope") : 60119;
        function isValidElementType(type) {
          return typeof type === "string" || typeof type === "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
          type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === "object" && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
        }
        function typeOf(object) {
          if (typeof object === "object" && object !== null) {
            var $$typeof = object.$$typeof;
            switch ($$typeof) {
              case REACT_ELEMENT_TYPE:
                var type = object.type;
                switch (type) {
                  case REACT_ASYNC_MODE_TYPE:
                  case REACT_CONCURRENT_MODE_TYPE:
                  case REACT_FRAGMENT_TYPE:
                  case REACT_PROFILER_TYPE:
                  case REACT_STRICT_MODE_TYPE:
                  case REACT_SUSPENSE_TYPE:
                    return type;
                  default:
                    var $$typeofType = type && type.$$typeof;
                    switch ($$typeofType) {
                      case REACT_CONTEXT_TYPE:
                      case REACT_FORWARD_REF_TYPE:
                      case REACT_LAZY_TYPE:
                      case REACT_MEMO_TYPE:
                      case REACT_PROVIDER_TYPE:
                        return $$typeofType;
                      default:
                        return $$typeof;
                    }
                }
              case REACT_PORTAL_TYPE:
                return $$typeof;
            }
          }
          return void 0;
        }
        var AsyncMode = REACT_ASYNC_MODE_TYPE;
        var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
        var ContextConsumer = REACT_CONTEXT_TYPE;
        var ContextProvider = REACT_PROVIDER_TYPE;
        var Element2 = REACT_ELEMENT_TYPE;
        var ForwardRef = REACT_FORWARD_REF_TYPE;
        var Fragment6 = REACT_FRAGMENT_TYPE;
        var Lazy = REACT_LAZY_TYPE;
        var Memo = REACT_MEMO_TYPE;
        var Portal2 = REACT_PORTAL_TYPE;
        var Profiler = REACT_PROFILER_TYPE;
        var StrictMode = REACT_STRICT_MODE_TYPE;
        var Suspense = REACT_SUSPENSE_TYPE;
        var hasWarnedAboutDeprecatedIsAsyncMode = false;
        function isAsyncMode(object) {
          {
            if (!hasWarnedAboutDeprecatedIsAsyncMode) {
              hasWarnedAboutDeprecatedIsAsyncMode = true;
              console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.");
            }
          }
          return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
        }
        function isConcurrentMode(object) {
          return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
        }
        function isContextConsumer(object) {
          return typeOf(object) === REACT_CONTEXT_TYPE;
        }
        function isContextProvider(object) {
          return typeOf(object) === REACT_PROVIDER_TYPE;
        }
        function isElement(object) {
          return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
        }
        function isForwardRef2(object) {
          return typeOf(object) === REACT_FORWARD_REF_TYPE;
        }
        function isFragment(object) {
          return typeOf(object) === REACT_FRAGMENT_TYPE;
        }
        function isLazy(object) {
          return typeOf(object) === REACT_LAZY_TYPE;
        }
        function isMemo(object) {
          return typeOf(object) === REACT_MEMO_TYPE;
        }
        function isPortal(object) {
          return typeOf(object) === REACT_PORTAL_TYPE;
        }
        function isProfiler(object) {
          return typeOf(object) === REACT_PROFILER_TYPE;
        }
        function isStrictMode(object) {
          return typeOf(object) === REACT_STRICT_MODE_TYPE;
        }
        function isSuspense(object) {
          return typeOf(object) === REACT_SUSPENSE_TYPE;
        }
        exports.AsyncMode = AsyncMode;
        exports.ConcurrentMode = ConcurrentMode;
        exports.ContextConsumer = ContextConsumer;
        exports.ContextProvider = ContextProvider;
        exports.Element = Element2;
        exports.ForwardRef = ForwardRef;
        exports.Fragment = Fragment6;
        exports.Lazy = Lazy;
        exports.Memo = Memo;
        exports.Portal = Portal2;
        exports.Profiler = Profiler;
        exports.StrictMode = StrictMode;
        exports.Suspense = Suspense;
        exports.isAsyncMode = isAsyncMode;
        exports.isConcurrentMode = isConcurrentMode;
        exports.isContextConsumer = isContextConsumer;
        exports.isContextProvider = isContextProvider;
        exports.isElement = isElement;
        exports.isForwardRef = isForwardRef2;
        exports.isFragment = isFragment;
        exports.isLazy = isLazy;
        exports.isMemo = isMemo;
        exports.isPortal = isPortal;
        exports.isProfiler = isProfiler;
        exports.isStrictMode = isStrictMode;
        exports.isSuspense = isSuspense;
        exports.isValidElementType = isValidElementType;
        exports.typeOf = typeOf;
      })();
    }
  }
});

// node_modules/react-is/index.js
var require_react_is2 = __commonJS({
  "node_modules/react-is/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_is_development2();
    }
  }
});

// node_modules/object-assign/index.js
var require_object_assign = __commonJS({
  "node_modules/object-assign/index.js"(exports, module) {
    "use strict";
    var getOwnPropertySymbols = Object.getOwnPropertySymbols;
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var propIsEnumerable = Object.prototype.propertyIsEnumerable;
    function toObject(val) {
      if (val === null || val === void 0) {
        throw new TypeError("Object.assign cannot be called with null or undefined");
      }
      return Object(val);
    }
    function shouldUseNative() {
      try {
        if (!Object.assign) {
          return false;
        }
        var test1 = new String("abc");
        test1[5] = "de";
        if (Object.getOwnPropertyNames(test1)[0] === "5") {
          return false;
        }
        var test2 = {};
        for (var i = 0; i < 10; i++) {
          test2["_" + String.fromCharCode(i)] = i;
        }
        var order2 = Object.getOwnPropertyNames(test2).map(function(n) {
          return test2[n];
        });
        if (order2.join("") !== "0123456789") {
          return false;
        }
        var test3 = {};
        "abcdefghijklmnopqrst".split("").forEach(function(letter) {
          test3[letter] = letter;
        });
        if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") {
          return false;
        }
        return true;
      } catch (err) {
        return false;
      }
    }
    module.exports = shouldUseNative() ? Object.assign : function(target, source) {
      var from;
      var to = toObject(target);
      var symbols;
      for (var s = 1; s < arguments.length; s++) {
        from = Object(arguments[s]);
        for (var key in from) {
          if (hasOwnProperty.call(from, key)) {
            to[key] = from[key];
          }
        }
        if (getOwnPropertySymbols) {
          symbols = getOwnPropertySymbols(from);
          for (var i = 0; i < symbols.length; i++) {
            if (propIsEnumerable.call(from, symbols[i])) {
              to[symbols[i]] = from[symbols[i]];
            }
          }
        }
      }
      return to;
    };
  }
});

// node_modules/prop-types/lib/ReactPropTypesSecret.js
var require_ReactPropTypesSecret = __commonJS({
  "node_modules/prop-types/lib/ReactPropTypesSecret.js"(exports, module) {
    "use strict";
    var ReactPropTypesSecret = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
    module.exports = ReactPropTypesSecret;
  }
});

// node_modules/prop-types/lib/has.js
var require_has = __commonJS({
  "node_modules/prop-types/lib/has.js"(exports, module) {
    module.exports = Function.call.bind(Object.prototype.hasOwnProperty);
  }
});

// node_modules/prop-types/checkPropTypes.js
var require_checkPropTypes = __commonJS({
  "node_modules/prop-types/checkPropTypes.js"(exports, module) {
    "use strict";
    var printWarning = function() {
    };
    if (true) {
      ReactPropTypesSecret = require_ReactPropTypesSecret();
      loggedTypeFailures = {};
      has = require_has();
      printWarning = function(text) {
        var message = "Warning: " + text;
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x) {
        }
      };
    }
    var ReactPropTypesSecret;
    var loggedTypeFailures;
    var has;
    function checkPropTypes(typeSpecs, values2, location, componentName, getStack) {
      if (true) {
        for (var typeSpecName in typeSpecs) {
          if (has(typeSpecs, typeSpecName)) {
            var error;
            try {
              if (typeof typeSpecs[typeSpecName] !== "function") {
                var err = Error(
                  (componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
                );
                err.name = "Invariant Violation";
                throw err;
              }
              error = typeSpecs[typeSpecName](values2, typeSpecName, componentName, location, null, ReactPropTypesSecret);
            } catch (ex) {
              error = ex;
            }
            if (error && !(error instanceof Error)) {
              printWarning(
                (componentName || "React class") + ": type specification of " + location + " `" + typeSpecName + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof error + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
              );
            }
            if (error instanceof Error && !(error.message in loggedTypeFailures)) {
              loggedTypeFailures[error.message] = true;
              var stack = getStack ? getStack() : "";
              printWarning(
                "Failed " + location + " type: " + error.message + (stack != null ? stack : "")
              );
            }
          }
        }
      }
    }
    checkPropTypes.resetWarningCache = function() {
      if (true) {
        loggedTypeFailures = {};
      }
    };
    module.exports = checkPropTypes;
  }
});

// node_modules/prop-types/factoryWithTypeCheckers.js
var require_factoryWithTypeCheckers = __commonJS({
  "node_modules/prop-types/factoryWithTypeCheckers.js"(exports, module) {
    "use strict";
    var ReactIs2 = require_react_is2();
    var assign = require_object_assign();
    var ReactPropTypesSecret = require_ReactPropTypesSecret();
    var has = require_has();
    var checkPropTypes = require_checkPropTypes();
    var printWarning = function() {
    };
    if (true) {
      printWarning = function(text) {
        var message = "Warning: " + text;
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x) {
        }
      };
    }
    function emptyFunctionThatReturnsNull() {
      return null;
    }
    module.exports = function(isValidElement5, throwOnDirectAccess) {
      var ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
      var FAUX_ITERATOR_SYMBOL = "@@iterator";
      function getIteratorFn(maybeIterable) {
        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
        if (typeof iteratorFn === "function") {
          return iteratorFn;
        }
      }
      var ANONYMOUS = "<<anonymous>>";
      var ReactPropTypes = {
        array: createPrimitiveTypeChecker("array"),
        bigint: createPrimitiveTypeChecker("bigint"),
        bool: createPrimitiveTypeChecker("boolean"),
        func: createPrimitiveTypeChecker("function"),
        number: createPrimitiveTypeChecker("number"),
        object: createPrimitiveTypeChecker("object"),
        string: createPrimitiveTypeChecker("string"),
        symbol: createPrimitiveTypeChecker("symbol"),
        any: createAnyTypeChecker(),
        arrayOf: createArrayOfTypeChecker,
        element: createElementTypeChecker(),
        elementType: createElementTypeTypeChecker(),
        instanceOf: createInstanceTypeChecker,
        node: createNodeChecker(),
        objectOf: createObjectOfTypeChecker,
        oneOf: createEnumTypeChecker,
        oneOfType: createUnionTypeChecker,
        shape: createShapeTypeChecker,
        exact: createStrictShapeTypeChecker
      };
      function is(x, y) {
        if (x === y) {
          return x !== 0 || 1 / x === 1 / y;
        } else {
          return x !== x && y !== y;
        }
      }
      function PropTypeError(message, data) {
        this.message = message;
        this.data = data && typeof data === "object" ? data : {};
        this.stack = "";
      }
      PropTypeError.prototype = Error.prototype;
      function createChainableTypeChecker(validate) {
        if (true) {
          var manualPropTypeCallCache = {};
          var manualPropTypeWarningCount = 0;
        }
        function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
          componentName = componentName || ANONYMOUS;
          propFullName = propFullName || propName;
          if (secret !== ReactPropTypesSecret) {
            if (throwOnDirectAccess) {
              var err = new Error(
                "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
              );
              err.name = "Invariant Violation";
              throw err;
            } else if (typeof console !== "undefined") {
              var cacheKey = componentName + ":" + propName;
              if (!manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors
              manualPropTypeWarningCount < 3) {
                printWarning(
                  "You are manually calling a React.PropTypes validation function for the `" + propFullName + "` prop on `" + componentName + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
                );
                manualPropTypeCallCache[cacheKey] = true;
                manualPropTypeWarningCount++;
              }
            }
          }
          if (props[propName] == null) {
            if (isRequired) {
              if (props[propName] === null) {
                return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required " + ("in `" + componentName + "`, but its value is `null`."));
              }
              return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required in " + ("`" + componentName + "`, but its value is `undefined`."));
            }
            return null;
          } else {
            return validate(props, propName, componentName, location, propFullName);
          }
        }
        var chainedCheckType = checkType.bind(null, false);
        chainedCheckType.isRequired = checkType.bind(null, true);
        return chainedCheckType;
      }
      function createPrimitiveTypeChecker(expectedType) {
        function validate(props, propName, componentName, location, propFullName, secret) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== expectedType) {
            var preciseType = getPreciseType(propValue);
            return new PropTypeError(
              "Invalid " + location + " `" + propFullName + "` of type " + ("`" + preciseType + "` supplied to `" + componentName + "`, expected ") + ("`" + expectedType + "`."),
              { expectedType }
            );
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createAnyTypeChecker() {
        return createChainableTypeChecker(emptyFunctionThatReturnsNull);
      }
      function createArrayOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside arrayOf.");
          }
          var propValue = props[propName];
          if (!Array.isArray(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an array."));
          }
          for (var i = 0; i < propValue.length; i++) {
            var error = typeChecker(propValue, i, componentName, location, propFullName + "[" + i + "]", ReactPropTypesSecret);
            if (error instanceof Error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!isValidElement5(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!ReactIs2.isValidElementType(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement type."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createInstanceTypeChecker(expectedClass) {
        function validate(props, propName, componentName, location, propFullName) {
          if (!(props[propName] instanceof expectedClass)) {
            var expectedClassName = expectedClass.name || ANONYMOUS;
            var actualClassName = getClassName2(props[propName]);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + actualClassName + "` supplied to `" + componentName + "`, expected ") + ("instance of `" + expectedClassName + "`."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createEnumTypeChecker(expectedValues) {
        if (!Array.isArray(expectedValues)) {
          if (true) {
            if (arguments.length > 1) {
              printWarning(
                "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
              );
            } else {
              printWarning("Invalid argument supplied to oneOf, expected an array.");
            }
          }
          return emptyFunctionThatReturnsNull;
        }
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          for (var i = 0; i < expectedValues.length; i++) {
            if (is(propValue, expectedValues[i])) {
              return null;
            }
          }
          var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
            var type = getPreciseType(value);
            if (type === "symbol") {
              return String(value);
            }
            return value;
          });
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` of value `" + String(propValue) + "` " + ("supplied to `" + componentName + "`, expected one of " + valuesString + "."));
        }
        return createChainableTypeChecker(validate);
      }
      function createObjectOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside objectOf.");
          }
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an object."));
          }
          for (var key in propValue) {
            if (has(propValue, key)) {
              var error = typeChecker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
              if (error instanceof Error) {
                return error;
              }
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createUnionTypeChecker(arrayOfTypeCheckers) {
        if (!Array.isArray(arrayOfTypeCheckers)) {
          true ? printWarning("Invalid argument supplied to oneOfType, expected an instance of array.") : void 0;
          return emptyFunctionThatReturnsNull;
        }
        for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
          var checker = arrayOfTypeCheckers[i];
          if (typeof checker !== "function") {
            printWarning(
              "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + getPostfixForTypeWarning(checker) + " at index " + i + "."
            );
            return emptyFunctionThatReturnsNull;
          }
        }
        function validate(props, propName, componentName, location, propFullName) {
          var expectedTypes = [];
          for (var i2 = 0; i2 < arrayOfTypeCheckers.length; i2++) {
            var checker2 = arrayOfTypeCheckers[i2];
            var checkerResult = checker2(props, propName, componentName, location, propFullName, ReactPropTypesSecret);
            if (checkerResult == null) {
              return null;
            }
            if (checkerResult.data && has(checkerResult.data, "expectedType")) {
              expectedTypes.push(checkerResult.data.expectedType);
            }
          }
          var expectedTypesMessage = expectedTypes.length > 0 ? ", expected one of type [" + expectedTypes.join(", ") + "]" : "";
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`" + expectedTypesMessage + "."));
        }
        return createChainableTypeChecker(validate);
      }
      function createNodeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          if (!isNode(props[propName])) {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`, expected a ReactNode."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function invalidValidatorError(componentName, location, propFullName, key, type) {
        return new PropTypeError(
          (componentName || "React class") + ": " + location + " type `" + propFullName + "." + key + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + type + "`."
        );
      }
      function createShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          for (var key in shapeTypes) {
            var checker = shapeTypes[key];
            if (typeof checker !== "function") {
              return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
            }
            var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createStrictShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          var allKeys = assign({}, props[propName], shapeTypes);
          for (var key in allKeys) {
            var checker = shapeTypes[key];
            if (has(shapeTypes, key) && typeof checker !== "function") {
              return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
            }
            if (!checker) {
              return new PropTypeError(
                "Invalid " + location + " `" + propFullName + "` key `" + key + "` supplied to `" + componentName + "`.\nBad object: " + JSON.stringify(props[propName], null, "  ") + "\nValid keys: " + JSON.stringify(Object.keys(shapeTypes), null, "  ")
              );
            }
            var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function isNode(propValue) {
        switch (typeof propValue) {
          case "number":
          case "string":
          case "undefined":
            return true;
          case "boolean":
            return !propValue;
          case "object":
            if (Array.isArray(propValue)) {
              return propValue.every(isNode);
            }
            if (propValue === null || isValidElement5(propValue)) {
              return true;
            }
            var iteratorFn = getIteratorFn(propValue);
            if (iteratorFn) {
              var iterator = iteratorFn.call(propValue);
              var step;
              if (iteratorFn !== propValue.entries) {
                while (!(step = iterator.next()).done) {
                  if (!isNode(step.value)) {
                    return false;
                  }
                }
              } else {
                while (!(step = iterator.next()).done) {
                  var entry = step.value;
                  if (entry) {
                    if (!isNode(entry[1])) {
                      return false;
                    }
                  }
                }
              }
            } else {
              return false;
            }
            return true;
          default:
            return false;
        }
      }
      function isSymbol(propType, propValue) {
        if (propType === "symbol") {
          return true;
        }
        if (!propValue) {
          return false;
        }
        if (propValue["@@toStringTag"] === "Symbol") {
          return true;
        }
        if (typeof Symbol === "function" && propValue instanceof Symbol) {
          return true;
        }
        return false;
      }
      function getPropType(propValue) {
        var propType = typeof propValue;
        if (Array.isArray(propValue)) {
          return "array";
        }
        if (propValue instanceof RegExp) {
          return "object";
        }
        if (isSymbol(propType, propValue)) {
          return "symbol";
        }
        return propType;
      }
      function getPreciseType(propValue) {
        if (typeof propValue === "undefined" || propValue === null) {
          return "" + propValue;
        }
        var propType = getPropType(propValue);
        if (propType === "object") {
          if (propValue instanceof Date) {
            return "date";
          } else if (propValue instanceof RegExp) {
            return "regexp";
          }
        }
        return propType;
      }
      function getPostfixForTypeWarning(value) {
        var type = getPreciseType(value);
        switch (type) {
          case "array":
          case "object":
            return "an " + type;
          case "boolean":
          case "date":
          case "regexp":
            return "a " + type;
          default:
            return type;
        }
      }
      function getClassName2(propValue) {
        if (!propValue.constructor || !propValue.constructor.name) {
          return ANONYMOUS;
        }
        return propValue.constructor.name;
      }
      ReactPropTypes.checkPropTypes = checkPropTypes;
      ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
      ReactPropTypes.PropTypes = ReactPropTypes;
      return ReactPropTypes;
    };
  }
});

// node_modules/prop-types/index.js
var require_prop_types = __commonJS({
  "node_modules/prop-types/index.js"(exports, module) {
    if (true) {
      ReactIs2 = require_react_is2();
      throwOnDirectAccess = true;
      module.exports = require_factoryWithTypeCheckers()(ReactIs2.isElement, throwOnDirectAccess);
    } else {
      module.exports = null();
    }
    var ReactIs2;
    var throwOnDirectAccess;
  }
});

// node_modules/@fluentui/react-teaching-popover/node_modules/scheduler/cjs/scheduler.development.js
var require_scheduler_development12 = __commonJS({
  "node_modules/@fluentui/react-teaching-popover/node_modules/scheduler/cjs/scheduler.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
        }
        var enableSchedulerDebugging = false;
        var enableProfiling = false;
        var frameYieldMs = 5;
        function push(heap, node) {
          var index = heap.length;
          heap.push(node);
          siftUp(heap, node, index);
        }
        function peek(heap) {
          return heap.length === 0 ? null : heap[0];
        }
        function pop(heap) {
          if (heap.length === 0) {
            return null;
          }
          var first = heap[0];
          var last = heap.pop();
          if (last !== first) {
            heap[0] = last;
            siftDown(heap, last, 0);
          }
          return first;
        }
        function siftUp(heap, node, i) {
          var index = i;
          while (index > 0) {
            var parentIndex = index - 1 >>> 1;
            var parent = heap[parentIndex];
            if (compare(parent, node) > 0) {
              heap[parentIndex] = node;
              heap[index] = parent;
              index = parentIndex;
            } else {
              return;
            }
          }
        }
        function siftDown(heap, node, i) {
          var index = i;
          var length = heap.length;
          var halfLength = length >>> 1;
          while (index < halfLength) {
            var leftIndex = (index + 1) * 2 - 1;
            var left = heap[leftIndex];
            var rightIndex = leftIndex + 1;
            var right = heap[rightIndex];
            if (compare(left, node) < 0) {
              if (rightIndex < length && compare(right, left) < 0) {
                heap[index] = right;
                heap[rightIndex] = node;
                index = rightIndex;
              } else {
                heap[index] = left;
                heap[leftIndex] = node;
                index = leftIndex;
              }
            } else if (rightIndex < length && compare(right, node) < 0) {
              heap[index] = right;
              heap[rightIndex] = node;
              index = rightIndex;
            } else {
              return;
            }
          }
        }
        function compare(a, b) {
          var diff = a.sortIndex - b.sortIndex;
          return diff !== 0 ? diff : a.id - b.id;
        }
        var ImmediatePriority = 1;
        var UserBlockingPriority = 2;
        var NormalPriority16 = 3;
        var LowPriority = 4;
        var IdlePriority = 5;
        function markTaskErrored(task, ms) {
        }
        var hasPerformanceNow = typeof performance === "object" && typeof performance.now === "function";
        if (hasPerformanceNow) {
          var localPerformance = performance;
          exports.unstable_now = function() {
            return localPerformance.now();
          };
        } else {
          var localDate = Date;
          var initialTime = localDate.now();
          exports.unstable_now = function() {
            return localDate.now() - initialTime;
          };
        }
        var maxSigned31BitInt = 1073741823;
        var IMMEDIATE_PRIORITY_TIMEOUT = -1;
        var USER_BLOCKING_PRIORITY_TIMEOUT = 250;
        var NORMAL_PRIORITY_TIMEOUT = 5e3;
        var LOW_PRIORITY_TIMEOUT = 1e4;
        var IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt;
        var taskQueue = [];
        var timerQueue = [];
        var taskIdCounter = 1;
        var currentTask = null;
        var currentPriorityLevel = NormalPriority16;
        var isPerformingWork = false;
        var isHostCallbackScheduled = false;
        var isHostTimeoutScheduled = false;
        var localSetTimeout = typeof setTimeout === "function" ? setTimeout : null;
        var localClearTimeout = typeof clearTimeout === "function" ? clearTimeout : null;
        var localSetImmediate = typeof setImmediate !== "undefined" ? setImmediate : null;
        var isInputPending = typeof navigator !== "undefined" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 ? navigator.scheduling.isInputPending.bind(navigator.scheduling) : null;
        function advanceTimers(currentTime) {
          var timer = peek(timerQueue);
          while (timer !== null) {
            if (timer.callback === null) {
              pop(timerQueue);
            } else if (timer.startTime <= currentTime) {
              pop(timerQueue);
              timer.sortIndex = timer.expirationTime;
              push(taskQueue, timer);
            } else {
              return;
            }
            timer = peek(timerQueue);
          }
        }
        function handleTimeout(currentTime) {
          isHostTimeoutScheduled = false;
          advanceTimers(currentTime);
          if (!isHostCallbackScheduled) {
            if (peek(taskQueue) !== null) {
              isHostCallbackScheduled = true;
              requestHostCallback(flushWork);
            } else {
              var firstTimer = peek(timerQueue);
              if (firstTimer !== null) {
                requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
              }
            }
          }
        }
        function flushWork(hasTimeRemaining, initialTime2) {
          isHostCallbackScheduled = false;
          if (isHostTimeoutScheduled) {
            isHostTimeoutScheduled = false;
            cancelHostTimeout();
          }
          isPerformingWork = true;
          var previousPriorityLevel = currentPriorityLevel;
          try {
            if (enableProfiling) {
              try {
                return workLoop(hasTimeRemaining, initialTime2);
              } catch (error) {
                if (currentTask !== null) {
                  var currentTime = exports.unstable_now();
                  markTaskErrored(currentTask, currentTime);
                  currentTask.isQueued = false;
                }
                throw error;
              }
            } else {
              return workLoop(hasTimeRemaining, initialTime2);
            }
          } finally {
            currentTask = null;
            currentPriorityLevel = previousPriorityLevel;
            isPerformingWork = false;
          }
        }
        function workLoop(hasTimeRemaining, initialTime2) {
          var currentTime = initialTime2;
          advanceTimers(currentTime);
          currentTask = peek(taskQueue);
          while (currentTask !== null && !enableSchedulerDebugging) {
            if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {
              break;
            }
            var callback = currentTask.callback;
            if (typeof callback === "function") {
              currentTask.callback = null;
              currentPriorityLevel = currentTask.priorityLevel;
              var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;
              var continuationCallback = callback(didUserCallbackTimeout);
              currentTime = exports.unstable_now();
              if (typeof continuationCallback === "function") {
                currentTask.callback = continuationCallback;
              } else {
                if (currentTask === peek(taskQueue)) {
                  pop(taskQueue);
                }
              }
              advanceTimers(currentTime);
            } else {
              pop(taskQueue);
            }
            currentTask = peek(taskQueue);
          }
          if (currentTask !== null) {
            return true;
          } else {
            var firstTimer = peek(timerQueue);
            if (firstTimer !== null) {
              requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
            }
            return false;
          }
        }
        function unstable_runWithPriority(priorityLevel, eventHandler) {
          switch (priorityLevel) {
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority16:
            case LowPriority:
            case IdlePriority:
              break;
            default:
              priorityLevel = NormalPriority16;
          }
          var previousPriorityLevel = currentPriorityLevel;
          currentPriorityLevel = priorityLevel;
          try {
            return eventHandler();
          } finally {
            currentPriorityLevel = previousPriorityLevel;
          }
        }
        function unstable_next(eventHandler) {
          var priorityLevel;
          switch (currentPriorityLevel) {
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority16:
              priorityLevel = NormalPriority16;
              break;
            default:
              priorityLevel = currentPriorityLevel;
              break;
          }
          var previousPriorityLevel = currentPriorityLevel;
          currentPriorityLevel = priorityLevel;
          try {
            return eventHandler();
          } finally {
            currentPriorityLevel = previousPriorityLevel;
          }
        }
        function unstable_wrapCallback(callback) {
          var parentPriorityLevel = currentPriorityLevel;
          return function() {
            var previousPriorityLevel = currentPriorityLevel;
            currentPriorityLevel = parentPriorityLevel;
            try {
              return callback.apply(this, arguments);
            } finally {
              currentPriorityLevel = previousPriorityLevel;
            }
          };
        }
        function unstable_scheduleCallback(priorityLevel, callback, options) {
          var currentTime = exports.unstable_now();
          var startTime2;
          if (typeof options === "object" && options !== null) {
            var delay = options.delay;
            if (typeof delay === "number" && delay > 0) {
              startTime2 = currentTime + delay;
            } else {
              startTime2 = currentTime;
            }
          } else {
            startTime2 = currentTime;
          }
          var timeout2;
          switch (priorityLevel) {
            case ImmediatePriority:
              timeout2 = IMMEDIATE_PRIORITY_TIMEOUT;
              break;
            case UserBlockingPriority:
              timeout2 = USER_BLOCKING_PRIORITY_TIMEOUT;
              break;
            case IdlePriority:
              timeout2 = IDLE_PRIORITY_TIMEOUT;
              break;
            case LowPriority:
              timeout2 = LOW_PRIORITY_TIMEOUT;
              break;
            case NormalPriority16:
            default:
              timeout2 = NORMAL_PRIORITY_TIMEOUT;
              break;
          }
          var expirationTime = startTime2 + timeout2;
          var newTask = {
            id: taskIdCounter++,
            callback,
            priorityLevel,
            startTime: startTime2,
            expirationTime,
            sortIndex: -1
          };
          if (startTime2 > currentTime) {
            newTask.sortIndex = startTime2;
            push(timerQueue, newTask);
            if (peek(taskQueue) === null && newTask === peek(timerQueue)) {
              if (isHostTimeoutScheduled) {
                cancelHostTimeout();
              } else {
                isHostTimeoutScheduled = true;
              }
              requestHostTimeout(handleTimeout, startTime2 - currentTime);
            }
          } else {
            newTask.sortIndex = expirationTime;
            push(taskQueue, newTask);
            if (!isHostCallbackScheduled && !isPerformingWork) {
              isHostCallbackScheduled = true;
              requestHostCallback(flushWork);
            }
          }
          return newTask;
        }
        function unstable_pauseExecution() {
        }
        function unstable_continueExecution() {
          if (!isHostCallbackScheduled && !isPerformingWork) {
            isHostCallbackScheduled = true;
            requestHostCallback(flushWork);
          }
        }
        function unstable_getFirstCallbackNode() {
          return peek(taskQueue);
        }
        function unstable_cancelCallback(task) {
          task.callback = null;
        }
        function unstable_getCurrentPriorityLevel() {
          return currentPriorityLevel;
        }
        var isMessageLoopRunning = false;
        var scheduledHostCallback = null;
        var taskTimeoutID = -1;
        var frameInterval = frameYieldMs;
        var startTime = -1;
        function shouldYieldToHost() {
          var timeElapsed = exports.unstable_now() - startTime;
          if (timeElapsed < frameInterval) {
            return false;
          }
          return true;
        }
        function requestPaint() {
        }
        function forceFrameRate(fps) {
          if (fps < 0 || fps > 125) {
            console["error"]("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported");
            return;
          }
          if (fps > 0) {
            frameInterval = Math.floor(1e3 / fps);
          } else {
            frameInterval = frameYieldMs;
          }
        }
        var performWorkUntilDeadline = function() {
          if (scheduledHostCallback !== null) {
            var currentTime = exports.unstable_now();
            startTime = currentTime;
            var hasTimeRemaining = true;
            var hasMoreWork = true;
            try {
              hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);
            } finally {
              if (hasMoreWork) {
                schedulePerformWorkUntilDeadline();
              } else {
                isMessageLoopRunning = false;
                scheduledHostCallback = null;
              }
            }
          } else {
            isMessageLoopRunning = false;
          }
        };
        var schedulePerformWorkUntilDeadline;
        if (typeof localSetImmediate === "function") {
          schedulePerformWorkUntilDeadline = function() {
            localSetImmediate(performWorkUntilDeadline);
          };
        } else if (typeof MessageChannel !== "undefined") {
          var channel = new MessageChannel();
          var port = channel.port2;
          channel.port1.onmessage = performWorkUntilDeadline;
          schedulePerformWorkUntilDeadline = function() {
            port.postMessage(null);
          };
        } else {
          schedulePerformWorkUntilDeadline = function() {
            localSetTimeout(performWorkUntilDeadline, 0);
          };
        }
        function requestHostCallback(callback) {
          scheduledHostCallback = callback;
          if (!isMessageLoopRunning) {
            isMessageLoopRunning = true;
            schedulePerformWorkUntilDeadline();
          }
        }
        function requestHostTimeout(callback, ms) {
          taskTimeoutID = localSetTimeout(function() {
            callback(exports.unstable_now());
          }, ms);
        }
        function cancelHostTimeout() {
          localClearTimeout(taskTimeoutID);
          taskTimeoutID = -1;
        }
        var unstable_requestPaint = requestPaint;
        var unstable_Profiling = null;
        exports.unstable_IdlePriority = IdlePriority;
        exports.unstable_ImmediatePriority = ImmediatePriority;
        exports.unstable_LowPriority = LowPriority;
        exports.unstable_NormalPriority = NormalPriority16;
        exports.unstable_Profiling = unstable_Profiling;
        exports.unstable_UserBlockingPriority = UserBlockingPriority;
        exports.unstable_cancelCallback = unstable_cancelCallback;
        exports.unstable_continueExecution = unstable_continueExecution;
        exports.unstable_forceFrameRate = forceFrameRate;
        exports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;
        exports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;
        exports.unstable_next = unstable_next;
        exports.unstable_pauseExecution = unstable_pauseExecution;
        exports.unstable_requestPaint = unstable_requestPaint;
        exports.unstable_runWithPriority = unstable_runWithPriority;
        exports.unstable_scheduleCallback = unstable_scheduleCallback;
        exports.unstable_shouldYield = shouldYieldToHost;
        exports.unstable_wrapCallback = unstable_wrapCallback;
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
        }
      })();
    }
  }
});

// node_modules/@fluentui/react-teaching-popover/node_modules/scheduler/index.js
var require_scheduler12 = __commonJS({
  "node_modules/@fluentui/react-teaching-popover/node_modules/scheduler/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_scheduler_development12();
    }
  }
});

// node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js
var require_use_sync_external_store_shim_development = __commonJS({
  "node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
        }
        var React598 = require_react();
        var ReactSharedInternals = React598.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
        function error(format) {
          {
            {
              for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                args[_key2 - 1] = arguments[_key2];
              }
              printWarning("error", format, args);
            }
          }
        }
        function printWarning(level, format, args) {
          {
            var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
            var stack = ReactDebugCurrentFrame.getStackAddendum();
            if (stack !== "") {
              format += "%s";
              args = args.concat([stack]);
            }
            var argsWithFormat = args.map(function(item) {
              return String(item);
            });
            argsWithFormat.unshift("Warning: " + format);
            Function.prototype.apply.call(console[level], console, argsWithFormat);
          }
        }
        function is(x, y) {
          return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y;
        }
        var objectIs = typeof Object.is === "function" ? Object.is : is;
        var useState46 = React598.useState, useEffect38 = React598.useEffect, useLayoutEffect = React598.useLayoutEffect, useDebugValue = React598.useDebugValue;
        var didWarnOld18Alpha = false;
        var didWarnUncachedGetSnapshot = false;
        function useSyncExternalStore2(subscribe, getSnapshot, getServerSnapshot) {
          {
            if (!didWarnOld18Alpha) {
              if (React598.startTransition !== void 0) {
                didWarnOld18Alpha = true;
                error("You are using an outdated, pre-release alpha of React 18 that does not support useSyncExternalStore. The use-sync-external-store shim will not work correctly. Upgrade to a newer pre-release.");
              }
            }
          }
          var value = getSnapshot();
          {
            if (!didWarnUncachedGetSnapshot) {
              var cachedValue = getSnapshot();
              if (!objectIs(value, cachedValue)) {
                error("The result of getSnapshot should be cached to avoid an infinite loop");
                didWarnUncachedGetSnapshot = true;
              }
            }
          }
          var _useState = useState46({
            inst: {
              value,
              getSnapshot
            }
          }), inst = _useState[0].inst, forceUpdate = _useState[1];
          useLayoutEffect(function() {
            inst.value = value;
            inst.getSnapshot = getSnapshot;
            if (checkIfSnapshotChanged(inst)) {
              forceUpdate({
                inst
              });
            }
          }, [subscribe, value, getSnapshot]);
          useEffect38(function() {
            if (checkIfSnapshotChanged(inst)) {
              forceUpdate({
                inst
              });
            }
            var handleStoreChange = function() {
              if (checkIfSnapshotChanged(inst)) {
                forceUpdate({
                  inst
                });
              }
            };
            return subscribe(handleStoreChange);
          }, [subscribe]);
          useDebugValue(value);
          return value;
        }
        function checkIfSnapshotChanged(inst) {
          var latestGetSnapshot = inst.getSnapshot;
          var prevValue = inst.value;
          try {
            var nextValue = latestGetSnapshot();
            return !objectIs(prevValue, nextValue);
          } catch (error2) {
            return true;
          }
        }
        function useSyncExternalStore$1(subscribe, getSnapshot, getServerSnapshot) {
          return getSnapshot();
        }
        var canUseDOM2 = !!(typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined");
        var isServerEnvironment = !canUseDOM2;
        var shim = isServerEnvironment ? useSyncExternalStore$1 : useSyncExternalStore2;
        var useSyncExternalStore$2 = React598.useSyncExternalStore !== void 0 ? React598.useSyncExternalStore : shim;
        exports.useSyncExternalStore = useSyncExternalStore$2;
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
        }
      })();
    }
  }
});

// node_modules/use-sync-external-store/shim/index.js
var require_shim = __commonJS({
  "node_modules/use-sync-external-store/shim/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_use_sync_external_store_shim_development();
    }
  }
});

// node_modules/@fluentui/react-tag-picker/node_modules/scheduler/cjs/scheduler.development.js
var require_scheduler_development13 = __commonJS({
  "node_modules/@fluentui/react-tag-picker/node_modules/scheduler/cjs/scheduler.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
        }
        var enableSchedulerDebugging = false;
        var enableProfiling = false;
        var frameYieldMs = 5;
        function push(heap, node) {
          var index = heap.length;
          heap.push(node);
          siftUp(heap, node, index);
        }
        function peek(heap) {
          return heap.length === 0 ? null : heap[0];
        }
        function pop(heap) {
          if (heap.length === 0) {
            return null;
          }
          var first = heap[0];
          var last = heap.pop();
          if (last !== first) {
            heap[0] = last;
            siftDown(heap, last, 0);
          }
          return first;
        }
        function siftUp(heap, node, i) {
          var index = i;
          while (index > 0) {
            var parentIndex = index - 1 >>> 1;
            var parent = heap[parentIndex];
            if (compare(parent, node) > 0) {
              heap[parentIndex] = node;
              heap[index] = parent;
              index = parentIndex;
            } else {
              return;
            }
          }
        }
        function siftDown(heap, node, i) {
          var index = i;
          var length = heap.length;
          var halfLength = length >>> 1;
          while (index < halfLength) {
            var leftIndex = (index + 1) * 2 - 1;
            var left = heap[leftIndex];
            var rightIndex = leftIndex + 1;
            var right = heap[rightIndex];
            if (compare(left, node) < 0) {
              if (rightIndex < length && compare(right, left) < 0) {
                heap[index] = right;
                heap[rightIndex] = node;
                index = rightIndex;
              } else {
                heap[index] = left;
                heap[leftIndex] = node;
                index = leftIndex;
              }
            } else if (rightIndex < length && compare(right, node) < 0) {
              heap[index] = right;
              heap[rightIndex] = node;
              index = rightIndex;
            } else {
              return;
            }
          }
        }
        function compare(a, b) {
          var diff = a.sortIndex - b.sortIndex;
          return diff !== 0 ? diff : a.id - b.id;
        }
        var ImmediatePriority = 1;
        var UserBlockingPriority = 2;
        var NormalPriority16 = 3;
        var LowPriority = 4;
        var IdlePriority = 5;
        function markTaskErrored(task, ms) {
        }
        var hasPerformanceNow = typeof performance === "object" && typeof performance.now === "function";
        if (hasPerformanceNow) {
          var localPerformance = performance;
          exports.unstable_now = function() {
            return localPerformance.now();
          };
        } else {
          var localDate = Date;
          var initialTime = localDate.now();
          exports.unstable_now = function() {
            return localDate.now() - initialTime;
          };
        }
        var maxSigned31BitInt = 1073741823;
        var IMMEDIATE_PRIORITY_TIMEOUT = -1;
        var USER_BLOCKING_PRIORITY_TIMEOUT = 250;
        var NORMAL_PRIORITY_TIMEOUT = 5e3;
        var LOW_PRIORITY_TIMEOUT = 1e4;
        var IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt;
        var taskQueue = [];
        var timerQueue = [];
        var taskIdCounter = 1;
        var currentTask = null;
        var currentPriorityLevel = NormalPriority16;
        var isPerformingWork = false;
        var isHostCallbackScheduled = false;
        var isHostTimeoutScheduled = false;
        var localSetTimeout = typeof setTimeout === "function" ? setTimeout : null;
        var localClearTimeout = typeof clearTimeout === "function" ? clearTimeout : null;
        var localSetImmediate = typeof setImmediate !== "undefined" ? setImmediate : null;
        var isInputPending = typeof navigator !== "undefined" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 ? navigator.scheduling.isInputPending.bind(navigator.scheduling) : null;
        function advanceTimers(currentTime) {
          var timer = peek(timerQueue);
          while (timer !== null) {
            if (timer.callback === null) {
              pop(timerQueue);
            } else if (timer.startTime <= currentTime) {
              pop(timerQueue);
              timer.sortIndex = timer.expirationTime;
              push(taskQueue, timer);
            } else {
              return;
            }
            timer = peek(timerQueue);
          }
        }
        function handleTimeout(currentTime) {
          isHostTimeoutScheduled = false;
          advanceTimers(currentTime);
          if (!isHostCallbackScheduled) {
            if (peek(taskQueue) !== null) {
              isHostCallbackScheduled = true;
              requestHostCallback(flushWork);
            } else {
              var firstTimer = peek(timerQueue);
              if (firstTimer !== null) {
                requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
              }
            }
          }
        }
        function flushWork(hasTimeRemaining, initialTime2) {
          isHostCallbackScheduled = false;
          if (isHostTimeoutScheduled) {
            isHostTimeoutScheduled = false;
            cancelHostTimeout();
          }
          isPerformingWork = true;
          var previousPriorityLevel = currentPriorityLevel;
          try {
            if (enableProfiling) {
              try {
                return workLoop(hasTimeRemaining, initialTime2);
              } catch (error) {
                if (currentTask !== null) {
                  var currentTime = exports.unstable_now();
                  markTaskErrored(currentTask, currentTime);
                  currentTask.isQueued = false;
                }
                throw error;
              }
            } else {
              return workLoop(hasTimeRemaining, initialTime2);
            }
          } finally {
            currentTask = null;
            currentPriorityLevel = previousPriorityLevel;
            isPerformingWork = false;
          }
        }
        function workLoop(hasTimeRemaining, initialTime2) {
          var currentTime = initialTime2;
          advanceTimers(currentTime);
          currentTask = peek(taskQueue);
          while (currentTask !== null && !enableSchedulerDebugging) {
            if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {
              break;
            }
            var callback = currentTask.callback;
            if (typeof callback === "function") {
              currentTask.callback = null;
              currentPriorityLevel = currentTask.priorityLevel;
              var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;
              var continuationCallback = callback(didUserCallbackTimeout);
              currentTime = exports.unstable_now();
              if (typeof continuationCallback === "function") {
                currentTask.callback = continuationCallback;
              } else {
                if (currentTask === peek(taskQueue)) {
                  pop(taskQueue);
                }
              }
              advanceTimers(currentTime);
            } else {
              pop(taskQueue);
            }
            currentTask = peek(taskQueue);
          }
          if (currentTask !== null) {
            return true;
          } else {
            var firstTimer = peek(timerQueue);
            if (firstTimer !== null) {
              requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
            }
            return false;
          }
        }
        function unstable_runWithPriority(priorityLevel, eventHandler) {
          switch (priorityLevel) {
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority16:
            case LowPriority:
            case IdlePriority:
              break;
            default:
              priorityLevel = NormalPriority16;
          }
          var previousPriorityLevel = currentPriorityLevel;
          currentPriorityLevel = priorityLevel;
          try {
            return eventHandler();
          } finally {
            currentPriorityLevel = previousPriorityLevel;
          }
        }
        function unstable_next(eventHandler) {
          var priorityLevel;
          switch (currentPriorityLevel) {
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority16:
              priorityLevel = NormalPriority16;
              break;
            default:
              priorityLevel = currentPriorityLevel;
              break;
          }
          var previousPriorityLevel = currentPriorityLevel;
          currentPriorityLevel = priorityLevel;
          try {
            return eventHandler();
          } finally {
            currentPriorityLevel = previousPriorityLevel;
          }
        }
        function unstable_wrapCallback(callback) {
          var parentPriorityLevel = currentPriorityLevel;
          return function() {
            var previousPriorityLevel = currentPriorityLevel;
            currentPriorityLevel = parentPriorityLevel;
            try {
              return callback.apply(this, arguments);
            } finally {
              currentPriorityLevel = previousPriorityLevel;
            }
          };
        }
        function unstable_scheduleCallback(priorityLevel, callback, options) {
          var currentTime = exports.unstable_now();
          var startTime2;
          if (typeof options === "object" && options !== null) {
            var delay = options.delay;
            if (typeof delay === "number" && delay > 0) {
              startTime2 = currentTime + delay;
            } else {
              startTime2 = currentTime;
            }
          } else {
            startTime2 = currentTime;
          }
          var timeout2;
          switch (priorityLevel) {
            case ImmediatePriority:
              timeout2 = IMMEDIATE_PRIORITY_TIMEOUT;
              break;
            case UserBlockingPriority:
              timeout2 = USER_BLOCKING_PRIORITY_TIMEOUT;
              break;
            case IdlePriority:
              timeout2 = IDLE_PRIORITY_TIMEOUT;
              break;
            case LowPriority:
              timeout2 = LOW_PRIORITY_TIMEOUT;
              break;
            case NormalPriority16:
            default:
              timeout2 = NORMAL_PRIORITY_TIMEOUT;
              break;
          }
          var expirationTime = startTime2 + timeout2;
          var newTask = {
            id: taskIdCounter++,
            callback,
            priorityLevel,
            startTime: startTime2,
            expirationTime,
            sortIndex: -1
          };
          if (startTime2 > currentTime) {
            newTask.sortIndex = startTime2;
            push(timerQueue, newTask);
            if (peek(taskQueue) === null && newTask === peek(timerQueue)) {
              if (isHostTimeoutScheduled) {
                cancelHostTimeout();
              } else {
                isHostTimeoutScheduled = true;
              }
              requestHostTimeout(handleTimeout, startTime2 - currentTime);
            }
          } else {
            newTask.sortIndex = expirationTime;
            push(taskQueue, newTask);
            if (!isHostCallbackScheduled && !isPerformingWork) {
              isHostCallbackScheduled = true;
              requestHostCallback(flushWork);
            }
          }
          return newTask;
        }
        function unstable_pauseExecution() {
        }
        function unstable_continueExecution() {
          if (!isHostCallbackScheduled && !isPerformingWork) {
            isHostCallbackScheduled = true;
            requestHostCallback(flushWork);
          }
        }
        function unstable_getFirstCallbackNode() {
          return peek(taskQueue);
        }
        function unstable_cancelCallback(task) {
          task.callback = null;
        }
        function unstable_getCurrentPriorityLevel() {
          return currentPriorityLevel;
        }
        var isMessageLoopRunning = false;
        var scheduledHostCallback = null;
        var taskTimeoutID = -1;
        var frameInterval = frameYieldMs;
        var startTime = -1;
        function shouldYieldToHost() {
          var timeElapsed = exports.unstable_now() - startTime;
          if (timeElapsed < frameInterval) {
            return false;
          }
          return true;
        }
        function requestPaint() {
        }
        function forceFrameRate(fps) {
          if (fps < 0 || fps > 125) {
            console["error"]("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported");
            return;
          }
          if (fps > 0) {
            frameInterval = Math.floor(1e3 / fps);
          } else {
            frameInterval = frameYieldMs;
          }
        }
        var performWorkUntilDeadline = function() {
          if (scheduledHostCallback !== null) {
            var currentTime = exports.unstable_now();
            startTime = currentTime;
            var hasTimeRemaining = true;
            var hasMoreWork = true;
            try {
              hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);
            } finally {
              if (hasMoreWork) {
                schedulePerformWorkUntilDeadline();
              } else {
                isMessageLoopRunning = false;
                scheduledHostCallback = null;
              }
            }
          } else {
            isMessageLoopRunning = false;
          }
        };
        var schedulePerformWorkUntilDeadline;
        if (typeof localSetImmediate === "function") {
          schedulePerformWorkUntilDeadline = function() {
            localSetImmediate(performWorkUntilDeadline);
          };
        } else if (typeof MessageChannel !== "undefined") {
          var channel = new MessageChannel();
          var port = channel.port2;
          channel.port1.onmessage = performWorkUntilDeadline;
          schedulePerformWorkUntilDeadline = function() {
            port.postMessage(null);
          };
        } else {
          schedulePerformWorkUntilDeadline = function() {
            localSetTimeout(performWorkUntilDeadline, 0);
          };
        }
        function requestHostCallback(callback) {
          scheduledHostCallback = callback;
          if (!isMessageLoopRunning) {
            isMessageLoopRunning = true;
            schedulePerformWorkUntilDeadline();
          }
        }
        function requestHostTimeout(callback, ms) {
          taskTimeoutID = localSetTimeout(function() {
            callback(exports.unstable_now());
          }, ms);
        }
        function cancelHostTimeout() {
          localClearTimeout(taskTimeoutID);
          taskTimeoutID = -1;
        }
        var unstable_requestPaint = requestPaint;
        var unstable_Profiling = null;
        exports.unstable_IdlePriority = IdlePriority;
        exports.unstable_ImmediatePriority = ImmediatePriority;
        exports.unstable_LowPriority = LowPriority;
        exports.unstable_NormalPriority = NormalPriority16;
        exports.unstable_Profiling = unstable_Profiling;
        exports.unstable_UserBlockingPriority = UserBlockingPriority;
        exports.unstable_cancelCallback = unstable_cancelCallback;
        exports.unstable_continueExecution = unstable_continueExecution;
        exports.unstable_forceFrameRate = forceFrameRate;
        exports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;
        exports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;
        exports.unstable_next = unstable_next;
        exports.unstable_pauseExecution = unstable_pauseExecution;
        exports.unstable_requestPaint = unstable_requestPaint;
        exports.unstable_runWithPriority = unstable_runWithPriority;
        exports.unstable_scheduleCallback = unstable_scheduleCallback;
        exports.unstable_shouldYield = shouldYieldToHost;
        exports.unstable_wrapCallback = unstable_wrapCallback;
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
        }
      })();
    }
  }
});

// node_modules/@fluentui/react-tag-picker/node_modules/scheduler/index.js
var require_scheduler13 = __commonJS({
  "node_modules/@fluentui/react-tag-picker/node_modules/scheduler/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_scheduler_development13();
    }
  }
});

// node_modules/@fluentui/react-swatch-picker/node_modules/scheduler/cjs/scheduler.development.js
var require_scheduler_development14 = __commonJS({
  "node_modules/@fluentui/react-swatch-picker/node_modules/scheduler/cjs/scheduler.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
        }
        var enableSchedulerDebugging = false;
        var enableProfiling = false;
        var frameYieldMs = 5;
        function push(heap, node) {
          var index = heap.length;
          heap.push(node);
          siftUp(heap, node, index);
        }
        function peek(heap) {
          return heap.length === 0 ? null : heap[0];
        }
        function pop(heap) {
          if (heap.length === 0) {
            return null;
          }
          var first = heap[0];
          var last = heap.pop();
          if (last !== first) {
            heap[0] = last;
            siftDown(heap, last, 0);
          }
          return first;
        }
        function siftUp(heap, node, i) {
          var index = i;
          while (index > 0) {
            var parentIndex = index - 1 >>> 1;
            var parent = heap[parentIndex];
            if (compare(parent, node) > 0) {
              heap[parentIndex] = node;
              heap[index] = parent;
              index = parentIndex;
            } else {
              return;
            }
          }
        }
        function siftDown(heap, node, i) {
          var index = i;
          var length = heap.length;
          var halfLength = length >>> 1;
          while (index < halfLength) {
            var leftIndex = (index + 1) * 2 - 1;
            var left = heap[leftIndex];
            var rightIndex = leftIndex + 1;
            var right = heap[rightIndex];
            if (compare(left, node) < 0) {
              if (rightIndex < length && compare(right, left) < 0) {
                heap[index] = right;
                heap[rightIndex] = node;
                index = rightIndex;
              } else {
                heap[index] = left;
                heap[leftIndex] = node;
                index = leftIndex;
              }
            } else if (rightIndex < length && compare(right, node) < 0) {
              heap[index] = right;
              heap[rightIndex] = node;
              index = rightIndex;
            } else {
              return;
            }
          }
        }
        function compare(a, b) {
          var diff = a.sortIndex - b.sortIndex;
          return diff !== 0 ? diff : a.id - b.id;
        }
        var ImmediatePriority = 1;
        var UserBlockingPriority = 2;
        var NormalPriority16 = 3;
        var LowPriority = 4;
        var IdlePriority = 5;
        function markTaskErrored(task, ms) {
        }
        var hasPerformanceNow = typeof performance === "object" && typeof performance.now === "function";
        if (hasPerformanceNow) {
          var localPerformance = performance;
          exports.unstable_now = function() {
            return localPerformance.now();
          };
        } else {
          var localDate = Date;
          var initialTime = localDate.now();
          exports.unstable_now = function() {
            return localDate.now() - initialTime;
          };
        }
        var maxSigned31BitInt = 1073741823;
        var IMMEDIATE_PRIORITY_TIMEOUT = -1;
        var USER_BLOCKING_PRIORITY_TIMEOUT = 250;
        var NORMAL_PRIORITY_TIMEOUT = 5e3;
        var LOW_PRIORITY_TIMEOUT = 1e4;
        var IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt;
        var taskQueue = [];
        var timerQueue = [];
        var taskIdCounter = 1;
        var currentTask = null;
        var currentPriorityLevel = NormalPriority16;
        var isPerformingWork = false;
        var isHostCallbackScheduled = false;
        var isHostTimeoutScheduled = false;
        var localSetTimeout = typeof setTimeout === "function" ? setTimeout : null;
        var localClearTimeout = typeof clearTimeout === "function" ? clearTimeout : null;
        var localSetImmediate = typeof setImmediate !== "undefined" ? setImmediate : null;
        var isInputPending = typeof navigator !== "undefined" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 ? navigator.scheduling.isInputPending.bind(navigator.scheduling) : null;
        function advanceTimers(currentTime) {
          var timer = peek(timerQueue);
          while (timer !== null) {
            if (timer.callback === null) {
              pop(timerQueue);
            } else if (timer.startTime <= currentTime) {
              pop(timerQueue);
              timer.sortIndex = timer.expirationTime;
              push(taskQueue, timer);
            } else {
              return;
            }
            timer = peek(timerQueue);
          }
        }
        function handleTimeout(currentTime) {
          isHostTimeoutScheduled = false;
          advanceTimers(currentTime);
          if (!isHostCallbackScheduled) {
            if (peek(taskQueue) !== null) {
              isHostCallbackScheduled = true;
              requestHostCallback(flushWork);
            } else {
              var firstTimer = peek(timerQueue);
              if (firstTimer !== null) {
                requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
              }
            }
          }
        }
        function flushWork(hasTimeRemaining, initialTime2) {
          isHostCallbackScheduled = false;
          if (isHostTimeoutScheduled) {
            isHostTimeoutScheduled = false;
            cancelHostTimeout();
          }
          isPerformingWork = true;
          var previousPriorityLevel = currentPriorityLevel;
          try {
            if (enableProfiling) {
              try {
                return workLoop(hasTimeRemaining, initialTime2);
              } catch (error) {
                if (currentTask !== null) {
                  var currentTime = exports.unstable_now();
                  markTaskErrored(currentTask, currentTime);
                  currentTask.isQueued = false;
                }
                throw error;
              }
            } else {
              return workLoop(hasTimeRemaining, initialTime2);
            }
          } finally {
            currentTask = null;
            currentPriorityLevel = previousPriorityLevel;
            isPerformingWork = false;
          }
        }
        function workLoop(hasTimeRemaining, initialTime2) {
          var currentTime = initialTime2;
          advanceTimers(currentTime);
          currentTask = peek(taskQueue);
          while (currentTask !== null && !enableSchedulerDebugging) {
            if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {
              break;
            }
            var callback = currentTask.callback;
            if (typeof callback === "function") {
              currentTask.callback = null;
              currentPriorityLevel = currentTask.priorityLevel;
              var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;
              var continuationCallback = callback(didUserCallbackTimeout);
              currentTime = exports.unstable_now();
              if (typeof continuationCallback === "function") {
                currentTask.callback = continuationCallback;
              } else {
                if (currentTask === peek(taskQueue)) {
                  pop(taskQueue);
                }
              }
              advanceTimers(currentTime);
            } else {
              pop(taskQueue);
            }
            currentTask = peek(taskQueue);
          }
          if (currentTask !== null) {
            return true;
          } else {
            var firstTimer = peek(timerQueue);
            if (firstTimer !== null) {
              requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
            }
            return false;
          }
        }
        function unstable_runWithPriority(priorityLevel, eventHandler) {
          switch (priorityLevel) {
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority16:
            case LowPriority:
            case IdlePriority:
              break;
            default:
              priorityLevel = NormalPriority16;
          }
          var previousPriorityLevel = currentPriorityLevel;
          currentPriorityLevel = priorityLevel;
          try {
            return eventHandler();
          } finally {
            currentPriorityLevel = previousPriorityLevel;
          }
        }
        function unstable_next(eventHandler) {
          var priorityLevel;
          switch (currentPriorityLevel) {
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority16:
              priorityLevel = NormalPriority16;
              break;
            default:
              priorityLevel = currentPriorityLevel;
              break;
          }
          var previousPriorityLevel = currentPriorityLevel;
          currentPriorityLevel = priorityLevel;
          try {
            return eventHandler();
          } finally {
            currentPriorityLevel = previousPriorityLevel;
          }
        }
        function unstable_wrapCallback(callback) {
          var parentPriorityLevel = currentPriorityLevel;
          return function() {
            var previousPriorityLevel = currentPriorityLevel;
            currentPriorityLevel = parentPriorityLevel;
            try {
              return callback.apply(this, arguments);
            } finally {
              currentPriorityLevel = previousPriorityLevel;
            }
          };
        }
        function unstable_scheduleCallback(priorityLevel, callback, options) {
          var currentTime = exports.unstable_now();
          var startTime2;
          if (typeof options === "object" && options !== null) {
            var delay = options.delay;
            if (typeof delay === "number" && delay > 0) {
              startTime2 = currentTime + delay;
            } else {
              startTime2 = currentTime;
            }
          } else {
            startTime2 = currentTime;
          }
          var timeout2;
          switch (priorityLevel) {
            case ImmediatePriority:
              timeout2 = IMMEDIATE_PRIORITY_TIMEOUT;
              break;
            case UserBlockingPriority:
              timeout2 = USER_BLOCKING_PRIORITY_TIMEOUT;
              break;
            case IdlePriority:
              timeout2 = IDLE_PRIORITY_TIMEOUT;
              break;
            case LowPriority:
              timeout2 = LOW_PRIORITY_TIMEOUT;
              break;
            case NormalPriority16:
            default:
              timeout2 = NORMAL_PRIORITY_TIMEOUT;
              break;
          }
          var expirationTime = startTime2 + timeout2;
          var newTask = {
            id: taskIdCounter++,
            callback,
            priorityLevel,
            startTime: startTime2,
            expirationTime,
            sortIndex: -1
          };
          if (startTime2 > currentTime) {
            newTask.sortIndex = startTime2;
            push(timerQueue, newTask);
            if (peek(taskQueue) === null && newTask === peek(timerQueue)) {
              if (isHostTimeoutScheduled) {
                cancelHostTimeout();
              } else {
                isHostTimeoutScheduled = true;
              }
              requestHostTimeout(handleTimeout, startTime2 - currentTime);
            }
          } else {
            newTask.sortIndex = expirationTime;
            push(taskQueue, newTask);
            if (!isHostCallbackScheduled && !isPerformingWork) {
              isHostCallbackScheduled = true;
              requestHostCallback(flushWork);
            }
          }
          return newTask;
        }
        function unstable_pauseExecution() {
        }
        function unstable_continueExecution() {
          if (!isHostCallbackScheduled && !isPerformingWork) {
            isHostCallbackScheduled = true;
            requestHostCallback(flushWork);
          }
        }
        function unstable_getFirstCallbackNode() {
          return peek(taskQueue);
        }
        function unstable_cancelCallback(task) {
          task.callback = null;
        }
        function unstable_getCurrentPriorityLevel() {
          return currentPriorityLevel;
        }
        var isMessageLoopRunning = false;
        var scheduledHostCallback = null;
        var taskTimeoutID = -1;
        var frameInterval = frameYieldMs;
        var startTime = -1;
        function shouldYieldToHost() {
          var timeElapsed = exports.unstable_now() - startTime;
          if (timeElapsed < frameInterval) {
            return false;
          }
          return true;
        }
        function requestPaint() {
        }
        function forceFrameRate(fps) {
          if (fps < 0 || fps > 125) {
            console["error"]("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported");
            return;
          }
          if (fps > 0) {
            frameInterval = Math.floor(1e3 / fps);
          } else {
            frameInterval = frameYieldMs;
          }
        }
        var performWorkUntilDeadline = function() {
          if (scheduledHostCallback !== null) {
            var currentTime = exports.unstable_now();
            startTime = currentTime;
            var hasTimeRemaining = true;
            var hasMoreWork = true;
            try {
              hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);
            } finally {
              if (hasMoreWork) {
                schedulePerformWorkUntilDeadline();
              } else {
                isMessageLoopRunning = false;
                scheduledHostCallback = null;
              }
            }
          } else {
            isMessageLoopRunning = false;
          }
        };
        var schedulePerformWorkUntilDeadline;
        if (typeof localSetImmediate === "function") {
          schedulePerformWorkUntilDeadline = function() {
            localSetImmediate(performWorkUntilDeadline);
          };
        } else if (typeof MessageChannel !== "undefined") {
          var channel = new MessageChannel();
          var port = channel.port2;
          channel.port1.onmessage = performWorkUntilDeadline;
          schedulePerformWorkUntilDeadline = function() {
            port.postMessage(null);
          };
        } else {
          schedulePerformWorkUntilDeadline = function() {
            localSetTimeout(performWorkUntilDeadline, 0);
          };
        }
        function requestHostCallback(callback) {
          scheduledHostCallback = callback;
          if (!isMessageLoopRunning) {
            isMessageLoopRunning = true;
            schedulePerformWorkUntilDeadline();
          }
        }
        function requestHostTimeout(callback, ms) {
          taskTimeoutID = localSetTimeout(function() {
            callback(exports.unstable_now());
          }, ms);
        }
        function cancelHostTimeout() {
          localClearTimeout(taskTimeoutID);
          taskTimeoutID = -1;
        }
        var unstable_requestPaint = requestPaint;
        var unstable_Profiling = null;
        exports.unstable_IdlePriority = IdlePriority;
        exports.unstable_ImmediatePriority = ImmediatePriority;
        exports.unstable_LowPriority = LowPriority;
        exports.unstable_NormalPriority = NormalPriority16;
        exports.unstable_Profiling = unstable_Profiling;
        exports.unstable_UserBlockingPriority = UserBlockingPriority;
        exports.unstable_cancelCallback = unstable_cancelCallback;
        exports.unstable_continueExecution = unstable_continueExecution;
        exports.unstable_forceFrameRate = forceFrameRate;
        exports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;
        exports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;
        exports.unstable_next = unstable_next;
        exports.unstable_pauseExecution = unstable_pauseExecution;
        exports.unstable_requestPaint = unstable_requestPaint;
        exports.unstable_runWithPriority = unstable_runWithPriority;
        exports.unstable_scheduleCallback = unstable_scheduleCallback;
        exports.unstable_shouldYield = shouldYieldToHost;
        exports.unstable_wrapCallback = unstable_wrapCallback;
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
        }
      })();
    }
  }
});

// node_modules/@fluentui/react-swatch-picker/node_modules/scheduler/index.js
var require_scheduler14 = __commonJS({
  "node_modules/@fluentui/react-swatch-picker/node_modules/scheduler/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_scheduler_development14();
    }
  }
});

// node_modules/@fluentui/react-carousel/node_modules/scheduler/cjs/scheduler.development.js
var require_scheduler_development15 = __commonJS({
  "node_modules/@fluentui/react-carousel/node_modules/scheduler/cjs/scheduler.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
        }
        var enableSchedulerDebugging = false;
        var enableProfiling = false;
        var frameYieldMs = 5;
        function push(heap, node) {
          var index = heap.length;
          heap.push(node);
          siftUp(heap, node, index);
        }
        function peek(heap) {
          return heap.length === 0 ? null : heap[0];
        }
        function pop(heap) {
          if (heap.length === 0) {
            return null;
          }
          var first = heap[0];
          var last = heap.pop();
          if (last !== first) {
            heap[0] = last;
            siftDown(heap, last, 0);
          }
          return first;
        }
        function siftUp(heap, node, i) {
          var index = i;
          while (index > 0) {
            var parentIndex = index - 1 >>> 1;
            var parent = heap[parentIndex];
            if (compare(parent, node) > 0) {
              heap[parentIndex] = node;
              heap[index] = parent;
              index = parentIndex;
            } else {
              return;
            }
          }
        }
        function siftDown(heap, node, i) {
          var index = i;
          var length = heap.length;
          var halfLength = length >>> 1;
          while (index < halfLength) {
            var leftIndex = (index + 1) * 2 - 1;
            var left = heap[leftIndex];
            var rightIndex = leftIndex + 1;
            var right = heap[rightIndex];
            if (compare(left, node) < 0) {
              if (rightIndex < length && compare(right, left) < 0) {
                heap[index] = right;
                heap[rightIndex] = node;
                index = rightIndex;
              } else {
                heap[index] = left;
                heap[leftIndex] = node;
                index = leftIndex;
              }
            } else if (rightIndex < length && compare(right, node) < 0) {
              heap[index] = right;
              heap[rightIndex] = node;
              index = rightIndex;
            } else {
              return;
            }
          }
        }
        function compare(a, b) {
          var diff = a.sortIndex - b.sortIndex;
          return diff !== 0 ? diff : a.id - b.id;
        }
        var ImmediatePriority = 1;
        var UserBlockingPriority = 2;
        var NormalPriority16 = 3;
        var LowPriority = 4;
        var IdlePriority = 5;
        function markTaskErrored(task, ms) {
        }
        var hasPerformanceNow = typeof performance === "object" && typeof performance.now === "function";
        if (hasPerformanceNow) {
          var localPerformance = performance;
          exports.unstable_now = function() {
            return localPerformance.now();
          };
        } else {
          var localDate = Date;
          var initialTime = localDate.now();
          exports.unstable_now = function() {
            return localDate.now() - initialTime;
          };
        }
        var maxSigned31BitInt = 1073741823;
        var IMMEDIATE_PRIORITY_TIMEOUT = -1;
        var USER_BLOCKING_PRIORITY_TIMEOUT = 250;
        var NORMAL_PRIORITY_TIMEOUT = 5e3;
        var LOW_PRIORITY_TIMEOUT = 1e4;
        var IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt;
        var taskQueue = [];
        var timerQueue = [];
        var taskIdCounter = 1;
        var currentTask = null;
        var currentPriorityLevel = NormalPriority16;
        var isPerformingWork = false;
        var isHostCallbackScheduled = false;
        var isHostTimeoutScheduled = false;
        var localSetTimeout = typeof setTimeout === "function" ? setTimeout : null;
        var localClearTimeout = typeof clearTimeout === "function" ? clearTimeout : null;
        var localSetImmediate = typeof setImmediate !== "undefined" ? setImmediate : null;
        var isInputPending = typeof navigator !== "undefined" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 ? navigator.scheduling.isInputPending.bind(navigator.scheduling) : null;
        function advanceTimers(currentTime) {
          var timer = peek(timerQueue);
          while (timer !== null) {
            if (timer.callback === null) {
              pop(timerQueue);
            } else if (timer.startTime <= currentTime) {
              pop(timerQueue);
              timer.sortIndex = timer.expirationTime;
              push(taskQueue, timer);
            } else {
              return;
            }
            timer = peek(timerQueue);
          }
        }
        function handleTimeout(currentTime) {
          isHostTimeoutScheduled = false;
          advanceTimers(currentTime);
          if (!isHostCallbackScheduled) {
            if (peek(taskQueue) !== null) {
              isHostCallbackScheduled = true;
              requestHostCallback(flushWork);
            } else {
              var firstTimer = peek(timerQueue);
              if (firstTimer !== null) {
                requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
              }
            }
          }
        }
        function flushWork(hasTimeRemaining, initialTime2) {
          isHostCallbackScheduled = false;
          if (isHostTimeoutScheduled) {
            isHostTimeoutScheduled = false;
            cancelHostTimeout();
          }
          isPerformingWork = true;
          var previousPriorityLevel = currentPriorityLevel;
          try {
            if (enableProfiling) {
              try {
                return workLoop(hasTimeRemaining, initialTime2);
              } catch (error) {
                if (currentTask !== null) {
                  var currentTime = exports.unstable_now();
                  markTaskErrored(currentTask, currentTime);
                  currentTask.isQueued = false;
                }
                throw error;
              }
            } else {
              return workLoop(hasTimeRemaining, initialTime2);
            }
          } finally {
            currentTask = null;
            currentPriorityLevel = previousPriorityLevel;
            isPerformingWork = false;
          }
        }
        function workLoop(hasTimeRemaining, initialTime2) {
          var currentTime = initialTime2;
          advanceTimers(currentTime);
          currentTask = peek(taskQueue);
          while (currentTask !== null && !enableSchedulerDebugging) {
            if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {
              break;
            }
            var callback = currentTask.callback;
            if (typeof callback === "function") {
              currentTask.callback = null;
              currentPriorityLevel = currentTask.priorityLevel;
              var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;
              var continuationCallback = callback(didUserCallbackTimeout);
              currentTime = exports.unstable_now();
              if (typeof continuationCallback === "function") {
                currentTask.callback = continuationCallback;
              } else {
                if (currentTask === peek(taskQueue)) {
                  pop(taskQueue);
                }
              }
              advanceTimers(currentTime);
            } else {
              pop(taskQueue);
            }
            currentTask = peek(taskQueue);
          }
          if (currentTask !== null) {
            return true;
          } else {
            var firstTimer = peek(timerQueue);
            if (firstTimer !== null) {
              requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
            }
            return false;
          }
        }
        function unstable_runWithPriority(priorityLevel, eventHandler) {
          switch (priorityLevel) {
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority16:
            case LowPriority:
            case IdlePriority:
              break;
            default:
              priorityLevel = NormalPriority16;
          }
          var previousPriorityLevel = currentPriorityLevel;
          currentPriorityLevel = priorityLevel;
          try {
            return eventHandler();
          } finally {
            currentPriorityLevel = previousPriorityLevel;
          }
        }
        function unstable_next(eventHandler) {
          var priorityLevel;
          switch (currentPriorityLevel) {
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority16:
              priorityLevel = NormalPriority16;
              break;
            default:
              priorityLevel = currentPriorityLevel;
              break;
          }
          var previousPriorityLevel = currentPriorityLevel;
          currentPriorityLevel = priorityLevel;
          try {
            return eventHandler();
          } finally {
            currentPriorityLevel = previousPriorityLevel;
          }
        }
        function unstable_wrapCallback(callback) {
          var parentPriorityLevel = currentPriorityLevel;
          return function() {
            var previousPriorityLevel = currentPriorityLevel;
            currentPriorityLevel = parentPriorityLevel;
            try {
              return callback.apply(this, arguments);
            } finally {
              currentPriorityLevel = previousPriorityLevel;
            }
          };
        }
        function unstable_scheduleCallback(priorityLevel, callback, options) {
          var currentTime = exports.unstable_now();
          var startTime2;
          if (typeof options === "object" && options !== null) {
            var delay = options.delay;
            if (typeof delay === "number" && delay > 0) {
              startTime2 = currentTime + delay;
            } else {
              startTime2 = currentTime;
            }
          } else {
            startTime2 = currentTime;
          }
          var timeout2;
          switch (priorityLevel) {
            case ImmediatePriority:
              timeout2 = IMMEDIATE_PRIORITY_TIMEOUT;
              break;
            case UserBlockingPriority:
              timeout2 = USER_BLOCKING_PRIORITY_TIMEOUT;
              break;
            case IdlePriority:
              timeout2 = IDLE_PRIORITY_TIMEOUT;
              break;
            case LowPriority:
              timeout2 = LOW_PRIORITY_TIMEOUT;
              break;
            case NormalPriority16:
            default:
              timeout2 = NORMAL_PRIORITY_TIMEOUT;
              break;
          }
          var expirationTime = startTime2 + timeout2;
          var newTask = {
            id: taskIdCounter++,
            callback,
            priorityLevel,
            startTime: startTime2,
            expirationTime,
            sortIndex: -1
          };
          if (startTime2 > currentTime) {
            newTask.sortIndex = startTime2;
            push(timerQueue, newTask);
            if (peek(taskQueue) === null && newTask === peek(timerQueue)) {
              if (isHostTimeoutScheduled) {
                cancelHostTimeout();
              } else {
                isHostTimeoutScheduled = true;
              }
              requestHostTimeout(handleTimeout, startTime2 - currentTime);
            }
          } else {
            newTask.sortIndex = expirationTime;
            push(taskQueue, newTask);
            if (!isHostCallbackScheduled && !isPerformingWork) {
              isHostCallbackScheduled = true;
              requestHostCallback(flushWork);
            }
          }
          return newTask;
        }
        function unstable_pauseExecution() {
        }
        function unstable_continueExecution() {
          if (!isHostCallbackScheduled && !isPerformingWork) {
            isHostCallbackScheduled = true;
            requestHostCallback(flushWork);
          }
        }
        function unstable_getFirstCallbackNode() {
          return peek(taskQueue);
        }
        function unstable_cancelCallback(task) {
          task.callback = null;
        }
        function unstable_getCurrentPriorityLevel() {
          return currentPriorityLevel;
        }
        var isMessageLoopRunning = false;
        var scheduledHostCallback = null;
        var taskTimeoutID = -1;
        var frameInterval = frameYieldMs;
        var startTime = -1;
        function shouldYieldToHost() {
          var timeElapsed = exports.unstable_now() - startTime;
          if (timeElapsed < frameInterval) {
            return false;
          }
          return true;
        }
        function requestPaint() {
        }
        function forceFrameRate(fps) {
          if (fps < 0 || fps > 125) {
            console["error"]("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported");
            return;
          }
          if (fps > 0) {
            frameInterval = Math.floor(1e3 / fps);
          } else {
            frameInterval = frameYieldMs;
          }
        }
        var performWorkUntilDeadline = function() {
          if (scheduledHostCallback !== null) {
            var currentTime = exports.unstable_now();
            startTime = currentTime;
            var hasTimeRemaining = true;
            var hasMoreWork = true;
            try {
              hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);
            } finally {
              if (hasMoreWork) {
                schedulePerformWorkUntilDeadline();
              } else {
                isMessageLoopRunning = false;
                scheduledHostCallback = null;
              }
            }
          } else {
            isMessageLoopRunning = false;
          }
        };
        var schedulePerformWorkUntilDeadline;
        if (typeof localSetImmediate === "function") {
          schedulePerformWorkUntilDeadline = function() {
            localSetImmediate(performWorkUntilDeadline);
          };
        } else if (typeof MessageChannel !== "undefined") {
          var channel = new MessageChannel();
          var port = channel.port2;
          channel.port1.onmessage = performWorkUntilDeadline;
          schedulePerformWorkUntilDeadline = function() {
            port.postMessage(null);
          };
        } else {
          schedulePerformWorkUntilDeadline = function() {
            localSetTimeout(performWorkUntilDeadline, 0);
          };
        }
        function requestHostCallback(callback) {
          scheduledHostCallback = callback;
          if (!isMessageLoopRunning) {
            isMessageLoopRunning = true;
            schedulePerformWorkUntilDeadline();
          }
        }
        function requestHostTimeout(callback, ms) {
          taskTimeoutID = localSetTimeout(function() {
            callback(exports.unstable_now());
          }, ms);
        }
        function cancelHostTimeout() {
          localClearTimeout(taskTimeoutID);
          taskTimeoutID = -1;
        }
        var unstable_requestPaint = requestPaint;
        var unstable_Profiling = null;
        exports.unstable_IdlePriority = IdlePriority;
        exports.unstable_ImmediatePriority = ImmediatePriority;
        exports.unstable_LowPriority = LowPriority;
        exports.unstable_NormalPriority = NormalPriority16;
        exports.unstable_Profiling = unstable_Profiling;
        exports.unstable_UserBlockingPriority = UserBlockingPriority;
        exports.unstable_cancelCallback = unstable_cancelCallback;
        exports.unstable_continueExecution = unstable_continueExecution;
        exports.unstable_forceFrameRate = forceFrameRate;
        exports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;
        exports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;
        exports.unstable_next = unstable_next;
        exports.unstable_pauseExecution = unstable_pauseExecution;
        exports.unstable_requestPaint = unstable_requestPaint;
        exports.unstable_runWithPriority = unstable_runWithPriority;
        exports.unstable_scheduleCallback = unstable_scheduleCallback;
        exports.unstable_shouldYield = shouldYieldToHost;
        exports.unstable_wrapCallback = unstable_wrapCallback;
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
        }
      })();
    }
  }
});

// node_modules/@fluentui/react-carousel/node_modules/scheduler/index.js
var require_scheduler15 = __commonJS({
  "node_modules/@fluentui/react-carousel/node_modules/scheduler/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_scheduler_development15();
    }
  }
});

// node_modules/@fluentui/react-provider/lib/components/FluentProvider/createCSSRuleFromTheme.js
function createCSSRuleFromTheme(selector, theme) {
  if (theme) {
    const cssVarsAsString = Object.keys(theme).reduce((cssVarRule, cssVar) => {
      return `${cssVarRule}--${cssVar}: ${theme[cssVar]}; `;
    }, "");
    return `${selector} { ${cssVarsAsString} }`;
  }
  return `${selector} {}`;
}

// node_modules/@fluentui/react-provider/lib/components/FluentProvider/FluentProvider.js
var React4 = __toESM(require_react());

// node_modules/@fluentui/react-provider/lib/components/FluentProvider/renderFluentProvider.js
var renderFluentProvider_unstable = (state, contextValues) => {
  assertSlots(state);
  return jsx(Provider, {
    value: contextValues.provider,
    children: jsx(ThemeProvider, {
      value: contextValues.theme,
      children: jsx(ThemeClassNameProvider, {
        value: contextValues.themeClassName,
        children: jsx(CustomStyleHooksProvider, {
          value: contextValues.customStyleHooks_unstable,
          children: jsx(TooltipVisibilityProvider, {
            value: contextValues.tooltip,
            children: jsx(TextDirectionProvider, {
              dir: contextValues.textDirection,
              children: jsx(IconDirectionContextProvider, {
                value: contextValues.iconDirection,
                children: jsx(OverridesProvider, {
                  value: contextValues.overrides_unstable,
                  children: jsxs(state.root, {
                    children: [
                      canUseDOM() ? null : jsx("style", {
                        // Using dangerous HTML because react can escape characters
                        // which can lead to invalid CSS.
                        // eslint-disable-next-line react/no-danger
                        dangerouslySetInnerHTML: {
                          __html: state.serverStyleProps.cssRule
                        },
                        ...state.serverStyleProps.attributes
                      }),
                      state.root.children
                    ]
                  })
                })
              })
            })
          })
        })
      })
    })
  });
};

// node_modules/@fluentui/react-provider/lib/components/FluentProvider/useFluentProvider.js
var React2 = __toESM(require_react());

// node_modules/@fluentui/react-provider/lib/components/FluentProvider/useFluentProviderThemeStyleTag.js
var React = __toESM(require_react());

// node_modules/@fluentui/react-provider/lib/components/FluentProvider/useFluentProviderStyles.styles.js
var fluentProviderClassNames = {
  root: "fui-FluentProvider"
};
var useStyles = __styles({
  root: {
    sj55zd: "f19n0e5",
    De3pzq: "fxugw4r",
    fsow6f: ["f1o700av", "fes3tcz"],
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "figsok6",
    Bg96gwp: "f1i3iumi"
  }
}, {
  d: [".f19n0e5{color:var(--colorNeutralForeground1);}", ".fxugw4r{background-color:var(--colorNeutralBackground1);}", ".f1o700av{text-align:left;}", ".fes3tcz{text-align:right;}", ".fk6fouc{font-family:var(--fontFamilyBase);}", ".fkhj508{font-size:var(--fontSizeBase300);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}"]
});
var useFluentProviderStyles_unstable = (state) => {
  "use no memo";
  const renderer = useRenderer();
  const styles = useStyles({
    dir: state.dir,
    renderer
  });
  state.root.className = mergeClasses(fluentProviderClassNames.root, state.themeClassName, styles.root, state.root.className);
  return state;
};

// node_modules/@fluentui/react-provider/lib/components/FluentProvider/useFluentProviderThemeStyleTag.js
var useInsertionEffect2 = React["useInsertionEffect"] ? React["useInsertionEffect"] : useIsomorphicLayoutEffect;
var createStyleTag = (target, elementAttributes) => {
  if (!target) {
    return void 0;
  }
  const tag = target.createElement("style");
  Object.keys(elementAttributes).forEach((attrName) => {
    tag.setAttribute(attrName, elementAttributes[attrName]);
  });
  target.head.appendChild(tag);
  return tag;
};
var insertSheet = (tag, rule) => {
  const sheet = tag.sheet;
  if (sheet) {
    if (sheet.cssRules.length > 0) {
      sheet.deleteRule(0);
    }
    sheet.insertRule(rule, 0);
  } else if (true) {
    console.error("FluentProvider: No sheet available on styleTag, styles will not be inserted into DOM.");
  }
};
var useFluentProviderThemeStyleTag = (options) => {
  "use no memo";
  const { targetDocument, theme, rendererAttributes } = options;
  const styleTag = React.useRef();
  const styleTagId = useId(fluentProviderClassNames.root);
  const styleElementAttributes = rendererAttributes;
  const rule = React.useMemo(() => createCSSRuleFromTheme(`.${styleTagId}`, theme), [
    theme,
    styleTagId
  ]);
  if (true) {
    React.useMemo(() => {
      if (targetDocument) {
        const providerSelector = `.${fluentProviderClassNames.root}.${styleTagId}`;
        const providerElements = targetDocument.querySelectorAll(providerSelector);
        const isSSR = targetDocument.querySelector(`${providerSelector} > style[id="${styleTagId}"]`) !== null;
        const elementsCount = isSSR ? 1 : 0;
        if (providerElements.length > elementsCount) {
          console.error([
            "@fluentui/react-provider: There are conflicting ids in your DOM.",
            "Please make sure that you configured your application properly.",
            "\n",
            "\n",
            "Configuration guide: https://aka.ms/fluentui-conflicting-ids"
          ].join(" "));
        }
      }
    }, []);
  }
  useHandleSSRStyleElements(targetDocument, styleTagId);
  useInsertionEffect2(() => {
    const ssrStyleElement = targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.getElementById(styleTagId);
    if (ssrStyleElement) {
      styleTag.current = ssrStyleElement;
    } else {
      styleTag.current = createStyleTag(targetDocument, {
        ...styleElementAttributes,
        id: styleTagId
      });
      if (styleTag.current) {
        insertSheet(styleTag.current, rule);
      }
    }
    return () => {
      var _styleTag_current;
      (_styleTag_current = styleTag.current) === null || _styleTag_current === void 0 ? void 0 : _styleTag_current.remove();
    };
  }, [
    styleTagId,
    targetDocument,
    rule,
    styleElementAttributes
  ]);
  return {
    styleTagId,
    rule
  };
};
function useHandleSSRStyleElements(targetDocument, styleTagId) {
  React.useState(() => {
    if (!targetDocument) {
      return;
    }
    const themeStyleElement = targetDocument.getElementById(styleTagId);
    if (themeStyleElement) {
      targetDocument.head.append(themeStyleElement);
    }
  });
}

// node_modules/@fluentui/react-provider/lib/components/FluentProvider/useFluentProvider.js
var DEFAULT_STYLE_HOOKS = {};
var DEFAULT_RENDERER_ATTRIBUTES = {};
var useFluentProvider_unstable = (props, ref) => {
  "use no memo";
  const parentContext = useFluent();
  const parentTheme = useTheme();
  const parentOverrides = useOverrides();
  const parentCustomStyleHooks = React2.useContext(CustomStyleHooksContext) || DEFAULT_STYLE_HOOKS;
  const {
    applyStylesToPortals = true,
    // eslint-disable-next-line @typescript-eslint/naming-convention
    customStyleHooks_unstable,
    dir = parentContext.dir,
    targetDocument = parentContext.targetDocument,
    theme,
    overrides_unstable: overrides = {}
  } = props;
  const mergedTheme = shallowMerge(parentTheme, theme);
  const mergedOverrides = shallowMerge(parentOverrides, overrides);
  const mergedCustomStyleHooks = shallowMerge(parentCustomStyleHooks, customStyleHooks_unstable);
  const renderer = useRenderer();
  var _renderer_styleElementAttributes;
  const { styleTagId, rule } = useFluentProviderThemeStyleTag({
    theme: mergedTheme,
    targetDocument,
    rendererAttributes: (_renderer_styleElementAttributes = renderer.styleElementAttributes) !== null && _renderer_styleElementAttributes !== void 0 ? _renderer_styleElementAttributes : DEFAULT_RENDERER_ATTRIBUTES
  });
  if (true) {
    React2.useEffect(() => {
      if (mergedTheme === void 0) {
        console.warn([
          '@fluentui/react-provider: FluentProvider does not have your "theme" defined.',
          "Make sure that your top-level FluentProvider has set a `theme` prop or you're setting the theme in your child FluentProvider."
        ].join(" "));
      }
    }, []);
  }
  return {
    applyStylesToPortals,
    // eslint-disable-next-line @typescript-eslint/naming-convention
    customStyleHooks_unstable: mergedCustomStyleHooks,
    dir,
    targetDocument,
    theme: mergedTheme,
    // eslint-disable-next-line @typescript-eslint/naming-convention
    overrides_unstable: mergedOverrides,
    themeClassName: styleTagId,
    components: {
      root: "div"
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      ...props,
      dir,
      // FIXME:
      // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`
      // but since it would be a breaking change to fix it, we are casting ref to it's proper type
      ref: useMergedRefs(ref, useFocusVisible({
        targetDocument
      }))
    }), {
      elementType: "div"
    }),
    serverStyleProps: {
      cssRule: rule,
      attributes: {
        ...renderer.styleElementAttributes,
        id: styleTagId
      }
    }
  };
};
function shallowMerge(a, b) {
  if (a && b) {
    return {
      ...a,
      ...b
    };
  }
  if (a) {
    return a;
  }
  return b;
}
function useTheme() {
  return React2.useContext(ThemeContext);
}

// node_modules/@fluentui/react-provider/lib/components/FluentProvider/useFluentProviderContextValues.js
var React3 = __toESM(require_react());
function useFluentProviderContextValues_unstable(state) {
  const {
    applyStylesToPortals,
    // eslint-disable-next-line @typescript-eslint/naming-convention
    customStyleHooks_unstable,
    dir,
    root,
    targetDocument,
    theme,
    themeClassName,
    // eslint-disable-next-line @typescript-eslint/naming-convention
    overrides_unstable
  } = state;
  const provider = React3.useMemo(() => ({
    dir,
    targetDocument
  }), [
    dir,
    targetDocument
  ]);
  const [tooltip] = React3.useState(() => ({}));
  const iconDirection = React3.useMemo(() => ({
    textDirection: dir
  }), [
    dir
  ]);
  return {
    // eslint-disable-next-line @typescript-eslint/naming-convention
    customStyleHooks_unstable,
    // eslint-disable-next-line @typescript-eslint/naming-convention
    overrides_unstable,
    provider,
    textDirection: dir,
    iconDirection,
    tooltip,
    theme,
    themeClassName: applyStylesToPortals ? root.className : themeClassName
  };
}

// node_modules/@fluentui/react-provider/lib/components/FluentProvider/FluentProvider.js
var FluentProvider = React4.forwardRef((props, ref) => {
  const state = useFluentProvider_unstable(props, ref);
  useFluentProviderStyles_unstable(state);
  const contextValues = useFluentProviderContextValues_unstable(state);
  return renderFluentProvider_unstable(state, contextValues);
});
FluentProvider.displayName = "FluentProvider";

// node_modules/@fluentui/react-accordion/lib/components/Accordion/Accordion.js
var React9 = __toESM(require_react());

// node_modules/@fluentui/react-accordion/node_modules/@fluentui/react-context-selector/lib/createContext.js
var React5 = __toESM(require_react());
var import_scheduler = __toESM(require_scheduler());
var createProvider = (Original) => {
  const Provider2 = (props) => {
    const valueRef = React5.useRef(props.value);
    const versionRef = React5.useRef(0);
    const contextValue = React5.useRef();
    if (!contextValue.current) {
      contextValue.current = {
        value: valueRef,
        version: versionRef,
        listeners: []
      };
    }
    useIsomorphicLayoutEffect(() => {
      valueRef.current = props.value;
      versionRef.current += 1;
      (0, import_scheduler.unstable_runWithPriority)(import_scheduler.unstable_NormalPriority, () => {
        contextValue.current.listeners.forEach((listener) => {
          listener([
            versionRef.current,
            props.value
          ]);
        });
      });
    }, [
      props.value
    ]);
    return React5.createElement(Original, {
      value: contextValue.current
    }, props.children);
  };
  if (true) {
    Provider2.displayName = "ContextSelector.Provider";
  }
  return Provider2;
};
var createContext2 = (defaultValue) => {
  const context = React5.createContext({
    value: {
      current: defaultValue
    },
    version: {
      current: -1
    },
    listeners: []
  });
  context.Provider = createProvider(context.Provider);
  delete context.Consumer;
  return context;
};

// node_modules/@fluentui/react-accordion/node_modules/@fluentui/react-context-selector/lib/useContextSelector.js
var React6 = __toESM(require_react());
var useContextSelector = (context, selector) => {
  const contextValue = React6.useContext(context);
  const { value: { current: value }, version: { current: version }, listeners } = contextValue;
  const selected = selector(value);
  const [state, setState] = React6.useState([
    value,
    selected
  ]);
  const dispatch = (payload) => {
    setState((prevState) => {
      if (!payload) {
        return [
          value,
          selected
        ];
      }
      if (payload[0] <= version) {
        if (Object.is(prevState[1], selected)) {
          return prevState;
        }
        return [
          value,
          selected
        ];
      }
      try {
        if (Object.is(prevState[0], payload[1])) {
          return prevState;
        }
        const nextSelected = selector(payload[1]);
        if (Object.is(prevState[1], nextSelected)) {
          return prevState;
        }
        return [
          payload[1],
          nextSelected
        ];
      } catch (e) {
      }
      return [
        prevState[0],
        prevState[1]
      ];
    });
  };
  if (!Object.is(state[1], selected)) {
    dispatch(void 0);
  }
  const stableDispatch = useEventCallback(dispatch);
  useIsomorphicLayoutEffect(() => {
    listeners.push(stableDispatch);
    return () => {
      const index = listeners.indexOf(stableDispatch);
      listeners.splice(index, 1);
    };
  }, [
    stableDispatch,
    listeners
  ]);
  return state[1];
};

// node_modules/@fluentui/react-accordion/node_modules/@fluentui/react-context-selector/lib/useHasParentContext.js
var React7 = __toESM(require_react());

// node_modules/@fluentui/react-accordion/lib/contexts/accordion.js
var AccordionContext = createContext2(void 0);
var accordionContextDefaultValue = {
  openItems: [],
  collapsible: false,
  multiple: false,
  navigation: void 0,
  requestToggle() {
  }
};
var { Provider: AccordionProvider } = AccordionContext;
var useAccordionContext_unstable = (selector) => useContextSelector(AccordionContext, (ctx = accordionContextDefaultValue) => selector(ctx));

// node_modules/@fluentui/react-accordion/lib/components/Accordion/renderAccordion.js
var renderAccordion_unstable = (state, contextValues) => {
  assertSlots(state);
  return jsx(state.root, {
    children: jsx(AccordionProvider, {
      value: contextValues.accordion,
      children: state.root.children
    })
  });
};

// node_modules/@fluentui/react-accordion/lib/components/Accordion/useAccordion.js
var React8 = __toESM(require_react());
var useAccordion_unstable = (props, ref) => {
  const {
    openItems: controlledOpenItems,
    defaultOpenItems,
    multiple = false,
    collapsible = false,
    onToggle,
    // eslint-disable-next-line deprecation/deprecation
    navigation
  } = props;
  const [openItems, setOpenItems] = useControllableState({
    state: React8.useMemo(() => normalizeValues(controlledOpenItems), [
      controlledOpenItems
    ]),
    defaultState: defaultOpenItems && (() => initializeUncontrolledOpenItems({
      defaultOpenItems,
      multiple
    })),
    initialState: []
  });
  const arrowNavigationProps = useArrowNavigationGroup({
    circular: navigation === "circular",
    tabbable: true
  });
  const requestToggle = useEventCallback((data) => {
    const nextOpenItems = updateOpenItems(data.value, openItems, multiple, collapsible);
    onToggle === null || onToggle === void 0 ? void 0 : onToggle(data.event, {
      value: data.value,
      openItems: nextOpenItems
    });
    setOpenItems(nextOpenItems);
  });
  return {
    collapsible,
    multiple,
    navigation,
    openItems,
    requestToggle,
    components: {
      root: "div"
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      ...props,
      // eslint-disable-next-line deprecation/deprecation
      ...navigation ? arrowNavigationProps : void 0,
      // FIXME:
      // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`
      // but since it would be a breaking change to fix it, we are casting ref to it's proper type
      ref
    }), {
      elementType: "div"
    })
  };
};
function initializeUncontrolledOpenItems({ defaultOpenItems, multiple }) {
  if (defaultOpenItems !== void 0) {
    if (Array.isArray(defaultOpenItems)) {
      return multiple ? defaultOpenItems : [
        defaultOpenItems[0]
      ];
    }
    return [
      defaultOpenItems
    ];
  }
  return [];
}
function updateOpenItems(value, previousOpenItems, multiple, collapsible) {
  if (multiple) {
    if (previousOpenItems.includes(value)) {
      if (previousOpenItems.length > 1 || collapsible) {
        return previousOpenItems.filter((i) => i !== value);
      }
    } else {
      return [
        ...previousOpenItems,
        value
      ].sort();
    }
  } else {
    return previousOpenItems[0] === value && collapsible ? [] : [
      value
    ];
  }
  return previousOpenItems;
}
function normalizeValues(index) {
  if (index === void 0) {
    return void 0;
  }
  return Array.isArray(index) ? index : [
    index
  ];
}

// node_modules/@fluentui/react-accordion/lib/components/Accordion/useAccordionContextValues.js
function useAccordionContextValues_unstable(state) {
  const { navigation, openItems, requestToggle, multiple, collapsible } = state;
  const accordion = {
    navigation,
    openItems,
    requestToggle,
    collapsible,
    multiple
  };
  return {
    accordion
  };
}

// node_modules/@fluentui/react-accordion/lib/components/Accordion/useAccordionStyles.styles.js
var accordionClassNames = {
  root: "fui-Accordion"
};
var useAccordionStyles_unstable = (state) => {
  "use no memo";
  state.root.className = mergeClasses(accordionClassNames.root, state.root.className);
  return state;
};

// node_modules/@fluentui/react-accordion/lib/components/Accordion/Accordion.js
var Accordion = React9.forwardRef((props, ref) => {
  const state = useAccordion_unstable(props, ref);
  const contextValues = useAccordionContextValues_unstable(state);
  useAccordionStyles_unstable(state);
  useCustomStyleHook("useAccordionStyles_unstable")(state);
  return renderAccordion_unstable(state, contextValues);
});
Accordion.displayName = "Accordion";

// node_modules/@fluentui/react-accordion/lib/components/Accordion/Accordion.types.js
var React10 = __toESM(require_react());

// node_modules/@fluentui/react-accordion/lib/components/AccordionItem/AccordionItem.js
var React14 = __toESM(require_react());

// node_modules/@fluentui/react-accordion/lib/components/AccordionItem/useAccordionItem.js
var React11 = __toESM(require_react());
var useAccordionItem_unstable = (props, ref) => {
  const { value, disabled = false } = props;
  const requestToggle = useAccordionContext_unstable((ctx) => ctx.requestToggle);
  const open = useAccordionContext_unstable((ctx) => ctx.openItems.includes(value));
  const onAccordionHeaderClick = useEventCallback((event) => requestToggle({
    event,
    value
  }));
  return {
    open,
    value,
    disabled,
    onHeaderClick: onAccordionHeaderClick,
    components: {
      root: "div"
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      // FIXME:
      // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`
      // but since it would be a breaking change to fix it, we are casting ref to it's proper type
      ref,
      ...props
    }), {
      elementType: "div"
    })
  };
};

// node_modules/@fluentui/react-accordion/lib/components/AccordionItem/useAccordionItemContextValues.js
var React12 = __toESM(require_react());
function useAccordionItemContextValues_unstable(state) {
  const { disabled, open, value, onHeaderClick } = state;
  const accordionItem = React12.useMemo(() => ({
    disabled,
    open,
    value,
    onHeaderClick
  }), [
    disabled,
    open,
    value,
    onHeaderClick
  ]);
  return {
    accordionItem
  };
}

// node_modules/@fluentui/react-accordion/lib/contexts/accordionItem.js
var React13 = __toESM(require_react());
var AccordionItemContext = React13.createContext(void 0);
var accordionItemContextDefaultValue = {
  open: false,
  disabled: false,
  value: void 0,
  onHeaderClick() {
  }
};
var { Provider: AccordionItemProvider } = AccordionItemContext;
var useAccordionItemContext_unstable = () => {
  var _React_useContext;
  return (_React_useContext = React13.useContext(AccordionItemContext)) !== null && _React_useContext !== void 0 ? _React_useContext : accordionItemContextDefaultValue;
};

// node_modules/@fluentui/react-accordion/lib/components/AccordionItem/renderAccordionItem.js
var renderAccordionItem_unstable = (state, contextValues) => {
  assertSlots(state);
  return jsx(state.root, {
    children: jsx(AccordionItemProvider, {
      value: contextValues.accordionItem,
      children: state.root.children
    })
  });
};

// node_modules/@fluentui/react-accordion/lib/components/AccordionItem/useAccordionItemStyles.styles.js
var accordionItemClassNames = {
  root: "fui-AccordionItem"
};
var useAccordionItemStyles_unstable = (state) => {
  "use no memo";
  state.root.className = mergeClasses(accordionItemClassNames.root, state.root.className);
  return state;
};

// node_modules/@fluentui/react-accordion/lib/components/AccordionItem/AccordionItem.js
var AccordionItem = React14.forwardRef((props, ref) => {
  const state = useAccordionItem_unstable(props, ref);
  const contextValues = useAccordionItemContextValues_unstable(state);
  useAccordionItemStyles_unstable(state);
  useCustomStyleHook("useAccordionItemStyles_unstable")(state);
  return renderAccordionItem_unstable(state, contextValues);
});
AccordionItem.displayName = "AccordionItem";

// node_modules/@fluentui/react-accordion/lib/components/AccordionHeader/AccordionHeader.js
var React42 = __toESM(require_react());

// node_modules/@fluentui/react-accordion/lib/components/AccordionHeader/useAccordionHeader.js
var React39 = __toESM(require_react());

// node_modules/@fluentui/react-aria/lib/button/useARIAButtonProps.js
var React15 = __toESM(require_react());
function useARIAButtonProps(type, props) {
  const { disabled, disabledFocusable = false, ["aria-disabled"]: ariaDisabled, onClick, onKeyDown, onKeyUp, ...rest } = props !== null && props !== void 0 ? props : {};
  const normalizedARIADisabled = typeof ariaDisabled === "string" ? ariaDisabled === "true" : ariaDisabled;
  const isDisabled = disabled || disabledFocusable || normalizedARIADisabled;
  const handleClick = useEventCallback((ev) => {
    if (isDisabled) {
      ev.preventDefault();
      ev.stopPropagation();
    } else {
      onClick === null || onClick === void 0 ? void 0 : onClick(ev);
    }
  });
  const handleKeyDown = useEventCallback((ev) => {
    onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown(ev);
    if (ev.isDefaultPrevented()) {
      return;
    }
    const key = ev.key;
    if (isDisabled && (key === Enter || key === Space)) {
      ev.preventDefault();
      ev.stopPropagation();
      return;
    }
    if (key === Space) {
      ev.preventDefault();
      return;
    } else if (key === Enter) {
      ev.preventDefault();
      ev.currentTarget.click();
    }
  });
  const handleKeyUp = useEventCallback((ev) => {
    onKeyUp === null || onKeyUp === void 0 ? void 0 : onKeyUp(ev);
    if (ev.isDefaultPrevented()) {
      return;
    }
    const key = ev.key;
    if (isDisabled && (key === Enter || key === Space)) {
      ev.preventDefault();
      ev.stopPropagation();
      return;
    }
    if (key === Space) {
      ev.preventDefault();
      ev.currentTarget.click();
    }
  });
  if (type === "button" || type === void 0) {
    return {
      ...rest,
      disabled: disabled && !disabledFocusable,
      "aria-disabled": disabledFocusable ? true : normalizedARIADisabled,
      // onclick should still use internal handler to ensure prevention if disabled
      // if disabledFocusable then there's no requirement for handlers as those events should not be propagated
      onClick: disabledFocusable ? void 0 : handleClick,
      onKeyUp: disabledFocusable ? void 0 : onKeyUp,
      onKeyDown: disabledFocusable ? void 0 : onKeyDown
    };
  } else {
    const resultProps = {
      role: "button",
      tabIndex: disabled && !disabledFocusable ? void 0 : 0,
      ...rest,
      // If it's not a <button> than listeners are required even with disabledFocusable
      // Since you cannot assure the default behavior of the element
      // E.g: <a> will redirect on click
      onClick: handleClick,
      onKeyUp: handleKeyUp,
      onKeyDown: handleKeyDown,
      "aria-disabled": disabled || disabledFocusable || normalizedARIADisabled
    };
    if (type === "a" && isDisabled) {
      resultProps.href = void 0;
    }
    return resultProps;
  }
}

// node_modules/@fluentui/react-aria/lib/button/types.js
var React16 = __toESM(require_react());

// node_modules/@fluentui/react-aria/lib/activedescendant/ActiveDescendantContext.js
var React17 = __toESM(require_react());
var noop = () => void 0;
var activeDescendantContextDefaultValue = {
  controller: {
    active: noop,
    blur: noop,
    find: noop,
    first: noop,
    focus: noop,
    focusLastActive: noop,
    scrollActiveIntoView: noop,
    last: noop,
    next: noop,
    prev: noop,
    showAttributes: noop,
    hideAttributes: noop,
    showFocusVisibleAttributes: noop,
    hideFocusVisibleAttributes: noop
  }
};
var ActiveDescendantContext = React17.createContext(void 0);
var ActiveDescendantContextProvider = ActiveDescendantContext.Provider;
var useActiveDescendantContext = () => {
  var _React_useContext;
  return (_React_useContext = React17.useContext(ActiveDescendantContext)) !== null && _React_useContext !== void 0 ? _React_useContext : activeDescendantContextDefaultValue;
};
var useHasParentActiveDescendantContext = () => !!React17.useContext(ActiveDescendantContext);

// node_modules/@fluentui/react-aria/lib/activedescendant/useActiveDescendant.js
var React19 = __toESM(require_react());

// node_modules/@fluentui/react-aria/lib/activedescendant/useOptionWalker.js
var React18 = __toESM(require_react());
function useOptionWalker(options) {
  const { matchOption } = options;
  const { targetDocument } = useFluent();
  const treeWalkerRef = React18.useRef(null);
  const listboxRef = React18.useRef(null);
  const optionFilter = React18.useCallback((node) => {
    if (isHTMLElement(node) && matchOption(node)) {
      return NodeFilter.FILTER_ACCEPT;
    }
    return NodeFilter.FILTER_SKIP;
  }, [
    matchOption
  ]);
  const setListbox = React18.useCallback((el) => {
    if (el && targetDocument) {
      listboxRef.current = el;
      treeWalkerRef.current = targetDocument.createTreeWalker(el, NodeFilter.SHOW_ELEMENT, optionFilter);
    } else {
      listboxRef.current = null;
    }
  }, [
    targetDocument,
    optionFilter
  ]);
  const optionWalker = React18.useMemo(() => ({
    first: () => {
      if (!treeWalkerRef.current || !listboxRef.current) {
        return null;
      }
      treeWalkerRef.current.currentNode = listboxRef.current;
      return treeWalkerRef.current.firstChild();
    },
    last: () => {
      if (!treeWalkerRef.current || !listboxRef.current) {
        return null;
      }
      treeWalkerRef.current.currentNode = listboxRef.current;
      return treeWalkerRef.current.lastChild();
    },
    next: () => {
      if (!treeWalkerRef.current) {
        return null;
      }
      return treeWalkerRef.current.nextNode();
    },
    prev: () => {
      if (!treeWalkerRef.current) {
        return null;
      }
      return treeWalkerRef.current.previousNode();
    },
    find: (predicate, startFrom) => {
      if (!treeWalkerRef.current || !listboxRef.current) {
        return null;
      }
      const start = startFrom ? targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.getElementById(startFrom) : null;
      treeWalkerRef.current.currentNode = start !== null && start !== void 0 ? start : listboxRef.current;
      let cur = treeWalkerRef.current.currentNode;
      while (cur && !predicate(cur.id)) {
        cur = treeWalkerRef.current.nextNode();
      }
      return cur;
    },
    setCurrent: (el) => {
      if (!treeWalkerRef.current) {
        return;
      }
      treeWalkerRef.current.currentNode = el;
    }
  }), [
    targetDocument
  ]);
  return {
    optionWalker,
    listboxCallbackRef: setListbox
  };
}

// node_modules/@fluentui/react-aria/lib/activedescendant/constants.js
var ACTIVEDESCENDANT_ATTRIBUTE = "data-activedescendant";
var ACTIVEDESCENDANT_FOCUSVISIBLE_ATTRIBUTE = "data-activedescendant-focusvisible";

// node_modules/@fluentui/react-aria/lib/activedescendant/scrollIntoView.js
var scrollIntoView = (target) => {
  if (!target) {
    return;
  }
  const scrollParent = findScrollableParent(target.parentElement);
  if (!scrollParent) {
    return;
  }
  const { offsetHeight } = target;
  const offsetTop = getTotalOffsetTop(target, scrollParent);
  const { scrollMarginTop, scrollMarginBottom } = getScrollMargins(target);
  const { offsetHeight: parentOffsetHeight, scrollTop } = scrollParent;
  const isAbove = offsetTop - scrollMarginTop < scrollTop;
  const isBelow = offsetTop + offsetHeight + scrollMarginBottom > scrollTop + parentOffsetHeight;
  const buffer = 2;
  if (isAbove) {
    scrollParent.scrollTo(0, offsetTop - scrollMarginTop - buffer);
  } else if (isBelow) {
    scrollParent.scrollTo(0, offsetTop + offsetHeight + scrollMarginBottom - parentOffsetHeight + buffer);
  }
};
var findScrollableParent = (element) => {
  if (!element) {
    return null;
  }
  if (element.scrollHeight > element.offsetHeight) {
    return element;
  }
  return findScrollableParent(element.parentElement);
};
var getTotalOffsetTop = (element, scrollParent) => {
  if (!element || element === scrollParent) {
    return 0;
  }
  if (element.contains(scrollParent)) {
    return scrollParent.offsetTop * -1;
  }
  return element.offsetTop + getTotalOffsetTop(element.offsetParent, scrollParent);
};
var getScrollMargins = (element) => {
  var _element_ownerDocument;
  const win = (_element_ownerDocument = element.ownerDocument) === null || _element_ownerDocument === void 0 ? void 0 : _element_ownerDocument.defaultView;
  if (!win) {
    return {
      scrollMarginTop: 0,
      scrollMarginBottom: 0
    };
  }
  const computedStyles = win.getComputedStyle(element);
  var _getIntValueOfComputedStyle;
  const scrollMarginTop = (_getIntValueOfComputedStyle = getIntValueOfComputedStyle(computedStyles.scrollMarginTop)) !== null && _getIntValueOfComputedStyle !== void 0 ? _getIntValueOfComputedStyle : getIntValueOfComputedStyle(computedStyles.scrollMarginBlockStart);
  var _getIntValueOfComputedStyle1;
  const scrollMarginBottom = (_getIntValueOfComputedStyle1 = getIntValueOfComputedStyle(computedStyles.scrollMarginBottom)) !== null && _getIntValueOfComputedStyle1 !== void 0 ? _getIntValueOfComputedStyle1 : getIntValueOfComputedStyle(computedStyles.scrollMarginBlockEnd);
  return {
    scrollMarginTop,
    scrollMarginBottom
  };
};
var getIntValueOfComputedStyle = (computedStyle) => {
  return computedStyle ? parseInt(computedStyle, 10) : 0;
};

// node_modules/@fluentui/react-aria/lib/activedescendant/useActiveDescendant.js
var createActiveDescendantChangeEvent = (detail) => new CustomEvent("activedescendantchange", {
  bubbles: true,
  cancelable: false,
  composed: true,
  detail
});
function useActiveDescendant(options) {
  const { imperativeRef, matchOption: matchOptionUnstable } = options;
  const focusVisibleRef = React19.useRef(false);
  const shouldShowFocusVisibleAttrRef = React19.useRef(true);
  const activeIdRef = React19.useRef(null);
  const lastActiveIdRef = React19.useRef(null);
  const activeParentRef = React19.useRef(null);
  const attributeVisibilityRef = React19.useRef(true);
  const removeAttribute = React19.useCallback(() => {
    var _activeParentRef_current;
    (_activeParentRef_current = activeParentRef.current) === null || _activeParentRef_current === void 0 ? void 0 : _activeParentRef_current.removeAttribute("aria-activedescendant");
  }, []);
  const setAttribute = React19.useCallback((id) => {
    if (id) {
      activeIdRef.current = id;
    }
    if (attributeVisibilityRef.current && activeIdRef.current) {
      var _activeParentRef_current;
      (_activeParentRef_current = activeParentRef.current) === null || _activeParentRef_current === void 0 ? void 0 : _activeParentRef_current.setAttribute("aria-activedescendant", activeIdRef.current);
    }
  }, []);
  useOnKeyboardNavigationChange((isNavigatingWithKeyboard) => {
    focusVisibleRef.current = isNavigatingWithKeyboard;
    const active = getActiveDescendant();
    if (!active) {
      return;
    }
    if (isNavigatingWithKeyboard && shouldShowFocusVisibleAttrRef.current) {
      active.setAttribute(ACTIVEDESCENDANT_FOCUSVISIBLE_ATTRIBUTE, "");
    } else {
      active.removeAttribute(ACTIVEDESCENDANT_FOCUSVISIBLE_ATTRIBUTE);
    }
  });
  const matchOption = useEventCallback(matchOptionUnstable);
  const listboxRef = React19.useRef(null);
  const { optionWalker, listboxCallbackRef } = useOptionWalker({
    matchOption
  });
  const getActiveDescendant = React19.useCallback(() => {
    var _listboxRef_current;
    return (_listboxRef_current = listboxRef.current) === null || _listboxRef_current === void 0 ? void 0 : _listboxRef_current.querySelector(`#${activeIdRef.current}`);
  }, [
    listboxRef
  ]);
  const setShouldShowFocusVisibleAttribute = React19.useCallback((shouldShow) => {
    shouldShowFocusVisibleAttrRef.current = shouldShow;
    const active = getActiveDescendant();
    if (!active) {
      return;
    }
    if (shouldShow && focusVisibleRef.current) {
      active.setAttribute(ACTIVEDESCENDANT_FOCUSVISIBLE_ATTRIBUTE, "");
    } else {
      active.removeAttribute(ACTIVEDESCENDANT_FOCUSVISIBLE_ATTRIBUTE);
    }
  }, [
    getActiveDescendant
  ]);
  const blurActiveDescendant = React19.useCallback(() => {
    const active = getActiveDescendant();
    if (active) {
      active.removeAttribute(ACTIVEDESCENDANT_ATTRIBUTE);
      active.removeAttribute(ACTIVEDESCENDANT_FOCUSVISIBLE_ATTRIBUTE);
    }
    removeAttribute();
    lastActiveIdRef.current = activeIdRef.current;
    activeIdRef.current = null;
    var _active_id;
    return (_active_id = active === null || active === void 0 ? void 0 : active.id) !== null && _active_id !== void 0 ? _active_id : null;
  }, [
    getActiveDescendant,
    removeAttribute
  ]);
  const focusActiveDescendant = React19.useCallback((nextActive) => {
    if (!nextActive) {
      return;
    }
    const previousActiveId = blurActiveDescendant();
    scrollIntoView(nextActive);
    setAttribute(nextActive.id);
    nextActive.setAttribute(ACTIVEDESCENDANT_ATTRIBUTE, "");
    if (focusVisibleRef.current && shouldShowFocusVisibleAttrRef.current) {
      nextActive.setAttribute(ACTIVEDESCENDANT_FOCUSVISIBLE_ATTRIBUTE, "");
    }
    const event = createActiveDescendantChangeEvent({
      id: nextActive.id,
      previousId: previousActiveId
    });
    nextActive.dispatchEvent(event);
  }, [
    blurActiveDescendant,
    setAttribute
  ]);
  const controller = React19.useMemo(() => ({
    first: ({ passive } = {}) => {
      const first = optionWalker.first();
      if (!passive) {
        focusActiveDescendant(first);
      }
      return first === null || first === void 0 ? void 0 : first.id;
    },
    last: ({ passive } = {}) => {
      const last = optionWalker.last();
      if (!passive) {
        focusActiveDescendant(last);
      }
      return last === null || last === void 0 ? void 0 : last.id;
    },
    next: ({ passive } = {}) => {
      const active = getActiveDescendant();
      if (!active) {
        return;
      }
      optionWalker.setCurrent(active);
      const next = optionWalker.next();
      if (!passive) {
        focusActiveDescendant(next);
      }
      return next === null || next === void 0 ? void 0 : next.id;
    },
    prev: ({ passive } = {}) => {
      const active = getActiveDescendant();
      if (!active) {
        return;
      }
      optionWalker.setCurrent(active);
      const next = optionWalker.prev();
      if (!passive) {
        focusActiveDescendant(next);
      }
      return next === null || next === void 0 ? void 0 : next.id;
    },
    blur: () => {
      blurActiveDescendant();
    },
    active: () => {
      var _getActiveDescendant;
      return (_getActiveDescendant = getActiveDescendant()) === null || _getActiveDescendant === void 0 ? void 0 : _getActiveDescendant.id;
    },
    focus: (id) => {
      if (!listboxRef.current) {
        return;
      }
      const target = listboxRef.current.querySelector(`#${id}`);
      if (target) {
        focusActiveDescendant(target);
      }
    },
    focusLastActive: () => {
      if (!listboxRef.current || !lastActiveIdRef.current) {
        return;
      }
      const target = listboxRef.current.querySelector(`#${lastActiveIdRef.current}`);
      if (target) {
        focusActiveDescendant(target);
        return true;
      }
    },
    find(predicate, { passive, startFrom } = {}) {
      const target = optionWalker.find(predicate, startFrom);
      if (!passive) {
        focusActiveDescendant(target);
      }
      return target === null || target === void 0 ? void 0 : target.id;
    },
    scrollActiveIntoView: () => {
      if (!listboxRef.current) {
        return;
      }
      const active = getActiveDescendant();
      if (!active) {
        return;
      }
      scrollIntoView(active);
    },
    showAttributes() {
      attributeVisibilityRef.current = true;
      setAttribute();
    },
    hideAttributes() {
      attributeVisibilityRef.current = false;
      removeAttribute();
    },
    showFocusVisibleAttributes() {
      setShouldShowFocusVisibleAttribute(true);
    },
    hideFocusVisibleAttributes() {
      setShouldShowFocusVisibleAttribute(false);
    }
  }), [
    optionWalker,
    listboxRef,
    setAttribute,
    removeAttribute,
    focusActiveDescendant,
    blurActiveDescendant,
    getActiveDescendant,
    setShouldShowFocusVisibleAttribute
  ]);
  React19.useImperativeHandle(imperativeRef, () => controller);
  return {
    listboxRef: useMergedRefs(listboxRef, listboxCallbackRef),
    activeParentRef,
    controller
  };
}

// node_modules/@fluentui/react-aria/lib/activedescendant/types.js
var React20 = __toESM(require_react());

// node_modules/@fluentui/react-aria/lib/AriaLiveAnnouncer/AriaLiveAnnouncer.js
var React25 = __toESM(require_react());

// node_modules/@fluentui/react-aria/lib/AriaLiveAnnouncer/renderAriaLiveAnnouncer.js
var renderAriaLiveAnnouncer_unstable = (state, contextValues) => {
  return jsx(AnnounceProvider, {
    value: contextValues.announce,
    children: state.children
  });
};

// node_modules/@fluentui/react-aria/lib/AriaLiveAnnouncer/useAriaLiveAnnouncer.js
var React23 = __toESM(require_react());

// node_modules/@fluentui/react-aria/lib/AriaLiveAnnouncer/useDomAnnounce.js
var React21 = __toESM(require_react());
var MESSAGE_DURATION = 500;
var VISUALLY_HIDDEN_STYLES = {
  clip: "rect(0px, 0px, 0px, 0px)",
  height: "1px",
  margin: "-1px",
  width: "1px",
  position: "absolute",
  overflow: "hidden",
  textWrap: "nowrap"
};
var useDomAnnounce_unstable = () => {
  const { targetDocument } = useFluent();
  const timeoutRef = React21.useRef(void 0);
  const [setAnnounceTimeout, clearAnnounceTimeout] = useTimeout();
  const elementRef = React21.useRef(null);
  const order = React21.useRef(0);
  const batchMessages = React21.useRef([]);
  const [messageQueue] = React21.useState(() => createPriorityQueue((a, b) => {
    if (a.priority !== b.priority) {
      return b.priority - a.priority;
    }
    return a.createdAt - b.createdAt;
  }));
  const queueMessage = React21.useCallback(() => {
    if (timeoutRef.current || !elementRef.current) {
      return;
    }
    const runCycle = () => {
      if (!elementRef.current) {
        return;
      }
      if (targetDocument && messageQueue.peek()) {
        const wrappingEl = targetDocument.createElement("span");
        wrappingEl.innerText = messageQueue.all().filter((msg) => msg.message.trim().length > 0).reduce((prevText, currMsg) => prevText + currMsg.message + ". ", "");
        elementRef.current.innerText = "";
        elementRef.current.appendChild(wrappingEl);
        messageQueue.clear();
        batchMessages.current = [];
        timeoutRef.current = setAnnounceTimeout(() => {
          runCycle();
        }, MESSAGE_DURATION);
      } else {
        elementRef.current.textContent = "";
        clearAnnounceTimeout();
        timeoutRef.current = void 0;
      }
    };
    runCycle();
  }, [
    clearAnnounceTimeout,
    messageQueue,
    setAnnounceTimeout,
    targetDocument
  ]);
  const announce = React21.useCallback((message, options = {}) => {
    const { alert = false, priority = 0, batchId } = options;
    if (alert) {
    }
    const liveMessage = {
      message,
      createdAt: order.current++,
      priority,
      batchId
    };
    if (batchId) {
      const batchMessage = batchMessages.current.find((msg) => msg.batchId === batchId);
      if (batchMessage) {
        messageQueue.remove(batchMessage.message);
        batchMessage.message = liveMessage;
      } else {
        batchMessages.current = [
          ...batchMessages.current,
          {
            batchId,
            message: liveMessage
          }
        ];
      }
    }
    messageQueue.enqueue(liveMessage);
    queueMessage();
  }, [
    messageQueue,
    queueMessage
  ]);
  React21.useEffect(() => {
    if (!targetDocument) {
      return;
    }
    const element = targetDocument.createElement("div");
    element.setAttribute("aria-live", "assertive");
    Object.assign(element.style, VISUALLY_HIDDEN_STYLES);
    targetDocument.body.append(element);
    elementRef.current = element;
    return () => {
      element.remove();
      elementRef.current = null;
      clearAnnounceTimeout();
      timeoutRef.current = void 0;
    };
  }, [
    clearAnnounceTimeout,
    targetDocument
  ]);
  return announce;
};

// node_modules/@fluentui/react-aria/lib/AriaLiveAnnouncer/useAriaNotifyAnnounce.js
var React22 = __toESM(require_react());
var useAriaNotifyAnnounce_unstable = () => {
  const { targetDocument } = useFluent();
  const announce = React22.useCallback((message, options = {}) => {
    if (!targetDocument) {
      return;
    }
    const { alert = false, polite, batchId } = options;
    const defaultPriority = polite ? 0 : alert ? 2 : 1;
    var _options_priority;
    const priority = (_options_priority = options.priority) !== null && _options_priority !== void 0 ? _options_priority : defaultPriority;
    const ariaNotifyOptions = {
      notificationID: batchId,
      priority: priority > 1 ? "important" : "none",
      interrupt: batchId ? priority > 0 ? "all" : "pending" : "none"
    };
    targetDocument.ariaNotify(message, ariaNotifyOptions);
  }, [
    targetDocument
  ]);
  return announce;
};

// node_modules/@fluentui/react-aria/lib/AriaLiveAnnouncer/useAriaLiveAnnouncer.js
var useAriaLiveAnnouncer_unstable = (props) => {
  const { targetDocument } = useFluent();
  const domAnnounce = useDomAnnounce_unstable();
  const ariaNotifyAnnounce = useAriaNotifyAnnounce_unstable();
  const announce = React23.useMemo(() => {
    const supportsAriaNotify = typeof (targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.ariaNotify) === "function";
    return supportsAriaNotify ? ariaNotifyAnnounce : domAnnounce;
  }, [
    targetDocument,
    ariaNotifyAnnounce,
    domAnnounce
  ]);
  return {
    announce,
    children: props.children
  };
};

// node_modules/@fluentui/react-aria/lib/AriaLiveAnnouncer/useAriaLiveAnnouncerContextValues.js
var React24 = __toESM(require_react());
function useAriaLiveAnnouncerContextValues_unstable(state) {
  const { announce } = state;
  return React24.useMemo(() => ({
    announce: {
      announce
    }
  }), [
    announce
  ]);
}

// node_modules/@fluentui/react-aria/lib/AriaLiveAnnouncer/AriaLiveAnnouncer.js
var AriaLiveAnnouncer = (props) => {
  const state = useAriaLiveAnnouncer_unstable(props);
  const contextValues = useAriaLiveAnnouncerContextValues_unstable(state);
  return renderAriaLiveAnnouncer_unstable(state, contextValues);
};
AriaLiveAnnouncer.displayName = "AriaLiveAnnouncer";

// node_modules/@fluentui/react-motion/lib/motions/motionTokens.js
var durations = {
  durationUltraFast: 50,
  durationFaster: 100,
  durationFast: 150,
  durationNormal: 200,
  durationGentle: 250,
  durationSlow: 300,
  durationSlower: 400,
  durationUltraSlow: 500
};
var curves = {
  curveAccelerateMax: "cubic-bezier(0.9,0.1,1,0.2)",
  curveAccelerateMid: "cubic-bezier(1,0,1,1)",
  curveAccelerateMin: "cubic-bezier(0.8,0,0.78,1)",
  curveDecelerateMax: "cubic-bezier(0.1,0.9,0.2,1)",
  curveDecelerateMid: "cubic-bezier(0,0,0,1)",
  curveDecelerateMin: "cubic-bezier(0.33,0,0.1,1)",
  curveEasyEaseMax: "cubic-bezier(0.8,0,0.2,1)",
  curveEasyEase: "cubic-bezier(0.33,0,0.67,1)",
  curveLinear: "cubic-bezier(0,0,1,1)"
};
var motionTokens = {
  ...durations,
  ...curves
};

// node_modules/@fluentui/react-motion/lib/factories/createMotionComponent.js
var React31 = __toESM(require_react());

// node_modules/@fluentui/react-motion/lib/hooks/useAnimateAtoms.js
var React26 = __toESM(require_react());
function useAnimateAtomsInSupportedEnvironment() {
  return React26.useCallback((element, value, options) => {
    const atoms = Array.isArray(value) ? value : [
      value
    ];
    const { isReducedMotion } = options;
    const animations = atoms.map((motion) => {
      const { keyframes: keyframes3, ...params } = motion;
      const animation = element.animate(keyframes3, {
        fill: "forwards",
        ...params,
        ...isReducedMotion && {
          duration: 1
        }
      });
      animation.persist();
      return animation;
    });
    return {
      set playbackRate(rate) {
        animations.forEach((animation) => {
          animation.playbackRate = rate;
        });
      },
      setMotionEndCallbacks(onfinish, oncancel) {
        Promise.all(animations.map((animation) => animation.finished)).then(() => {
          onfinish();
        }).catch((err) => {
          var _element_ownerDocument_defaultView;
          const DOMException = (_element_ownerDocument_defaultView = element.ownerDocument.defaultView) === null || _element_ownerDocument_defaultView === void 0 ? void 0 : _element_ownerDocument_defaultView.DOMException;
          if (DOMException && err instanceof DOMException && err.name === "AbortError") {
            oncancel();
            return;
          }
          throw err;
        });
      },
      cancel: () => {
        animations.forEach((animation) => {
          animation.cancel();
        });
      },
      pause: () => {
        animations.forEach((animation) => {
          animation.pause();
        });
      },
      play: () => {
        animations.forEach((animation) => {
          animation.play();
        });
      },
      finish: () => {
        animations.forEach((animation) => {
          animation.finish();
        });
      }
    };
  }, []);
}
function useAnimateAtoms() {
  "use no memo";
  if (false) {
    return useAnimateAtomsInTestEnvironment();
  }
  return useAnimateAtomsInSupportedEnvironment();
}

// node_modules/@fluentui/react-motion/lib/hooks/useMotionImperativeRef.js
var React27 = __toESM(require_react());
function useMotionImperativeRef(imperativeRef) {
  const animationRef = React27.useRef();
  React27.useImperativeHandle(imperativeRef, () => ({
    setPlayState: (state) => {
      if (state === "running") {
        var _animationRef_current;
        (_animationRef_current = animationRef.current) === null || _animationRef_current === void 0 ? void 0 : _animationRef_current.play();
      }
      if (state === "paused") {
        var _animationRef_current1;
        (_animationRef_current1 = animationRef.current) === null || _animationRef_current1 === void 0 ? void 0 : _animationRef_current1.pause();
      }
    },
    setPlaybackRate: (rate) => {
      if (animationRef.current) {
        animationRef.current.playbackRate = rate;
      }
    }
  }));
  return animationRef;
}

// node_modules/@fluentui/react-motion/lib/hooks/useIsReducedMotion.js
var React28 = __toESM(require_react());
var REDUCED_MEDIA_QUERY = "screen and (prefers-reduced-motion: reduce)";
function useIsReducedMotion() {
  const { targetDocument } = useFluent();
  var _targetDocument_defaultView;
  const targetWindow = (_targetDocument_defaultView = targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.defaultView) !== null && _targetDocument_defaultView !== void 0 ? _targetDocument_defaultView : null;
  const queryValue = React28.useRef(false);
  const isEnabled = React28.useCallback(() => queryValue.current, []);
  React28.useEffect(() => {
    if (targetWindow === null || typeof targetWindow.matchMedia !== "function") {
      return;
    }
    const queryMatch = targetWindow.matchMedia(REDUCED_MEDIA_QUERY);
    if (queryMatch.matches) {
      queryValue.current = true;
    }
    const matchListener = (e) => {
      queryValue.current = e.matches;
    };
    queryMatch.addEventListener("change", matchListener);
    return () => {
      queryMatch.removeEventListener("change", matchListener);
    };
  }, [
    targetWindow
  ]);
  return isEnabled;
}

// node_modules/@fluentui/react-motion/lib/utils/getChildElement.js
var React29 = __toESM(require_react());
var ReactIs = __toESM(require_react_is());
function getChildElement(children2) {
  try {
    const child = React29.Children.only(children2);
    if (typeof child.type === "string" || ReactIs.isForwardRef(child)) {
      return child;
    }
  } catch {
  }
  throw new Error([
    "@fluentui/react-motion: Invalid child element.",
    "\n",
    "Motion factories require a single child element to be passed. ",
    "That element element should support ref forwarding i.e. it should be either an intrinsic element (e.g. div) or a component that uses React.forwardRef()."
  ].join(""));
}

// node_modules/@fluentui/react-motion/lib/contexts/MotionBehaviourContext.js
var React30 = __toESM(require_react());
var MotionBehaviourContext = React30.createContext(void 0);
var MotionBehaviourProvider = MotionBehaviourContext.Provider;
var useMotionBehaviourContext = () => {
  var _React_useContext;
  return (_React_useContext = React30.useContext(MotionBehaviourContext)) !== null && _React_useContext !== void 0 ? _React_useContext : "default";
};

// node_modules/@fluentui/react-motion/lib/factories/createMotionComponent.js
function createMotionComponent(value) {
  const Atom = (props) => {
    "use no memo";
    const { children: children2, imperativeRef, onMotionFinish: onMotionFinishProp, onMotionStart: onMotionStartProp, onMotionCancel: onMotionCancelProp, ..._rest } = props;
    const params = _rest;
    const child = getChildElement(children2);
    const handleRef = useMotionImperativeRef(imperativeRef);
    const elementRef = React31.useRef();
    const skipMotions = useMotionBehaviourContext() === "skip";
    const optionsRef = React31.useRef({
      skipMotions,
      params
    });
    const animateAtoms = useAnimateAtoms();
    const isReducedMotion = useIsReducedMotion();
    const onMotionStart = useEventCallback(() => {
      onMotionStartProp === null || onMotionStartProp === void 0 ? void 0 : onMotionStartProp(null);
    });
    const onMotionFinish = useEventCallback(() => {
      onMotionFinishProp === null || onMotionFinishProp === void 0 ? void 0 : onMotionFinishProp(null);
    });
    const onMotionCancel = useEventCallback(() => {
      onMotionCancelProp === null || onMotionCancelProp === void 0 ? void 0 : onMotionCancelProp(null);
    });
    useIsomorphicLayoutEffect(() => {
      optionsRef.current = {
        skipMotions,
        params
      };
    });
    useIsomorphicLayoutEffect(() => {
      const element = elementRef.current;
      if (element) {
        const atoms = typeof value === "function" ? value({
          element,
          ...optionsRef.current.params
        }) : value;
        onMotionStart();
        const handle = animateAtoms(element, atoms, {
          isReducedMotion: isReducedMotion()
        });
        handleRef.current = handle;
        handle.setMotionEndCallbacks(onMotionFinish, onMotionCancel);
        if (optionsRef.current.skipMotions) {
          handle.finish();
        }
        return () => {
          handle.cancel();
        };
      }
    }, [
      animateAtoms,
      handleRef,
      isReducedMotion,
      onMotionFinish,
      onMotionStart,
      onMotionCancel
    ]);
    return React31.cloneElement(children2, {
      ref: useMergedRefs(elementRef, child.ref)
    });
  };
  return Atom;
}

// node_modules/@fluentui/react-motion/lib/factories/createPresenceComponent.js
var React34 = __toESM(require_react());

// node_modules/@fluentui/react-motion/lib/contexts/PresenceGroupChildContext.js
var React32 = __toESM(require_react());
var PresenceGroupChildContext = React32.createContext(void 0);

// node_modules/@fluentui/react-motion/lib/hooks/useMountedState.js
var React33 = __toESM(require_react());
function useMountedState(visible = false, unmountOnExit = false) {
  const mountedRef = React33.useRef(unmountOnExit ? visible : true);
  const forceUpdate = useForceUpdate();
  const setMounted = React33.useCallback((newValue) => {
    if (mountedRef.current !== newValue) {
      mountedRef.current = newValue;
      forceUpdate();
    }
  }, [
    forceUpdate
  ]);
  React33.useEffect(() => {
    if (visible) {
      mountedRef.current = visible;
    }
  });
  return [
    visible || mountedRef.current,
    setMounted
  ];
}

// node_modules/@fluentui/react-motion/lib/factories/createPresenceComponent.js
var MOTION_DEFINITION = Symbol("MOTION_DEFINITION");
function shouldSkipAnimation(appear, isFirstMount, visible) {
  return !appear && isFirstMount && !!visible;
}
function createPresenceComponent(value) {
  return Object.assign((props) => {
    "use no memo";
    const itemContext = React34.useContext(PresenceGroupChildContext);
    const merged = {
      ...itemContext,
      ...props
    };
    const skipMotions = useMotionBehaviourContext() === "skip";
    const { appear, children: children2, imperativeRef, onExit, onMotionFinish, onMotionStart, onMotionCancel, visible, unmountOnExit, ..._rest } = merged;
    const params = _rest;
    const [mounted, setMounted] = useMountedState(visible, unmountOnExit);
    const child = getChildElement(children2);
    const handleRef = useMotionImperativeRef(imperativeRef);
    const elementRef = React34.useRef();
    const ref = useMergedRefs(elementRef, child.ref);
    const optionsRef = React34.useRef({
      appear,
      params,
      skipMotions
    });
    const animateAtoms = useAnimateAtoms();
    const isFirstMount = useFirstMount();
    const isReducedMotion = useIsReducedMotion();
    const handleMotionStart = useEventCallback((direction) => {
      onMotionStart === null || onMotionStart === void 0 ? void 0 : onMotionStart(null, {
        direction
      });
    });
    const handleMotionFinish = useEventCallback((direction) => {
      onMotionFinish === null || onMotionFinish === void 0 ? void 0 : onMotionFinish(null, {
        direction
      });
      if (direction === "exit" && unmountOnExit) {
        setMounted(false);
        onExit === null || onExit === void 0 ? void 0 : onExit();
      }
    });
    const handleMotionCancel = useEventCallback((direction) => {
      onMotionCancel === null || onMotionCancel === void 0 ? void 0 : onMotionCancel(null, {
        direction
      });
    });
    useIsomorphicLayoutEffect(() => {
      optionsRef.current = {
        appear,
        params,
        skipMotions
      };
    });
    useIsomorphicLayoutEffect(
      () => {
        const element = elementRef.current;
        if (!element || shouldSkipAnimation(optionsRef.current.appear, isFirstMount, visible)) {
          return;
        }
        const presenceMotion = typeof value === "function" ? value({
          element,
          ...optionsRef.current.params
        }) : value;
        const atoms = visible ? presenceMotion.enter : presenceMotion.exit;
        const direction = visible ? "enter" : "exit";
        const applyInitialStyles = !visible && isFirstMount;
        const skipAnimation = optionsRef.current.skipMotions;
        if (!applyInitialStyles) {
          handleMotionStart(direction);
        }
        const handle = animateAtoms(element, atoms, {
          isReducedMotion: isReducedMotion()
        });
        if (applyInitialStyles) {
          handle.finish();
          return;
        }
        handleRef.current = handle;
        handle.setMotionEndCallbacks(() => handleMotionFinish(direction), () => handleMotionCancel(direction));
        if (skipAnimation) {
          handle.finish();
        }
        return () => {
          handle.cancel();
        };
      },
      // Excluding `isFirstMount` from deps to prevent re-triggering the animation on subsequent renders
      // eslint-disable-next-line react-hooks/exhaustive-deps
      [
        animateAtoms,
        handleRef,
        isReducedMotion,
        handleMotionFinish,
        handleMotionStart,
        handleMotionCancel,
        visible
      ]
    );
    if (mounted) {
      return React34.cloneElement(child, {
        ref
      });
    }
    return null;
  }, {
    // Heads up!
    // Always normalize it to a function to simplify types
    [MOTION_DEFINITION]: typeof value === "function" ? value : () => value
  });
}

// node_modules/@fluentui/react-motion/lib/factories/createPresenceComponentVariant.js
function overridePresenceMotion(presenceMotion, override) {
  return (...args) => {
    const { enter, exit } = presenceMotion(...args);
    return {
      enter: {
        ...enter,
        ...override.all,
        ...override.enter
      },
      exit: {
        ...exit,
        ...override.all,
        ...override.exit
      }
    };
  };
}
function createPresenceComponentVariant(component, override) {
  return createPresenceComponent(overridePresenceMotion(component[MOTION_DEFINITION], override));
}

// node_modules/@swc/helpers/esm/_define_property.js
function _define_property(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else obj[key] = value;
  return obj;
}

// node_modules/@fluentui/react-motion/lib/components/PresenceGroup.js
var React37 = __toESM(require_react());

// node_modules/@fluentui/react-motion/lib/utils/groups/mergeChildMappings.js
function mergeChildMappings(prevMapping, nextMapping) {
  function getValueForKey(key) {
    return key in nextMapping ? nextMapping[key] : prevMapping[key];
  }
  const nextKeysPending = {};
  let pendingKeys = [];
  for (const prevKey in prevMapping) {
    if (prevKey in nextMapping) {
      if (pendingKeys.length) {
        nextKeysPending[prevKey] = pendingKeys;
        pendingKeys = [];
      }
      continue;
    }
    pendingKeys.push(prevKey);
  }
  const childMapping = {};
  for (const nextKey in nextMapping) {
    if (nextKeysPending[nextKey]) {
      for (const pendingNextKey of nextKeysPending[nextKey]) {
        childMapping[pendingNextKey] = getValueForKey(pendingNextKey);
      }
    }
    childMapping[nextKey] = getValueForKey(nextKey);
  }
  for (const pendingKey of pendingKeys) {
    childMapping[pendingKey] = getValueForKey(pendingKey);
  }
  return childMapping;
}

// node_modules/@fluentui/react-motion/lib/utils/groups/getNextChildMapping.js
function getNextChildMapping(prevChildMapping, nextChildMapping) {
  const childrenMapping = mergeChildMappings(prevChildMapping, nextChildMapping);
  Object.entries(childrenMapping).forEach(([key, childDefinition]) => {
    const hasPrev = key in prevChildMapping;
    const hasNext = key in nextChildMapping;
    if (hasNext) {
      if (hasPrev) {
        childrenMapping[key] = {
          ...childDefinition
        };
        return;
      }
      childrenMapping[key] = {
        ...childDefinition,
        appear: true,
        visible: true
      };
      return;
    }
    childrenMapping[key] = {
      ...childDefinition,
      visible: false
    };
  });
  return childrenMapping;
}

// node_modules/@fluentui/react-motion/lib/utils/groups/getChildMapping.js
var React35 = __toESM(require_react());
function getChildMapping(children2) {
  const childMapping = {};
  if (children2) {
    React35.Children.toArray(children2).forEach((child) => {
      if (React35.isValidElement(child)) {
        var _child_key;
        childMapping[(_child_key = child.key) !== null && _child_key !== void 0 ? _child_key : ""] = {
          appear: false,
          element: child,
          visible: true,
          unmountOnExit: true
        };
      }
    });
  }
  return childMapping;
}

// node_modules/@fluentui/react-motion/lib/components/PresenceGroupItemProvider.js
var React36 = __toESM(require_react());
var PresenceGroupItemProvider = (props) => {
  const { appear, childKey, onExit, visible, unmountOnExit } = props;
  const contextValue = React36.useMemo(() => ({
    appear,
    visible,
    onExit: () => onExit(childKey),
    unmountOnExit
  }), [
    appear,
    childKey,
    onExit,
    visible,
    unmountOnExit
  ]);
  return React36.createElement(PresenceGroupChildContext.Provider, {
    value: contextValue
  }, props.children);
};

// node_modules/@fluentui/react-motion/lib/components/PresenceGroup.js
var PresenceGroup = class extends React37.Component {
  static getDerivedStateFromProps(nextProps, { childMapping: prevChildMapping, firstRender }) {
    const nextChildMapping = getChildMapping(nextProps.children);
    return {
      childMapping: firstRender ? nextChildMapping : getNextChildMapping(prevChildMapping, nextChildMapping),
      firstRender: false
    };
  }
  componentDidMount() {
    this.mounted = true;
  }
  componentWillUnmount() {
    this.mounted = false;
  }
  render() {
    return React37.createElement(React37.Fragment, null, Object.entries(this.state.childMapping).map(([childKey, childProps]) => React37.createElement(PresenceGroupItemProvider, {
      ...childProps,
      childKey,
      key: childKey,
      onExit: this.handleExit
    }, childProps.element)));
  }
  constructor(props, context) {
    super(props, context);
    _define_property(this, "mounted", false);
    _define_property(this, "handleExit", (childKey) => {
      const currentChildMapping = getChildMapping(this.props.children);
      if (childKey in currentChildMapping) {
        return;
      }
      if (this.mounted) {
        this.setState((state) => {
          const childMapping = {
            ...state.childMapping
          };
          delete childMapping[childKey];
          return {
            childMapping
          };
        });
      }
    });
    this.state = {
      childMapping: {},
      firstRender: true
    };
  }
};

// node_modules/@fluentui/react-motion/lib/slots/presenceMotionSlot.js
var React38 = __toESM(require_react());
function presenceMotionSlot(motion, options) {
  const { as, children: children2, ...rest } = motion !== null && motion !== void 0 ? motion : {};
  if (true) {
    if (typeof as !== "undefined") {
      throw new Error(`@fluentui/react-motion: "as" property is not supported on motion slots.`);
    }
  }
  if (motion === null) {
    const isUnmounted = !options.defaultProps.visible && options.defaultProps.unmountOnExit;
    const renderFn = (_, props) => isUnmounted ? null : React38.createElement(React38.Fragment, null, props.children);
    return {
      [SLOT_RENDER_FUNCTION_SYMBOL]: renderFn,
      [SLOT_ELEMENT_TYPE_SYMBOL]: options.elementType
    };
  }
  const propsWithMetadata = {
    ...options.defaultProps,
    ...rest,
    [SLOT_ELEMENT_TYPE_SYMBOL]: options.elementType
  };
  if (typeof children2 === "function") {
    propsWithMetadata[SLOT_RENDER_FUNCTION_SYMBOL] = children2;
  }
  return propsWithMetadata;
}

// node_modules/@fluentui/react-accordion/lib/components/AccordionHeader/useAccordionHeader.js
var useAccordionHeader_unstable = (props, ref) => {
  const { icon, button, expandIcon, inline = false, size = "medium", expandIconPosition = "start" } = props;
  const { value, disabled, open } = useAccordionItemContext_unstable();
  const requestToggle = useAccordionContext_unstable((ctx) => ctx.requestToggle);
  const disabledFocusable = useAccordionContext_unstable((ctx) => !ctx.collapsible && ctx.openItems.length === 1 && open);
  const { dir } = useFluent();
  let expandIconRotation;
  if (expandIconPosition === "end") {
    expandIconRotation = open ? -90 : 90;
  } else {
    expandIconRotation = open ? 90 : dir !== "rtl" ? 0 : 180;
  }
  const buttonSlot = slot_exports.always(button, {
    elementType: "button",
    defaultProps: {
      disabled,
      disabledFocusable,
      "aria-expanded": open,
      type: "button"
    }
  });
  buttonSlot.onClick = useEventCallback((event) => {
    if (isResolvedShorthand(button)) {
      var _button_onClick;
      (_button_onClick = button.onClick) === null || _button_onClick === void 0 ? void 0 : _button_onClick.call(button, event);
    }
    if (!event.defaultPrevented) {
      requestToggle({
        value,
        event
      });
    }
  });
  return {
    disabled,
    open,
    size,
    inline,
    expandIconPosition,
    components: {
      root: "div",
      button: "button",
      expandIcon: "span",
      icon: "div"
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      // FIXME:
      // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`
      // but since it would be a breaking change to fix it, we are casting ref to it's proper type
      ref,
      ...props
    }), {
      elementType: "div"
    }),
    icon: slot_exports.optional(icon, {
      elementType: "div"
    }),
    expandIcon: slot_exports.optional(expandIcon, {
      renderByDefault: true,
      defaultProps: {
        children: React39.createElement(ChevronRightRegular, {
          style: {
            transform: `rotate(${expandIconRotation}deg)`,
            transition: `transform ${motionTokens.durationNormal}ms ease-out`
          }
        }),
        "aria-hidden": true
      },
      elementType: "span"
    }),
    button: useARIAButtonProps(buttonSlot.as, buttonSlot)
  };
};

// node_modules/@fluentui/react-accordion/lib/contexts/accordionHeader.js
var React40 = __toESM(require_react());
var AccordionHeaderContext = React40.createContext(void 0);
var { Provider: AccordionHeaderProvider } = AccordionHeaderContext;

// node_modules/@fluentui/react-accordion/lib/components/AccordionHeader/renderAccordionHeader.js
var renderAccordionHeader_unstable = (state, contextValues) => {
  assertSlots(state);
  return jsx(AccordionHeaderProvider, {
    value: contextValues.accordionHeader,
    children: jsx(state.root, {
      children: jsxs(state.button, {
        children: [
          state.expandIconPosition === "start" && state.expandIcon && jsx(state.expandIcon, {}),
          state.icon && jsx(state.icon, {}),
          state.root.children,
          state.expandIconPosition === "end" && state.expandIcon && jsx(state.expandIcon, {})
        ]
      })
    })
  });
};

// node_modules/@fluentui/react-accordion/lib/components/AccordionHeader/useAccordionHeaderStyles.styles.js
var accordionHeaderClassNames = {
  root: "fui-AccordionHeader",
  button: "fui-AccordionHeader__button",
  expandIcon: "fui-AccordionHeader__expandIcon",
  icon: "fui-AccordionHeader__icon"
};
var useStyles2 = __styles2({
  resetButton: {
    B7ck84d: "f1e4lqlz",
    De3pzq: "f1u2r49w",
    sj55zd: "f1ym3bx4",
    Bahqtrf: "f1mo0ibp",
    Be2twd7: "fjoy568",
    Bg96gwp: "fytdu2e",
    B68tc82: 0,
    Bmxbyg5: 0,
    Bpg54ce: "f1gl81tg",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f1mk8lai",
    Bv0vk6g: "f37px4s",
    fsow6f: "fgusgyc"
  },
  focusIndicator: {
    Brovlpu: "ftqa4ok",
    B486eqv: "f2hkw1w",
    B8q5s1w: "f8hki3x",
    Bci5o5g: ["f1d2448m", "ffh67wi"],
    n8qw10: "f1bjia2o",
    Bdrgwmp: ["ffh67wi", "f1d2448m"],
    Bb7d1vk: "f226i61",
    zhwhgb: ["f13kzufm", "fsx75g8"],
    dhy2o1: "flujwa2",
    Gfyso: ["fsx75g8", "f13kzufm"],
    Bm4h7ae: "f15bsgw9",
    B7ys5i9: "f14e48fq",
    Busjfv9: "f18yb2kv",
    Bhk32uz: "fd6o370",
    f6g5ot: 0,
    Boxcth7: 0,
    Bhdgwq3: 0,
    hgwjuy: 0,
    Bshpdp8: 0,
    Bsom6fd: 0,
    Blkhhs4: 0,
    Bonggc9: 0,
    Ddfuxk: 0,
    i03rao: 0,
    kclons: 0,
    clg4pj: 0,
    Bpqj9nj: 0,
    B6dhp37: 0,
    Bf4ptjt: 0,
    Bqtpl0w: 0,
    i4rwgc: "ffwy5si",
    Dah5zi: 0,
    B1tsrr9: 0,
    qqdqy8: 0,
    Bkh64rk: 0,
    e3fwne: "f3znvyf",
    J0r882: "f57olzd",
    Bule8hv: ["f4stah7", "fs1por5"],
    Bjwuhne: "f480a47",
    Ghsupd: ["fs1por5", "f4stah7"]
  },
  root: {
    sj55zd: "f19n0e5",
    De3pzq: "f1c21dwh",
    jrapky: 0,
    Frg6f3: 0,
    t21cq0: 0,
    B6of3ja: 0,
    B74szlk: "f1s184ao",
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "ft85np5"
  },
  rootDisabled: {
    Bcmaq0h: "fwrgwhw",
    sj55zd: "f1s2aq7o"
  },
  rootInline: {
    mc9l5x: "f14t3ns0"
  },
  button: {
    qhf8xq: "f10pi13n",
    a9b677: "fly5x3f",
    B4j52fo: "fre7gi1",
    Bekrc4i: ["f1358rze", "f1rvrf73"],
    Bn0qgzm: "fqdk4by",
    ibv6hh: ["f1rvrf73", "f1358rze"],
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: ["f1rmphuq", "f26yw9j"],
    sshi5w: "f5pgtk9",
    mc9l5x: "f22iagw",
    Bt984gj: "f122n59",
    Bceei9c: "f1k6fduh",
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "figsok6",
    Bg96gwp: "f1i3iumi",
    B7ck84d: "f1ewtqcl"
  },
  buttonSmall: {
    sshi5w: "f1nxs5xn",
    Be2twd7: "fy9rknc"
  },
  buttonLarge: {
    Bg96gwp: "faaz57k",
    Be2twd7: "fod5ikn"
  },
  buttonExtraLarge: {
    Bg96gwp: "f106mvju",
    Be2twd7: "f1pp30po"
  },
  buttonInline: {
    mc9l5x: "ftuwxu6"
  },
  buttonExpandIconEndNoIcon: {
    uwmqm3: ["f1uw59to", "fw5db7e"]
  },
  buttonExpandIconEnd: {
    z189sj: ["f11gcy0p", "f1ng84yb"]
  },
  buttonDisabled: {
    Bceei9c: "fdrzuqr"
  },
  expandIcon: {
    Bqenvij: "f1l02sjl",
    mc9l5x: "f22iagw",
    Bt984gj: "f122n59",
    Bg96gwp: "f106mvju",
    Be2twd7: "f1pp30po"
  },
  expandIconStart: {
    z189sj: ["f1vdfbxk", "f1f5gg8d"]
  },
  expandIconEnd: {
    Bh6795r: "fqerorx",
    Bnnss6s: "f1neuvcm",
    xawz: "flqd7gy",
    mc9l5x: "f22iagw",
    Brf1p80: "f9c4gz4",
    uwmqm3: ["f1f5gg8d", "f1vdfbxk"]
  },
  icon: {
    Bqenvij: "f1l02sjl",
    mc9l5x: "f22iagw",
    Bt984gj: "f122n59",
    z189sj: ["f1vdfbxk", "f1f5gg8d"],
    Bg96gwp: "f106mvju",
    Be2twd7: "f1pp30po"
  }
}, {
  d: [".f1e4lqlz{box-sizing:content-box;}", ".f1u2r49w{background-color:inherit;}", ".f1ym3bx4{color:inherit;}", ".f1mo0ibp{font-family:inherit;}", ".fjoy568{font-size:inherit;}", ".fytdu2e{line-height:normal;}", [".f1gl81tg{overflow:visible;}", {
    p: -1
  }], [".f1mk8lai{padding:0;}", {
    p: -1
  }], ".f37px4s{-webkit-appearance:button;}", ".fgusgyc{text-align:unset;}", ".f8hki3x[data-fui-focus-visible]{border-top-color:transparent;}", ".f1d2448m[data-fui-focus-visible]{border-right-color:transparent;}", ".ffh67wi[data-fui-focus-visible]{border-left-color:transparent;}", ".f1bjia2o[data-fui-focus-visible]{border-bottom-color:transparent;}", '.f15bsgw9[data-fui-focus-visible]::after{content:"";}', ".f14e48fq[data-fui-focus-visible]::after{position:absolute;}", ".f18yb2kv[data-fui-focus-visible]::after{pointer-events:none;}", ".fd6o370[data-fui-focus-visible]::after{z-index:1;}", [".ffwy5si[data-fui-focus-visible]::after{border:2px solid var(--colorStrokeFocus2);}", {
    p: -2
  }], [".f3znvyf[data-fui-focus-visible]::after{border-radius:var(--borderRadiusMedium);}", {
    p: -1
  }], ".f57olzd[data-fui-focus-visible]::after{top:calc(2px * -1);}", ".f4stah7[data-fui-focus-visible]::after{right:calc(2px * -1);}", ".fs1por5[data-fui-focus-visible]::after{left:calc(2px * -1);}", ".f480a47[data-fui-focus-visible]::after{bottom:calc(2px * -1);}", ".f19n0e5{color:var(--colorNeutralForeground1);}", ".f1c21dwh{background-color:var(--colorTransparentBackground);}", [".f1s184ao{margin:0;}", {
    p: -1
  }], [".ft85np5{border-radius:var(--borderRadiusMedium);}", {
    p: -1
  }], ".fwrgwhw{background-image:none;}", ".f1s2aq7o{color:var(--colorNeutralForegroundDisabled);}", ".f14t3ns0{display:inline-block;}", ".f10pi13n{position:relative;}", ".fly5x3f{width:100%;}", ".fre7gi1{border-top-width:0;}", ".f1358rze{border-right-width:0;}", ".f1rvrf73{border-left-width:0;}", ".fqdk4by{border-bottom-width:0;}", [".f1rmphuq{padding:0 var(--spacingHorizontalM) 0 var(--spacingHorizontalMNudge);}", {
    p: -1
  }], [".f26yw9j{padding:0 var(--spacingHorizontalMNudge) 0 var(--spacingHorizontalM);}", {
    p: -1
  }], ".f5pgtk9{min-height:44px;}", ".f22iagw{display:flex;}", ".f122n59{align-items:center;}", ".f1k6fduh{cursor:pointer;}", ".fk6fouc{font-family:var(--fontFamilyBase);}", ".fkhj508{font-size:var(--fontSizeBase300);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}", ".f1ewtqcl{box-sizing:border-box;}", ".f1nxs5xn{min-height:32px;}", ".fy9rknc{font-size:var(--fontSizeBase200);}", ".faaz57k{line-height:var(--lineHeightBase400);}", ".fod5ikn{font-size:var(--fontSizeBase400);}", ".f106mvju{line-height:var(--lineHeightBase500);}", ".f1pp30po{font-size:var(--fontSizeBase500);}", ".ftuwxu6{display:inline-flex;}", ".f1uw59to{padding-left:var(--spacingHorizontalM);}", ".fw5db7e{padding-right:var(--spacingHorizontalM);}", ".f11gcy0p{padding-right:var(--spacingHorizontalMNudge);}", ".f1ng84yb{padding-left:var(--spacingHorizontalMNudge);}", ".fdrzuqr{cursor:not-allowed;}", ".f1l02sjl{height:100%;}", ".f1vdfbxk{padding-right:var(--spacingHorizontalS);}", ".f1f5gg8d{padding-left:var(--spacingHorizontalS);}", ".fqerorx{flex-grow:1;}", ".f1neuvcm{flex-shrink:1;}", ".flqd7gy{flex-basis:0%;}", ".f9c4gz4{justify-content:flex-end;}"],
  f: [".ftqa4ok:focus{outline-style:none;}"],
  i: [".f2hkw1w:focus-visible{outline-style:none;}"],
  m: [["@media (forced-colors: active){.f226i61[data-fui-focus-visible]::after{border-top-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f13kzufm[data-fui-focus-visible]::after{border-right-color:Highlight;}.fsx75g8[data-fui-focus-visible]::after{border-left-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.flujwa2[data-fui-focus-visible]::after{border-bottom-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }]]
});
var useAccordionHeaderStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles2();
  state.root.className = mergeClasses(accordionHeaderClassNames.root, styles.root, state.inline && styles.rootInline, state.disabled && styles.rootDisabled, state.root.className);
  state.button.className = mergeClasses(accordionHeaderClassNames.button, styles.resetButton, styles.button, styles.focusIndicator, state.expandIconPosition === "end" && !state.icon && styles.buttonExpandIconEndNoIcon, state.expandIconPosition === "end" && styles.buttonExpandIconEnd, state.inline && styles.buttonInline, state.size === "small" && styles.buttonSmall, state.size === "large" && styles.buttonLarge, state.size === "extra-large" && styles.buttonExtraLarge, state.disabled && styles.buttonDisabled, state.button.className);
  if (state.expandIcon) {
    state.expandIcon.className = mergeClasses(accordionHeaderClassNames.expandIcon, styles.expandIcon, state.expandIconPosition === "start" && styles.expandIconStart, state.expandIconPosition === "end" && styles.expandIconEnd, state.expandIcon.className);
  }
  if (state.icon) {
    state.icon.className = mergeClasses(accordionHeaderClassNames.icon, styles.icon, state.icon.className);
  }
  return state;
};

// node_modules/@fluentui/react-accordion/lib/components/AccordionHeader/useAccordionHeaderContextValues.js
var React41 = __toESM(require_react());
function useAccordionHeaderContextValues_unstable(state) {
  const { disabled, expandIconPosition, open, size } = state;
  const accordionHeader = React41.useMemo(() => ({
    disabled,
    expandIconPosition,
    open,
    size
  }), [
    disabled,
    expandIconPosition,
    open,
    size
  ]);
  return {
    accordionHeader
  };
}

// node_modules/@fluentui/react-accordion/lib/components/AccordionHeader/AccordionHeader.js
var AccordionHeader = React42.forwardRef((props, ref) => {
  const state = useAccordionHeader_unstable(props, ref);
  const contextValues = useAccordionHeaderContextValues_unstable(state);
  useAccordionHeaderStyles_unstable(state);
  useCustomStyleHook("useAccordionHeaderStyles_unstable")(state);
  return renderAccordionHeader_unstable(state, contextValues);
});
AccordionHeader.displayName = "AccordionHeader";

// node_modules/@fluentui/react-accordion/lib/components/AccordionPanel/AccordionPanel.js
var React44 = __toESM(require_react());

// node_modules/@fluentui/react-accordion/lib/components/AccordionPanel/useAccordionPanel.js
var React43 = __toESM(require_react());

// node_modules/@fluentui/react-motion-components-preview/lib/components/Collapse/Collapse.js
var createCollapsePresence = ({ enterDuration = motionTokens.durationNormal, enterEasing = motionTokens.curveEasyEaseMax, exitDuration = enterDuration, exitEasing = enterEasing } = {}) => ({ element, animateOpacity = true, orientation = "vertical" }) => {
  const fromOpacity = 0;
  const toOpacity = 1;
  const fromSize = "0";
  const measuredSize = orientation === "horizontal" ? element.scrollWidth : element.scrollHeight;
  const toSize = `${measuredSize}px`;
  const sizeName = orientation === "horizontal" ? "maxWidth" : "maxHeight";
  const overflowName = orientation === "horizontal" ? "overflowX" : "overflowY";
  const enterAtoms = [
    // Expand size (height or width)
    {
      keyframes: [
        {
          [sizeName]: fromSize,
          [overflowName]: "hidden"
        },
        {
          [sizeName]: toSize,
          offset: 0.9999,
          [overflowName]: "hidden"
        },
        {
          [sizeName]: "unset",
          [overflowName]: "unset"
        }
      ],
      duration: enterDuration,
      easing: enterEasing
    }
  ];
  if (animateOpacity) {
    enterAtoms.push({
      keyframes: [
        {
          opacity: fromOpacity
        },
        {
          opacity: toOpacity
        }
      ],
      duration: enterDuration,
      easing: enterEasing,
      fill: "both"
    });
  }
  const exitAtoms = [];
  if (animateOpacity) {
    exitAtoms.push({
      keyframes: [
        {
          opacity: toOpacity
        },
        {
          opacity: fromOpacity
        }
      ],
      duration: exitDuration,
      easing: exitEasing
    });
  }
  exitAtoms.push(
    // Collapse size (height or width)
    {
      keyframes: [
        {
          [sizeName]: toSize,
          [overflowName]: "hidden"
        },
        {
          [sizeName]: fromSize,
          [overflowName]: "hidden"
        }
      ],
      duration: exitDuration,
      easing: exitEasing,
      fill: "both"
    }
  );
  return {
    enter: enterAtoms,
    exit: exitAtoms
  };
};
var Collapse = createPresenceComponent(createCollapsePresence());
var CollapseSnappy = createPresenceComponent(createCollapsePresence({
  enterDuration: motionTokens.durationFast
}));
var CollapseExaggerated = createPresenceComponent(createCollapsePresence({
  enterDuration: motionTokens.durationSlower
}));

// node_modules/@fluentui/react-motion-components-preview/lib/components/Fade/Fade.js
var duration = motionTokens.durationNormal;
var easing = motionTokens.curveEasyEase;
var fadeMotion = {
  enter: {
    duration,
    easing,
    keyframes: [
      {
        opacity: 0
      },
      {
        opacity: 1
      }
    ]
  },
  exit: {
    duration,
    easing,
    keyframes: [
      {
        opacity: 1
      },
      {
        opacity: 0
      }
    ]
  }
};
var Fade = createPresenceComponent(fadeMotion);
var FadeSnappy = createPresenceComponentVariant(Fade, {
  all: {
    duration: motionTokens.durationFast
  }
});
var FadeExaggerated = createPresenceComponentVariant(Fade, {
  all: {
    duration: motionTokens.durationGentle
  }
});

// node_modules/@fluentui/react-motion-components-preview/lib/components/Scale/Scale.js
var scaleMotion = ({ animateOpacity = true }) => {
  const fromOpacity = animateOpacity ? 0 : 1;
  const toOpacity = 1;
  const fromScale = 0.9;
  const toScale = 1;
  const enterKeyframes = [
    {
      opacity: fromOpacity,
      transform: `scale3d(${fromScale}, ${fromScale}, 1)`,
      visibility: "visible"
    },
    {
      opacity: toOpacity,
      transform: `scale3d(${toScale}, ${toScale}, 1)`
    }
  ];
  const exitKeyframes = [
    {
      opacity: toOpacity,
      transform: `scale3d(${toScale}, ${toScale}, 1)`
    },
    {
      opacity: fromOpacity,
      transform: `scale3d(${fromScale}, ${fromScale}, 1)`,
      visibility: "hidden"
    }
  ];
  return {
    enter: {
      duration: motionTokens.durationGentle,
      easing: motionTokens.curveDecelerateMax,
      keyframes: enterKeyframes
    },
    exit: {
      duration: motionTokens.durationNormal,
      easing: motionTokens.curveAccelerateMax,
      keyframes: exitKeyframes
    }
  };
};
var Scale = createPresenceComponent(scaleMotion);
var ScaleSnappy = createPresenceComponentVariant(Scale, {
  enter: {
    duration: motionTokens.durationNormal,
    easing: motionTokens.curveDecelerateMax
  },
  exit: {
    duration: motionTokens.durationFast,
    easing: motionTokens.curveAccelerateMax
  }
});
var ScaleExaggerated = createPresenceComponentVariant(Scale, {
  enter: {
    duration: motionTokens.durationSlow,
    easing: motionTokens.curveDecelerateMax
  },
  exit: {
    duration: motionTokens.durationGentle,
    easing: motionTokens.curveAccelerateMax
  }
});

// node_modules/@fluentui/react-accordion/lib/components/AccordionPanel/useAccordionPanel.js
var useAccordionPanel_unstable = (props, ref) => {
  const { open } = useAccordionItemContext_unstable();
  const focusableProps = useTabsterAttributes({
    focusable: {
      excludeFromMover: true
    }
  });
  const navigation = useAccordionContext_unstable((ctx) => ctx.navigation);
  return {
    open,
    components: {
      root: "div",
      // TODO: remove once React v18 slot API is modified
      // This is a problem at the moment due to UnknownSlotProps assumption
      // that `children` property is `ReactNode`, which in this case is not valid
      // as PresenceComponentProps['children'] is `ReactElement`
      collapseMotion: Collapse
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      // FIXME:
      // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`
      // but since it would be a breaking change to fix it, we are casting ref to it's proper type
      ref,
      ...props,
      ...navigation && focusableProps
    }), {
      elementType: "div"
    }),
    collapseMotion: presenceMotionSlot(props.collapseMotion, {
      elementType: Collapse,
      defaultProps: {
        visible: open,
        unmountOnExit: true
      }
    })
  };
};

// node_modules/@fluentui/react-accordion/lib/components/AccordionPanel/renderAccordionPanel.js
var renderAccordionPanel_unstable = (state) => {
  assertSlots(state);
  return state.collapseMotion ? jsx(state.collapseMotion, {
    children: jsx(state.root, {})
  }) : jsx(state.root, {});
};

// node_modules/@fluentui/react-accordion/lib/components/AccordionPanel/useAccordionPanelStyles.styles.js
var accordionPanelClassNames = {
  root: "fui-AccordionPanel"
};
var useStyles3 = __styles2({
  root: {
    jrapky: 0,
    Frg6f3: 0,
    t21cq0: 0,
    B6of3ja: 0,
    B74szlk: "f1axvtxu"
  }
}, {
  d: [[".f1axvtxu{margin:0 var(--spacingHorizontalM);}", {
    p: -1
  }]]
});
var useAccordionPanelStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles3();
  state.root.className = mergeClasses(accordionPanelClassNames.root, styles.root, state.root.className);
  return state;
};

// node_modules/@fluentui/react-accordion/lib/components/AccordionPanel/AccordionPanel.js
var AccordionPanel = React44.forwardRef((props, ref) => {
  const state = useAccordionPanel_unstable(props, ref);
  useAccordionPanelStyles_unstable(state);
  useCustomStyleHook("useAccordionPanelStyles_unstable")(state);
  return renderAccordionPanel_unstable(state);
});
AccordionPanel.displayName = "AccordionPanel";

// node_modules/@fluentui/react-avatar/lib/components/Avatar/Avatar.js
var React54 = __toESM(require_react());

// node_modules/@fluentui/react-avatar/lib/components/Avatar/renderAvatar.js
var renderAvatar_unstable = (state) => {
  assertSlots(state);
  return jsxs(state.root, {
    children: [
      state.initials && jsx(state.initials, {}),
      state.icon && jsx(state.icon, {}),
      state.image && jsx(state.image, {}),
      state.badge && jsx(state.badge, {}),
      state.activeAriaLabelElement
    ]
  });
};

// node_modules/@fluentui/react-avatar/lib/components/Avatar/useAvatar.js
var React53 = __toESM(require_react());

// node_modules/@fluentui/react-avatar/lib/utils/getInitials.js
var UNWANTED_ENCLOSURES_REGEX = /[\(\[\{][^\)\]\}]*[\)\]\}]/g;
var UNWANTED_CHARS_REGEX = /[\0-\u001F\!-/:-@\[-`\{-\u00BF\u0250-\u036F\uD800-\uFFFF]/g;
var PHONENUMBER_REGEX = /^\d+[\d\s]*(:?ext|x|)\s*\d+$/i;
var MULTIPLE_WHITESPACES_REGEX = /\s+/g;
var UNSUPPORTED_TEXT_REGEX = /[\u0600-\u06FF\u0750-\u077F\u08A0-\u08FF\u1100-\u11FF\u3130-\u318F\uA960-\uA97F\uAC00-\uD7AF\uD7B0-\uD7FF\u3040-\u309F\u30A0-\u30FF\u3400-\u4DBF\u4E00-\u9FFF\uF900-\uFAFF]|[\uD840-\uD869][\uDC00-\uDED6]/;
function getInitialsLatin(displayName, isRtl, firstInitialOnly) {
  let initials = "";
  const splits = displayName.split(" ");
  if (splits.length !== 0) {
    initials += splits[0].charAt(0).toUpperCase();
  }
  if (!firstInitialOnly) {
    if (splits.length === 2) {
      initials += splits[1].charAt(0).toUpperCase();
    } else if (splits.length === 3) {
      initials += splits[2].charAt(0).toUpperCase();
    }
  }
  if (isRtl && initials.length > 1) {
    return initials.charAt(1) + initials.charAt(0);
  }
  return initials;
}
function cleanupDisplayName(displayName) {
  displayName = displayName.replace(UNWANTED_ENCLOSURES_REGEX, "");
  displayName = displayName.replace(UNWANTED_CHARS_REGEX, "");
  displayName = displayName.replace(MULTIPLE_WHITESPACES_REGEX, " ");
  displayName = displayName.trim();
  return displayName;
}
function getInitials(displayName, isRtl, options) {
  if (!displayName) {
    return "";
  }
  displayName = cleanupDisplayName(displayName);
  if (UNSUPPORTED_TEXT_REGEX.test(displayName) || !(options === null || options === void 0 ? void 0 : options.allowPhoneInitials) && PHONENUMBER_REGEX.test(displayName)) {
    return "";
  }
  return getInitialsLatin(displayName, isRtl, options === null || options === void 0 ? void 0 : options.firstInitialOnly);
}

// node_modules/@fluentui/react-avatar/lib/utils/partitionAvatarGroupItems.js
var partitionAvatarGroupItems = (options) => {
  const { items } = options;
  const isPie = options.layout === "pie";
  if (isPie) {
    return {
      inlineItems: items.slice(0, 3),
      overflowItems: items.length > 0 ? items : void 0
    };
  }
  var _options_maxInlineItems;
  const maxInlineItems = (_options_maxInlineItems = options.maxInlineItems) !== null && _options_maxInlineItems !== void 0 ? _options_maxInlineItems : 5;
  const inlineCount = -(maxInlineItems - (items.length > maxInlineItems ? 1 : 0));
  const overflowItems = items.slice(0, inlineCount);
  return {
    inlineItems: items.slice(inlineCount),
    overflowItems: overflowItems.length > 0 ? overflowItems : void 0
  };
};

// node_modules/@fluentui/react-badge/lib/components/Badge/Badge.js
var React46 = __toESM(require_react());

// node_modules/@fluentui/react-badge/lib/components/Badge/useBadge.js
var React45 = __toESM(require_react());
var useBadge_unstable = (props, ref) => {
  const { shape = "circular", size = "medium", iconPosition = "before", appearance = "filled", color: color2 = "brand" } = props;
  const state = {
    shape,
    size,
    iconPosition,
    appearance,
    color: color2,
    components: {
      root: "div",
      icon: "span"
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      // FIXME:
      // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`
      // but since it would be a breaking change to fix it, we are casting ref to it's proper type
      ref,
      ...props
    }), {
      elementType: "div"
    }),
    icon: slot_exports.optional(props.icon, {
      elementType: "span"
    })
  };
  return state;
};

// node_modules/@fluentui/react-badge/lib/components/Badge/useBadgeStyles.styles.js
var badgeClassNames = {
  root: "fui-Badge",
  icon: "fui-Badge__icon"
};
var textPadding = tokens.spacingHorizontalXXS;
var useRootClassName = __resetStyles("r1l7mb74", "rntuq2r", [".r1l7mb74{display:inline-flex;box-sizing:border-box;align-items:center;justify-content:center;position:relative;font-family:var(--fontFamilyBase);font-size:var(--fontSizeBase200);font-weight:var(--fontWeightSemibold);line-height:var(--lineHeightBase200);height:20px;width:20px;min-width:max-content;padding:0 calc(var(--spacingHorizontalXS) + var(--spacingHorizontalXXS));border-radius:var(--borderRadiusCircular);border-color:var(--colorTransparentStroke);}", '.r1l7mb74::after{content:"";position:absolute;top:0;left:0;bottom:0;right:0;border-style:solid;border-color:inherit;border-width:var(--strokeWidthThin);border-radius:inherit;}', ".rntuq2r{display:inline-flex;box-sizing:border-box;align-items:center;justify-content:center;position:relative;font-family:var(--fontFamilyBase);font-size:var(--fontSizeBase200);font-weight:var(--fontWeightSemibold);line-height:var(--lineHeightBase200);height:20px;width:20px;min-width:max-content;padding:0 calc(var(--spacingHorizontalXS) + var(--spacingHorizontalXXS));border-radius:var(--borderRadiusCircular);border-color:var(--colorTransparentStroke);}", '.rntuq2r::after{content:"";position:absolute;top:0;right:0;bottom:0;left:0;border-style:solid;border-color:inherit;border-width:var(--strokeWidthThin);border-radius:inherit;}']);
var useRootStyles = __styles2({
  fontSmallToTiny: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "f13mqy1h",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "fcpl73t"
  },
  tiny: {
    a9b677: "f16dn6v3",
    Bqenvij: "f3mu39s",
    Be2twd7: "f130uwy9",
    Bg96gwp: "fod1mrr",
    Bf4jedk: "f18p0k4z",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f19jm9xf"
  },
  "extra-small": {
    a9b677: "fpd43o0",
    Bqenvij: "f30q22z",
    Be2twd7: "f1tccstq",
    Bg96gwp: "f1y3arg5",
    Bf4jedk: "f18p0k4z",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f19jm9xf"
  },
  small: {
    a9b677: "fjw5fx7",
    Bqenvij: "fd461yt",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "fupdldz"
  },
  medium: {},
  large: {
    a9b677: "fq4mcun",
    Bqenvij: "frvgh55",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f1996nqw"
  },
  "extra-large": {
    a9b677: "f1szoe96",
    Bqenvij: "f1d2rq10",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "fty64o7"
  },
  square: {
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "f1fabniw"
  },
  rounded: {
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "ft85np5"
  },
  roundedSmallToTiny: {
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "fq9zq91"
  },
  circular: {},
  borderGhost: {
    ap17g6: "f10ludwy"
  },
  filled: {},
  "filled-brand": {
    De3pzq: "ffp7eso",
    sj55zd: "f1phragk"
  },
  "filled-danger": {
    De3pzq: "fdl5y0r",
    sj55zd: "f1phragk"
  },
  "filled-important": {
    De3pzq: "f1c73kur",
    sj55zd: "fr0bkrk"
  },
  "filled-informative": {
    De3pzq: "f3vzo32",
    sj55zd: "f11d4kpn"
  },
  "filled-severe": {
    De3pzq: "f1s438gw",
    sj55zd: "f1phragk"
  },
  "filled-subtle": {
    De3pzq: "fxugw4r",
    sj55zd: "f19n0e5"
  },
  "filled-success": {
    De3pzq: "flxk52p",
    sj55zd: "f1phragk"
  },
  "filled-warning": {
    De3pzq: "ffq97bm",
    sj55zd: "ff5vbop"
  },
  ghost: {},
  "ghost-brand": {
    sj55zd: "f16muhyy"
  },
  "ghost-danger": {
    sj55zd: "f1whyuy6"
  },
  "ghost-important": {
    sj55zd: "f19n0e5"
  },
  "ghost-informative": {
    sj55zd: "f11d4kpn"
  },
  "ghost-severe": {
    sj55zd: "f1l8vj45"
  },
  "ghost-subtle": {
    sj55zd: "fonrgv7"
  },
  "ghost-success": {
    sj55zd: "f1m7fhi8"
  },
  "ghost-warning": {
    sj55zd: "fpti2h4"
  },
  outline: {
    g2u3we: "f23ftbb",
    h3c5rm: ["f1gkuv52", "f1p1bl80"],
    B9xav0g: "fioka3i",
    zhjwy3: ["f1p1bl80", "f1gkuv52"]
  },
  "outline-brand": {
    sj55zd: "f16muhyy"
  },
  "outline-danger": {
    sj55zd: "f1whyuy6",
    g2u3we: "fyqpifd",
    h3c5rm: ["f3ukxca", "f1k7dugc"],
    B9xav0g: "f1njxb2b",
    zhjwy3: ["f1k7dugc", "f3ukxca"]
  },
  "outline-important": {
    sj55zd: "f11d4kpn",
    g2u3we: "fq0vr37",
    h3c5rm: ["f1byw159", "f11cr0be"],
    B9xav0g: "f1c1zstj",
    zhjwy3: ["f11cr0be", "f1byw159"]
  },
  "outline-informative": {
    sj55zd: "f11d4kpn",
    g2u3we: "f68mrw8",
    h3c5rm: ["f7pw515", "fw35ms5"],
    B9xav0g: "frpde29",
    zhjwy3: ["fw35ms5", "f7pw515"]
  },
  "outline-severe": {
    sj55zd: "f1l8vj45"
  },
  "outline-subtle": {
    sj55zd: "fonrgv7"
  },
  "outline-success": {
    sj55zd: "f1m7fhi8",
    g2u3we: "f1mmhl11",
    h3c5rm: ["f1tjpp2f", "f1ocn5n7"],
    B9xav0g: "f1gjv25d",
    zhjwy3: ["f1ocn5n7", "f1tjpp2f"]
  },
  "outline-warning": {
    sj55zd: "fpti2h4"
  },
  tint: {},
  "tint-brand": {
    De3pzq: "f16xkysk",
    sj55zd: "faj9fo0",
    g2u3we: "f161y7kd",
    h3c5rm: ["f1c8dzaj", "f1sl6hi9"],
    B9xav0g: "f1619yhw",
    zhjwy3: ["f1sl6hi9", "f1c8dzaj"]
  },
  "tint-danger": {
    De3pzq: "ff0poqj",
    sj55zd: "f1hcrxcs",
    g2u3we: "f1oqjm8o",
    h3c5rm: ["fkgrb8g", "frb5wm0"],
    B9xav0g: "f1iai1ph",
    zhjwy3: ["frb5wm0", "fkgrb8g"]
  },
  "tint-important": {
    De3pzq: "f945g0u",
    sj55zd: "fr0bkrk",
    g2u3we: "fghlq4f",
    h3c5rm: ["f1gn591s", "fjscplz"],
    B9xav0g: "fb073pr",
    zhjwy3: ["fjscplz", "f1gn591s"]
  },
  "tint-informative": {
    De3pzq: "f1ctqxl6",
    sj55zd: "f11d4kpn",
    g2u3we: "f68mrw8",
    h3c5rm: ["f7pw515", "fw35ms5"],
    B9xav0g: "frpde29",
    zhjwy3: ["fw35ms5", "f7pw515"]
  },
  "tint-severe": {
    De3pzq: "f1xzsg4",
    sj55zd: "f1k5f75o",
    g2u3we: "fxy9dsj",
    h3c5rm: ["f54u6j2", "fcm23ze"],
    B9xav0g: "f4vf0uq",
    zhjwy3: ["fcm23ze", "f54u6j2"]
  },
  "tint-subtle": {
    De3pzq: "fxugw4r",
    sj55zd: "f11d4kpn",
    g2u3we: "f68mrw8",
    h3c5rm: ["f7pw515", "fw35ms5"],
    B9xav0g: "frpde29",
    zhjwy3: ["fw35ms5", "f7pw515"]
  },
  "tint-success": {
    De3pzq: "f2vsrz6",
    sj55zd: "ffmvakt",
    g2u3we: "fdmic9h",
    h3c5rm: ["f196y6m", "fetptd8"],
    B9xav0g: "f1pev5xq",
    zhjwy3: ["fetptd8", "f196y6m"]
  },
  "tint-warning": {
    De3pzq: "f10s6hli",
    sj55zd: "f42v8de",
    g2u3we: "fn9i3n",
    h3c5rm: ["f1aw8cx4", "f51if14"],
    B9xav0g: "fvq8iai",
    zhjwy3: ["f51if14", "f1aw8cx4"]
  }
}, {
  d: [".fk6fouc{font-family:var(--fontFamilyBase);}", ".f13mqy1h{font-size:var(--fontSizeBase100);}", ".fl43uef{font-weight:var(--fontWeightSemibold);}", ".fcpl73t{line-height:var(--lineHeightBase100);}", ".f16dn6v3{width:6px;}", ".f3mu39s{height:6px;}", ".f130uwy9{font-size:4px;}", ".fod1mrr{line-height:4px;}", ".f18p0k4z{min-width:unset;}", [".f19jm9xf{padding:unset;}", {
    p: -1
  }], ".fpd43o0{width:10px;}", ".f30q22z{height:10px;}", ".f1tccstq{font-size:6px;}", ".f1y3arg5{line-height:6px;}", [".f19jm9xf{padding:unset;}", {
    p: -1
  }], ".fjw5fx7{width:16px;}", ".fd461yt{height:16px;}", [".fupdldz{padding:0 calc(var(--spacingHorizontalXXS) + var(--spacingHorizontalXXS));}", {
    p: -1
  }], ".fq4mcun{width:24px;}", ".frvgh55{height:24px;}", [".f1996nqw{padding:0 calc(var(--spacingHorizontalXS) + var(--spacingHorizontalXXS));}", {
    p: -1
  }], ".f1szoe96{width:32px;}", ".f1d2rq10{height:32px;}", [".fty64o7{padding:0 calc(var(--spacingHorizontalSNudge) + var(--spacingHorizontalXXS));}", {
    p: -1
  }], [".f1fabniw{border-radius:var(--borderRadiusNone);}", {
    p: -1
  }], [".ft85np5{border-radius:var(--borderRadiusMedium);}", {
    p: -1
  }], [".fq9zq91{border-radius:var(--borderRadiusSmall);}", {
    p: -1
  }], ".f10ludwy::after{display:none;}", ".ffp7eso{background-color:var(--colorBrandBackground);}", ".f1phragk{color:var(--colorNeutralForegroundOnBrand);}", ".fdl5y0r{background-color:var(--colorPaletteRedBackground3);}", ".f1c73kur{background-color:var(--colorNeutralForeground1);}", ".fr0bkrk{color:var(--colorNeutralBackground1);}", ".f3vzo32{background-color:var(--colorNeutralBackground5);}", ".f11d4kpn{color:var(--colorNeutralForeground3);}", ".f1s438gw{background-color:var(--colorPaletteDarkOrangeBackground3);}", ".fxugw4r{background-color:var(--colorNeutralBackground1);}", ".f19n0e5{color:var(--colorNeutralForeground1);}", ".flxk52p{background-color:var(--colorPaletteGreenBackground3);}", ".ffq97bm{background-color:var(--colorPaletteYellowBackground3);}", ".ff5vbop{color:var(--colorNeutralForeground1Static);}", ".f16muhyy{color:var(--colorBrandForeground1);}", ".f1whyuy6{color:var(--colorPaletteRedForeground3);}", ".f1l8vj45{color:var(--colorPaletteDarkOrangeForeground3);}", ".fonrgv7{color:var(--colorNeutralForegroundStaticInverted);}", ".f1m7fhi8{color:var(--colorPaletteGreenForeground3);}", ".fpti2h4{color:var(--colorPaletteYellowForeground2);}", ".f23ftbb{border-top-color:currentColor;}", ".f1gkuv52{border-right-color:currentColor;}", ".f1p1bl80{border-left-color:currentColor;}", ".fioka3i{border-bottom-color:currentColor;}", ".fyqpifd{border-top-color:var(--colorPaletteRedBorder2);}", ".f3ukxca{border-right-color:var(--colorPaletteRedBorder2);}", ".f1k7dugc{border-left-color:var(--colorPaletteRedBorder2);}", ".f1njxb2b{border-bottom-color:var(--colorPaletteRedBorder2);}", ".fq0vr37{border-top-color:var(--colorNeutralStrokeAccessible);}", ".f1byw159{border-right-color:var(--colorNeutralStrokeAccessible);}", ".f11cr0be{border-left-color:var(--colorNeutralStrokeAccessible);}", ".f1c1zstj{border-bottom-color:var(--colorNeutralStrokeAccessible);}", ".f68mrw8{border-top-color:var(--colorNeutralStroke2);}", ".f7pw515{border-right-color:var(--colorNeutralStroke2);}", ".fw35ms5{border-left-color:var(--colorNeutralStroke2);}", ".frpde29{border-bottom-color:var(--colorNeutralStroke2);}", ".f1mmhl11{border-top-color:var(--colorPaletteGreenBorder2);}", ".f1tjpp2f{border-right-color:var(--colorPaletteGreenBorder2);}", ".f1ocn5n7{border-left-color:var(--colorPaletteGreenBorder2);}", ".f1gjv25d{border-bottom-color:var(--colorPaletteGreenBorder2);}", ".f16xkysk{background-color:var(--colorBrandBackground2);}", ".faj9fo0{color:var(--colorBrandForeground2);}", ".f161y7kd{border-top-color:var(--colorBrandStroke2);}", ".f1c8dzaj{border-right-color:var(--colorBrandStroke2);}", ".f1sl6hi9{border-left-color:var(--colorBrandStroke2);}", ".f1619yhw{border-bottom-color:var(--colorBrandStroke2);}", ".ff0poqj{background-color:var(--colorPaletteRedBackground1);}", ".f1hcrxcs{color:var(--colorPaletteRedForeground1);}", ".f1oqjm8o{border-top-color:var(--colorPaletteRedBorder1);}", ".fkgrb8g{border-right-color:var(--colorPaletteRedBorder1);}", ".frb5wm0{border-left-color:var(--colorPaletteRedBorder1);}", ".f1iai1ph{border-bottom-color:var(--colorPaletteRedBorder1);}", ".f945g0u{background-color:var(--colorNeutralForeground3);}", ".fghlq4f{border-top-color:var(--colorTransparentStroke);}", ".f1gn591s{border-right-color:var(--colorTransparentStroke);}", ".fjscplz{border-left-color:var(--colorTransparentStroke);}", ".fb073pr{border-bottom-color:var(--colorTransparentStroke);}", ".f1ctqxl6{background-color:var(--colorNeutralBackground4);}", ".f1xzsg4{background-color:var(--colorPaletteDarkOrangeBackground1);}", ".f1k5f75o{color:var(--colorPaletteDarkOrangeForeground1);}", ".fxy9dsj{border-top-color:var(--colorPaletteDarkOrangeBorder1);}", ".f54u6j2{border-right-color:var(--colorPaletteDarkOrangeBorder1);}", ".fcm23ze{border-left-color:var(--colorPaletteDarkOrangeBorder1);}", ".f4vf0uq{border-bottom-color:var(--colorPaletteDarkOrangeBorder1);}", ".f2vsrz6{background-color:var(--colorPaletteGreenBackground1);}", ".ffmvakt{color:var(--colorPaletteGreenForeground1);}", ".fdmic9h{border-top-color:var(--colorPaletteGreenBorder1);}", ".f196y6m{border-right-color:var(--colorPaletteGreenBorder1);}", ".fetptd8{border-left-color:var(--colorPaletteGreenBorder1);}", ".f1pev5xq{border-bottom-color:var(--colorPaletteGreenBorder1);}", ".f10s6hli{background-color:var(--colorPaletteYellowBackground1);}", ".f42v8de{color:var(--colorPaletteYellowForeground1);}", ".fn9i3n{border-top-color:var(--colorPaletteYellowBorder1);}", ".f1aw8cx4{border-right-color:var(--colorPaletteYellowBorder1);}", ".f51if14{border-left-color:var(--colorPaletteYellowBorder1);}", ".fvq8iai{border-bottom-color:var(--colorPaletteYellowBorder1);}"]
});
var useIconRootClassName = __resetStyles("rttl5z0", null, [".rttl5z0{display:flex;line-height:1;margin:0 calc(-1 * var(--spacingHorizontalXXS));font-size:12px;}"]);
var useIconStyles = __styles2({
  beforeText: {
    t21cq0: ["f1t8l4o1", "f11juvx6"]
  },
  afterText: {
    Frg6f3: ["f11juvx6", "f1t8l4o1"]
  },
  beforeTextXL: {
    t21cq0: ["f1rs9grm", "f1kwmkpi"]
  },
  afterTextXL: {
    Frg6f3: ["f1kwmkpi", "f1rs9grm"]
  },
  tiny: {
    Be2twd7: "f1tccstq"
  },
  "extra-small": {
    Be2twd7: "fnmn6fi"
  },
  small: {
    Be2twd7: "f1ugzwwg"
  },
  medium: {},
  large: {
    Be2twd7: "f4ybsrx"
  },
  "extra-large": {
    Be2twd7: "fe5j1ua"
  }
}, {
  d: [".f1t8l4o1{margin-right:calc(var(--spacingHorizontalXXS) + var(--spacingHorizontalXXS));}", ".f11juvx6{margin-left:calc(var(--spacingHorizontalXXS) + var(--spacingHorizontalXXS));}", ".f1rs9grm{margin-right:calc(var(--spacingHorizontalXS) + var(--spacingHorizontalXXS));}", ".f1kwmkpi{margin-left:calc(var(--spacingHorizontalXS) + var(--spacingHorizontalXXS));}", ".f1tccstq{font-size:6px;}", ".fnmn6fi{font-size:10px;}", ".f1ugzwwg{font-size:12px;}", ".f4ybsrx{font-size:16px;}", ".fe5j1ua{font-size:20px;}"]
});
var useBadgeStyles_unstable = (state) => {
  "use no memo";
  const rootClassName = useRootClassName();
  const rootStyles = useRootStyles();
  const smallToTiny = state.size === "small" || state.size === "extra-small" || state.size === "tiny";
  state.root.className = mergeClasses(badgeClassNames.root, rootClassName, smallToTiny && rootStyles.fontSmallToTiny, rootStyles[state.size], rootStyles[state.shape], state.shape === "rounded" && smallToTiny && rootStyles.roundedSmallToTiny, state.appearance === "ghost" && rootStyles.borderGhost, rootStyles[state.appearance], rootStyles[`${state.appearance}-${state.color}`], state.root.className);
  const iconRootClassName = useIconRootClassName();
  const iconStyles = useIconStyles();
  if (state.icon) {
    let iconPositionClass;
    if (state.root.children) {
      if (state.size === "extra-large") {
        iconPositionClass = state.iconPosition === "after" ? iconStyles.afterTextXL : iconStyles.beforeTextXL;
      } else {
        iconPositionClass = state.iconPosition === "after" ? iconStyles.afterText : iconStyles.beforeText;
      }
    }
    state.icon.className = mergeClasses(badgeClassNames.icon, iconRootClassName, iconPositionClass, iconStyles[state.size], state.icon.className);
  }
  return state;
};

// node_modules/@fluentui/react-badge/lib/components/Badge/renderBadge.js
var renderBadge_unstable = (state) => {
  assertSlots(state);
  return jsxs(state.root, {
    children: [
      state.iconPosition === "before" && state.icon && jsx(state.icon, {}),
      state.root.children,
      state.iconPosition === "after" && state.icon && jsx(state.icon, {})
    ]
  });
};

// node_modules/@fluentui/react-badge/lib/components/Badge/Badge.js
var Badge = React46.forwardRef((props, ref) => {
  const state = useBadge_unstable(props, ref);
  useBadgeStyles_unstable(state);
  useCustomStyleHook("useBadgeStyles_unstable")(state);
  return renderBadge_unstable(state);
});
Badge.displayName = "Badge";

// node_modules/@fluentui/react-badge/lib/components/PresenceBadge/PresenceBadge.js
var React49 = __toESM(require_react());

// node_modules/@fluentui/react-badge/lib/components/PresenceBadge/usePresenceBadge.js
var React48 = __toESM(require_react());

// node_modules/@fluentui/react-badge/lib/components/PresenceBadge/presenceIcons.js
var React47 = __toESM(require_react());
var presenceAwayRegular = {
  // FIXME not all presence icon sizes are available
  // https://github.com/microsoft/fluentui/issues/20650
  tiny: PresenceAway10Regular,
  "extra-small": PresenceAway10Regular,
  small: PresenceAway12Regular,
  medium: PresenceAway16Regular,
  large: PresenceAway20Regular,
  // FIXME not all presence icon sizes are available
  // https://github.com/microsoft/fluentui/issues/20650
  "extra-large": PresenceAway20Regular
};
var presenceAwayFilled = {
  // FIXME not all presence icon sizes are available
  // https://github.com/microsoft/fluentui/issues/20650
  tiny: PresenceAway10Filled,
  "extra-small": PresenceAway10Filled,
  small: PresenceAway12Filled,
  medium: PresenceAway16Filled,
  large: PresenceAway20Filled,
  // FIXME not all presence icon sizes are available
  // https://github.com/microsoft/fluentui/issues/20650
  "extra-large": PresenceAway20Filled
};
var presenceAvailableRegular = {
  // FIXME not all presence icon sizes are available
  // https://github.com/microsoft/fluentui/issues/20650
  tiny: PresenceAvailable10Regular,
  "extra-small": PresenceAvailable10Regular,
  small: PresenceAvailable12Regular,
  medium: PresenceAvailable16Regular,
  large: PresenceAvailable20Regular,
  // FIXME not all presence icon sizes are available
  // https://github.com/microsoft/fluentui/issues/20650
  "extra-large": PresenceAvailable20Regular
};
var presenceAvailableFilled = {
  // FIXME not all presence icon sizes are available
  // https://github.com/microsoft/fluentui/issues/20650
  tiny: PresenceAvailable10Filled,
  "extra-small": PresenceAvailable10Filled,
  small: PresenceAvailable12Filled,
  medium: PresenceAvailable16Filled,
  large: PresenceAvailable20Filled,
  // FIXME not all presence icon sizes are available
  // https://github.com/microsoft/fluentui/issues/20650
  "extra-large": PresenceAvailable20Filled
};
var presenceBlockedRegular = {
  // FIXME not all presence icon sizes are available
  // https://github.com/microsoft/fluentui/issues/20650
  tiny: PresenceBlocked10Regular,
  "extra-small": PresenceBlocked10Regular,
  small: PresenceBlocked12Regular,
  medium: PresenceBlocked16Regular,
  large: PresenceBlocked20Regular,
  // FIXME not all presence icon sizes are available
  // https://github.com/microsoft/fluentui/issues/20650
  "extra-large": PresenceBlocked20Regular
};
var presenceBusyFilled = {
  // FIXME not all presence icon sizes are available
  // https://github.com/microsoft/fluentui/issues/20650
  tiny: PresenceBusy10Filled,
  "extra-small": PresenceBusy10Filled,
  small: PresenceBusy12Filled,
  medium: PresenceBusy16Filled,
  large: PresenceBusy20Filled,
  // FIXME not all presence icon sizes are available
  // https://github.com/microsoft/fluentui/issues/20650
  "extra-large": PresenceBusy20Filled
};
var presenceDndFilled = {
  // FIXME not all presence icon sizes are available
  // https://github.com/microsoft/fluentui/issues/20650
  tiny: PresenceDnd10Filled,
  "extra-small": PresenceDnd10Filled,
  small: PresenceDnd12Filled,
  medium: PresenceDnd16Filled,
  large: PresenceDnd20Filled,
  // FIXME not all presence icon sizes are available
  // https://github.com/microsoft/fluentui/issues/20650
  "extra-large": PresenceDnd20Filled
};
var presenceDndRegular = {
  // FIXME not all presence icon sizes are available
  // https://github.com/microsoft/fluentui/issues/20650
  tiny: PresenceDnd10Regular,
  "extra-small": PresenceDnd10Regular,
  small: PresenceDnd12Regular,
  medium: PresenceDnd16Regular,
  large: PresenceDnd20Regular,
  // FIXME not all presence icon sizes are available
  // https://github.com/microsoft/fluentui/issues/20650
  "extra-large": PresenceDnd20Regular
};
var presenceOofRegular = {
  // FIXME not all presence icon sizes are available
  // https://github.com/microsoft/fluentui/issues/20650
  tiny: PresenceOof10Regular,
  "extra-small": PresenceOof10Regular,
  small: PresenceOof12Regular,
  medium: PresenceOof16Regular,
  large: PresenceOof20Regular,
  // FIXME not all presence icon sizes are available
  // https://github.com/microsoft/fluentui/issues/20650
  "extra-large": PresenceOof20Regular
};
var presenceOfflineRegular = {
  // FIXME not all presence icon sizes are available
  // https://github.com/microsoft/fluentui/issues/20650
  tiny: PresenceOffline10Regular,
  "extra-small": PresenceOffline10Regular,
  small: PresenceOffline12Regular,
  medium: PresenceOffline16Regular,
  large: PresenceOffline20Regular,
  // FIXME not all presence icon sizes are available
  // https://github.com/microsoft/fluentui/issues/20650
  "extra-large": PresenceOffline20Regular
};
var presenceUnknownRegular = {
  // FIXME not all presence icon sizes are available
  // https://github.com/microsoft/fluentui/issues/20650
  tiny: PresenceUnknown10Regular,
  "extra-small": PresenceUnknown10Regular,
  small: PresenceUnknown12Regular,
  medium: PresenceUnknown16Regular,
  large: PresenceUnknown20Regular,
  // FIXME not all presence icon sizes are available
  // https://github.com/microsoft/fluentui/issues/20650
  "extra-large": PresenceUnknown20Regular
};

// node_modules/@fluentui/react-badge/lib/components/PresenceBadge/usePresenceBadge.js
var iconMap = (status, outOfOffice, size) => {
  switch (status) {
    case "available":
      return outOfOffice ? presenceAvailableRegular[size] : presenceAvailableFilled[size];
    case "away":
      return outOfOffice ? presenceOofRegular[size] : presenceAwayFilled[size];
    case "blocked":
      return presenceBlockedRegular[size];
    case "busy":
      return outOfOffice ? presenceUnknownRegular[size] : presenceBusyFilled[size];
    case "do-not-disturb":
      return outOfOffice ? presenceDndRegular[size] : presenceDndFilled[size];
    case "offline":
      return outOfOffice ? presenceOofRegular[size] : presenceOfflineRegular[size];
    case "out-of-office":
      return presenceOofRegular[size];
    case "unknown":
      return presenceUnknownRegular[size];
  }
};
var DEFAULT_STRINGS = {
  busy: "busy",
  "out-of-office": "out of office",
  away: "away",
  available: "available",
  offline: "offline",
  "do-not-disturb": "do not disturb",
  unknown: "unknown",
  blocked: "blocked"
};
var usePresenceBadge_unstable = (props, ref) => {
  const { size = "medium", status = "available", outOfOffice = false } = props;
  const statusText = DEFAULT_STRINGS[status];
  const oofText = props.outOfOffice && props.status !== "out-of-office" ? ` ${DEFAULT_STRINGS["out-of-office"]}` : "";
  const IconElement = iconMap(status, outOfOffice, size);
  const state = {
    ...useBadge_unstable({
      "aria-label": statusText + oofText,
      role: "img",
      ...props,
      size,
      icon: slot_exports.optional(props.icon, {
        defaultProps: {
          children: IconElement ? React48.createElement(IconElement, null) : null
        },
        renderByDefault: true,
        elementType: "span"
      })
    }, ref),
    status,
    outOfOffice
  };
  return state;
};

// node_modules/@fluentui/react-badge/lib/components/PresenceBadge/usePresenceBadgeStyles.styles.js
var presenceBadgeClassNames = {
  root: "fui-PresenceBadge",
  icon: "fui-PresenceBadge__icon"
};
var getIsBusy = (status) => {
  if (status === "busy" || status === "do-not-disturb" || status === "blocked") {
    return true;
  }
  return false;
};
var useRootClassName2 = __resetStyles("r832ydo", null, [".r832ydo{display:inline-flex;box-sizing:border-box;align-items:center;justify-content:center;border-radius:var(--borderRadiusCircular);background-color:var(--colorNeutralBackground1);padding:1px;background-clip:content-box;}"]);
var useIconClassName = __resetStyles("r11ag4qr", null, [".r11ag4qr{display:flex;margin:-1px;}"]);
var useStyles4 = __styles2({
  statusBusy: {
    sj55zd: "fvi85wt"
  },
  statusAway: {
    sj55zd: "f14k8a89"
  },
  statusAvailable: {
    sj55zd: "fqa5hgp"
  },
  statusOffline: {
    sj55zd: "f11d4kpn"
  },
  statusOutOfOffice: {
    sj55zd: "fdce8r3"
  },
  statusUnknown: {
    sj55zd: "f11d4kpn"
  },
  outOfOffice: {
    sj55zd: "fr0bkrk"
  },
  outOfOfficeAvailable: {
    sj55zd: "fqa5hgp"
  },
  outOfOfficeBusy: {
    sj55zd: "fvi85wt"
  },
  outOfOfficeUnknown: {
    sj55zd: "f11d4kpn"
  },
  tiny: {
    Bubjx69: "f9ikmtg",
    a9b677: "f16dn6v3",
    B2eet1l: "f1w2irj7",
    B5pe6w7: "fab5kbq",
    p4uzdd: "f1ms1d91"
  },
  large: {
    Bubjx69: "f9ikmtg",
    a9b677: "f64fuq3",
    B5pe6w7: "f1vfi1yj",
    p4uzdd: "f15s34gz"
  },
  extraLarge: {
    Bubjx69: "f9ikmtg",
    a9b677: "f1w9dchk",
    B5pe6w7: "f14efy9b",
    p4uzdd: "fhipgdu"
  }
}, {
  d: [".fvi85wt{color:var(--colorPaletteRedBackground3);}", ".f14k8a89{color:var(--colorPaletteMarigoldBackground3);}", ".fqa5hgp{color:var(--colorPaletteLightGreenForeground3);}", ".f11d4kpn{color:var(--colorNeutralForeground3);}", ".fdce8r3{color:var(--colorPaletteBerryForeground3);}", ".fr0bkrk{color:var(--colorNeutralBackground1);}", ".f9ikmtg{aspect-ratio:1;}", ".f16dn6v3{width:6px;}", ".f1w2irj7{background-clip:unset;}", ".fab5kbq svg{width:6px!important;}", ".f1ms1d91 svg{height:6px!important;}", ".f64fuq3{width:20px;}", ".f1vfi1yj svg{width:20px!important;}", ".f15s34gz svg{height:20px!important;}", ".f1w9dchk{width:28px;}", ".f14efy9b svg{width:28px!important;}", ".fhipgdu svg{height:28px!important;}"]
});
var usePresenceBadgeStyles_unstable = (state) => {
  "use no memo";
  const rootClassName = useRootClassName2();
  const iconClassName = useIconClassName();
  const styles = useStyles4();
  const isBusy = getIsBusy(state.status);
  state.root.className = mergeClasses(presenceBadgeClassNames.root, rootClassName, isBusy && styles.statusBusy, state.status === "away" && styles.statusAway, state.status === "available" && styles.statusAvailable, state.status === "offline" && styles.statusOffline, state.status === "out-of-office" && styles.statusOutOfOffice, state.status === "unknown" && styles.statusUnknown, state.outOfOffice && styles.outOfOffice, state.outOfOffice && state.status === "available" && styles.outOfOfficeAvailable, state.outOfOffice && isBusy && styles.outOfOfficeBusy, state.outOfOffice && (state.status === "out-of-office" || state.status === "away" || state.status === "offline") && styles.statusOutOfOffice, state.outOfOffice && state.status === "unknown" && styles.outOfOfficeUnknown, state.size === "tiny" && styles.tiny, state.size === "large" && styles.large, state.size === "extra-large" && styles.extraLarge, state.root.className);
  if (state.icon) {
    state.icon.className = mergeClasses(presenceBadgeClassNames.icon, iconClassName, state.icon.className);
  }
  return state;
};

// node_modules/@fluentui/react-badge/lib/components/PresenceBadge/PresenceBadge.js
var PresenceBadge = React49.forwardRef((props, ref) => {
  const state = usePresenceBadge_unstable(props, ref);
  usePresenceBadgeStyles_unstable(state);
  useCustomStyleHook("usePresenceBadgeStyles_unstable")(state);
  return renderBadge_unstable(state);
});
PresenceBadge.displayName = "PresenceBadge";

// node_modules/@fluentui/react-badge/lib/components/CounterBadge/CounterBadge.js
var React51 = __toESM(require_react());

// node_modules/@fluentui/react-badge/lib/components/CounterBadge/useCounterBadge.js
var React50 = __toESM(require_react());
var useCounterBadge_unstable = (props, ref) => {
  const { shape = "circular", appearance = "filled", showZero = false, overflowCount = 99, count = 0, dot = false } = props;
  const state = {
    ...useBadge_unstable(props, ref),
    shape,
    appearance,
    showZero,
    count,
    dot
  };
  if ((count !== 0 || showZero) && !dot && !state.root.children) {
    state.root.children = count > overflowCount ? `${overflowCount}+` : `${count}`;
  }
  return state;
};

// node_modules/@fluentui/react-badge/lib/components/CounterBadge/useCounterBadgeStyles.styles.js
var counterBadgeClassNames = {
  root: "fui-CounterBadge",
  icon: "fui-CounterBadge__icon"
};
var useStyles5 = __styles2({
  dot: {
    Bf4jedk: "fgfkb25",
    a9b677: "f16dn6v3",
    Bqenvij: "f3mu39s",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f1mk8lai"
  },
  hide: {
    mc9l5x: "fjseox"
  }
}, {
  d: [".fgfkb25{min-width:auto;}", ".f16dn6v3{width:6px;}", ".f3mu39s{height:6px;}", [".f1mk8lai{padding:0;}", {
    p: -1
  }], ".fjseox{display:none;}"]
});
var useCounterBadgeStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles5();
  state.root.className = mergeClasses(counterBadgeClassNames.root, state.dot && styles.dot, !state.root.children && !state.dot && styles.hide, state.root.className);
  if (state.icon) {
    state.icon.className = mergeClasses(counterBadgeClassNames.icon, state.icon.className);
  }
  return useBadgeStyles_unstable(state);
};

// node_modules/@fluentui/react-badge/lib/components/CounterBadge/CounterBadge.js
var CounterBadge = React51.forwardRef((props, ref) => {
  const state = useCounterBadge_unstable(props, ref);
  useCounterBadgeStyles_unstable(state);
  useCustomStyleHook("useCounterBadgeStyles_unstable")(state);
  return renderBadge_unstable(state);
});
CounterBadge.displayName = "CounterBadge";

// node_modules/@fluentui/react-avatar/lib/contexts/AvatarContext.js
var React52 = __toESM(require_react());
var avatarContext = React52.createContext(void 0);
var avatarContextDefaultValue = {};
var AvatarContextProvider = avatarContext.Provider;
var useAvatarContext = () => {
  var _React_useContext;
  return (_React_useContext = React52.useContext(avatarContext)) !== null && _React_useContext !== void 0 ? _React_useContext : avatarContextDefaultValue;
};

// node_modules/@fluentui/react-avatar/lib/components/Avatar/useAvatar.js
var DEFAULT_STRINGS2 = {
  active: "active",
  inactive: "inactive"
};
var useAvatar_unstable = (props, ref) => {
  const { dir } = useFluent();
  const { shape: contextShape, size: contextSize } = useAvatarContext();
  const { name, size = contextSize !== null && contextSize !== void 0 ? contextSize : 32, shape = contextShape !== null && contextShape !== void 0 ? contextShape : "circular", active = "unset", activeAppearance = "ring", idForColor } = props;
  let { color: color2 = "neutral" } = props;
  if (color2 === "colorful") {
    var _ref;
    color2 = avatarColors[getHashCode((_ref = idForColor !== null && idForColor !== void 0 ? idForColor : name) !== null && _ref !== void 0 ? _ref : "") % avatarColors.length];
  }
  const baseId = useId("avatar-");
  const root = slot_exports.always(getIntrinsicElementProps(
    "span",
    {
      role: "img",
      id: baseId,
      // aria-label and/or aria-labelledby are resolved below
      ...props,
      ref
    },
    /* excludedPropNames: */
    [
      "name"
    ]
  ), {
    elementType: "span"
  });
  const [imageHidden, setImageHidden] = React53.useState(void 0);
  let image = slot_exports.optional(props.image, {
    defaultProps: {
      alt: "",
      role: "presentation",
      "aria-hidden": true,
      hidden: imageHidden
    },
    elementType: "img"
  });
  if (!(image === null || image === void 0 ? void 0 : image.src)) {
    image = void 0;
  }
  if (image) {
    image.onError = mergeCallbacks(image.onError, () => setImageHidden(true));
    image.onLoad = mergeCallbacks(image.onLoad, () => setImageHidden(void 0));
  }
  let initials = slot_exports.optional(props.initials, {
    renderByDefault: true,
    defaultProps: {
      children: getInitials(name, dir === "rtl", {
        firstInitialOnly: size <= 16
      }),
      id: baseId + "__initials"
    },
    elementType: "span"
  });
  if (!(initials === null || initials === void 0 ? void 0 : initials.children)) {
    initials = void 0;
  }
  let icon = void 0;
  if (!initials && (!image || imageHidden)) {
    icon = slot_exports.optional(props.icon, {
      renderByDefault: true,
      defaultProps: {
        children: React53.createElement(PersonRegular, null),
        "aria-hidden": true
      },
      elementType: "span"
    });
  }
  const badge = slot_exports.optional(props.badge, {
    defaultProps: {
      size: getBadgeSize(size),
      id: baseId + "__badge"
    },
    elementType: PresenceBadge
  });
  let activeAriaLabelElement;
  if (!root["aria-label"] && !root["aria-labelledby"]) {
    if (name) {
      root["aria-label"] = name;
      if (badge) {
        root["aria-labelledby"] = root.id + " " + badge.id;
      }
    } else if (initials) {
      root["aria-labelledby"] = initials.id + (badge ? " " + badge.id : "");
    }
    if (active === "active" || active === "inactive") {
      const activeText = DEFAULT_STRINGS2[active];
      if (root["aria-labelledby"]) {
        const activeId = baseId + "__active";
        root["aria-labelledby"] += " " + activeId;
        activeAriaLabelElement = React53.createElement("span", {
          hidden: true,
          id: activeId
        }, activeText);
      } else if (root["aria-label"]) {
        root["aria-label"] += " " + activeText;
      }
    }
  }
  return {
    size,
    shape,
    active,
    activeAppearance,
    activeAriaLabelElement,
    color: color2,
    components: {
      root: "span",
      initials: "span",
      icon: "span",
      image: "img",
      badge: PresenceBadge
    },
    root,
    initials,
    icon,
    image,
    badge
  };
};
var getBadgeSize = (size) => {
  if (size >= 96) {
    return "extra-large";
  } else if (size >= 64) {
    return "large";
  } else if (size >= 56) {
    return "medium";
  } else if (size >= 40) {
    return "small";
  } else if (size >= 28) {
    return "extra-small";
  } else {
    return "tiny";
  }
};
var avatarColors = [
  "dark-red",
  "cranberry",
  "red",
  "pumpkin",
  "peach",
  "marigold",
  "gold",
  "brass",
  "brown",
  "forest",
  "seafoam",
  "dark-green",
  "light-teal",
  "teal",
  "steel",
  "blue",
  "royal-blue",
  "cornflower",
  "navy",
  "lavender",
  "purple",
  "grape",
  "lilac",
  "pink",
  "magenta",
  "plum",
  "beige",
  "mink",
  "platinum",
  "anchor"
];
var getHashCode = (str) => {
  let hashCode = 0;
  for (let len = str.length - 1; len >= 0; len--) {
    const ch = str.charCodeAt(len);
    const shift = len % 8;
    hashCode ^= (ch << shift) + (ch >> 8 - shift);
  }
  return hashCode;
};

// node_modules/@fluentui/react-avatar/lib/components/Avatar/useAvatarStyles.styles.js
var avatarClassNames = {
  root: "fui-Avatar",
  image: "fui-Avatar__image",
  initials: "fui-Avatar__initials",
  icon: "fui-Avatar__icon",
  badge: "fui-Avatar__badge"
};
var useRootClassName3 = __resetStyles("r81b29z", "r1aatmv", {
  r: [".r81b29z{display:inline-block;flex-shrink:0;position:relative;vertical-align:middle;border-radius:var(--borderRadiusCircular);font-family:var(--fontFamilyBase);font-weight:var(--fontWeightSemibold);font-size:var(--fontSizeBase300);width:32px;height:32px;}", ".r81b29z::before,.r81b29z::after{position:absolute;top:0;left:0;bottom:0;right:0;z-index:-1;margin:calc(-2 * var(--fui-Avatar-ringWidth, 0px));border-radius:inherit;transition-property:margin,opacity;transition-timing-function:var(--curveEasyEaseMax),var(--curveLinear);transition-duration:var(--durationUltraSlow),var(--durationSlower);}", ".r81b29z::before{border-style:solid;border-width:var(--fui-Avatar-ringWidth);}", ".r1aatmv{display:inline-block;flex-shrink:0;position:relative;vertical-align:middle;border-radius:var(--borderRadiusCircular);font-family:var(--fontFamilyBase);font-weight:var(--fontWeightSemibold);font-size:var(--fontSizeBase300);width:32px;height:32px;}", ".r1aatmv::before,.r1aatmv::after{position:absolute;top:0;right:0;bottom:0;left:0;z-index:-1;margin:calc(-2 * var(--fui-Avatar-ringWidth, 0px));border-radius:inherit;transition-property:margin,opacity;transition-timing-function:var(--curveEasyEaseMax),var(--curveLinear);transition-duration:var(--durationUltraSlow),var(--durationSlower);}", ".r1aatmv::before{border-style:solid;border-width:var(--fui-Avatar-ringWidth);}"],
  s: ["@media screen and (prefers-reduced-motion: reduce){.r81b29z::before,.r81b29z::after{transition-duration:0.01ms;}}", "@media screen and (prefers-reduced-motion: reduce){.r1aatmv::before,.r1aatmv::after{transition-duration:0.01ms;}}"]
});
var useImageClassName = __resetStyles("r136dc0n", "rjly0nl", [".r136dc0n{position:absolute;top:0;left:0;width:100%;height:100%;border-radius:inherit;object-fit:cover;vertical-align:top;}", ".rjly0nl{position:absolute;top:0;right:0;width:100%;height:100%;border-radius:inherit;object-fit:cover;vertical-align:top;}"]);
var useIconInitialsClassName = __resetStyles("rip04v", "r31uzil", [".rip04v{position:absolute;box-sizing:border-box;top:0;left:0;width:100%;height:100%;line-height:1;border:var(--strokeWidthThin) solid var(--colorTransparentStroke);display:flex;align-items:center;justify-content:center;vertical-align:center;text-align:center;-webkit-user-select:none;-moz-user-select:none;user-select:none;border-radius:inherit;}", ".r31uzil{position:absolute;box-sizing:border-box;top:0;right:0;width:100%;height:100%;line-height:1;border:var(--strokeWidthThin) solid var(--colorTransparentStroke);display:flex;align-items:center;justify-content:center;vertical-align:center;text-align:center;-webkit-user-select:none;-moz-user-select:none;user-select:none;border-radius:inherit;}"]);
var useStyles6 = __styles2({
  textCaption2Strong: {
    Be2twd7: "f13mqy1h"
  },
  textCaption1Strong: {
    Be2twd7: "fy9rknc"
  },
  textSubtitle2: {
    Be2twd7: "fod5ikn"
  },
  textSubtitle1: {
    Be2twd7: "f1pp30po"
  },
  textTitle3: {
    Be2twd7: "f1x0m3f5"
  },
  squareSmall: {
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "fq9zq91"
  },
  squareMedium: {
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "ft85np5"
  },
  squareLarge: {
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "f1o0qvyv"
  },
  squareXLarge: {
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "f1kijzfu"
  },
  activeOrInactive: {
    Bz10aip: "ftfx35i",
    Bmy1vo4: "fv0atk9",
    B3o57yi: "f1iry5bo",
    Bkqvd7p: "f15n41j8",
    Hwfdqs: "f1onx1g3"
  },
  ring: {
    Ftih45: "f1wl9k8s"
  },
  ringBadgeCutout: {
    f4a502: "fp2gujx"
  },
  ringThick: {
    of393c: "fq1w1vq"
  },
  ringThicker: {
    of393c: "fzg6ace"
  },
  ringThickest: {
    of393c: "f1nu8p71"
  },
  shadow: {
    Bsft5z2: "f13zj6fq"
  },
  shadow4: {
    Be6vj1x: "fcjn15l"
  },
  shadow8: {
    Be6vj1x: "f1tm8t9f"
  },
  shadow16: {
    Be6vj1x: "f1a1aohj"
  },
  shadow28: {
    Be6vj1x: "fond6v5"
  },
  inactive: {
    abs64n: "fp25eh",
    Bz10aip: "f1clczzi",
    Bkqvd7p: "f1l3s34x",
    Bfgortx: 0,
    Bnvr3x9: 0,
    b2tv09: 0,
    Bucmhp4: 0,
    iayac2: "flkahu5",
    b6ubon: "fw457kn",
    Bqinb2h: "f1wmllxl"
  },
  badge: {
    qhf8xq: "f1euv43f",
    B5kzvoi: "f1yab3r1",
    j35jbq: ["f1e31b4d", "f1vgc2s3"]
  },
  badgeCutout: {
    btxmck: "f1eugkqs"
  },
  badgeAlign: {
    Dnlfbu: ["f1tlnv9o", "f1y9kyih"]
  },
  tiny: {
    Bdjeniz: "f1uwoubl",
    niu6jh: "fid048z"
  },
  "extra-small": {
    Bdjeniz: "f13ar0e0",
    niu6jh: "fid048z"
  },
  small: {
    Bdjeniz: "fwwuruf",
    niu6jh: "fid048z"
  },
  medium: {
    Bdjeniz: "f1af27q5",
    niu6jh: "fid048z"
  },
  large: {
    Bdjeniz: "f18yy57a",
    niu6jh: "f924bxt"
  },
  "extra-large": {
    Bdjeniz: "f2jg042",
    niu6jh: "f924bxt"
  },
  icon12: {
    Be2twd7: "f1ugzwwg"
  },
  icon16: {
    Be2twd7: "f4ybsrx"
  },
  icon20: {
    Be2twd7: "fe5j1ua"
  },
  icon24: {
    Be2twd7: "f1rt2boy"
  },
  icon28: {
    Be2twd7: "f24l1pt"
  },
  icon32: {
    Be2twd7: "ffl51b"
  },
  icon48: {
    Be2twd7: "f18m8u13"
  }
}, {
  d: [".f13mqy1h{font-size:var(--fontSizeBase100);}", ".fy9rknc{font-size:var(--fontSizeBase200);}", ".fod5ikn{font-size:var(--fontSizeBase400);}", ".f1pp30po{font-size:var(--fontSizeBase500);}", ".f1x0m3f5{font-size:var(--fontSizeBase600);}", [".fq9zq91{border-radius:var(--borderRadiusSmall);}", {
    p: -1
  }], [".ft85np5{border-radius:var(--borderRadiusMedium);}", {
    p: -1
  }], [".f1o0qvyv{border-radius:var(--borderRadiusLarge);}", {
    p: -1
  }], [".f1kijzfu{border-radius:var(--borderRadiusXLarge);}", {
    p: -1
  }], ".ftfx35i{transform:perspective(1px);}", ".fv0atk9{transition-property:transform,opacity;}", ".f1iry5bo{transition-duration:var(--durationUltraSlow),var(--durationFaster);}", ".f15n41j8{transition-timing-function:var(--curveEasyEaseMax),var(--curveLinear);}", '.f1wl9k8s::before{content:"";}', ".fp2gujx::before{-webkit-mask-image:radial-gradient(circle at bottom calc(var(--fui-Avatar-badgeRadius) + 2 * var(--fui-Avatar-ringWidth)) var(--fui-Avatar-badgeAlign) calc(var(--fui-Avatar-badgeRadius) + 2 * var(--fui-Avatar-ringWidth)), transparent calc(var(--fui-Avatar-badgeRadius) + var(--fui-Avatar-badgeGap) - 0.25px), white calc(var(--fui-Avatar-badgeRadius) + var(--fui-Avatar-badgeGap) + 0.25px));mask-image:radial-gradient(circle at bottom calc(var(--fui-Avatar-badgeRadius) + 2 * var(--fui-Avatar-ringWidth)) var(--fui-Avatar-badgeAlign) calc(var(--fui-Avatar-badgeRadius) + 2 * var(--fui-Avatar-ringWidth)), transparent calc(var(--fui-Avatar-badgeRadius) + var(--fui-Avatar-badgeGap) - 0.25px), white calc(var(--fui-Avatar-badgeRadius) + var(--fui-Avatar-badgeGap) + 0.25px));}", ".fq1w1vq{--fui-Avatar-ringWidth:var(--strokeWidthThick);}", ".fzg6ace{--fui-Avatar-ringWidth:var(--strokeWidthThicker);}", ".f1nu8p71{--fui-Avatar-ringWidth:var(--strokeWidthThickest);}", '.f13zj6fq::after{content:"";}', ".fcjn15l::after{box-shadow:var(--shadow4);}", ".f1tm8t9f::after{box-shadow:var(--shadow8);}", ".f1a1aohj::after{box-shadow:var(--shadow16);}", ".fond6v5::after{box-shadow:var(--shadow28);}", ".fp25eh{opacity:0.8;}", ".f1clczzi{transform:scale(0.875);}", ".f1l3s34x{transition-timing-function:var(--curveDecelerateMin),var(--curveLinear);}", [".flkahu5::before,.flkahu5::after{margin:0;}", {
    p: -1
  }], ".fw457kn::before,.fw457kn::after{opacity:0;}", ".f1wmllxl::before,.f1wmllxl::after{transition-timing-function:var(--curveDecelerateMin),var(--curveLinear);}", ".f1euv43f{position:absolute;}", ".f1yab3r1{bottom:0;}", ".f1e31b4d{right:0;}", ".f1vgc2s3{left:0;}", ".f1eugkqs{-webkit-mask-image:radial-gradient(circle at bottom var(--fui-Avatar-badgeRadius) var(--fui-Avatar-badgeAlign) var(--fui-Avatar-badgeRadius), transparent calc(var(--fui-Avatar-badgeRadius) + var(--fui-Avatar-badgeGap) - 0.25px), white calc(var(--fui-Avatar-badgeRadius) + var(--fui-Avatar-badgeGap) + 0.25px));mask-image:radial-gradient(circle at bottom var(--fui-Avatar-badgeRadius) var(--fui-Avatar-badgeAlign) var(--fui-Avatar-badgeRadius), transparent calc(var(--fui-Avatar-badgeRadius) + var(--fui-Avatar-badgeGap) - 0.25px), white calc(var(--fui-Avatar-badgeRadius) + var(--fui-Avatar-badgeGap) + 0.25px));}", ".f1tlnv9o{--fui-Avatar-badgeAlign:right;}", ".f1y9kyih{--fui-Avatar-badgeAlign:left;}", ".f1uwoubl{--fui-Avatar-badgeRadius:3px;}", ".fid048z{--fui-Avatar-badgeGap:var(--strokeWidthThin);}", ".f13ar0e0{--fui-Avatar-badgeRadius:5px;}", ".fwwuruf{--fui-Avatar-badgeRadius:6px;}", ".f1af27q5{--fui-Avatar-badgeRadius:8px;}", ".f18yy57a{--fui-Avatar-badgeRadius:10px;}", ".f924bxt{--fui-Avatar-badgeGap:var(--strokeWidthThick);}", ".f2jg042{--fui-Avatar-badgeRadius:14px;}", ".f1ugzwwg{font-size:12px;}", ".f4ybsrx{font-size:16px;}", ".fe5j1ua{font-size:20px;}", ".f1rt2boy{font-size:24px;}", ".f24l1pt{font-size:28px;}", ".ffl51b{font-size:32px;}", ".f18m8u13{font-size:48px;}"],
  m: [["@media screen and (prefers-reduced-motion: reduce){.f1onx1g3{transition-duration:0.01ms;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }]]
});
var useSizeStyles = __styles2({
  "16": {
    a9b677: "fjw5fx7",
    Bqenvij: "fd461yt"
  },
  "20": {
    a9b677: "f64fuq3",
    Bqenvij: "fjamq6b"
  },
  "24": {
    a9b677: "fq4mcun",
    Bqenvij: "frvgh55"
  },
  "28": {
    a9b677: "f1w9dchk",
    Bqenvij: "fxldao9"
  },
  "32": {
    a9b677: "f1szoe96",
    Bqenvij: "f1d2rq10"
  },
  "36": {
    a9b677: "fpdz1er",
    Bqenvij: "f8ljn23"
  },
  "40": {
    a9b677: "feqmc2u",
    Bqenvij: "fbhnoac"
  },
  "48": {
    a9b677: "f124akge",
    Bqenvij: "ff2sm71"
  },
  "56": {
    a9b677: "f1u66zr1",
    Bqenvij: "fzki0ko"
  },
  "64": {
    a9b677: "fa9ln6p",
    Bqenvij: "f16k9i2m"
  },
  "72": {
    a9b677: "fhcae8x",
    Bqenvij: "f1shusfg"
  },
  "96": {
    a9b677: "f1kyr2gn",
    Bqenvij: "fypu0ge"
  },
  "120": {
    a9b677: "fwfqyga",
    Bqenvij: "fjr5b71"
  },
  "128": {
    a9b677: "f1iksgmy",
    Bqenvij: "fele2au"
  }
}, {
  d: [".fjw5fx7{width:16px;}", ".fd461yt{height:16px;}", ".f64fuq3{width:20px;}", ".fjamq6b{height:20px;}", ".fq4mcun{width:24px;}", ".frvgh55{height:24px;}", ".f1w9dchk{width:28px;}", ".fxldao9{height:28px;}", ".f1szoe96{width:32px;}", ".f1d2rq10{height:32px;}", ".fpdz1er{width:36px;}", ".f8ljn23{height:36px;}", ".feqmc2u{width:40px;}", ".fbhnoac{height:40px;}", ".f124akge{width:48px;}", ".ff2sm71{height:48px;}", ".f1u66zr1{width:56px;}", ".fzki0ko{height:56px;}", ".fa9ln6p{width:64px;}", ".f16k9i2m{height:64px;}", ".fhcae8x{width:72px;}", ".f1shusfg{height:72px;}", ".f1kyr2gn{width:96px;}", ".fypu0ge{height:96px;}", ".fwfqyga{width:120px;}", ".fjr5b71{height:120px;}", ".f1iksgmy{width:128px;}", ".fele2au{height:128px;}"]
});
var useColorStyles = __styles2({
  neutral: {
    sj55zd: "f11d4kpn",
    De3pzq: "f18f03hv"
  },
  brand: {
    sj55zd: "fonrgv7",
    De3pzq: "f1blnnmj"
  },
  "dark-red": {
    sj55zd: "fqjd1y1",
    De3pzq: "f1vq2oo4"
  },
  cranberry: {
    sj55zd: "fg9gses",
    De3pzq: "f1lwxszt"
  },
  red: {
    sj55zd: "f23f7i0",
    De3pzq: "f1q9qhfq"
  },
  pumpkin: {
    sj55zd: "fjnan08",
    De3pzq: "fz91bi3"
  },
  peach: {
    sj55zd: "fknu15p",
    De3pzq: "f1b9nr51"
  },
  marigold: {
    sj55zd: "f9603vw",
    De3pzq: "f3z4w6d"
  },
  gold: {
    sj55zd: "fmq0uwp",
    De3pzq: "fg50kya"
  },
  brass: {
    sj55zd: "f28g5vo",
    De3pzq: "f4w2gd0"
  },
  brown: {
    sj55zd: "ftl572b",
    De3pzq: "f14wu1f4"
  },
  forest: {
    sj55zd: "f1gymlvd",
    De3pzq: "f19ut4y6"
  },
  seafoam: {
    sj55zd: "fnnb6wn",
    De3pzq: "f1n057jc"
  },
  "dark-green": {
    sj55zd: "ff58qw8",
    De3pzq: "f11t05wk"
  },
  "light-teal": {
    sj55zd: "f1up9qbj",
    De3pzq: "f42feg1"
  },
  teal: {
    sj55zd: "f135dsb4",
    De3pzq: "f6hvv1p"
  },
  steel: {
    sj55zd: "f151dlcp",
    De3pzq: "f1lnp8zf"
  },
  blue: {
    sj55zd: "f1rjv50u",
    De3pzq: "f1ggcpy6"
  },
  "royal-blue": {
    sj55zd: "f1emykk5",
    De3pzq: "f12rj61f"
  },
  cornflower: {
    sj55zd: "fqsigj7",
    De3pzq: "f8k7hur"
  },
  navy: {
    sj55zd: "f1nj97xi",
    De3pzq: "f19gw0ux"
  },
  lavender: {
    sj55zd: "fwctg0i",
    De3pzq: "ff379vm"
  },
  purple: {
    sj55zd: "fjrsgpu",
    De3pzq: "f1mzf1e1"
  },
  grape: {
    sj55zd: "f1fiiydq",
    De3pzq: "f1o4k8oy"
  },
  lilac: {
    sj55zd: "f1res9jt",
    De3pzq: "f1x6mz1o"
  },
  pink: {
    sj55zd: "fv3fbbi",
    De3pzq: "fydlv6t"
  },
  magenta: {
    sj55zd: "f1f1fwnz",
    De3pzq: "f4xb6j5"
  },
  plum: {
    sj55zd: "f8ptl6j",
    De3pzq: "fqo8e26"
  },
  beige: {
    sj55zd: "f1ntv3ld",
    De3pzq: "f101elhj"
  },
  mink: {
    sj55zd: "f1fscmp",
    De3pzq: "f13g8o5c"
  },
  platinum: {
    sj55zd: "f1dr00v2",
    De3pzq: "fkh7blw"
  },
  anchor: {
    sj55zd: "f1f3ti53",
    De3pzq: "fu4yj0j"
  }
}, {
  d: [".f11d4kpn{color:var(--colorNeutralForeground3);}", ".f18f03hv{background-color:var(--colorNeutralBackground6);}", ".fonrgv7{color:var(--colorNeutralForegroundStaticInverted);}", ".f1blnnmj{background-color:var(--colorBrandBackgroundStatic);}", ".fqjd1y1{color:var(--colorPaletteDarkRedForeground2);}", ".f1vq2oo4{background-color:var(--colorPaletteDarkRedBackground2);}", ".fg9gses{color:var(--colorPaletteCranberryForeground2);}", ".f1lwxszt{background-color:var(--colorPaletteCranberryBackground2);}", ".f23f7i0{color:var(--colorPaletteRedForeground2);}", ".f1q9qhfq{background-color:var(--colorPaletteRedBackground2);}", ".fjnan08{color:var(--colorPalettePumpkinForeground2);}", ".fz91bi3{background-color:var(--colorPalettePumpkinBackground2);}", ".fknu15p{color:var(--colorPalettePeachForeground2);}", ".f1b9nr51{background-color:var(--colorPalettePeachBackground2);}", ".f9603vw{color:var(--colorPaletteMarigoldForeground2);}", ".f3z4w6d{background-color:var(--colorPaletteMarigoldBackground2);}", ".fmq0uwp{color:var(--colorPaletteGoldForeground2);}", ".fg50kya{background-color:var(--colorPaletteGoldBackground2);}", ".f28g5vo{color:var(--colorPaletteBrassForeground2);}", ".f4w2gd0{background-color:var(--colorPaletteBrassBackground2);}", ".ftl572b{color:var(--colorPaletteBrownForeground2);}", ".f14wu1f4{background-color:var(--colorPaletteBrownBackground2);}", ".f1gymlvd{color:var(--colorPaletteForestForeground2);}", ".f19ut4y6{background-color:var(--colorPaletteForestBackground2);}", ".fnnb6wn{color:var(--colorPaletteSeafoamForeground2);}", ".f1n057jc{background-color:var(--colorPaletteSeafoamBackground2);}", ".ff58qw8{color:var(--colorPaletteDarkGreenForeground2);}", ".f11t05wk{background-color:var(--colorPaletteDarkGreenBackground2);}", ".f1up9qbj{color:var(--colorPaletteLightTealForeground2);}", ".f42feg1{background-color:var(--colorPaletteLightTealBackground2);}", ".f135dsb4{color:var(--colorPaletteTealForeground2);}", ".f6hvv1p{background-color:var(--colorPaletteTealBackground2);}", ".f151dlcp{color:var(--colorPaletteSteelForeground2);}", ".f1lnp8zf{background-color:var(--colorPaletteSteelBackground2);}", ".f1rjv50u{color:var(--colorPaletteBlueForeground2);}", ".f1ggcpy6{background-color:var(--colorPaletteBlueBackground2);}", ".f1emykk5{color:var(--colorPaletteRoyalBlueForeground2);}", ".f12rj61f{background-color:var(--colorPaletteRoyalBlueBackground2);}", ".fqsigj7{color:var(--colorPaletteCornflowerForeground2);}", ".f8k7hur{background-color:var(--colorPaletteCornflowerBackground2);}", ".f1nj97xi{color:var(--colorPaletteNavyForeground2);}", ".f19gw0ux{background-color:var(--colorPaletteNavyBackground2);}", ".fwctg0i{color:var(--colorPaletteLavenderForeground2);}", ".ff379vm{background-color:var(--colorPaletteLavenderBackground2);}", ".fjrsgpu{color:var(--colorPalettePurpleForeground2);}", ".f1mzf1e1{background-color:var(--colorPalettePurpleBackground2);}", ".f1fiiydq{color:var(--colorPaletteGrapeForeground2);}", ".f1o4k8oy{background-color:var(--colorPaletteGrapeBackground2);}", ".f1res9jt{color:var(--colorPaletteLilacForeground2);}", ".f1x6mz1o{background-color:var(--colorPaletteLilacBackground2);}", ".fv3fbbi{color:var(--colorPalettePinkForeground2);}", ".fydlv6t{background-color:var(--colorPalettePinkBackground2);}", ".f1f1fwnz{color:var(--colorPaletteMagentaForeground2);}", ".f4xb6j5{background-color:var(--colorPaletteMagentaBackground2);}", ".f8ptl6j{color:var(--colorPalettePlumForeground2);}", ".fqo8e26{background-color:var(--colorPalettePlumBackground2);}", ".f1ntv3ld{color:var(--colorPaletteBeigeForeground2);}", ".f101elhj{background-color:var(--colorPaletteBeigeBackground2);}", ".f1fscmp{color:var(--colorPaletteMinkForeground2);}", ".f13g8o5c{background-color:var(--colorPaletteMinkBackground2);}", ".f1dr00v2{color:var(--colorPalettePlatinumForeground2);}", ".fkh7blw{background-color:var(--colorPalettePlatinumBackground2);}", ".f1f3ti53{color:var(--colorPaletteAnchorForeground2);}", ".fu4yj0j{background-color:var(--colorPaletteAnchorBackground2);}"]
});
var useRingColorStyles = __styles2({
  neutral: {
    Bic5iru: "f1uuiafn"
  },
  brand: {
    Bic5iru: "f1uuiafn"
  },
  "dark-red": {
    Bic5iru: "f1t2x9on"
  },
  cranberry: {
    Bic5iru: "f1pvshc9"
  },
  red: {
    Bic5iru: "f1ectbk9"
  },
  pumpkin: {
    Bic5iru: "fvzpl0b"
  },
  peach: {
    Bic5iru: "fwj2kd7"
  },
  marigold: {
    Bic5iru: "fr120vy"
  },
  gold: {
    Bic5iru: "f8xmmar"
  },
  brass: {
    Bic5iru: "f1hbety2"
  },
  brown: {
    Bic5iru: "f1vg3s4g"
  },
  forest: {
    Bic5iru: "f1m3olm5"
  },
  seafoam: {
    Bic5iru: "f17xiqtr"
  },
  "dark-green": {
    Bic5iru: "fx32vyh"
  },
  "light-teal": {
    Bic5iru: "f1mkihwv"
  },
  teal: {
    Bic5iru: "fecnooh"
  },
  steel: {
    Bic5iru: "f15hfgzm"
  },
  blue: {
    Bic5iru: "fqproka"
  },
  "royal-blue": {
    Bic5iru: "f17v2w59"
  },
  cornflower: {
    Bic5iru: "fp0q1mo"
  },
  navy: {
    Bic5iru: "f1nlym55"
  },
  lavender: {
    Bic5iru: "f62vk8h"
  },
  purple: {
    Bic5iru: "f15zl69q"
  },
  grape: {
    Bic5iru: "f53w4j7"
  },
  lilac: {
    Bic5iru: "fu2771t"
  },
  pink: {
    Bic5iru: "fzflscs"
  },
  magenta: {
    Bic5iru: "fb6rmqc"
  },
  plum: {
    Bic5iru: "f1a4gm5b"
  },
  beige: {
    Bic5iru: "f1qpf9z1"
  },
  mink: {
    Bic5iru: "f1l7or83"
  },
  platinum: {
    Bic5iru: "fzrj0iu"
  },
  anchor: {
    Bic5iru: "f8oz6wf"
  }
}, {
  d: [".f1uuiafn::before{color:var(--colorBrandStroke1);}", ".f1t2x9on::before{color:var(--colorPaletteDarkRedBorderActive);}", ".f1pvshc9::before{color:var(--colorPaletteCranberryBorderActive);}", ".f1ectbk9::before{color:var(--colorPaletteRedBorderActive);}", ".fvzpl0b::before{color:var(--colorPalettePumpkinBorderActive);}", ".fwj2kd7::before{color:var(--colorPalettePeachBorderActive);}", ".fr120vy::before{color:var(--colorPaletteMarigoldBorderActive);}", ".f8xmmar::before{color:var(--colorPaletteGoldBorderActive);}", ".f1hbety2::before{color:var(--colorPaletteBrassBorderActive);}", ".f1vg3s4g::before{color:var(--colorPaletteBrownBorderActive);}", ".f1m3olm5::before{color:var(--colorPaletteForestBorderActive);}", ".f17xiqtr::before{color:var(--colorPaletteSeafoamBorderActive);}", ".fx32vyh::before{color:var(--colorPaletteDarkGreenBorderActive);}", ".f1mkihwv::before{color:var(--colorPaletteLightTealBorderActive);}", ".fecnooh::before{color:var(--colorPaletteTealBorderActive);}", ".f15hfgzm::before{color:var(--colorPaletteSteelBorderActive);}", ".fqproka::before{color:var(--colorPaletteBlueBorderActive);}", ".f17v2w59::before{color:var(--colorPaletteRoyalBlueBorderActive);}", ".fp0q1mo::before{color:var(--colorPaletteCornflowerBorderActive);}", ".f1nlym55::before{color:var(--colorPaletteNavyBorderActive);}", ".f62vk8h::before{color:var(--colorPaletteLavenderBorderActive);}", ".f15zl69q::before{color:var(--colorPalettePurpleBorderActive);}", ".f53w4j7::before{color:var(--colorPaletteGrapeBorderActive);}", ".fu2771t::before{color:var(--colorPaletteLilacBorderActive);}", ".fzflscs::before{color:var(--colorPalettePinkBorderActive);}", ".fb6rmqc::before{color:var(--colorPaletteMagentaBorderActive);}", ".f1a4gm5b::before{color:var(--colorPalettePlumBorderActive);}", ".f1qpf9z1::before{color:var(--colorPaletteBeigeBorderActive);}", ".f1l7or83::before{color:var(--colorPaletteMinkBorderActive);}", ".fzrj0iu::before{color:var(--colorPalettePlatinumBorderActive);}", ".f8oz6wf::before{color:var(--colorPaletteAnchorBorderActive);}"]
});
var useAvatarStyles_unstable = (state) => {
  "use no memo";
  const {
    size,
    shape,
    active,
    activeAppearance,
    color: color2
  } = state;
  const rootClassName = useRootClassName3();
  const imageClassName = useImageClassName();
  const iconInitialsClassName = useIconInitialsClassName();
  const styles = useStyles6();
  const sizeStyles = useSizeStyles();
  const colorStyles = useColorStyles();
  const ringColorStyles = useRingColorStyles();
  const rootClasses = [rootClassName, size !== 32 && sizeStyles[size]];
  if (state.badge) {
    rootClasses.push(styles.badgeAlign, styles[state.badge.size || "medium"]);
  }
  if (size <= 24) {
    rootClasses.push(styles.textCaption2Strong);
  } else if (size <= 28) {
    rootClasses.push(styles.textCaption1Strong);
  } else if (size <= 40) {
  } else if (size <= 56) {
    rootClasses.push(styles.textSubtitle2);
  } else if (size <= 96) {
    rootClasses.push(styles.textSubtitle1);
  } else {
    rootClasses.push(styles.textTitle3);
  }
  if (shape === "square") {
    if (size <= 24) {
      rootClasses.push(styles.squareSmall);
    } else if (size <= 48) {
      rootClasses.push(styles.squareMedium);
    } else if (size <= 72) {
      rootClasses.push(styles.squareLarge);
    } else {
      rootClasses.push(styles.squareXLarge);
    }
  }
  if (active === "active" || active === "inactive") {
    rootClasses.push(styles.activeOrInactive);
    if (activeAppearance === "ring" || activeAppearance === "ring-shadow") {
      rootClasses.push(styles.ring, ringColorStyles[color2]);
      if (state.badge) {
        rootClasses.push(styles.ringBadgeCutout);
      }
      if (size <= 48) {
        rootClasses.push(styles.ringThick);
      } else if (size <= 64) {
        rootClasses.push(styles.ringThicker);
      } else {
        rootClasses.push(styles.ringThickest);
      }
    }
    if (activeAppearance === "shadow" || activeAppearance === "ring-shadow") {
      rootClasses.push(styles.shadow);
      if (size <= 28) {
        rootClasses.push(styles.shadow4);
      } else if (size <= 48) {
        rootClasses.push(styles.shadow8);
      } else if (size <= 64) {
        rootClasses.push(styles.shadow16);
      } else {
        rootClasses.push(styles.shadow28);
      }
    }
    if (active === "inactive") {
      rootClasses.push(styles.inactive);
    }
  }
  state.root.className = mergeClasses(avatarClassNames.root, ...rootClasses, state.root.className);
  if (state.badge) {
    state.badge.className = mergeClasses(avatarClassNames.badge, styles.badge, state.badge.className);
  }
  if (state.image) {
    state.image.className = mergeClasses(avatarClassNames.image, imageClassName, colorStyles[color2], state.badge && styles.badgeCutout, state.image.className);
  }
  if (state.initials) {
    state.initials.className = mergeClasses(avatarClassNames.initials, iconInitialsClassName, colorStyles[color2], state.badge && styles.badgeCutout, state.initials.className);
  }
  if (state.icon) {
    let iconSizeClass;
    if (size <= 16) {
      iconSizeClass = styles.icon12;
    } else if (size <= 24) {
      iconSizeClass = styles.icon16;
    } else if (size <= 40) {
      iconSizeClass = styles.icon20;
    } else if (size <= 48) {
      iconSizeClass = styles.icon24;
    } else if (size <= 56) {
      iconSizeClass = styles.icon28;
    } else if (size <= 72) {
      iconSizeClass = styles.icon32;
    } else {
      iconSizeClass = styles.icon48;
    }
    state.icon.className = mergeClasses(avatarClassNames.icon, iconInitialsClassName, iconSizeClass, colorStyles[color2], state.badge && styles.badgeCutout, state.icon.className);
  }
  return state;
};

// node_modules/@fluentui/react-avatar/lib/components/Avatar/Avatar.js
var Avatar = React54.forwardRef((props, ref) => {
  const state = useAvatar_unstable(props, ref);
  useAvatarStyles_unstable(state);
  useCustomStyleHook("useAvatarStyles_unstable")(state);
  return renderAvatar_unstable(state);
});
Avatar.displayName = "Avatar";

// node_modules/@fluentui/react-avatar/lib/components/AvatarGroup/AvatarGroup.js
var React59 = __toESM(require_react());

// node_modules/@fluentui/react-avatar/node_modules/@fluentui/react-context-selector/lib/createContext.js
var React55 = __toESM(require_react());
var import_scheduler2 = __toESM(require_scheduler2());
var createProvider2 = (Original) => {
  const Provider2 = (props) => {
    const valueRef = React55.useRef(props.value);
    const versionRef = React55.useRef(0);
    const contextValue = React55.useRef();
    if (!contextValue.current) {
      contextValue.current = {
        value: valueRef,
        version: versionRef,
        listeners: []
      };
    }
    useIsomorphicLayoutEffect(() => {
      valueRef.current = props.value;
      versionRef.current += 1;
      (0, import_scheduler2.unstable_runWithPriority)(import_scheduler2.unstable_NormalPriority, () => {
        contextValue.current.listeners.forEach((listener) => {
          listener([
            versionRef.current,
            props.value
          ]);
        });
      });
    }, [
      props.value
    ]);
    return React55.createElement(Original, {
      value: contextValue.current
    }, props.children);
  };
  if (true) {
    Provider2.displayName = "ContextSelector.Provider";
  }
  return Provider2;
};
var createContext10 = (defaultValue) => {
  const context = React55.createContext({
    value: {
      current: defaultValue
    },
    version: {
      current: -1
    },
    listeners: []
  });
  context.Provider = createProvider2(context.Provider);
  delete context.Consumer;
  return context;
};

// node_modules/@fluentui/react-avatar/node_modules/@fluentui/react-context-selector/lib/useContextSelector.js
var React56 = __toESM(require_react());
var useContextSelector2 = (context, selector) => {
  const contextValue = React56.useContext(context);
  const { value: { current: value }, version: { current: version }, listeners } = contextValue;
  const selected = selector(value);
  const [state, setState] = React56.useState([
    value,
    selected
  ]);
  const dispatch = (payload) => {
    setState((prevState) => {
      if (!payload) {
        return [
          value,
          selected
        ];
      }
      if (payload[0] <= version) {
        if (Object.is(prevState[1], selected)) {
          return prevState;
        }
        return [
          value,
          selected
        ];
      }
      try {
        if (Object.is(prevState[0], payload[1])) {
          return prevState;
        }
        const nextSelected = selector(payload[1]);
        if (Object.is(prevState[1], nextSelected)) {
          return prevState;
        }
        return [
          payload[1],
          nextSelected
        ];
      } catch (e) {
      }
      return [
        prevState[0],
        prevState[1]
      ];
    });
  };
  if (!Object.is(state[1], selected)) {
    dispatch(void 0);
  }
  const stableDispatch = useEventCallback(dispatch);
  useIsomorphicLayoutEffect(() => {
    listeners.push(stableDispatch);
    return () => {
      const index = listeners.indexOf(stableDispatch);
      listeners.splice(index, 1);
    };
  }, [
    stableDispatch,
    listeners
  ]);
  return state[1];
};

// node_modules/@fluentui/react-avatar/node_modules/@fluentui/react-context-selector/lib/useHasParentContext.js
var React57 = __toESM(require_react());
function useHasParentContext2(context) {
  const contextValue = React57.useContext(context);
  if (contextValue.version) {
    return contextValue.version.current !== -1;
  }
  return false;
}

// node_modules/@fluentui/react-avatar/lib/contexts/AvatarGroupContext.js
var AvatarGroupContext = createContext10(void 0);
var avatarGroupContextDefaultValue = {};
var AvatarGroupProvider = AvatarGroupContext.Provider;
var useAvatarGroupContext_unstable = (selector) => useContextSelector2(AvatarGroupContext, (ctx = avatarGroupContextDefaultValue) => selector(ctx));

// node_modules/@fluentui/react-avatar/lib/components/AvatarGroup/renderAvatarGroup.js
var renderAvatarGroup_unstable = (state, contextValues) => {
  assertSlots(state);
  return jsx(AvatarGroupProvider, {
    value: contextValues.avatarGroup,
    children: jsx(state.root, {})
  });
};

// node_modules/@fluentui/react-avatar/lib/components/AvatarGroup/useAvatarGroup.js
var React58 = __toESM(require_react());
var useAvatarGroup_unstable = (props, ref) => {
  const { layout = "spread", size = defaultAvatarGroupSize } = props;
  const root = slot_exports.always(getIntrinsicElementProps("div", {
    role: "group",
    ...props,
    // FIXME:
    // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`
    // but since it would be a breaking change to fix it, we are casting ref to it's proper type
    ref
  }, [
    "size"
  ]), {
    elementType: "div"
  });
  return {
    layout,
    size,
    components: {
      root: "div"
    },
    root
  };
};
var defaultAvatarGroupSize = 32;

// node_modules/@fluentui/react-avatar/lib/components/AvatarGroup/useAvatarGroupContextValues.js
var useAvatarGroupContextValues = (state) => {
  const { layout, size } = state;
  const avatarGroup = {
    layout,
    size
  };
  return {
    avatarGroup
  };
};

// node_modules/@fluentui/react-avatar/lib/components/AvatarGroup/useAvatarGroupStyles.styles.js
var avatarGroupClassNames = {
  root: "fui-AvatarGroup"
};
var useStyles7 = __styles2({
  base: {
    mc9l5x: "ftuwxu6",
    qhf8xq: "f10pi13n"
  },
  pie: {
    Bgl5zvf: "f1uz6ud1",
    De3pzq: "f1ganh6p",
    Bsw6fvg: "fe2ae1k"
  }
}, {
  d: [".ftuwxu6{display:inline-flex;}", ".f10pi13n{position:relative;}", ".f1uz6ud1{clip-path:circle(50%);}", ".f1ganh6p{background-color:var(--colorTransparentStroke);}"],
  m: [["@media (forced-colors: active){.fe2ae1k{background-color:CanvasText;}}", {
    m: "(forced-colors: active)"
  }]]
});
var useAvatarGroupStyles_unstable = (state) => {
  "use no memo";
  const {
    layout,
    size
  } = state;
  const styles = useStyles7();
  const sizeStyles = useSizeStyles();
  state.root.className = mergeClasses(avatarGroupClassNames.root, styles.base, layout === "pie" && sizeStyles[size], layout === "pie" && styles.pie, state.root.className);
  return state;
};

// node_modules/@fluentui/react-avatar/lib/components/AvatarGroup/AvatarGroup.js
var AvatarGroup = React59.forwardRef((props, ref) => {
  const state = useAvatarGroup_unstable(props, ref);
  const contextValues = useAvatarGroupContextValues(state);
  useAvatarGroupStyles_unstable(state);
  useCustomStyleHook("useAvatarGroupStyles_unstable")(state);
  return renderAvatarGroup_unstable(state, contextValues);
});
AvatarGroup.displayName = "AvatarGroup";

// node_modules/@fluentui/react-avatar/lib/components/AvatarGroupItem/AvatarGroupItem.js
var React61 = __toESM(require_react());

// node_modules/@fluentui/react-avatar/lib/components/AvatarGroupItem/renderAvatarGroupItem.js
var renderAvatarGroupItem_unstable = (state) => {
  assertSlots(state);
  return jsxs(state.root, {
    children: [
      jsx(state.avatar, {}),
      state.isOverflowItem && jsx(state.overflowLabel, {})
    ]
  });
};

// node_modules/@fluentui/react-avatar/lib/components/AvatarGroupItem/useAvatarGroupItem.js
var React60 = __toESM(require_react());
var useAvatarGroupItem_unstable = (props, ref) => {
  const groupIsOverflow = useAvatarGroupContext_unstable((ctx) => ctx.isOverflow);
  const groupSize = useAvatarGroupContext_unstable((ctx) => ctx.size);
  const layout = useAvatarGroupContext_unstable((ctx) => ctx.layout);
  const { style, className, ...avatarSlotProps } = props;
  const size = groupSize !== null && groupSize !== void 0 ? groupSize : defaultAvatarGroupSize;
  const hasAvatarGroupContext = useHasParentContext2(AvatarGroupContext);
  if (!hasAvatarGroupContext) {
    console.warn("AvatarGroupItem must only be used inside an AvatarGroup component.");
  }
  return {
    isOverflowItem: groupIsOverflow,
    layout,
    size,
    components: {
      root: groupIsOverflow ? "li" : "div",
      avatar: Avatar,
      overflowLabel: "span"
    },
    root: slot_exports.always(props.root, {
      defaultProps: {
        style,
        className
      },
      elementType: groupIsOverflow ? "li" : "div"
    }),
    avatar: slot_exports.always(props.avatar, {
      defaultProps: {
        ref,
        size,
        color: "colorful",
        ...avatarSlotProps
      },
      elementType: Avatar
    }),
    overflowLabel: slot_exports.always(props.overflowLabel, {
      defaultProps: {
        // Avatar already has its aria-label set to the name, this will prevent the name to be read twice.
        "aria-hidden": true,
        children: props.name
      },
      elementType: "span"
    })
  };
};

// node_modules/@fluentui/react-avatar/lib/components/AvatarGroupItem/useAvatarGroupItemStyles.styles.js
var avatarGroupItemClassNames = {
  root: "fui-AvatarGroupItem",
  avatar: "fui-AvatarGroupItem__avatar",
  overflowLabel: "fui-AvatarGroupItem__overflowLabel"
};
var useRootStyles2 = __styles2({
  base: {
    Bt984gj: "f122n59",
    mc9l5x: "ftuwxu6",
    Bnnss6s: "fi64zpg",
    qhf8xq: "f10pi13n"
  },
  overflowItem: {
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f16d74zd"
  },
  nonOverflowItem: {
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "f44lkw9"
  }
}, {
  d: [".f122n59{align-items:center;}", ".ftuwxu6{display:inline-flex;}", ".fi64zpg{flex-shrink:0;}", ".f10pi13n{position:relative;}", [".f16d74zd{padding:var(--spacingVerticalXS) var(--spacingHorizontalXS);}", {
    p: -1
  }], [".f44lkw9{border-radius:var(--borderRadiusCircular);}", {
    p: -1
  }]]
});
var useAvatarStyles = __styles2({
  nonOverflowItem: {
    qhf8xq: "f1euv43f"
  },
  pie: {
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "fokr779"
  }
}, {
  d: [".f1euv43f{position:absolute;}", [".fokr779{border-radius:0;}", {
    p: -1
  }]]
});
var useOverflowLabelStyles = __styles2({
  base: {
    Frg6f3: ["foyynoy", "f1vcna3q"],
    sj55zd: "f19n0e5",
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "figsok6",
    Bg96gwp: "f1i3iumi"
  }
}, {
  d: [".foyynoy{margin-left:var(--spacingHorizontalS);}", ".f1vcna3q{margin-right:var(--spacingHorizontalS);}", ".f19n0e5{color:var(--colorNeutralForeground1);}", ".fk6fouc{font-family:var(--fontFamilyBase);}", ".fkhj508{font-size:var(--fontSizeBase300);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}"]
});
var useStackStyles = __styles2({
  thick: {
    E5pizo: "foiuzp5"
  },
  thicker: {
    E5pizo: "f1x6o7w7"
  },
  thickest: {
    E5pizo: "f2aml1u"
  },
  xxs: {
    jhia2w: ["f1cjco14", "f13dxjc9"]
  },
  xs: {
    jhia2w: ["f15p6bln", "f1bab3ru"]
  },
  s: {
    jhia2w: ["f1v53ncc", "f17pu8r8"]
  },
  l: {
    jhia2w: ["flv48ch", "fnh1ydj"]
  }
}, {
  d: [".foiuzp5{box-shadow:0 0 0 var(--strokeWidthThick) var(--colorNeutralBackground2);}", ".f1x6o7w7{box-shadow:0 0 0 var(--strokeWidthThicker) var(--colorNeutralBackground2);}", ".f2aml1u{box-shadow:0 0 0 var(--strokeWidthThickest) var(--colorNeutralBackground2);}", ".f1cjco14:not(:first-child){margin-left:calc(-1 * var(--spacingHorizontalXXS));}", ".f13dxjc9:not(:first-child){margin-right:calc(-1 * var(--spacingHorizontalXXS));}", ".f15p6bln:not(:first-child){margin-left:calc(-1 * var(--spacingHorizontalXS));}", ".f1bab3ru:not(:first-child){margin-right:calc(-1 * var(--spacingHorizontalXS));}", ".f1v53ncc:not(:first-child){margin-left:calc(-1 * var(--spacingHorizontalS));}", ".f17pu8r8:not(:first-child){margin-right:calc(-1 * var(--spacingHorizontalS));}", ".flv48ch:not(:first-child){margin-left:calc(-1 * var(--spacingHorizontalL));}", ".fnh1ydj:not(:first-child){margin-right:calc(-1 * var(--spacingHorizontalL));}"]
});
var useSpreadStyles = __styles2({
  s: {
    jhia2w: ["f7lhxv7", "f6ou2b0"]
  },
  mNudge: {
    jhia2w: ["f1h0okno", "fnnqava"]
  },
  m: {
    jhia2w: ["f1wkt588", "f1maio5g"]
  },
  l: {
    jhia2w: ["f1l333zn", "f1r41m4c"]
  },
  xl: {
    jhia2w: ["fahr13a", "f2n7rbo"]
  }
}, {
  d: [".f7lhxv7:not(:first-child){margin-left:var(--spacingHorizontalS);}", ".f6ou2b0:not(:first-child){margin-right:var(--spacingHorizontalS);}", ".f1h0okno:not(:first-child){margin-left:var(--spacingHorizontalMNudge);}", ".fnnqava:not(:first-child){margin-right:var(--spacingHorizontalMNudge);}", ".f1wkt588:not(:first-child){margin-left:var(--spacingHorizontalM);}", ".f1maio5g:not(:first-child){margin-right:var(--spacingHorizontalM);}", ".f1l333zn:not(:first-child){margin-left:var(--spacingHorizontalL);}", ".f1r41m4c:not(:first-child){margin-right:var(--spacingHorizontalL);}", ".fahr13a:not(:first-child){margin-left:var(--spacingHorizontalXL);}", ".f2n7rbo:not(:first-child){margin-right:var(--spacingHorizontalXL);}"]
});
var usePieStyles = __styles2({
  base: {
    qhf8xq: "f1euv43f"
  },
  slices: {
    B3gf25r: "f16m7w7k",
    Be2twx7: ["f1o4hhgz", "fb4gjrz"],
    Bvaow4n: "f1pgb5nx",
    Gpecfs: ["fugirid", "f4sk99m"],
    bhabj1: "fjreaf3",
    B7rc6i7: ["f1k4vw81", "f1w1xcy7"],
    Bwrfys5: "f1ef8vxk",
    Bwuzm9m: ["f1x2qbfv", "f1xwf4nz"],
    fflka: "ff6xuso",
    do7bja: "fzpvk6c",
    Be8zqhl: "f4onu7f",
    Bij0kh0: ["f1ydfez1", "fjensob"],
    Bwexnyt: "f1yv732j",
    Bhe5x6o: "fchq2fj",
    B3kv7bh: "ff5binh"
  },
  rtlSlices: {
    B3gf25r: "f5vdl61",
    Bvaow4n: "f1bnra92",
    bhabj1: "f4ibo7t",
    Bwrfys5: "f17heuis",
    Bwuzm9m: ["f64f2ud", "f1yjglu3"],
    Be8zqhl: "fa6l61x",
    Bij0kh0: ["f1w2396a", "f14ab3yo"]
  },
  thick: {
    uiicq7: "fnyfzln"
  },
  thicker: {
    uiicq7: "f1xdzzot"
  },
  thickest: {
    uiicq7: "f1auhru5"
  }
}, {
  d: [".f1euv43f{position:absolute;}", ".f16m7w7k:nth-of-type(1):nth-last-of-type(2){clip-path:inset(0 calc(25% + (var(--fuiAvatarGroupItem__divider--width) / 2)) 0 25%);}", ".f1o4hhgz:nth-of-type(1):nth-last-of-type(2){left:-25%;}", ".fb4gjrz:nth-of-type(1):nth-last-of-type(2){right:-25%;}", ".f1pgb5nx:nth-of-type(2):nth-last-of-type(1){clip-path:inset(0 25% 0 calc(25% + (var(--fuiAvatarGroupItem__divider--width) / 2)));}", ".fugirid:nth-of-type(2):nth-last-of-type(1){left:25%;}", ".f4sk99m:nth-of-type(2):nth-last-of-type(1){right:25%;}", ".fjreaf3:nth-of-type(1):nth-last-of-type(3){clip-path:inset(0 calc(25% + (var(--fuiAvatarGroupItem__divider--width) / 2)) 0 25%);}", ".f1k4vw81:nth-of-type(1):nth-last-of-type(3){left:-25%;}", ".f1w1xcy7:nth-of-type(1):nth-last-of-type(3){right:-25%;}", ".f1ef8vxk:nth-of-type(2):nth-last-of-type(2){clip-path:inset(0 0 var(--fuiAvatarGroupItem__divider--width) var(--fuiAvatarGroupItem__divider--width));}", ".f1x2qbfv:nth-of-type(2):nth-last-of-type(2){left:50%;}", ".f1xwf4nz:nth-of-type(2):nth-last-of-type(2){right:50%;}", ".ff6xuso:nth-of-type(2):nth-last-of-type(2){transform:scale(0.5);}", ".fzpvk6c:nth-of-type(2):nth-last-of-type(2){transform-origin:0 0;}", ".f4onu7f:nth-of-type(3):nth-last-of-type(1){clip-path:inset(var(--fuiAvatarGroupItem__divider--width) 0 0 var(--fuiAvatarGroupItem__divider--width));}", ".f1ydfez1:nth-of-type(3):nth-last-of-type(1){left:50%;}", ".fjensob:nth-of-type(3):nth-last-of-type(1){right:50%;}", ".f1yv732j:nth-of-type(3):nth-last-of-type(1){top:50%;}", ".fchq2fj:nth-of-type(3):nth-last-of-type(1){transform:scale(0.5);}", ".ff5binh:nth-of-type(3):nth-last-of-type(1){transform-origin:0 0;}", ".f5vdl61:nth-of-type(1):nth-last-of-type(2){clip-path:inset(0 25% 0 calc(25% + (var(--fuiAvatarGroupItem__divider--width) / 2)));}", ".f1bnra92:nth-of-type(2):nth-last-of-type(1){clip-path:inset(0 calc(25% + (var(--fuiAvatarGroupItem__divider--width) / 2)) 0 25%);}", ".f4ibo7t:nth-of-type(1):nth-last-of-type(3){clip-path:inset(0 25% 0 calc(25% + (var(--fuiAvatarGroupItem__divider--width) / 2)));}", ".f17heuis:nth-of-type(2):nth-last-of-type(2){clip-path:inset(0 var(--fuiAvatarGroupItem__divider--width) var(--fuiAvatarGroupItem__divider--width) 0);}", ".f64f2ud:nth-of-type(2):nth-last-of-type(2){left:0;}", ".f1yjglu3:nth-of-type(2):nth-last-of-type(2){right:0;}", ".fa6l61x:nth-of-type(3):nth-last-of-type(1){clip-path:inset(var(--fuiAvatarGroupItem__divider--width) var(--fuiAvatarGroupItem__divider--width) 0 0);}", ".f1w2396a:nth-of-type(3):nth-last-of-type(1){left:0;}", ".f14ab3yo:nth-of-type(3):nth-last-of-type(1){right:0;}", ".fnyfzln{--fuiAvatarGroupItem__divider--width:var(--strokeWidthThick);}", ".f1xdzzot{--fuiAvatarGroupItem__divider--width:var(--strokeWidthThicker);}", ".f1auhru5{--fuiAvatarGroupItem__divider--width:var(--strokeWidthThickest);}"]
});
var useAvatarGroupItemStyles_unstable = (state) => {
  "use no memo";
  const {
    isOverflowItem,
    layout,
    size
  } = state;
  const {
    dir
  } = useFluent();
  const avatarStyles = useAvatarStyles();
  const overflowLabelStyles = useOverflowLabelStyles();
  const pieStyles = usePieStyles();
  const rootStyles = useRootStyles2();
  const sizeStyles = useSizeStyles();
  const groupChildClassName = useGroupChildClassName(layout, size);
  const rootClasses = [rootStyles.base];
  if (!isOverflowItem) {
    rootClasses.push(rootStyles.nonOverflowItem);
    rootClasses.push(groupChildClassName);
    rootClasses.push(sizeStyles[size]);
    if (layout === "pie") {
      rootClasses.push(pieStyles.base);
      if (size < 56) {
        rootClasses.push(pieStyles.thick);
      } else if (size < 72) {
        rootClasses.push(pieStyles.thicker);
      } else {
        rootClasses.push(pieStyles.thickest);
      }
      rootClasses.push(pieStyles.slices);
      if (dir === "rtl") {
        rootClasses.push(pieStyles.rtlSlices);
      }
    }
  } else {
    rootClasses.push(rootStyles.overflowItem);
  }
  state.root.className = mergeClasses(avatarGroupItemClassNames.root, ...rootClasses, state.root.className);
  state.avatar.className = mergeClasses(avatarGroupItemClassNames.avatar, !isOverflowItem && avatarStyles.nonOverflowItem, layout === "pie" && avatarStyles.pie, state.avatar.className);
  if (state.overflowLabel) {
    state.overflowLabel.className = mergeClasses(avatarGroupItemClassNames.overflowLabel, overflowLabelStyles.base, state.overflowLabel.className);
  }
  return state;
};
var useGroupChildClassName = (layout, size) => {
  const stackStyles = useStackStyles();
  const spreadStyles = useSpreadStyles();
  const layoutClasses = [];
  if (size) {
    if (layout === "stack") {
      if (size < 56) {
        layoutClasses.push(stackStyles.thick);
      } else if (size < 72) {
        layoutClasses.push(stackStyles.thicker);
      } else {
        layoutClasses.push(stackStyles.thickest);
      }
      if (size < 24) {
        layoutClasses.push(stackStyles.xxs);
      } else if (size < 48) {
        layoutClasses.push(stackStyles.xs);
      } else if (size < 96) {
        layoutClasses.push(stackStyles.s);
      } else {
        layoutClasses.push(stackStyles.l);
      }
    } else if (layout === "spread") {
      if (size < 20) {
        layoutClasses.push(spreadStyles.s);
      } else if (size < 32) {
        layoutClasses.push(spreadStyles.mNudge);
      } else if (size < 64) {
        layoutClasses.push(spreadStyles.l);
      } else {
        layoutClasses.push(spreadStyles.xl);
      }
    }
  }
  return mergeClasses(...layoutClasses);
};

// node_modules/@fluentui/react-avatar/lib/components/AvatarGroupItem/AvatarGroupItem.js
var AvatarGroupItem = React61.forwardRef((props, ref) => {
  const state = useAvatarGroupItem_unstable(props, ref);
  useAvatarGroupItemStyles_unstable(state);
  useCustomStyleHook("useAvatarGroupItemStyles_unstable")(state);
  return renderAvatarGroupItem_unstable(state);
});
AvatarGroupItem.displayName = "AvatarGroupItem";

// node_modules/@fluentui/react-avatar/lib/components/AvatarGroupPopover/AvatarGroupPopover.js
var React78 = __toESM(require_react());

// node_modules/@fluentui/react-popover/lib/components/Popover/Popover.js
var React69 = __toESM(require_react());

// node_modules/@fluentui/react-popover/lib/components/Popover/usePopover.js
var React67 = __toESM(require_react());

// node_modules/@fluentui/react-popover/lib/components/PopoverSurface/PopoverSurface.js
var React66 = __toESM(require_react());

// node_modules/@fluentui/react-popover/lib/components/PopoverSurface/usePopoverSurface.js
var React65 = __toESM(require_react());

// node_modules/@fluentui/react-popover/node_modules/@fluentui/react-context-selector/lib/createContext.js
var React62 = __toESM(require_react());
var import_scheduler3 = __toESM(require_scheduler3());
var createProvider3 = (Original) => {
  const Provider2 = (props) => {
    const valueRef = React62.useRef(props.value);
    const versionRef = React62.useRef(0);
    const contextValue = React62.useRef();
    if (!contextValue.current) {
      contextValue.current = {
        value: valueRef,
        version: versionRef,
        listeners: []
      };
    }
    useIsomorphicLayoutEffect(() => {
      valueRef.current = props.value;
      versionRef.current += 1;
      (0, import_scheduler3.unstable_runWithPriority)(import_scheduler3.unstable_NormalPriority, () => {
        contextValue.current.listeners.forEach((listener) => {
          listener([
            versionRef.current,
            props.value
          ]);
        });
      });
    }, [
      props.value
    ]);
    return React62.createElement(Original, {
      value: contextValue.current
    }, props.children);
  };
  if (true) {
    Provider2.displayName = "ContextSelector.Provider";
  }
  return Provider2;
};
var createContext12 = (defaultValue) => {
  const context = React62.createContext({
    value: {
      current: defaultValue
    },
    version: {
      current: -1
    },
    listeners: []
  });
  context.Provider = createProvider3(context.Provider);
  delete context.Consumer;
  return context;
};

// node_modules/@fluentui/react-popover/node_modules/@fluentui/react-context-selector/lib/useContextSelector.js
var React63 = __toESM(require_react());
var useContextSelector3 = (context, selector) => {
  const contextValue = React63.useContext(context);
  const { value: { current: value }, version: { current: version }, listeners } = contextValue;
  const selected = selector(value);
  const [state, setState] = React63.useState([
    value,
    selected
  ]);
  const dispatch = (payload) => {
    setState((prevState) => {
      if (!payload) {
        return [
          value,
          selected
        ];
      }
      if (payload[0] <= version) {
        if (Object.is(prevState[1], selected)) {
          return prevState;
        }
        return [
          value,
          selected
        ];
      }
      try {
        if (Object.is(prevState[0], payload[1])) {
          return prevState;
        }
        const nextSelected = selector(payload[1]);
        if (Object.is(prevState[1], nextSelected)) {
          return prevState;
        }
        return [
          payload[1],
          nextSelected
        ];
      } catch (e) {
      }
      return [
        prevState[0],
        prevState[1]
      ];
    });
  };
  if (!Object.is(state[1], selected)) {
    dispatch(void 0);
  }
  const stableDispatch = useEventCallback(dispatch);
  useIsomorphicLayoutEffect(() => {
    listeners.push(stableDispatch);
    return () => {
      const index = listeners.indexOf(stableDispatch);
      listeners.splice(index, 1);
    };
  }, [
    stableDispatch,
    listeners
  ]);
  return state[1];
};

// node_modules/@fluentui/react-popover/node_modules/@fluentui/react-context-selector/lib/useHasParentContext.js
var React64 = __toESM(require_react());

// node_modules/@fluentui/react-popover/lib/popoverContext.js
var PopoverContext = createContext12(void 0);
var popoverContextDefaultValue = {
  open: false,
  setOpen: () => null,
  toggleOpen: () => null,
  triggerRef: {
    current: null
  },
  contentRef: {
    current: null
  },
  arrowRef: {
    current: null
  },
  openOnContext: false,
  openOnHover: false,
  size: "medium",
  trapFocus: false,
  inline: false
};
var PopoverProvider = PopoverContext.Provider;
var usePopoverContext_unstable = (selector) => useContextSelector3(PopoverContext, (ctx = popoverContextDefaultValue) => selector(ctx));

// node_modules/@fluentui/react-popover/lib/components/PopoverSurface/usePopoverSurface.js
var usePopoverSurface_unstable = (props, ref) => {
  const contentRef = usePopoverContext_unstable((context) => context.contentRef);
  const openOnHover = usePopoverContext_unstable((context) => context.openOnHover);
  const setOpen = usePopoverContext_unstable((context) => context.setOpen);
  const mountNode = usePopoverContext_unstable((context) => context.mountNode);
  const arrowRef = usePopoverContext_unstable((context) => context.arrowRef);
  const size = usePopoverContext_unstable((context) => context.size);
  const withArrow = usePopoverContext_unstable((context) => context.withArrow);
  const appearance = usePopoverContext_unstable((context) => context.appearance);
  const trapFocus = usePopoverContext_unstable((context) => context.trapFocus);
  const inertTrapFocus = usePopoverContext_unstable((context) => context.inertTrapFocus);
  const inline = usePopoverContext_unstable((context) => context.inline);
  const { modalAttributes } = useModalAttributes({
    trapFocus,
    legacyTrapFocus: !inertTrapFocus,
    alwaysFocusable: !trapFocus
  });
  const state = {
    inline,
    appearance,
    withArrow,
    size,
    arrowRef,
    mountNode,
    components: {
      root: "div"
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      // FIXME:
      // `contentRef` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`
      // but since it would be a breaking change to fix it, we are casting ref to it's proper type
      ref: useMergedRefs(ref, contentRef),
      role: trapFocus ? "dialog" : "group",
      "aria-modal": trapFocus ? true : void 0,
      ...modalAttributes,
      ...props
    }), {
      elementType: "div"
    })
  };
  const { onMouseEnter: onMouseEnterOriginal, onMouseLeave: onMouseLeaveOriginal, onKeyDown: onKeyDownOriginal } = state.root;
  state.root.onMouseEnter = (e) => {
    if (openOnHover) {
      setOpen(e, true);
    }
    onMouseEnterOriginal === null || onMouseEnterOriginal === void 0 ? void 0 : onMouseEnterOriginal(e);
  };
  state.root.onMouseLeave = (e) => {
    if (openOnHover) {
      setOpen(e, false);
    }
    onMouseLeaveOriginal === null || onMouseLeaveOriginal === void 0 ? void 0 : onMouseLeaveOriginal(e);
  };
  state.root.onKeyDown = (e) => {
    var _contentRef_current;
    if (e.key === "Escape" && ((_contentRef_current = contentRef.current) === null || _contentRef_current === void 0 ? void 0 : _contentRef_current.contains(e.target))) {
      e.preventDefault();
      setOpen(e, false);
    }
    onKeyDownOriginal === null || onKeyDownOriginal === void 0 ? void 0 : onKeyDownOriginal(e);
  };
  return state;
};

// node_modules/@fluentui/react-popover/lib/components/PopoverSurface/renderPopoverSurface.js
var renderPopoverSurface_unstable = (state) => {
  assertSlots(state);
  const surface = jsxs(state.root, {
    children: [
      state.withArrow && jsx("div", {
        ref: state.arrowRef,
        className: state.arrowClassName
      }),
      state.root.children
    ]
  });
  if (state.inline) {
    return surface;
  }
  return jsx(Portal, {
    mountNode: state.mountNode,
    children: surface
  });
};

// node_modules/@fluentui/react-popover/lib/components/PopoverSurface/usePopoverSurfaceStyles.styles.js
var popoverSurfaceClassNames = {
  root: "fui-PopoverSurface"
};
var arrowHeights = {
  small: 6,
  medium: 8,
  large: 8
};
var useStyles8 = __styles2({
  root: {
    sj55zd: "f19n0e5",
    De3pzq: "fxugw4r",
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "ft85np5",
    Bgfg5da: 0,
    B9xav0g: 0,
    oivjwe: 0,
    Bn0qgzm: 0,
    B4g9neb: 0,
    zhjwy3: 0,
    wvpqe5: 0,
    ibv6hh: 0,
    u1mtju: 0,
    h3c5rm: 0,
    vrafjx: 0,
    Bekrc4i: 0,
    i8vvqc: 0,
    g2u3we: 0,
    icvyot: 0,
    B4j52fo: 0,
    irswps: "f9ggezi",
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "figsok6",
    Bg96gwp: "f1i3iumi",
    B93otf3: "f18k4bn6",
    vin17d: "fo1kyvf",
    Ezkn3b: "fetxo7e",
    nyiy2g: "f8x1vz1",
    swvrvq: "f8g0anz",
    Bkovbt3: "fezwn9i",
    hgjdhn: "fz5efge",
    fsy9dk: "f1ydixl4",
    B3ogreh: "f8dgqj5",
    jv49x5: "fnyfnr8",
    Bk7o48c: "fgw77r4",
    Bv12yb3: "ftje0s4",
    z0t1cu: "fi19xcv",
    Bks05zx: "f1mzajhk",
    Bvtglag: "fjp4h9y",
    Bhu2qc9: "fymb6k8"
  },
  inline: {
    Bj3rh1h: "f19g0ac"
  },
  inverted: {
    De3pzq: "fg3r6xk",
    sj55zd: "fonrgv7"
  },
  brand: {
    De3pzq: "ffp7eso",
    sj55zd: "f1phragk"
  },
  smallPadding: {
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f1sy4kr4"
  },
  mediumPadding: {
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f4zyqsv"
  },
  largePadding: {
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "fop8ug2"
  },
  smallArrow: {
    rhnwrx: "f1s3jn22",
    Bdy53xb: "fv40uqz"
  },
  mediumLargeArrow: {
    rhnwrx: "f1f72gjr",
    Bdy53xb: "f69yoe5"
  },
  arrow: {
    B7ck84d: "f1ewtqcl",
    qhf8xq: "f1euv43f",
    Bj3rh1h: "f1bsuimh",
    De3pzq: "f1u2r49w",
    B2eet1l: "fqhgnl",
    Beyfa6y: "f17bz04i",
    Bz10aip: "f36o3x3",
    Bqenvij: "fzofk8q",
    a9b677: "f1wbx1ie",
    Ftih45: "f1wl9k8s",
    Br0sdwz: "f1aocrix",
    cmx5o7: "f1ljr5q2",
    susq4k: 0,
    Biibvgv: 0,
    Bicfajf: 0,
    qehafq: 0,
    Brs5u8j: "f155f1qt",
    Ccq8qp: "f9mhzq7",
    Baz25je: "fr6rhvx",
    Bcgcnre: 0,
    Bqjgrrk: 0,
    qa3bma: 0,
    y0oebl: 0,
    Biqmznv: 0,
    Bm6vgfq: 0,
    Bbv0w2i: 0,
    uvfttm: 0,
    eqrjj: 0,
    Bk5zm6e: 0,
    m598lv: 0,
    B4f6apu: 0,
    ydt019: 0,
    Bq4z7u6: 0,
    Bdkvgpv: 0,
    B0qfbqy: 0,
    kj8mxx: "f1kc0wz4",
    r59vdv: "fgq90dz",
    Bkw5xw4: "fq0y47f",
    hl6cv3: "f1pwrbz6",
    aea9ga: "f1hxxcvm",
    yayu3t: "fw8rgyo",
    Bhsv975: "f1wnzycx",
    rhl9o9: "f1730wal",
    B7gxrvb: "f1fy4ixr",
    B6q6orb: "fobkauc",
    B0lu1f8: "f16bqv1l"
  }
}, {
  d: [".f19n0e5{color:var(--colorNeutralForeground1);}", ".fxugw4r{background-color:var(--colorNeutralBackground1);}", [".ft85np5{border-radius:var(--borderRadiusMedium);}", {
    p: -1
  }], [".f9ggezi{border:1px solid var(--colorTransparentStroke);}", {
    p: -2
  }], ".fk6fouc{font-family:var(--fontFamilyBase);}", ".fkhj508{font-size:var(--fontSizeBase300);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}", ".f18k4bn6{animation-composition:accumulate;}", ".fo1kyvf{animation-duration:var(--durationSlower);}", ".fetxo7e{animation-timing-function:var(--curveDecelerateMid);}", ".f8x1vz1{--fui-positioning-slide-distance-x:0px;}", ".f8g0anz{--fui-positioning-slide-distance-y:10px;}", ".fezwn9i[data-popper-placement^=right]{--fui-positioning-slide-distance-x:-10px;}", ".fz5efge[data-popper-placement^=right]{--fui-positioning-slide-distance-y:0px;}", ".f1ydixl4[data-popper-placement^=bottom]{--fui-positioning-slide-distance-x:0px;}", ".f8dgqj5[data-popper-placement^=bottom]{--fui-positioning-slide-distance-y:-10px;}", ".fnyfnr8[data-popper-placement^=left]{--fui-positioning-slide-distance-x:10px;}", ".fgw77r4[data-popper-placement^=left]{--fui-positioning-slide-distance-y:0px;}", ".ftje0s4{animation-name:f5j8bii,f79suad;}", ".fymb6k8{filter:drop-shadow(0 0 2px var(--colorNeutralShadowAmbient)) drop-shadow(0 8px 16px var(--colorNeutralShadowKey));}", ".f19g0ac{z-index:1;}", ".fg3r6xk{background-color:var(--colorNeutralBackgroundStatic);}", ".fonrgv7{color:var(--colorNeutralForegroundStaticInverted);}", ".ffp7eso{background-color:var(--colorBrandBackground);}", ".f1phragk{color:var(--colorNeutralForegroundOnBrand);}", [".f1sy4kr4{padding:12px;}", {
    p: -1
  }], [".f4zyqsv{padding:16px;}", {
    p: -1
  }], [".fop8ug2{padding:20px;}", {
    p: -1
  }], ".f1s3jn22{--fui-positioning-arrow-height:8.484px;}", ".fv40uqz{--fui-positioning-arrow-offset:-4.242px;}", ".f1f72gjr{--fui-positioning-arrow-height:11.312px;}", ".f69yoe5{--fui-positioning-arrow-offset:-5.656px;}", ".f1ewtqcl{box-sizing:border-box;}", ".f1euv43f{position:absolute;}", ".f1bsuimh{z-index:-1;}", ".f1u2r49w{background-color:inherit;}", ".fqhgnl{background-clip:content-box;}", ".f17bz04i{border-bottom-left-radius:var(--borderRadiusSmall);}", ".f36o3x3{transform:rotate(var(--fui-positioning-arrow-angle));}", ".fzofk8q{height:var(--fui-positioning-arrow-height);}", ".f1wbx1ie{width:var(--fui-positioning-arrow-height);}", '.f1wl9k8s::before{content:"";}', ".f1aocrix::before{display:block;}", ".f1ljr5q2::before{background-color:inherit;}", [".f155f1qt::before{margin:-1px;}", {
    p: -1
  }], ".f9mhzq7::before{width:100%;}", ".fr6rhvx::before{height:100%;}", [".f1kc0wz4::before{border:1px solid var(--colorTransparentStroke);}", {
    p: -2
  }], ".fgq90dz::before{border-bottom-left-radius:var(--borderRadiusSmall);}", ".fq0y47f::before{clip-path:polygon(0% 0%, 100% 100%, 0% 100%);}", '[data-popper-placement^="top"] .f1pwrbz6{bottom:var(--fui-positioning-arrow-offset);}', '[data-popper-placement^="top"] .f1hxxcvm{--fui-positioning-arrow-angle:-45deg;}', '[data-popper-placement^="right"] .fw8rgyo{left:var(--fui-positioning-arrow-offset);}', '[data-popper-placement^="right"] .f1wnzycx{--fui-positioning-arrow-angle:45deg;}', '[data-popper-placement^="bottom"] .f1730wal{top:var(--fui-positioning-arrow-offset);}', '[data-popper-placement^="bottom"] .f1fy4ixr{--fui-positioning-arrow-angle:135deg;}', '[data-popper-placement^="left"] .fobkauc{right:var(--fui-positioning-arrow-offset);}', '[data-popper-placement^="left"] .f16bqv1l{--fui-positioning-arrow-angle:225deg;}'],
  k: ["@keyframes f5j8bii{from{opacity:0;}to{opacity:1;}}", "@keyframes f79suad{from{transform:translate(var(--fui-positioning-slide-distance-x), var(--fui-positioning-slide-distance-y));}}"],
  m: [["@media (prefers-reduced-motion){.fi19xcv[data-popper-placement]{animation-duration:1ms;}}", {
    m: "(prefers-reduced-motion)"
  }], ["@media (prefers-reduced-motion){.f1mzajhk[data-popper-placement]{animation-name:f5j8bii;}}", {
    m: "(prefers-reduced-motion)"
  }]],
  t: ["@supports not (animation-composition: accumulate){.fjp4h9y[data-popper-placement]{animation-name:f5j8bii;}}"]
});
var usePopoverSurfaceStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles8();
  state.root.className = mergeClasses(popoverSurfaceClassNames.root, styles.root, state.inline && styles.inline, state.size === "small" && styles.smallPadding, state.size === "medium" && styles.mediumPadding, state.size === "large" && styles.largePadding, state.appearance === "inverted" && styles.inverted, state.appearance === "brand" && styles.brand, state.root.className);
  state.arrowClassName = mergeClasses(styles.arrow, state.size === "small" ? styles.smallArrow : styles.mediumLargeArrow);
  return state;
};

// node_modules/@fluentui/react-popover/lib/components/PopoverSurface/PopoverSurface.js
var PopoverSurface = React66.forwardRef((props, ref) => {
  const state = usePopoverSurface_unstable(props, ref);
  usePopoverSurfaceStyles_unstable(state);
  useCustomStyleHook("usePopoverSurfaceStyles_unstable")(state);
  return renderPopoverSurface_unstable(state);
});
PopoverSurface.displayName = "PopoverSurface";

// node_modules/@fluentui/react-popover/lib/components/Popover/constants.js
var popoverSurfaceBorderRadius = 4;

// node_modules/@fluentui/react-popover/lib/components/Popover/usePopover.js
var usePopover_unstable = (props) => {
  const [contextTarget, setContextTarget] = usePositioningMouseTarget();
  const initialState = {
    size: "medium",
    contextTarget,
    setContextTarget,
    ...props
  };
  const children2 = React67.Children.toArray(props.children);
  if (true) {
    if (children2.length === 0) {
      console.warn("Popover must contain at least one child");
    }
    if (children2.length > 2) {
      console.warn("Popover must contain at most two children");
    }
  }
  let popoverTrigger = void 0;
  let popoverSurface = void 0;
  if (children2.length === 2) {
    popoverTrigger = children2[0];
    popoverSurface = children2[1];
  } else if (children2.length === 1) {
    popoverSurface = children2[0];
  }
  const [open, setOpenState] = useOpenState(initialState);
  const [setOpenTimeout, clearOpenTimeout] = useTimeout();
  const setOpen = useEventCallback((e, shouldOpen) => {
    clearOpenTimeout();
    if (!(e instanceof Event) && e.persist) {
      e.persist();
    }
    if (e.type === "mouseleave") {
      var _props_mouseLeaveDelay;
      setOpenTimeout(() => {
        setOpenState(e, shouldOpen);
      }, (_props_mouseLeaveDelay = props.mouseLeaveDelay) !== null && _props_mouseLeaveDelay !== void 0 ? _props_mouseLeaveDelay : 500);
    } else {
      setOpenState(e, shouldOpen);
    }
  });
  const toggleOpen = React67.useCallback((e) => {
    setOpen(e, !open);
  }, [
    setOpen,
    open
  ]);
  const positioningRefs = usePopoverRefs(initialState);
  const { targetDocument } = useFluent();
  var _props_closeOnIframeFocus;
  useOnClickOutside({
    contains: elementContains,
    element: targetDocument,
    callback: (ev) => setOpen(ev, false),
    refs: [
      positioningRefs.triggerRef,
      positioningRefs.contentRef
    ],
    disabled: !open,
    disabledFocusOnIframe: !((_props_closeOnIframeFocus = props.closeOnIframeFocus) !== null && _props_closeOnIframeFocus !== void 0 ? _props_closeOnIframeFocus : true)
  });
  const closeOnScroll = initialState.openOnContext || initialState.closeOnScroll;
  useOnScrollOutside({
    contains: elementContains,
    element: targetDocument,
    callback: (ev) => setOpen(ev, false),
    refs: [
      positioningRefs.triggerRef,
      positioningRefs.contentRef
    ],
    disabled: !open || !closeOnScroll
  });
  const { findFirstFocusable } = useFocusFinders();
  React67.useEffect(() => {
    if (props.unstable_disableAutoFocus) {
      return;
    }
    if (open && positioningRefs.contentRef.current) {
      var _positioningRefs_contentRef_current_getAttribute;
      const containerTabIndex = (_positioningRefs_contentRef_current_getAttribute = positioningRefs.contentRef.current.getAttribute("tabIndex")) !== null && _positioningRefs_contentRef_current_getAttribute !== void 0 ? _positioningRefs_contentRef_current_getAttribute : void 0;
      const firstFocusable = isNaN(containerTabIndex) ? findFirstFocusable(positioningRefs.contentRef.current) : positioningRefs.contentRef.current;
      firstFocusable === null || firstFocusable === void 0 ? void 0 : firstFocusable.focus();
    }
  }, [
    findFirstFocusable,
    open,
    positioningRefs.contentRef,
    props.unstable_disableAutoFocus
  ]);
  var _props_inertTrapFocus, _props_inline;
  return {
    ...initialState,
    ...positioningRefs,
    // eslint-disable-next-line deprecation/deprecation
    inertTrapFocus: (_props_inertTrapFocus = props.inertTrapFocus) !== null && _props_inertTrapFocus !== void 0 ? _props_inertTrapFocus : props.legacyTrapFocus === void 0 ? false : !props.legacyTrapFocus,
    popoverTrigger,
    popoverSurface,
    open,
    setOpen,
    toggleOpen,
    setContextTarget,
    contextTarget,
    inline: (_props_inline = props.inline) !== null && _props_inline !== void 0 ? _props_inline : false
  };
};
function useOpenState(state) {
  "use no memo";
  const onOpenChange = useEventCallback((e, data) => {
    var _state_onOpenChange;
    return (_state_onOpenChange = state.onOpenChange) === null || _state_onOpenChange === void 0 ? void 0 : _state_onOpenChange.call(state, e, data);
  });
  const [open, setOpenState] = useControllableState({
    state: state.open,
    defaultState: state.defaultOpen,
    initialState: false
  });
  state.open = open !== void 0 ? open : state.open;
  const setContextTarget = state.setContextTarget;
  const setOpen = React67.useCallback((e, shouldOpen) => {
    if (shouldOpen && e.type === "contextmenu") {
      setContextTarget(e);
    }
    if (!shouldOpen) {
      setContextTarget(void 0);
    }
    setOpenState(shouldOpen);
    onOpenChange === null || onOpenChange === void 0 ? void 0 : onOpenChange(e, {
      open: shouldOpen
    });
  }, [
    setOpenState,
    onOpenChange,
    setContextTarget
  ]);
  return [
    open,
    setOpen
  ];
}
function usePopoverRefs(state) {
  "use no memo";
  const positioningOptions = {
    position: "above",
    align: "center",
    arrowPadding: 2 * popoverSurfaceBorderRadius,
    target: state.openOnContext ? state.contextTarget : void 0,
    ...resolvePositioningShorthand(state.positioning)
  };
  if (positioningOptions.coverTarget) {
    state.withArrow = false;
  }
  if (state.withArrow) {
    positioningOptions.offset = mergeArrowOffset(positioningOptions.offset, arrowHeights[state.size]);
  }
  const { targetRef: triggerRef, containerRef: contentRef, arrowRef } = usePositioning(positioningOptions);
  return {
    triggerRef,
    contentRef,
    arrowRef
  };
}

// node_modules/@fluentui/react-popover/lib/components/Popover/renderPopover.js
var React68 = __toESM(require_react());
var renderPopover_unstable = (state) => {
  const { appearance, arrowRef, contentRef, inline, mountNode, open, openOnContext, openOnHover, setOpen, size, toggleOpen, trapFocus, triggerRef, withArrow, inertTrapFocus } = state;
  return React68.createElement(PopoverContext.Provider, {
    value: {
      appearance,
      arrowRef,
      contentRef,
      inline,
      mountNode,
      open,
      openOnContext,
      openOnHover,
      setOpen,
      toggleOpen,
      triggerRef,
      size,
      trapFocus,
      inertTrapFocus,
      withArrow
    }
  }, state.popoverTrigger, state.open && state.popoverSurface);
};

// node_modules/@fluentui/react-popover/lib/components/Popover/Popover.js
var Popover = (props) => {
  const state = usePopover_unstable(props);
  return renderPopover_unstable(state);
};
Popover.displayName = "Popover";

// node_modules/@fluentui/react-popover/lib/components/Popover/Popover.types.js
var React70 = __toESM(require_react());

// node_modules/@fluentui/react-popover/lib/components/PopoverTrigger/PopoverTrigger.js
var React72 = __toESM(require_react());

// node_modules/@fluentui/react-popover/lib/components/PopoverTrigger/usePopoverTrigger.js
var React71 = __toESM(require_react());
var usePopoverTrigger_unstable = (props) => {
  const { children: children2, disableButtonEnhancement = false } = props;
  const child = getTriggerChild(children2);
  const open = usePopoverContext_unstable((context) => context.open);
  const setOpen = usePopoverContext_unstable((context) => context.setOpen);
  const toggleOpen = usePopoverContext_unstable((context) => context.toggleOpen);
  const triggerRef = usePopoverContext_unstable((context) => context.triggerRef);
  const openOnHover = usePopoverContext_unstable((context) => context.openOnHover);
  const openOnContext = usePopoverContext_unstable((context) => context.openOnContext);
  const { triggerAttributes } = useModalAttributes();
  const onContextMenu = (e) => {
    if (openOnContext) {
      e.preventDefault();
      setOpen(e, true);
    }
  };
  const onClick = (e) => {
    if (!openOnContext) {
      toggleOpen(e);
    }
  };
  const onKeyDown = (e) => {
    if (e.key === Escape && open && !e.isDefaultPrevented()) {
      setOpen(e, false);
      e.preventDefault();
    }
  };
  const onMouseEnter = (e) => {
    if (openOnHover) {
      setOpen(e, true);
    }
  };
  const onMouseLeave = (e) => {
    if (openOnHover) {
      setOpen(e, false);
    }
  };
  const contextMenuProps = {
    ...triggerAttributes,
    "aria-expanded": `${open}`,
    ...child === null || child === void 0 ? void 0 : child.props,
    onMouseEnter: useEventCallback(mergeCallbacks(child === null || child === void 0 ? void 0 : child.props.onMouseEnter, onMouseEnter)),
    onMouseLeave: useEventCallback(mergeCallbacks(child === null || child === void 0 ? void 0 : child.props.onMouseLeave, onMouseLeave)),
    onContextMenu: useEventCallback(mergeCallbacks(child === null || child === void 0 ? void 0 : child.props.onContextMenu, onContextMenu)),
    ref: useMergedRefs(triggerRef, child === null || child === void 0 ? void 0 : child.ref)
  };
  const triggerChildProps = {
    ...contextMenuProps,
    onClick: useEventCallback(mergeCallbacks(child === null || child === void 0 ? void 0 : child.props.onClick, onClick)),
    onKeyDown: useEventCallback(mergeCallbacks(child === null || child === void 0 ? void 0 : child.props.onKeyDown, onKeyDown))
  };
  const ariaButtonTriggerChildProps = useARIAButtonProps((child === null || child === void 0 ? void 0 : child.type) === "button" || (child === null || child === void 0 ? void 0 : child.type) === "a" ? child.type : "div", triggerChildProps);
  return {
    children: applyTriggerPropsToChildren(props.children, useARIAButtonProps((child === null || child === void 0 ? void 0 : child.type) === "button" || (child === null || child === void 0 ? void 0 : child.type) === "a" ? child.type : "div", openOnContext ? contextMenuProps : disableButtonEnhancement ? triggerChildProps : ariaButtonTriggerChildProps))
  };
};

// node_modules/@fluentui/react-popover/lib/components/PopoverTrigger/renderPopoverTrigger.js
var renderPopoverTrigger_unstable = (state) => {
  return state.children;
};

// node_modules/@fluentui/react-popover/lib/components/PopoverTrigger/PopoverTrigger.js
var PopoverTrigger = (props) => {
  const state = usePopoverTrigger_unstable(props);
  return renderPopoverTrigger_unstable(state);
};
PopoverTrigger.displayName = "PopoverTrigger";
PopoverTrigger.isFluentTriggerComponent = true;

// node_modules/@fluentui/react-popover/lib/components/PopoverTrigger/PopoverTrigger.types.js
var React73 = __toESM(require_react());

// node_modules/@fluentui/react-avatar/lib/components/AvatarGroupPopover/renderAvatarGroupPopover.js
var renderAvatarGroupPopover_unstable = (state, contextValues) => {
  assertSlots(state);
  return jsxs(state.root, {
    children: [
      jsx(PopoverTrigger, {
        disableButtonEnhancement: true,
        children: jsx(state.tooltip, {
          children: jsx(state.triggerButton, {})
        })
      }),
      jsx(state.popoverSurface, {
        children: jsx(AvatarGroupProvider, {
          value: contextValues.avatarGroup,
          children: jsx(state.content, {})
        })
      })
    ]
  });
};

// node_modules/@fluentui/react-avatar/lib/components/AvatarGroupPopover/useAvatarGroupPopoverContextValues.js
var useAvatarGroupPopoverContextValues_unstable = (state) => {
  const avatarGroup = {
    isOverflow: true,
    size: 24
  };
  return {
    avatarGroup
  };
};

// node_modules/@fluentui/react-avatar/lib/components/AvatarGroupPopover/useAvatarGroupPopover.js
var React77 = __toESM(require_react());

// node_modules/@fluentui/react-tooltip/lib/components/Tooltip/Tooltip.js
var React75 = __toESM(require_react());

// node_modules/@fluentui/react-tooltip/lib/components/Tooltip/useTooltip.js
var React74 = __toESM(require_react());

// node_modules/@fluentui/react-tooltip/lib/components/Tooltip/private/constants.js
var arrowHeight = 6;
var tooltipBorderRadius = 4;

// node_modules/@fluentui/react-tooltip/lib/components/Tooltip/useTooltip.js
var useTooltip_unstable = (props) => {
  "use no memo";
  var _child_props, _child_props1, _child_props2, _child_props3;
  const context = useTooltipVisibility();
  const isServerSideRender = useIsSSR();
  const { targetDocument } = useFluent();
  const [setDelayTimeout, clearDelayTimeout] = useTimeout();
  const { appearance = "normal", children: children2, content, withArrow = false, positioning = "above", onVisibleChange, relationship, showDelay = 250, hideDelay = 250, mountNode } = props;
  const [visible, setVisibleInternal] = useControllableState({
    state: props.visible,
    initialState: false
  });
  const setVisible = React74.useCallback((ev, data) => {
    clearDelayTimeout();
    setVisibleInternal((oldVisible) => {
      if (data.visible !== oldVisible) {
        onVisibleChange === null || onVisibleChange === void 0 ? void 0 : onVisibleChange(ev, data);
      }
      return data.visible;
    });
  }, [
    clearDelayTimeout,
    setVisibleInternal,
    onVisibleChange
  ]);
  const state = {
    withArrow,
    positioning,
    showDelay,
    hideDelay,
    relationship,
    visible,
    shouldRenderTooltip: visible,
    appearance,
    mountNode,
    // Slots
    components: {
      content: "div"
    },
    content: slot_exports.always(content, {
      defaultProps: {
        role: "tooltip"
      },
      elementType: "div"
    })
  };
  state.content.id = useId("tooltip-", state.content.id);
  const positioningOptions = {
    enabled: state.visible,
    arrowPadding: 2 * tooltipBorderRadius,
    position: "above",
    align: "center",
    offset: 4,
    ...resolvePositioningShorthand(state.positioning)
  };
  if (state.withArrow) {
    positioningOptions.offset = mergeArrowOffset(positioningOptions.offset, arrowHeight);
  }
  const { targetRef, containerRef, arrowRef } = usePositioning(positioningOptions);
  state.content.ref = useMergedRefs(state.content.ref, containerRef);
  state.arrowRef = arrowRef;
  useIsomorphicLayoutEffect(() => {
    if (visible) {
      var _context_visibleTooltip;
      const thisTooltip = {
        hide: (ev) => setVisible(void 0, {
          visible: false,
          documentKeyboardEvent: ev
        })
      };
      (_context_visibleTooltip = context.visibleTooltip) === null || _context_visibleTooltip === void 0 ? void 0 : _context_visibleTooltip.hide();
      context.visibleTooltip = thisTooltip;
      const onDocumentKeyDown = (ev) => {
        if (ev.key === Escape && !ev.defaultPrevented) {
          thisTooltip.hide(ev);
          ev.preventDefault();
        }
      };
      targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.addEventListener("keydown", onDocumentKeyDown, {
        // As this event is added at targeted document,
        // we need to capture the event to be sure keydown handling from tooltip happens first
        capture: true
      });
      return () => {
        if (context.visibleTooltip === thisTooltip) {
          context.visibleTooltip = void 0;
        }
        targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.removeEventListener("keydown", onDocumentKeyDown, {
          capture: true
        });
      };
    }
  }, [
    context,
    targetDocument,
    visible,
    setVisible
  ]);
  const ignoreNextFocusEventRef = React74.useRef(false);
  const onEnterTrigger = React74.useCallback((ev) => {
    if (ev.type === "focus" && ignoreNextFocusEventRef.current) {
      ignoreNextFocusEventRef.current = false;
      return;
    }
    const delay = context.visibleTooltip ? 0 : state.showDelay;
    setDelayTimeout(() => {
      setVisible(ev, {
        visible: true
      });
    }, delay);
    ev.persist();
  }, [
    setDelayTimeout,
    setVisible,
    state.showDelay,
    context
  ]);
  const [keyborgListenerCallbackRef] = React74.useState(() => {
    const onKeyborgFocusIn = (ev) => {
      var _ev_detail;
      if ((_ev_detail = ev.detail) === null || _ev_detail === void 0 ? void 0 : _ev_detail.isFocusedProgrammatically) {
        ignoreNextFocusEventRef.current = true;
      }
    };
    let current = null;
    return (element) => {
      current === null || current === void 0 ? void 0 : current.removeEventListener(KEYBORG_FOCUSIN, onKeyborgFocusIn);
      element === null || element === void 0 ? void 0 : element.addEventListener(KEYBORG_FOCUSIN, onKeyborgFocusIn);
      current = element;
    };
  });
  const onLeaveTrigger = React74.useCallback((ev) => {
    let delay = state.hideDelay;
    if (ev.type === "blur") {
      delay = 0;
      ignoreNextFocusEventRef.current = (targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.activeElement) === ev.target;
    }
    setDelayTimeout(() => {
      setVisible(ev, {
        visible: false
      });
    }, delay);
    ev.persist();
  }, [
    setDelayTimeout,
    setVisible,
    state.hideDelay,
    targetDocument
  ]);
  state.content.onPointerEnter = mergeCallbacks(state.content.onPointerEnter, clearDelayTimeout);
  state.content.onPointerLeave = mergeCallbacks(state.content.onPointerLeave, onLeaveTrigger);
  state.content.onFocus = mergeCallbacks(state.content.onFocus, clearDelayTimeout);
  state.content.onBlur = mergeCallbacks(state.content.onBlur, onLeaveTrigger);
  const child = getTriggerChild(children2);
  const triggerAriaProps = {};
  if (relationship === "label") {
    if (typeof state.content.children === "string") {
      triggerAriaProps["aria-label"] = state.content.children;
    } else {
      triggerAriaProps["aria-labelledby"] = state.content.id;
      state.shouldRenderTooltip = true;
    }
  } else if (relationship === "description") {
    triggerAriaProps["aria-describedby"] = state.content.id;
    state.shouldRenderTooltip = true;
  }
  if (isServerSideRender) {
    state.shouldRenderTooltip = false;
  }
  state.children = applyTriggerPropsToChildren(children2, {
    ...triggerAriaProps,
    ...child === null || child === void 0 ? void 0 : child.props,
    ref: useMergedRefs(
      child === null || child === void 0 ? void 0 : child.ref,
      keyborgListenerCallbackRef,
      // If the target prop is not provided, attach targetRef to the trigger element's ref prop
      positioningOptions.target === void 0 ? targetRef : void 0
    ),
    onPointerEnter: useEventCallback(mergeCallbacks(child === null || child === void 0 ? void 0 : (_child_props = child.props) === null || _child_props === void 0 ? void 0 : _child_props.onPointerEnter, onEnterTrigger)),
    onPointerLeave: useEventCallback(mergeCallbacks(child === null || child === void 0 ? void 0 : (_child_props1 = child.props) === null || _child_props1 === void 0 ? void 0 : _child_props1.onPointerLeave, onLeaveTrigger)),
    onFocus: useEventCallback(mergeCallbacks(child === null || child === void 0 ? void 0 : (_child_props2 = child.props) === null || _child_props2 === void 0 ? void 0 : _child_props2.onFocus, onEnterTrigger)),
    onBlur: useEventCallback(mergeCallbacks(child === null || child === void 0 ? void 0 : (_child_props3 = child.props) === null || _child_props3 === void 0 ? void 0 : _child_props3.onBlur, onLeaveTrigger))
  });
  return state;
};

// node_modules/@fluentui/react-tooltip/lib/components/Tooltip/renderTooltip.js
var renderTooltip_unstable = (state) => {
  assertSlots(state);
  return jsxs(import_react.Fragment, {
    children: [
      state.children,
      state.shouldRenderTooltip && jsx(Portal, {
        mountNode: state.mountNode,
        children: jsxs(state.content, {
          children: [
            state.withArrow && jsx("div", {
              ref: state.arrowRef,
              className: state.arrowClassName
            }),
            state.content.children
          ]
        })
      })
    ]
  });
};

// node_modules/@fluentui/react-tooltip/lib/components/Tooltip/useTooltipStyles.styles.js
var tooltipClassNames = {
  content: "fui-Tooltip__content"
};
var useStyles9 = __styles2({
  root: {
    mc9l5x: "fjseox",
    B7ck84d: "f1ewtqcl",
    B2u0y6b: "f132xexn",
    Bceei9c: "f158kwzp",
    Bahqtrf: "fk6fouc",
    Be2twd7: "fy9rknc",
    Bg96gwp: "fwrc4pm",
    Btd35i7: "fokg9q4",
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "ft85np5",
    Bgfg5da: 0,
    B9xav0g: 0,
    oivjwe: 0,
    Bn0qgzm: 0,
    B4g9neb: 0,
    zhjwy3: 0,
    wvpqe5: 0,
    ibv6hh: 0,
    u1mtju: 0,
    h3c5rm: 0,
    vrafjx: 0,
    Bekrc4i: 0,
    i8vvqc: 0,
    g2u3we: 0,
    icvyot: 0,
    B4j52fo: 0,
    irswps: "f9ggezi",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f1bzqsji",
    De3pzq: "fxugw4r",
    sj55zd: "f19n0e5",
    Bhu2qc9: "fxeb0a7"
  },
  visible: {
    mc9l5x: "ftgm304"
  },
  inverted: {
    De3pzq: "fg3r6xk",
    sj55zd: "fonrgv7"
  },
  arrow: {
    B7ck84d: "f1ewtqcl",
    qhf8xq: "f1euv43f",
    Bj3rh1h: "f1bsuimh",
    rhnwrx: "f1s3jn22",
    Bdy53xb: "fv40uqz",
    De3pzq: "f1u2r49w",
    B2eet1l: "fqhgnl",
    Beyfa6y: "f17bz04i",
    Bz10aip: "f36o3x3",
    Bqenvij: "fzofk8q",
    a9b677: "f1wbx1ie",
    Ftih45: "f1wl9k8s",
    Br0sdwz: "f1aocrix",
    cmx5o7: "f1ljr5q2",
    susq4k: 0,
    Biibvgv: 0,
    Bicfajf: 0,
    qehafq: 0,
    Brs5u8j: "f155f1qt",
    Ccq8qp: "f9mhzq7",
    Baz25je: "fr6rhvx",
    Bcgcnre: 0,
    Bqjgrrk: 0,
    qa3bma: 0,
    y0oebl: 0,
    Biqmznv: 0,
    Bm6vgfq: 0,
    Bbv0w2i: 0,
    uvfttm: 0,
    eqrjj: 0,
    Bk5zm6e: 0,
    m598lv: 0,
    B4f6apu: 0,
    ydt019: 0,
    Bq4z7u6: 0,
    Bdkvgpv: 0,
    B0qfbqy: 0,
    kj8mxx: "f1kc0wz4",
    r59vdv: "fgq90dz",
    Bkw5xw4: "fq0y47f",
    hl6cv3: "f1pwrbz6",
    aea9ga: "f1hxxcvm",
    yayu3t: "fw8rgyo",
    Bhsv975: "f1wnzycx",
    rhl9o9: "f1730wal",
    B7gxrvb: "f1fy4ixr",
    B6q6orb: "fobkauc",
    B0lu1f8: "f16bqv1l"
  }
}, {
  d: [".fjseox{display:none;}", ".f1ewtqcl{box-sizing:border-box;}", ".f132xexn{max-width:240px;}", ".f158kwzp{cursor:default;}", ".fk6fouc{font-family:var(--fontFamilyBase);}", ".fy9rknc{font-size:var(--fontSizeBase200);}", ".fwrc4pm{line-height:var(--lineHeightBase200);}", ".fokg9q4{overflow-wrap:break-word;}", [".ft85np5{border-radius:var(--borderRadiusMedium);}", {
    p: -1
  }], [".f9ggezi{border:1px solid var(--colorTransparentStroke);}", {
    p: -2
  }], [".f1bzqsji{padding:4px 11px 6px 11px;}", {
    p: -1
  }], ".fxugw4r{background-color:var(--colorNeutralBackground1);}", ".f19n0e5{color:var(--colorNeutralForeground1);}", ".fxeb0a7{filter:drop-shadow(0 0 2px var(--colorNeutralShadowAmbient)) drop-shadow(0 4px 8px var(--colorNeutralShadowKey));}", ".ftgm304{display:block;}", ".fg3r6xk{background-color:var(--colorNeutralBackgroundStatic);}", ".fonrgv7{color:var(--colorNeutralForegroundStaticInverted);}", ".f1euv43f{position:absolute;}", ".f1bsuimh{z-index:-1;}", ".f1s3jn22{--fui-positioning-arrow-height:8.484px;}", ".fv40uqz{--fui-positioning-arrow-offset:-4.242px;}", ".f1u2r49w{background-color:inherit;}", ".fqhgnl{background-clip:content-box;}", ".f17bz04i{border-bottom-left-radius:var(--borderRadiusSmall);}", ".f36o3x3{transform:rotate(var(--fui-positioning-arrow-angle));}", ".fzofk8q{height:var(--fui-positioning-arrow-height);}", ".f1wbx1ie{width:var(--fui-positioning-arrow-height);}", '.f1wl9k8s::before{content:"";}', ".f1aocrix::before{display:block;}", ".f1ljr5q2::before{background-color:inherit;}", [".f155f1qt::before{margin:-1px;}", {
    p: -1
  }], ".f9mhzq7::before{width:100%;}", ".fr6rhvx::before{height:100%;}", [".f1kc0wz4::before{border:1px solid var(--colorTransparentStroke);}", {
    p: -2
  }], ".fgq90dz::before{border-bottom-left-radius:var(--borderRadiusSmall);}", ".fq0y47f::before{clip-path:polygon(0% 0%, 100% 100%, 0% 100%);}", '[data-popper-placement^="top"] .f1pwrbz6{bottom:var(--fui-positioning-arrow-offset);}', '[data-popper-placement^="top"] .f1hxxcvm{--fui-positioning-arrow-angle:-45deg;}', '[data-popper-placement^="right"] .fw8rgyo{left:var(--fui-positioning-arrow-offset);}', '[data-popper-placement^="right"] .f1wnzycx{--fui-positioning-arrow-angle:45deg;}', '[data-popper-placement^="bottom"] .f1730wal{top:var(--fui-positioning-arrow-offset);}', '[data-popper-placement^="bottom"] .f1fy4ixr{--fui-positioning-arrow-angle:135deg;}', '[data-popper-placement^="left"] .fobkauc{right:var(--fui-positioning-arrow-offset);}', '[data-popper-placement^="left"] .f16bqv1l{--fui-positioning-arrow-angle:225deg;}']
});
var useTooltipStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles9();
  state.content.className = mergeClasses(tooltipClassNames.content, styles.root, state.appearance === "inverted" && styles.inverted, state.visible && styles.visible, state.content.className);
  state.arrowClassName = styles.arrow;
  return state;
};

// node_modules/@fluentui/react-tooltip/lib/components/Tooltip/Tooltip.js
var Tooltip = (props) => {
  const state = useTooltip_unstable(props);
  useTooltipStyles_unstable(state);
  useCustomStyleHook("useTooltipStyles_unstable")(state);
  return renderTooltip_unstable(state);
};
Tooltip.displayName = "Tooltip";
Tooltip.isFluentTriggerComponent = true;

// node_modules/@fluentui/react-tooltip/lib/components/Tooltip/Tooltip.types.js
var React76 = __toESM(require_react());

// node_modules/@fluentui/react-avatar/lib/components/AvatarGroupPopover/useAvatarGroupPopover.js
var useAvatarGroupPopover_unstable = (props) => {
  var _useAvatarGroupContext_unstable;
  const size = (_useAvatarGroupContext_unstable = useAvatarGroupContext_unstable((ctx) => ctx.size)) !== null && _useAvatarGroupContext_unstable !== void 0 ? _useAvatarGroupContext_unstable : defaultAvatarGroupSize;
  const layout = useAvatarGroupContext_unstable((ctx) => ctx.layout);
  const { indicator = size < 24 ? "icon" : "count", count = React77.Children.count(props.children), children: children2, ...restOfProps } = props;
  const [popoverOpen, setPopoverOpen] = useControllableState({
    state: props.open,
    defaultState: props.defaultOpen,
    initialState: false
  });
  const handleOnPopoverChange = (e, data) => {
    var _restOfProps_onOpenChange;
    (_restOfProps_onOpenChange = restOfProps.onOpenChange) === null || _restOfProps_onOpenChange === void 0 ? void 0 : _restOfProps_onOpenChange.call(restOfProps, e, data);
    setPopoverOpen(data.open);
  };
  let triggerButtonChildren;
  if (layout === "pie") {
    triggerButtonChildren = null;
  } else if (indicator === "icon") {
    triggerButtonChildren = React77.createElement(MoreHorizontalRegular, null);
  } else {
    triggerButtonChildren = count > 99 ? "99+" : `+${count}`;
  }
  return {
    count,
    indicator,
    layout,
    popoverOpen,
    size,
    components: {
      root: Popover,
      triggerButton: "button",
      content: "ul",
      popoverSurface: PopoverSurface,
      tooltip: Tooltip
    },
    root: slot_exports.always({
      // Popover expects a child for its children. The children are added in the renderAvatarGroupPopover.
      children: React77.createElement(React77.Fragment, null),
      size: "small",
      trapFocus: true,
      ...restOfProps,
      open: popoverOpen,
      onOpenChange: handleOnPopoverChange
    }, {
      elementType: Popover
    }),
    triggerButton: slot_exports.always(props.triggerButton, {
      defaultProps: {
        children: triggerButtonChildren,
        type: "button"
      },
      elementType: "button"
    }),
    content: slot_exports.always(props.content, {
      defaultProps: {
        children: children2,
        role: "list"
      },
      elementType: "ul"
    }),
    popoverSurface: slot_exports.always(props.popoverSurface, {
      defaultProps: {
        "aria-label": "Overflow",
        tabIndex: 0
      },
      elementType: PopoverSurface
    }),
    tooltip: slot_exports.always(props.tooltip, {
      defaultProps: {
        content: "View more people.",
        relationship: "label"
      },
      elementType: Tooltip
    })
  };
};

// node_modules/@fluentui/react-avatar/lib/components/AvatarGroupPopover/useAvatarGroupPopoverStyles.styles.js
var avatarGroupPopoverClassNames = {
  root: "fui-AvatarGroupPopover",
  content: "fui-AvatarGroupPopover__content",
  popoverSurface: "fui-AvatarGroupPopover__popoverSurface",
  tooltip: "fui-AvatarGroupPopover__tooltip",
  triggerButton: "fui-AvatarGroupPopover__triggerButton"
};
var useContentStyles = __styles2({
  base: {
    dclx09: "ftrb29c",
    jrapky: 0,
    Frg6f3: 0,
    t21cq0: 0,
    B6of3ja: 0,
    B74szlk: "f1s184ao",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f1mk8lai",
    mc9l5x: "f22iagw",
    Beiy3e4: "f1vx9l62"
  }
}, {
  d: [".ftrb29c{list-style-type:none;}", [".f1s184ao{margin:0;}", {
    p: -1
  }], [".f1mk8lai{padding:0;}", {
    p: -1
  }], ".f22iagw{display:flex;}", ".f1vx9l62{flex-direction:column;}"]
});
var usePopoverSurfaceStyles = __styles2({
  base: {
    Bxyxcbc: "fopcw2o",
    sshi5w: "f1n5o1gx",
    B68tc82: 0,
    Bmxbyg5: 0,
    Bpg54ce: "f19r5mr9",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f1f5q0n8",
    a9b677: "f13dwy2t"
  }
}, {
  d: [".fopcw2o{max-height:220px;}", ".f1n5o1gx{min-height:80px;}", [".f19r5mr9{overflow:hidden scroll;}", {
    p: -1
  }], [".f1f5q0n8{padding:var(--spacingVerticalS) var(--spacingHorizontalS);}", {
    p: -1
  }], ".f13dwy2t{width:220px;}"]
});
var useTriggerButtonStyles = __styles2({
  base: {
    mc9l5x: "ftuwxu6",
    qhf8xq: "f10pi13n",
    Bnnss6s: "fi64zpg",
    Brf1p80: "f4d9j23",
    Bt984gj: "f122n59",
    sj55zd: "f19n0e5",
    De3pzq: "fxugw4r",
    g2u3we: "fj3muxo",
    h3c5rm: ["f1akhkt", "f1lxtadh"],
    B9xav0g: "f1aperda",
    zhjwy3: ["f1lxtadh", "f1akhkt"],
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "f44lkw9",
    icvyot: "fzkkow9",
    vrafjx: ["fcdblym", "fjik90z"],
    oivjwe: "fg706s2",
    wvpqe5: ["fjik90z", "fcdblym"],
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f1mk8lai",
    Bjwas2f: "fw33nwi",
    Bn1d65q: ["f1ptkjjm", "fmzzjfk"],
    Bxeuatn: "f15j0dln",
    n51gp8: ["fmzzjfk", "f1ptkjjm"]
  },
  pie: {
    De3pzq: "f1c21dwh",
    g2u3we: "fghlq4f",
    h3c5rm: ["f1gn591s", "fjscplz"],
    B9xav0g: "fb073pr",
    zhjwy3: ["fjscplz", "f1gn591s"],
    sj55zd: "f44pa96"
  },
  focusIndicator: {
    Byu6kyc: 0,
    n8qw10: 0,
    Bbjhlyh: 0,
    i2cumq: 0,
    Bunx835: 0,
    Bdrgwmp: 0,
    mqozju: 0,
    lbo84a: 0,
    Bksnhdo: 0,
    Bci5o5g: 0,
    u5e7qz: 0,
    Bn40d3w: 0,
    B7b6zxw: 0,
    B8q5s1w: 0,
    B5gfjzb: 0,
    Bbcte9g: 0,
    Bqz3imu: "f1j9b7x8",
    g9k6zt: "f1nev41a"
  },
  states: {
    Bi91k9c: "feu1g3u",
    Jwef8y: "f1knas48",
    Bgoe8wy: "fvcxoqz",
    Bwzppfd: ["f1ub3y4t", "f1m52nbi"],
    oetu4i: "f1xlaoq0",
    gg5e9n: ["f1m52nbi", "f1ub3y4t"],
    lj723h: "f1g4hkjv",
    ecr2s2: "fb40n2d",
    B6oc9vd: "fvs00aa",
    ak43y8: ["f1assf6x", "f4ruux4"],
    wmxk5l: "fumykes",
    B50zh58: ["f4ruux4", "f1assf6x"]
  },
  selected: {
    sj55zd: "f14nttnl",
    De3pzq: "f1nfm20t",
    g2u3we: "f1ly1fcm",
    h3c5rm: ["fi8bssc", "fj6btzu"],
    B9xav0g: "f1s9tnsa",
    zhjwy3: ["fj6btzu", "fi8bssc"]
  },
  icon12: {
    Be2twd7: "f1ugzwwg"
  },
  icon16: {
    Be2twd7: "f4ybsrx"
  },
  icon20: {
    Be2twd7: "fe5j1ua"
  },
  icon24: {
    Be2twd7: "f1rt2boy"
  },
  icon28: {
    Be2twd7: "f24l1pt"
  },
  icon32: {
    Be2twd7: "ffl51b"
  },
  icon48: {
    Be2twd7: "f18m8u13"
  },
  caption2Strong: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "f13mqy1h",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "fcpl73t"
  },
  caption1Strong: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fy9rknc",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "fwrc4pm"
  },
  body1Strong: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "f1i3iumi"
  },
  subtitle2: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fod5ikn",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "faaz57k"
  },
  subtitle1: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "f1pp30po",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "f106mvju"
  },
  title3: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "f1x0m3f5",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "fb86gi6"
  },
  borderThin: {
    B4j52fo: "f192inf7",
    Bekrc4i: ["f5tn483", "f1ojsxk5"],
    Bn0qgzm: "f1vxd6vx",
    ibv6hh: ["f1ojsxk5", "f5tn483"]
  },
  borderThick: {
    B4j52fo: "f18zi460",
    Bekrc4i: ["f1wpluaz", "fsfsuhs"],
    Bn0qgzm: "fmklw6v",
    ibv6hh: ["fsfsuhs", "f1wpluaz"]
  },
  borderThicker: {
    B4j52fo: "fgx37oo",
    Bekrc4i: ["f130t4y6", "f1efpmoh"],
    Bn0qgzm: "fv51ejd",
    ibv6hh: ["f1efpmoh", "f130t4y6"]
  },
  borderThickest: {
    B4j52fo: "fwn6jck",
    Bekrc4i: ["figl7jc", "f1g0iy8l"],
    Bn0qgzm: "f1b8shu7",
    ibv6hh: ["f1g0iy8l", "figl7jc"]
  }
}, {
  d: [".ftuwxu6{display:inline-flex;}", ".f10pi13n{position:relative;}", ".fi64zpg{flex-shrink:0;}", ".f4d9j23{justify-content:center;}", ".f122n59{align-items:center;}", ".f19n0e5{color:var(--colorNeutralForeground1);}", ".fxugw4r{background-color:var(--colorNeutralBackground1);}", ".fj3muxo{border-top-color:var(--colorNeutralStroke1);}", ".f1akhkt{border-right-color:var(--colorNeutralStroke1);}", ".f1lxtadh{border-left-color:var(--colorNeutralStroke1);}", ".f1aperda{border-bottom-color:var(--colorNeutralStroke1);}", [".f44lkw9{border-radius:var(--borderRadiusCircular);}", {
    p: -1
  }], ".fzkkow9{border-top-style:solid;}", ".fcdblym{border-right-style:solid;}", ".fjik90z{border-left-style:solid;}", ".fg706s2{border-bottom-style:solid;}", [".f1mk8lai{padding:0;}", {
    p: -1
  }], ".f1c21dwh{background-color:var(--colorTransparentBackground);}", ".fghlq4f{border-top-color:var(--colorTransparentStroke);}", ".f1gn591s{border-right-color:var(--colorTransparentStroke);}", ".fjscplz{border-left-color:var(--colorTransparentStroke);}", ".fb073pr{border-bottom-color:var(--colorTransparentStroke);}", ".f44pa96{color:transparent;}", [".f1j9b7x8[data-fui-focus-visible]{border:var(--strokeWidthThick) solid var(--colorStrokeFocus2);}", {
    p: -2
  }], ".f1nev41a[data-fui-focus-visible]{outline-style:none;}", ".f14nttnl{color:var(--colorNeutralForeground1Selected);}", ".f1nfm20t{background-color:var(--colorNeutralBackground1Selected);}", ".f1ly1fcm{border-top-color:var(--colorNeutralStroke1Selected);}", ".fi8bssc{border-right-color:var(--colorNeutralStroke1Selected);}", ".fj6btzu{border-left-color:var(--colorNeutralStroke1Selected);}", ".f1s9tnsa{border-bottom-color:var(--colorNeutralStroke1Selected);}", ".f1ugzwwg{font-size:12px;}", ".f4ybsrx{font-size:16px;}", ".fe5j1ua{font-size:20px;}", ".f1rt2boy{font-size:24px;}", ".f24l1pt{font-size:28px;}", ".ffl51b{font-size:32px;}", ".f18m8u13{font-size:48px;}", ".fk6fouc{font-family:var(--fontFamilyBase);}", ".f13mqy1h{font-size:var(--fontSizeBase100);}", ".fl43uef{font-weight:var(--fontWeightSemibold);}", ".fcpl73t{line-height:var(--lineHeightBase100);}", ".fy9rknc{font-size:var(--fontSizeBase200);}", ".fwrc4pm{line-height:var(--lineHeightBase200);}", ".fkhj508{font-size:var(--fontSizeBase300);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}", ".fod5ikn{font-size:var(--fontSizeBase400);}", ".faaz57k{line-height:var(--lineHeightBase400);}", ".f1pp30po{font-size:var(--fontSizeBase500);}", ".f106mvju{line-height:var(--lineHeightBase500);}", ".f1x0m3f5{font-size:var(--fontSizeBase600);}", ".fb86gi6{line-height:var(--lineHeightBase600);}", ".f192inf7{border-top-width:var(--strokeWidthThin);}", ".f5tn483{border-right-width:var(--strokeWidthThin);}", ".f1ojsxk5{border-left-width:var(--strokeWidthThin);}", ".f1vxd6vx{border-bottom-width:var(--strokeWidthThin);}", ".f18zi460{border-top-width:var(--strokeWidthThick);}", ".f1wpluaz{border-right-width:var(--strokeWidthThick);}", ".fsfsuhs{border-left-width:var(--strokeWidthThick);}", ".fmklw6v{border-bottom-width:var(--strokeWidthThick);}", ".fgx37oo{border-top-width:var(--strokeWidthThicker);}", ".f130t4y6{border-right-width:var(--strokeWidthThicker);}", ".f1efpmoh{border-left-width:var(--strokeWidthThicker);}", ".fv51ejd{border-bottom-width:var(--strokeWidthThicker);}", ".fwn6jck{border-top-width:var(--strokeWidthThickest);}", ".figl7jc{border-right-width:var(--strokeWidthThickest);}", ".f1g0iy8l{border-left-width:var(--strokeWidthThickest);}", ".f1b8shu7{border-bottom-width:var(--strokeWidthThickest);}"],
  m: [["@media (forced-colors: active){.fw33nwi{border-top-color:CanvasText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1ptkjjm{border-right-color:CanvasText;}.fmzzjfk{border-left-color:CanvasText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f15j0dln{border-bottom-color:CanvasText;}}", {
    m: "(forced-colors: active)"
  }]],
  h: [".feu1g3u:hover{color:var(--colorNeutralForeground1Hover);}", ".f1knas48:hover{background-color:var(--colorNeutralBackground1Hover);}", ".fvcxoqz:hover{border-top-color:var(--colorNeutralStroke1Hover);}", ".f1ub3y4t:hover{border-right-color:var(--colorNeutralStroke1Hover);}", ".f1m52nbi:hover{border-left-color:var(--colorNeutralStroke1Hover);}", ".f1xlaoq0:hover{border-bottom-color:var(--colorNeutralStroke1Hover);}"],
  a: [".f1g4hkjv:active{color:var(--colorNeutralForeground1Pressed);}", ".fb40n2d:active{background-color:var(--colorNeutralBackground1Pressed);}", ".fvs00aa:active{border-top-color:var(--colorNeutralStroke1Pressed);}", ".f1assf6x:active{border-right-color:var(--colorNeutralStroke1Pressed);}", ".f4ruux4:active{border-left-color:var(--colorNeutralStroke1Pressed);}", ".fumykes:active{border-bottom-color:var(--colorNeutralStroke1Pressed);}"]
});
var useAvatarGroupPopoverStyles_unstable = (state) => {
  "use no memo";
  const {
    indicator,
    size,
    layout,
    popoverOpen
  } = state;
  const sizeStyles = useSizeStyles();
  const triggerButtonStyles = useTriggerButtonStyles();
  const contentStyles = useContentStyles();
  const popoverSurfaceStyles = usePopoverSurfaceStyles();
  const groupChildClassName = useGroupChildClassName(layout, size);
  const triggerButtonClasses = [];
  if (size < 36) {
    triggerButtonClasses.push(triggerButtonStyles.borderThin);
  } else if (size < 56) {
    triggerButtonClasses.push(triggerButtonStyles.borderThick);
  } else if (size < 72) {
    triggerButtonClasses.push(triggerButtonStyles.borderThicker);
  } else {
    triggerButtonClasses.push(triggerButtonStyles.borderThickest);
  }
  if (indicator === "count") {
    if (size <= 24) {
      triggerButtonClasses.push(triggerButtonStyles.caption2Strong);
    } else if (size <= 28) {
      triggerButtonClasses.push(triggerButtonStyles.caption1Strong);
    } else if (size <= 40) {
      triggerButtonClasses.push(triggerButtonStyles.body1Strong);
    } else if (size <= 56) {
      triggerButtonClasses.push(triggerButtonStyles.subtitle2);
    } else if (size <= 96) {
      triggerButtonClasses.push(triggerButtonStyles.subtitle1);
    } else {
      triggerButtonClasses.push(triggerButtonStyles.title3);
    }
  } else {
    if (size <= 16) {
      triggerButtonClasses.push(triggerButtonStyles.icon12);
    } else if (size <= 24) {
      triggerButtonClasses.push(triggerButtonStyles.icon16);
    } else if (size <= 40) {
      triggerButtonClasses.push(triggerButtonStyles.icon20);
    } else if (size <= 48) {
      triggerButtonClasses.push(triggerButtonStyles.icon24);
    } else if (size <= 56) {
      triggerButtonClasses.push(triggerButtonStyles.icon28);
    } else if (size <= 72) {
      triggerButtonClasses.push(triggerButtonStyles.icon32);
    } else {
      triggerButtonClasses.push(triggerButtonStyles.icon48);
    }
  }
  state.triggerButton.className = mergeClasses(avatarGroupPopoverClassNames.triggerButton, groupChildClassName, sizeStyles[size], triggerButtonStyles.base, layout === "pie" && triggerButtonStyles.pie, triggerButtonStyles.focusIndicator, layout !== "pie" && triggerButtonStyles.states, layout !== "pie" && popoverOpen && triggerButtonStyles.selected, ...triggerButtonClasses, state.triggerButton.className);
  state.content.className = mergeClasses(avatarGroupPopoverClassNames.content, contentStyles.base, state.content.className);
  state.popoverSurface.className = mergeClasses(avatarGroupPopoverClassNames.popoverSurface, popoverSurfaceStyles.base, state.popoverSurface.className);
  return state;
};

// node_modules/@fluentui/react-avatar/lib/components/AvatarGroupPopover/AvatarGroupPopover.js
var AvatarGroupPopover = (props) => {
  const state = useAvatarGroupPopover_unstable(props);
  const contextValues = useAvatarGroupPopoverContextValues_unstable(state);
  useAvatarGroupPopoverStyles_unstable(state);
  useCustomStyleHook("useAvatarGroupPopoverStyles_unstable")(state);
  return renderAvatarGroupPopover_unstable(state, contextValues);
};
AvatarGroupPopover.displayName = "AvatarGroupPopover";

// node_modules/@fluentui/react-avatar/lib/components/AvatarGroupPopover/AvatarGroupPopover.types.js
var React79 = __toESM(require_react());

// node_modules/@fluentui/react-button/lib/components/Button/Button.js
var React82 = __toESM(require_react());

// node_modules/@fluentui/react-button/lib/components/Button/renderButton.js
var renderButton_unstable = (state) => {
  assertSlots(state);
  const { iconOnly, iconPosition } = state;
  return jsxs(state.root, {
    children: [
      iconPosition !== "after" && state.icon && jsx(state.icon, {}),
      !iconOnly && state.root.children,
      iconPosition === "after" && state.icon && jsx(state.icon, {})
    ]
  });
};

// node_modules/@fluentui/react-button/lib/components/Button/useButton.js
var React81 = __toESM(require_react());

// node_modules/@fluentui/react-button/lib/contexts/ButtonContext.js
var React80 = __toESM(require_react());
var buttonContext = React80.createContext(void 0);
var buttonContextDefaultValue = {};
var ButtonContextProvider = buttonContext.Provider;
var useButtonContext = () => {
  var _React_useContext;
  return (_React_useContext = React80.useContext(buttonContext)) !== null && _React_useContext !== void 0 ? _React_useContext : buttonContextDefaultValue;
};

// node_modules/@fluentui/react-button/lib/components/Button/useButton.js
var useButton_unstable = (props, ref) => {
  const { size: contextSize } = useButtonContext();
  const { appearance = "secondary", as = "button", disabled = false, disabledFocusable = false, icon, iconPosition = "before", shape = "rounded", size = contextSize !== null && contextSize !== void 0 ? contextSize : "medium" } = props;
  const iconShorthand = slot_exports.optional(icon, {
    elementType: "span"
  });
  return {
    // Props passed at the top-level
    appearance,
    disabled,
    disabledFocusable,
    iconPosition,
    shape,
    size,
    iconOnly: Boolean((iconShorthand === null || iconShorthand === void 0 ? void 0 : iconShorthand.children) && !props.children),
    components: {
      root: "button",
      icon: "span"
    },
    root: slot_exports.always(getIntrinsicElementProps(as, useARIAButtonProps(props.as, props)), {
      elementType: "button",
      defaultProps: {
        ref,
        type: "button"
      }
    }),
    icon: iconShorthand
  };
};

// node_modules/@fluentui/react-button/lib/components/Button/useButtonStyles.styles.js
var buttonClassNames = {
  root: "fui-Button",
  icon: "fui-Button__icon"
};
var boxShadowStrokeWidthThinMoz = `calc(${tokens.strokeWidthThin} + 0.25px)`;
var useRootBaseClassName = __resetStyles("r1alrhcs", null, {
  r: [".r1alrhcs{align-items:center;box-sizing:border-box;display:inline-flex;justify-content:center;text-decoration-line:none;vertical-align:middle;margin:0;overflow:hidden;background-color:var(--colorNeutralBackground1);color:var(--colorNeutralForeground1);border:var(--strokeWidthThin) solid var(--colorNeutralStroke1);font-family:var(--fontFamilyBase);outline-style:none;padding:5px var(--spacingHorizontalM);min-width:96px;border-radius:var(--borderRadiusMedium);font-size:var(--fontSizeBase300);font-weight:var(--fontWeightSemibold);line-height:var(--lineHeightBase300);transition-duration:var(--durationFaster);transition-property:background,border,color;transition-timing-function:var(--curveEasyEase);}", ".r1alrhcs:hover{background-color:var(--colorNeutralBackground1Hover);border-color:var(--colorNeutralStroke1Hover);color:var(--colorNeutralForeground1Hover);cursor:pointer;}", ".r1alrhcs:hover:active{background-color:var(--colorNeutralBackground1Pressed);border-color:var(--colorNeutralStroke1Pressed);color:var(--colorNeutralForeground1Pressed);outline-style:none;}", ".r1alrhcs[data-fui-focus-visible]{border-color:var(--colorStrokeFocus2);border-radius:var(--borderRadiusMedium);border-width:1px;outline:var(--strokeWidthThick) solid var(--colorTransparentStroke);box-shadow:0 0 0 var(--strokeWidthThin) var(--colorStrokeFocus2) inset;z-index:1;}"],
  s: ["@media screen and (prefers-reduced-motion: reduce){.r1alrhcs{transition-duration:0.01ms;}}", "@media (forced-colors: active){.r1alrhcs:focus{border-color:ButtonText;}.r1alrhcs:hover{background-color:HighlightText;border-color:Highlight;color:Highlight;forced-color-adjust:none;}.r1alrhcs:hover:active{background-color:HighlightText;border-color:Highlight;color:Highlight;forced-color-adjust:none;}}", "@supports (-moz-appearance:button){.r1alrhcs[data-fui-focus-visible]{box-shadow:0 0 0 calc(var(--strokeWidthThin) + 0.25px) var(--colorStrokeFocus2) inset;}}"]
});
var useIconBaseClassName = __resetStyles("rywnvv2", null, [".rywnvv2{align-items:center;display:inline-flex;justify-content:center;font-size:20px;height:20px;width:20px;--fui-Button__icon--spacing:var(--spacingHorizontalSNudge);}"]);
var useRootStyles3 = __styles2({
  outline: {
    De3pzq: "f1c21dwh",
    Jwef8y: "fjxutwb",
    iro3zm: "fwiml72"
  },
  primary: {
    De3pzq: "ffp7eso",
    g2u3we: "f1p3nwhy",
    h3c5rm: ["f11589ue", "f1pdflbu"],
    B9xav0g: "f1q5o8ev",
    zhjwy3: ["f1pdflbu", "f11589ue"],
    sj55zd: "f1phragk",
    Jwef8y: "f15wkkf3",
    Bgoe8wy: "f1s2uweq",
    Bwzppfd: ["fr80ssc", "fecsdlb"],
    oetu4i: "f1ukrpxl",
    gg5e9n: ["fecsdlb", "fr80ssc"],
    Bi91k9c: "f1rq72xc",
    iro3zm: "fnp9lpt",
    b661bw: "f1h0usnq",
    Bk6r4ia: ["fs4ktlq", "fx2bmrt"],
    B9zn80p: "f16h9ulv",
    Bpld233: ["fx2bmrt", "fs4ktlq"],
    B2d53fq: "f1d6v5y2",
    Bsw6fvg: "f1rirnrt",
    Bjwas2f: "f1uu00uk",
    Bn1d65q: ["fkvaka8", "f9a0qzu"],
    Bxeuatn: "f1ux7til",
    n51gp8: ["f9a0qzu", "fkvaka8"],
    Bbusuzp: "f1lkg8j3",
    ycbfsm: "fkc42ay",
    Bqrx1nm: "fq7113v",
    pgvf35: "ff1wgvm",
    Bh7lczh: ["fiob0tu", "f1x4h75k"],
    dpv3f4: "f1j6scgf",
    Bpnjhaq: ["f1x4h75k", "fiob0tu"],
    ze5xyy: "f4xjyn1",
    g2kj27: "fbgcvur",
    Bf756sw: "f1ks1yx8",
    Bow2dr7: ["f1o6qegi", "fmxjhhp"],
    Bvhedfk: "fcnxywj",
    Gye4lf: ["fmxjhhp", "f1o6qegi"],
    pc6evw: "f9ddjv3"
  },
  secondary: {},
  subtle: {
    De3pzq: "fhovq9v",
    g2u3we: "f1p3nwhy",
    h3c5rm: ["f11589ue", "f1pdflbu"],
    B9xav0g: "f1q5o8ev",
    zhjwy3: ["f1pdflbu", "f11589ue"],
    sj55zd: "fkfq4zb",
    Jwef8y: "f1t94bn6",
    Bgoe8wy: "f1s2uweq",
    Bwzppfd: ["fr80ssc", "fecsdlb"],
    oetu4i: "f1ukrpxl",
    gg5e9n: ["fecsdlb", "fr80ssc"],
    Bi91k9c: "fnwyq0v",
    Bk3fhr4: "ft1hn21",
    Bmfj8id: "fuxngvv",
    Bbdnnc7: "fy5bs14",
    iro3zm: "fsv2rcd",
    b661bw: "f1h0usnq",
    Bk6r4ia: ["fs4ktlq", "fx2bmrt"],
    B9zn80p: "f16h9ulv",
    Bpld233: ["fx2bmrt", "fs4ktlq"],
    B2d53fq: "f1omzyqd",
    em6i61: "f1dfjoow",
    vm6p8p: "f1j98vj9",
    x3br3k: "fj8yq94",
    ze5xyy: "f4xjyn1",
    Bx3q9su: "f1et0tmh",
    pc6evw: "f9ddjv3",
    xd2cci: "f1wi8ngl"
  },
  transparent: {
    De3pzq: "f1c21dwh",
    g2u3we: "f1p3nwhy",
    h3c5rm: ["f11589ue", "f1pdflbu"],
    B9xav0g: "f1q5o8ev",
    zhjwy3: ["f1pdflbu", "f11589ue"],
    sj55zd: "fkfq4zb",
    Jwef8y: "fjxutwb",
    Bgoe8wy: "f1s2uweq",
    Bwzppfd: ["fr80ssc", "fecsdlb"],
    oetu4i: "f1ukrpxl",
    gg5e9n: ["fecsdlb", "fr80ssc"],
    Bi91k9c: "f139oj5f",
    Bk3fhr4: "ft1hn21",
    Bmfj8id: "fuxngvv",
    iro3zm: "fwiml72",
    b661bw: "f1h0usnq",
    Bk6r4ia: ["fs4ktlq", "fx2bmrt"],
    B9zn80p: "f16h9ulv",
    Bpld233: ["fx2bmrt", "fs4ktlq"],
    B2d53fq: "f1fg1p5m",
    em6i61: "f1dfjoow",
    vm6p8p: "f1j98vj9",
    Bqrx1nm: "f1tme0vf",
    ze5xyy: "f4xjyn1",
    g2kj27: "f18onu3q",
    pc6evw: "f9ddjv3"
  },
  circular: {
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "f44lkw9"
  },
  rounded: {},
  square: {
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "f1fabniw"
  },
  small: {
    Bf4jedk: "fh7ncta",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "fneth5b",
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "ft85np5",
    Be2twd7: "fy9rknc",
    Bhrd7zp: "figsok6",
    Bg96gwp: "fwrc4pm"
  },
  smallWithIcon: {
    Byoj8tv: "f1brlhvm",
    z8tnut: "f1sl3k7w"
  },
  medium: {},
  large: {
    Bf4jedk: "f14es27b",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f4db1ww",
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "ft85np5",
    Be2twd7: "fod5ikn",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "faaz57k"
  },
  largeWithIcon: {
    Byoj8tv: "fy7v416",
    z8tnut: "f1a1bwwz"
  }
}, {
  d: [".f1c21dwh{background-color:var(--colorTransparentBackground);}", ".ffp7eso{background-color:var(--colorBrandBackground);}", ".f1p3nwhy{border-top-color:transparent;}", ".f11589ue{border-right-color:transparent;}", ".f1pdflbu{border-left-color:transparent;}", ".f1q5o8ev{border-bottom-color:transparent;}", ".f1phragk{color:var(--colorNeutralForegroundOnBrand);}", ".fhovq9v{background-color:var(--colorSubtleBackground);}", ".fkfq4zb{color:var(--colorNeutralForeground2);}", [".f44lkw9{border-radius:var(--borderRadiusCircular);}", {
    p: -1
  }], [".f1fabniw{border-radius:var(--borderRadiusNone);}", {
    p: -1
  }], ".fh7ncta{min-width:64px;}", [".fneth5b{padding:3px var(--spacingHorizontalS);}", {
    p: -1
  }], [".ft85np5{border-radius:var(--borderRadiusMedium);}", {
    p: -1
  }], ".fy9rknc{font-size:var(--fontSizeBase200);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".fwrc4pm{line-height:var(--lineHeightBase200);}", ".f1brlhvm{padding-bottom:1px;}", ".f1sl3k7w{padding-top:1px;}", ".f14es27b{min-width:96px;}", [".f4db1ww{padding:8px var(--spacingHorizontalL);}", {
    p: -1
  }], [".ft85np5{border-radius:var(--borderRadiusMedium);}", {
    p: -1
  }], ".fod5ikn{font-size:var(--fontSizeBase400);}", ".fl43uef{font-weight:var(--fontWeightSemibold);}", ".faaz57k{line-height:var(--lineHeightBase400);}", ".fy7v416{padding-bottom:7px;}", ".f1a1bwwz{padding-top:7px;}"],
  h: [".fjxutwb:hover{background-color:var(--colorTransparentBackgroundHover);}", ".fwiml72:hover:active{background-color:var(--colorTransparentBackgroundPressed);}", ".f15wkkf3:hover{background-color:var(--colorBrandBackgroundHover);}", ".f1s2uweq:hover{border-top-color:transparent;}", ".fr80ssc:hover{border-right-color:transparent;}", ".fecsdlb:hover{border-left-color:transparent;}", ".f1ukrpxl:hover{border-bottom-color:transparent;}", ".f1rq72xc:hover{color:var(--colorNeutralForegroundOnBrand);}", ".fnp9lpt:hover:active{background-color:var(--colorBrandBackgroundPressed);}", ".f1h0usnq:hover:active{border-top-color:transparent;}", ".fs4ktlq:hover:active{border-right-color:transparent;}", ".fx2bmrt:hover:active{border-left-color:transparent;}", ".f16h9ulv:hover:active{border-bottom-color:transparent;}", ".f1d6v5y2:hover:active{color:var(--colorNeutralForegroundOnBrand);}", ".f1t94bn6:hover{background-color:var(--colorSubtleBackgroundHover);}", ".fnwyq0v:hover{color:var(--colorNeutralForeground2Hover);}", ".ft1hn21:hover .fui-Icon-filled{display:inline;}", ".fuxngvv:hover .fui-Icon-regular{display:none;}", ".fy5bs14:hover .fui-Button__icon{color:var(--colorNeutralForeground2BrandHover);}", ".fsv2rcd:hover:active{background-color:var(--colorSubtleBackgroundPressed);}", ".f1omzyqd:hover:active{color:var(--colorNeutralForeground2Pressed);}", ".f1dfjoow:hover:active .fui-Icon-filled{display:inline;}", ".f1j98vj9:hover:active .fui-Icon-regular{display:none;}", ".fj8yq94:hover:active .fui-Button__icon{color:var(--colorNeutralForeground2BrandPressed);}", ".f139oj5f:hover{color:var(--colorNeutralForeground2BrandHover);}", ".f1fg1p5m:hover:active{color:var(--colorNeutralForeground2BrandPressed);}"],
  m: [["@media (forced-colors: active){.f1rirnrt{background-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1uu00uk{border-top-color:HighlightText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f9a0qzu{border-left-color:HighlightText;}.fkvaka8{border-right-color:HighlightText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1ux7til{border-bottom-color:HighlightText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1lkg8j3{color:HighlightText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fkc42ay{forced-color-adjust:none;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fq7113v:hover{background-color:HighlightText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.ff1wgvm:hover{border-top-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1x4h75k:hover{border-left-color:Highlight;}.fiob0tu:hover{border-right-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1j6scgf:hover{border-bottom-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f4xjyn1:hover{color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fbgcvur:hover:active{background-color:HighlightText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1ks1yx8:hover:active{border-top-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1o6qegi:hover:active{border-right-color:Highlight;}.fmxjhhp:hover:active{border-left-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fcnxywj:hover:active{border-bottom-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f9ddjv3:hover:active{color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1et0tmh:hover .fui-Button__icon{color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1wi8ngl:hover:active .fui-Button__icon{color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1tme0vf:hover{background-color:var(--colorTransparentBackground);}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f18onu3q:hover:active{background-color:var(--colorTransparentBackground);}}", {
    m: "(forced-colors: active)"
  }]]
});
var useRootDisabledStyles = __styles2({
  base: {
    De3pzq: "f1bg9a2p",
    g2u3we: "f1jj8ep1",
    h3c5rm: ["f15xbau", "fy0fskl"],
    B9xav0g: "f4ikngz",
    zhjwy3: ["fy0fskl", "f15xbau"],
    sj55zd: "f1s2aq7o",
    Bceei9c: "fdrzuqr",
    Bfinmwp: "f15x8b5r",
    Jwef8y: "f1falr9n",
    Bgoe8wy: "f12mpcsy",
    Bwzppfd: ["f1gwvigk", "f18rmfxp"],
    oetu4i: "f1jnshp0",
    gg5e9n: ["f18rmfxp", "f1gwvigk"],
    Bi91k9c: "fvgxktp",
    eoavqd: "fphbwmw",
    Bk3fhr4: "f19vpps7",
    Bmfj8id: "fv5swzo",
    Bbdnnc7: "f1al02dq",
    iro3zm: "f1t6o4dc",
    b661bw: "f10ztigi",
    Bk6r4ia: ["f1ft5sdu", "f1gzf82w"],
    B9zn80p: "f12zbtn2",
    Bpld233: ["f1gzf82w", "f1ft5sdu"],
    B2d53fq: "fcvwxyo",
    c3iz72: "f8w4c43",
    em6i61: "f1ol4fw6",
    vm6p8p: "f1q1lw4e",
    x3br3k: "f1dwjv2g"
  },
  highContrast: {
    Bsw6fvg: "f4lkoma",
    Bjwas2f: "fg455y9",
    Bn1d65q: ["f1rvyvqg", "f14g86mu"],
    Bxeuatn: "f1cwzwz",
    n51gp8: ["f14g86mu", "f1rvyvqg"],
    Bbusuzp: "f1dcs8yz",
    G867l3: "fjwq6ea",
    gdbnj: ["f1lr3nhc", "f1mbxvi6"],
    mxns5l: "fn5gmvv",
    o3nasb: ["f1mbxvi6", "f1lr3nhc"],
    Bqrx1nm: "f1vmkb5g",
    pgvf35: "f53ppgq",
    Bh7lczh: ["f1663y11", "f80fkiy"],
    dpv3f4: "f18v5270",
    Bpnjhaq: ["f80fkiy", "f1663y11"],
    ze5xyy: "f1kc2mi9",
    g2kj27: "f1y0svfh",
    Bf756sw: "fihuait",
    Bow2dr7: ["fnxhupq", "fyd6l6x"],
    Bvhedfk: "fx507ft",
    Gye4lf: ["fyd6l6x", "fnxhupq"],
    pc6evw: "fb3rf2x"
  },
  outline: {
    De3pzq: "f1c21dwh",
    Jwef8y: "f9ql6rf",
    iro3zm: "f3h1zc4"
  },
  primary: {
    g2u3we: "f1p3nwhy",
    h3c5rm: ["f11589ue", "f1pdflbu"],
    B9xav0g: "f1q5o8ev",
    zhjwy3: ["f1pdflbu", "f11589ue"],
    Bgoe8wy: "f1s2uweq",
    Bwzppfd: ["fr80ssc", "fecsdlb"],
    oetu4i: "f1ukrpxl",
    gg5e9n: ["fecsdlb", "fr80ssc"],
    b661bw: "f1h0usnq",
    Bk6r4ia: ["fs4ktlq", "fx2bmrt"],
    B9zn80p: "f16h9ulv",
    Bpld233: ["fx2bmrt", "fs4ktlq"]
  },
  secondary: {},
  subtle: {
    De3pzq: "f1c21dwh",
    g2u3we: "f1p3nwhy",
    h3c5rm: ["f11589ue", "f1pdflbu"],
    B9xav0g: "f1q5o8ev",
    zhjwy3: ["f1pdflbu", "f11589ue"],
    Jwef8y: "f9ql6rf",
    Bgoe8wy: "f1s2uweq",
    Bwzppfd: ["fr80ssc", "fecsdlb"],
    oetu4i: "f1ukrpxl",
    gg5e9n: ["fecsdlb", "fr80ssc"],
    iro3zm: "f3h1zc4",
    b661bw: "f1h0usnq",
    Bk6r4ia: ["fs4ktlq", "fx2bmrt"],
    B9zn80p: "f16h9ulv",
    Bpld233: ["fx2bmrt", "fs4ktlq"]
  },
  transparent: {
    De3pzq: "f1c21dwh",
    g2u3we: "f1p3nwhy",
    h3c5rm: ["f11589ue", "f1pdflbu"],
    B9xav0g: "f1q5o8ev",
    zhjwy3: ["f1pdflbu", "f11589ue"],
    Jwef8y: "f9ql6rf",
    Bgoe8wy: "f1s2uweq",
    Bwzppfd: ["fr80ssc", "fecsdlb"],
    oetu4i: "f1ukrpxl",
    gg5e9n: ["fecsdlb", "fr80ssc"],
    iro3zm: "f3h1zc4",
    b661bw: "f1h0usnq",
    Bk6r4ia: ["fs4ktlq", "fx2bmrt"],
    B9zn80p: "f16h9ulv",
    Bpld233: ["fx2bmrt", "fs4ktlq"]
  }
}, {
  d: [".f1bg9a2p{background-color:var(--colorNeutralBackgroundDisabled);}", ".f1jj8ep1{border-top-color:var(--colorNeutralStrokeDisabled);}", ".f15xbau{border-right-color:var(--colorNeutralStrokeDisabled);}", ".fy0fskl{border-left-color:var(--colorNeutralStrokeDisabled);}", ".f4ikngz{border-bottom-color:var(--colorNeutralStrokeDisabled);}", ".f1s2aq7o{color:var(--colorNeutralForegroundDisabled);}", ".fdrzuqr{cursor:not-allowed;}", ".f15x8b5r .fui-Button__icon{color:var(--colorNeutralForegroundDisabled);}", ".f1c21dwh{background-color:var(--colorTransparentBackground);}", ".f1p3nwhy{border-top-color:transparent;}", ".f11589ue{border-right-color:transparent;}", ".f1pdflbu{border-left-color:transparent;}", ".f1q5o8ev{border-bottom-color:transparent;}"],
  h: [".f1falr9n:hover{background-color:var(--colorNeutralBackgroundDisabled);}", ".f12mpcsy:hover{border-top-color:var(--colorNeutralStrokeDisabled);}", ".f1gwvigk:hover{border-right-color:var(--colorNeutralStrokeDisabled);}", ".f18rmfxp:hover{border-left-color:var(--colorNeutralStrokeDisabled);}", ".f1jnshp0:hover{border-bottom-color:var(--colorNeutralStrokeDisabled);}", ".fvgxktp:hover{color:var(--colorNeutralForegroundDisabled);}", ".fphbwmw:hover{cursor:not-allowed;}", ".f19vpps7:hover .fui-Icon-filled{display:none;}", ".fv5swzo:hover .fui-Icon-regular{display:inline;}", ".f1al02dq:hover .fui-Button__icon{color:var(--colorNeutralForegroundDisabled);}", ".f1t6o4dc:hover:active{background-color:var(--colorNeutralBackgroundDisabled);}", ".f10ztigi:hover:active{border-top-color:var(--colorNeutralStrokeDisabled);}", ".f1ft5sdu:hover:active{border-right-color:var(--colorNeutralStrokeDisabled);}", ".f1gzf82w:hover:active{border-left-color:var(--colorNeutralStrokeDisabled);}", ".f12zbtn2:hover:active{border-bottom-color:var(--colorNeutralStrokeDisabled);}", ".fcvwxyo:hover:active{color:var(--colorNeutralForegroundDisabled);}", ".f8w4c43:hover:active{cursor:not-allowed;}", ".f1ol4fw6:hover:active .fui-Icon-filled{display:none;}", ".f1q1lw4e:hover:active .fui-Icon-regular{display:inline;}", ".f1dwjv2g:hover:active .fui-Button__icon{color:var(--colorNeutralForegroundDisabled);}", ".f9ql6rf:hover{background-color:var(--colorTransparentBackground);}", ".f3h1zc4:hover:active{background-color:var(--colorTransparentBackground);}", ".f1s2uweq:hover{border-top-color:transparent;}", ".fr80ssc:hover{border-right-color:transparent;}", ".fecsdlb:hover{border-left-color:transparent;}", ".f1ukrpxl:hover{border-bottom-color:transparent;}", ".f1h0usnq:hover:active{border-top-color:transparent;}", ".fs4ktlq:hover:active{border-right-color:transparent;}", ".fx2bmrt:hover:active{border-left-color:transparent;}", ".f16h9ulv:hover:active{border-bottom-color:transparent;}"],
  m: [["@media (forced-colors: active){.f4lkoma{background-color:ButtonFace;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fg455y9{border-top-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f14g86mu{border-left-color:GrayText;}.f1rvyvqg{border-right-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1cwzwz{border-bottom-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1dcs8yz{color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fjwq6ea:focus{border-top-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1lr3nhc:focus{border-right-color:GrayText;}.f1mbxvi6:focus{border-left-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fn5gmvv:focus{border-bottom-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1vmkb5g:hover{background-color:ButtonFace;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f53ppgq:hover{border-top-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1663y11:hover{border-right-color:GrayText;}.f80fkiy:hover{border-left-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f18v5270:hover{border-bottom-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1kc2mi9:hover{color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1y0svfh:hover:active{background-color:ButtonFace;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fihuait:hover:active{border-top-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fnxhupq:hover:active{border-right-color:GrayText;}.fyd6l6x:hover:active{border-left-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fx507ft:hover:active{border-bottom-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fb3rf2x:hover:active{color:GrayText;}}", {
    m: "(forced-colors: active)"
  }]]
});
var useRootFocusStyles = __styles2({
  circular: {
    Bw81rd7: 0,
    kdpuga: 0,
    dm238s: 0,
    B6xbmo0: 0,
    B3whbx2: "f1062rbf"
  },
  rounded: {},
  square: {
    Bw81rd7: 0,
    kdpuga: 0,
    dm238s: 0,
    B6xbmo0: 0,
    B3whbx2: "fj0ryk1"
  },
  primary: {
    B8q5s1w: "f17t0x8g",
    Bci5o5g: ["f194v5ow", "fk7jm04"],
    n8qw10: "f1qgg65p",
    Bdrgwmp: ["fk7jm04", "f194v5ow"],
    j6ew2k: ["fhgccpy", "fjo7pq6"],
    he4mth: "f32wu9k",
    Byr4aka: "fu5nqqq",
    lks7q5: ["f13prjl2", "f1nl83rv"],
    Bnan3qt: "f1czftr5",
    k1dn9: ["f1nl83rv", "f13prjl2"],
    Boium3a: ["f12k37oa", "fdnykm2"],
    tm8e47: "fr96u23"
  },
  small: {
    Bw81rd7: 0,
    kdpuga: 0,
    dm238s: 0,
    B6xbmo0: 0,
    B3whbx2: "fazmxh"
  },
  medium: {},
  large: {
    Bw81rd7: 0,
    kdpuga: 0,
    dm238s: 0,
    B6xbmo0: 0,
    B3whbx2: "f1b6alqh"
  }
}, {
  d: [[".f1062rbf[data-fui-focus-visible]{border-radius:var(--borderRadiusCircular);}", {
    p: -1
  }], [".fj0ryk1[data-fui-focus-visible]{border-radius:var(--borderRadiusNone);}", {
    p: -1
  }], ".f17t0x8g[data-fui-focus-visible]{border-top-color:var(--colorStrokeFocus2);}", ".f194v5ow[data-fui-focus-visible]{border-right-color:var(--colorStrokeFocus2);}", ".fk7jm04[data-fui-focus-visible]{border-left-color:var(--colorStrokeFocus2);}", ".f1qgg65p[data-fui-focus-visible]{border-bottom-color:var(--colorStrokeFocus2);}", ".fhgccpy[data-fui-focus-visible]{box-shadow:var(--shadow2),0 0 0 var(--strokeWidthThin) var(--colorStrokeFocus2) inset,0 0 0 var(--strokeWidthThick) var(--colorNeutralForegroundOnBrand) inset;}", ".fjo7pq6[data-fui-focus-visible]{box-shadow:var(--shadow2),0 0 0 var(--strokeWidthThin) var(--colorStrokeFocus2) inset,0 0 0 var(--strokeWidthThick) var(--colorNeutralForegroundOnBrand) inset;}", ".f32wu9k[data-fui-focus-visible]:hover{box-shadow:var(--shadow2),0 0 0 var(--strokeWidthThin) var(--colorStrokeFocus2) inset;}", ".fu5nqqq[data-fui-focus-visible]:hover{border-top-color:var(--colorStrokeFocus2);}", ".f13prjl2[data-fui-focus-visible]:hover{border-right-color:var(--colorStrokeFocus2);}", ".f1nl83rv[data-fui-focus-visible]:hover{border-left-color:var(--colorStrokeFocus2);}", ".f1czftr5[data-fui-focus-visible]:hover{border-bottom-color:var(--colorStrokeFocus2);}", [".fazmxh[data-fui-focus-visible]{border-radius:var(--borderRadiusSmall);}", {
    p: -1
  }], [".f1b6alqh[data-fui-focus-visible]{border-radius:var(--borderRadiusLarge);}", {
    p: -1
  }]],
  t: ["@supports (-moz-appearance:button){.f12k37oa[data-fui-focus-visible]{box-shadow:var(--shadow2),0 0 0 calc(var(--strokeWidthThin) + 0.25px) var(--colorStrokeFocus2) inset,0 0 0 var(--strokeWidthThick) var(--colorNeutralForegroundOnBrand) inset;}.fdnykm2[data-fui-focus-visible]{box-shadow:var(--shadow2),0 0 0 calc(var(--strokeWidthThin) + 0.25px) var(--colorStrokeFocus2) inset,0 0 0 var(--strokeWidthThick) var(--colorNeutralForegroundOnBrand) inset;}}", "@supports (-moz-appearance:button){.fr96u23[data-fui-focus-visible]:hover{box-shadow:var(--shadow2),0 0 0 calc(var(--strokeWidthThin) + 0.25px) var(--colorStrokeFocus2) inset;}}"]
});
var useRootIconOnlyStyles = __styles2({
  small: {
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "fu97m5z",
    Bf4jedk: "f17fgpbq",
    B2u0y6b: "f1jt17bm"
  },
  medium: {
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f18ktai2",
    Bf4jedk: "fwbmr0d",
    B2u0y6b: "f44c6la"
  },
  large: {
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f1hbd1aw",
    Bf4jedk: "f12clzc2",
    B2u0y6b: "fjy1crr"
  }
}, {
  d: [[".fu97m5z{padding:1px;}", {
    p: -1
  }], ".f17fgpbq{min-width:24px;}", ".f1jt17bm{max-width:24px;}", [".f18ktai2{padding:5px;}", {
    p: -1
  }], ".fwbmr0d{min-width:32px;}", ".f44c6la{max-width:32px;}", [".f1hbd1aw{padding:7px;}", {
    p: -1
  }], ".f12clzc2{min-width:40px;}", ".fjy1crr{max-width:40px;}"]
});
var useIconStyles2 = __styles2({
  small: {
    Be2twd7: "fe5j1ua",
    Bqenvij: "fjamq6b",
    a9b677: "f64fuq3",
    Bqrlyyl: "fbaiahx"
  },
  medium: {},
  large: {
    Be2twd7: "f1rt2boy",
    Bqenvij: "frvgh55",
    a9b677: "fq4mcun",
    Bqrlyyl: "f1exjqw5"
  },
  before: {
    t21cq0: ["f1nizpg2", "f1a695kz"]
  },
  after: {
    Frg6f3: ["f1a695kz", "f1nizpg2"]
  }
}, {
  d: [".fe5j1ua{font-size:20px;}", ".fjamq6b{height:20px;}", ".f64fuq3{width:20px;}", ".fbaiahx{--fui-Button__icon--spacing:var(--spacingHorizontalXS);}", ".f1rt2boy{font-size:24px;}", ".frvgh55{height:24px;}", ".fq4mcun{width:24px;}", ".f1exjqw5{--fui-Button__icon--spacing:var(--spacingHorizontalSNudge);}", ".f1nizpg2{margin-right:var(--fui-Button__icon--spacing);}", ".f1a695kz{margin-left:var(--fui-Button__icon--spacing);}"]
});
var useButtonStyles_unstable = (state) => {
  "use no memo";
  const rootBaseClassName = useRootBaseClassName();
  const iconBaseClassName = useIconBaseClassName();
  const rootStyles = useRootStyles3();
  const rootDisabledStyles = useRootDisabledStyles();
  const rootFocusStyles = useRootFocusStyles();
  const rootIconOnlyStyles = useRootIconOnlyStyles();
  const iconStyles = useIconStyles2();
  const {
    appearance,
    disabled,
    disabledFocusable,
    icon,
    iconOnly,
    iconPosition,
    shape,
    size
  } = state;
  state.root.className = mergeClasses(
    buttonClassNames.root,
    rootBaseClassName,
    appearance && rootStyles[appearance],
    rootStyles[size],
    icon && size === "small" && rootStyles.smallWithIcon,
    icon && size === "large" && rootStyles.largeWithIcon,
    rootStyles[shape],
    // Disabled styles
    (disabled || disabledFocusable) && rootDisabledStyles.base,
    (disabled || disabledFocusable) && rootDisabledStyles.highContrast,
    appearance && (disabled || disabledFocusable) && rootDisabledStyles[appearance],
    // Focus styles
    appearance === "primary" && rootFocusStyles.primary,
    rootFocusStyles[size],
    rootFocusStyles[shape],
    // Icon-only styles
    iconOnly && rootIconOnlyStyles[size],
    // User provided class name
    state.root.className
  );
  if (state.icon) {
    state.icon.className = mergeClasses(buttonClassNames.icon, iconBaseClassName, !!state.root.children && iconStyles[iconPosition], iconStyles[size], state.icon.className);
  }
  return state;
};

// node_modules/@fluentui/react-button/lib/components/Button/Button.js
var Button = React82.forwardRef((props, ref) => {
  const state = useButton_unstable(props, ref);
  useButtonStyles_unstable(state);
  useCustomStyleHook("useButtonStyles_unstable")(state);
  return renderButton_unstable(state);
});
Button.displayName = "Button";

// node_modules/@fluentui/react-button/lib/components/CompoundButton/CompoundButton.js
var React84 = __toESM(require_react());

// node_modules/@fluentui/react-button/lib/components/CompoundButton/renderCompoundButton.js
var renderCompoundButton_unstable = (state) => {
  assertSlots(state);
  const { iconOnly, iconPosition } = state;
  return jsxs(state.root, {
    children: [
      iconPosition !== "after" && state.icon && jsx(state.icon, {}),
      !iconOnly && jsxs(state.contentContainer, {
        children: [
          state.root.children,
          state.secondaryContent && jsx(state.secondaryContent, {})
        ]
      }),
      iconPosition === "after" && state.icon && jsx(state.icon, {})
    ]
  });
};

// node_modules/@fluentui/react-button/lib/components/CompoundButton/useCompoundButton.js
var React83 = __toESM(require_react());
var useCompoundButton_unstable = ({ contentContainer, secondaryContent, ...props }, ref) => {
  var _state_icon, _state_secondaryContent;
  const state = {
    // Button state
    ...useButton_unstable(props, ref),
    // Slots definition
    components: {
      root: "button",
      icon: "span",
      contentContainer: "span",
      secondaryContent: "span"
    },
    contentContainer: slot_exports.always(contentContainer, {
      elementType: "span"
    }),
    secondaryContent: slot_exports.optional(secondaryContent, {
      elementType: "span"
    })
  };
  state.iconOnly = Boolean(((_state_icon = state.icon) === null || _state_icon === void 0 ? void 0 : _state_icon.children) && !props.children && !((_state_secondaryContent = state.secondaryContent) === null || _state_secondaryContent === void 0 ? void 0 : _state_secondaryContent.children));
  return state;
};

// node_modules/@fluentui/react-button/lib/components/CompoundButton/useCompoundButtonStyles.styles.js
var compoundButtonClassNames = {
  root: "fui-CompoundButton",
  icon: "fui-CompoundButton__icon",
  contentContainer: "fui-CompoundButton__contentContainer",
  secondaryContent: "fui-CompoundButton__secondaryContent"
};
var useRootStyles4 = __styles2({
  base: {
    Bqenvij: "f11ysow2",
    J657lq: "f1um431h",
    Jlnjib: "fte7hqw",
    Bc29nj9: "f1yh8ef3"
  },
  highContrast: {
    pu7qz5: "fi3u9nm",
    B10010i: "f1tdgb9w"
  },
  outline: {},
  primary: {
    J657lq: "foe7gw6",
    Jlnjib: "fvxlz81",
    Bc29nj9: "f1c2mdy",
    B8ia98v: "f1r39r2s"
  },
  secondary: {},
  subtle: {
    J657lq: "f1um431h",
    Jlnjib: "fte7hqw",
    Bc29nj9: "f1yh8ef3",
    pu7qz5: "f1xoeh18",
    B10010i: "f1ca1nd7"
  },
  transparent: {
    J657lq: "f1um431h",
    Jlnjib: "f1wn9xqz",
    Bc29nj9: "f1a8q4d0"
  },
  small: {
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f1ge6w2w",
    Be2twd7: "fkhj508",
    Bg96gwp: "f1i3iumi"
  },
  medium: {
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "fnnf4v2",
    Be2twd7: "fkhj508",
    Bg96gwp: "f1i3iumi"
  },
  large: {
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f14s4sho",
    Be2twd7: "fod5ikn",
    Bg96gwp: "faaz57k"
  },
  disabled: {
    J657lq: "f1rlv8bf",
    Jlnjib: "fd1dbtm",
    Bc29nj9: "f1vqmdmi"
  },
  disabledHighContrast: {
    B8ia98v: "f1csacz4",
    pu7qz5: "f1s5tkfe",
    B10010i: "fs0rda3"
  }
}, {
  d: [".f11ysow2{height:auto;}", ".f1um431h .fui-CompoundButton__secondaryContent{color:var(--colorNeutralForeground2);}", ".foe7gw6 .fui-CompoundButton__secondaryContent{color:var(--colorNeutralForegroundOnBrand);}", [".f1ge6w2w{padding:var(--spacingHorizontalS) var(--spacingHorizontalS) var(--spacingHorizontalMNudge) var(--spacingHorizontalS);}", {
    p: -1
  }], ".fkhj508{font-size:var(--fontSizeBase300);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}", [".fnnf4v2{padding:14px var(--spacingHorizontalM) var(--spacingHorizontalL) var(--spacingHorizontalM);}", {
    p: -1
  }], [".f14s4sho{padding:18px var(--spacingHorizontalL) var(--spacingHorizontalXL) var(--spacingHorizontalL);}", {
    p: -1
  }], ".fod5ikn{font-size:var(--fontSizeBase400);}", ".faaz57k{line-height:var(--lineHeightBase400);}", ".f1rlv8bf .fui-CompoundButton__secondaryContent{color:var(--colorNeutralForegroundDisabled);}"],
  h: [".fte7hqw:hover .fui-CompoundButton__secondaryContent{color:var(--colorNeutralForeground2Hover);}", ".f1yh8ef3:hover:active .fui-CompoundButton__secondaryContent{color:var(--colorNeutralForeground2Pressed);}", ".fvxlz81:hover .fui-CompoundButton__secondaryContent{color:var(--colorNeutralForegroundOnBrand);}", ".f1c2mdy:hover:active .fui-CompoundButton__secondaryContent{color:var(--colorNeutralForegroundOnBrand);}", ".f1wn9xqz:hover .fui-CompoundButton__secondaryContent{color:var(--colorNeutralForeground2BrandHover);}", ".f1a8q4d0:hover:active .fui-CompoundButton__secondaryContent{color:var(--colorNeutralForeground2BrandPressed);}", ".fd1dbtm:hover .fui-CompoundButton__secondaryContent{color:var(--colorNeutralForegroundDisabled);}", ".f1vqmdmi:hover:active .fui-CompoundButton__secondaryContent{color:var(--colorNeutralForegroundDisabled);}"],
  m: [["@media (forced-colors: active){.fi3u9nm:hover .fui-CompoundButton__secondaryContent{color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1tdgb9w:hover:active .fui-CompoundButton__secondaryContent{color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1r39r2s .fui-CompoundButton__secondaryContent{color:HighlightText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1xoeh18:hover .fui-CompoundButton__secondaryContent{color:Canvas;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1ca1nd7:hover:active .fui-CompoundButton__secondaryContent{color:Canvas;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1csacz4 .fui-CompoundButton__secondaryContent{color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1s5tkfe:hover .fui-CompoundButton__secondaryContent{color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fs0rda3:hover:active .fui-CompoundButton__secondaryContent{color:GrayText;}}", {
    m: "(forced-colors: active)"
  }]]
});
var useRootIconOnlyStyles2 = __styles2({
  small: {
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f1t35pdg",
    B2u0y6b: "ft5vyj6",
    Bf4jedk: "f17suaiq"
  },
  medium: {
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f1r1wyb6",
    B2u0y6b: "fdczgix",
    Bf4jedk: "fjdcg9m"
  },
  large: {
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f1bnz8pu",
    B2u0y6b: "fww51uw",
    Bf4jedk: "f1qhsl2h"
  }
}, {
  d: [[".f1t35pdg{padding:var(--spacingHorizontalXS);}", {
    p: -1
  }], ".ft5vyj6{max-width:48px;}", ".f17suaiq{min-width:48px;}", [".f1r1wyb6{padding:var(--spacingHorizontalSNudge);}", {
    p: -1
  }], ".fdczgix{max-width:52px;}", ".fjdcg9m{min-width:52px;}", [".f1bnz8pu{padding:var(--spacingHorizontalS);}", {
    p: -1
  }], ".fww51uw{max-width:56px;}", ".f1qhsl2h{min-width:56px;}"]
});
var useIconStyles3 = __styles2({
  base: {
    Be2twd7: "fndrnj9",
    Bqenvij: "fbhnoac",
    a9b677: "feqmc2u"
  },
  before: {
    t21cq0: ["fkujibs", "f199hnxi"]
  },
  after: {
    Frg6f3: ["f199hnxi", "fkujibs"]
  }
}, {
  d: [".fndrnj9{font-size:40px;}", ".fbhnoac{height:40px;}", ".feqmc2u{width:40px;}", ".fkujibs{margin-right:var(--spacingHorizontalM);}", ".f199hnxi{margin-left:var(--spacingHorizontalM);}"]
});
var useContentContainerStyles = __styles2({
  base: {
    mc9l5x: "f22iagw",
    Beiy3e4: "f1vx9l62",
    fsow6f: ["f1o700av", "fes3tcz"]
  }
}, {
  d: [".f22iagw{display:flex;}", ".f1vx9l62{flex-direction:column;}", ".f1o700av{text-align:left;}", ".fes3tcz{text-align:right;}"]
});
var useSecondaryContentStyles = __styles2({
  base: {
    Bg96gwp: "flkuc6h",
    Bhrd7zp: "figsok6"
  },
  small: {
    Be2twd7: "fy9rknc"
  },
  medium: {
    Be2twd7: "fy9rknc"
  },
  large: {
    Be2twd7: "fkhj508"
  }
}, {
  d: [".flkuc6h{line-height:100%;}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".fy9rknc{font-size:var(--fontSizeBase200);}", ".fkhj508{font-size:var(--fontSizeBase300);}"]
});
var useCompoundButtonStyles_unstable = (state) => {
  "use no memo";
  const rootStyles = useRootStyles4();
  const rootIconOnlyStyles = useRootIconOnlyStyles2();
  const iconStyles = useIconStyles3();
  const contentContainerStyles = useContentContainerStyles();
  const secondaryContentStyles = useSecondaryContentStyles();
  const {
    appearance,
    disabled,
    disabledFocusable,
    iconOnly,
    iconPosition,
    size
  } = state;
  state.root.className = mergeClasses(
    compoundButtonClassNames.root,
    // Root styles
    rootStyles.base,
    rootStyles.highContrast,
    appearance && rootStyles[appearance],
    rootStyles[size],
    // Disabled styles
    (disabled || disabledFocusable) && rootStyles.disabled,
    (disabled || disabledFocusable) && rootStyles.disabledHighContrast,
    // Icon-only styles
    iconOnly && rootIconOnlyStyles[size],
    // User provided class name
    state.root.className
  );
  state.contentContainer.className = mergeClasses(compoundButtonClassNames.contentContainer, contentContainerStyles.base, state.contentContainer.className);
  if (state.icon) {
    state.icon.className = mergeClasses(compoundButtonClassNames.icon, iconStyles.base, state.root.children !== void 0 && state.root.children !== null && iconStyles[iconPosition], state.icon.className);
  }
  if (state.secondaryContent) {
    state.secondaryContent.className = mergeClasses(compoundButtonClassNames.secondaryContent, secondaryContentStyles.base, secondaryContentStyles[size], state.secondaryContent.className);
  }
  useButtonStyles_unstable(state);
  return state;
};

// node_modules/@fluentui/react-button/lib/components/CompoundButton/CompoundButton.js
var CompoundButton = React84.forwardRef((props, ref) => {
  const state = useCompoundButton_unstable(props, ref);
  useCompoundButtonStyles_unstable(state);
  useCustomStyleHook("useCompoundButtonStyles_unstable")(state);
  return renderCompoundButton_unstable(state);
});
CompoundButton.displayName = "CompoundButton";

// node_modules/@fluentui/react-button/lib/components/MenuButton/MenuButton.js
var React86 = __toESM(require_react());

// node_modules/@fluentui/react-button/lib/components/MenuButton/renderMenuButton.js
var renderMenuButton_unstable = (state) => {
  assertSlots(state);
  const { icon, iconOnly } = state;
  return jsxs(state.root, {
    children: [
      state.icon && jsx(state.icon, {}),
      !iconOnly && state.root.children,
      (!iconOnly || !(icon === null || icon === void 0 ? void 0 : icon.children)) && state.menuIcon && jsx(state.menuIcon, {})
    ]
  });
};

// node_modules/@fluentui/react-button/lib/components/MenuButton/useMenuButton.js
var React85 = __toESM(require_react());
var useMenuButton_unstable = ({ menuIcon, ...props }, ref) => {
  "use no memo";
  const buttonState = useButton_unstable(props, ref);
  buttonState.root["aria-expanded"] = props["aria-expanded"] ? props["aria-expanded"] === "true" || props["aria-expanded"] === true : false;
  return {
    // Button state
    ...buttonState,
    // State calculated from a set of props
    iconOnly: Boolean(!props.children),
    // Slots definition
    components: {
      root: "button",
      icon: "span",
      menuIcon: "span"
    },
    menuIcon: slot_exports.optional(menuIcon, {
      defaultProps: {
        children: React85.createElement(ChevronDownRegular, null)
      },
      renderByDefault: true,
      elementType: "span"
    })
  };
};

// node_modules/@fluentui/react-button/lib/components/MenuButton/useMenuButtonStyles.styles.js
var menuButtonClassNames = {
  root: "fui-MenuButton",
  icon: "fui-MenuButton__icon",
  menuIcon: "fui-MenuButton__menuIcon"
};
var useRootExpandedStyles = __styles2({
  base: {
    D0sxk3: "fxoiby5",
    t6yez3: "f15q0o9g"
  },
  outline: {
    g2u3we: "f1ly1fcm",
    h3c5rm: ["fi8bssc", "fj6btzu"],
    B9xav0g: "f1s9tnsa",
    zhjwy3: ["fj6btzu", "fi8bssc"],
    B4j52fo: "fgx37oo",
    Bekrc4i: ["f130t4y6", "f1efpmoh"],
    Bn0qgzm: "fv51ejd",
    ibv6hh: ["f1efpmoh", "f130t4y6"],
    sj55zd: "f14nttnl"
  },
  primary: {
    De3pzq: "f8w4g0q"
  },
  secondary: {
    De3pzq: "f1nfm20t",
    g2u3we: "f1ly1fcm",
    h3c5rm: ["fi8bssc", "fj6btzu"],
    B9xav0g: "f1s9tnsa",
    zhjwy3: ["fj6btzu", "fi8bssc"],
    sj55zd: "f14nttnl"
  },
  subtle: {
    De3pzq: "fq5gl1p",
    sj55zd: "f1eryozh"
  },
  transparent: {
    De3pzq: "f1q9pm1r",
    sj55zd: "f1qj7y59"
  }
}, {
  d: [".fxoiby5 .fui-Icon-filled{display:inline;}", ".f15q0o9g .fui-Icon-regular{display:none;}", ".f1ly1fcm{border-top-color:var(--colorNeutralStroke1Selected);}", ".fi8bssc{border-right-color:var(--colorNeutralStroke1Selected);}", ".fj6btzu{border-left-color:var(--colorNeutralStroke1Selected);}", ".f1s9tnsa{border-bottom-color:var(--colorNeutralStroke1Selected);}", ".fgx37oo{border-top-width:var(--strokeWidthThicker);}", ".f130t4y6{border-right-width:var(--strokeWidthThicker);}", ".f1efpmoh{border-left-width:var(--strokeWidthThicker);}", ".fv51ejd{border-bottom-width:var(--strokeWidthThicker);}", ".f14nttnl{color:var(--colorNeutralForeground1Selected);}", ".f8w4g0q{background-color:var(--colorBrandBackgroundSelected);}", ".f1nfm20t{background-color:var(--colorNeutralBackground1Selected);}", ".fq5gl1p{background-color:var(--colorSubtleBackgroundSelected);}", ".f1eryozh{color:var(--colorNeutralForeground2Selected);}", ".f1q9pm1r{background-color:var(--colorTransparentBackgroundSelected);}", ".f1qj7y59{color:var(--colorNeutralForeground2BrandSelected);}"]
});
var useIconExpandedStyles = __styles2({
  outline: {
    sj55zd: "f14nttnl"
  },
  primary: {},
  secondary: {
    sj55zd: "f14nttnl"
  },
  subtle: {
    sj55zd: "f1qj7y59"
  },
  transparent: {
    sj55zd: "f1qj7y59"
  },
  highContrast: {
    ze5xyy: "f4xjyn1"
  }
}, {
  d: [".f14nttnl{color:var(--colorNeutralForeground1Selected);}", ".f1qj7y59{color:var(--colorNeutralForeground2BrandSelected);}"],
  m: [["@media (forced-colors: active){.f4xjyn1:hover{color:Highlight;}}", {
    m: "(forced-colors: active)"
  }]]
});
var useMenuIconStyles = __styles2({
  base: {
    Bg96gwp: "fez10in"
  },
  small: {
    Be2twd7: "f1ugzwwg",
    Bqenvij: "fvblgha",
    Bg96gwp: "fwrc4pm",
    a9b677: "frx94fk"
  },
  medium: {
    Be2twd7: "f1ugzwwg",
    Bqenvij: "fvblgha",
    Bg96gwp: "fwrc4pm",
    a9b677: "frx94fk"
  },
  large: {
    Be2twd7: "f4ybsrx",
    Bqenvij: "fd461yt",
    Bg96gwp: "faaz57k",
    a9b677: "fjw5fx7"
  },
  notIconOnly: {
    Frg6f3: ["fbyavb5", "fm0x6gh"]
  }
}, {
  d: [".fez10in{line-height:0;}", ".f1ugzwwg{font-size:12px;}", ".fvblgha{height:12px;}", ".fwrc4pm{line-height:var(--lineHeightBase200);}", ".frx94fk{width:12px;}", ".f4ybsrx{font-size:16px;}", ".fd461yt{height:16px;}", ".faaz57k{line-height:var(--lineHeightBase400);}", ".fjw5fx7{width:16px;}", ".fbyavb5{margin-left:var(--spacingHorizontalXS);}", ".fm0x6gh{margin-right:var(--spacingHorizontalXS);}"]
});
var useMenuButtonStyles_unstable = (state) => {
  "use no memo";
  const rootExpandedStyles = useRootExpandedStyles();
  const iconExpandedStyles = useIconExpandedStyles();
  const menuIconStyles = useMenuIconStyles();
  state.root.className = mergeClasses(menuButtonClassNames.root, state.root["aria-expanded"] && rootExpandedStyles.base, state.root["aria-expanded"] && rootExpandedStyles[state.appearance], state.root.className);
  if (state.icon) {
    state.icon.className = mergeClasses(menuButtonClassNames.icon, state.root["aria-expanded"] && iconExpandedStyles[state.appearance] && iconExpandedStyles.highContrast, state.icon.className);
  }
  if (state.menuIcon) {
    state.menuIcon.className = mergeClasses(menuButtonClassNames.menuIcon, menuIconStyles.base, menuIconStyles[state.size], !state.iconOnly && menuIconStyles.notIconOnly, state.menuIcon.className);
  }
  useButtonStyles_unstable({
    ...state,
    iconPosition: "before"
  });
  return state;
};

// node_modules/@fluentui/react-button/lib/components/MenuButton/MenuButton.js
var MenuButton = React86.forwardRef((props, ref) => {
  const state = useMenuButton_unstable(props, ref);
  useMenuButtonStyles_unstable(state);
  useCustomStyleHook("useMenuButtonStyles_unstable")(state);
  return renderMenuButton_unstable(state);
});
MenuButton.displayName = "MenuButton";

// node_modules/@fluentui/react-button/lib/components/SplitButton/SplitButton.js
var React88 = __toESM(require_react());

// node_modules/@fluentui/react-button/lib/components/SplitButton/renderSplitButton.js
var renderSplitButton_unstable = (state) => {
  assertSlots(state);
  return jsxs(state.root, {
    children: [
      state.primaryActionButton && jsx(state.primaryActionButton, {}),
      state.menuButton && jsx(state.menuButton, {})
    ]
  });
};

// node_modules/@fluentui/react-button/lib/components/SplitButton/useSplitButton.js
var React87 = __toESM(require_react());
var useSplitButton_unstable = (props, ref) => {
  const { appearance = "secondary", children: children2, disabled = false, disabledFocusable = false, icon, iconPosition = "before", menuButton, menuIcon, primaryActionButton, shape = "rounded", size = "medium" } = props;
  const baseId = useId("splitButton-");
  const menuButtonShorthand = slot_exports.optional(menuButton, {
    defaultProps: {
      appearance,
      disabled,
      disabledFocusable,
      menuIcon,
      shape,
      size
    },
    renderByDefault: true,
    elementType: MenuButton
  });
  const primaryActionButtonShorthand = slot_exports.optional(primaryActionButton, {
    defaultProps: {
      appearance,
      children: children2,
      disabled,
      disabledFocusable,
      icon,
      iconPosition,
      id: baseId + "__primaryActionButton",
      shape,
      size
    },
    renderByDefault: true,
    elementType: Button
  });
  if (menuButtonShorthand && primaryActionButtonShorthand && !menuButtonShorthand["aria-label"] && !menuButtonShorthand["aria-labelledby"]) {
    menuButtonShorthand["aria-labelledby"] = primaryActionButtonShorthand.id;
  }
  return {
    // Props passed at the top-level
    appearance,
    disabled,
    disabledFocusable,
    iconPosition,
    shape,
    size,
    components: {
      root: "div",
      menuButton: MenuButton,
      primaryActionButton: Button
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      ref,
      ...props
    }), {
      elementType: "div"
    }),
    menuButton: menuButtonShorthand,
    primaryActionButton: primaryActionButtonShorthand
  };
};

// node_modules/@fluentui/react-button/lib/components/SplitButton/useSplitButtonStyles.styles.js
var splitButtonClassNames = {
  root: "fui-SplitButton",
  menuButton: "fui-SplitButton__menuButton",
  primaryActionButton: "fui-SplitButton__primaryActionButton"
};
var useFocusStyles = __styles2({
  primaryActionButton: {
    B6xbmo0: ["f1x37qnr", "f1um7c6d"],
    kdpuga: ["fn4c73s", "f6pwzcr"]
  },
  menuButton: {
    lbo84a: ["frrbwxo", "f1rgcpbv"],
    dm238s: ["f1um7c6d", "f1x37qnr"],
    Bw81rd7: ["f6pwzcr", "fn4c73s"]
  }
}, {
  d: [".f1x37qnr[data-fui-focus-visible]{border-top-right-radius:0;}", ".f1um7c6d[data-fui-focus-visible]{border-top-left-radius:0;}", ".fn4c73s[data-fui-focus-visible]{border-bottom-right-radius:0;}", ".f6pwzcr[data-fui-focus-visible]{border-bottom-left-radius:0;}", ".frrbwxo[data-fui-focus-visible]{border-left-width:0;}", ".f1rgcpbv[data-fui-focus-visible]{border-right-width:0;}"]
});
var useRootStyles5 = __styles2({
  base: {
    mc9l5x: "ftuwxu6",
    Brf1p80: "fsxf2b5",
    qhf8xq: "f10pi13n",
    ha4doy: "fmrv4ls",
    kn2xc0: ["f14uur2j", "fc1btbj"],
    Bs76p8a: ["fye5tvs", "fc597qq"],
    cuxpm9: ["f1e8brtx", "fr36rk3"],
    Biffepf: ["fxp12j1", "f1m6nt2y"],
    Defnvf: ["fr7y8no", "f1dn0c6m"],
    z0pv9t: "f1b65x5h"
  },
  outline: {},
  primary: {
    B1l9wao: ["f4rm5b0", "f1tuwo13"],
    lcnrd8: ["fdwdeeo", "f1ezdslh"],
    Brbpp8k: ["fckzjn8", "f8ohr2i"],
    Bcsxniv: ["ff0tx2l", "fnrj3rw"],
    tl7e51: ["f3jppgx", "f1m2s8ie"],
    mba178: ["f96h41g", "fdxf0pi"]
  },
  secondary: {},
  subtle: {
    B1l9wao: ["fbw67pg", "fcas6k2"],
    lcnrd8: ["fn44ryq", "fwhhltr"],
    Brbpp8k: ["f1xppm0p", "fkfp127"]
  },
  transparent: {
    B1l9wao: ["fbw67pg", "fcas6k2"],
    lcnrd8: ["fn44ryq", "fwhhltr"],
    Brbpp8k: ["f1xppm0p", "fkfp127"]
  },
  circular: {},
  rounded: {},
  square: {},
  disabled: {
    B1l9wao: ["f10xrnr8", "f15nylwb"],
    lcnrd8: ["f11fwhjz", "f18vtcsx"],
    Brbpp8k: ["f31btwb", "fzgm9gq"]
  },
  disabledHighContrast: {
    Bcsxniv: ["fj2q5vi", "f13tct40"],
    tl7e51: ["fb2mzc7", "f179dhpp"],
    mba178: ["f1ma39qa", "f1nzpdru"]
  }
}, {
  d: [".ftuwxu6{display:inline-flex;}", ".fsxf2b5{justify-content:stretch;}", ".f10pi13n{position:relative;}", ".fmrv4ls{vertical-align:middle;}", ".f14uur2j .fui-SplitButton__primaryActionButton{border-top-right-radius:0;}", ".fc1btbj .fui-SplitButton__primaryActionButton{border-top-left-radius:0;}", ".fye5tvs .fui-SplitButton__primaryActionButton{border-bottom-right-radius:0;}", ".fc597qq .fui-SplitButton__primaryActionButton{border-bottom-left-radius:0;}", ".f1e8brtx .fui-SplitButton__menuButton{border-left-width:0;}", ".fr36rk3 .fui-SplitButton__menuButton{border-right-width:0;}", ".fxp12j1 .fui-SplitButton__menuButton{border-top-left-radius:0;}", ".f1m6nt2y .fui-SplitButton__menuButton{border-top-right-radius:0;}", ".fr7y8no .fui-SplitButton__menuButton{border-bottom-left-radius:0;}", ".f1dn0c6m .fui-SplitButton__menuButton{border-bottom-right-radius:0;}", ".f1b65x5h .fui-SplitButton__menuButton{min-width:24px;}", ".f4rm5b0 .fui-SplitButton__primaryActionButton{border-right-color:var(--colorNeutralStrokeOnBrand);}", ".f1tuwo13 .fui-SplitButton__primaryActionButton{border-left-color:var(--colorNeutralStrokeOnBrand);}", ".fbw67pg .fui-SplitButton__primaryActionButton{border-right-color:var(--colorNeutralStroke1);}", ".fcas6k2 .fui-SplitButton__primaryActionButton{border-left-color:var(--colorNeutralStroke1);}", ".f10xrnr8 .fui-SplitButton__primaryActionButton{border-right-color:var(--colorNeutralStrokeDisabled);}", ".f15nylwb .fui-SplitButton__primaryActionButton{border-left-color:var(--colorNeutralStrokeDisabled);}"],
  h: [".fdwdeeo:hover .fui-SplitButton__primaryActionButton{border-right-color:var(--colorNeutralStrokeOnBrand);}", ".f1ezdslh:hover .fui-SplitButton__primaryActionButton{border-left-color:var(--colorNeutralStrokeOnBrand);}", ".fckzjn8:hover:active .fui-SplitButton__primaryActionButton{border-right-color:var(--colorNeutralStrokeOnBrand);}", ".f8ohr2i:hover:active .fui-SplitButton__primaryActionButton{border-left-color:var(--colorNeutralStrokeOnBrand);}", ".fn44ryq:hover .fui-SplitButton__primaryActionButton{border-right-color:var(--colorNeutralStroke1Hover);}", ".fwhhltr:hover .fui-SplitButton__primaryActionButton{border-left-color:var(--colorNeutralStroke1Hover);}", ".f1xppm0p:hover:active .fui-SplitButton__primaryActionButton{border-right-color:var(--colorNeutralStroke1Pressed);}", ".fkfp127:hover:active .fui-SplitButton__primaryActionButton{border-left-color:var(--colorNeutralStroke1Pressed);}", ".f11fwhjz:hover .fui-SplitButton__primaryActionButton{border-right-color:var(--colorNeutralStrokeDisabled);}", ".f18vtcsx:hover .fui-SplitButton__primaryActionButton{border-left-color:var(--colorNeutralStrokeDisabled);}", ".f31btwb:hover:active .fui-SplitButton__primaryActionButton{border-right-color:var(--colorNeutralStrokeDisabled);}", ".fzgm9gq:hover:active .fui-SplitButton__primaryActionButton{border-left-color:var(--colorNeutralStrokeDisabled);}"],
  m: [["@media (forced-colors: active){.ff0tx2l .fui-SplitButton__primaryActionButton{border-right-color:HighlightText;}.fnrj3rw .fui-SplitButton__primaryActionButton{border-left-color:HighlightText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1m2s8ie:hover .fui-SplitButton__primaryActionButton{border-left-color:Highlight;}.f3jppgx:hover .fui-SplitButton__primaryActionButton{border-right-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f96h41g:hover:active .fui-SplitButton__primaryActionButton{border-right-color:Highlight;}.fdxf0pi:hover:active .fui-SplitButton__primaryActionButton{border-left-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f13tct40 .fui-SplitButton__primaryActionButton{border-left-color:GrayText;}.fj2q5vi .fui-SplitButton__primaryActionButton{border-right-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f179dhpp:hover .fui-SplitButton__primaryActionButton{border-left-color:GrayText;}.fb2mzc7:hover .fui-SplitButton__primaryActionButton{border-right-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1ma39qa:hover:active .fui-SplitButton__primaryActionButton{border-right-color:GrayText;}.f1nzpdru:hover:active .fui-SplitButton__primaryActionButton{border-left-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }]]
});
var useSplitButtonStyles_unstable = (state) => {
  "use no memo";
  const rootStyles = useRootStyles5();
  const focusStyles = useFocusStyles();
  const {
    appearance,
    disabled,
    disabledFocusable
  } = state;
  state.root.className = mergeClasses(splitButtonClassNames.root, rootStyles.base, appearance && rootStyles[appearance], (disabled || disabledFocusable) && rootStyles.disabled, (disabled || disabledFocusable) && rootStyles.disabledHighContrast, state.root.className);
  if (state.menuButton) {
    state.menuButton.className = mergeClasses(splitButtonClassNames.menuButton, focusStyles.menuButton, state.menuButton.className);
  }
  if (state.primaryActionButton) {
    state.primaryActionButton.className = mergeClasses(splitButtonClassNames.primaryActionButton, focusStyles.primaryActionButton, state.primaryActionButton.className);
  }
  return state;
};

// node_modules/@fluentui/react-button/lib/components/SplitButton/SplitButton.js
var SplitButton = React88.forwardRef((props, ref) => {
  const state = useSplitButton_unstable(props, ref);
  useSplitButtonStyles_unstable(state);
  useCustomStyleHook("useSplitButtonStyles_unstable")(state);
  return renderSplitButton_unstable(state);
});
SplitButton.displayName = "SplitButton";

// node_modules/@fluentui/react-button/lib/components/ToggleButton/ToggleButton.js
var React91 = __toESM(require_react());

// node_modules/@fluentui/react-button/lib/components/ToggleButton/useToggleButton.js
var React90 = __toESM(require_react());

// node_modules/@fluentui/react-button/lib/utils/useToggleState.js
var React89 = __toESM(require_react());
function useToggleState(props, state) {
  const { checked, defaultChecked, disabled, disabledFocusable } = props;
  const { onClick, role } = state.root;
  const [checkedValue, setCheckedValue] = useControllableState({
    state: checked,
    defaultState: defaultChecked,
    initialState: false
  });
  const isCheckboxTypeRole = role === "menuitemcheckbox" || role === "checkbox";
  const onToggleClick = React89.useCallback((ev) => {
    if (!disabled && !disabledFocusable) {
      if (ev.defaultPrevented) {
        return;
      }
      setCheckedValue(!checkedValue);
    }
  }, [
    checkedValue,
    disabled,
    disabledFocusable,
    setCheckedValue
  ]);
  return {
    ...state,
    checked: checkedValue,
    root: {
      ...state.root,
      [isCheckboxTypeRole ? "aria-checked" : "aria-pressed"]: checkedValue,
      onClick: useEventCallback(mergeCallbacks(onClick, onToggleClick))
    }
  };
}

// node_modules/@fluentui/react-button/lib/components/ToggleButton/useToggleButton.js
var useToggleButton_unstable = (props, ref) => {
  const buttonState = useButton_unstable(props, ref);
  return useToggleState(props, buttonState);
};

// node_modules/@fluentui/react-button/lib/components/ToggleButton/useToggleButtonStyles.styles.js
var toggleButtonClassNames = {
  root: "fui-ToggleButton",
  icon: "fui-ToggleButton__icon"
};
var useRootCheckedStyles = __styles2({
  base: {
    De3pzq: "f1nfm20t",
    g2u3we: "fj3muxo",
    h3c5rm: ["f1akhkt", "f1lxtadh"],
    B9xav0g: "f1aperda",
    zhjwy3: ["f1lxtadh", "f1akhkt"],
    sj55zd: "f14nttnl",
    B4j52fo: "f192inf7",
    Bekrc4i: ["f5tn483", "f1ojsxk5"],
    Bn0qgzm: "f1vxd6vx",
    ibv6hh: ["f1ojsxk5", "f5tn483"],
    D0sxk3: "fxoiby5",
    t6yez3: "f15q0o9g",
    Jwef8y: "f1knas48",
    Bgoe8wy: "fvcxoqz",
    Bwzppfd: ["f1ub3y4t", "f1m52nbi"],
    oetu4i: "f1xlaoq0",
    gg5e9n: ["f1m52nbi", "f1ub3y4t"],
    Bi91k9c: "feu1g3u",
    iro3zm: "f141de4g",
    b661bw: "f11v6sdu",
    Bk6r4ia: ["f9yn8i4", "f1ajwf28"],
    B9zn80p: "f1uwu36w",
    Bpld233: ["f1ajwf28", "f9yn8i4"],
    B2d53fq: "f9olfzr"
  },
  highContrast: {
    Bsw6fvg: "f1rirnrt",
    Bjwas2f: "f132fbg1",
    Bn1d65q: ["f1ene5x0", "fzbc999"],
    Bxeuatn: "f6jgcol",
    n51gp8: ["fzbc999", "f1ene5x0"],
    Bbusuzp: "f1lkg8j3",
    ycbfsm: "fkc42ay",
    Bqrx1nm: "fq7113v",
    pgvf35: "ff1wgvm",
    Bh7lczh: ["fiob0tu", "f1x4h75k"],
    dpv3f4: "f1j6scgf",
    Bpnjhaq: ["f1x4h75k", "fiob0tu"],
    ze5xyy: "f4xjyn1",
    g2kj27: "fbgcvur",
    Bf756sw: "f1ks1yx8",
    Bow2dr7: ["f1o6qegi", "fmxjhhp"],
    Bvhedfk: "fcnxywj",
    Gye4lf: ["fmxjhhp", "f1o6qegi"],
    pc6evw: "f9ddjv3",
    F3bflw: 0,
    mxns5l: 0,
    B0tp99d: 0,
    l9kbep: 0,
    Bg4echp: 0,
    o3nasb: 0,
    B55dcl7: 0,
    By5cl00: 0,
    Bnk1xnq: 0,
    gdbnj: 0,
    Bw5jppy: 0,
    B8jyv7h: 0,
    ka51wi: 0,
    G867l3: 0,
    abbn9y: 0,
    Btyszwp: 0,
    Bi9mhhg: "f1mh9o5k",
    B7d2ofm: "fkom8lu"
  },
  outline: {
    De3pzq: "f1q9pm1r",
    g2u3we: "fj3muxo",
    h3c5rm: ["f1akhkt", "f1lxtadh"],
    B9xav0g: "f1aperda",
    zhjwy3: ["f1lxtadh", "f1akhkt"],
    B4j52fo: "fgx37oo",
    Bekrc4i: ["f130t4y6", "f1efpmoh"],
    Bn0qgzm: "fv51ejd",
    ibv6hh: ["f1efpmoh", "f130t4y6"],
    Jwef8y: "fjxutwb",
    iro3zm: "fwiml72",
    B8q5s1w: "fcaw57c",
    Bci5o5g: ["fpwd27e", "f1999bjr"],
    n8qw10: "f1hi52o4",
    Bdrgwmp: ["f1999bjr", "fpwd27e"]
  },
  primary: {
    De3pzq: "f8w4g0q",
    g2u3we: "f1p3nwhy",
    h3c5rm: ["f11589ue", "f1pdflbu"],
    B9xav0g: "f1q5o8ev",
    zhjwy3: ["f1pdflbu", "f11589ue"],
    sj55zd: "f1phragk",
    Jwef8y: "f15wkkf3",
    Bgoe8wy: "f1s2uweq",
    Bwzppfd: ["fr80ssc", "fecsdlb"],
    oetu4i: "f1ukrpxl",
    gg5e9n: ["fecsdlb", "fr80ssc"],
    Bi91k9c: "f1rq72xc",
    iro3zm: "fnp9lpt",
    b661bw: "f1h0usnq",
    Bk6r4ia: ["fs4ktlq", "fx2bmrt"],
    B9zn80p: "f16h9ulv",
    Bpld233: ["fx2bmrt", "fs4ktlq"],
    B2d53fq: "f1d6v5y2"
  },
  secondary: {},
  subtle: {
    De3pzq: "fq5gl1p",
    g2u3we: "f1p3nwhy",
    h3c5rm: ["f11589ue", "f1pdflbu"],
    B9xav0g: "f1q5o8ev",
    zhjwy3: ["f1pdflbu", "f11589ue"],
    sj55zd: "f1eryozh",
    Jwef8y: "f1t94bn6",
    Bgoe8wy: "f1s2uweq",
    Bwzppfd: ["fr80ssc", "fecsdlb"],
    oetu4i: "f1ukrpxl",
    gg5e9n: ["fecsdlb", "fr80ssc"],
    Bi91k9c: "fnwyq0v",
    iro3zm: "fsv2rcd",
    b661bw: "f1h0usnq",
    Bk6r4ia: ["fs4ktlq", "fx2bmrt"],
    B9zn80p: "f16h9ulv",
    Bpld233: ["fx2bmrt", "fs4ktlq"],
    B2d53fq: "f1omzyqd"
  },
  transparent: {
    De3pzq: "f1q9pm1r",
    g2u3we: "f1p3nwhy",
    h3c5rm: ["f11589ue", "f1pdflbu"],
    B9xav0g: "f1q5o8ev",
    zhjwy3: ["f1pdflbu", "f11589ue"],
    sj55zd: "f1qj7y59",
    Jwef8y: "fjxutwb",
    Bgoe8wy: "f1s2uweq",
    Bwzppfd: ["fr80ssc", "fecsdlb"],
    oetu4i: "f1ukrpxl",
    gg5e9n: ["fecsdlb", "fr80ssc"],
    Bi91k9c: "f139oj5f",
    iro3zm: "fwiml72",
    b661bw: "f1h0usnq",
    Bk6r4ia: ["fs4ktlq", "fx2bmrt"],
    B9zn80p: "f16h9ulv",
    Bpld233: ["fx2bmrt", "fs4ktlq"],
    B2d53fq: "f1fg1p5m"
  }
}, {
  d: [".f1nfm20t{background-color:var(--colorNeutralBackground1Selected);}", ".fj3muxo{border-top-color:var(--colorNeutralStroke1);}", ".f1akhkt{border-right-color:var(--colorNeutralStroke1);}", ".f1lxtadh{border-left-color:var(--colorNeutralStroke1);}", ".f1aperda{border-bottom-color:var(--colorNeutralStroke1);}", ".f14nttnl{color:var(--colorNeutralForeground1Selected);}", ".f192inf7{border-top-width:var(--strokeWidthThin);}", ".f5tn483{border-right-width:var(--strokeWidthThin);}", ".f1ojsxk5{border-left-width:var(--strokeWidthThin);}", ".f1vxd6vx{border-bottom-width:var(--strokeWidthThin);}", ".fxoiby5 .fui-Icon-filled{display:inline;}", ".f15q0o9g .fui-Icon-regular{display:none;}", ".f1q9pm1r{background-color:var(--colorTransparentBackgroundSelected);}", ".fgx37oo{border-top-width:var(--strokeWidthThicker);}", ".f130t4y6{border-right-width:var(--strokeWidthThicker);}", ".f1efpmoh{border-left-width:var(--strokeWidthThicker);}", ".fv51ejd{border-bottom-width:var(--strokeWidthThicker);}", ".fcaw57c[data-fui-focus-visible]{border-top-color:var(--colorNeutralStroke1);}", ".fpwd27e[data-fui-focus-visible]{border-right-color:var(--colorNeutralStroke1);}", ".f1999bjr[data-fui-focus-visible]{border-left-color:var(--colorNeutralStroke1);}", ".f1hi52o4[data-fui-focus-visible]{border-bottom-color:var(--colorNeutralStroke1);}", ".f8w4g0q{background-color:var(--colorBrandBackgroundSelected);}", ".f1p3nwhy{border-top-color:transparent;}", ".f11589ue{border-right-color:transparent;}", ".f1pdflbu{border-left-color:transparent;}", ".f1q5o8ev{border-bottom-color:transparent;}", ".f1phragk{color:var(--colorNeutralForegroundOnBrand);}", ".fq5gl1p{background-color:var(--colorSubtleBackgroundSelected);}", ".f1eryozh{color:var(--colorNeutralForeground2Selected);}", ".f1qj7y59{color:var(--colorNeutralForeground2BrandSelected);}"],
  h: [".f1knas48:hover{background-color:var(--colorNeutralBackground1Hover);}", ".fvcxoqz:hover{border-top-color:var(--colorNeutralStroke1Hover);}", ".f1ub3y4t:hover{border-right-color:var(--colorNeutralStroke1Hover);}", ".f1m52nbi:hover{border-left-color:var(--colorNeutralStroke1Hover);}", ".f1xlaoq0:hover{border-bottom-color:var(--colorNeutralStroke1Hover);}", ".feu1g3u:hover{color:var(--colorNeutralForeground1Hover);}", ".f141de4g:hover:active{background-color:var(--colorNeutralBackground1Pressed);}", ".f11v6sdu:hover:active{border-top-color:var(--colorNeutralStroke1Pressed);}", ".f9yn8i4:hover:active{border-right-color:var(--colorNeutralStroke1Pressed);}", ".f1ajwf28:hover:active{border-left-color:var(--colorNeutralStroke1Pressed);}", ".f1uwu36w:hover:active{border-bottom-color:var(--colorNeutralStroke1Pressed);}", ".f9olfzr:hover:active{color:var(--colorNeutralForeground1Pressed);}", ".fjxutwb:hover{background-color:var(--colorTransparentBackgroundHover);}", ".fwiml72:hover:active{background-color:var(--colorTransparentBackgroundPressed);}", ".f15wkkf3:hover{background-color:var(--colorBrandBackgroundHover);}", ".f1s2uweq:hover{border-top-color:transparent;}", ".fr80ssc:hover{border-right-color:transparent;}", ".fecsdlb:hover{border-left-color:transparent;}", ".f1ukrpxl:hover{border-bottom-color:transparent;}", ".f1rq72xc:hover{color:var(--colorNeutralForegroundOnBrand);}", ".fnp9lpt:hover:active{background-color:var(--colorBrandBackgroundPressed);}", ".f1h0usnq:hover:active{border-top-color:transparent;}", ".fs4ktlq:hover:active{border-right-color:transparent;}", ".fx2bmrt:hover:active{border-left-color:transparent;}", ".f16h9ulv:hover:active{border-bottom-color:transparent;}", ".f1d6v5y2:hover:active{color:var(--colorNeutralForegroundOnBrand);}", ".f1t94bn6:hover{background-color:var(--colorSubtleBackgroundHover);}", ".fnwyq0v:hover{color:var(--colorNeutralForeground2Hover);}", ".fsv2rcd:hover:active{background-color:var(--colorSubtleBackgroundPressed);}", ".f1omzyqd:hover:active{color:var(--colorNeutralForeground2Pressed);}", ".f139oj5f:hover{color:var(--colorNeutralForeground2BrandHover);}", ".f1fg1p5m:hover:active{color:var(--colorNeutralForeground2BrandPressed);}"],
  m: [["@media (forced-colors: active){.f1rirnrt{background-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f132fbg1{border-top-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1ene5x0{border-right-color:Highlight;}.fzbc999{border-left-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f6jgcol{border-bottom-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1lkg8j3{color:HighlightText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fkc42ay{forced-color-adjust:none;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fq7113v:hover{background-color:HighlightText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.ff1wgvm:hover{border-top-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1x4h75k:hover{border-left-color:Highlight;}.fiob0tu:hover{border-right-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1j6scgf:hover{border-bottom-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f4xjyn1:hover{color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fbgcvur:hover:active{background-color:HighlightText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1ks1yx8:hover:active{border-top-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1o6qegi:hover:active{border-right-color:Highlight;}.fmxjhhp:hover:active{border-left-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fcnxywj:hover:active{border-bottom-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f9ddjv3:hover:active{color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1mh9o5k:focus{border:1px solid HighlightText;}}", {
    p: -2,
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fkom8lu:focus{outline-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }]]
});
var useRootDisabledStyles2 = __styles2({
  base: {
    De3pzq: "f1bg9a2p",
    g2u3we: "f1jj8ep1",
    h3c5rm: ["f15xbau", "fy0fskl"],
    B9xav0g: "f4ikngz",
    zhjwy3: ["fy0fskl", "f15xbau"],
    sj55zd: "f1s2aq7o",
    Jwef8y: "f1falr9n",
    Bgoe8wy: "f12mpcsy",
    Bwzppfd: ["f1gwvigk", "f18rmfxp"],
    oetu4i: "f1jnshp0",
    gg5e9n: ["f18rmfxp", "f1gwvigk"],
    Bi91k9c: "fvgxktp",
    iro3zm: "f1t6o4dc",
    b661bw: "f10ztigi",
    Bk6r4ia: ["f1ft5sdu", "f1gzf82w"],
    B9zn80p: "f12zbtn2",
    Bpld233: ["f1gzf82w", "f1ft5sdu"],
    B2d53fq: "fcvwxyo"
  },
  outline: {},
  primary: {
    g2u3we: "f1p3nwhy",
    h3c5rm: ["f11589ue", "f1pdflbu"],
    B9xav0g: "f1q5o8ev",
    zhjwy3: ["f1pdflbu", "f11589ue"],
    Bgoe8wy: "f1s2uweq",
    Bwzppfd: ["fr80ssc", "fecsdlb"],
    oetu4i: "f1ukrpxl",
    gg5e9n: ["fecsdlb", "fr80ssc"],
    b661bw: "f1h0usnq",
    Bk6r4ia: ["fs4ktlq", "fx2bmrt"],
    B9zn80p: "f16h9ulv",
    Bpld233: ["fx2bmrt", "fs4ktlq"]
  },
  secondary: {},
  subtle: {
    De3pzq: "f1c21dwh",
    g2u3we: "f1p3nwhy",
    h3c5rm: ["f11589ue", "f1pdflbu"],
    B9xav0g: "f1q5o8ev",
    zhjwy3: ["f1pdflbu", "f11589ue"],
    Jwef8y: "fjxutwb",
    Bgoe8wy: "f1s2uweq",
    Bwzppfd: ["fr80ssc", "fecsdlb"],
    oetu4i: "f1ukrpxl",
    gg5e9n: ["fecsdlb", "fr80ssc"],
    iro3zm: "fwiml72",
    b661bw: "f1h0usnq",
    Bk6r4ia: ["fs4ktlq", "fx2bmrt"],
    B9zn80p: "f16h9ulv",
    Bpld233: ["fx2bmrt", "fs4ktlq"]
  },
  transparent: {
    De3pzq: "f1c21dwh",
    g2u3we: "f1p3nwhy",
    h3c5rm: ["f11589ue", "f1pdflbu"],
    B9xav0g: "f1q5o8ev",
    zhjwy3: ["f1pdflbu", "f11589ue"],
    Jwef8y: "fjxutwb",
    Bgoe8wy: "f1s2uweq",
    Bwzppfd: ["fr80ssc", "fecsdlb"],
    oetu4i: "f1ukrpxl",
    gg5e9n: ["fecsdlb", "fr80ssc"],
    iro3zm: "fwiml72",
    b661bw: "f1h0usnq",
    Bk6r4ia: ["fs4ktlq", "fx2bmrt"],
    B9zn80p: "f16h9ulv",
    Bpld233: ["fx2bmrt", "fs4ktlq"]
  }
}, {
  d: [".f1bg9a2p{background-color:var(--colorNeutralBackgroundDisabled);}", ".f1jj8ep1{border-top-color:var(--colorNeutralStrokeDisabled);}", ".f15xbau{border-right-color:var(--colorNeutralStrokeDisabled);}", ".fy0fskl{border-left-color:var(--colorNeutralStrokeDisabled);}", ".f4ikngz{border-bottom-color:var(--colorNeutralStrokeDisabled);}", ".f1s2aq7o{color:var(--colorNeutralForegroundDisabled);}", ".f1p3nwhy{border-top-color:transparent;}", ".f11589ue{border-right-color:transparent;}", ".f1pdflbu{border-left-color:transparent;}", ".f1q5o8ev{border-bottom-color:transparent;}", ".f1c21dwh{background-color:var(--colorTransparentBackground);}"],
  h: [".f1falr9n:hover{background-color:var(--colorNeutralBackgroundDisabled);}", ".f12mpcsy:hover{border-top-color:var(--colorNeutralStrokeDisabled);}", ".f1gwvigk:hover{border-right-color:var(--colorNeutralStrokeDisabled);}", ".f18rmfxp:hover{border-left-color:var(--colorNeutralStrokeDisabled);}", ".f1jnshp0:hover{border-bottom-color:var(--colorNeutralStrokeDisabled);}", ".fvgxktp:hover{color:var(--colorNeutralForegroundDisabled);}", ".f1t6o4dc:hover:active{background-color:var(--colorNeutralBackgroundDisabled);}", ".f10ztigi:hover:active{border-top-color:var(--colorNeutralStrokeDisabled);}", ".f1ft5sdu:hover:active{border-right-color:var(--colorNeutralStrokeDisabled);}", ".f1gzf82w:hover:active{border-left-color:var(--colorNeutralStrokeDisabled);}", ".f12zbtn2:hover:active{border-bottom-color:var(--colorNeutralStrokeDisabled);}", ".fcvwxyo:hover:active{color:var(--colorNeutralForegroundDisabled);}", ".f1s2uweq:hover{border-top-color:transparent;}", ".fr80ssc:hover{border-right-color:transparent;}", ".fecsdlb:hover{border-left-color:transparent;}", ".f1ukrpxl:hover{border-bottom-color:transparent;}", ".f1h0usnq:hover:active{border-top-color:transparent;}", ".fs4ktlq:hover:active{border-right-color:transparent;}", ".fx2bmrt:hover:active{border-left-color:transparent;}", ".f16h9ulv:hover:active{border-bottom-color:transparent;}", ".fjxutwb:hover{background-color:var(--colorTransparentBackgroundHover);}", ".fwiml72:hover:active{background-color:var(--colorTransparentBackgroundPressed);}"]
});
var useIconCheckedStyles = __styles2({
  subtleOrTransparent: {
    sj55zd: "f1qj7y59"
  },
  highContrast: {
    ycbfsm: "fg4l7m0"
  }
}, {
  d: [".f1qj7y59{color:var(--colorNeutralForeground2BrandSelected);}"],
  m: [["@media (forced-colors: active){.fg4l7m0{forced-color-adjust:auto;}}", {
    m: "(forced-colors: active)"
  }]]
});
var usePrimaryHighContrastStyles = __styles2({
  base: {
    Bsw6fvg: "f4lkoma",
    Bjwas2f: "f1bauw5b",
    Bn1d65q: ["fbpknfk", "fedl69w"],
    Bxeuatn: "f15s25nd",
    n51gp8: ["fedl69w", "fbpknfk"],
    Bbusuzp: "f1e4kh5",
    ycbfsm: "fg4l7m0"
  },
  disabled: {
    Bjwas2f: "fg455y9",
    Bn1d65q: ["f1rvyvqg", "f14g86mu"],
    Bxeuatn: "f1cwzwz",
    n51gp8: ["f14g86mu", "f1rvyvqg"],
    Bbusuzp: "f1dcs8yz",
    G867l3: "fjwq6ea",
    gdbnj: ["f1lr3nhc", "f1mbxvi6"],
    mxns5l: "fn5gmvv",
    o3nasb: ["f1mbxvi6", "f1lr3nhc"]
  }
}, {
  m: [["@media (forced-colors: active){.f4lkoma{background-color:ButtonFace;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1bauw5b{border-top-color:ButtonBorder;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fbpknfk{border-right-color:ButtonBorder;}.fedl69w{border-left-color:ButtonBorder;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f15s25nd{border-bottom-color:ButtonBorder;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1e4kh5{color:ButtonText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fg4l7m0{forced-color-adjust:auto;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fg455y9{border-top-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f14g86mu{border-left-color:GrayText;}.f1rvyvqg{border-right-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1cwzwz{border-bottom-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1dcs8yz{color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fjwq6ea:focus{border-top-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1lr3nhc:focus{border-right-color:GrayText;}.f1mbxvi6:focus{border-left-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fn5gmvv:focus{border-bottom-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }]]
});
var useToggleButtonStyles_unstable = (state) => {
  "use no memo";
  const rootCheckedStyles = useRootCheckedStyles();
  const rootDisabledStyles = useRootDisabledStyles2();
  const iconCheckedStyles = useIconCheckedStyles();
  const primaryHighContrastStyles = usePrimaryHighContrastStyles();
  const {
    appearance,
    checked,
    disabled,
    disabledFocusable
  } = state;
  state.root.className = mergeClasses(
    toggleButtonClassNames.root,
    // Primary high contrast styles
    appearance === "primary" && primaryHighContrastStyles.base,
    appearance === "primary" && (disabled || disabledFocusable) && primaryHighContrastStyles.disabled,
    // Checked styles
    checked && rootCheckedStyles.base,
    checked && rootCheckedStyles.highContrast,
    appearance && checked && rootCheckedStyles[appearance],
    // Disabled styles
    (disabled || disabledFocusable) && rootDisabledStyles.base,
    appearance && (disabled || disabledFocusable) && rootDisabledStyles[appearance],
    // User provided class name
    state.root.className
  );
  if (state.icon) {
    state.icon.className = mergeClasses(toggleButtonClassNames.icon, checked && (appearance === "subtle" || appearance === "transparent") && iconCheckedStyles.subtleOrTransparent, iconCheckedStyles.highContrast, state.icon.className);
  }
  useButtonStyles_unstable(state);
  return state;
};

// node_modules/@fluentui/react-button/lib/components/ToggleButton/ToggleButton.js
var ToggleButton = React91.forwardRef((props, ref) => {
  const state = useToggleButton_unstable(props, ref);
  useToggleButtonStyles_unstable(state);
  useCustomStyleHook("useToggleButtonStyles_unstable")(state);
  return renderButton_unstable(state);
});
ToggleButton.displayName = "ToggleButton";

// node_modules/@fluentui/react-checkbox/lib/components/Checkbox/Checkbox.js
var React93 = __toESM(require_react());

// node_modules/@fluentui/react-checkbox/lib/components/Checkbox/useCheckbox.js
var React92 = __toESM(require_react());
var useCheckbox_unstable = (props, ref) => {
  "use no memo";
  props = useFieldControlProps_unstable(props, {
    supportsLabelFor: true,
    supportsRequired: true
  });
  const { disabled = false, required, shape = "square", size = "medium", labelPosition = "after", onChange } = props;
  const [checked, setChecked] = useControllableState({
    defaultState: props.defaultChecked,
    state: props.checked,
    initialState: false
  });
  const nativeProps = getPartitionedNativeProps({
    props,
    primarySlotTagName: "input",
    excludedPropNames: [
      "checked",
      "defaultChecked",
      "size",
      "onChange"
    ]
  });
  const mixed = checked === "mixed";
  const id = useId("checkbox-", nativeProps.primary.id);
  let checkmarkIcon;
  if (mixed) {
    if (shape === "circular") {
      checkmarkIcon = React92.createElement(CircleFilled, null);
    } else {
      checkmarkIcon = size === "large" ? React92.createElement(Square16Filled, null) : React92.createElement(Square12Filled, null);
    }
  } else if (checked) {
    checkmarkIcon = size === "large" ? React92.createElement(Checkmark16Filled, null) : React92.createElement(Checkmark12Filled, null);
  }
  const state = {
    shape,
    checked,
    disabled,
    size,
    labelPosition,
    components: {
      root: "span",
      input: "input",
      indicator: "div",
      label: Label
    },
    root: slot_exports.always(props.root, {
      defaultProps: {
        ref: useFocusWithin(),
        ...nativeProps.root
      },
      elementType: "span"
    }),
    input: slot_exports.always(props.input, {
      defaultProps: {
        type: "checkbox",
        id,
        ref,
        checked: checked === true,
        ...nativeProps.primary
      },
      elementType: "input"
    }),
    label: slot_exports.optional(props.label, {
      defaultProps: {
        htmlFor: id,
        disabled,
        required,
        size: "medium"
      },
      elementType: Label
    }),
    indicator: slot_exports.optional(props.indicator, {
      renderByDefault: true,
      defaultProps: {
        "aria-hidden": true,
        children: checkmarkIcon
      },
      elementType: "div"
    })
  };
  state.input.onChange = useEventCallback((ev) => {
    const val = ev.currentTarget.indeterminate ? "mixed" : ev.currentTarget.checked;
    onChange === null || onChange === void 0 ? void 0 : onChange(ev, {
      checked: val
    });
    setChecked(val);
  });
  const inputRef = useMergedRefs(state.input.ref);
  state.input.ref = inputRef;
  useIsomorphicLayoutEffect(() => {
    if (inputRef.current) {
      inputRef.current.indeterminate = mixed;
    }
  }, [
    inputRef,
    mixed
  ]);
  return state;
};

// node_modules/@fluentui/react-checkbox/lib/components/Checkbox/renderCheckbox.js
var renderCheckbox_unstable = (state) => {
  assertSlots(state);
  return jsxs(state.root, {
    children: [
      jsx(state.input, {}),
      state.labelPosition === "before" && state.label && jsx(state.label, {}),
      state.indicator && jsx(state.indicator, {}),
      state.labelPosition === "after" && state.label && jsx(state.label, {})
    ]
  });
};

// node_modules/@fluentui/react-checkbox/lib/components/Checkbox/useCheckboxStyles.styles.js
var checkboxClassNames = {
  root: "fui-Checkbox",
  label: "fui-Checkbox__label",
  input: "fui-Checkbox__input",
  indicator: "fui-Checkbox__indicator"
};
var useRootBaseClassName2 = __resetStyles("r1q22k1j", "r18ze4k2", {
  r: [".r1q22k1j{position:relative;display:inline-flex;cursor:pointer;vertical-align:middle;color:var(--colorNeutralForeground3);}", ".r1q22k1j:focus{outline-style:none;}", ".r1q22k1j:focus-visible{outline-style:none;}", ".r1q22k1j[data-fui-focus-within]:focus-within{border-top-color:transparent;border-right-color:transparent;border-bottom-color:transparent;border-left-color:transparent;}", '.r1q22k1j[data-fui-focus-within]:focus-within::after{content:"";position:absolute;pointer-events:none;z-index:1;border:2px solid var(--colorStrokeFocus2);border-radius:var(--borderRadiusMedium);top:calc(2px * -1);right:calc(2px * -1);bottom:calc(2px * -1);left:calc(2px * -1);}', ".r18ze4k2{position:relative;display:inline-flex;cursor:pointer;vertical-align:middle;color:var(--colorNeutralForeground3);}", ".r18ze4k2:focus{outline-style:none;}", ".r18ze4k2:focus-visible{outline-style:none;}", ".r18ze4k2[data-fui-focus-within]:focus-within{border-top-color:transparent;border-left-color:transparent;border-bottom-color:transparent;border-right-color:transparent;}", '.r18ze4k2[data-fui-focus-within]:focus-within::after{content:"";position:absolute;pointer-events:none;z-index:1;border:2px solid var(--colorStrokeFocus2);border-radius:var(--borderRadiusMedium);top:calc(2px * -1);left:calc(2px * -1);bottom:calc(2px * -1);right:calc(2px * -1);}'],
  s: ["@media (forced-colors: active){.r1q22k1j[data-fui-focus-within]:focus-within::after{border-top-color:Highlight;border-right-color:Highlight;border-bottom-color:Highlight;border-left-color:Highlight;}}", "@media (forced-colors: active){.r18ze4k2[data-fui-focus-within]:focus-within::after{border-top-color:Highlight;border-left-color:Highlight;border-bottom-color:Highlight;border-right-color:Highlight;}}"]
});
var useRootStyles6 = __styles2({
  unchecked: {
    Bi91k9c: "f3p8bqa",
    pv5h1i: "fium13f",
    lj723h: "f1r2dosr",
    Hnthvo: "f1729es6"
  },
  checked: {
    sj55zd: "f19n0e5",
    wkncrt: "f35ds98",
    zxk7z7: "f12mnkne",
    Hmsnfy: "fei9a8h",
    e6czan: "fix56y3",
    pv5h1i: "f1bcv2js",
    qbydtz: "f7dr4go",
    Hnthvo: "f1r5cpua"
  },
  mixed: {
    sj55zd: "f19n0e5",
    Hmsnfy: "f1l27tf0",
    zxk7z7: "fcilktj",
    pv5h1i: "f1lphd54",
    Bunfa6h: "f1obkvq7",
    Hnthvo: "f2gmbuh",
    B15ykmv: "f1oy4fa1"
  },
  disabled: {
    Bceei9c: "f158kwzp",
    sj55zd: "f1s2aq7o",
    Hmsnfy: "f1w7mfl5",
    zxk7z7: "fcoafq6",
    Bbusuzp: "f1dcs8yz",
    mrqfp9: "fxb3eh3"
  }
}, {
  h: [".f3p8bqa:hover{color:var(--colorNeutralForeground2);}", ".fium13f:hover{--fui-Checkbox__indicator--borderColor:var(--colorNeutralStrokeAccessibleHover);}", ".fix56y3:hover{--fui-Checkbox__indicator--backgroundColor:var(--colorCompoundBrandBackgroundHover);}", ".f1bcv2js:hover{--fui-Checkbox__indicator--borderColor:var(--colorCompoundBrandBackgroundHover);}", ".f1lphd54:hover{--fui-Checkbox__indicator--borderColor:var(--colorCompoundBrandStrokeHover);}", ".f1obkvq7:hover{--fui-Checkbox__indicator--color:var(--colorCompoundBrandForeground1Hover);}"],
  a: [".f1r2dosr:active{color:var(--colorNeutralForeground1);}", ".f1729es6:active{--fui-Checkbox__indicator--borderColor:var(--colorNeutralStrokeAccessiblePressed);}", ".f7dr4go:active{--fui-Checkbox__indicator--backgroundColor:var(--colorCompoundBrandBackgroundPressed);}", ".f1r5cpua:active{--fui-Checkbox__indicator--borderColor:var(--colorCompoundBrandBackgroundPressed);}", ".f2gmbuh:active{--fui-Checkbox__indicator--borderColor:var(--colorCompoundBrandStrokePressed);}", ".f1oy4fa1:active{--fui-Checkbox__indicator--color:var(--colorCompoundBrandForeground1Pressed);}"],
  d: [".f19n0e5{color:var(--colorNeutralForeground1);}", ".f35ds98{--fui-Checkbox__indicator--backgroundColor:var(--colorCompoundBrandBackground);}", ".f12mnkne{--fui-Checkbox__indicator--color:var(--colorNeutralForegroundInverted);}", ".fei9a8h{--fui-Checkbox__indicator--borderColor:var(--colorCompoundBrandBackground);}", ".f1l27tf0{--fui-Checkbox__indicator--borderColor:var(--colorCompoundBrandStroke);}", ".fcilktj{--fui-Checkbox__indicator--color:var(--colorCompoundBrandForeground1);}", ".f158kwzp{cursor:default;}", ".f1s2aq7o{color:var(--colorNeutralForegroundDisabled);}", ".f1w7mfl5{--fui-Checkbox__indicator--borderColor:var(--colorNeutralStrokeDisabled);}", ".fcoafq6{--fui-Checkbox__indicator--color:var(--colorNeutralForegroundDisabled);}"],
  m: [["@media (forced-colors: active){.f1dcs8yz{color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fxb3eh3{--fui-Checkbox__indicator--color:GrayText;}}", {
    m: "(forced-colors: active)"
  }]]
});
var useInputBaseClassName = __resetStyles("ruo9svu", null, [".ruo9svu{box-sizing:border-box;cursor:inherit;height:100%;margin:0;opacity:0;position:absolute;top:0;width:calc(16px + 2 * var(--spacingHorizontalS));}"]);
var useInputStyles = __styles2({
  before: {
    j35jbq: ["f1e31b4d", "f1vgc2s3"]
  },
  after: {
    oyh7mz: ["f1vgc2s3", "f1e31b4d"]
  },
  large: {
    a9b677: "f1mq5jt6"
  }
}, {
  d: [".f1e31b4d{right:0;}", ".f1vgc2s3{left:0;}", ".f1mq5jt6{width:calc(20px + 2 * var(--spacingHorizontalS));}"]
});
var useIndicatorBaseClassName = __resetStyles("rl7ci6d", null, [".rl7ci6d{align-self:flex-start;box-sizing:border-box;flex-shrink:0;display:flex;align-items:center;justify-content:center;overflow:hidden;color:var(--fui-Checkbox__indicator--color);background-color:var(--fui-Checkbox__indicator--backgroundColor);border-color:var(--fui-Checkbox__indicator--borderColor, var(--colorNeutralStrokeAccessible));border-style:solid;border-width:var(--strokeWidthThin);border-radius:var(--borderRadiusSmall);margin:var(--spacingVerticalS) var(--spacingHorizontalS);fill:currentColor;pointer-events:none;font-size:12px;height:16px;width:16px;}"]);
var useIndicatorStyles = __styles2({
  large: {
    Be2twd7: "f4ybsrx",
    Bqenvij: "fjamq6b",
    a9b677: "f64fuq3"
  },
  circular: {
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "f44lkw9"
  }
}, {
  d: [".f4ybsrx{font-size:16px;}", ".fjamq6b{height:20px;}", ".f64fuq3{width:20px;}", [".f44lkw9{border-radius:var(--borderRadiusCircular);}", {
    p: -1
  }]]
});
var useLabelStyles = __styles2({
  base: {
    qb2dma: "f7nlbp4",
    sj55zd: "f1ym3bx4",
    Bceei9c: "fpo1scq",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f1f5q0n8"
  },
  before: {
    z189sj: ["f7x41pl", "fruq291"]
  },
  after: {
    uwmqm3: ["fruq291", "f7x41pl"]
  },
  medium: {
    B6of3ja: "fjzwpt6",
    jrapky: "fh6j2fo"
  },
  large: {
    B6of3ja: "f1xlvstr",
    jrapky: "f49ad5g"
  }
}, {
  d: [".f7nlbp4{align-self:center;}", ".f1ym3bx4{color:inherit;}", ".fpo1scq{cursor:inherit;}", [".f1f5q0n8{padding:var(--spacingVerticalS) var(--spacingHorizontalS);}", {
    p: -1
  }], ".f7x41pl{padding-right:var(--spacingHorizontalXS);}", ".fruq291{padding-left:var(--spacingHorizontalXS);}", ".fjzwpt6{margin-top:calc((16px - var(--lineHeightBase300)) / 2);}", ".fh6j2fo{margin-bottom:calc((16px - var(--lineHeightBase300)) / 2);}", ".f1xlvstr{margin-top:calc((20px - var(--lineHeightBase300)) / 2);}", ".f49ad5g{margin-bottom:calc((20px - var(--lineHeightBase300)) / 2);}"]
});
var useCheckboxStyles_unstable = (state) => {
  "use no memo";
  const {
    checked,
    disabled,
    labelPosition,
    shape,
    size
  } = state;
  const rootBaseClassName = useRootBaseClassName2();
  const rootStyles = useRootStyles6();
  state.root.className = mergeClasses(checkboxClassNames.root, rootBaseClassName, disabled ? rootStyles.disabled : checked === "mixed" ? rootStyles.mixed : checked ? rootStyles.checked : rootStyles.unchecked, state.root.className);
  const inputBaseClassName = useInputBaseClassName();
  const inputStyles = useInputStyles();
  state.input.className = mergeClasses(checkboxClassNames.input, inputBaseClassName, size === "large" && inputStyles.large, inputStyles[labelPosition], state.input.className);
  const indicatorBaseClassName = useIndicatorBaseClassName();
  const indicatorStyles = useIndicatorStyles();
  if (state.indicator) {
    state.indicator.className = mergeClasses(checkboxClassNames.indicator, indicatorBaseClassName, size === "large" && indicatorStyles.large, shape === "circular" && indicatorStyles.circular, state.indicator.className);
  }
  const labelStyles = useLabelStyles();
  if (state.label) {
    state.label.className = mergeClasses(checkboxClassNames.label, labelStyles.base, labelStyles[size], labelStyles[labelPosition], state.label.className);
  }
  return state;
};

// node_modules/@fluentui/react-checkbox/lib/components/Checkbox/Checkbox.js
var Checkbox = React93.forwardRef((props, ref) => {
  const state = useCheckbox_unstable(props, ref);
  useCheckboxStyles_unstable(state);
  useCustomStyleHook("useCheckboxStyles_unstable")(state);
  return renderCheckbox_unstable(state);
});
Checkbox.displayName = "Checkbox";

// node_modules/@fluentui/react-checkbox/lib/components/Checkbox/Checkbox.types.js
var React94 = __toESM(require_react());

// node_modules/@fluentui/react-combobox/node_modules/@fluentui/react-context-selector/lib/createContext.js
var React95 = __toESM(require_react());
var import_scheduler4 = __toESM(require_scheduler4());
var createProvider4 = (Original) => {
  const Provider2 = (props) => {
    const valueRef = React95.useRef(props.value);
    const versionRef = React95.useRef(0);
    const contextValue = React95.useRef();
    if (!contextValue.current) {
      contextValue.current = {
        value: valueRef,
        version: versionRef,
        listeners: []
      };
    }
    useIsomorphicLayoutEffect(() => {
      valueRef.current = props.value;
      versionRef.current += 1;
      (0, import_scheduler4.unstable_runWithPriority)(import_scheduler4.unstable_NormalPriority, () => {
        contextValue.current.listeners.forEach((listener) => {
          listener([
            versionRef.current,
            props.value
          ]);
        });
      });
    }, [
      props.value
    ]);
    return React95.createElement(Original, {
      value: contextValue.current
    }, props.children);
  };
  if (true) {
    Provider2.displayName = "ContextSelector.Provider";
  }
  return Provider2;
};
var createContext15 = (defaultValue) => {
  const context = React95.createContext({
    value: {
      current: defaultValue
    },
    version: {
      current: -1
    },
    listeners: []
  });
  context.Provider = createProvider4(context.Provider);
  delete context.Consumer;
  return context;
};

// node_modules/@fluentui/react-combobox/node_modules/@fluentui/react-context-selector/lib/useContextSelector.js
var React96 = __toESM(require_react());
var useContextSelector4 = (context, selector) => {
  const contextValue = React96.useContext(context);
  const { value: { current: value }, version: { current: version }, listeners } = contextValue;
  const selected = selector(value);
  const [state, setState] = React96.useState([
    value,
    selected
  ]);
  const dispatch = (payload) => {
    setState((prevState) => {
      if (!payload) {
        return [
          value,
          selected
        ];
      }
      if (payload[0] <= version) {
        if (Object.is(prevState[1], selected)) {
          return prevState;
        }
        return [
          value,
          selected
        ];
      }
      try {
        if (Object.is(prevState[0], payload[1])) {
          return prevState;
        }
        const nextSelected = selector(payload[1]);
        if (Object.is(prevState[1], nextSelected)) {
          return prevState;
        }
        return [
          payload[1],
          nextSelected
        ];
      } catch (e) {
      }
      return [
        prevState[0],
        prevState[1]
      ];
    });
  };
  if (!Object.is(state[1], selected)) {
    dispatch(void 0);
  }
  const stableDispatch = useEventCallback(dispatch);
  useIsomorphicLayoutEffect(() => {
    listeners.push(stableDispatch);
    return () => {
      const index = listeners.indexOf(stableDispatch);
      listeners.splice(index, 1);
    };
  }, [
    stableDispatch,
    listeners
  ]);
  return state[1];
};

// node_modules/@fluentui/react-combobox/node_modules/@fluentui/react-context-selector/lib/useHasParentContext.js
var React97 = __toESM(require_react());
function useHasParentContext4(context) {
  const contextValue = React97.useContext(context);
  if (contextValue.version) {
    return contextValue.version.current !== -1;
  }
  return false;
}

// node_modules/@fluentui/react-combobox/lib/contexts/ComboboxContext.js
var ComboboxContext = createContext15({
  activeOption: void 0,
  appearance: "outline",
  focusVisible: false,
  open: false,
  registerOption() {
    return () => void 0;
  },
  selectedOptions: [],
  selectOption() {
  },
  setActiveOption() {
  },
  setOpen() {
  },
  size: "medium"
});
var ComboboxProvider = ComboboxContext.Provider;

// node_modules/@fluentui/react-combobox/lib/contexts/ListboxContext.js
var React98 = __toESM(require_react());
var listboxContextDefaultValue = {
  activeOption: void 0,
  focusVisible: false,
  multiselect: false,
  getOptionById() {
    return void 0;
  },
  getOptionsMatchingValue() {
    return [];
  },
  registerOption() {
    return () => void 0;
  },
  selectedOptions: [],
  onOptionClick() {
  },
  onActiveDescendantChange() {
  },
  selectOption() {
  },
  setActiveOption() {
  }
};
var ListboxContext = createContext15(void 0);
var useListboxContext_unstable = (selector) => useContextSelector4(ListboxContext, (ctx = listboxContextDefaultValue) => selector(ctx));
var ListboxProvider = ListboxContext.Provider;

// node_modules/@fluentui/react-combobox/lib/contexts/useComboboxContextValues.js
var React99 = __toESM(require_react());
function useComboboxContextValues(state) {
  const { appearance, open, getOptionById, getOptionsMatchingValue, registerOption, selectedOptions, selectOption, setOpen, size, activeDescendantController, onOptionClick, onActiveDescendantChange } = state;
  const combobox = {
    activeOption: void 0,
    appearance,
    focusVisible: false,
    open,
    registerOption,
    selectedOptions,
    selectOption,
    setActiveOption: () => null,
    setOpen,
    size
  };
  const listbox = {
    activeOption: void 0,
    focusVisible: false,
    getOptionById,
    getOptionsMatchingValue,
    registerOption,
    selectedOptions,
    selectOption,
    setActiveOption: () => null,
    onOptionClick,
    onActiveDescendantChange
  };
  const activeDescendant = React99.useMemo(() => ({
    controller: activeDescendantController
  }), [
    activeDescendantController
  ]);
  return {
    combobox,
    activeDescendant,
    listbox
  };
}

// node_modules/@fluentui/react-combobox/lib/contexts/useListboxContextValues.js
var React100 = __toESM(require_react());
function useListboxContextValues(state) {
  const hasListboxContext = useHasParentContext4(ListboxContext);
  const { getOptionById, getOptionsMatchingValue, multiselect, registerOption, selectedOptions, selectOption, activeDescendantController } = state;
  const parentRegisterOption = useListboxContext_unstable((ctx) => ctx.registerOption);
  const onOptionClick = useListboxContext_unstable((ctx) => ctx.onOptionClick);
  const onActiveDescendantChange = useListboxContext_unstable((ctx) => ctx.onActiveDescendantChange);
  const registerOptionValue = hasListboxContext ? parentRegisterOption : registerOption;
  const listbox = {
    activeOption: void 0,
    focusVisible: false,
    getOptionById,
    getOptionsMatchingValue,
    multiselect,
    registerOption: registerOptionValue,
    selectedOptions,
    selectOption,
    setActiveOption: () => void 0,
    onOptionClick,
    onActiveDescendantChange
  };
  const activeDescendant = React100.useMemo(() => ({
    controller: activeDescendantController
  }), [
    activeDescendantController
  ]);
  return {
    listbox,
    activeDescendant
  };
}

// node_modules/@fluentui/react-combobox/lib/components/Listbox/Listbox.js
var React104 = __toESM(require_react());

// node_modules/@fluentui/react-combobox/lib/components/Listbox/useListbox.js
var React103 = __toESM(require_react());

// node_modules/@fluentui/react-combobox/lib/utils/dropdownKeyActions.js
var React101 = __toESM(require_react());
function getDropdownActionFromKey(e, options = {}) {
  const { open = true, multiselect = false } = options;
  const code = e.key;
  const { altKey, ctrlKey, key, metaKey } = e;
  if (key.length === 1 && code !== Space && !altKey && !ctrlKey && !metaKey) {
    return "Type";
  }
  if (!open) {
    if (code === ArrowDown || code === ArrowUp || code === Enter || code === Space) {
      return "Open";
    }
    return "None";
  }
  if (code === ArrowUp && altKey || code === Enter || !multiselect && code === Space) {
    return "CloseSelect";
  }
  if (multiselect && code === Space) {
    return "Select";
  }
  if (code === Escape) {
    return "Close";
  }
  if (code === ArrowDown) {
    return "Next";
  }
  if (code === ArrowUp) {
    return "Previous";
  }
  if (code === Home) {
    return "First";
  }
  if (code === End) {
    return "Last";
  }
  if (code === PageUp) {
    return "PageUp";
  }
  if (code === PageDown) {
    return "PageDown";
  }
  if (code === Tab) {
    return "Tab";
  }
  return "None";
}

// node_modules/@fluentui/react-combobox/lib/utils/useOptionCollection.js
var React102 = __toESM(require_react());
var useOptionCollection = () => {
  const optionsById = React102.useRef(/* @__PURE__ */ new Map());
  const collectionAPI = React102.useMemo(() => {
    const getCount = () => optionsById.current.size;
    const getOptionAtIndex = () => void 0;
    const getIndexOfId = () => -1;
    const getOptionById = (id) => {
      return optionsById.current.get(id);
    };
    const getOptionsMatchingText = (matcher) => {
      return Array.from(optionsById.current.values()).filter(({ text }) => matcher(text));
    };
    const getOptionsMatchingValue = (matcher) => {
      const matches = [];
      for (const option of optionsById.current.values()) {
        if (matcher(option.value)) {
          matches.push(option);
        }
      }
      return matches;
    };
    return {
      getCount,
      getOptionAtIndex,
      getIndexOfId,
      getOptionById,
      getOptionsMatchingText,
      getOptionsMatchingValue
    };
  }, []);
  const registerOption = React102.useCallback((option) => {
    optionsById.current.set(option.id, option);
    return () => optionsById.current.delete(option.id);
  }, []);
  return {
    ...collectionAPI,
    options: Array.from(optionsById.current.values()),
    registerOption
  };
};

// node_modules/@fluentui/react-combobox/lib/utils/useSelection.js
var import_react24 = __toESM(require_react());
var useSelection2 = (props) => {
  const { defaultSelectedOptions, multiselect, onOptionSelect } = props;
  const [selectedOptions, setSelectedOptions] = useControllableState({
    state: props.selectedOptions,
    defaultState: defaultSelectedOptions,
    initialState: []
  });
  const selectOption = (0, import_react24.useCallback)((event, option) => {
    if (option.disabled) {
      return;
    }
    let newSelection = [
      option.value
    ];
    if (multiselect) {
      const selectedIndex = selectedOptions.findIndex((o) => o === option.value);
      if (selectedIndex > -1) {
        newSelection = [
          ...selectedOptions.slice(0, selectedIndex),
          ...selectedOptions.slice(selectedIndex + 1)
        ];
      } else {
        newSelection = [
          ...selectedOptions,
          option.value
        ];
      }
    }
    setSelectedOptions(newSelection);
    onOptionSelect === null || onOptionSelect === void 0 ? void 0 : onOptionSelect(event, {
      optionValue: option.value,
      optionText: option.text,
      selectedOptions: newSelection
    });
  }, [
    onOptionSelect,
    multiselect,
    selectedOptions,
    setSelectedOptions
  ]);
  const clearSelection = (event) => {
    setSelectedOptions([]);
    onOptionSelect === null || onOptionSelect === void 0 ? void 0 : onOptionSelect(event, {
      optionValue: void 0,
      optionText: void 0,
      selectedOptions: []
    });
  };
  return {
    clearSelection,
    selectOption,
    selectedOptions
  };
};

// node_modules/@fluentui/react-combobox/lib/components/Option/useOptionStyles.styles.js
var optionClassNames = {
  root: "fui-Option",
  checkIcon: "fui-Option__checkIcon"
};
var useStyles10 = __styles2({
  root: {
    Bt984gj: "f122n59",
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "ft85np5",
    sj55zd: "f19n0e5",
    i8kkvl: "f1ufnopg",
    Bceei9c: "f1k6fduh",
    mc9l5x: "f22iagw",
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bg96gwp: "f1i3iumi",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "fm5eomj",
    qhf8xq: "f10pi13n",
    Jwef8y: "f1knas48",
    Bi91k9c: "feu1g3u",
    zqbkvg: "fo79ri9",
    h82x05: ["f1osiabc", "f1e8le25"],
    cqj998: "f1yusjty",
    j3hlsh: ["f1e8le25", "f1osiabc"],
    ecr2s2: "fb40n2d",
    lj723h: "f1g4hkjv",
    Btxx2vb: "f1lnr2zp",
    sltcwy: ["f1ogfk9z", "f1g7j8ec"],
    dnwvvm: "fiuf46r",
    Blyvkvs: ["f1g7j8ec", "f1ogfk9z"]
  },
  active: {
    Bowz1zl: "f11vrvdw",
    oxogb1: "f17hxjb7",
    Ix2sn8: "f1dha69c",
    q7v32p: "f1lm7500",
    B7cbj04: 0,
    Bewtojm: 0,
    b50fsz: 0,
    B1wzb3v: 0,
    Bqwk70n: 0,
    B37u8z8: 0,
    avt0cx: 0,
    f0sref: 0,
    B9fkznv: 0,
    Be3o27t: 0,
    Bertapg: 0,
    B53xpsf: 0,
    Bsv72rj: 0,
    B39dzdd: 0,
    Btq9bd3: 0,
    Bqfxd14: 0,
    atup0s: "fo7xqb",
    Fffuxt: 0,
    Bttcd12: 0,
    Beitzug: 0,
    Bqougee: 0,
    B86i8pi: "f1kurthe",
    Bhijsxg: "fwq15dy",
    kktds4: "f1pb3wry",
    Bmau3bo: ["ftjv2f4", "f1flhb1f"],
    npektv: ["f1flhb1f", "ftjv2f4"]
  },
  disabled: {
    sj55zd: "f1s2aq7o",
    Jwef8y: "f9ql6rf",
    Bi91k9c: "fvgxktp",
    zqbkvg: "f185j3qj",
    h82x05: ["f1dligi3", "f1vydzie"],
    cqj998: "fjw1di3",
    j3hlsh: ["f1vydzie", "f1dligi3"],
    ecr2s2: "fgj9um3",
    lj723h: "f19wldhg",
    Btxx2vb: "f1ss0kt2",
    sltcwy: ["f1t6oli3", "fjy9ci8"],
    dnwvvm: "fresaxk",
    Blyvkvs: ["fjy9ci8", "f1t6oli3"],
    Bbusuzp: "f1dcs8yz"
  },
  selected: {},
  checkIcon: {
    Bnnss6s: "fi64zpg",
    Be2twd7: "fod5ikn",
    Frg6f3: ["f18b9hdq", "fn6qj8t"],
    t21cq0: ["f1xk557c", "f1h9en5y"],
    Bcdw1i0: "fd7fpy0",
    Bo70h7d: "fvc9v3g"
  },
  selectedCheck: {
    Bcdw1i0: "f1022m68"
  },
  multiselectCheck: {
    Bgfg5da: 0,
    B9xav0g: 0,
    oivjwe: 0,
    Bn0qgzm: 0,
    B4g9neb: 0,
    zhjwy3: 0,
    wvpqe5: 0,
    ibv6hh: 0,
    u1mtju: 0,
    h3c5rm: 0,
    vrafjx: 0,
    Bekrc4i: 0,
    i8vvqc: 0,
    g2u3we: 0,
    icvyot: 0,
    B4j52fo: 0,
    irswps: "f1l3cf7o",
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "fq9zq91",
    B7ck84d: "f1ewtqcl",
    mc9l5x: "f22iagw",
    Bt984gj: "f122n59",
    Brf1p80: "f4d9j23",
    Bkfmm31: "f1w9h62z",
    Be2twd7: "f1ugzwwg",
    Bqenvij: "fd461yt",
    a9b677: "fjw5fx7",
    Bcdw1i0: "f1022m68"
  },
  selectedMultiselectCheck: {
    De3pzq: "ftywsgz",
    sj55zd: "fqpbvvt",
    g2u3we: "f3xi7mh",
    h3c5rm: ["ftovhe4", "f1wczvin"],
    B9xav0g: "f68vbr6",
    zhjwy3: ["f1wczvin", "ftovhe4"]
  },
  checkDisabled: {
    sj55zd: "f1s2aq7o",
    Bbusuzp: "f1dcs8yz"
  },
  multiselectCheckDisabled: {
    g2u3we: "f1r1t4y1",
    h3c5rm: ["fmj8ijw", "figx54m"],
    B9xav0g: "f360ss8",
    zhjwy3: ["figx54m", "fmj8ijw"]
  }
}, {
  d: [".f122n59{align-items:center;}", [".ft85np5{border-radius:var(--borderRadiusMedium);}", {
    p: -1
  }], ".f19n0e5{color:var(--colorNeutralForeground1);}", ".f1ufnopg{column-gap:var(--spacingHorizontalXS);}", ".f1k6fduh{cursor:pointer;}", ".f22iagw{display:flex;}", ".fk6fouc{font-family:var(--fontFamilyBase);}", ".fkhj508{font-size:var(--fontSizeBase300);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}", [".fm5eomj{padding:var(--spacingVerticalSNudge) var(--spacingHorizontalS);}", {
    p: -1
  }], ".f10pi13n{position:relative;}", '.f11vrvdw[data-activedescendant-focusvisible]::after{content:"";}', ".f17hxjb7[data-activedescendant-focusvisible]::after{position:absolute;}", ".f1dha69c[data-activedescendant-focusvisible]::after{pointer-events:none;}", ".f1lm7500[data-activedescendant-focusvisible]::after{z-index:1;}", [".fo7xqb[data-activedescendant-focusvisible]::after{border:2px solid var(--colorStrokeFocus2);}", {
    p: -2
  }], [".f1kurthe[data-activedescendant-focusvisible]::after{border-radius:var(--borderRadiusMedium);}", {
    p: -1
  }], ".fwq15dy[data-activedescendant-focusvisible]::after{top:-2px;}", ".f1pb3wry[data-activedescendant-focusvisible]::after{bottom:-2px;}", ".ftjv2f4[data-activedescendant-focusvisible]::after{left:-2px;}", ".f1flhb1f[data-activedescendant-focusvisible]::after{right:-2px;}", ".f1s2aq7o{color:var(--colorNeutralForegroundDisabled);}", ".fi64zpg{flex-shrink:0;}", ".fod5ikn{font-size:var(--fontSizeBase400);}", ".f18b9hdq{margin-left:calc(var(--spacingHorizontalXXS) * -1);}", ".fn6qj8t{margin-right:calc(var(--spacingHorizontalXXS) * -1);}", ".f1xk557c{margin-right:var(--spacingHorizontalXXS);}", ".f1h9en5y{margin-left:var(--spacingHorizontalXXS);}", ".fd7fpy0{visibility:hidden;}", ".fvc9v3g svg{display:block;}", ".f1022m68{visibility:visible;}", [".f1l3cf7o{border:var(--strokeWidthThin) solid var(--colorNeutralStrokeAccessible);}", {
    p: -2
  }], [".fq9zq91{border-radius:var(--borderRadiusSmall);}", {
    p: -1
  }], ".f1ewtqcl{box-sizing:border-box;}", ".f4d9j23{justify-content:center;}", ".f1w9h62z{fill:currentColor;}", ".f1ugzwwg{font-size:12px;}", ".fd461yt{height:16px;}", ".fjw5fx7{width:16px;}", ".ftywsgz{background-color:var(--colorCompoundBrandBackground);}", ".fqpbvvt{color:var(--colorNeutralForegroundInverted);}", ".f3xi7mh{border-top-color:var(--colorCompoundBrandBackground);}", ".ftovhe4{border-right-color:var(--colorCompoundBrandBackground);}", ".f1wczvin{border-left-color:var(--colorCompoundBrandBackground);}", ".f68vbr6{border-bottom-color:var(--colorCompoundBrandBackground);}", ".f1r1t4y1{border-top-color:var(--colorNeutralForegroundDisabled);}", ".fmj8ijw{border-right-color:var(--colorNeutralForegroundDisabled);}", ".figx54m{border-left-color:var(--colorNeutralForegroundDisabled);}", ".f360ss8{border-bottom-color:var(--colorNeutralForegroundDisabled);}"],
  h: [".f1knas48:hover{background-color:var(--colorNeutralBackground1Hover);}", ".feu1g3u:hover{color:var(--colorNeutralForeground1Hover);}", ".fo79ri9:hover .fui-Option__checkIcon{border-top-color:var(--colorNeutralForeground1Hover);}", ".f1osiabc:hover .fui-Option__checkIcon{border-right-color:var(--colorNeutralForeground1Hover);}", ".f1e8le25:hover .fui-Option__checkIcon{border-left-color:var(--colorNeutralForeground1Hover);}", ".f1yusjty:hover .fui-Option__checkIcon{border-bottom-color:var(--colorNeutralForeground1Hover);}", ".f9ql6rf:hover{background-color:var(--colorTransparentBackground);}", ".fvgxktp:hover{color:var(--colorNeutralForegroundDisabled);}", ".f185j3qj:hover .fui-Option__checkIcon{border-top-color:var(--colorNeutralForegroundDisabled);}", ".f1dligi3:hover .fui-Option__checkIcon{border-right-color:var(--colorNeutralForegroundDisabled);}", ".f1vydzie:hover .fui-Option__checkIcon{border-left-color:var(--colorNeutralForegroundDisabled);}", ".fjw1di3:hover .fui-Option__checkIcon{border-bottom-color:var(--colorNeutralForegroundDisabled);}"],
  a: [".fb40n2d:active{background-color:var(--colorNeutralBackground1Pressed);}", ".f1g4hkjv:active{color:var(--colorNeutralForeground1Pressed);}", ".f1lnr2zp:active .fui-Option__checkIcon{border-top-color:var(--colorNeutralForeground1Hover);}", ".f1ogfk9z:active .fui-Option__checkIcon{border-right-color:var(--colorNeutralForeground1Hover);}", ".f1g7j8ec:active .fui-Option__checkIcon{border-left-color:var(--colorNeutralForeground1Hover);}", ".fiuf46r:active .fui-Option__checkIcon{border-bottom-color:var(--colorNeutralForeground1Hover);}", ".fgj9um3:active{background-color:var(--colorTransparentBackground);}", ".f19wldhg:active{color:var(--colorNeutralForegroundDisabled);}", ".f1ss0kt2:active .fui-Option__checkIcon{border-top-color:var(--colorNeutralForegroundDisabled);}", ".f1t6oli3:active .fui-Option__checkIcon{border-right-color:var(--colorNeutralForegroundDisabled);}", ".fjy9ci8:active .fui-Option__checkIcon{border-left-color:var(--colorNeutralForegroundDisabled);}", ".fresaxk:active .fui-Option__checkIcon{border-bottom-color:var(--colorNeutralForegroundDisabled);}"],
  m: [["@media (forced-colors: active){.f1dcs8yz{color:GrayText;}}", {
    m: "(forced-colors: active)"
  }]]
});
var useOptionStyles_unstable = (state) => {
  "use no memo";
  const {
    disabled,
    multiselect,
    selected
  } = state;
  const styles = useStyles10();
  state.root.className = mergeClasses(optionClassNames.root, styles.root, styles.active, disabled && styles.disabled, selected && styles.selected, state.root.className);
  if (state.checkIcon) {
    state.checkIcon.className = mergeClasses(optionClassNames.checkIcon, styles.checkIcon, multiselect && styles.multiselectCheck, selected && styles.selectedCheck, selected && multiselect && styles.selectedMultiselectCheck, disabled && styles.checkDisabled, disabled && multiselect && styles.multiselectCheckDisabled, state.checkIcon.className);
  }
  return state;
};

// node_modules/@fluentui/react-combobox/lib/components/Listbox/useListbox.js
var UNSAFE_noLongerUsed = {
  activeOption: void 0,
  focusVisible: false,
  setActiveOption: () => null
};
var useListbox_unstable = (props, ref) => {
  "use no memo";
  const { multiselect, disableAutoFocus = false } = props;
  const optionCollection = useOptionCollection();
  const { listboxRef: activeDescendantListboxRef, activeParentRef, controller } = useActiveDescendant({
    matchOption: (el) => el.classList.contains(optionClassNames.root)
  });
  const hasListboxContext = useHasParentContext4(ListboxContext);
  const onActiveDescendantChange = useListboxContext_unstable((ctx) => ctx.onActiveDescendantChange);
  const contextGetOptionById = useListboxContext_unstable((ctx) => ctx.getOptionById);
  const contextGetOptionsMatchingValue = useListboxContext_unstable((ctx) => ctx.getOptionsMatchingValue);
  const getOptionById = hasListboxContext ? contextGetOptionById : optionCollection.getOptionById;
  const getOptionsMatchingValue = hasListboxContext ? contextGetOptionsMatchingValue : optionCollection.getOptionsMatchingValue;
  const listenerRef = React103.useMemo(() => {
    let element = null;
    const listener = (untypedEvent) => {
      const event = untypedEvent;
      onActiveDescendantChange === null || onActiveDescendantChange === void 0 ? void 0 : onActiveDescendantChange(event);
    };
    return (el) => {
      if (!el) {
        element === null || element === void 0 ? void 0 : element.removeEventListener("activedescendantchange", listener);
        return;
      }
      element = el;
      element.addEventListener("activedescendantchange", listener);
    };
  }, [
    onActiveDescendantChange
  ]);
  const [isNavigatingWithKeyboard, setIsNavigatingWithKeyboard] = React103.useState(false);
  useOnKeyboardNavigationChange(setIsNavigatingWithKeyboard);
  const activeDescendantContext = useActiveDescendantContext();
  const hasParentActiveDescendantContext = useHasParentActiveDescendantContext();
  const activeDescendantController = hasParentActiveDescendantContext ? activeDescendantContext.controller : controller;
  const { clearSelection, selectedOptions, selectOption } = useSelection2(props);
  const onKeyDown = (event) => {
    const action = getDropdownActionFromKey(event, {
      open: true
    });
    const activeOptionId = activeDescendantController.active();
    const activeOption = activeOptionId ? getOptionById(activeOptionId) : null;
    switch (action) {
      case "First":
      case "Last":
      case "Next":
      case "Previous":
      case "PageDown":
      case "PageUp":
      case "CloseSelect":
      case "Select":
        event.preventDefault();
        break;
    }
    switch (action) {
      case "Next":
        if (activeOption) {
          activeDescendantController.next();
        } else {
          activeDescendantController.first();
        }
        break;
      case "Previous":
        if (activeOption) {
          activeDescendantController.prev();
        } else {
          activeDescendantController.first();
        }
        break;
      case "PageUp":
      case "First":
        activeDescendantController.first();
        break;
      case "PageDown":
      case "Last":
        activeDescendantController.last();
        break;
      case "Select":
      case "CloseSelect":
        activeOption && selectOption(event, activeOption);
        break;
    }
  };
  const contextSelectedOptions = useListboxContext_unstable((ctx) => ctx.selectedOptions);
  const contextSelectOption = useListboxContext_unstable((ctx) => ctx.selectOption);
  const optionContextValues = hasListboxContext ? {
    selectedOptions: contextSelectedOptions,
    selectOption: contextSelectOption,
    ...UNSAFE_noLongerUsed
  } : {
    selectedOptions,
    selectOption,
    ...UNSAFE_noLongerUsed
  };
  React103.useEffect(() => {
    if (hasParentActiveDescendantContext) {
      return;
    }
    activeDescendantController.hideFocusVisibleAttributes();
    if (!disableAutoFocus) {
      if (!multiselect && optionContextValues.selectedOptions.length > 0) {
        const selectedOption = getOptionsMatchingValue((v) => v === optionContextValues.selectedOptions[0]).pop();
        if (selectedOption === null || selectedOption === void 0 ? void 0 : selectedOption.id) {
          activeDescendantController.focus(selectedOption.id);
        }
      } else {
        activeDescendantController.first();
      }
    }
    return () => {
      activeDescendantController.blur();
    };
  }, []);
  const onFocus = React103.useCallback(() => {
    if (hasParentActiveDescendantContext) {
      return;
    }
    activeDescendantController.showFocusVisibleAttributes();
    if (isNavigatingWithKeyboard) {
      activeDescendantController.scrollActiveIntoView();
    }
  }, [
    activeDescendantController,
    hasParentActiveDescendantContext,
    isNavigatingWithKeyboard
  ]);
  const onBlur = React103.useCallback(() => {
    if (hasParentActiveDescendantContext) {
      return;
    }
    activeDescendantController.hideFocusVisibleAttributes();
  }, [
    activeDescendantController,
    hasParentActiveDescendantContext
  ]);
  const state = {
    components: {
      root: "div"
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      // FIXME:
      // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`
      // but since it would be a breaking change to fix it, we are casting ref to it's proper type
      ref: useMergedRefs(ref, activeParentRef, activeDescendantListboxRef, listenerRef),
      role: multiselect ? "menu" : "listbox",
      tabIndex: 0,
      ...props
    }), {
      elementType: "div"
    }),
    standalone: !hasListboxContext,
    multiselect,
    clearSelection,
    activeDescendantController,
    onActiveDescendantChange,
    ...optionCollection,
    ...optionContextValues
  };
  state.root.onKeyDown = useEventCallback(mergeCallbacks(state.root.onKeyDown, onKeyDown));
  state.root.onFocus = useEventCallback(mergeCallbacks(state.root.onFocus, onFocus));
  state.root.onBlur = useEventCallback(mergeCallbacks(state.root.onBlur, onBlur));
  return state;
};

// node_modules/@fluentui/react-combobox/lib/components/Listbox/renderListbox.js
var renderListbox_unstable = (state, contextValues) => {
  assertSlots(state);
  return jsx(ActiveDescendantContextProvider, {
    value: contextValues.activeDescendant,
    children: jsx(ListboxContext.Provider, {
      value: contextValues.listbox,
      children: jsx(state.root, {})
    })
  });
};

// node_modules/@fluentui/react-combobox/lib/components/Listbox/useListboxStyles.styles.js
var listboxClassNames = {
  root: "fui-Listbox"
};
var useStyles11 = __styles2({
  root: {
    De3pzq: "fxugw4r",
    B7ck84d: "f1ewtqcl",
    mc9l5x: "f22iagw",
    Beiy3e4: "f1vx9l62",
    Bf4jedk: "f3hsy1e",
    Bmxbyg5: "f5zp4f",
    Bw0xxkn: 0,
    oeaueh: 0,
    Bpd4iqm: 0,
    Befb4lg: "f1iepc6i",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f1t35pdg",
    Belr9w4: "fiut8dr"
  }
}, {
  d: [".fxugw4r{background-color:var(--colorNeutralBackground1);}", ".f1ewtqcl{box-sizing:border-box;}", ".f22iagw{display:flex;}", ".f1vx9l62{flex-direction:column;}", ".f3hsy1e{min-width:160px;}", ".f5zp4f{overflow-y:auto;}", [".f1iepc6i{outline:1px solid var(--colorTransparentStroke);}", {
    p: -1
  }], [".f1t35pdg{padding:var(--spacingHorizontalXS);}", {
    p: -1
  }], ".fiut8dr{row-gap:var(--spacingHorizontalXXS);}"]
});
var useListboxStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles11();
  state.root.className = mergeClasses(listboxClassNames.root, styles.root, state.root.className);
  return state;
};

// node_modules/@fluentui/react-combobox/lib/components/Listbox/Listbox.js
var Listbox = React104.forwardRef((props, ref) => {
  const state = useListbox_unstable(props, ref);
  const contextValues = useListboxContextValues(state);
  useListboxStyles_unstable(state);
  useCustomStyleHook("useListboxStyles_unstable")(state);
  return renderListbox_unstable(state, contextValues);
});
Listbox.displayName = "Listbox";

// node_modules/@fluentui/react-combobox/lib/components/Option/Option.js
var React106 = __toESM(require_react());

// node_modules/@fluentui/react-combobox/lib/components/Option/useOption.js
var React105 = __toESM(require_react());
function getTextString(text, children2) {
  if (text !== void 0) {
    return text;
  }
  let textString = "";
  let hasNonStringChild = false;
  React105.Children.forEach(children2, (child) => {
    if (typeof child === "string") {
      textString += child;
    } else {
      hasNonStringChild = true;
    }
  });
  if (hasNonStringChild) {
    console.warn("Provide a `text` prop to Option components when they contain non-string children.");
  }
  return textString;
}
var useOption_unstable = (props, ref) => {
  const { children: children2, disabled, text, value } = props;
  const optionRef = React105.useRef(null);
  const optionText = getTextString(text, children2);
  const optionValue = value !== null && value !== void 0 ? value : optionText;
  const id = useId("fluent-option", props.id);
  const optionData = React105.useMemo(() => ({
    id,
    disabled,
    text: optionText,
    value: optionValue
  }), [
    id,
    disabled,
    optionText,
    optionValue
  ]);
  const { controller: activeDescendantController } = useActiveDescendantContext();
  const multiselect = useListboxContext_unstable((ctx) => ctx.multiselect);
  const registerOption = useListboxContext_unstable((ctx) => ctx.registerOption);
  const selected = useListboxContext_unstable((ctx) => {
    const selectedOptions = ctx.selectedOptions;
    return optionValue !== void 0 && selectedOptions.find((o) => o === optionValue) !== void 0;
  });
  const selectOption = useListboxContext_unstable((ctx) => ctx.selectOption);
  const onOptionClick = useListboxContext_unstable((ctx) => ctx.onOptionClick);
  let CheckIcon = React105.createElement(CheckmarkFilled, null);
  if (multiselect) {
    CheckIcon = selected ? React105.createElement(Checkmark12Filled, null) : "";
  }
  const onClick = (event) => {
    var _props_onClick;
    if (disabled) {
      event.preventDefault();
      return;
    }
    activeDescendantController.focus(id);
    selectOption(event, optionData);
    onOptionClick(event);
    (_props_onClick = props.onClick) === null || _props_onClick === void 0 ? void 0 : _props_onClick.call(props, event);
  };
  React105.useEffect(() => {
    if (id && optionRef.current) {
      return registerOption(optionData, optionRef.current);
    }
  }, [
    id,
    optionData,
    registerOption
  ]);
  const semanticProps = multiselect ? {
    role: "menuitemcheckbox",
    "aria-checked": selected
  } : {
    role: "option",
    "aria-selected": selected
  };
  return {
    components: {
      root: "div",
      checkIcon: "span"
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      // FIXME:
      // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`
      // but since it would be a breaking change to fix it, we are casting ref to it's proper type
      ref: useMergedRefs(ref, optionRef),
      "aria-disabled": disabled ? "true" : void 0,
      id,
      ...semanticProps,
      ...props,
      onClick
    }), {
      elementType: "div"
    }),
    checkIcon: slot_exports.optional(props.checkIcon, {
      renderByDefault: true,
      defaultProps: {
        "aria-hidden": "true",
        children: CheckIcon
      },
      elementType: "span"
    }),
    disabled,
    multiselect,
    selected,
    // no longer used
    focusVisible: false,
    active: false
  };
};

// node_modules/@fluentui/react-combobox/lib/components/Option/renderOption.js
var renderOption_unstable = (state) => {
  assertSlots(state);
  return jsxs(state.root, {
    children: [
      state.checkIcon && jsx(state.checkIcon, {}),
      state.root.children
    ]
  });
};

// node_modules/@fluentui/react-combobox/lib/components/Option/Option.js
var Option = React106.forwardRef((props, ref) => {
  const state = useOption_unstable(props, ref);
  useOptionStyles_unstable(state);
  useCustomStyleHook("useOptionStyles_unstable")(state);
  return renderOption_unstable(state);
});
Option.displayName = "Option";

// node_modules/@fluentui/react-combobox/lib/components/Option/Option.types.js
var React107 = __toESM(require_react());

// node_modules/@fluentui/react-combobox/lib/components/Combobox/Combobox.js
var React114 = __toESM(require_react());

// node_modules/@fluentui/react-combobox/lib/components/Combobox/useCombobox.js
var React113 = __toESM(require_react());

// node_modules/@fluentui/react-combobox/lib/utils/useComboboxBaseState.js
var React108 = __toESM(require_react());
var ReactDOM = __toESM(require_react_dom());
var useComboboxBaseState = (props) => {
  "use no memo";
  const { appearance = "outline", disableAutoFocus, children: children2, clearable = false, editable = false, inlinePopup = false, mountNode = void 0, multiselect, onOpenChange, size = "medium", activeDescendantController, freeform = false, disabled = false, onActiveOptionChange = null } = props;
  const optionCollection = useOptionCollection();
  const { getOptionsMatchingValue } = optionCollection;
  const { getOptionById } = optionCollection;
  const getActiveOption = React108.useCallback(() => {
    const activeOptionId = activeDescendantController.active();
    return activeOptionId ? getOptionById(activeOptionId) : void 0;
  }, [
    activeDescendantController,
    getOptionById
  ]);
  const UNSAFE_activeOption = getActiveOption();
  const UNSAFE_setActiveOption = React108.useCallback((option) => {
    let nextOption = void 0;
    if (typeof option === "function") {
      const activeOption = getActiveOption();
      nextOption = option(activeOption);
    }
    if (nextOption) {
      activeDescendantController.focus(nextOption.id);
    } else {
      activeDescendantController.blur();
    }
  }, [
    activeDescendantController,
    getActiveOption
  ]);
  const [focusVisible, setFocusVisible] = React108.useState(false);
  const [hasFocus, setHasFocus] = React108.useState(false);
  const ignoreNextBlur = React108.useRef(false);
  const isFirstMount = useFirstMount();
  const [controllableValue, setValue] = useControllableState({
    state: props.value,
    initialState: void 0
  });
  const { selectedOptions, selectOption: baseSelectOption, clearSelection } = useSelection2(props);
  const selectOption = React108.useCallback((ev, option) => {
    ReactDOM.unstable_batchedUpdates(() => {
      setValue(void 0);
      baseSelectOption(ev, option);
    });
  }, [
    setValue,
    baseSelectOption
  ]);
  const value = React108.useMemo(() => {
    if (controllableValue !== void 0) {
      return controllableValue;
    }
    if (isFirstMount && props.defaultValue !== void 0) {
      return props.defaultValue;
    }
    const selectedOptionsText = getOptionsMatchingValue((optionValue) => {
      return selectedOptions.includes(optionValue);
    }).map((option) => option.text);
    if (multiselect) {
      return editable ? "" : selectedOptionsText.join(", ");
    }
    return selectedOptionsText[0];
  }, [
    controllableValue,
    editable,
    getOptionsMatchingValue,
    multiselect,
    props.defaultValue,
    selectedOptions
  ]);
  const [open, setOpenState] = useControllableState({
    state: props.open,
    defaultState: props.defaultOpen,
    initialState: false
  });
  const setOpen = React108.useCallback((event, newState) => {
    if (disabled) {
      return;
    }
    onOpenChange === null || onOpenChange === void 0 ? void 0 : onOpenChange(event, {
      open: newState
    });
    ReactDOM.unstable_batchedUpdates(() => {
      if (!newState && !freeform) {
        setValue(void 0);
      }
      setOpenState(newState);
    });
  }, [
    onOpenChange,
    setOpenState,
    setValue,
    freeform,
    disabled
  ]);
  React108.useEffect(() => {
    if (open) {
      if (!multiselect && selectedOptions.length > 0) {
        const selectedOption = getOptionsMatchingValue((v) => v === selectedOptions[0]).pop();
        if (selectedOption === null || selectedOption === void 0 ? void 0 : selectedOption.id) {
          activeDescendantController.focus(selectedOption.id);
        }
      }
    } else {
      activeDescendantController.blur();
    }
  }, [
    open,
    activeDescendantController
  ]);
  React108.useEffect(() => {
    if (open && !disableAutoFocus && !activeDescendantController.active()) {
      activeDescendantController.first();
    }
  }, [
    open,
    children2,
    disableAutoFocus,
    activeDescendantController,
    getOptionById
  ]);
  const onActiveDescendantChange = useEventCallback((event) => {
    const previousOption = event.detail.previousId ? optionCollection.getOptionById(event.detail.previousId) : null;
    const nextOption = optionCollection.getOptionById(event.detail.id);
    onActiveOptionChange === null || onActiveOptionChange === void 0 ? void 0 : onActiveOptionChange(event, {
      event,
      type: "change",
      previousOption,
      nextOption
    });
  });
  return {
    ...optionCollection,
    freeform,
    disabled,
    selectOption,
    clearSelection,
    selectedOptions,
    activeOption: UNSAFE_activeOption,
    appearance,
    clearable,
    focusVisible,
    ignoreNextBlur,
    inlinePopup,
    mountNode,
    open,
    hasFocus,
    setActiveOption: UNSAFE_setActiveOption,
    setFocusVisible,
    setHasFocus,
    setOpen,
    setValue,
    size,
    value,
    multiselect,
    onOptionClick: useEventCallback((e) => {
      if (!multiselect) {
        setOpen(e, false);
      }
    }),
    onActiveDescendantChange
  };
};

// node_modules/@fluentui/react-combobox/lib/utils/useComboboxPositioning.js
var React109 = __toESM(require_react());
function useComboboxPositioning(props) {
  const { positioning } = props;
  const fallbackPositions2 = [
    "above",
    "after",
    "after-top",
    "before",
    "before-top"
  ];
  const popperOptions = {
    position: "below",
    align: "start",
    offset: {
      crossAxis: 0,
      mainAxis: 2
    },
    fallbackPositions: fallbackPositions2,
    matchTargetSize: "width",
    autoSize: true,
    ...resolvePositioningShorthand(positioning)
  };
  const { targetRef, containerRef } = usePositioning(popperOptions);
  return [
    containerRef,
    targetRef
  ];
}

// node_modules/@fluentui/react-combobox/lib/utils/useListboxSlot.js
var React110 = __toESM(require_react());
function useListboxSlot(listboxSlotFromProp, ref, options) {
  const { state: { multiselect }, triggerRef, defaultProps: defaultProps2 } = options;
  const listboxId = useId("fluent-listbox", isResolvedShorthand(listboxSlotFromProp) ? listboxSlotFromProp.id : void 0);
  const listboxSlot = slot_exports.optional(listboxSlotFromProp, {
    renderByDefault: true,
    elementType: Listbox,
    defaultProps: {
      id: listboxId,
      multiselect,
      tabIndex: void 0,
      ...defaultProps2
    }
  });
  const onMouseDown = useEventCallback(mergeCallbacks((event) => {
    event.preventDefault();
  }, listboxSlot === null || listboxSlot === void 0 ? void 0 : listboxSlot.onMouseDown));
  const onClick = useEventCallback(mergeCallbacks((event) => {
    var _triggerRef_current;
    event.preventDefault();
    (_triggerRef_current = triggerRef.current) === null || _triggerRef_current === void 0 ? void 0 : _triggerRef_current.focus();
  }, listboxSlot === null || listboxSlot === void 0 ? void 0 : listboxSlot.onClick));
  const listboxRef = useMergedRefs(listboxSlot === null || listboxSlot === void 0 ? void 0 : listboxSlot.ref, ref);
  if (listboxSlot) {
    listboxSlot.ref = listboxRef;
    listboxSlot.onMouseDown = onMouseDown;
    listboxSlot.onClick = onClick;
  }
  return listboxSlot;
}

// node_modules/@fluentui/react-combobox/lib/components/Combobox/useInputTriggerSlot.js
var React112 = __toESM(require_react());

// node_modules/@fluentui/react-combobox/lib/utils/useTriggerSlot.js
var React111 = __toESM(require_react());
function useTriggerSlot(triggerSlotFromProp, ref, options) {
  const { state: { open, setOpen, setHasFocus }, defaultProps: defaultProps2, elementType, activeDescendantController } = options;
  const trigger = slot_exports.always(triggerSlotFromProp, {
    defaultProps: {
      type: "text",
      "aria-expanded": open,
      role: "combobox",
      ...typeof defaultProps2 === "object" && defaultProps2
    },
    elementType
  });
  const triggerRef = React111.useRef(null);
  trigger.ref = useMergedRefs(triggerRef, trigger.ref, ref);
  trigger.onBlur = mergeCallbacks((event) => {
    setOpen(event, false);
    setHasFocus(false);
  }, trigger.onBlur);
  trigger.onFocus = mergeCallbacks((event) => {
    if (event.target === event.currentTarget) {
      setHasFocus(true);
    }
  }, trigger.onFocus);
  trigger.onClick = mergeCallbacks((event) => {
    setOpen(event, !open);
  }, trigger.onClick);
  trigger.onKeyDown = mergeCallbacks(useTriggerKeydown({
    activeDescendantController,
    ...options.state
  }), trigger.onKeyDown);
  return trigger;
}
function useTriggerKeydown(options) {
  const { activeDescendantController, getOptionById, setOpen, selectOption, multiselect, open } = options;
  const getActiveOption = React111.useCallback(() => {
    const activeOptionId = activeDescendantController.active();
    return activeOptionId ? getOptionById(activeOptionId) : void 0;
  }, [
    activeDescendantController,
    getOptionById
  ]);
  const first = () => {
    activeDescendantController.first();
  };
  const last = () => {
    activeDescendantController.last();
  };
  const next = (activeOption) => {
    if (activeOption) {
      activeDescendantController.next();
    } else {
      activeDescendantController.first();
    }
  };
  const previous = (activeOption) => {
    if (activeOption) {
      activeDescendantController.prev();
    } else {
      activeDescendantController.first();
    }
  };
  const pageUp = () => {
    for (let i = 0; i < 10; i++) {
      activeDescendantController.prev();
    }
  };
  const pageDown = () => {
    for (let i = 0; i < 10; i++) {
      activeDescendantController.next();
    }
  };
  const setKeyboardNavigation = useSetKeyboardNavigation();
  return useEventCallback((e) => {
    const action = getDropdownActionFromKey(e, {
      open,
      multiselect
    });
    const activeOption = getActiveOption();
    switch (action) {
      case "First":
      case "Last":
      case "Next":
      case "Previous":
      case "PageDown":
      case "PageUp":
      case "Open":
      case "Close":
      case "CloseSelect":
      case "Select":
        e.preventDefault();
        break;
    }
    setKeyboardNavigation(true);
    switch (action) {
      case "First":
        first();
        break;
      case "Last":
        last();
        break;
      case "Next":
        next(activeOption);
        break;
      case "Previous":
        previous(activeOption);
        break;
      case "PageDown":
        pageDown();
        break;
      case "PageUp":
        pageUp();
        break;
      case "Open":
        setOpen(e, true);
        break;
      case "Close":
        e.stopPropagation();
        setOpen(e, false);
        break;
      case "CloseSelect":
        !multiselect && !(activeOption === null || activeOption === void 0 ? void 0 : activeOption.disabled) && setOpen(e, false);
      case "Select":
        activeOption && selectOption(e, activeOption);
        break;
      case "Tab":
        !multiselect && activeOption && selectOption(e, activeOption);
        break;
    }
  });
}

// node_modules/@fluentui/react-combobox/lib/components/Combobox/useInputTriggerSlot.js
function useInputTriggerSlot(triggerFromProps, ref, options) {
  "use no memo";
  const { state: { open, value, selectOption, setValue, multiselect, selectedOptions, clearSelection, getOptionById, setOpen }, freeform, defaultProps: defaultProps2, activeDescendantController } = options;
  const onBlur = (event) => {
    if (!open && !freeform) {
      const activeOptionId = activeDescendantController.active();
      const activeOption = activeOptionId ? getOptionById(activeOptionId) : null;
      if (value && activeOption && value.trim().toLowerCase() === (activeOption === null || activeOption === void 0 ? void 0 : activeOption.text.toLowerCase())) {
        selectOption(event, activeOption);
      }
      setValue(void 0);
    }
  };
  const getOptionFromInput = (inputValue) => {
    const searchString = inputValue === null || inputValue === void 0 ? void 0 : inputValue.trim().toLowerCase();
    if (!searchString || searchString.length === 0) {
      activeDescendantController.blur();
      return;
    }
    const matcher = (optionText) => optionText.toLowerCase().indexOf(searchString) === 0;
    const match = activeDescendantController.find((id) => {
      const option = getOptionById(id);
      return !!option && matcher(option.text);
    });
    if (!match) {
      activeDescendantController.blur();
      return void 0;
    }
    return getOptionById(match);
  };
  const onChange = (event) => {
    const inputValue = event.target.value;
    setValue(inputValue);
    const matchingOption = getOptionFromInput(inputValue);
    if (!multiselect && selectedOptions.length === 1 && (inputValue.length < 1 || !matchingOption)) {
      clearSelection(event);
    }
  };
  const trigger = useTriggerSlot(triggerFromProps, ref, {
    state: options.state,
    defaultProps: defaultProps2,
    elementType: "input",
    activeDescendantController
  });
  trigger.onChange = mergeCallbacks(trigger.onChange, onChange);
  trigger.onBlur = mergeCallbacks(trigger.onBlur, onBlur);
  const [hideActiveDescendant, setHideActiveDescendant] = React112.useState(false);
  const isTyping = React112.useRef(false);
  const defaultOnKeyDown = trigger.onKeyDown;
  const onKeyDown = useEventCallback((event) => {
    if (!open && getDropdownActionFromKey(event) === "Type") {
      setOpen(event, true);
    }
    if (event.key === ArrowLeft || event.key === ArrowRight) {
      setHideActiveDescendant(true);
    } else {
      setHideActiveDescendant(false);
    }
    const action = getDropdownActionFromKey(event, {
      open,
      multiselect
    });
    if (action === "Type") {
      isTyping.current = true;
    } else if (action === "Open" && event.key !== " " || action === "Next" || action === "Previous" || action === "First" || action === "Last" || action === "PageUp" || action === "PageDown") {
      isTyping.current = false;
    }
    if ((isTyping.current || !open) && event.key === " ") {
      var _triggerFromProps_onKeyDown;
      triggerFromProps === null || triggerFromProps === void 0 ? void 0 : (_triggerFromProps_onKeyDown = triggerFromProps.onKeyDown) === null || _triggerFromProps_onKeyDown === void 0 ? void 0 : _triggerFromProps_onKeyDown.call(triggerFromProps, event);
      return;
    }
    defaultOnKeyDown === null || defaultOnKeyDown === void 0 ? void 0 : defaultOnKeyDown(event);
  });
  trigger.onKeyDown = onKeyDown;
  if (hideActiveDescendant) {
    trigger["aria-activedescendant"] = void 0;
  }
  return trigger;
}

// node_modules/@fluentui/react-combobox/lib/components/Combobox/useCombobox.js
var useCombobox_unstable = (props, ref) => {
  "use no memo";
  var _state_clearIcon, _state_clearIcon1;
  props = useFieldControlProps_unstable(props, {
    supportsLabelFor: true,
    supportsRequired: true,
    supportsSize: true
  });
  const { listboxRef: activeDescendantListboxRef, activeParentRef, controller: activeDescendantController } = useActiveDescendant({
    matchOption: (el) => el.classList.contains(optionClassNames.root)
  });
  const baseState = useComboboxBaseState({
    ...props,
    editable: true,
    activeDescendantController
  });
  const { clearable, clearSelection, disabled, multiselect, open, selectedOptions, setOpen, value, hasFocus } = baseState;
  const [comboboxPopupRef, comboboxTargetRef] = useComboboxPositioning(props);
  const { disableAutoFocus = false, freeform, inlinePopup } = props;
  const comboId = useId("combobox-");
  const { primary: triggerNativeProps, root: rootNativeProps } = getPartitionedNativeProps({
    props,
    primarySlotTagName: "input",
    excludedPropNames: [
      "children",
      "size"
    ]
  });
  const triggerRef = React113.useRef(null);
  const listbox = useListboxSlot(props.listbox, useMergedRefs(comboboxPopupRef, activeDescendantListboxRef), {
    state: baseState,
    triggerRef,
    defaultProps: {
      children: props.children,
      disableAutoFocus
    }
  });
  var _props_input;
  const triggerSlot = useInputTriggerSlot((_props_input = props.input) !== null && _props_input !== void 0 ? _props_input : {}, useMergedRefs(triggerRef, activeParentRef, ref), {
    state: baseState,
    freeform,
    defaultProps: {
      type: "text",
      value: value !== null && value !== void 0 ? value : "",
      "aria-controls": open ? listbox === null || listbox === void 0 ? void 0 : listbox.id : void 0,
      ...triggerNativeProps
    },
    activeDescendantController
  });
  const rootSlot = slot_exports.always(props.root, {
    defaultProps: {
      "aria-owns": !inlinePopup && open ? listbox === null || listbox === void 0 ? void 0 : listbox.id : void 0,
      ...rootNativeProps
    },
    elementType: "div"
  });
  rootSlot.ref = useMergedRefs(rootSlot.ref, comboboxTargetRef);
  const showClearIcon = selectedOptions.length > 0 && clearable && !multiselect;
  const state = {
    components: {
      root: "div",
      input: "input",
      expandIcon: "span",
      listbox: Listbox,
      clearIcon: "span"
    },
    root: rootSlot,
    input: triggerSlot,
    listbox: open || hasFocus ? listbox : void 0,
    clearIcon: slot_exports.optional(props.clearIcon, {
      defaultProps: {
        "aria-hidden": "true",
        children: React113.createElement(DismissRegular, null)
      },
      elementType: "span",
      renderByDefault: true
    }),
    expandIcon: slot_exports.optional(props.expandIcon, {
      renderByDefault: true,
      defaultProps: {
        "aria-disabled": disabled ? "true" : void 0,
        "aria-expanded": open,
        children: React113.createElement(ChevronDownRegular, null),
        role: "button"
      },
      elementType: "span"
    }),
    showClearIcon,
    activeDescendantController,
    ...baseState
  };
  const { targetDocument } = useFluent();
  useOnClickOutside({
    element: targetDocument,
    callback: (event) => setOpen(event, false),
    refs: [
      triggerRef,
      comboboxPopupRef,
      comboboxTargetRef
    ],
    disabled: !open
  });
  const { onMouseDown: onIconMouseDown } = state.expandIcon || {};
  const onExpandIconMouseDown = useEventCallback(mergeCallbacks(onIconMouseDown, (event) => {
    var _triggerRef_current;
    event.preventDefault();
    state.setOpen(event, !state.open);
    (_triggerRef_current = triggerRef.current) === null || _triggerRef_current === void 0 ? void 0 : _triggerRef_current.focus();
  }));
  if (state.expandIcon) {
    state.expandIcon.onMouseDown = onExpandIconMouseDown;
    const hasExpandLabel = state.expandIcon["aria-label"] || state.expandIcon["aria-labelledby"];
    const defaultOpenString = "Open";
    if (!hasExpandLabel) {
      if (props["aria-labelledby"]) {
        var _state_expandIcon_id;
        const chevronId = (_state_expandIcon_id = state.expandIcon.id) !== null && _state_expandIcon_id !== void 0 ? _state_expandIcon_id : `${comboId}-chevron`;
        const chevronLabelledBy = `${chevronId} ${state.input["aria-labelledby"]}`;
        state.expandIcon["aria-label"] = defaultOpenString;
        state.expandIcon.id = chevronId;
        state.expandIcon["aria-labelledby"] = chevronLabelledBy;
      } else if (props["aria-label"]) {
        state.expandIcon["aria-label"] = `${defaultOpenString} ${props["aria-label"]}`;
      } else {
        state.expandIcon["aria-label"] = defaultOpenString;
      }
    }
  }
  const onClearIconMouseDown = useEventCallback(mergeCallbacks((_state_clearIcon = state.clearIcon) === null || _state_clearIcon === void 0 ? void 0 : _state_clearIcon.onMouseDown, (ev) => {
    ev.preventDefault();
  }));
  const onClearIconClick = useEventCallback(mergeCallbacks((_state_clearIcon1 = state.clearIcon) === null || _state_clearIcon1 === void 0 ? void 0 : _state_clearIcon1.onClick, (ev) => {
    clearSelection(ev);
  }));
  if (state.clearIcon) {
    state.clearIcon.onMouseDown = onClearIconMouseDown;
    state.clearIcon.onClick = onClearIconClick;
  }
  if (multiselect) {
    state.clearIcon = void 0;
  }
  if (true) {
    React113.useEffect(() => {
      if (clearable && multiselect) {
        console.error(`[@fluentui/react-combobox] "clearable" prop is not supported in multiselect mode.`);
      }
    }, [
      clearable,
      multiselect
    ]);
  }
  return state;
};

// node_modules/@fluentui/react-combobox/lib/components/Combobox/renderCombobox.js
var renderCombobox_unstable = (state, contextValues) => {
  assertSlots(state);
  return jsx(state.root, {
    children: jsx(ActiveDescendantContextProvider, {
      value: contextValues.activeDescendant,
      children: jsx(ListboxProvider, {
        value: contextValues.listbox,
        children: jsxs(ComboboxContext.Provider, {
          value: contextValues.combobox,
          children: [
            jsx(state.input, {}),
            state.clearIcon && jsx(state.clearIcon, {}),
            state.expandIcon && jsx(state.expandIcon, {}),
            state.listbox && (state.inlinePopup ? jsx(state.listbox, {}) : jsx(Portal, {
              mountNode: state.mountNode,
              children: jsx(state.listbox, {})
            }))
          ]
        })
      })
    })
  });
};

// node_modules/@fluentui/react-combobox/lib/components/Combobox/useComboboxStyles.styles.js
var comboboxClassNames = {
  root: "fui-Combobox",
  input: "fui-Combobox__input",
  expandIcon: "fui-Combobox__expandIcon",
  clearIcon: "fui-Combobox__clearIcon",
  listbox: "fui-Combobox__listbox"
};
var useStyles12 = __styles2({
  root: {
    Bt984gj: "f122n59",
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "ft85np5",
    B7ck84d: "f1ewtqcl",
    i8kkvl: "f14mj54c",
    mc9l5x: "fwk3njj",
    Budl1dq: "fz17x9o",
    Brf1p80: "f1869bpl",
    Bf4jedk: "f1exfvgq",
    qhf8xq: "f10pi13n",
    ha4doy: "fmrv4ls",
    Bbr2w1p: "f14a1fxs",
    Bduesf4: "f3e99gv",
    Bpq79vn: "fhljsf7",
    li1rpt: "f1gw3sf2",
    Bsft5z2: "f13zj6fq",
    E3zdtr: "f1mdlcz9",
    Eqx8gd: ["f1a7op3", "f1cjjd47"],
    By385i5: "f1gboi2j",
    B1piin3: ["f1cjjd47", "f1a7op3"],
    Dlnsje: "f145g4dw",
    d9w3h3: ["f1kp91vd", "f1ibwz09"],
    B3778ie: ["f1ibwz09", "f1kp91vd"],
    B1q35kw: 0,
    Bw17bha: 0,
    Bcgy8vk: 0,
    Bjuhk93: "f1mnjydx",
    Gjdm7m: "f13evtba",
    b1kco5: "f1yk9hq",
    Ba2ppi3: "fhwpy7i",
    F2fol1: "f14ee0xe",
    lck23g: "f1xhbsuh",
    df92cz: "fv8e3ye",
    I188md: "ftb5wc6",
    umuwi5: "fjw5xc1",
    Blcqepd: "f1xdyd5c",
    nplu4u: "fatpbeo",
    Bioka5o: "fb7uyps",
    H713fs: "f1cmft4k",
    B9ooomg: "f1x58t8o",
    Bercvud: "f1ibeo51"
  },
  listbox: {
    E5pizo: "f1hg901r",
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "ft85np5",
    Bxyxcbc: "fmmk62d",
    B7ck84d: "f1ewtqcl"
  },
  listboxCollapsed: {
    mc9l5x: "fjseox"
  },
  inlineListbox: {
    Bj3rh1h: "f19g0ac"
  },
  small: {
    Bqenvij: "frvgh55",
    z189sj: ["fdw0yi8", "fk8j09s"]
  },
  medium: {
    Bqenvij: "f1d2rq10",
    z189sj: ["f11gcy0p", "f1ng84yb"]
  },
  large: {
    i8kkvl: "f1rjii52",
    Bqenvij: "fbhnoac",
    z189sj: ["fw5db7e", "f1uw59to"]
  },
  outline: {
    De3pzq: "fxugw4r",
    Bgfg5da: 0,
    B9xav0g: "f1c1zstj",
    oivjwe: 0,
    Bn0qgzm: 0,
    B4g9neb: 0,
    zhjwy3: 0,
    wvpqe5: 0,
    ibv6hh: 0,
    u1mtju: 0,
    h3c5rm: 0,
    vrafjx: 0,
    Bekrc4i: 0,
    i8vvqc: 0,
    g2u3we: 0,
    icvyot: 0,
    B4j52fo: 0,
    irswps: "fhz96rm"
  },
  outlineInteractive: {
    Bgoe8wy: "fvcxoqz",
    Bwzppfd: ["f1ub3y4t", "f1m52nbi"],
    oetu4i: "flmw63s",
    gg5e9n: ["f1m52nbi", "f1ub3y4t"],
    B6oc9vd: "fvs00aa",
    ak43y8: ["f1assf6x", "f4ruux4"],
    wmxk5l: "fqhmt4z",
    B50zh58: ["f4ruux4", "f1assf6x"]
  },
  underline: {
    De3pzq: "f1c21dwh",
    B9xav0g: 0,
    oivjwe: 0,
    Bn0qgzm: 0,
    Bgfg5da: "f9ez7ne",
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "fokr779"
  },
  "filled-lighter": {
    De3pzq: "fxugw4r",
    Bgfg5da: 0,
    B9xav0g: 0,
    oivjwe: 0,
    Bn0qgzm: 0,
    B4g9neb: 0,
    zhjwy3: 0,
    wvpqe5: 0,
    ibv6hh: 0,
    u1mtju: 0,
    h3c5rm: 0,
    vrafjx: 0,
    Bekrc4i: 0,
    i8vvqc: 0,
    g2u3we: 0,
    icvyot: 0,
    B4j52fo: 0,
    irswps: "f88035w"
  },
  "filled-darker": {
    De3pzq: "f16xq7d1",
    Bgfg5da: 0,
    B9xav0g: 0,
    oivjwe: 0,
    Bn0qgzm: 0,
    B4g9neb: 0,
    zhjwy3: 0,
    wvpqe5: 0,
    ibv6hh: 0,
    u1mtju: 0,
    h3c5rm: 0,
    vrafjx: 0,
    Bekrc4i: 0,
    i8vvqc: 0,
    g2u3we: 0,
    icvyot: 0,
    B4j52fo: 0,
    irswps: "f88035w"
  },
  invalid: {
    tvckwq: "fs4k3qj",
    gk2u95: ["fcee079", "fmyw78r"],
    hhx65j: "f1fgmyf4",
    Bxowmz0: ["fmyw78r", "fcee079"]
  },
  invalidUnderline: {
    hhx65j: "f1fgmyf4"
  },
  disabled: {
    Bceei9c: "fdrzuqr",
    De3pzq: "f1c21dwh",
    g2u3we: "f1jj8ep1",
    h3c5rm: ["f15xbau", "fy0fskl"],
    B9xav0g: "f4ikngz",
    zhjwy3: ["fy0fskl", "f15xbau"],
    Bjwas2f: "fg455y9",
    Bn1d65q: ["f1rvyvqg", "f14g86mu"],
    Bxeuatn: "f1cwzwz",
    n51gp8: ["f14g86mu", "f1rvyvqg"]
  }
}, {
  d: [".f122n59{align-items:center;}", [".ft85np5{border-radius:var(--borderRadiusMedium);}", {
    p: -1
  }], ".f1ewtqcl{box-sizing:border-box;}", ".f14mj54c{column-gap:var(--spacingHorizontalXXS);}", ".fwk3njj{display:inline-grid;}", ".fz17x9o{grid-template-columns:1fr auto;}", ".f1869bpl{justify-content:space-between;}", ".f1exfvgq{min-width:250px;}", ".f10pi13n{position:relative;}", ".fmrv4ls{vertical-align:middle;}", ".f1gw3sf2::after{box-sizing:border-box;}", '.f13zj6fq::after{content:"";}', ".f1mdlcz9::after{position:absolute;}", ".f1a7op3::after{left:-1px;}", ".f1cjjd47::after{right:-1px;}", ".f1gboi2j::after{bottom:-1px;}", ".f145g4dw::after{height:max(2px, var(--borderRadiusMedium));}", ".f1kp91vd::after{border-bottom-left-radius:var(--borderRadiusMedium);}", ".f1ibwz09::after{border-bottom-right-radius:var(--borderRadiusMedium);}", [".f1mnjydx::after{border-bottom:var(--strokeWidthThick) solid var(--colorCompoundBrandStroke);}", {
    p: -1
  }], ".f13evtba::after{clip-path:inset(calc(100% - 2px) 0 0 0);}", ".f1yk9hq::after{transform:scaleX(0);}", ".fhwpy7i::after{transition-property:transform;}", ".f14ee0xe::after{transition-duration:var(--durationUltraFast);}", ".f1xhbsuh::after{transition-delay:var(--curveAccelerateMid);}", ".f1hg901r{box-shadow:var(--shadow16);}", [".ft85np5{border-radius:var(--borderRadiusMedium);}", {
    p: -1
  }], ".fmmk62d{max-height:80vh;}", ".fjseox{display:none;}", ".f19g0ac{z-index:1;}", ".frvgh55{height:24px;}", ".fdw0yi8{padding-right:var(--spacingHorizontalSNudge);}", ".fk8j09s{padding-left:var(--spacingHorizontalSNudge);}", ".f1d2rq10{height:32px;}", ".f11gcy0p{padding-right:var(--spacingHorizontalMNudge);}", ".f1ng84yb{padding-left:var(--spacingHorizontalMNudge);}", ".f1rjii52{column-gap:var(--spacingHorizontalSNudge);}", ".fbhnoac{height:40px;}", ".fw5db7e{padding-right:var(--spacingHorizontalM);}", ".f1uw59to{padding-left:var(--spacingHorizontalM);}", ".fxugw4r{background-color:var(--colorNeutralBackground1);}", [".fhz96rm{border:var(--strokeWidthThin) solid var(--colorNeutralStroke1);}", {
    p: -2
  }], ".f1c1zstj{border-bottom-color:var(--colorNeutralStrokeAccessible);}", ".f1c21dwh{background-color:var(--colorTransparentBackground);}", [".f9ez7ne{border-bottom:var(--strokeWidthThin) solid var(--colorNeutralStrokeAccessible);}", {
    p: -1
  }], [".fokr779{border-radius:0;}", {
    p: -1
  }], [".f88035w{border:var(--strokeWidthThin) solid var(--colorTransparentStroke);}", {
    p: -2
  }], ".f16xq7d1{background-color:var(--colorNeutralBackground3);}", [".f88035w{border:var(--strokeWidthThin) solid var(--colorTransparentStroke);}", {
    p: -2
  }], ".fs4k3qj:not(:focus-within),.fs4k3qj:hover:not(:focus-within){border-top-color:var(--colorPaletteRedBorder2);}", ".fcee079:not(:focus-within),.fcee079:hover:not(:focus-within){border-right-color:var(--colorPaletteRedBorder2);}", ".fmyw78r:not(:focus-within),.fmyw78r:hover:not(:focus-within){border-left-color:var(--colorPaletteRedBorder2);}", ".f1fgmyf4:not(:focus-within),.f1fgmyf4:hover:not(:focus-within){border-bottom-color:var(--colorPaletteRedBorder2);}", ".fdrzuqr{cursor:not-allowed;}", ".f1jj8ep1{border-top-color:var(--colorNeutralStrokeDisabled);}", ".f15xbau{border-right-color:var(--colorNeutralStrokeDisabled);}", ".fy0fskl{border-left-color:var(--colorNeutralStrokeDisabled);}", ".f4ikngz{border-bottom-color:var(--colorNeutralStrokeDisabled);}"],
  w: [".f14a1fxs:focus-within{outline-width:2px;}", ".f3e99gv:focus-within{outline-style:solid;}", ".fhljsf7:focus-within{outline-color:transparent;}", ".fjw5xc1:focus-within::after{transform:scaleX(1);}", ".f1xdyd5c:focus-within::after{transition-property:transform;}", ".fatpbeo:focus-within::after{transition-duration:var(--durationNormal);}", ".fb7uyps:focus-within::after{transition-delay:var(--curveDecelerateMid);}", ".f1ibeo51:focus-within:active::after{border-bottom-color:var(--colorCompoundBrandStrokePressed);}"],
  m: [["@media screen and (prefers-reduced-motion: reduce){.fv8e3ye::after{transition-duration:0.01ms;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }], ["@media screen and (prefers-reduced-motion: reduce){.ftb5wc6::after{transition-delay:0.01ms;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }], ["@media screen and (prefers-reduced-motion: reduce){.f1cmft4k:focus-within::after{transition-duration:0.01ms;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }], ["@media screen and (prefers-reduced-motion: reduce){.f1x58t8o:focus-within::after{transition-delay:0.01ms;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }], ["@media (forced-colors: active){.fg455y9{border-top-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f14g86mu{border-left-color:GrayText;}.f1rvyvqg{border-right-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1cwzwz{border-bottom-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }]],
  h: [".fvcxoqz:hover{border-top-color:var(--colorNeutralStroke1Hover);}", ".f1ub3y4t:hover{border-right-color:var(--colorNeutralStroke1Hover);}", ".f1m52nbi:hover{border-left-color:var(--colorNeutralStroke1Hover);}", ".flmw63s:hover{border-bottom-color:var(--colorNeutralStrokeAccessible);}"],
  a: [".fvs00aa:active{border-top-color:var(--colorNeutralStroke1Pressed);}", ".f1assf6x:active{border-right-color:var(--colorNeutralStroke1Pressed);}", ".f4ruux4:active{border-left-color:var(--colorNeutralStroke1Pressed);}", ".fqhmt4z:active{border-bottom-color:var(--colorNeutralStrokeAccessible);}"]
});
var useInputStyles2 = __styles2({
  input: {
    qb2dma: "f1ub7u0d",
    De3pzq: "f1c21dwh",
    Bgfg5da: 0,
    B9xav0g: 0,
    oivjwe: 0,
    Bn0qgzm: 0,
    B4g9neb: 0,
    zhjwy3: 0,
    wvpqe5: 0,
    ibv6hh: 0,
    u1mtju: 0,
    h3c5rm: 0,
    vrafjx: 0,
    Bekrc4i: 0,
    i8vvqc: 0,
    g2u3we: 0,
    icvyot: 0,
    B4j52fo: 0,
    irswps: "f3bhgqh",
    sj55zd: "f19n0e5",
    Bahqtrf: "fk6fouc",
    Brovlpu: "ftqa4ok",
    yvdlaj: "fwyc1cq",
    B3o7kgh: "f13ta7ih"
  },
  small: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fy9rknc",
    Bhrd7zp: "figsok6",
    Bg96gwp: "fwrc4pm",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: ["fxe2rs", "f1gflqzi"]
  },
  medium: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "figsok6",
    Bg96gwp: "f1i3iumi",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: ["fzy81xo", "f58b53b"]
  },
  large: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fod5ikn",
    Bhrd7zp: "figsok6",
    Bg96gwp: "faaz57k",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: ["f1kdav7a", "footqm6"]
  },
  disabled: {
    sj55zd: "f1s2aq7o",
    De3pzq: "f1c21dwh",
    Bceei9c: "fdrzuqr",
    yvdlaj: "fahhnxm"
  }
}, {
  d: [".f1ub7u0d{align-self:stretch;}", ".f1c21dwh{background-color:var(--colorTransparentBackground);}", [".f3bhgqh{border:none;}", {
    p: -2
  }], ".f19n0e5{color:var(--colorNeutralForeground1);}", ".fk6fouc{font-family:var(--fontFamilyBase);}", ".fwyc1cq::-webkit-input-placeholder{color:var(--colorNeutralForeground4);}", ".fwyc1cq::-moz-placeholder{color:var(--colorNeutralForeground4);}", ".f13ta7ih::-webkit-input-placeholder{opacity:1;}", ".f13ta7ih::-moz-placeholder{opacity:1;}", ".fy9rknc{font-size:var(--fontSizeBase200);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".fwrc4pm{line-height:var(--lineHeightBase200);}", [".fxe2rs{padding:0 0 0 calc(var(--spacingHorizontalSNudge) + var(--spacingHorizontalXXS));}", {
    p: -1
  }], [".f1gflqzi{padding:0 calc(var(--spacingHorizontalSNudge) + var(--spacingHorizontalXXS)) 0 0;}", {
    p: -1
  }], ".fkhj508{font-size:var(--fontSizeBase300);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}", [".fzy81xo{padding:0 0 0 calc(var(--spacingHorizontalMNudge) + var(--spacingHorizontalXXS));}", {
    p: -1
  }], [".f58b53b{padding:0 calc(var(--spacingHorizontalMNudge) + var(--spacingHorizontalXXS)) 0 0;}", {
    p: -1
  }], ".fod5ikn{font-size:var(--fontSizeBase400);}", ".faaz57k{line-height:var(--lineHeightBase400);}", [".f1kdav7a{padding:0 0 0 calc(var(--spacingHorizontalM) + var(--spacingHorizontalSNudge));}", {
    p: -1
  }], [".footqm6{padding:0 calc(var(--spacingHorizontalM) + var(--spacingHorizontalSNudge)) 0 0;}", {
    p: -1
  }], ".f1s2aq7o{color:var(--colorNeutralForegroundDisabled);}", ".fdrzuqr{cursor:not-allowed;}", ".fahhnxm::-webkit-input-placeholder{color:var(--colorNeutralForegroundDisabled);}", ".fahhnxm::-moz-placeholder{color:var(--colorNeutralForegroundDisabled);}"],
  f: [".ftqa4ok:focus{outline-style:none;}"]
});
var useIconStyles4 = __styles2({
  icon: {
    B7ck84d: "f1ewtqcl",
    sj55zd: "fxkbij4",
    Bceei9c: "f1k6fduh",
    mc9l5x: "ftgm304",
    Be2twd7: "f1pp30po",
    Bo70h7d: "fvc9v3g"
  },
  hidden: {
    mc9l5x: "fjseox"
  },
  visuallyHidden: {
    Bh84pgu: "f1ekcaio",
    Bqenvij: "f1mpe4l3",
    jrapky: 0,
    Frg6f3: 0,
    t21cq0: 0,
    B6of3ja: 0,
    B74szlk: "f1jlpb2r",
    B68tc82: 0,
    Bmxbyg5: 0,
    Bpg54ce: "f1a3p1vp",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f1c5fvqg",
    a9b677: "frkrog8",
    qhf8xq: "f1euv43f"
  },
  small: {
    Be2twd7: "f4ybsrx",
    Frg6f3: ["f1h9en5y", "f1xk557c"]
  },
  medium: {
    Be2twd7: "fe5j1ua",
    Frg6f3: ["f1h9en5y", "f1xk557c"]
  },
  large: {
    Be2twd7: "f1rt2boy",
    Frg6f3: ["f1t5qyk5", "f1ikr372"]
  },
  disabled: {
    sj55zd: "f1s2aq7o",
    Bceei9c: "fdrzuqr"
  }
}, {
  d: [".f1ewtqcl{box-sizing:border-box;}", ".fxkbij4{color:var(--colorNeutralStrokeAccessible);}", ".f1k6fduh{cursor:pointer;}", ".ftgm304{display:block;}", ".f1pp30po{font-size:var(--fontSizeBase500);}", ".fvc9v3g svg{display:block;}", ".fjseox{display:none;}", ".f1ekcaio{clip:rect(0px, 0px, 0px, 0px);}", ".f1mpe4l3{height:1px;}", [".f1jlpb2r{margin:-1px;}", {
    p: -1
  }], [".f1a3p1vp{overflow:hidden;}", {
    p: -1
  }], [".f1c5fvqg{padding:0px;}", {
    p: -1
  }], ".frkrog8{width:1px;}", ".f1euv43f{position:absolute;}", ".f4ybsrx{font-size:16px;}", ".f1h9en5y{margin-left:var(--spacingHorizontalXXS);}", ".f1xk557c{margin-right:var(--spacingHorizontalXXS);}", ".fe5j1ua{font-size:20px;}", ".f1rt2boy{font-size:24px;}", ".f1t5qyk5{margin-left:var(--spacingHorizontalSNudge);}", ".f1ikr372{margin-right:var(--spacingHorizontalSNudge);}", ".f1s2aq7o{color:var(--colorNeutralForegroundDisabled);}", ".fdrzuqr{cursor:not-allowed;}"]
});
var useComboboxStyles_unstable = (state) => {
  "use no memo";
  const {
    appearance,
    open,
    size,
    showClearIcon
  } = state;
  const invalid = `${state.input["aria-invalid"]}` === "true";
  const disabled = state.input.disabled;
  const styles = useStyles12();
  const iconStyles = useIconStyles4();
  const inputStyles = useInputStyles2();
  state.root.className = mergeClasses(comboboxClassNames.root, styles.root, styles[appearance], styles[size], !disabled && appearance === "outline" && styles.outlineInteractive, invalid && appearance !== "underline" && styles.invalid, invalid && appearance === "underline" && styles.invalidUnderline, disabled && styles.disabled, state.root.className);
  state.input.className = mergeClasses(comboboxClassNames.input, inputStyles.input, inputStyles[size], disabled && inputStyles.disabled, state.input.className);
  if (state.listbox) {
    state.listbox.className = mergeClasses(comboboxClassNames.listbox, styles.listbox, state.inlinePopup && styles.inlineListbox, !open && styles.listboxCollapsed, state.listbox.className);
  }
  if (state.expandIcon) {
    state.expandIcon.className = mergeClasses(comboboxClassNames.expandIcon, iconStyles.icon, iconStyles[size], disabled && iconStyles.disabled, showClearIcon && iconStyles.visuallyHidden, state.expandIcon.className);
  }
  if (state.clearIcon) {
    state.clearIcon.className = mergeClasses(comboboxClassNames.clearIcon, iconStyles.icon, iconStyles[size], disabled && iconStyles.disabled, !showClearIcon && iconStyles.hidden, state.clearIcon.className);
  }
  return state;
};

// node_modules/@fluentui/react-combobox/lib/components/Combobox/Combobox.js
var Combobox = React114.forwardRef((props, ref) => {
  const state = useCombobox_unstable(props, ref);
  const contextValues = useComboboxContextValues(state);
  useComboboxStyles_unstable(state);
  useCustomStyleHook("useComboboxStyles_unstable")(state);
  return renderCombobox_unstable(state, contextValues);
});
Combobox.displayName = "Combobox";

// node_modules/@fluentui/react-combobox/lib/components/Combobox/Combobox.types.js
var React115 = __toESM(require_react());

// node_modules/@fluentui/react-combobox/lib/components/Dropdown/Dropdown.js
var React118 = __toESM(require_react());

// node_modules/@fluentui/react-combobox/lib/components/Dropdown/useDropdown.js
var React117 = __toESM(require_react());

// node_modules/@fluentui/react-combobox/lib/components/Dropdown/useButtonTriggerSlot.js
var React116 = __toESM(require_react());
function useButtonTriggerSlot(triggerFromProps, ref, options) {
  "use no memo";
  const { state: { open, setOpen, getOptionById }, defaultProps: defaultProps2, activeDescendantController } = options;
  const searchString = React116.useRef("");
  const [setKeyTimeout, clearKeyTimeout] = useTimeout();
  const moveToNextMatchingOption = (matcher, opt = {
    startFromNext: false
  }) => {
    const { startFromNext } = opt;
    const activeOptionId = activeDescendantController.active();
    const nextInOrder = activeDescendantController.find((id) => {
      const option = getOptionById(id);
      return !!option && matcher(option.text);
    }, {
      startFrom: startFromNext ? activeDescendantController.next({
        passive: true
      }) : activeOptionId
    });
    if (nextInOrder) {
      return nextInOrder;
    }
    return activeDescendantController.find((id) => {
      const option = getOptionById(id);
      return !!option && matcher(option.text);
    });
  };
  const moveToNextMatchingOptionWithSameCharacterHandling = () => {
    if (moveToNextMatchingOption((optionText) => {
      return optionText.toLocaleLowerCase().indexOf(searchString.current) === 0;
    }, {
      // Slowly pressing the same key will cycle through options
      startFromNext: searchString.current.length === 1
    })) {
      return;
    }
    if (allCharactersSame(searchString.current) && moveToNextMatchingOption((optionText) => {
      return optionText.toLocaleLowerCase().indexOf(searchString.current[0]) === 0;
    }, {
      // if the search is all the same letter, cycle through options starting with that letter
      startFromNext: true
    })) {
      return;
    }
    activeDescendantController.blur();
  };
  const onTriggerKeyDown = (ev) => {
    clearKeyTimeout();
    if (getDropdownActionFromKey(ev) === "Type") {
      searchString.current += ev.key.toLowerCase();
      setKeyTimeout(() => {
        searchString.current = "";
      }, 500);
      if (open) {
        moveToNextMatchingOptionWithSameCharacterHandling();
      }
      !open && setOpen(ev, true);
    }
  };
  const trigger = useTriggerSlot(triggerFromProps, ref, {
    state: options.state,
    defaultProps: defaultProps2,
    elementType: "button",
    activeDescendantController
  });
  trigger.onKeyDown = mergeCallbacks(onTriggerKeyDown, trigger.onKeyDown);
  return trigger;
}
function allCharactersSame(str) {
  for (let i = 1; i < str.length; i++) {
    if (str[i] !== str[i - 1]) {
      return false;
    }
  }
  return true;
}

// node_modules/@fluentui/react-combobox/lib/components/Dropdown/useDropdown.js
var useDropdown_unstable = (props, ref) => {
  "use no memo";
  var _state_clearButton;
  props = useFieldControlProps_unstable(props, {
    supportsLabelFor: true,
    supportsSize: true
  });
  const { listboxRef: activeDescendantListboxRef, activeParentRef, controller: activeDescendantController } = useActiveDescendant({
    matchOption: (el) => el.classList.contains(optionClassNames.root)
  });
  const baseState = useComboboxBaseState({
    ...props,
    activeDescendantController,
    freeform: false
  });
  const { clearable, clearSelection, hasFocus, multiselect, open, selectedOptions, setOpen } = baseState;
  const { primary: triggerNativeProps, root: rootNativeProps } = getPartitionedNativeProps({
    props,
    primarySlotTagName: "button",
    excludedPropNames: [
      "children"
    ]
  });
  const [comboboxPopupRef, comboboxTargetRef] = useComboboxPositioning(props);
  const triggerRef = React117.useRef(null);
  const listbox = useListboxSlot(props.listbox, useMergedRefs(comboboxPopupRef, activeDescendantListboxRef), {
    state: baseState,
    triggerRef,
    defaultProps: {
      children: props.children
    }
  });
  const { targetDocument } = useFluent();
  useOnClickOutside({
    element: targetDocument,
    callback: (event) => setOpen(event, false),
    refs: [
      triggerRef,
      comboboxPopupRef,
      comboboxTargetRef
    ],
    disabled: !open
  });
  var _props_button;
  const trigger = useButtonTriggerSlot((_props_button = props.button) !== null && _props_button !== void 0 ? _props_button : {}, useMergedRefs(triggerRef, activeParentRef, ref), {
    state: baseState,
    defaultProps: {
      type: "button",
      // tabster navigation breaks if the button is disabled and tabIndex is 0
      tabIndex: triggerNativeProps.disabled ? void 0 : 0,
      children: baseState.value || props.placeholder,
      "aria-controls": open ? listbox === null || listbox === void 0 ? void 0 : listbox.id : void 0,
      ...triggerNativeProps
    },
    activeDescendantController
  });
  const rootSlot = slot_exports.always(props.root, {
    defaultProps: {
      "aria-owns": !props.inlinePopup && open ? listbox === null || listbox === void 0 ? void 0 : listbox.id : void 0,
      children: props.children,
      ...rootNativeProps
    },
    elementType: "div"
  });
  rootSlot.ref = useMergedRefs(rootSlot.ref, comboboxTargetRef);
  const showClearButton = selectedOptions.length > 0 && clearable && !multiselect;
  const state = {
    components: {
      root: "div",
      button: "button",
      clearButton: "button",
      expandIcon: "span",
      listbox: Listbox
    },
    root: rootSlot,
    button: trigger,
    listbox: open || hasFocus ? listbox : void 0,
    clearButton: slot_exports.optional(props.clearButton, {
      defaultProps: {
        "aria-label": "Clear selection",
        children: React117.createElement(DismissRegular, null),
        // Safari doesn't allow to focus an element with this
        // when the element is not visible (display: none) we need to remove it to avoid tabster issues
        tabIndex: showClearButton ? 0 : void 0,
        type: "button"
      },
      elementType: "button",
      renderByDefault: true
    }),
    expandIcon: slot_exports.optional(props.expandIcon, {
      renderByDefault: true,
      defaultProps: {
        children: React117.createElement(ChevronDownRegular, null)
      },
      elementType: "span"
    }),
    placeholderVisible: !baseState.value && !!props.placeholder,
    showClearButton,
    activeDescendantController,
    ...baseState
  };
  const onClearButtonClick = useEventCallback(mergeCallbacks((_state_clearButton = state.clearButton) === null || _state_clearButton === void 0 ? void 0 : _state_clearButton.onClick, (ev) => {
    var _triggerRef_current;
    clearSelection(ev);
    (_triggerRef_current = triggerRef.current) === null || _triggerRef_current === void 0 ? void 0 : _triggerRef_current.focus();
  }));
  if (state.clearButton) {
    state.clearButton.onClick = onClearButtonClick;
  }
  if (multiselect) {
    state.clearButton = void 0;
  }
  if (true) {
    React117.useEffect(() => {
      if (clearable && multiselect) {
        console.error(`[@fluentui/react-combobox] "clearable" prop is not supported in multiselect mode.`);
      }
    }, [
      clearable,
      multiselect
    ]);
  }
  return state;
};

// node_modules/@fluentui/react-combobox/lib/components/Dropdown/renderDropdown.js
var renderDropdown_unstable = (state, contextValues) => {
  assertSlots(state);
  return jsx(state.root, {
    children: jsx(ActiveDescendantContextProvider, {
      value: contextValues.activeDescendant,
      children: jsx(ListboxContext.Provider, {
        value: contextValues.listbox,
        children: jsxs(ComboboxContext.Provider, {
          value: contextValues.combobox,
          children: [
            jsxs(state.button, {
              children: [
                state.button.children,
                state.expandIcon && jsx(state.expandIcon, {})
              ]
            }),
            state.clearButton && jsx(state.clearButton, {}),
            state.listbox && (state.inlinePopup ? jsx(state.listbox, {}) : jsx(Portal, {
              mountNode: state.mountNode,
              children: jsx(state.listbox, {})
            }))
          ]
        })
      })
    })
  });
};

// node_modules/@fluentui/react-combobox/lib/components/Dropdown/useDropdownStyles.styles.js
var dropdownClassNames = {
  root: "fui-Dropdown",
  button: "fui-Dropdown__button",
  clearButton: "fui-Dropdown__clearButton",
  expandIcon: "fui-Dropdown__expandIcon",
  listbox: "fui-Dropdown__listbox"
};
var useStyles13 = __styles2({
  root: {
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "ft85np5",
    B7ck84d: "f1ewtqcl",
    mc9l5x: "ftuwxu6",
    Bf4jedk: "f1exfvgq",
    qhf8xq: "f10pi13n",
    ha4doy: "fmrv4ls",
    Bbr2w1p: "f14a1fxs",
    Bduesf4: "f3e99gv",
    Bpq79vn: "fhljsf7",
    li1rpt: "f1gw3sf2",
    Bsft5z2: "f13zj6fq",
    E3zdtr: "f1mdlcz9",
    Eqx8gd: ["f1a7op3", "f1cjjd47"],
    By385i5: "f1gboi2j",
    B1piin3: ["f1cjjd47", "f1a7op3"],
    Dlnsje: "ffyw7fx",
    d9w3h3: ["f1kp91vd", "f1ibwz09"],
    B3778ie: ["f1ibwz09", "f1kp91vd"],
    B1q35kw: 0,
    Bw17bha: 0,
    Bcgy8vk: 0,
    Bjuhk93: "f1mnjydx",
    Gjdm7m: "f13evtba",
    b1kco5: "f1yk9hq",
    Ba2ppi3: "fhwpy7i",
    F2fol1: "f14ee0xe",
    lck23g: "f1xhbsuh",
    df92cz: "fv8e3ye",
    I188md: "ftb5wc6",
    umuwi5: "fjw5xc1",
    Blcqepd: "f1xdyd5c",
    nplu4u: "fatpbeo",
    Bioka5o: "fb7uyps",
    H713fs: "f1cmft4k",
    B9ooomg: "f1x58t8o",
    Bercvud: "f1ibeo51",
    Bz04dq9: "f132nw8t",
    Budl3uf: "f1htdosj"
  },
  listbox: {
    B7ck84d: "f1ewtqcl",
    E5pizo: "f1hg901r",
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "ft85np5",
    Bxyxcbc: "fmmk62d"
  },
  listboxCollapsed: {
    mc9l5x: "fjseox"
  },
  inlineListbox: {
    Bj3rh1h: "f19g0ac"
  },
  button: {
    Bt984gj: "f122n59",
    De3pzq: "f1c21dwh",
    Bgfg5da: 0,
    B9xav0g: 0,
    oivjwe: 0,
    Bn0qgzm: 0,
    B4g9neb: 0,
    zhjwy3: 0,
    wvpqe5: 0,
    ibv6hh: 0,
    u1mtju: 0,
    h3c5rm: 0,
    vrafjx: 0,
    Bekrc4i: 0,
    i8vvqc: 0,
    g2u3we: 0,
    icvyot: 0,
    B4j52fo: 0,
    irswps: "f3bhgqh",
    B7ck84d: "f1ewtqcl",
    sj55zd: "f19n0e5",
    i8kkvl: "f14mj54c",
    Bceei9c: "f1k6fduh",
    mc9l5x: "f13qh94s",
    Bahqtrf: "fk6fouc",
    Budl1dq: "f12nh0o2",
    Brf1p80: "f1869bpl",
    fsow6f: ["f1o700av", "fes3tcz"],
    a9b677: "fly5x3f",
    Brovlpu: "ftqa4ok"
  },
  placeholder: {
    sj55zd: "fxc4j92"
  },
  small: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fy9rknc",
    Bhrd7zp: "figsok6",
    Bg96gwp: "fwrc4pm",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: ["fye6m5k", "f3cq2dl"]
  },
  medium: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "figsok6",
    Bg96gwp: "f1i3iumi",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: ["f14ev680", "f58uxzw"]
  },
  large: {
    i8kkvl: "f1rjii52",
    Bahqtrf: "fk6fouc",
    Be2twd7: "fod5ikn",
    Bhrd7zp: "figsok6",
    Bg96gwp: "faaz57k",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: ["f139mn7i", "f1v3q0m"]
  },
  outline: {
    De3pzq: "fxugw4r",
    Bgfg5da: 0,
    B9xav0g: "f1c1zstj",
    oivjwe: 0,
    Bn0qgzm: 0,
    B4g9neb: 0,
    zhjwy3: 0,
    wvpqe5: 0,
    ibv6hh: 0,
    u1mtju: 0,
    h3c5rm: 0,
    vrafjx: 0,
    Bekrc4i: 0,
    i8vvqc: 0,
    g2u3we: 0,
    icvyot: 0,
    B4j52fo: 0,
    irswps: "fhz96rm"
  },
  outlineInteractive: {
    Bgoe8wy: "fvcxoqz",
    Bwzppfd: ["f1ub3y4t", "f1m52nbi"],
    oetu4i: "flmw63s",
    gg5e9n: ["f1m52nbi", "f1ub3y4t"],
    B6oc9vd: "fvs00aa",
    ak43y8: ["f1assf6x", "f4ruux4"],
    wmxk5l: "fqhmt4z",
    B50zh58: ["f4ruux4", "f1assf6x"]
  },
  underline: {
    De3pzq: "f1c21dwh",
    B9xav0g: 0,
    oivjwe: 0,
    Bn0qgzm: 0,
    Bgfg5da: "f9ez7ne",
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "fokr779"
  },
  "filled-lighter": {
    De3pzq: "fxugw4r",
    Bgfg5da: 0,
    B9xav0g: 0,
    oivjwe: 0,
    Bn0qgzm: 0,
    B4g9neb: 0,
    zhjwy3: 0,
    wvpqe5: 0,
    ibv6hh: 0,
    u1mtju: 0,
    h3c5rm: 0,
    vrafjx: 0,
    Bekrc4i: 0,
    i8vvqc: 0,
    g2u3we: 0,
    icvyot: 0,
    B4j52fo: 0,
    irswps: "fs2rfia"
  },
  "filled-darker": {
    De3pzq: "f16xq7d1",
    Bgfg5da: 0,
    B9xav0g: 0,
    oivjwe: 0,
    Bn0qgzm: 0,
    B4g9neb: 0,
    zhjwy3: 0,
    wvpqe5: 0,
    ibv6hh: 0,
    u1mtju: 0,
    h3c5rm: 0,
    vrafjx: 0,
    Bekrc4i: 0,
    i8vvqc: 0,
    g2u3we: 0,
    icvyot: 0,
    B4j52fo: 0,
    irswps: "fs2rfia"
  },
  invalid: {
    tvckwq: "fs4k3qj",
    gk2u95: ["fcee079", "fmyw78r"],
    hhx65j: "f1fgmyf4",
    Bxowmz0: ["fmyw78r", "fcee079"]
  },
  invalidUnderline: {
    hhx65j: "f1fgmyf4"
  },
  disabled: {
    Bceei9c: "fdrzuqr",
    De3pzq: "f1c21dwh",
    g2u3we: "f1jj8ep1",
    h3c5rm: ["f15xbau", "fy0fskl"],
    B9xav0g: "f4ikngz",
    zhjwy3: ["fy0fskl", "f15xbau"],
    Bjwas2f: "fg455y9",
    Bn1d65q: ["f1rvyvqg", "f14g86mu"],
    Bxeuatn: "f1cwzwz",
    n51gp8: ["f14g86mu", "f1rvyvqg"]
  },
  disabledText: {
    sj55zd: "f1s2aq7o",
    Bceei9c: "fdrzuqr"
  },
  hidden: {
    mc9l5x: "fjseox"
  }
}, {
  d: [[".ft85np5{border-radius:var(--borderRadiusMedium);}", {
    p: -1
  }], ".f1ewtqcl{box-sizing:border-box;}", ".ftuwxu6{display:inline-flex;}", ".f1exfvgq{min-width:250px;}", ".f10pi13n{position:relative;}", ".fmrv4ls{vertical-align:middle;}", ".f1gw3sf2::after{box-sizing:border-box;}", '.f13zj6fq::after{content:"";}', ".f1mdlcz9::after{position:absolute;}", ".f1a7op3::after{left:-1px;}", ".f1cjjd47::after{right:-1px;}", ".f1gboi2j::after{bottom:-1px;}", ".ffyw7fx::after{height:max(var(--strokeWidthThick), var(--borderRadiusMedium));}", ".f1kp91vd::after{border-bottom-left-radius:var(--borderRadiusMedium);}", ".f1ibwz09::after{border-bottom-right-radius:var(--borderRadiusMedium);}", [".f1mnjydx::after{border-bottom:var(--strokeWidthThick) solid var(--colorCompoundBrandStroke);}", {
    p: -1
  }], ".f13evtba::after{clip-path:inset(calc(100% - 2px) 0 0 0);}", ".f1yk9hq::after{transform:scaleX(0);}", ".fhwpy7i::after{transition-property:transform;}", ".f14ee0xe::after{transition-duration:var(--durationUltraFast);}", ".f1xhbsuh::after{transition-delay:var(--curveAccelerateMid);}", ".f1hg901r{box-shadow:var(--shadow16);}", [".ft85np5{border-radius:var(--borderRadiusMedium);}", {
    p: -1
  }], ".fmmk62d{max-height:80vh;}", ".fjseox{display:none;}", ".f19g0ac{z-index:1;}", ".f122n59{align-items:center;}", ".f1c21dwh{background-color:var(--colorTransparentBackground);}", [".f3bhgqh{border:none;}", {
    p: -2
  }], ".f19n0e5{color:var(--colorNeutralForeground1);}", ".f14mj54c{column-gap:var(--spacingHorizontalXXS);}", ".f1k6fduh{cursor:pointer;}", ".f13qh94s{display:grid;}", ".fk6fouc{font-family:var(--fontFamilyBase);}", ".f12nh0o2{grid-template-columns:[content] 1fr [icon] auto [end];}", ".f1869bpl{justify-content:space-between;}", ".f1o700av{text-align:left;}", ".fes3tcz{text-align:right;}", ".fly5x3f{width:100%;}", ".fxc4j92{color:var(--colorNeutralForeground4);}", ".fy9rknc{font-size:var(--fontSizeBase200);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".fwrc4pm{line-height:var(--lineHeightBase200);}", [".fye6m5k{padding:3px var(--spacingHorizontalSNudge) 3px calc(var(--spacingHorizontalSNudge) + var(--spacingHorizontalXXS));}", {
    p: -1
  }], [".f3cq2dl{padding:3px calc(var(--spacingHorizontalSNudge) + var(--spacingHorizontalXXS)) 3px var(--spacingHorizontalSNudge);}", {
    p: -1
  }], ".fkhj508{font-size:var(--fontSizeBase300);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}", [".f14ev680{padding:5px var(--spacingHorizontalMNudge) 5px calc(var(--spacingHorizontalMNudge) + var(--spacingHorizontalXXS));}", {
    p: -1
  }], [".f58uxzw{padding:5px calc(var(--spacingHorizontalMNudge) + var(--spacingHorizontalXXS)) 5px var(--spacingHorizontalMNudge);}", {
    p: -1
  }], ".f1rjii52{column-gap:var(--spacingHorizontalSNudge);}", ".fod5ikn{font-size:var(--fontSizeBase400);}", ".faaz57k{line-height:var(--lineHeightBase400);}", [".f139mn7i{padding:7px var(--spacingHorizontalM) 7px calc(var(--spacingHorizontalM) + var(--spacingHorizontalSNudge));}", {
    p: -1
  }], [".f1v3q0m{padding:7px calc(var(--spacingHorizontalM) + var(--spacingHorizontalSNudge)) 7px var(--spacingHorizontalM);}", {
    p: -1
  }], ".fxugw4r{background-color:var(--colorNeutralBackground1);}", [".fhz96rm{border:var(--strokeWidthThin) solid var(--colorNeutralStroke1);}", {
    p: -2
  }], ".f1c1zstj{border-bottom-color:var(--colorNeutralStrokeAccessible);}", [".f9ez7ne{border-bottom:var(--strokeWidthThin) solid var(--colorNeutralStrokeAccessible);}", {
    p: -1
  }], [".fokr779{border-radius:0;}", {
    p: -1
  }], [".fs2rfia{border:var(--strokeWidthThin) solid transparent;}", {
    p: -2
  }], ".f16xq7d1{background-color:var(--colorNeutralBackground3);}", [".fs2rfia{border:var(--strokeWidthThin) solid transparent;}", {
    p: -2
  }], ".fs4k3qj:not(:focus-within),.fs4k3qj:hover:not(:focus-within){border-top-color:var(--colorPaletteRedBorder2);}", ".fcee079:not(:focus-within),.fcee079:hover:not(:focus-within){border-right-color:var(--colorPaletteRedBorder2);}", ".fmyw78r:not(:focus-within),.fmyw78r:hover:not(:focus-within){border-left-color:var(--colorPaletteRedBorder2);}", ".f1fgmyf4:not(:focus-within),.f1fgmyf4:hover:not(:focus-within){border-bottom-color:var(--colorPaletteRedBorder2);}", ".fdrzuqr{cursor:not-allowed;}", ".f1jj8ep1{border-top-color:var(--colorNeutralStrokeDisabled);}", ".f15xbau{border-right-color:var(--colorNeutralStrokeDisabled);}", ".fy0fskl{border-left-color:var(--colorNeutralStrokeDisabled);}", ".f4ikngz{border-bottom-color:var(--colorNeutralStrokeDisabled);}", ".f1s2aq7o{color:var(--colorNeutralForegroundDisabled);}"],
  w: [".f14a1fxs:focus-within{outline-width:2px;}", ".f3e99gv:focus-within{outline-style:solid;}", ".fhljsf7:focus-within{outline-color:transparent;}", ".fjw5xc1:focus-within::after{transform:scaleX(1);}", ".f1xdyd5c:focus-within::after{transition-property:transform;}", ".fatpbeo:focus-within::after{transition-duration:var(--durationNormal);}", ".fb7uyps:focus-within::after{transition-delay:var(--curveDecelerateMid);}", ".f1ibeo51:focus-within:active::after{border-bottom-color:var(--colorCompoundBrandStrokePressed);}"],
  m: [["@media screen and (prefers-reduced-motion: reduce){.fv8e3ye::after{transition-duration:0.01ms;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }], ["@media screen and (prefers-reduced-motion: reduce){.ftb5wc6::after{transition-delay:0.01ms;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }], ["@media screen and (prefers-reduced-motion: reduce){.f1cmft4k:focus-within::after{transition-duration:0.01ms;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }], ["@media screen and (prefers-reduced-motion: reduce){.f1x58t8o:focus-within::after{transition-delay:0.01ms;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }], ["@media (forced-colors: active){.fg455y9{border-top-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f14g86mu{border-left-color:GrayText;}.f1rvyvqg{border-right-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1cwzwz{border-bottom-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }]],
  t: ["@supports selector(:has(*)){.f132nw8t:has(.fui-Dropdown__clearButton:focus)::after{border-bottom-color:initial;}}", "@supports selector(:has(*)){.f1htdosj:has(.fui-Dropdown__clearButton:focus)::after{transform:scaleX(0);}}"],
  f: [".ftqa4ok:focus{outline-style:none;}"],
  h: [".fvcxoqz:hover{border-top-color:var(--colorNeutralStroke1Hover);}", ".f1ub3y4t:hover{border-right-color:var(--colorNeutralStroke1Hover);}", ".f1m52nbi:hover{border-left-color:var(--colorNeutralStroke1Hover);}", ".flmw63s:hover{border-bottom-color:var(--colorNeutralStrokeAccessible);}"],
  a: [".fvs00aa:active{border-top-color:var(--colorNeutralStroke1Pressed);}", ".f1assf6x:active{border-right-color:var(--colorNeutralStroke1Pressed);}", ".f4ruux4:active{border-left-color:var(--colorNeutralStroke1Pressed);}", ".fqhmt4z:active{border-bottom-color:var(--colorNeutralStrokeAccessible);}"]
});
var useIconStyles5 = __styles2({
  icon: {
    B7ck84d: "f1ewtqcl",
    sj55zd: "fxkbij4",
    mc9l5x: "ftgm304",
    Be2twd7: "f1pp30po",
    Br312pm: "f12w6cgp",
    Bw0ie65: "f8bv1bt",
    Bo70h7d: "fvc9v3g"
  },
  small: {
    Be2twd7: "f4ybsrx",
    Frg6f3: ["f1h9en5y", "f1xk557c"]
  },
  medium: {
    Be2twd7: "fe5j1ua",
    Frg6f3: ["f1h9en5y", "f1xk557c"]
  },
  large: {
    Be2twd7: "f1rt2boy",
    Frg6f3: ["f1t5qyk5", "f1ikr372"]
  },
  disabled: {
    sj55zd: "f1s2aq7o"
  }
}, {
  d: [".f1ewtqcl{box-sizing:border-box;}", ".fxkbij4{color:var(--colorNeutralStrokeAccessible);}", ".ftgm304{display:block;}", ".f1pp30po{font-size:var(--fontSizeBase500);}", ".f12w6cgp{grid-column-start:icon;}", ".f8bv1bt{grid-column-end:end;}", ".fvc9v3g svg{display:block;}", ".f4ybsrx{font-size:16px;}", ".f1h9en5y{margin-left:var(--spacingHorizontalXXS);}", ".f1xk557c{margin-right:var(--spacingHorizontalXXS);}", ".fe5j1ua{font-size:20px;}", ".f1rt2boy{font-size:24px;}", ".f1t5qyk5{margin-left:var(--spacingHorizontalSNudge);}", ".f1ikr372{margin-right:var(--spacingHorizontalSNudge);}", ".f1s2aq7o{color:var(--colorNeutralForegroundDisabled);}"]
});
var useBaseClearButtonStyle = __resetStyles("rticfuj", "r1vp6jef", {
  r: [".rticfuj{align-self:center;background-color:var(--colorTransparentBackground);border:none;cursor:pointer;height:fit-content;margin:0;margin-right:var(--spacingHorizontalMNudge);padding:0;position:relative;}", ".rticfuj:focus{outline-style:none;}", ".rticfuj:focus-visible{outline-style:none;}", ".rticfuj[data-fui-focus-visible]{border-top-color:transparent;border-right-color:transparent;border-bottom-color:transparent;border-left-color:transparent;}", '.rticfuj[data-fui-focus-visible]::after{content:"";position:absolute;pointer-events:none;z-index:1;border:2px solid var(--colorStrokeFocus2);border-radius:var(--borderRadiusMedium);top:calc(2px * -1);right:calc(2px * -1);bottom:calc(2px * -1);left:calc(2px * -1);}', ".r1vp6jef{align-self:center;background-color:var(--colorTransparentBackground);border:none;cursor:pointer;height:fit-content;margin:0;margin-left:var(--spacingHorizontalMNudge);padding:0;position:relative;}", ".r1vp6jef:focus{outline-style:none;}", ".r1vp6jef:focus-visible{outline-style:none;}", ".r1vp6jef[data-fui-focus-visible]{border-top-color:transparent;border-left-color:transparent;border-bottom-color:transparent;border-right-color:transparent;}", '.r1vp6jef[data-fui-focus-visible]::after{content:"";position:absolute;pointer-events:none;z-index:1;border:2px solid var(--colorStrokeFocus2);border-radius:var(--borderRadiusMedium);top:calc(2px * -1);left:calc(2px * -1);bottom:calc(2px * -1);right:calc(2px * -1);}'],
  s: ["@media (forced-colors: active){.rticfuj[data-fui-focus-visible]::after{border-top-color:Highlight;border-right-color:Highlight;border-bottom-color:Highlight;border-left-color:Highlight;}}", "@media (forced-colors: active){.r1vp6jef[data-fui-focus-visible]::after{border-top-color:Highlight;border-left-color:Highlight;border-bottom-color:Highlight;border-right-color:Highlight;}}"]
});
var useDropdownStyles_unstable = (state) => {
  "use no memo";
  const {
    appearance,
    open,
    placeholderVisible,
    showClearButton,
    size
  } = state;
  const invalid = `${state.button["aria-invalid"]}` === "true";
  const disabled = state.button.disabled;
  const styles = useStyles13();
  const iconStyles = useIconStyles5();
  const clearButtonStyle = useBaseClearButtonStyle();
  state.root.className = mergeClasses(dropdownClassNames.root, styles.root, styles[appearance], !disabled && appearance === "outline" && styles.outlineInteractive, invalid && appearance !== "underline" && styles.invalid, invalid && appearance === "underline" && styles.invalidUnderline, disabled && styles.disabled, state.root.className);
  state.button.className = mergeClasses(dropdownClassNames.button, styles.button, styles[size], placeholderVisible && styles.placeholder, disabled && styles.disabledText, state.button.className);
  if (state.listbox) {
    state.listbox.className = mergeClasses(dropdownClassNames.listbox, styles.listbox, state.inlinePopup && styles.inlineListbox, !open && styles.listboxCollapsed, state.listbox.className);
  }
  if (state.expandIcon) {
    state.expandIcon.className = mergeClasses(dropdownClassNames.expandIcon, iconStyles.icon, iconStyles[size], disabled && iconStyles.disabled, showClearButton && styles.hidden, state.expandIcon.className);
  }
  if (state.clearButton) {
    state.clearButton.className = mergeClasses(dropdownClassNames.clearButton, clearButtonStyle, iconStyles.icon, iconStyles[size], disabled && iconStyles.disabled, !showClearButton && styles.hidden, state.clearButton.className);
  }
  return state;
};

// node_modules/@fluentui/react-combobox/lib/components/Dropdown/Dropdown.js
var Dropdown = React118.forwardRef((props, ref) => {
  const state = useDropdown_unstable(props, ref);
  const contextValues = useComboboxContextValues(state);
  useDropdownStyles_unstable(state);
  useCustomStyleHook("useDropdownStyles_unstable")(state);
  return renderDropdown_unstable(state, contextValues);
});
Dropdown.displayName = "Dropdown";

// node_modules/@fluentui/react-combobox/lib/components/OptionGroup/OptionGroup.js
var React120 = __toESM(require_react());

// node_modules/@fluentui/react-combobox/lib/components/OptionGroup/useOptionGroup.js
var React119 = __toESM(require_react());
var useOptionGroup_unstable = (props, ref) => {
  const labelId = useId("group-label");
  const { label } = props;
  return {
    components: {
      root: "div",
      label: "span"
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      // FIXME:
      // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`
      // but since it would be a breaking change to fix it, we are casting ref to it's proper type
      ref,
      role: "group",
      "aria-labelledby": label ? labelId : void 0,
      ...props
    }), {
      elementType: "div"
    }),
    label: slot_exports.optional(label, {
      defaultProps: {
        id: labelId,
        role: "presentation"
      },
      elementType: "span"
    })
  };
};

// node_modules/@fluentui/react-combobox/lib/components/OptionGroup/renderOptionGroup.js
var renderOptionGroup_unstable = (state) => {
  assertSlots(state);
  return jsxs(state.root, {
    children: [
      state.label && jsx(state.label, {
        children: state.label.children
      }),
      state.root.children
    ]
  });
};

// node_modules/@fluentui/react-combobox/lib/components/OptionGroup/useOptionGroupStyles.styles.js
var optionGroupClassNames = {
  root: "fui-OptionGroup",
  label: "fui-OptionGroup__label"
};
var useStyles14 = __styles2({
  root: {
    mc9l5x: "f22iagw",
    Beiy3e4: "f1vx9l62",
    Belr9w4: "fiut8dr",
    B8lkq7l: "f1xxzjds",
    eii1in: 0,
    H93o2g: 0,
    Gwp8xu: 0,
    Bd39igo: "f16cmn8k",
    om0q45: "f5642y",
    Hl9o3s: "ffdf81h",
    sl1c2c: 0,
    z4hxbw: 0,
    B0i58d9: 0,
    Bi9x0x4: 0,
    Bgurq3m: "f1bsn9kn"
  },
  label: {
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "ft85np5",
    sj55zd: "f11d4kpn",
    mc9l5x: "ftgm304",
    Be2twd7: "fy9rknc",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "fwrc4pm",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f1mpq0zz"
  }
}, {
  d: [".f22iagw{display:flex;}", ".f1vx9l62{flex-direction:column;}", ".fiut8dr{row-gap:var(--spacingHorizontalXXS);}", '.f1xxzjds:not(:last-child)::after{content:"";}', [".f16cmn8k:not(:last-child)::after{border-bottom:var(--strokeWidthThin) solid var(--colorNeutralStroke2);}", {
    p: -1
  }], ".f5642y:not(:last-child)::after{display:block;}", ".ffdf81h:not(:last-child)::after{padding-bottom:var(--spacingHorizontalXS);}", [".f1bsn9kn:not(:last-child)::after{margin:0 calc(var(--spacingHorizontalXS) * -1) var(--spacingVerticalXS);}", {
    p: -1
  }], [".ft85np5{border-radius:var(--borderRadiusMedium);}", {
    p: -1
  }], ".f11d4kpn{color:var(--colorNeutralForeground3);}", ".ftgm304{display:block;}", ".fy9rknc{font-size:var(--fontSizeBase200);}", ".fl43uef{font-weight:var(--fontWeightSemibold);}", ".fwrc4pm{line-height:var(--lineHeightBase200);}", [".f1mpq0zz{padding:var(--spacingHorizontalS) var(--spacingHorizontalSNudge);}", {
    p: -1
  }]]
});
var useOptionGroupStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles14();
  state.root.className = mergeClasses(optionGroupClassNames.root, styles.root, state.root.className);
  if (state.label) {
    state.label.className = mergeClasses(optionGroupClassNames.label, styles.label, state.label.className);
  }
  return state;
};

// node_modules/@fluentui/react-combobox/lib/components/OptionGroup/OptionGroup.js
var OptionGroup = React120.forwardRef((props, ref) => {
  const state = useOptionGroup_unstable(props, ref);
  useOptionGroupStyles_unstable(state);
  useCustomStyleHook("useOptionGroupStyles_unstable")(state);
  return renderOptionGroup_unstable(state);
});
OptionGroup.displayName = "OptionGroup";

// node_modules/@fluentui/react-combobox/lib/hooks/useComboboxFilter.js
var React121 = __toESM(require_react());
function defaultFilter(optionText, query) {
  if (query === "") {
    return true;
  }
  return optionText.toLowerCase().includes(query.toLowerCase());
}
function defaultToString(option) {
  return typeof option === "string" ? option : option.value;
}
function useComboboxFilter(query, options, config) {
  const { filter = defaultFilter, noOptionsMessage = "We couldn't find any matches.", optionToReactKey = defaultToString, optionToText = defaultToString, renderOption = (option) => {
    if (typeof option === "string") {
      return React121.createElement(Option, {
        key: option
      }, option);
    }
    return React121.createElement(Option, {
      ...option,
      key: optionToReactKey(option),
      text: optionToText(option),
      value: option.value
    }, option.children);
  } } = config;
  const filteredOptions = React121.useMemo(() => {
    const searchValue = query.trim();
    return options.filter((option) => filter(optionToText(option), searchValue));
  }, [
    options,
    optionToText,
    filter,
    query
  ]);
  if (filteredOptions.length === 0) {
    return [
      React121.createElement(Option, {
        "aria-disabled": "true",
        key: "no-results",
        text: ""
      }, noOptionsMessage)
    ];
  }
  return filteredOptions.map((option) => renderOption(option));
}

// node_modules/@fluentui/react-divider/lib/components/Divider/Divider.js
var React123 = __toESM(require_react());

// node_modules/@fluentui/react-divider/lib/components/Divider/renderDivider.js
var renderDivider_unstable = (state) => {
  assertSlots(state);
  return jsx(state.root, {
    children: state.root.children !== void 0 && jsx(state.wrapper, {
      children: state.root.children
    })
  });
};

// node_modules/@fluentui/react-divider/lib/components/Divider/useDivider.js
var React122 = __toESM(require_react());
var useDivider_unstable = (props, ref) => {
  const { alignContent = "center", appearance = "default", inset = false, vertical = false, wrapper } = props;
  const dividerId = useId("divider-");
  return {
    // Props passed at the top-level
    alignContent,
    appearance,
    inset,
    vertical,
    // Slots definition
    components: {
      root: "div",
      wrapper: "div"
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      role: "separator",
      "aria-orientation": vertical ? "vertical" : "horizontal",
      "aria-labelledby": props.children ? dividerId : void 0,
      ...props,
      // FIXME:
      // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`
      // but since it would be a breaking change to fix it, we are casting ref to it's proper type
      ref
    }), {
      elementType: "div"
    }),
    wrapper: slot_exports.always(wrapper, {
      defaultProps: {
        id: dividerId,
        children: props.children
      },
      elementType: "div"
    })
  };
};

// node_modules/@fluentui/react-divider/lib/components/Divider/useDividerStyles.styles.js
var dividerClassNames = {
  root: "fui-Divider",
  wrapper: "fui-Divider__wrapper"
};
var useBaseStyles = __styles2({
  base: {
    Bt984gj: "f122n59",
    B7ck84d: "f1ewtqcl",
    mc9l5x: "f22iagw",
    Beiy3e4: "f1063pyq",
    Bh6795r: "fqerorx",
    qhf8xq: "f10pi13n",
    Bahqtrf: "fk6fouc",
    Be2twd7: "fy9rknc",
    Bhrd7zp: "figsok6",
    Bg96gwp: "fwrc4pm",
    fsow6f: "f17mccla",
    Bcvre1j: "fyl8oag",
    Br0sdwz: "f16vkdww",
    Bn78ew0: "fhsnbul",
    li1rpt: "f1gw3sf2",
    ap17g6: "f1ly5f7u",
    B771hl4: "f1s3tz6t"
  },
  childless: {
    susq4k: "f1kyqvp9",
    Bicfajf: ["fzynn9s", "f1z0ukd1"],
    jwcpgy: ["fekrn8e", "ftdg338"],
    B4rk6o: "fesgyo"
  },
  start: {
    Bsft5z2: "f13zj6fq"
  },
  center: {
    Ftih45: "f1wl9k8s",
    Bsft5z2: "f13zj6fq"
  },
  end: {
    Ftih45: "f1wl9k8s"
  },
  brand: {
    sj55zd: "f16muhyy",
    Bq4z7u6: "fcbuu2a",
    Bk5zm6e: ["f1wdw2dr", "f1ttio3w"],
    Bqjgrrk: "f1582fpk",
    Bm6vgfq: ["f1ttio3w", "f1wdw2dr"],
    B0n5ga8: "f1ahrvm8",
    s924m2: ["f1cd3wbc", "f17hbk9y"],
    B1q35kw: "fvrapl0",
    Gp14am: ["f17hbk9y", "f1cd3wbc"]
  },
  "default": {
    sj55zd: "fkfq4zb",
    Bq4z7u6: "f1vccso1",
    Bk5zm6e: ["f1geml7w", "fjml6kk"],
    Bqjgrrk: "f1r7kh1m",
    Bm6vgfq: ["fjml6kk", "f1geml7w"],
    B0n5ga8: "f16j7guv",
    s924m2: ["fx01ahm", "fj1a37q"],
    B1q35kw: "fl8d8yv",
    Gp14am: ["fj1a37q", "fx01ahm"]
  },
  subtle: {
    sj55zd: "f11d4kpn",
    Bq4z7u6: "f5g06un",
    Bk5zm6e: ["f13sxdku", "f1n015lb"],
    Bqjgrrk: "f1x6bl8t",
    Bm6vgfq: ["f1n015lb", "f13sxdku"],
    B0n5ga8: "fvod1wy",
    s924m2: ["fwslg65", "flk0e17"],
    B1q35kw: "f103fvts",
    Gp14am: ["flk0e17", "fwslg65"]
  },
  strong: {
    sj55zd: "f19n0e5",
    Bq4z7u6: "f10tv6oz",
    Bk5zm6e: ["f16xp3sf", "f1seuxxq"],
    Bqjgrrk: "fwrmqbx",
    Bm6vgfq: ["f1seuxxq", "f16xp3sf"],
    B0n5ga8: "ft83z1f",
    s924m2: ["f1g4150c", "f192dr6e"],
    B1q35kw: "f1qnawh6",
    Gp14am: ["f192dr6e", "f1g4150c"]
  }
}, {
  d: [".f122n59{align-items:center;}", ".f1ewtqcl{box-sizing:border-box;}", ".f22iagw{display:flex;}", ".f1063pyq{flex-direction:row;}", ".fqerorx{flex-grow:1;}", ".f10pi13n{position:relative;}", ".fk6fouc{font-family:var(--fontFamilyBase);}", ".fy9rknc{font-size:var(--fontSizeBase200);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".fwrc4pm{line-height:var(--lineHeightBase200);}", ".f17mccla{text-align:center;}", ".fyl8oag::before{box-sizing:border-box;}", ".f16vkdww::before{display:flex;}", ".fhsnbul::before{flex-grow:1;}", ".f1gw3sf2::after{box-sizing:border-box;}", ".f1ly5f7u::after{display:flex;}", ".f1s3tz6t::after{flex-grow:1;}", ".f1kyqvp9::before{margin-bottom:0;}", ".fzynn9s::before{margin-right:0;}", ".f1z0ukd1::before{margin-left:0;}", ".fekrn8e::after{margin-left:0;}", ".ftdg338::after{margin-right:0;}", ".fesgyo::after{margin-top:0;}", '.f13zj6fq::after{content:"";}', '.f1wl9k8s::before{content:"";}', ".f16muhyy{color:var(--colorBrandForeground1);}", ".fcbuu2a::before{border-top-color:var(--colorBrandStroke1);}", ".f1wdw2dr::before{border-right-color:var(--colorBrandStroke1);}", ".f1ttio3w::before{border-left-color:var(--colorBrandStroke1);}", ".f1582fpk::before{border-bottom-color:var(--colorBrandStroke1);}", ".f1ahrvm8::after{border-top-color:var(--colorBrandStroke1);}", ".f1cd3wbc::after{border-right-color:var(--colorBrandStroke1);}", ".f17hbk9y::after{border-left-color:var(--colorBrandStroke1);}", ".fvrapl0::after{border-bottom-color:var(--colorBrandStroke1);}", ".fkfq4zb{color:var(--colorNeutralForeground2);}", ".f1vccso1::before{border-top-color:var(--colorNeutralStroke2);}", ".f1geml7w::before{border-right-color:var(--colorNeutralStroke2);}", ".fjml6kk::before{border-left-color:var(--colorNeutralStroke2);}", ".f1r7kh1m::before{border-bottom-color:var(--colorNeutralStroke2);}", ".f16j7guv::after{border-top-color:var(--colorNeutralStroke2);}", ".fx01ahm::after{border-right-color:var(--colorNeutralStroke2);}", ".fj1a37q::after{border-left-color:var(--colorNeutralStroke2);}", ".fl8d8yv::after{border-bottom-color:var(--colorNeutralStroke2);}", ".f11d4kpn{color:var(--colorNeutralForeground3);}", ".f5g06un::before{border-top-color:var(--colorNeutralStroke3);}", ".f13sxdku::before{border-right-color:var(--colorNeutralStroke3);}", ".f1n015lb::before{border-left-color:var(--colorNeutralStroke3);}", ".f1x6bl8t::before{border-bottom-color:var(--colorNeutralStroke3);}", ".fvod1wy::after{border-top-color:var(--colorNeutralStroke3);}", ".fwslg65::after{border-right-color:var(--colorNeutralStroke3);}", ".flk0e17::after{border-left-color:var(--colorNeutralStroke3);}", ".f103fvts::after{border-bottom-color:var(--colorNeutralStroke3);}", ".f19n0e5{color:var(--colorNeutralForeground1);}", ".f10tv6oz::before{border-top-color:var(--colorNeutralStroke1);}", ".f16xp3sf::before{border-right-color:var(--colorNeutralStroke1);}", ".f1seuxxq::before{border-left-color:var(--colorNeutralStroke1);}", ".fwrmqbx::before{border-bottom-color:var(--colorNeutralStroke1);}", ".ft83z1f::after{border-top-color:var(--colorNeutralStroke1);}", ".f1g4150c::after{border-right-color:var(--colorNeutralStroke1);}", ".f192dr6e::after{border-left-color:var(--colorNeutralStroke1);}", ".f1qnawh6::after{border-bottom-color:var(--colorNeutralStroke1);}"]
});
var useHorizontalStyles = __styles2({
  base: {
    a9b677: "fly5x3f",
    Bdkvgpv: "f163fonl",
    B0qfbqy: "f51yk4v",
    pbipgd: "f13rof3u",
    Bm2nyyq: "f8rth92",
    xrcqlc: "f6czdpx",
    i5u598: "f1iyka9k"
  },
  inset: {
    uwmqm3: ["fjlbh76", "f11qrl6u"],
    z189sj: ["f11qrl6u", "fjlbh76"]
  },
  start: {
    Ftih45: "f1wl9k8s",
    Bicfajf: ["f1ojjlep", "fk1kexq"],
    Bxwl2t9: "f1he2m4d",
    jwcpgy: ["f12w1bnb", "f1558wlj"]
  },
  center: {
    Bicfajf: ["f1ojjlep", "fk1kexq"],
    jwcpgy: ["f12w1bnb", "f1558wlj"]
  },
  end: {
    Bicfajf: ["f1ojjlep", "fk1kexq"],
    Bsft5z2: "f13zj6fq",
    jwcpgy: ["f12w1bnb", "f1558wlj"],
    Iy66sp: "f1ayce8x"
  }
}, {
  d: [".fly5x3f{width:100%;}", ".f163fonl::before{border-top-style:solid;}", ".f51yk4v::before{border-top-width:var(--strokeWidthThin);}", ".f13rof3u::before{min-width:8px;}", ".f8rth92::after{border-top-style:solid;}", ".f6czdpx::after{border-top-width:var(--strokeWidthThin);}", ".f1iyka9k::after{min-width:8px;}", ".fjlbh76{padding-left:12px;}", ".f11qrl6u{padding-right:12px;}", '.f1wl9k8s::before{content:"";}', ".f1ojjlep::before{margin-right:12px;}", ".fk1kexq::before{margin-left:12px;}", ".f1he2m4d::before{max-width:8px;}", ".f12w1bnb::after{margin-left:12px;}", ".f1558wlj::after{margin-right:12px;}", '.f13zj6fq::after{content:"";}', ".f1ayce8x::after{max-width:8px;}"]
});
var useVerticalStyles = __styles2({
  base: {
    Beiy3e4: "f1vx9l62",
    sshi5w: "f16gbxbe",
    m598lv: ["f1yq6w5o", "f1jpmc5p"],
    B4f6apu: ["f9sc749", "f1x8pvcy"],
    zkzzav: "fhkwbjy",
    Barhvk9: ["flthirb", "ftkbnf5"],
    Ihftqj: ["f13hvwk3", "f1en4csx"],
    Bde111x: "f19onpk6"
  },
  inset: {
    B6of3ja: "f1xdg43u",
    jrapky: "f1jlhsmd"
  },
  withChildren: {
    sshi5w: "f1tjaq3g"
  },
  start: {
    Ftih45: "f1wl9k8s",
    susq4k: "fg2pwug",
    Bbdr6tz: "fkjtzyi",
    B4rk6o: "f8vk40g"
  },
  center: {
    susq4k: "fg2pwug",
    B4rk6o: "f8vk40g"
  },
  end: {
    susq4k: "fg2pwug",
    Bsft5z2: "f13zj6fq",
    B4rk6o: "f8vk40g",
    gn64ia: "fqg5mu5"
  }
}, {
  d: [".f1vx9l62{flex-direction:column;}", ".f16gbxbe{min-height:20px;}", ".f1yq6w5o::before{border-right-style:solid;}", ".f1jpmc5p::before{border-left-style:solid;}", ".f9sc749::before{border-right-width:var(--strokeWidthThin);}", ".f1x8pvcy::before{border-left-width:var(--strokeWidthThin);}", ".fhkwbjy::before{min-height:8px;}", ".flthirb::after{border-right-style:solid;}", ".ftkbnf5::after{border-left-style:solid;}", ".f13hvwk3::after{border-right-width:var(--strokeWidthThin);}", ".f1en4csx::after{border-left-width:var(--strokeWidthThin);}", ".f19onpk6::after{min-height:8px;}", ".f1xdg43u{margin-top:12px;}", ".f1jlhsmd{margin-bottom:12px;}", ".f1tjaq3g{min-height:84px;}", '.f1wl9k8s::before{content:"";}', ".fg2pwug::before{margin-bottom:12px;}", ".fkjtzyi::before{max-height:8px;}", ".f8vk40g::after{margin-top:12px;}", '.f13zj6fq::after{content:"";}', ".fqg5mu5::after{max-height:8px;}"]
});
var useDividerStyles_unstable = (state) => {
  "use no memo";
  const baseStyles3 = useBaseStyles();
  const horizontalStyles = useHorizontalStyles();
  const verticalStyles = useVerticalStyles();
  const {
    alignContent,
    appearance,
    inset,
    vertical
  } = state;
  state.root.className = mergeClasses(
    dividerClassNames.root,
    // Base styles
    baseStyles3.base,
    baseStyles3[alignContent],
    appearance && baseStyles3[appearance],
    // Horizontal styles
    !vertical && horizontalStyles.base,
    !vertical && inset && horizontalStyles.inset,
    !vertical && horizontalStyles[alignContent],
    // Vertical styles
    vertical && verticalStyles.base,
    vertical && inset && verticalStyles.inset,
    vertical && verticalStyles[alignContent],
    vertical && state.root.children !== void 0 && verticalStyles.withChildren,
    // Childless styles
    state.root.children === void 0 && baseStyles3.childless,
    // User provided class name
    state.root.className
  );
  if (state.wrapper) {
    state.wrapper.className = mergeClasses(dividerClassNames.wrapper, state.wrapper.className);
  }
  return state;
};

// node_modules/@fluentui/react-divider/lib/components/Divider/Divider.js
var Divider = React123.forwardRef((props, ref) => {
  const state = useDivider_unstable(props, ref);
  useDividerStyles_unstable(state);
  useCustomStyleHook("useDividerStyles_unstable")(state);
  return renderDivider_unstable(state);
});
Divider.displayName = "Divider";

// node_modules/@fluentui/react-image/lib/components/Image/Image.js
var React125 = __toESM(require_react());

// node_modules/@fluentui/react-image/lib/components/Image/renderImage.js
var renderImage_unstable = (state) => {
  assertSlots(state);
  return jsx(state.root, {});
};

// node_modules/@fluentui/react-image/lib/components/Image/useImage.js
var React124 = __toESM(require_react());
var useImage_unstable = (props, ref) => {
  const { bordered = false, fit = "default", block = false, shape = "square", shadow = false } = props;
  const state = {
    bordered,
    fit,
    block,
    shape,
    shadow,
    components: {
      root: "img"
    },
    root: slot_exports.always(getIntrinsicElementProps("img", {
      ref,
      ...props
    }), {
      elementType: "img"
    })
  };
  return state;
};

// node_modules/@fluentui/react-image/lib/components/Image/useImageStyles.styles.js
var imageClassNames = {
  root: "fui-Image"
};
var useStyles15 = __styles2({
  base: {
    g2u3we: "fj3muxo",
    h3c5rm: ["f1akhkt", "f1lxtadh"],
    B9xav0g: "f1aperda",
    zhjwy3: ["f1lxtadh", "f1akhkt"],
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "f1fabniw",
    B7ck84d: "f1ewtqcl",
    mc9l5x: "f14t3ns0"
  },
  bordered: {
    icvyot: "fzkkow9",
    vrafjx: ["fcdblym", "fjik90z"],
    oivjwe: "fg706s2",
    wvpqe5: ["fjik90z", "fcdblym"],
    B4j52fo: "f192inf7",
    Bekrc4i: ["f5tn483", "f1ojsxk5"],
    Bn0qgzm: "f1vxd6vx",
    ibv6hh: ["f1ojsxk5", "f5tn483"]
  },
  circular: {
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "f44lkw9"
  },
  rounded: {
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "ft85np5"
  },
  square: {},
  shadow: {
    E5pizo: "f1whvlc6"
  },
  center: {
    st4lth: "f1plgu50",
    Ermj5k: "f14xojzb",
    Bqenvij: "f1l02sjl",
    a9b677: "fly5x3f"
  },
  contain: {
    st4lth: "f1kle4es",
    Ermj5k: "f14xojzb",
    Bqenvij: "f1l02sjl",
    a9b677: "fly5x3f"
  },
  "default": {},
  cover: {
    st4lth: "f1ps3kmd",
    Ermj5k: "f14xojzb",
    Bqenvij: "f1l02sjl",
    a9b677: "fly5x3f"
  },
  none: {
    st4lth: "f1plgu50",
    Ermj5k: ["f13uwng7", "fjmyj0p"],
    Bqenvij: "f1l02sjl",
    a9b677: "fly5x3f"
  },
  block: {
    a9b677: "fly5x3f"
  }
}, {
  d: [".fj3muxo{border-top-color:var(--colorNeutralStroke1);}", ".f1akhkt{border-right-color:var(--colorNeutralStroke1);}", ".f1lxtadh{border-left-color:var(--colorNeutralStroke1);}", ".f1aperda{border-bottom-color:var(--colorNeutralStroke1);}", [".f1fabniw{border-radius:var(--borderRadiusNone);}", {
    p: -1
  }], ".f1ewtqcl{box-sizing:border-box;}", ".f14t3ns0{display:inline-block;}", ".fzkkow9{border-top-style:solid;}", ".fcdblym{border-right-style:solid;}", ".fjik90z{border-left-style:solid;}", ".fg706s2{border-bottom-style:solid;}", ".f192inf7{border-top-width:var(--strokeWidthThin);}", ".f5tn483{border-right-width:var(--strokeWidthThin);}", ".f1ojsxk5{border-left-width:var(--strokeWidthThin);}", ".f1vxd6vx{border-bottom-width:var(--strokeWidthThin);}", [".f44lkw9{border-radius:var(--borderRadiusCircular);}", {
    p: -1
  }], [".ft85np5{border-radius:var(--borderRadiusMedium);}", {
    p: -1
  }], ".f1whvlc6{box-shadow:var(--shadow4);}", ".f1plgu50{object-fit:none;}", ".f14xojzb{object-position:center;}", ".f1l02sjl{height:100%;}", ".fly5x3f{width:100%;}", ".f1kle4es{object-fit:contain;}", ".f1ps3kmd{object-fit:cover;}", ".f13uwng7{object-position:left top;}", ".fjmyj0p{object-position:right top;}"]
});
var useImageStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles15();
  state.root.className = mergeClasses(imageClassNames.root, styles.base, state.block && styles.block, state.bordered && styles.bordered, state.shadow && styles.shadow, styles[state.fit], styles[state.shape], state.root.className);
  return state;
};

// node_modules/@fluentui/react-image/lib/components/Image/Image.js
var Image = React125.forwardRef((props, ref) => {
  const state = useImage_unstable(props, ref);
  useImageStyles_unstable(state);
  useCustomStyleHook("useImageStyles_unstable")(state);
  return renderImage_unstable(state);
});
Image.displayName = "Image";

// node_modules/@fluentui/react-link/lib/components/Link/Link.js
var React129 = __toESM(require_react());

// node_modules/@fluentui/react-link/lib/components/Link/useLink.js
var React128 = __toESM(require_react());

// node_modules/@fluentui/react-link/lib/components/Link/useLinkState.js
var React126 = __toESM(require_react());
var useLinkState_unstable = (state) => {
  const { disabled, disabledFocusable } = state;
  const { onClick, onKeyDown, role, tabIndex } = state.root;
  if (state.root.as === "a") {
    state.root.href = disabled ? void 0 : state.root.href;
    if (disabled || disabledFocusable) {
      state.root.role = role || "link";
    }
  }
  if (state.root.as === "a" || state.root.as === "span") {
    state.root.tabIndex = tabIndex !== null && tabIndex !== void 0 ? tabIndex : disabled && !disabledFocusable ? void 0 : 0;
  }
  state.root.onClick = (ev) => {
    if (disabled || disabledFocusable) {
      ev.preventDefault();
    } else {
      onClick === null || onClick === void 0 ? void 0 : onClick(ev);
    }
  };
  state.root.onKeyDown = (ev) => {
    if ((disabled || disabledFocusable) && (ev.key === Enter || ev.key === Space)) {
      ev.preventDefault();
      ev.stopPropagation();
    } else {
      onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown(ev);
    }
  };
  state.disabled = disabled || disabledFocusable;
  state.root["aria-disabled"] = disabled || disabledFocusable || void 0;
  if (state.root.as === "button") {
    state.root.disabled = disabled && !disabledFocusable;
  }
  return state;
};

// node_modules/@fluentui/react-link/lib/contexts/linkContext.js
var React127 = __toESM(require_react());
var LinkContext = React127.createContext(void 0);
var linkContextDefaultValue = {
  inline: false
};
var LinkContextProvider = LinkContext.Provider;
var useLinkContext = () => {
  var _React_useContext;
  return (_React_useContext = React127.useContext(LinkContext)) !== null && _React_useContext !== void 0 ? _React_useContext : linkContextDefaultValue;
};

// node_modules/@fluentui/react-link/lib/components/Link/useLink.js
var useLink_unstable = (props, ref) => {
  const backgroundAppearance = useBackgroundAppearance();
  const { inline: inlineContext } = useLinkContext();
  const { appearance = "default", disabled = false, disabledFocusable = false, inline = false } = props;
  const elementType = props.as || (props.href ? "a" : "button");
  const propsWithAssignedAs = {
    role: elementType === "span" ? "button" : void 0,
    type: elementType === "button" ? "button" : void 0,
    ...props,
    as: elementType
  };
  const state = {
    // Props passed at the top-level
    appearance,
    disabled,
    disabledFocusable,
    inline: inline !== null && inline !== void 0 ? inline : !!inlineContext,
    // Slots definition
    components: {
      root: elementType
    },
    root: slot_exports.always(getIntrinsicElementProps(elementType, {
      ref,
      ...propsWithAssignedAs
    }), {
      elementType
    }),
    backgroundAppearance
  };
  useLinkState_unstable(state);
  return state;
};

// node_modules/@fluentui/react-link/lib/components/Link/useLinkStyles.styles.js
var linkClassNames = {
  root: "fui-Link"
};
var useStyles16 = __styles2({
  focusIndicator: {
    Bttzg6e: "fhgqx19",
    B3uz8dt: "f1olyrje",
    B6ihwck: "f1p93eir",
    g9k6zt: "f1nev41a"
  },
  root: {
    B486eqv: "f2hkw1w",
    De3pzq: "f3rmtva",
    B7ck84d: "f1ewtqcl",
    sj55zd: "fyind8e",
    Bceei9c: "f1k6fduh",
    mc9l5x: "f1w7gpdv",
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "figsok6",
    jrapky: 0,
    Frg6f3: 0,
    t21cq0: 0,
    B6of3ja: 0,
    B74szlk: "f1s184ao",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f1mk8lai",
    B68tc82: 0,
    Bmxbyg5: 0,
    Bpg54ce: "fnbmjn9",
    fsow6f: ["f1o700av", "fes3tcz"],
    w71qe1: "f1iuv45f",
    Bkioxbp: "f1cmlufx",
    ygn44y: "f9n3di6",
    famaaq: "f1ids18y",
    Bde5pd6: "f1tx3yz7",
    Bi91k9c: "f1deo86v",
    i089h6: "f1eh06m1",
    lj723h: "f1iescvh"
  },
  button: {
    icvyot: "f1ern45e",
    vrafjx: ["f1n71otn", "f1deefiw"],
    oivjwe: "f1h8hb77",
    wvpqe5: ["f1deefiw", "f1n71otn"]
  },
  href: {
    Be2twd7: "fjoy568"
  },
  subtle: {
    sj55zd: "fkfq4zb",
    Bde5pd6: "f1tx3yz7",
    Bi91k9c: "fnwyq0v",
    i089h6: "f1eh06m1",
    lj723h: "flvvhsy"
  },
  inline: {
    w71qe1: "f13mvf36"
  },
  disabled: {
    w71qe1: "f1iuv45f",
    sj55zd: "f1s2aq7o",
    Bceei9c: "fdrzuqr",
    Bde5pd6: "fbnuktb",
    Bi91k9c: "fvgxktp",
    i089h6: "fljg2da",
    lj723h: "f19wldhg"
  },
  inverted: {
    sj55zd: "f1qz2gb0",
    Bi91k9c: "f1mlt8il",
    lj723h: "f1hsd4st"
  }
}, {
  d: [".fhgqx19[data-fui-focus-visible]{text-decoration-color:var(--colorStrokeFocus2);}", ".f1olyrje[data-fui-focus-visible]{text-decoration-line:underline;}", ".f1p93eir[data-fui-focus-visible]{text-decoration-style:double;}", ".f1nev41a[data-fui-focus-visible]{outline-style:none;}", ".f3rmtva{background-color:transparent;}", ".f1ewtqcl{box-sizing:border-box;}", ".fyind8e{color:var(--colorBrandForegroundLink);}", ".f1k6fduh{cursor:pointer;}", ".f1w7gpdv{display:inline;}", ".fk6fouc{font-family:var(--fontFamilyBase);}", ".fkhj508{font-size:var(--fontSizeBase300);}", ".figsok6{font-weight:var(--fontWeightRegular);}", [".f1s184ao{margin:0;}", {
    p: -1
  }], [".f1mk8lai{padding:0;}", {
    p: -1
  }], [".fnbmjn9{overflow:inherit;}", {
    p: -1
  }], ".f1o700av{text-align:left;}", ".fes3tcz{text-align:right;}", ".f1iuv45f{text-decoration-line:none;}", ".f1cmlufx{text-decoration-thickness:var(--strokeWidthThin);}", ".f9n3di6{text-overflow:inherit;}", ".f1ids18y{-webkit-user-select:text;-moz-user-select:text;user-select:text;}", ".f1ern45e{border-top-style:none;}", ".f1n71otn{border-right-style:none;}", ".f1deefiw{border-left-style:none;}", ".f1h8hb77{border-bottom-style:none;}", ".fjoy568{font-size:inherit;}", ".fkfq4zb{color:var(--colorNeutralForeground2);}", ".f13mvf36{text-decoration-line:underline;}", ".f1s2aq7o{color:var(--colorNeutralForegroundDisabled);}", ".fdrzuqr{cursor:not-allowed;}", ".f1qz2gb0{color:var(--colorBrandForegroundInverted);}"],
  i: [".f2hkw1w:focus-visible{outline-style:none;}"],
  h: [".f1tx3yz7:hover{text-decoration-line:underline;}", ".f1deo86v:hover{color:var(--colorBrandForegroundLinkHover);}", ".fnwyq0v:hover{color:var(--colorNeutralForeground2Hover);}", ".fbnuktb:hover{text-decoration-line:none;}", ".fvgxktp:hover{color:var(--colorNeutralForegroundDisabled);}", ".f1mlt8il:hover{color:var(--colorBrandForegroundInvertedHover);}"],
  a: [".f1eh06m1:active{text-decoration-line:underline;}", ".f1iescvh:active{color:var(--colorBrandForegroundLinkPressed);}", ".flvvhsy:active{color:var(--colorNeutralForeground2Pressed);}", ".fljg2da:active{text-decoration-line:none;}", ".f19wldhg:active{color:var(--colorNeutralForegroundDisabled);}", ".f1hsd4st:active{color:var(--colorBrandForegroundInvertedPressed);}"]
});
var useLinkStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles16();
  const {
    appearance,
    disabled,
    inline,
    root,
    backgroundAppearance
  } = state;
  state.root.className = mergeClasses(linkClassNames.root, styles.root, styles.focusIndicator, root.as === "a" && root.href && styles.href, root.as === "button" && styles.button, appearance === "subtle" && styles.subtle, backgroundAppearance === "inverted" && styles.inverted, inline && styles.inline, disabled && styles.disabled, state.root.className);
  return state;
};

// node_modules/@fluentui/react-link/lib/components/Link/renderLink.js
var renderLink_unstable = (state) => {
  assertSlots(state);
  return jsx(state.root, {});
};

// node_modules/@fluentui/react-link/lib/components/Link/Link.js
var Link = React129.forwardRef((props, ref) => {
  const state = useLink_unstable(props, ref);
  useLinkStyles_unstable(state);
  return renderLink_unstable(state);
});
Link.displayName = "Link";

// node_modules/@fluentui/react-menu/lib/contexts/menuContext.js
var React133 = __toESM(require_react());

// node_modules/@fluentui/react-menu/node_modules/@fluentui/react-context-selector/lib/createContext.js
var React130 = __toESM(require_react());
var import_scheduler5 = __toESM(require_scheduler5());
var createProvider5 = (Original) => {
  const Provider2 = (props) => {
    const valueRef = React130.useRef(props.value);
    const versionRef = React130.useRef(0);
    const contextValue = React130.useRef();
    if (!contextValue.current) {
      contextValue.current = {
        value: valueRef,
        version: versionRef,
        listeners: []
      };
    }
    useIsomorphicLayoutEffect(() => {
      valueRef.current = props.value;
      versionRef.current += 1;
      (0, import_scheduler5.unstable_runWithPriority)(import_scheduler5.unstable_NormalPriority, () => {
        contextValue.current.listeners.forEach((listener) => {
          listener([
            versionRef.current,
            props.value
          ]);
        });
      });
    }, [
      props.value
    ]);
    return React130.createElement(Original, {
      value: contextValue.current
    }, props.children);
  };
  if (true) {
    Provider2.displayName = "ContextSelector.Provider";
  }
  return Provider2;
};
var createContext18 = (defaultValue) => {
  const context = React130.createContext({
    value: {
      current: defaultValue
    },
    version: {
      current: -1
    },
    listeners: []
  });
  context.Provider = createProvider5(context.Provider);
  delete context.Consumer;
  return context;
};

// node_modules/@fluentui/react-menu/node_modules/@fluentui/react-context-selector/lib/useContextSelector.js
var React131 = __toESM(require_react());
var useContextSelector5 = (context, selector) => {
  const contextValue = React131.useContext(context);
  const { value: { current: value }, version: { current: version }, listeners } = contextValue;
  const selected = selector(value);
  const [state, setState] = React131.useState([
    value,
    selected
  ]);
  const dispatch = (payload) => {
    setState((prevState) => {
      if (!payload) {
        return [
          value,
          selected
        ];
      }
      if (payload[0] <= version) {
        if (Object.is(prevState[1], selected)) {
          return prevState;
        }
        return [
          value,
          selected
        ];
      }
      try {
        if (Object.is(prevState[0], payload[1])) {
          return prevState;
        }
        const nextSelected = selector(payload[1]);
        if (Object.is(prevState[1], nextSelected)) {
          return prevState;
        }
        return [
          payload[1],
          nextSelected
        ];
      } catch (e) {
      }
      return [
        prevState[0],
        prevState[1]
      ];
    });
  };
  if (!Object.is(state[1], selected)) {
    dispatch(void 0);
  }
  const stableDispatch = useEventCallback(dispatch);
  useIsomorphicLayoutEffect(() => {
    listeners.push(stableDispatch);
    return () => {
      const index = listeners.indexOf(stableDispatch);
      listeners.splice(index, 1);
    };
  }, [
    stableDispatch,
    listeners
  ]);
  return state[1];
};

// node_modules/@fluentui/react-menu/node_modules/@fluentui/react-context-selector/lib/useHasParentContext.js
var React132 = __toESM(require_react());
function useHasParentContext5(context) {
  const contextValue = React132.useContext(context);
  if (contextValue.version) {
    return contextValue.version.current !== -1;
  }
  return false;
}

// node_modules/@fluentui/react-menu/lib/contexts/menuContext.js
var MenuContext = createContext18(void 0);
var menuContextDefaultValue = {
  open: false,
  setOpen: () => false,
  checkedValues: {},
  onCheckedValueChange: () => null,
  isSubmenu: false,
  triggerRef: {
    current: null
  },
  menuPopoverRef: {
    current: null
  },
  mountNode: null,
  triggerId: "",
  openOnContext: false,
  openOnHover: false,
  hasIcons: false,
  hasCheckmarks: false,
  inline: false,
  persistOnItemClick: false
};
var MenuProvider = MenuContext.Provider;
var useMenuContext_unstable = (selector) => useContextSelector5(MenuContext, (ctx = menuContextDefaultValue) => selector(ctx));

// node_modules/@fluentui/react-menu/lib/contexts/menuTriggerContext.js
var React134 = __toESM(require_react());
var MenuTriggerContext = React134.createContext(void 0);
var menuTriggerContextDefaultValue = false;
var MenuTriggerContextProvider = MenuTriggerContext.Provider;
var useMenuTriggerContext_unstable = () => {
  var _React_useContext;
  return (_React_useContext = React134.useContext(MenuTriggerContext)) !== null && _React_useContext !== void 0 ? _React_useContext : menuTriggerContextDefaultValue;
};

// node_modules/@fluentui/react-menu/lib/contexts/menuGroupContext.js
var React135 = __toESM(require_react());
var MenuGroupContext = React135.createContext(void 0);
var menuGroupContextDefaultValue = {
  headerId: ""
};
var MenuGroupContextProvider = MenuGroupContext.Provider;
var useMenuGroupContext_unstable = () => {
  var _React_useContext;
  return (_React_useContext = React135.useContext(MenuGroupContext)) !== null && _React_useContext !== void 0 ? _React_useContext : menuGroupContextDefaultValue;
};

// node_modules/@fluentui/react-menu/lib/contexts/menuListContext.js
var React136 = __toESM(require_react());
var MenuListContext = createContext18(void 0);
var menuListContextDefaultValue = {
  checkedValues: {},
  setFocusByFirstCharacter: () => null,
  toggleCheckbox: () => null,
  selectRadio: () => null,
  hasIcons: false,
  hasCheckmarks: false
};
var MenuListProvider = MenuListContext.Provider;
var useMenuListContext_unstable = (selector) => useContextSelector5(MenuListContext, (ctx = menuListContextDefaultValue) => selector(ctx));

// node_modules/@fluentui/react-menu/lib/components/Menu/Menu.js
var React140 = __toESM(require_react());

// node_modules/@fluentui/react-menu/lib/components/Menu/useMenu.js
var React138 = __toESM(require_react());

// node_modules/@fluentui/react-menu/lib/utils/useOnMenuEnter.js
var React137 = __toESM(require_react());
var MENU_ENTER_EVENT = "fuimenuenter";
var useOnMenuMouseEnter = (options) => {
  const { refs, callback, element, disabled } = options;
  const listener = useEventCallback((ev) => {
    const popoverRef = refs[0];
    const someMenuPopover = ev.target;
    var _popoverRef_current;
    const isOutsidePopover = !elementContains((_popoverRef_current = popoverRef.current) !== null && _popoverRef_current !== void 0 ? _popoverRef_current : null, someMenuPopover);
    if (isOutsidePopover && !disabled) {
      callback(ev);
    }
  });
  React137.useEffect(() => {
    if (element == null) {
      return;
    }
    if (!disabled) {
      element.addEventListener(MENU_ENTER_EVENT, listener);
    }
    return () => {
      element.removeEventListener(MENU_ENTER_EVENT, listener);
    };
  }, [
    listener,
    element,
    disabled
  ]);
};
var dispatchMenuEnterEvent = (el, nativeEvent) => {
  el.dispatchEvent(new CustomEvent(MENU_ENTER_EVENT, {
    bubbles: true,
    detail: {
      nativeEvent
    }
  }));
};

// node_modules/@fluentui/react-menu/lib/utils/useIsSubmenu.js
function useIsSubmenu() {
  const menuContextValue = useMenuContext_unstable((context) => context.isSubmenu);
  const hasMenuListContext = useHasParentContext5(MenuListContext);
  return menuContextValue || hasMenuListContext;
}

// node_modules/@fluentui/react-menu/lib/components/Menu/useMenu.js
var submenuFallbackPositions = [
  "after",
  "after-bottom",
  "before-top",
  "before",
  "before-bottom",
  "above"
];
var useMenu_unstable = (props) => {
  const isSubmenu = useIsSubmenu();
  const { hoverDelay = 500, inline = false, hasCheckmarks = false, hasIcons = false, closeOnScroll = false, openOnContext = false, persistOnItemClick = false, openOnHover = isSubmenu, defaultCheckedValues, mountNode = null } = props;
  const triggerId = useId("menu");
  const [contextTarget, setContextTarget] = usePositioningMouseTarget();
  const positioningState = {
    position: isSubmenu ? "after" : "below",
    align: isSubmenu ? "top" : "start",
    target: props.openOnContext ? contextTarget : void 0,
    fallbackPositions: isSubmenu ? submenuFallbackPositions : void 0,
    ...resolvePositioningShorthand(props.positioning)
  };
  const children2 = React138.Children.toArray(props.children);
  if (true) {
    if (children2.length === 0) {
      console.warn("Menu must contain at least one child");
    }
    if (children2.length > 2) {
      console.warn("Menu must contain at most two children");
    }
  }
  let menuTrigger = void 0;
  let menuPopover = void 0;
  if (children2.length === 2) {
    menuTrigger = children2[0];
    menuPopover = children2[1];
  } else if (children2.length === 1) {
    menuPopover = children2[0];
  }
  const { targetRef: triggerRef, containerRef: menuPopoverRef } = usePositioning(positioningState);
  const [open, setOpen] = useMenuOpenState({
    hoverDelay,
    isSubmenu,
    setContextTarget,
    closeOnScroll,
    menuPopoverRef,
    triggerRef,
    open: props.open,
    defaultOpen: props.defaultOpen,
    onOpenChange: props.onOpenChange,
    openOnContext
  });
  const [checkedValues, onCheckedValueChange] = useMenuSelectableState({
    checkedValues: props.checkedValues,
    defaultCheckedValues,
    onCheckedValueChange: props.onCheckedValueChange
  });
  return {
    inline,
    hoverDelay,
    triggerId,
    isSubmenu,
    openOnHover,
    contextTarget,
    setContextTarget,
    hasCheckmarks,
    hasIcons,
    closeOnScroll,
    menuTrigger,
    menuPopover,
    mountNode,
    triggerRef,
    menuPopoverRef,
    components: {},
    openOnContext,
    open,
    setOpen,
    checkedValues,
    onCheckedValueChange,
    persistOnItemClick
  };
};
var useMenuSelectableState = (props) => {
  const [checkedValues, setCheckedValues] = useControllableState({
    state: props.checkedValues,
    defaultState: props.defaultCheckedValues,
    initialState: {}
  });
  const onCheckedValueChange = useEventCallback((e, { name, checkedItems }) => {
    var _props_onCheckedValueChange;
    (_props_onCheckedValueChange = props.onCheckedValueChange) === null || _props_onCheckedValueChange === void 0 ? void 0 : _props_onCheckedValueChange.call(props, e, {
      name,
      checkedItems
    });
    setCheckedValues((currentValue) => ({
      ...currentValue,
      [name]: checkedItems
    }));
  });
  return [
    checkedValues,
    onCheckedValueChange
  ];
};
var useMenuOpenState = (state) => {
  "use no memo";
  const { targetDocument } = useFluent();
  const parentSetOpen = useMenuContext_unstable((context) => context.setOpen);
  const onOpenChange = useEventCallback((e, data) => {
    var _state_onOpenChange;
    return (_state_onOpenChange = state.onOpenChange) === null || _state_onOpenChange === void 0 ? void 0 : _state_onOpenChange.call(state, e, data);
  });
  const enteringTriggerRef = React138.useRef(false);
  const [open, setOpenState] = useControllableState({
    state: state.open,
    defaultState: state.defaultOpen,
    initialState: false
  });
  const trySetOpen = useEventCallback((e, data) => {
    const event = e instanceof CustomEvent && e.type === MENU_ENTER_EVENT ? e.detail.nativeEvent : e;
    onOpenChange === null || onOpenChange === void 0 ? void 0 : onOpenChange(event, {
      ...data
    });
    if (data.open && e.type === "contextmenu") {
      state.setContextTarget(e);
    }
    if (!data.open) {
      state.setContextTarget(void 0);
    }
    if (data.bubble) {
      parentSetOpen(e, {
        ...data
      });
    }
    setOpenState(data.open);
  });
  const [setOpenTimeout, clearOpenTimeout] = useTimeout();
  const setOpen = useEventCallback((e, data) => {
    clearOpenTimeout();
    if (!(e instanceof Event) && e.persist) {
      e.persist();
    }
    if (e.type === "mouseleave" || e.type === "mouseenter" || e.type === "mousemove" || e.type === MENU_ENTER_EVENT) {
      var _state_triggerRef_current;
      if ((_state_triggerRef_current = state.triggerRef.current) === null || _state_triggerRef_current === void 0 ? void 0 : _state_triggerRef_current.contains(e.target)) {
        enteringTriggerRef.current = e.type === "mouseenter" || e.type === "mousemove";
      }
      setOpenTimeout(() => trySetOpen(e, data), state.hoverDelay);
    } else {
      trySetOpen(e, data);
    }
  });
  useOnClickOutside({
    contains: elementContains,
    disabled: !open,
    element: targetDocument,
    refs: [
      state.menuPopoverRef,
      !state.openOnContext && state.triggerRef
    ].filter(Boolean),
    callback: (event) => setOpen(event, {
      open: false,
      type: "clickOutside",
      event
    })
  });
  const closeOnScroll = state.openOnContext || state.closeOnScroll;
  useOnScrollOutside({
    contains: elementContains,
    element: targetDocument,
    callback: (event) => setOpen(event, {
      open: false,
      type: "scrollOutside",
      event
    }),
    refs: [
      state.menuPopoverRef,
      !state.openOnContext && state.triggerRef
    ].filter(Boolean),
    disabled: !open || !closeOnScroll
  });
  useOnMenuMouseEnter({
    element: targetDocument,
    callback: (event) => {
      if (!enteringTriggerRef.current) {
        setOpen(event, {
          open: false,
          type: "menuMouseEnter",
          event
        });
      }
    },
    disabled: !open,
    refs: [
      state.menuPopoverRef
    ]
  });
  const { findFirstFocusable } = useFocusFinders();
  const focusFirst = React138.useCallback(() => {
    const firstFocusable = findFirstFocusable(state.menuPopoverRef.current);
    firstFocusable === null || firstFocusable === void 0 ? void 0 : firstFocusable.focus();
  }, [
    findFirstFocusable,
    state.menuPopoverRef
  ]);
  const firstMount = useFirstMount();
  React138.useEffect(() => {
    if (open) {
      focusFirst();
    } else {
      if (!firstMount) {
        if ((targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.activeElement) === (targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.body)) {
          var _state_triggerRef_current;
          (_state_triggerRef_current = state.triggerRef.current) === null || _state_triggerRef_current === void 0 ? void 0 : _state_triggerRef_current.focus();
        }
      }
    }
  }, [
    state.triggerRef,
    state.isSubmenu,
    open,
    focusFirst,
    targetDocument,
    state.menuPopoverRef
  ]);
  return [
    open,
    setOpen
  ];
};

// node_modules/@fluentui/react-menu/lib/components/Menu/useMenuContextValues.js
function useMenuContextValues_unstable(state) {
  const { checkedValues, hasCheckmarks, hasIcons, inline, isSubmenu, menuPopoverRef, mountNode, onCheckedValueChange, open, openOnContext, openOnHover, persistOnItemClick, setOpen, triggerId, triggerRef } = state;
  const menu = {
    checkedValues,
    hasCheckmarks,
    hasIcons,
    inline,
    isSubmenu,
    menuPopoverRef,
    mountNode,
    onCheckedValueChange,
    open,
    openOnContext,
    openOnHover,
    persistOnItemClick,
    setOpen,
    triggerId,
    triggerRef
  };
  return {
    menu
  };
}

// node_modules/@fluentui/react-menu/lib/components/Menu/renderMenu.js
var React139 = __toESM(require_react());
var renderMenu_unstable = (state, contextValues) => {
  return React139.createElement(MenuProvider, {
    value: contextValues.menu
  }, state.menuTrigger, state.open && state.menuPopover);
};

// node_modules/@fluentui/react-menu/lib/components/Menu/Menu.js
var Menu = (props) => {
  const state = useMenu_unstable(props);
  const contextValues = useMenuContextValues_unstable(state);
  return renderMenu_unstable(state, contextValues);
};
Menu.displayName = "Menu";

// node_modules/@fluentui/react-menu/lib/components/Menu/Menu.types.js
var React141 = __toESM(require_react());

// node_modules/@fluentui/react-menu/lib/components/MenuDivider/MenuDivider.js
var React143 = __toESM(require_react());

// node_modules/@fluentui/react-menu/lib/components/MenuDivider/useMenuDivider.js
var React142 = __toESM(require_react());
var useMenuDivider_unstable = (props, ref) => {
  return {
    components: {
      root: "div"
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      role: "presentation",
      "aria-hidden": true,
      ...props,
      // FIXME:
      // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`
      // but since it would be a breaking change to fix it, we are casting ref to it's proper type
      ref
    }), {
      elementType: "div"
    })
  };
};

// node_modules/@fluentui/react-menu/lib/components/MenuDivider/useMenuDividerStyles.styles.js
var menuDividerClassNames = {
  root: "fui-MenuDivider"
};
var useStyles17 = __styles2({
  root: {
    jrapky: 0,
    Frg6f3: 0,
    t21cq0: 0,
    B6of3ja: 0,
    B74szlk: "f8dz51a",
    a9b677: "f14z66ap",
    B9xav0g: 0,
    oivjwe: 0,
    Bn0qgzm: 0,
    Bgfg5da: "f1facbz3"
  }
}, {
  d: [[".f8dz51a{margin:4px -5px 4px -5px;}", {
    p: -1
  }], ".f14z66ap{width:auto;}", [".f1facbz3{border-bottom:var(--strokeWidthThin) solid var(--colorNeutralStroke2);}", {
    p: -1
  }]]
});
var useMenuDividerStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles17();
  state.root.className = mergeClasses(menuDividerClassNames.root, styles.root, state.root.className);
  return state;
};

// node_modules/@fluentui/react-menu/lib/components/MenuDivider/renderMenuDivider.js
var renderMenuDivider_unstable = (state) => {
  assertSlots(state);
  return jsx(state.root, {});
};

// node_modules/@fluentui/react-menu/lib/components/MenuDivider/MenuDivider.js
var MenuDivider = React143.forwardRef((props, ref) => {
  const state = useMenuDivider_unstable(props, ref);
  useMenuDividerStyles_unstable(state);
  useCustomStyleHook("useMenuDividerStyles_unstable")(state);
  return renderMenuDivider_unstable(state);
});
MenuDivider.displayName = "MenuDivider";

// node_modules/@fluentui/react-menu/lib/components/MenuGroup/MenuGroup.js
var React146 = __toESM(require_react());

// node_modules/@fluentui/react-menu/lib/components/MenuGroup/useMenuGroup.js
var React144 = __toESM(require_react());
function useMenuGroup_unstable(props, ref) {
  const headerId = useId("menu-group");
  return {
    components: {
      root: "div"
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      // FIXME:
      // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`
      // but since it would be a breaking change to fix it, we are casting ref to it's proper type
      ref,
      "aria-labelledby": headerId,
      role: "group",
      ...props
    }), {
      elementType: "div"
    }),
    headerId
  };
}

// node_modules/@fluentui/react-menu/lib/components/MenuGroup/renderMenuGroup.js
var renderMenuGroup_unstable = (state, contextValues) => {
  assertSlots(state);
  return jsx(MenuGroupContextProvider, {
    value: contextValues.menuGroup,
    children: jsx(state.root, {})
  });
};

// node_modules/@fluentui/react-menu/lib/components/MenuGroup/useMenuGroupContextValues.js
var React145 = __toESM(require_react());
function useMenuGroupContextValues_unstable(state) {
  const { headerId } = state;
  const menuGroup = React145.useMemo(() => ({
    headerId
  }), [
    headerId
  ]);
  return {
    menuGroup
  };
}

// node_modules/@fluentui/react-menu/lib/components/MenuGroup/useMenuGroupStyles.styles.js
var menuGroupClassNames = {
  root: "fui-MenuGroup"
};
var useMenuGroupStyles_unstable = (state) => {
  "use no memo";
  state.root.className = mergeClasses(menuGroupClassNames.root, state.root.className);
  return state;
};

// node_modules/@fluentui/react-menu/lib/components/MenuGroup/MenuGroup.js
var MenuGroup = React146.forwardRef((props, ref) => {
  const state = useMenuGroup_unstable(props, ref);
  const contextValues = useMenuGroupContextValues_unstable(state);
  useMenuGroupStyles_unstable(state);
  useCustomStyleHook("useMenuGroupStyles_unstable")(state);
  return renderMenuGroup_unstable(state, contextValues);
});
MenuGroup.displayName = "MenuGroup";

// node_modules/@fluentui/react-menu/lib/components/MenuGroupHeader/MenuGroupHeader.js
var React148 = __toESM(require_react());

// node_modules/@fluentui/react-menu/lib/components/MenuGroupHeader/useMenuGroupHeader.js
var React147 = __toESM(require_react());
function useMenuGroupHeader_unstable(props, ref) {
  const { headerId: id } = useMenuGroupContext_unstable();
  return {
    components: {
      root: "div"
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      // FIXME:
      // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`
      // but since it would be a breaking change to fix it, we are casting ref to it's proper type
      ref,
      id,
      ...props
    }), {
      elementType: "div"
    })
  };
}

// node_modules/@fluentui/react-menu/lib/components/MenuGroupHeader/useMenuGroupHeaderStyles.styles.js
var menuGroupHeaderClassNames = {
  root: "fui-MenuGroupHeader"
};
var useStyles18 = __styles2({
  root: {
    Be2twd7: "fy9rknc",
    sj55zd: "f11d4kpn",
    uwmqm3: ["f177v4lu", "f19lj068"],
    z189sj: ["f19lj068", "f177v4lu"],
    Bhrd7zp: "fl43uef",
    Bqenvij: "f1d2rq10",
    mc9l5x: "f22iagw",
    Bt984gj: "f122n59"
  }
}, {
  d: [".fy9rknc{font-size:var(--fontSizeBase200);}", ".f11d4kpn{color:var(--colorNeutralForeground3);}", ".f177v4lu{padding-left:8px;}", ".f19lj068{padding-right:8px;}", ".fl43uef{font-weight:var(--fontWeightSemibold);}", ".f1d2rq10{height:32px;}", ".f22iagw{display:flex;}", ".f122n59{align-items:center;}"]
});
var useMenuGroupHeaderStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles18();
  state.root.className = mergeClasses(menuGroupHeaderClassNames.root, styles.root, state.root.className);
  return state;
};

// node_modules/@fluentui/react-menu/lib/components/MenuGroupHeader/renderMenuGroupHeader.js
var renderMenuGroupHeader_unstable = (state) => {
  assertSlots(state);
  return jsx(state.root, {});
};

// node_modules/@fluentui/react-menu/lib/components/MenuGroupHeader/MenuGroupHeader.js
var MenuGroupHeader = React148.forwardRef((props, ref) => {
  const state = useMenuGroupHeader_unstable(props, ref);
  useMenuGroupHeaderStyles_unstable(state);
  useCustomStyleHook("useMenuGroupHeaderStyles_unstable")(state);
  return renderMenuGroupHeader_unstable(state);
});
MenuGroupHeader.displayName = "MenuGroupHeader";

// node_modules/@fluentui/react-menu/lib/components/MenuItem/MenuItem.js
var React152 = __toESM(require_react());

// node_modules/@fluentui/react-menu/lib/components/MenuItem/useMenuItem.js
var React150 = __toESM(require_react());

// node_modules/@fluentui/react-menu/lib/components/MenuItem/useCharacterSearch.js
var React149 = __toESM(require_react());
var useCharacterSearch = (state, ref) => {
  "use no memo";
  const setFocusByFirstCharacter = useMenuListContext_unstable((context) => context.setFocusByFirstCharacter);
  const { onKeyDown: originalOnKeyDown } = state.root;
  state.root.onKeyDown = (e) => {
    var _e_key;
    originalOnKeyDown === null || originalOnKeyDown === void 0 ? void 0 : originalOnKeyDown(e);
    if (((_e_key = e.key) === null || _e_key === void 0 ? void 0 : _e_key.length) > 1) {
      return;
    }
    if (ref.current) {
      setFocusByFirstCharacter === null || setFocusByFirstCharacter === void 0 ? void 0 : setFocusByFirstCharacter(e, ref.current);
    }
  };
  return state;
};

// node_modules/@fluentui/react-menu/lib/components/MenuItem/useMenuItem.js
var ChevronRightIcon = bundleIcon_default(ChevronRightFilled, ChevronRightRegular);
var ChevronLeftIcon = bundleIcon_default(ChevronLeftFilled, ChevronLeftRegular);
var useMenuItem_unstable = (props, ref) => {
  const isSubmenuTrigger = useMenuTriggerContext_unstable();
  const persistOnClickContext = useMenuContext_unstable((context) => context.persistOnItemClick);
  const { as = "div", disabled = false, hasSubmenu = isSubmenuTrigger, persistOnClick = persistOnClickContext } = props;
  const hasIcons = useMenuListContext_unstable((context) => context.hasIcons);
  const hasCheckmarks = useMenuListContext_unstable((context) => context.hasCheckmarks);
  const setOpen = useMenuContext_unstable((context) => context.setOpen);
  const { dir } = useFluent();
  const innerRef = React150.useRef(null);
  const dismissedWithKeyboardRef = React150.useRef(false);
  const state = {
    hasSubmenu,
    disabled,
    persistOnClick,
    components: {
      root: "div",
      icon: "span",
      checkmark: "span",
      submenuIndicator: "span",
      content: "span",
      secondaryContent: "span"
    },
    root: slot_exports.always(getIntrinsicElementProps(as, useARIAButtonProps(as, {
      role: "menuitem",
      ...props,
      disabled: false,
      disabledFocusable: disabled,
      ref: useMergedRefs(ref, innerRef),
      onKeyDown: useEventCallback((event) => {
        var _props_onKeyDown;
        (_props_onKeyDown = props.onKeyDown) === null || _props_onKeyDown === void 0 ? void 0 : _props_onKeyDown.call(props, event);
        if (!event.isDefaultPrevented() && (event.key === Space || event.key === Enter)) {
          dismissedWithKeyboardRef.current = true;
        }
      }),
      onMouseEnter: useEventCallback((event) => {
        var _innerRef_current, _props_onMouseEnter;
        (_innerRef_current = innerRef.current) === null || _innerRef_current === void 0 ? void 0 : _innerRef_current.focus();
        (_props_onMouseEnter = props.onMouseEnter) === null || _props_onMouseEnter === void 0 ? void 0 : _props_onMouseEnter.call(props, event);
      }),
      onClick: useEventCallback((event) => {
        var _props_onClick;
        if (!hasSubmenu && !persistOnClick) {
          setOpen(event, {
            open: false,
            keyboard: dismissedWithKeyboardRef.current,
            bubble: true,
            type: "menuItemClick",
            event
          });
          dismissedWithKeyboardRef.current = false;
        }
        (_props_onClick = props.onClick) === null || _props_onClick === void 0 ? void 0 : _props_onClick.call(props, event);
      })
    })), {
      elementType: "div"
    }),
    icon: slot_exports.optional(props.icon, {
      renderByDefault: hasIcons,
      elementType: "span"
    }),
    checkmark: slot_exports.optional(props.checkmark, {
      renderByDefault: hasCheckmarks,
      elementType: "span"
    }),
    submenuIndicator: slot_exports.optional(props.submenuIndicator, {
      renderByDefault: hasSubmenu,
      defaultProps: {
        children: dir === "ltr" ? React150.createElement(ChevronRightIcon, null) : React150.createElement(ChevronLeftIcon, null)
      },
      elementType: "span"
    }),
    content: slot_exports.optional(props.content, {
      renderByDefault: !!props.children,
      defaultProps: {
        children: props.children
      },
      elementType: "span"
    }),
    secondaryContent: slot_exports.optional(props.secondaryContent, {
      elementType: "span"
    })
  };
  useCharacterSearch(state, innerRef);
  return state;
};

// node_modules/@fluentui/react-menu/lib/components/MenuItem/renderMenuItem.js
var renderMenuItem_unstable = (state) => {
  assertSlots(state);
  return jsxs(state.root, {
    children: [
      state.checkmark && jsx(state.checkmark, {}),
      state.icon && jsx(state.icon, {}),
      state.content && jsx(state.content, {}),
      state.secondaryContent && jsx(state.secondaryContent, {}),
      state.submenuIndicator && jsx(state.submenuIndicator, {})
    ]
  });
};

// node_modules/@fluentui/react-menu/lib/selectable/useCheckmarkStyles.styles.js
var useStyles19 = __styles2({
  root: {
    a9b677: "fjw5fx7",
    Bqenvij: "fd461yt",
    Bcdw1i0: "fd7fpy0"
  },
  rootChecked: {
    Bcdw1i0: "f1022m68"
  }
}, {
  d: [".fjw5fx7{width:16px;}", ".fd461yt{height:16px;}", ".fd7fpy0{visibility:hidden;}", ".f1022m68{visibility:visible;}"]
});
var useCheckmarkStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles19();
  if (state.checkmark) {
    state.checkmark.className = mergeClasses(styles.root, state.checked && styles.rootChecked, state.checkmark.className);
  }
};

// node_modules/@fluentui/react-menu/lib/selectable/types.js
var React151 = __toESM(require_react());

// node_modules/@fluentui/react-menu/lib/components/MenuItem/useMenuItemStyles.styles.js
var menuItemClassNames = {
  root: "fui-MenuItem",
  icon: "fui-MenuItem__icon",
  checkmark: "fui-MenuItem__checkmark",
  submenuIndicator: "fui-MenuItem__submenuIndicator",
  content: "fui-MenuItem__content",
  secondaryContent: "fui-MenuItem__secondaryContent"
};
var useRootBaseStyles = __resetStyles("r11normc", "r1lnj0i0", {
  r: [".r11normc{border-radius:var(--borderRadiusMedium);position:relative;color:var(--colorNeutralForeground2);background-color:var(--colorNeutralBackground1);padding-right:var(--spacingVerticalSNudge);padding-left:var(--spacingVerticalSNudge);padding-top:var(--spacingVerticalSNudge);padding-bottom:var(--spacingVerticalSNudge);box-sizing:border-box;max-width:290px;min-height:32px;flex-shrink:0;display:flex;align-items:start;font-size:var(--fontSizeBase300);cursor:pointer;gap:4px;-webkit-user-select:none;-moz-user-select:none;user-select:none;}", ".r11normc:hover{background-color:var(--colorNeutralBackground1Hover);color:var(--colorNeutralForeground2Hover);}", ".r11normc:hover .fui-Icon-filled{display:inline;}", ".r11normc:hover .fui-Icon-regular{display:none;}", ".r11normc:hover .fui-MenuItem__icon{color:var(--colorNeutralForeground2BrandSelected);}", ".r11normc:hover:active{background-color:var(--colorNeutralBackground1Pressed);color:var(--colorNeutralForeground2Pressed);}", ".r11normc:focus{outline-style:none;}", ".r11normc:focus-visible{outline-style:none;}", ".r11normc[data-fui-focus-visible]{border-top-color:transparent;border-right-color:transparent;border-bottom-color:transparent;border-left-color:transparent;}", '.r11normc[data-fui-focus-visible]::after{content:"";position:absolute;pointer-events:none;z-index:1;border:2px solid var(--colorStrokeFocus2);border-radius:var(--borderRadiusMedium);top:calc(2px * -1);right:calc(2px * -1);bottom:calc(2px * -1);left:calc(2px * -1);}', ".r1lnj0i0{border-radius:var(--borderRadiusMedium);position:relative;color:var(--colorNeutralForeground2);background-color:var(--colorNeutralBackground1);padding-left:var(--spacingVerticalSNudge);padding-right:var(--spacingVerticalSNudge);padding-top:var(--spacingVerticalSNudge);padding-bottom:var(--spacingVerticalSNudge);box-sizing:border-box;max-width:290px;min-height:32px;flex-shrink:0;display:flex;align-items:start;font-size:var(--fontSizeBase300);cursor:pointer;gap:4px;-webkit-user-select:none;-moz-user-select:none;user-select:none;}", ".r1lnj0i0:hover{background-color:var(--colorNeutralBackground1Hover);color:var(--colorNeutralForeground2Hover);}", ".r1lnj0i0:hover .fui-Icon-filled{display:inline;}", ".r1lnj0i0:hover .fui-Icon-regular{display:none;}", ".r1lnj0i0:hover .fui-MenuItem__icon{color:var(--colorNeutralForeground2BrandSelected);}", ".r1lnj0i0:hover:active{background-color:var(--colorNeutralBackground1Pressed);color:var(--colorNeutralForeground2Pressed);}", ".r1lnj0i0:focus{outline-style:none;}", ".r1lnj0i0:focus-visible{outline-style:none;}", ".r1lnj0i0[data-fui-focus-visible]{border-top-color:transparent;border-left-color:transparent;border-bottom-color:transparent;border-right-color:transparent;}", '.r1lnj0i0[data-fui-focus-visible]::after{content:"";position:absolute;pointer-events:none;z-index:1;border:2px solid var(--colorStrokeFocus2);border-radius:var(--borderRadiusMedium);top:calc(2px * -1);left:calc(2px * -1);bottom:calc(2px * -1);right:calc(2px * -1);}'],
  s: ['@media (forced-colors: active){.r11normc:hover{background-color:Canvas;border-color:Highlight;color:Highlight;}.r11normc:focus{outline-style:none;}.r11normc:focus-visible{outline-style:none;}.r11normc[data-fui-focus-visible]{border-top-color:transparent;border-right-color:transparent;border-bottom-color:transparent;border-left-color:transparent;}@media (forced-colors: active){.r11normc[data-fui-focus-visible]::after{border-top-color:Highlight;border-right-color:Highlight;border-bottom-color:Highlight;border-left-color:Highlight;}}.r11normc[data-fui-focus-visible]::after{content:"";position:absolute;pointer-events:none;z-index:1;border:2px solid Highlight;border-radius:var(--borderRadiusMedium);top:calc(2px * -1);right:calc(2px * -1);bottom:calc(2px * -1);left:calc(2px * -1);}}', "@media (forced-colors: active){.r11normc[data-fui-focus-visible]::after{border-top-color:Highlight;border-right-color:Highlight;border-bottom-color:Highlight;border-left-color:Highlight;}}", '@media (forced-colors: active){.r1lnj0i0:hover{background-color:Canvas;border-color:Highlight;color:Highlight;}.r1lnj0i0:focus{outline-style:none;}.r1lnj0i0:focus-visible{outline-style:none;}.r1lnj0i0[data-fui-focus-visible]{border-top-color:transparent;border-left-color:transparent;border-bottom-color:transparent;border-right-color:transparent;}@media (forced-colors: active){.r1lnj0i0[data-fui-focus-visible]::after{border-top-color:Highlight;border-left-color:Highlight;border-bottom-color:Highlight;border-right-color:Highlight;}}.r1lnj0i0[data-fui-focus-visible]::after{content:"";position:absolute;pointer-events:none;z-index:1;border:2px solid Highlight;border-radius:var(--borderRadiusMedium);top:calc(2px * -1);left:calc(2px * -1);bottom:calc(2px * -1);right:calc(2px * -1);}}', "@media (forced-colors: active){.r1lnj0i0[data-fui-focus-visible]::after{border-top-color:Highlight;border-left-color:Highlight;border-bottom-color:Highlight;border-right-color:Highlight;}}"]
});
var useContentBaseStyles = __resetStyles("r1ls86vo", "rpbc5dr", [".r1ls86vo{padding-left:2px;padding-right:2px;background-color:transparent;flex-grow:1;}", ".rpbc5dr{padding-right:2px;padding-left:2px;background-color:transparent;flex-grow:1;}"]);
var useSecondaryContentBaseStyles = __resetStyles("r12mwwux", "r1ewgu5j", [".r12mwwux{padding-left:2px;padding-right:2px;font-family:var(--fontFamilyBase);font-size:var(--fontSizeBase200);font-weight:var(--fontWeightRegular);line-height:var(--lineHeightBase300);color:var(--colorNeutralForeground3);}", ".r12mwwux:hover{color:var(--colorNeutralForeground3Hover);}", ".r12mwwux:focus{color:var(--colorNeutralForeground3Hover);}", ".r1ewgu5j{padding-right:2px;padding-left:2px;font-family:var(--fontFamilyBase);font-size:var(--fontSizeBase200);font-weight:var(--fontWeightRegular);line-height:var(--lineHeightBase300);color:var(--colorNeutralForeground3);}", ".r1ewgu5j:hover{color:var(--colorNeutralForeground3Hover);}", ".r1ewgu5j:focus{color:var(--colorNeutralForeground3Hover);}"]);
var useIconBaseStyles = __resetStyles("r9c34qo", null, [".r9c34qo{width:20px;height:20px;font-size:20px;line-height:0;align-items:center;display:inline-flex;justify-content:center;}"]);
var useSubmenuIndicatorBaseStyles = __resetStyles("r9c34qo", null, [".r9c34qo{width:20px;height:20px;font-size:20px;line-height:0;align-items:center;display:inline-flex;justify-content:center;}"]);
var useStyles20 = __styles2({
  checkmark: {
    B6of3ja: "fmnzpld"
  },
  splitItemMain: {
    Bh6795r: "fqerorx"
  },
  splitItemTrigger: {
    Btl43ni: ["f1ozlkrg", "f10ostut"],
    Beyfa6y: ["f1deotkl", "f1krrbdw"],
    uwmqm3: ["f1cnd47f", "fhxju0i"],
    Ftih45: "f1wl9k8s",
    Ccq8qp: "f1yn80uh",
    Baz25je: "f68mna0",
    cmx5o7: "f1p5zmk"
  },
  disabled: {
    sj55zd: "f1s2aq7o",
    Bi91k9c: "fvgxktp",
    Jwef8y: "f1ijtazh",
    eoavqd: "fphbwmw",
    Bk3fhr4: "f19vpps7",
    Bmfj8id: "fv5swzo",
    Bg7n49j: "f1q1x1ba",
    B2d53fq: "fcvwxyo",
    iro3zm: "f1to34ca",
    t0hwav: "ft33916",
    Bbusuzp: "f1dcs8yz",
    ze5xyy: "f1kc2mi9",
    Bqrx1nm: "fkavljg",
    Bctn1xl: "fk56vqo",
    h5esng: "ff3wi9b",
    Bh6z0a4: "f1ikwg0d",
    Bh953qp: "f10l1t5h"
  }
}, {
  d: [".fmnzpld{margin-top:2px;}", ".fqerorx{flex-grow:1;}", ".f1ozlkrg{border-top-left-radius:0;}", ".f10ostut{border-top-right-radius:0;}", ".f1deotkl{border-bottom-left-radius:0;}", ".f1krrbdw{border-bottom-right-radius:0;}", ".f1cnd47f{padding-left:0;}", ".fhxju0i{padding-right:0;}", '.f1wl9k8s::before{content:"";}', ".f1yn80uh::before{width:var(--strokeWidthThin);}", ".f68mna0::before{height:24px;}", ".f1p5zmk::before{background-color:var(--colorNeutralStroke1);}", ".f1s2aq7o{color:var(--colorNeutralForegroundDisabled);}"],
  h: [".fvgxktp:hover{color:var(--colorNeutralForegroundDisabled);}", ".f1ijtazh:hover{background-color:var(--colorNeutralBackground1);}", ".fphbwmw:hover{cursor:not-allowed;}", ".f19vpps7:hover .fui-Icon-filled{display:none;}", ".fv5swzo:hover .fui-Icon-regular{display:inline;}", ".f1q1x1ba:hover .fui-MenuItem__icon{color:var(--colorNeutralForegroundDisabled);}", ".fcvwxyo:hover:active{color:var(--colorNeutralForegroundDisabled);}", ".f1to34ca:hover:active{background-color:var(--colorNeutralBackground1);}"],
  f: [".ft33916:focus{color:var(--colorNeutralForegroundDisabled);}"],
  m: [["@media (forced-colors: active){.f1dcs8yz{color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1kc2mi9:hover{color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fkavljg:hover{background-color:Canvas;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fk56vqo:hover .fui-MenuItem__icon{color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.ff3wi9b:hover .fui-MenuItem__icon{background-color:Canvas;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1ikwg0d:focus{color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f10l1t5h:focus{background-color:Canvas;}}", {
    m: "(forced-colors: active)"
  }]]
});
var useMenuItemStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles20();
  const rootBaseStyles = useRootBaseStyles();
  const contentBaseStyles = useContentBaseStyles();
  const secondaryContentBaseStyles = useSecondaryContentBaseStyles();
  const iconBaseStyles = useIconBaseStyles();
  const submenuIndicatorBaseStyles = useSubmenuIndicatorBaseStyles();
  state.root.className = mergeClasses(menuItemClassNames.root, rootBaseStyles, state.disabled && styles.disabled, state.root.className);
  if (state.content) {
    state.content.className = mergeClasses(menuItemClassNames.content, contentBaseStyles, state.content.className);
  }
  if (state.checkmark) {
    state.checkmark.className = mergeClasses(menuItemClassNames.checkmark, styles.checkmark, state.checkmark.className);
  }
  if (state.secondaryContent) {
    state.secondaryContent.className = mergeClasses(menuItemClassNames.secondaryContent, !state.disabled && secondaryContentBaseStyles, state.secondaryContent.className);
  }
  if (state.icon) {
    state.icon.className = mergeClasses(menuItemClassNames.icon, iconBaseStyles, state.icon.className);
  }
  if (state.submenuIndicator) {
    state.submenuIndicator.className = mergeClasses(menuItemClassNames.submenuIndicator, submenuIndicatorBaseStyles, state.submenuIndicator.className);
  }
  useCheckmarkStyles_unstable(state);
  return state;
};

// node_modules/@fluentui/react-menu/lib/components/MenuItem/MenuItem.js
var MenuItem = React152.forwardRef((props, ref) => {
  const state = useMenuItem_unstable(props, ref);
  useMenuItemStyles_unstable(state);
  useCustomStyleHook("useMenuItemStyles_unstable")(state);
  return renderMenuItem_unstable(state);
});
MenuItem.displayName = "MenuItem";

// node_modules/@fluentui/react-menu/lib/components/MenuItemCheckbox/MenuItemCheckbox.js
var React154 = __toESM(require_react());

// node_modules/@fluentui/react-menu/lib/components/MenuItemCheckbox/useMenuItemCheckbox.js
var React153 = __toESM(require_react());
var useMenuItemCheckbox_unstable = (props, ref) => {
  const toggleCheckbox = useMenuListContext_unstable((context) => context.toggleCheckbox);
  const { name, value } = props;
  const checked = useMenuListContext_unstable((context) => {
    var _context_checkedValues;
    const checkedItems = ((_context_checkedValues = context.checkedValues) === null || _context_checkedValues === void 0 ? void 0 : _context_checkedValues[name]) || [];
    return checkedItems.indexOf(value) !== -1;
  });
  const state = {
    ...useMenuItem_unstable({
      role: "menuitemcheckbox",
      persistOnClick: true,
      ...props,
      "aria-checked": checked,
      checkmark: slot_exports.optional(props.checkmark, {
        defaultProps: {
          children: React153.createElement(Checkmark16Filled, null)
        },
        renderByDefault: true,
        elementType: "span"
      }),
      onClick: (e) => {
        var _props_onClick;
        toggleCheckbox === null || toggleCheckbox === void 0 ? void 0 : toggleCheckbox(e, name, value, checked);
        (_props_onClick = props.onClick) === null || _props_onClick === void 0 ? void 0 : _props_onClick.call(props, e);
      }
    }, ref),
    name,
    value,
    checked
  };
  return state;
};

// node_modules/@fluentui/react-menu/lib/components/MenuItemCheckbox/renderMenuItemCheckbox.js
var renderMenuItemCheckbox_unstable = (state) => {
  assertSlots(state);
  return jsxs(state.root, {
    children: [
      state.checkmark && jsx(state.checkmark, {}),
      state.icon && jsx(state.icon, {}),
      state.content && jsx(state.content, {}),
      state.secondaryContent && jsx(state.secondaryContent, {})
    ]
  });
};

// node_modules/@fluentui/react-menu/lib/components/MenuItemCheckbox/useMenuItemCheckboxStyles.styles.js
var menuItemCheckboxClassNames = {
  root: "fui-MenuItemCheckbox",
  icon: "fui-MenuItemCheckbox__icon",
  checkmark: "fui-MenuItemCheckbox__checkmark",
  content: "fui-MenuItemCheckbox__content",
  secondaryContent: "fui-MenuItemCheckbox__secondaryContent"
};
var useMenuItemCheckboxStyles_unstable = (state) => {
  "use no memo";
  state.root.className = mergeClasses(menuItemCheckboxClassNames.root, state.root.className);
  if (state.content) {
    state.content.className = mergeClasses(menuItemCheckboxClassNames.content, state.content.className);
  }
  if (state.secondaryContent) {
    state.secondaryContent.className = mergeClasses(menuItemCheckboxClassNames.secondaryContent, state.secondaryContent.className);
  }
  if (state.icon) {
    state.icon.className = mergeClasses(menuItemCheckboxClassNames.icon, state.icon.className);
  }
  if (state.checkmark) {
    state.checkmark.className = mergeClasses(menuItemCheckboxClassNames.checkmark, state.checkmark.className);
  }
  useMenuItemStyles_unstable(state);
  useCheckmarkStyles_unstable(state);
  return state;
};

// node_modules/@fluentui/react-menu/lib/components/MenuItemCheckbox/MenuItemCheckbox.js
var MenuItemCheckbox = React154.forwardRef((props, ref) => {
  const state = useMenuItemCheckbox_unstable(props, ref);
  useMenuItemCheckboxStyles_unstable(state);
  useCustomStyleHook("useMenuItemCheckboxStyles_unstable")(state);
  return renderMenuItemCheckbox_unstable(state);
});
MenuItemCheckbox.displayName = "MenuItemCheckbox";

// node_modules/@fluentui/react-menu/lib/components/MenuItemRadio/MenuItemRadio.js
var React156 = __toESM(require_react());

// node_modules/@fluentui/react-menu/lib/components/MenuItemRadio/useMenuItemRadio.js
var React155 = __toESM(require_react());
var useMenuItemRadio_unstable = (props, ref) => {
  const { name, value } = props;
  const checked = useMenuListContext_unstable((context) => {
    var _context_checkedValues;
    const checkedItems = ((_context_checkedValues = context.checkedValues) === null || _context_checkedValues === void 0 ? void 0 : _context_checkedValues[name]) || [];
    return checkedItems.indexOf(value) !== -1;
  });
  const selectRadio = useMenuListContext_unstable((context) => context.selectRadio);
  return {
    ...useMenuItem_unstable({
      ...props,
      role: "menuitemradio",
      "aria-checked": checked,
      checkmark: slot_exports.optional(props.checkmark, {
        defaultProps: {
          children: React155.createElement(Checkmark16Filled, null)
        },
        renderByDefault: true,
        elementType: "span"
      }),
      onClick: (e) => {
        var _props_onClick;
        selectRadio === null || selectRadio === void 0 ? void 0 : selectRadio(e, name, value, checked);
        (_props_onClick = props.onClick) === null || _props_onClick === void 0 ? void 0 : _props_onClick.call(props, e);
      }
    }, ref),
    checked,
    name,
    value
  };
};

// node_modules/@fluentui/react-menu/lib/components/MenuItemRadio/renderMenuItemRadio.js
var renderMenuItemRadio_unstable = (state) => {
  assertSlots(state);
  return jsxs(state.root, {
    children: [
      state.checkmark && jsx(state.checkmark, {}),
      state.icon && jsx(state.icon, {}),
      state.content && jsx(state.content, {}),
      state.secondaryContent && jsx(state.secondaryContent, {})
    ]
  });
};

// node_modules/@fluentui/react-menu/lib/components/MenuItemRadio/useMenuItemRadioStyles.styles.js
var menuItemRadioClassNames = {
  root: "fui-MenuItemRadio",
  icon: "fui-MenuItemRadio__icon",
  checkmark: "fui-MenuItemRadio__checkmark",
  content: "fui-MenuItemRadio__content",
  secondaryContent: "fui-MenuItemRadio__secondaryContent"
};
var useMenuItemRadioStyles_unstable = (state) => {
  "use no memo";
  state.root.className = mergeClasses(menuItemRadioClassNames.root, state.root.className);
  if (state.content) {
    state.content.className = mergeClasses(menuItemRadioClassNames.content, state.content.className);
  }
  if (state.secondaryContent) {
    state.secondaryContent.className = mergeClasses(menuItemRadioClassNames.secondaryContent, state.secondaryContent.className);
  }
  if (state.icon) {
    state.icon.className = mergeClasses(menuItemRadioClassNames.icon, state.icon.className);
  }
  if (state.checkmark) {
    state.checkmark.className = mergeClasses(menuItemRadioClassNames.checkmark, state.checkmark.className);
  }
  useMenuItemStyles_unstable(state);
  useCheckmarkStyles_unstable(state);
};

// node_modules/@fluentui/react-menu/lib/components/MenuItemRadio/MenuItemRadio.js
var MenuItemRadio = React156.forwardRef((props, ref) => {
  const state = useMenuItemRadio_unstable(props, ref);
  useMenuItemRadioStyles_unstable(state);
  useCustomStyleHook("useMenuItemRadioStyles_unstable")(state);
  return renderMenuItemRadio_unstable(state);
});
MenuItemRadio.displayName = "MenuItemRadio";

// node_modules/@fluentui/react-menu/lib/components/MenuList/MenuList.js
var React158 = __toESM(require_react());

// node_modules/@fluentui/react-menu/lib/components/MenuList/useMenuList.js
var React157 = __toESM(require_react());
var useMenuList_unstable = (props, ref) => {
  const { findAllFocusable } = useFocusFinders();
  const { targetDocument } = useFluent();
  const menuContext = useMenuContextSelectors();
  const hasMenuContext = useHasParentContext5(MenuContext);
  const focusAttributes = useArrowNavigationGroup({
    circular: true
  });
  if (usingPropsAndMenuContext(props, menuContext, hasMenuContext)) {
    console.warn("You are using both MenuList and Menu props, we recommend you to use Menu props when available");
  }
  const innerRef = React157.useRef(null);
  React157.useEffect(() => {
    const element = innerRef.current;
    if (hasMenuContext && targetDocument && element) {
      const onTabsterMoveFocus = (e) => {
        const nextElement = e.detail.next;
        if (nextElement && element.contains(targetDocument.activeElement) && !element.contains(nextElement)) {
          e.preventDefault();
        }
      };
      targetDocument.addEventListener(TabsterMoveFocusEventName, onTabsterMoveFocus);
      return () => {
        targetDocument.removeEventListener(TabsterMoveFocusEventName, onTabsterMoveFocus);
      };
    }
  }, [
    innerRef,
    targetDocument,
    hasMenuContext
  ]);
  const setFocusByFirstCharacter = React157.useCallback((e, itemEl) => {
    const acceptedRoles = [
      "menuitem",
      "menuitemcheckbox",
      "menuitemradio"
    ];
    if (!innerRef.current) {
      return;
    }
    const menuItems = findAllFocusable(innerRef.current, (el) => el.hasAttribute("role") && acceptedRoles.indexOf(el.getAttribute("role")) !== -1);
    let startIndex = menuItems.indexOf(itemEl) + 1;
    if (startIndex === menuItems.length) {
      startIndex = 0;
    }
    const firstChars = menuItems.map((menuItem) => {
      var _menuItem_textContent;
      return (_menuItem_textContent = menuItem.textContent) === null || _menuItem_textContent === void 0 ? void 0 : _menuItem_textContent.charAt(0).toLowerCase();
    });
    const char = e.key.toLowerCase();
    const getIndexFirstChars = (start, firstChar) => {
      for (let i = start; i < firstChars.length; i++) {
        if (char === firstChars[i]) {
          return i;
        }
      }
      return -1;
    };
    let index = getIndexFirstChars(startIndex, char);
    if (index === -1) {
      index = getIndexFirstChars(0, char);
    }
    if (index > -1) {
      menuItems[index].focus();
    }
  }, [
    findAllFocusable
  ]);
  var _props_checkedValues;
  const [checkedValues, setCheckedValues] = useControllableState({
    state: (_props_checkedValues = props.checkedValues) !== null && _props_checkedValues !== void 0 ? _props_checkedValues : hasMenuContext ? menuContext.checkedValues : void 0,
    defaultState: props.defaultCheckedValues,
    initialState: {}
  });
  var _props_onCheckedValueChange;
  const handleCheckedValueChange = (_props_onCheckedValueChange = props.onCheckedValueChange) !== null && _props_onCheckedValueChange !== void 0 ? _props_onCheckedValueChange : hasMenuContext ? menuContext.onCheckedValueChange : void 0;
  const toggleCheckbox = useEventCallback((e, name, value, checked) => {
    const checkedItems = (checkedValues === null || checkedValues === void 0 ? void 0 : checkedValues[name]) || [];
    const newCheckedItems = [
      ...checkedItems
    ];
    if (checked) {
      newCheckedItems.splice(newCheckedItems.indexOf(value), 1);
    } else {
      newCheckedItems.push(value);
    }
    handleCheckedValueChange === null || handleCheckedValueChange === void 0 ? void 0 : handleCheckedValueChange(e, {
      name,
      checkedItems: newCheckedItems
    });
    setCheckedValues((s) => ({
      ...s,
      [name]: newCheckedItems
    }));
  });
  const selectRadio = useEventCallback((e, name, value) => {
    const newCheckedItems = [
      value
    ];
    setCheckedValues((s) => ({
      ...s,
      [name]: newCheckedItems
    }));
    handleCheckedValueChange === null || handleCheckedValueChange === void 0 ? void 0 : handleCheckedValueChange(e, {
      name,
      checkedItems: newCheckedItems
    });
  });
  return {
    components: {
      root: "div"
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      // FIXME:
      // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`
      // but since it would be a breaking change to fix it, we are casting ref to it's proper type
      ref: useMergedRefs(ref, innerRef),
      role: "menu",
      "aria-labelledby": menuContext.triggerId,
      ...focusAttributes,
      ...props
    }), {
      elementType: "div"
    }),
    hasIcons: menuContext.hasIcons || false,
    hasCheckmarks: menuContext.hasCheckmarks || false,
    checkedValues,
    hasMenuContext,
    setFocusByFirstCharacter,
    selectRadio,
    toggleCheckbox
  };
};
var useMenuContextSelectors = () => {
  const checkedValues = useMenuContext_unstable((context) => context.checkedValues);
  const onCheckedValueChange = useMenuContext_unstable((context) => context.onCheckedValueChange);
  const triggerId = useMenuContext_unstable((context) => context.triggerId);
  const hasIcons = useMenuContext_unstable((context) => context.hasIcons);
  const hasCheckmarks = useMenuContext_unstable((context) => context.hasCheckmarks);
  return {
    checkedValues,
    onCheckedValueChange,
    triggerId,
    hasIcons,
    hasCheckmarks
  };
};
var usingPropsAndMenuContext = (props, contextValue, hasMenuContext) => {
  let isUsingPropsAndContext = false;
  for (const val in contextValue) {
    if (props[val]) {
      isUsingPropsAndContext = true;
    }
  }
  return hasMenuContext && isUsingPropsAndContext;
};

// node_modules/@fluentui/react-menu/lib/components/MenuList/renderMenuList.js
var renderMenuList_unstable = (state, contextValues) => {
  assertSlots(state);
  return jsx(MenuListProvider, {
    value: contextValues.menuList,
    children: jsx(state.root, {})
  });
};

// node_modules/@fluentui/react-menu/lib/components/MenuList/useMenuListContextValues.js
function useMenuListContextValues_unstable(state) {
  const { checkedValues, hasCheckmarks, hasIcons, selectRadio, setFocusByFirstCharacter, toggleCheckbox } = state;
  const menuList = {
    checkedValues,
    hasCheckmarks,
    hasIcons,
    selectRadio,
    setFocusByFirstCharacter,
    toggleCheckbox
  };
  return {
    menuList
  };
}

// node_modules/@fluentui/react-menu/lib/components/MenuList/useMenuListStyles.styles.js
var menuListClassNames = {
  root: "fui-MenuList"
};
var useStyles21 = __styles2({
  root: {
    mc9l5x: "f22iagw",
    Beiy3e4: "f1vx9l62",
    i8kkvl: 0,
    Belr9w4: 0,
    rmohyg: "f1t6b6ee"
  },
  hasMenuContext: {
    Bqenvij: "f1l02sjl"
  }
}, {
  d: [".f22iagw{display:flex;}", ".f1vx9l62{flex-direction:column;}", [".f1t6b6ee{gap:2px;}", {
    p: -1
  }], ".f1l02sjl{height:100%;}"]
});
var useMenuListStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles21();
  state.root.className = mergeClasses(menuListClassNames.root, styles.root, state.hasMenuContext && styles.hasMenuContext, state.root.className);
  return state;
};

// node_modules/@fluentui/react-menu/lib/components/MenuList/MenuList.js
var MenuList = React158.forwardRef((props, ref) => {
  const state = useMenuList_unstable(props, ref);
  const contextValues = useMenuListContextValues_unstable(state);
  useMenuListStyles_unstable(state);
  useCustomStyleHook("useMenuListStyles_unstable")(state);
  return renderMenuList_unstable(state, contextValues);
});
MenuList.displayName = "MenuList";

// node_modules/@fluentui/react-menu/lib/components/MenuList/MenuList.types.js
var React159 = __toESM(require_react());

// node_modules/@fluentui/react-menu/lib/components/MenuPopover/MenuPopover.js
var React161 = __toESM(require_react());

// node_modules/@fluentui/react-menu/lib/components/MenuPopover/useMenuPopover.js
var React160 = __toESM(require_react());
var useMenuPopover_unstable = (props, ref) => {
  "use no memo";
  const popoverRef = useMenuContext_unstable((context) => context.menuPopoverRef);
  const setOpen = useMenuContext_unstable((context) => context.setOpen);
  const open = useMenuContext_unstable((context) => context.open);
  const openOnHover = useMenuContext_unstable((context) => context.openOnHover);
  const triggerRef = useMenuContext_unstable((context) => context.triggerRef);
  const isSubmenu = useIsSubmenu();
  const canDispatchCustomEventRef = React160.useRef(true);
  const restoreFocusSourceAttributes = useRestoreFocusSource();
  const [setThrottleTimeout, clearThrottleTimeout] = useTimeout();
  const { dir } = useFluent();
  const CloseArrowKey = dir === "ltr" ? ArrowLeft : ArrowRight;
  const mouseOverListenerCallbackRef = React160.useCallback((node) => {
    if (node) {
      node.addEventListener("mouseover", (e) => {
        if (canDispatchCustomEventRef.current) {
          canDispatchCustomEventRef.current = false;
          dispatchMenuEnterEvent(popoverRef.current, e);
          setThrottleTimeout(() => canDispatchCustomEventRef.current = true, 250);
        }
      });
    }
  }, [
    popoverRef,
    setThrottleTimeout
  ]);
  React160.useEffect(() => {
    () => clearThrottleTimeout();
  }, [
    clearThrottleTimeout
  ]);
  var _useMenuContext_unstable;
  const inline = (_useMenuContext_unstable = useMenuContext_unstable((context) => context.inline)) !== null && _useMenuContext_unstable !== void 0 ? _useMenuContext_unstable : false;
  const mountNode = useMenuContext_unstable((context) => context.mountNode);
  const rootProps = slot_exports.always(getIntrinsicElementProps("div", {
    role: "presentation",
    ...restoreFocusSourceAttributes,
    ...props,
    // FIXME:
    // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`
    // but since it would be a breaking change to fix it, we are casting ref to it's proper type
    ref: useMergedRefs(ref, popoverRef, mouseOverListenerCallbackRef)
  }), {
    elementType: "div"
  });
  const { onMouseEnter: onMouseEnterOriginal, onKeyDown: onKeyDownOriginal } = rootProps;
  rootProps.onMouseEnter = useEventCallback((event) => {
    if (openOnHover || isSubmenu) {
      setOpen(event, {
        open: true,
        keyboard: false,
        type: "menuPopoverMouseEnter",
        event
      });
    }
    onMouseEnterOriginal === null || onMouseEnterOriginal === void 0 ? void 0 : onMouseEnterOriginal(event);
  });
  rootProps.onKeyDown = useEventCallback((event) => {
    const key = event.key;
    if (key === Escape || isSubmenu && key === CloseArrowKey) {
      var _popoverRef_current;
      if (open && ((_popoverRef_current = popoverRef.current) === null || _popoverRef_current === void 0 ? void 0 : _popoverRef_current.contains(event.target)) && !event.isDefaultPrevented()) {
        setOpen(event, {
          open: false,
          keyboard: true,
          type: "menuPopoverKeyDown",
          event
        });
        event.preventDefault();
      }
    }
    if (key === Tab) {
      setOpen(event, {
        open: false,
        keyboard: true,
        type: "menuPopoverKeyDown",
        event
      });
      if (!isSubmenu) {
        var _triggerRef_current;
        (_triggerRef_current = triggerRef.current) === null || _triggerRef_current === void 0 ? void 0 : _triggerRef_current.focus();
      }
    }
    onKeyDownOriginal === null || onKeyDownOriginal === void 0 ? void 0 : onKeyDownOriginal(event);
  });
  return {
    inline,
    mountNode,
    components: {
      root: "div"
    },
    root: rootProps
  };
};

// node_modules/@fluentui/react-menu/lib/components/MenuPopover/useMenuPopoverStyles.styles.js
var menuPopoverClassNames = {
  root: "fui-MenuPopover"
};
var useStyles22 = __styles2({
  root: {
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "ft85np5",
    De3pzq: "fxugw4r",
    sj55zd: "f19n0e5",
    B7ck84d: "f1ewtqcl",
    Bf4jedk: "fl8fusi",
    B2u0y6b: "f1kaai3v",
    B68tc82: "f1p9o1ba",
    a9b677: "f1ahpp82",
    E5pizo: "f1hg901r",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "fd3pd8h",
    Bgfg5da: 0,
    B9xav0g: 0,
    oivjwe: 0,
    Bn0qgzm: 0,
    B4g9neb: 0,
    zhjwy3: 0,
    wvpqe5: 0,
    ibv6hh: 0,
    u1mtju: 0,
    h3c5rm: 0,
    vrafjx: 0,
    Bekrc4i: 0,
    i8vvqc: 0,
    g2u3we: 0,
    icvyot: 0,
    B4j52fo: 0,
    irswps: "f9ggezi",
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "figsok6",
    Bg96gwp: "f1i3iumi",
    B93otf3: "f18k4bn6",
    vin17d: "fo1kyvf",
    Ezkn3b: "fetxo7e",
    nyiy2g: "f8x1vz1",
    swvrvq: "f8g0anz",
    Bkovbt3: "fezwn9i",
    hgjdhn: "fz5efge",
    fsy9dk: "f1ydixl4",
    B3ogreh: "f8dgqj5",
    jv49x5: "fnyfnr8",
    Bk7o48c: "fgw77r4",
    Bv12yb3: "ftje0s4",
    z0t1cu: "fi19xcv",
    Bks05zx: "f1mzajhk",
    Bvtglag: "fjp4h9y"
  }
}, {
  d: [[".ft85np5{border-radius:var(--borderRadiusMedium);}", {
    p: -1
  }], ".fxugw4r{background-color:var(--colorNeutralBackground1);}", ".f19n0e5{color:var(--colorNeutralForeground1);}", ".f1ewtqcl{box-sizing:border-box;}", ".fl8fusi{min-width:138px;}", ".f1kaai3v{max-width:300px;}", ".f1p9o1ba{overflow-x:hidden;}", ".f1ahpp82{width:max-content;}", ".f1hg901r{box-shadow:var(--shadow16);}", [".fd3pd8h{padding:4px;}", {
    p: -1
  }], [".f9ggezi{border:1px solid var(--colorTransparentStroke);}", {
    p: -2
  }], ".fk6fouc{font-family:var(--fontFamilyBase);}", ".fkhj508{font-size:var(--fontSizeBase300);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}", ".f18k4bn6{animation-composition:accumulate;}", ".fo1kyvf{animation-duration:var(--durationSlower);}", ".fetxo7e{animation-timing-function:var(--curveDecelerateMid);}", ".f8x1vz1{--fui-positioning-slide-distance-x:0px;}", ".f8g0anz{--fui-positioning-slide-distance-y:10px;}", ".fezwn9i[data-popper-placement^=right]{--fui-positioning-slide-distance-x:-10px;}", ".fz5efge[data-popper-placement^=right]{--fui-positioning-slide-distance-y:0px;}", ".f1ydixl4[data-popper-placement^=bottom]{--fui-positioning-slide-distance-x:0px;}", ".f8dgqj5[data-popper-placement^=bottom]{--fui-positioning-slide-distance-y:-10px;}", ".fnyfnr8[data-popper-placement^=left]{--fui-positioning-slide-distance-x:10px;}", ".fgw77r4[data-popper-placement^=left]{--fui-positioning-slide-distance-y:0px;}", ".ftje0s4{animation-name:f5j8bii,f79suad;}"],
  k: ["@keyframes f5j8bii{from{opacity:0;}to{opacity:1;}}", "@keyframes f79suad{from{transform:translate(var(--fui-positioning-slide-distance-x), var(--fui-positioning-slide-distance-y));}}"],
  m: [["@media (prefers-reduced-motion){.fi19xcv[data-popper-placement]{animation-duration:1ms;}}", {
    m: "(prefers-reduced-motion)"
  }], ["@media (prefers-reduced-motion){.f1mzajhk[data-popper-placement]{animation-name:f5j8bii;}}", {
    m: "(prefers-reduced-motion)"
  }]],
  t: ["@supports not (animation-composition: accumulate){.fjp4h9y[data-popper-placement]{animation-name:f5j8bii;}}"]
});
var useMenuPopoverStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles22();
  state.root.className = mergeClasses(menuPopoverClassNames.root, styles.root, state.root.className);
  return state;
};

// node_modules/@fluentui/react-menu/lib/components/MenuPopover/renderMenuPopover.js
var renderMenuPopover_unstable = (state) => {
  assertSlots(state);
  if (state.inline) {
    return jsx(state.root, {});
  }
  return jsx(Portal, {
    mountNode: state.mountNode,
    children: jsx(state.root, {})
  });
};

// node_modules/@fluentui/react-menu/lib/components/MenuPopover/MenuPopover.js
var MenuPopover = React161.forwardRef((props, ref) => {
  const state = useMenuPopover_unstable(props, ref);
  useMenuPopoverStyles_unstable(state);
  useCustomStyleHook("useMenuPopoverStyles_unstable")(state);
  return renderMenuPopover_unstable(state);
});
MenuPopover.displayName = "MenuPopover";

// node_modules/@fluentui/react-menu/lib/components/MenuSplitGroup/MenuSplitGroup.js
var React163 = __toESM(require_react());

// node_modules/@fluentui/react-menu/lib/components/MenuSplitGroup/useMenuSplitGroup.js
var React162 = __toESM(require_react());
var useMenuSplitGroup_unstable = (props, ref) => {
  const innerRef = React162.useRef();
  const { dir, targetDocument } = useFluent();
  const nextArrowKey = getRTLSafeKey(ArrowRight, dir);
  const prevArrowKey = getRTLSafeKey(ArrowLeft, dir);
  const { findNextFocusable, findPrevFocusable } = useFocusFinders();
  const onKeyDown = React162.useCallback((e) => {
    var _innerRef_current;
    const activeElement = targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.activeElement;
    if (!activeElement) {
      return;
    }
    if (!((_innerRef_current = innerRef.current) === null || _innerRef_current === void 0 ? void 0 : _innerRef_current.contains(activeElement))) {
      return;
    }
    if (e.key === nextArrowKey) {
      const next = findNextFocusable(activeElement, {
        container: innerRef.current
      });
      next === null || next === void 0 ? void 0 : next.focus();
    }
    if (e.key === prevArrowKey) {
      const prev = findPrevFocusable(activeElement, {
        container: innerRef.current
      });
      prev === null || prev === void 0 ? void 0 : prev.focus();
    }
  }, [
    findNextFocusable,
    findPrevFocusable,
    targetDocument,
    nextArrowKey,
    prevArrowKey
  ]);
  return {
    components: {
      root: "div"
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      role: "group",
      // FIXME:
      // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`
      // but since it would be a breaking change to fix it, we are casting ref to it's proper type
      ref: useMergedRefs(ref, innerRef),
      onKeyDown,
      ...props
    }), {
      elementType: "div"
    })
  };
};

// node_modules/@fluentui/react-menu/lib/components/MenuSplitGroup/renderMenuSplitGroup.js
var renderMenuSplitGroup_unstable = (state) => {
  assertSlots(state);
  return jsx(state.root, {});
};

// node_modules/@fluentui/react-menu/lib/components/MenuSplitGroup/useMenuSplitGroupStyles.styles.js
var menuSplitGroupClassNames = {
  root: "fui-MenuSplitGroup"
};
var useStyles23 = __styles2({
  root: {
    mc9l5x: "f22iagw",
    oe75ve: "f1mvlx34",
    Bu15iap: ["fsdyxoe", "fuk6rhi"],
    B71tm0z: ["fn8z6db", "f1be8c1t"],
    Gjs4sj: ["f1vtn0lh", "f8hq2kl"],
    foni4y: "f7j48hl",
    Ie9k5m: "f13du8c1",
    f30fub: "fe64lw1",
    Jberyy: "f92oj5h"
  }
}, {
  d: [".f22iagw{display:flex;}", ".f1mvlx34>.fui-MenuItem:nth-of-type(1){flex-grow:1;}", ".fsdyxoe>.fui-MenuItem:nth-of-type(2){border-top-left-radius:0;}", ".fuk6rhi>.fui-MenuItem:nth-of-type(2){border-top-right-radius:0;}", ".fn8z6db>.fui-MenuItem:nth-of-type(2){border-bottom-left-radius:0;}", ".f1be8c1t>.fui-MenuItem:nth-of-type(2){border-bottom-right-radius:0;}", ".f1vtn0lh>.fui-MenuItem:nth-of-type(2){padding-left:0;}", ".f8hq2kl>.fui-MenuItem:nth-of-type(2){padding-right:0;}", '.f7j48hl>.fui-MenuItem:nth-of-type(2)::before{content:"";}', ".f13du8c1>.fui-MenuItem:nth-of-type(2)::before{width:var(--strokeWidthThin);}", ".fe64lw1>.fui-MenuItem:nth-of-type(2)::before{height:20px;}", ".f92oj5h>.fui-MenuItem:nth-of-type(2)::before{background-color:var(--colorNeutralStroke1);}"]
});
var useMenuSplitGroupStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles23();
  state.root.className = mergeClasses(menuSplitGroupClassNames.root, styles.root, state.root.className);
  return state;
};

// node_modules/@fluentui/react-menu/lib/components/MenuSplitGroup/MenuSplitGroup.js
var MenuSplitGroup = React163.forwardRef((props, ref) => {
  const state = useMenuSplitGroup_unstable(props, ref);
  useMenuSplitGroupStyles_unstable(state);
  useCustomStyleHook("useMenuSplitGroupStyles_unstable")(state);
  return renderMenuSplitGroup_unstable(state);
});
MenuSplitGroup.displayName = "MenuSplitGroup";

// node_modules/@fluentui/react-menu/lib/components/MenuTrigger/MenuTrigger.js
var React166 = __toESM(require_react());

// node_modules/@fluentui/react-menu/lib/components/MenuTrigger/useMenuTrigger.js
var React164 = __toESM(require_react());
var useMenuTrigger_unstable = (props) => {
  const { children: children2, disableButtonEnhancement = false } = props;
  const triggerRef = useMenuContext_unstable((context) => context.triggerRef);
  const menuPopoverRef = useMenuContext_unstable((context) => context.menuPopoverRef);
  const setOpen = useMenuContext_unstable((context) => context.setOpen);
  const open = useMenuContext_unstable((context) => context.open);
  const triggerId = useMenuContext_unstable((context) => context.triggerId);
  const openOnHover = useMenuContext_unstable((context) => context.openOnHover);
  const openOnContext = useMenuContext_unstable((context) => context.openOnContext);
  const isSubmenu = useIsSubmenu();
  const { findFirstFocusable } = useFocusFinders();
  const focusFirst = React164.useCallback(() => {
    const firstFocusable = findFirstFocusable(menuPopoverRef.current);
    firstFocusable === null || firstFocusable === void 0 ? void 0 : firstFocusable.focus();
  }, [
    findFirstFocusable,
    menuPopoverRef
  ]);
  const openedWithKeyboardRef = React164.useRef(false);
  const hasMouseMoved = React164.useRef(false);
  const { dir } = useFluent();
  const OpenArrowKey = dir === "ltr" ? ArrowRight : ArrowLeft;
  const child = getTriggerChild(children2);
  const onContextMenu = (event) => {
    if (isTargetDisabled(event) || event.isDefaultPrevented()) {
      return;
    }
    if (openOnContext) {
      event.preventDefault();
      setOpen(event, {
        open: true,
        keyboard: false,
        type: "menuTriggerContextMenu",
        event
      });
    }
  };
  const onClick = (event) => {
    if (isTargetDisabled(event)) {
      return;
    }
    if (!openOnContext) {
      setOpen(event, {
        open: !open,
        keyboard: openedWithKeyboardRef.current,
        type: "menuTriggerClick",
        event
      });
      openedWithKeyboardRef.current = false;
    }
  };
  const onKeyDown = (event) => {
    if (isTargetDisabled(event)) {
      return;
    }
    const key = event.key;
    if (!openOnContext && (isSubmenu && key === OpenArrowKey || !isSubmenu && key === ArrowDown)) {
      setOpen(event, {
        open: true,
        keyboard: true,
        type: "menuTriggerKeyDown",
        event
      });
    }
    if (key === Escape && !isSubmenu) {
      setOpen(event, {
        open: false,
        keyboard: true,
        type: "menuTriggerKeyDown",
        event
      });
    }
    if (open && key === OpenArrowKey && isSubmenu) {
      focusFirst();
    }
  };
  const onMouseEnter = (event) => {
    if (isTargetDisabled(event)) {
      return;
    }
    if (openOnHover && hasMouseMoved.current) {
      setOpen(event, {
        open: true,
        keyboard: false,
        type: "menuTriggerMouseEnter",
        event
      });
    }
  };
  const onMouseMove = (event) => {
    if (isTargetDisabled(event)) {
      return;
    }
    if (openOnHover && !hasMouseMoved.current) {
      setOpen(event, {
        open: true,
        keyboard: false,
        type: "menuTriggerMouseMove",
        event
      });
      hasMouseMoved.current = true;
    }
  };
  const onMouseLeave = (event) => {
    if (isTargetDisabled(event)) {
      return;
    }
    if (openOnHover) {
      setOpen(event, {
        open: false,
        keyboard: false,
        type: "menuTriggerMouseLeave",
        event
      });
    }
  };
  const contextMenuProps = {
    id: triggerId,
    ...child === null || child === void 0 ? void 0 : child.props,
    ref: useMergedRefs(triggerRef, child === null || child === void 0 ? void 0 : child.ref),
    onMouseEnter: useEventCallback(mergeCallbacks(child === null || child === void 0 ? void 0 : child.props.onMouseEnter, onMouseEnter)),
    onMouseLeave: useEventCallback(mergeCallbacks(child === null || child === void 0 ? void 0 : child.props.onMouseLeave, onMouseLeave)),
    onContextMenu: useEventCallback(mergeCallbacks(child === null || child === void 0 ? void 0 : child.props.onContextMenu, onContextMenu)),
    onMouseMove: useEventCallback(mergeCallbacks(child === null || child === void 0 ? void 0 : child.props.onMouseMove, onMouseMove))
  };
  const triggerChildProps = {
    "aria-haspopup": "menu",
    "aria-expanded": !open && !isSubmenu ? void 0 : open,
    ...contextMenuProps,
    onClick: useEventCallback(mergeCallbacks(child === null || child === void 0 ? void 0 : child.props.onClick, onClick)),
    onKeyDown: useEventCallback(mergeCallbacks(child === null || child === void 0 ? void 0 : child.props.onKeyDown, onKeyDown))
  };
  const ariaButtonTriggerChildProps = useARIAButtonProps((child === null || child === void 0 ? void 0 : child.type) === "button" || (child === null || child === void 0 ? void 0 : child.type) === "a" ? child.type : "div", triggerChildProps);
  return {
    isSubmenu,
    children: applyTriggerPropsToChildren(children2, openOnContext ? contextMenuProps : disableButtonEnhancement ? triggerChildProps : ariaButtonTriggerChildProps)
  };
};
var isTargetDisabled = (event) => {
  const isDisabled = (el) => el.hasAttribute("disabled") || el.hasAttribute("aria-disabled") && el.getAttribute("aria-disabled") === "true";
  if (isHTMLElement(event.target) && isDisabled(event.target)) {
    return true;
  }
  return isHTMLElement(event.currentTarget) && isDisabled(event.currentTarget);
};

// node_modules/@fluentui/react-menu/lib/components/MenuTrigger/renderMenuTrigger.js
var React165 = __toESM(require_react());
var renderMenuTrigger_unstable = (state) => {
  return React165.createElement(MenuTriggerContextProvider, {
    value: state.isSubmenu
  }, state.children);
};

// node_modules/@fluentui/react-menu/lib/components/MenuTrigger/MenuTrigger.js
var MenuTrigger = (props) => {
  const state = useMenuTrigger_unstable(props);
  return renderMenuTrigger_unstable(state);
};
MenuTrigger.displayName = "MenuTrigger";
MenuTrigger.isFluentTriggerComponent = true;

// node_modules/@fluentui/react-menu/lib/components/MenuTrigger/MenuTrigger.types.js
var React167 = __toESM(require_react());

// node_modules/@fluentui/react-menu/lib/components/MenuItemLink/MenuItemLink.js
var React169 = __toESM(require_react());

// node_modules/@fluentui/react-menu/lib/components/MenuItemLink/useMenuItemLink.js
var React168 = __toESM(require_react());
var useMenuItemLink_unstable = (props, ref) => {
  const baseState = useMenuItem_unstable(props, null);
  const _props = {
    ...props,
    ...baseState.root,
    ref,
    tabIndex: props.tabIndex
  };
  return {
    ...baseState,
    components: {
      ...baseState.components,
      root: "a"
    },
    root: slot_exports.always(getIntrinsicElementProps("a", {
      role: "menuitem",
      ..._props
    }), {
      elementType: "a"
    })
  };
};

// node_modules/@fluentui/react-menu/lib/components/MenuItemLink/renderMenuItemLink.js
var renderMenuItemLink_unstable = (state) => {
  assertSlots(state);
  return jsxs(state.root, {
    children: [
      state.checkmark && jsx(state.checkmark, {}),
      state.icon && jsx(state.icon, {}),
      state.content && jsx(state.content, {}),
      state.secondaryContent && jsx(state.secondaryContent, {})
    ]
  });
};

// node_modules/@fluentui/react-menu/lib/components/MenuItemLink/useMenuItemLinkStyles.styles.js
var menuItemLinkClassNames = {
  root: "fui-MenuItemLink",
  icon: "fui-MenuItemLink__icon",
  checkmark: "fui-MenuItemLink__checkmark",
  content: "fui-MenuItemLink__content",
  secondaryContent: "fui-MenuItemLink__secondaryContent"
};
var useStyles24 = __styles2({
  resetLink: {
    w71qe1: "f1iuv45f",
    Bkioxbp: "f9pkogg",
    I8pafv: "foe20s3",
    dvvfom: "f1kn6jj"
  }
}, {
  d: [".f1iuv45f{text-decoration-line:none;}", ".f9pkogg{text-decoration-thickness:initial;}", ".foe20s3{text-decoration-style:initial;}", ".f1kn6jj{text-decoration-color:initial;}"]
});
var useMenuItemLinkStyles_unstable = (state) => {
  "use no memo";
  useMenuItemStyles_unstable(state);
  const styles = useStyles24();
  state.root.className = mergeClasses(menuItemLinkClassNames.root, styles.resetLink, state.root.className);
  if (state.icon) {
    state.icon.className = mergeClasses(menuItemLinkClassNames.icon, state.icon.className);
  }
  if (state.content) {
    state.content.className = mergeClasses(menuItemLinkClassNames.content, state.content.className);
  }
  if (state.secondaryContent) {
    state.secondaryContent.className = mergeClasses(menuItemLinkClassNames.secondaryContent, state.secondaryContent.className);
  }
  if (state.checkmark) {
    state.checkmark.className = mergeClasses(menuItemLinkClassNames.checkmark, state.checkmark.className);
  }
  return state;
};

// node_modules/@fluentui/react-menu/lib/components/MenuItemLink/MenuItemLink.js
var MenuItemLink = React169.forwardRef((props, ref) => {
  const state = useMenuItemLink_unstable(props, ref);
  useMenuItemLinkStyles_unstable(state);
  useCustomStyleHook("useMenuItemLinkStyles_unstable")(state);
  return renderMenuItemLink_unstable(state);
});
MenuItemLink.displayName = "MenuItemLink";

// node_modules/@fluentui/react-menu/lib/components/MenuItemSwitch/MenuItemSwitch.js
var React171 = __toESM(require_react());

// node_modules/@fluentui/react-menu/lib/components/MenuItemSwitch/useMenuItemSwitch.js
var React170 = __toESM(require_react());

// node_modules/@fluentui/react-menu/lib/components/MenuItemSwitch/useMenuItemSwitchStyles.styles.js
var menuItemSwitchClassNames = {
  root: "fui-MenuItemSwitch",
  icon: "fui-MenuItemSwitch__icon",
  content: "fui-MenuItemSwitch__content",
  secondaryContent: "fui-MenuItemSwitch__secondaryContent",
  switchIndicator: "fui-MenuItemSwitch__switchIndicator"
};
var circleFilledClassName = "fui-MenuItemSwitch__switchIndicator__circleFilled";
var spaceBetweenThumbAndTrack = 2;
var trackHeight = 20;
var thumbSize = trackHeight - spaceBetweenThumbAndTrack;
var useSwitchIndicatorBaseClassName = __resetStyles("r1x31n8g", "rsmcm5v", {
  r: [".r1x31n8g{border-radius:var(--borderRadiusCircular);border:var(--strokeWidthThin) solid var(--colorNeutralStrokeAccessible);line-height:0;box-sizing:border-box;fill:currentColor;flex-shrink:0;font-size:18px;height:20px;transition-duration:var(--durationNormal);transition-timing-function:var(--curveEasyEase);transition-property:background,border,color;width:40px;margin-right:var(--spacingHorizontalXS);color:var(--colorNeutralStrokeAccessible);}", ".r1x31n8g:hover{color:var(--colorNeutralStrokeAccessibleHover);border-color:var(--colorNeutralStrokeAccessibleHover);}", ".r1x31n8g:hover:active{color:var(--colorNeutralStrokeAccessiblePressed);border-color:var(--colorNeutralStrokeAccessiblePressed);}", ".r1x31n8g .fui-MenuItemSwitch__switchIndicator__circleFilled{transition-duration:var(--durationNormal);transition-timing-function:var(--curveEasyEase);transition-property:transform;}", ".rsmcm5v{border-radius:var(--borderRadiusCircular);border:var(--strokeWidthThin) solid var(--colorNeutralStrokeAccessible);line-height:0;box-sizing:border-box;fill:currentColor;flex-shrink:0;font-size:18px;height:20px;transition-duration:var(--durationNormal);transition-timing-function:var(--curveEasyEase);transition-property:background,border,color;width:40px;margin-left:var(--spacingHorizontalXS);color:var(--colorNeutralStrokeAccessible);}", ".rsmcm5v:hover{color:var(--colorNeutralStrokeAccessibleHover);border-color:var(--colorNeutralStrokeAccessibleHover);}", ".rsmcm5v:hover:active{color:var(--colorNeutralStrokeAccessiblePressed);border-color:var(--colorNeutralStrokeAccessiblePressed);}", ".rsmcm5v .fui-MenuItemSwitch__switchIndicator__circleFilled{transition-duration:var(--durationNormal);transition-timing-function:var(--curveEasyEase);transition-property:transform;}"],
  s: ["@media screen and (prefers-reduced-motion: reduce){.r1x31n8g{transition-duration:0.01ms;}}", "@media screen and (prefers-reduced-motion: reduce){.r1x31n8g .fui-MenuItemSwitch__switchIndicator__circleFilled{transition-duration:0.01ms;}}", "@media screen and (prefers-reduced-motion: reduce){.rsmcm5v{transition-duration:0.01ms;}}", "@media screen and (prefers-reduced-motion: reduce){.rsmcm5v .fui-MenuItemSwitch__switchIndicator__circleFilled{transition-duration:0.01ms;}}"]
});
var useSwitchIndicatorStyles = __styles2({
  checked: {
    G4r02d: ["fdca5i2", "fk0rr1z"],
    De3pzq: "ftywsgz",
    sj55zd: "fqpbvvt",
    g2u3we: "fghlq4f",
    h3c5rm: ["f1gn591s", "fjscplz"],
    B9xav0g: "fb073pr",
    zhjwy3: ["fjscplz", "f1gn591s"],
    Bi91k9c: "fz46y8r",
    Jwef8y: "f1kjrvvj",
    Bgoe8wy: "fpa59ij",
    Bwzppfd: ["f1rhln42", "f1l1ogpg"],
    oetu4i: "fz67qlh",
    gg5e9n: ["f1l1ogpg", "f1rhln42"],
    B2d53fq: "frlnr8d",
    iro3zm: "fle2s0s",
    b661bw: "f1j8ziw4",
    Bk6r4ia: ["f1xzu9i0", "f1jlpvxk"],
    B9zn80p: "f1i1ccxp",
    Bpld233: ["f1jlpvxk", "f1xzu9i0"]
  }
}, {
  d: [".fdca5i2 .fui-MenuItemSwitch__switchIndicator__circleFilled{transform:translateX(20px);}", ".fk0rr1z .fui-MenuItemSwitch__switchIndicator__circleFilled{transform:translateX(-20px);}", ".ftywsgz{background-color:var(--colorCompoundBrandBackground);}", ".fqpbvvt{color:var(--colorNeutralForegroundInverted);}", ".fghlq4f{border-top-color:var(--colorTransparentStroke);}", ".f1gn591s{border-right-color:var(--colorTransparentStroke);}", ".fjscplz{border-left-color:var(--colorTransparentStroke);}", ".fb073pr{border-bottom-color:var(--colorTransparentStroke);}"],
  h: [".fz46y8r:hover{color:var(--colorNeutralForegroundInverted);}", ".f1kjrvvj:hover{background-color:var(--colorCompoundBrandBackgroundHover);}", ".fpa59ij:hover{border-top-color:var(--colorTransparentStrokeInteractive);}", ".f1rhln42:hover{border-right-color:var(--colorTransparentStrokeInteractive);}", ".f1l1ogpg:hover{border-left-color:var(--colorTransparentStrokeInteractive);}", ".fz67qlh:hover{border-bottom-color:var(--colorTransparentStrokeInteractive);}", ".frlnr8d:hover:active{color:var(--colorNeutralForegroundInverted);}", ".fle2s0s:hover:active{background-color:var(--colorCompoundBrandBackgroundPressed);}", ".f1j8ziw4:hover:active{border-top-color:var(--colorTransparentStrokeInteractive);}", ".f1xzu9i0:hover:active{border-right-color:var(--colorTransparentStrokeInteractive);}", ".f1jlpvxk:hover:active{border-left-color:var(--colorTransparentStrokeInteractive);}", ".f1i1ccxp:hover:active{border-bottom-color:var(--colorTransparentStrokeInteractive);}"]
});
var useMenuItemSwitchStyles_unstable = (state) => {
  "use no memo";
  const {
    checked
  } = state;
  const switchIndicatorStyles = useSwitchIndicatorStyles();
  const switchIndicatorBaseStyles = useSwitchIndicatorBaseClassName();
  state.root.className = mergeClasses(menuItemSwitchClassNames.root, state.root.className);
  if (state.content) {
    state.content.className = mergeClasses(menuItemSwitchClassNames.content, state.content.className);
  }
  if (state.secondaryContent) {
    state.secondaryContent.className = mergeClasses(menuItemSwitchClassNames.secondaryContent, state.secondaryContent.className);
  }
  if (state.icon) {
    state.icon.className = mergeClasses(menuItemSwitchClassNames.icon, state.icon.className);
  }
  if (state.switchIndicator) {
    state.switchIndicator.className = mergeClasses(menuItemSwitchClassNames.switchIndicator, switchIndicatorBaseStyles, checked && switchIndicatorStyles.checked, state.switchIndicator.className);
  }
  useMenuItemStyles_unstable({
    ...state,
    components: {
      ...state.components,
      checkmark: "span",
      submenuIndicator: "span"
    },
    checkmark: void 0,
    submenuIndicator: void 0,
    hasSubmenu: false,
    persistOnClick: true
  });
  return state;
};

// node_modules/@fluentui/react-menu/lib/components/MenuItemSwitch/useMenuItemSwitch.js
var useMenuItemSwitch_unstable = (props, ref) => {
  const baseState = useMenuItemCheckbox_unstable(props, ref);
  return {
    ...baseState,
    switchIndicator: slot_exports.optional(props.switchIndicator, {
      renderByDefault: true,
      elementType: "span",
      defaultProps: {
        children: React170.createElement(CircleFilled, {
          className: circleFilledClassName
        })
      }
    }),
    components: {
      ...baseState.components,
      switchIndicator: "span"
    }
  };
};

// node_modules/@fluentui/react-menu/lib/components/MenuItemSwitch/renderMenuItemSwitch.js
var renderMenuItemSwitch_unstable = (state) => {
  assertSlots(state);
  return jsxs(state.root, {
    children: [
      state.icon && jsx(state.icon, {}),
      state.content && jsx(state.content, {}),
      state.secondaryContent && jsx(state.secondaryContent, {}),
      state.switchIndicator && jsx(state.switchIndicator, {})
    ]
  });
};

// node_modules/@fluentui/react-menu/lib/components/MenuItemSwitch/MenuItemSwitch.js
var MenuItemSwitch = React171.forwardRef((props, ref) => {
  const state = useMenuItemSwitch_unstable(props, ref);
  useMenuItemSwitchStyles_unstable(state);
  useCustomStyleHook("useMenuItemSwitchStyles_unstable")(state);
  return renderMenuItemSwitch_unstable(state);
});
MenuItemSwitch.displayName = "MenuItemSwitch";

// node_modules/@fluentui/react-persona/lib/components/Persona/Persona.js
var React173 = __toESM(require_react());

// node_modules/@fluentui/react-persona/lib/components/Persona/renderPersona.js
var renderPersona_unstable = (state) => {
  const { presenceOnly, textPosition } = state;
  assertSlots(state);
  const coin = presenceOnly ? state.presence && jsx(state.presence, {}) : state.avatar && jsx(state.avatar, {});
  return jsxs(state.root, {
    children: [
      (textPosition === "after" || textPosition === "below") && coin,
      state.primaryText && jsx(state.primaryText, {}),
      state.secondaryText && jsx(state.secondaryText, {}),
      state.tertiaryText && jsx(state.tertiaryText, {}),
      state.quaternaryText && jsx(state.quaternaryText, {}),
      textPosition === "before" && coin
    ]
  });
};

// node_modules/@fluentui/react-persona/lib/components/Persona/usePersona.js
var React172 = __toESM(require_react());
var usePersona_unstable = (props, ref) => {
  const { name, presenceOnly = false, size = "medium", textAlignment = "start", textPosition = "after" } = props;
  const primaryText = slot_exports.optional(props.primaryText, {
    renderByDefault: true,
    defaultProps: {
      children: name
    },
    elementType: "span"
  });
  const secondaryText = slot_exports.optional(props.secondaryText, {
    elementType: "span"
  });
  const tertiaryText = slot_exports.optional(props.tertiaryText, {
    elementType: "span"
  });
  const quaternaryText = slot_exports.optional(props.quaternaryText, {
    elementType: "span"
  });
  const numTextLines = [
    primaryText,
    secondaryText,
    tertiaryText,
    quaternaryText
  ].filter(Boolean).length;
  return {
    numTextLines,
    presenceOnly,
    size,
    textAlignment,
    textPosition,
    components: {
      root: "div",
      avatar: Avatar,
      presence: PresenceBadge,
      primaryText: "span",
      secondaryText: "span",
      tertiaryText: "span",
      quaternaryText: "span"
    },
    root: slot_exports.always(getIntrinsicElementProps(
      "div",
      {
        ...props,
        // FIXME:
        // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`
        // but since it would be a breaking change to fix it, we are casting ref to it's proper type
        ref
      },
      /* excludedPropNames */
      [
        "name"
      ]
    ), {
      elementType: "div"
    }),
    avatar: !presenceOnly ? slot_exports.optional(props.avatar, {
      renderByDefault: true,
      defaultProps: {
        name,
        badge: props.presence,
        size: avatarSizes[size]
      },
      elementType: Avatar
    }) : void 0,
    presence: presenceOnly ? slot_exports.optional(props.presence, {
      defaultProps: {
        size: presenceSizes[size]
      },
      elementType: PresenceBadge
    }) : void 0,
    primaryText,
    secondaryText,
    tertiaryText,
    quaternaryText
  };
};
var presenceSizes = {
  "extra-small": "tiny",
  small: "extra-small",
  medium: "small",
  large: "medium",
  "extra-large": "large",
  huge: "large"
};
var avatarSizes = {
  "extra-small": 20,
  small: 28,
  medium: 32,
  large: 36,
  "extra-large": 40,
  huge: 56
};

// node_modules/@fluentui/react-persona/lib/components/Persona/usePersonaStyles.styles.js
var personaClassNames = {
  root: "fui-Persona",
  avatar: "fui-Persona__avatar",
  presence: "fui-Persona__presence",
  primaryText: "fui-Persona__primaryText",
  secondaryText: "fui-Persona__secondaryText",
  tertiaryText: "fui-Persona__tertiaryText",
  quaternaryText: "fui-Persona__quaternaryText"
};
var useRootClassName4 = __resetStyles("rlroi9i", null, [".rlroi9i{display:inline-grid;grid-auto-rows:max-content;grid-auto-flow:column;justify-items:start;grid-template-columns:max-content [middle] auto;}"]);
var useStyles25 = __styles2({
  beforeAfterCenter: {
    wkccdc: "f1iantul"
  },
  after: {},
  before: {
    B7hvi0a: "f1tll2w5",
    Budl1dq: "ffvkwdr"
  },
  below: {
    Bxotwcr: "f1nkeedh",
    B7hvi0a: "f1oiokrs",
    Budl1dq: "f1emgwh2"
  },
  media: {
    Ijaq50: "f1hek2iy"
  },
  mediaBeforeAfterCenter: {
    Ijaq50: "fa4dipu"
  },
  start: {
    qb2dma: "f9h729m"
  },
  center: {
    qb2dma: "f7nlbp4"
  },
  afterAlignToPrimary: {
    qb2dma: "f7nlbp4",
    Ijaq50: "f1rnkkuc",
    Bw0ie65: "f1warjpf"
  },
  beforeAlignToPrimary: {
    qb2dma: "f7nlbp4",
    Ijaq50: "f1rnkkuc",
    Br312pm: "fwu52yu"
  },
  secondLineSpacing: {
    B6of3ja: "f1ryq6si"
  },
  primary: {
    Ijaq50: "f1q3ipgb"
  },
  secondary: {
    Ijaq50: "f3drtdk"
  },
  tertiary: {
    Ijaq50: "fa1o6s1"
  },
  quaternary: {
    Ijaq50: "f1tuwaia"
  }
}, {
  d: [".f1iantul{grid-template-rows:1fr [primary] max-content [secondary] max-content [tertiary] max-content [quaternary] max-content 1fr;}", ".f1tll2w5{justify-items:end;}", ".ffvkwdr{grid-template-columns:auto [middle] max-content;}", ".f1nkeedh{grid-auto-flow:unset;}", ".f1oiokrs{justify-items:center;}", ".f1emgwh2{grid-template-columns:unset;}", ".f1hek2iy{grid-row-start:span 5;}", ".fa4dipu{grid-row-start:span 6;}", ".f9h729m{align-self:start;}", ".f7nlbp4{align-self:center;}", ".f1rnkkuc{grid-row-start:unset;}", ".f1warjpf{grid-column-end:middle;}", ".fwu52yu{grid-column-start:middle;}", ".f1ryq6si{margin-top:-2px;}", ".f1q3ipgb{grid-row-start:primary;}", ".f3drtdk{grid-row-start:secondary;}", ".fa1o6s1{grid-row-start:tertiary;}", ".f1tuwaia{grid-row-start:quaternary;}"]
});
var useAvatarSpacingStyles = __styles2({
  "extra-small": {
    Bs1gm4r: "f1e48tse"
  },
  small: {
    Bs1gm4r: "f18q9vkd"
  },
  medium: {
    Bs1gm4r: "f18q9vkd"
  },
  large: {
    Bs1gm4r: "fx34bi6"
  },
  "extra-large": {
    Bs1gm4r: "fx34bi6"
  },
  huge: {
    Bs1gm4r: "f1o96qtm"
  },
  after: {
    t21cq0: ["f103ycu4", "f1tao51"]
  },
  below: {
    jrapky: "fbo7acy"
  },
  before: {
    Frg6f3: ["f1tao51", "f103ycu4"]
  }
}, {
  d: [".f1e48tse{--fui-Persona__avatar--spacing:var(--spacingHorizontalSNudge);}", ".f18q9vkd{--fui-Persona__avatar--spacing:var(--spacingHorizontalS);}", ".fx34bi6{--fui-Persona__avatar--spacing:var(--spacingHorizontalMNudge);}", ".f1o96qtm{--fui-Persona__avatar--spacing:var(--spacingHorizontalM);}", ".f103ycu4{margin-right:var(--fui-Persona__avatar--spacing);}", ".f1tao51{margin-left:var(--fui-Persona__avatar--spacing);}", ".fbo7acy{margin-bottom:var(--fui-Persona__avatar--spacing);}"]
});
var usePresenceSpacingStyles = __styles2({
  small: {
    Bs1gm4r: "f1e48tse"
  }
}, {
  d: [".f1e48tse{--fui-Persona__avatar--spacing:var(--spacingHorizontalSNudge);}"]
});
var usePersonaStyles_unstable = (state) => {
  "use no memo";
  const {
    presenceOnly,
    size,
    textAlignment,
    textPosition
  } = state;
  const alignToPrimary = presenceOnly && textAlignment === "start" && size !== "extra-large" && size !== "huge";
  const alignBeforeAfterCenter = textPosition !== "below" && textAlignment === "center";
  const {
    primaryTextClassName,
    optionalTextClassName
  } = useTextClassNames(state, alignToPrimary);
  const rootClassName = useRootClassName4();
  const styles = useStyles25();
  const avatarSpacingStyles = useAvatarSpacingStyles();
  const presenceSpacingStyles = {
    ...avatarSpacingStyles,
    ...usePresenceSpacingStyles()
  };
  state.root.className = mergeClasses(personaClassNames.root, rootClassName, alignBeforeAfterCenter && styles.beforeAfterCenter, styles[textPosition], state.root.className);
  if (state.avatar) {
    state.avatar.className = mergeClasses(personaClassNames.avatar, textPosition !== "below" && styles.media, alignBeforeAfterCenter && styles.mediaBeforeAfterCenter, styles[textAlignment], avatarSpacingStyles[size], avatarSpacingStyles[textPosition], state.avatar.className);
  }
  if (state.presence) {
    state.presence.className = mergeClasses(personaClassNames.presence, textPosition !== "below" && styles.media, alignBeforeAfterCenter && styles.mediaBeforeAfterCenter, styles[textAlignment], presenceSpacingStyles[size], presenceSpacingStyles[textPosition], textPosition === "after" && alignToPrimary && styles.afterAlignToPrimary, textPosition === "before" && alignToPrimary && styles.beforeAlignToPrimary, state.presence.className);
  }
  if (state.primaryText) {
    state.primaryText.className = mergeClasses(personaClassNames.primaryText, alignBeforeAfterCenter && styles.primary, primaryTextClassName, state.primaryText.className);
  }
  if (state.secondaryText) {
    state.secondaryText.className = mergeClasses(personaClassNames.secondaryText, alignBeforeAfterCenter && styles.secondary, optionalTextClassName, styles.secondLineSpacing, state.secondaryText.className);
  }
  if (state.tertiaryText) {
    state.tertiaryText.className = mergeClasses(personaClassNames.tertiaryText, alignBeforeAfterCenter && styles.tertiary, optionalTextClassName, state.tertiaryText.className);
  }
  if (state.quaternaryText) {
    state.quaternaryText.className = mergeClasses(personaClassNames.quaternaryText, alignBeforeAfterCenter && styles.quaternary, optionalTextClassName, state.quaternaryText.className);
  }
  return state;
};
var usePrimaryTextBaseClassName = __resetStyles("rvj41k9", null, [".rvj41k9{display:block;color:var(--colorNeutralForeground1);font-family:var(--fontFamilyBase);font-size:var(--fontSizeBase300);font-weight:var(--fontWeightRegular);line-height:var(--lineHeightBase300);}"]);
var useOptionalTextBaseClassName = __resetStyles("rp1pf9e", null, [".rp1pf9e{display:block;color:var(--colorNeutralForeground2);font-family:var(--fontFamilyBase);font-size:var(--fontSizeBase200);font-weight:var(--fontWeightRegular);line-height:var(--lineHeightBase200);}"]);
var useTextStyles = __styles2({
  beforeAlignToPrimary: {
    Bw0ie65: "f1warjpf"
  },
  afterAlignToPrimary: {
    Br312pm: "fwu52yu"
  },
  body1: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "figsok6",
    Bg96gwp: "f1i3iumi"
  },
  caption1: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fy9rknc",
    Bhrd7zp: "figsok6",
    Bg96gwp: "fwrc4pm"
  },
  subtitle2: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fod5ikn",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "faaz57k"
  }
}, {
  d: [".f1warjpf{grid-column-end:middle;}", ".fwu52yu{grid-column-start:middle;}", ".fk6fouc{font-family:var(--fontFamilyBase);}", ".fkhj508{font-size:var(--fontSizeBase300);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}", ".fy9rknc{font-size:var(--fontSizeBase200);}", ".fwrc4pm{line-height:var(--lineHeightBase200);}", ".fod5ikn{font-size:var(--fontSizeBase400);}", ".fl43uef{font-weight:var(--fontWeightSemibold);}", ".faaz57k{line-height:var(--lineHeightBase400);}"]
});
var useTextClassNames = (state, alignToPrimary) => {
  const {
    presenceOnly,
    size,
    textPosition
  } = state;
  const primaryTextBaseClassName = usePrimaryTextBaseClassName();
  const optionalTextBaseClassName = useOptionalTextBaseClassName();
  const textStyles = useTextStyles();
  let primaryTextSize;
  let alignToPrimaryClassName;
  if (presenceOnly) {
    if (size === "extra-small") {
      primaryTextSize = state.numTextLines <= 1 && textStyles.caption1;
    } else if (size === "extra-large" || size === "huge") {
      primaryTextSize = textStyles.subtitle2;
    }
    if (alignToPrimary) {
      if (textPosition === "before") {
        alignToPrimaryClassName = textStyles.beforeAlignToPrimary;
      } else if (textPosition === "after") {
        alignToPrimaryClassName = textStyles.afterAlignToPrimary;
      }
    }
  } else {
    if (size === "huge") {
      primaryTextSize = textStyles.subtitle2;
    } else if (size === "extra-large") {
      primaryTextSize = textStyles.subtitle2;
    }
  }
  return {
    primaryTextClassName: mergeClasses(primaryTextBaseClassName, primaryTextSize, alignToPrimaryClassName),
    optionalTextClassName: mergeClasses(optionalTextBaseClassName, !presenceOnly && size === "huge" && textStyles.body1, alignToPrimaryClassName)
  };
};

// node_modules/@fluentui/react-persona/lib/components/Persona/Persona.js
var Persona = React173.forwardRef((props, ref) => {
  const state = usePersona_unstable(props, ref);
  usePersonaStyles_unstable(state);
  useCustomStyleHook("usePersonaStyles_unstable")(state);
  return renderPersona_unstable(state);
});
Persona.displayName = "Persona";

// node_modules/@fluentui/react-radio/lib/components/RadioGroup/RadioGroup.js
var React177 = __toESM(require_react());

// node_modules/@fluentui/react-radio/lib/contexts/RadioGroupContext.js
var React174 = __toESM(require_react());
var RadioGroupContext = React174.createContext(void 0);
var radioGroupContextDefaultValue = {};
var RadioGroupProvider = RadioGroupContext.Provider;
var useRadioGroupContextValue_unstable = () => React174.useContext(RadioGroupContext) || radioGroupContextDefaultValue;
var useRadioGroupContext_unstable = (selector) => selector(useRadioGroupContextValue_unstable());

// node_modules/@fluentui/react-radio/lib/components/RadioGroup/renderRadioGroup.js
var renderRadioGroup_unstable = (state, contextValues) => {
  assertSlots(state);
  return jsx(RadioGroupContext.Provider, {
    value: contextValues.radioGroup,
    children: jsx(state.root, {})
  });
};

// node_modules/@fluentui/react-radio/lib/components/RadioGroup/useRadioGroup.js
var React175 = __toESM(require_react());
var useRadioGroup_unstable = (props, ref) => {
  props = useFieldControlProps_unstable(props);
  const generatedName = useId("radiogroup-");
  const { name = generatedName, value, defaultValue, disabled, layout = "vertical", onChange, required } = props;
  return {
    layout,
    name,
    value,
    defaultValue,
    disabled,
    required,
    components: {
      root: "div"
    },
    root: {
      ref,
      role: "radiogroup",
      ...slot_exports.always(getIntrinsicElementProps(
        "div",
        props,
        /*excludedPropNames:*/
        [
          "onChange",
          "name"
        ]
      ), {
        elementType: "div"
      }),
      onChange: useEventCallback((ev) => {
        if (onChange && isHTMLElement(ev.target, {
          constructorName: "HTMLInputElement"
        }) && ev.target.type === "radio") {
          onChange(ev, {
            value: ev.target.value
          });
        }
      })
    }
  };
};

// node_modules/@fluentui/react-radio/lib/components/RadioGroup/useRadioGroupStyles.styles.js
var radioGroupClassNames = {
  root: "fui-RadioGroup"
};
var useStyles26 = __styles2({
  root: {
    mc9l5x: "f22iagw",
    Bt984gj: "f6jr5hl"
  },
  vertical: {
    Beiy3e4: "f1vx9l62"
  }
}, {
  d: [".f22iagw{display:flex;}", ".f6jr5hl{align-items:flex-start;}", ".f1vx9l62{flex-direction:column;}"]
});
var useRadioGroupStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles26();
  state.root.className = mergeClasses(radioGroupClassNames.root, styles.root, state.layout === "vertical" && styles.vertical, state.root.className);
  return state;
};

// node_modules/@fluentui/react-radio/lib/contexts/useRadioGroupContextValues.js
var React176 = __toESM(require_react());
var useRadioGroupContextValues = (state) => {
  const { name, value, defaultValue, disabled, layout, required } = state;
  const ariaDescribedBy = state.root["aria-describedby"];
  const radioGroup = React176.useMemo(() => ({
    name,
    value,
    defaultValue,
    disabled,
    layout,
    required,
    "aria-describedby": ariaDescribedBy
  }), [
    name,
    value,
    defaultValue,
    disabled,
    layout,
    required,
    ariaDescribedBy
  ]);
  return {
    radioGroup
  };
};

// node_modules/@fluentui/react-radio/lib/components/RadioGroup/RadioGroup.js
var RadioGroup = React177.forwardRef((props, ref) => {
  const state = useRadioGroup_unstable(props, ref);
  const contextValues = useRadioGroupContextValues(state);
  useRadioGroupStyles_unstable(state);
  useCustomStyleHook("useRadioGroupStyles_unstable")(state);
  return renderRadioGroup_unstable(state, contextValues);
});
RadioGroup.displayName = "RadioGroup";

// node_modules/@fluentui/react-radio/lib/components/RadioGroup/RadioGroup.types.js
var React178 = __toESM(require_react());

// node_modules/@fluentui/react-radio/lib/components/Radio/Radio.js
var React180 = __toESM(require_react());

// node_modules/@fluentui/react-radio/lib/components/Radio/renderRadio.js
var renderRadio_unstable = (state) => {
  assertSlots(state);
  return jsxs(state.root, {
    children: [
      jsx(state.input, {}),
      jsx(state.indicator, {}),
      state.label && jsx(state.label, {})
    ]
  });
};

// node_modules/@fluentui/react-radio/lib/components/Radio/useRadio.js
var React179 = __toESM(require_react());
var useRadio_unstable = (props, ref) => {
  const group = useRadioGroupContextValue_unstable();
  const { name = group.name, checked = group.value !== void 0 ? group.value === props.value : void 0, defaultChecked = group.defaultValue !== void 0 ? group.defaultValue === props.value : void 0, labelPosition = group.layout === "horizontal-stacked" ? "below" : "after", disabled = group.disabled, required = group.required, "aria-describedby": ariaDescribedBy = group["aria-describedby"], onChange } = props;
  const nativeProps = getPartitionedNativeProps({
    props,
    primarySlotTagName: "input",
    excludedPropNames: [
      "checked",
      "defaultChecked",
      "onChange"
    ]
  });
  const root = slot_exports.always(props.root, {
    defaultProps: {
      ref: useFocusWithin(),
      ...nativeProps.root
    },
    elementType: "span"
  });
  const input = slot_exports.always(props.input, {
    defaultProps: {
      ref,
      type: "radio",
      id: useId("radio-", nativeProps.primary.id),
      name,
      checked,
      defaultChecked,
      disabled,
      required,
      "aria-describedby": ariaDescribedBy,
      ...nativeProps.primary
    },
    elementType: "input"
  });
  input.onChange = mergeCallbacks(input.onChange, (ev) => onChange === null || onChange === void 0 ? void 0 : onChange(ev, {
    value: ev.currentTarget.value
  }));
  const label = slot_exports.optional(props.label, {
    defaultProps: {
      htmlFor: input.id,
      disabled: input.disabled
    },
    elementType: Label
  });
  const indicator = slot_exports.always(props.indicator, {
    defaultProps: {
      "aria-hidden": true
    },
    elementType: "div"
  });
  return {
    labelPosition,
    components: {
      root: "span",
      input: "input",
      label: Label,
      indicator: "div"
    },
    root,
    input,
    label,
    indicator
  };
};

// node_modules/@fluentui/react-radio/lib/components/Radio/useRadioStyles.styles.js
var radioClassNames = {
  root: "fui-Radio",
  indicator: "fui-Radio__indicator",
  input: "fui-Radio__input",
  label: "fui-Radio__label"
};
var useRootBaseClassName3 = __resetStyles("r1siqwd8", "rmnplyc", {
  r: [".r1siqwd8{display:inline-flex;position:relative;}", ".r1siqwd8:focus{outline-style:none;}", ".r1siqwd8:focus-visible{outline-style:none;}", ".r1siqwd8[data-fui-focus-within]:focus-within{border-top-color:transparent;border-right-color:transparent;border-bottom-color:transparent;border-left-color:transparent;}", '.r1siqwd8[data-fui-focus-within]:focus-within::after{content:"";position:absolute;pointer-events:none;z-index:1;border:2px solid var(--colorStrokeFocus2);border-radius:var(--borderRadiusMedium);top:calc(2px * -1);right:calc(2px * -1);bottom:calc(2px * -1);left:calc(2px * -1);}', ".rmnplyc{display:inline-flex;position:relative;}", ".rmnplyc:focus{outline-style:none;}", ".rmnplyc:focus-visible{outline-style:none;}", ".rmnplyc[data-fui-focus-within]:focus-within{border-top-color:transparent;border-left-color:transparent;border-bottom-color:transparent;border-right-color:transparent;}", '.rmnplyc[data-fui-focus-within]:focus-within::after{content:"";position:absolute;pointer-events:none;z-index:1;border:2px solid var(--colorStrokeFocus2);border-radius:var(--borderRadiusMedium);top:calc(2px * -1);left:calc(2px * -1);bottom:calc(2px * -1);right:calc(2px * -1);}'],
  s: ["@media (forced-colors: active){.r1siqwd8[data-fui-focus-within]:focus-within::after{border-top-color:Highlight;border-right-color:Highlight;border-bottom-color:Highlight;border-left-color:Highlight;}}", "@media (forced-colors: active){.rmnplyc[data-fui-focus-within]:focus-within::after{border-top-color:Highlight;border-left-color:Highlight;border-bottom-color:Highlight;border-right-color:Highlight;}}"]
});
var useRootStyles7 = __styles2({
  vertical: {
    Beiy3e4: "f1vx9l62",
    Bt984gj: "f122n59"
  }
}, {
  d: [".f1vx9l62{flex-direction:column;}", ".f122n59{align-items:center;}"]
});
var useInputBaseClassName2 = __resetStyles("rg1upok", "rzwdzb4", {
  r: [".rg1upok{position:absolute;left:0;top:0;width:calc(16px + 2 * var(--spacingHorizontalS));height:100%;box-sizing:border-box;margin:0;opacity:0;}", ".rg1upok:enabled{cursor:pointer;}", ".rg1upok:enabled~.fui-Radio__label{cursor:pointer;}", ".rg1upok:enabled:not(:checked)~.fui-Radio__label{color:var(--colorNeutralForeground3);}", ".rg1upok:enabled:not(:checked)~.fui-Radio__indicator{border-color:var(--colorNeutralStrokeAccessible);}", ".rg1upok:enabled:not(:checked):hover~.fui-Radio__label{color:var(--colorNeutralForeground2);}", ".rg1upok:enabled:not(:checked):hover~.fui-Radio__indicator{border-color:var(--colorNeutralStrokeAccessibleHover);}", ".rg1upok:enabled:not(:checked):hover:active~.fui-Radio__label{color:var(--colorNeutralForeground1);}", ".rg1upok:enabled:not(:checked):hover:active~.fui-Radio__indicator{border-color:var(--colorNeutralStrokeAccessiblePressed);}", ".rg1upok:enabled:checked~.fui-Radio__label{color:var(--colorNeutralForeground1);}", ".rg1upok:enabled:checked~.fui-Radio__indicator{border-color:var(--colorCompoundBrandStroke);color:var(--colorCompoundBrandForeground1);}", ".rg1upok:enabled:checked:hover~.fui-Radio__indicator{border-color:var(--colorCompoundBrandStrokeHover);color:var(--colorCompoundBrandForeground1Hover);}", ".rg1upok:enabled:checked:hover:active~.fui-Radio__indicator{border-color:var(--colorCompoundBrandStrokePressed);color:var(--colorCompoundBrandForeground1Pressed);}", ".rg1upok:disabled~.fui-Radio__label{color:var(--colorNeutralForegroundDisabled);cursor:default;}", ".rg1upok:disabled~.fui-Radio__indicator{border-color:var(--colorNeutralStrokeDisabled);color:var(--colorNeutralForegroundDisabled);}", ".rzwdzb4{position:absolute;right:0;top:0;width:calc(16px + 2 * var(--spacingHorizontalS));height:100%;box-sizing:border-box;margin:0;opacity:0;}", ".rzwdzb4:enabled{cursor:pointer;}", ".rzwdzb4:enabled~.fui-Radio__label{cursor:pointer;}", ".rzwdzb4:enabled:not(:checked)~.fui-Radio__label{color:var(--colorNeutralForeground3);}", ".rzwdzb4:enabled:not(:checked)~.fui-Radio__indicator{border-color:var(--colorNeutralStrokeAccessible);}", ".rzwdzb4:enabled:not(:checked):hover~.fui-Radio__label{color:var(--colorNeutralForeground2);}", ".rzwdzb4:enabled:not(:checked):hover~.fui-Radio__indicator{border-color:var(--colorNeutralStrokeAccessibleHover);}", ".rzwdzb4:enabled:not(:checked):hover:active~.fui-Radio__label{color:var(--colorNeutralForeground1);}", ".rzwdzb4:enabled:not(:checked):hover:active~.fui-Radio__indicator{border-color:var(--colorNeutralStrokeAccessiblePressed);}", ".rzwdzb4:enabled:checked~.fui-Radio__label{color:var(--colorNeutralForeground1);}", ".rzwdzb4:enabled:checked~.fui-Radio__indicator{border-color:var(--colorCompoundBrandStroke);color:var(--colorCompoundBrandForeground1);}", ".rzwdzb4:enabled:checked:hover~.fui-Radio__indicator{border-color:var(--colorCompoundBrandStrokeHover);color:var(--colorCompoundBrandForeground1Hover);}", ".rzwdzb4:enabled:checked:hover:active~.fui-Radio__indicator{border-color:var(--colorCompoundBrandStrokePressed);color:var(--colorCompoundBrandForeground1Pressed);}", ".rzwdzb4:disabled~.fui-Radio__label{color:var(--colorNeutralForegroundDisabled);cursor:default;}", ".rzwdzb4:disabled~.fui-Radio__indicator{border-color:var(--colorNeutralStrokeDisabled);color:var(--colorNeutralForegroundDisabled);}"],
  s: ["@media (forced-colors: active){.rg1upok:enabled:not(:checked)~.fui-Radio__indicator{border-color:ButtonBorder;}}", "@media (forced-colors: active){.rg1upok:enabled:checked~.fui-Radio__indicator{border-color:Highlight;color:Highlight;}.rg1upok:enabled:checked~.fui-Radio__indicator::after{background-color:Highlight;}}", "@media (forced-colors: active){.rg1upok:disabled~.fui-Radio__label{color:GrayText;}}", "@media (forced-colors: active){.rg1upok:disabled~.fui-Radio__indicator{border-color:GrayText;color:GrayText;}.rg1upok:disabled~.fui-Radio__indicator::after{background-color:GrayText;}}", "@media (forced-colors: active){.rzwdzb4:enabled:not(:checked)~.fui-Radio__indicator{border-color:ButtonBorder;}}", "@media (forced-colors: active){.rzwdzb4:enabled:checked~.fui-Radio__indicator{border-color:Highlight;color:Highlight;}.rzwdzb4:enabled:checked~.fui-Radio__indicator::after{background-color:Highlight;}}", "@media (forced-colors: active){.rzwdzb4:disabled~.fui-Radio__label{color:GrayText;}}", "@media (forced-colors: active){.rzwdzb4:disabled~.fui-Radio__indicator{border-color:GrayText;color:GrayText;}.rzwdzb4:disabled~.fui-Radio__indicator::after{background-color:GrayText;}}"]
});
var useInputStyles3 = __styles2({
  below: {
    a9b677: "fly5x3f",
    Bqenvij: "f1je6zif"
  },
  defaultIndicator: {
    Blbys7f: "f9ma1gx"
  },
  customIndicator: {
    Bj53wkj: "f12zxao0"
  }
}, {
  d: [".fly5x3f{width:100%;}", ".f1je6zif{height:calc(16px + 2 * var(--spacingVerticalS));}", '.f9ma1gx:checked~.fui-Radio__indicator::after{content:"";}', ".f12zxao0:not(:checked)~.fui-Radio__indicator>*{opacity:0;}"]
});
var useIndicatorBaseClassName2 = __resetStyles("rwtekvw", null, [".rwtekvw{position:relative;width:16px;height:16px;font-size:12px;box-sizing:border-box;flex-shrink:0;display:flex;align-items:center;justify-content:center;overflow:hidden;border:var(--strokeWidthThin) solid;border-radius:var(--borderRadiusCircular);margin:var(--spacingVerticalS) var(--spacingHorizontalS);fill:currentColor;pointer-events:none;}", ".rwtekvw::after{position:absolute;width:16px;height:16px;border-radius:var(--borderRadiusCircular);transform:scale(0.625);background-color:currentColor;}"]);
var useLabelStyles2 = __styles2({
  base: {
    qb2dma: "f7nlbp4",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f1f5q0n8"
  },
  after: {
    uwmqm3: ["fruq291", "f7x41pl"],
    B6of3ja: "fjzwpt6",
    jrapky: "fh6j2fo"
  },
  below: {
    z8tnut: "f1ywm7hm",
    fsow6f: "f17mccla"
  }
}, {
  d: [".f7nlbp4{align-self:center;}", [".f1f5q0n8{padding:var(--spacingVerticalS) var(--spacingHorizontalS);}", {
    p: -1
  }], ".fruq291{padding-left:var(--spacingHorizontalXS);}", ".f7x41pl{padding-right:var(--spacingHorizontalXS);}", ".fjzwpt6{margin-top:calc((16px - var(--lineHeightBase300)) / 2);}", ".fh6j2fo{margin-bottom:calc((16px - var(--lineHeightBase300)) / 2);}", ".f1ywm7hm{padding-top:var(--spacingVerticalXS);}", ".f17mccla{text-align:center;}"]
});
var useRadioStyles_unstable = (state) => {
  "use no memo";
  const {
    labelPosition
  } = state;
  const rootBaseClassName = useRootBaseClassName3();
  const rootStyles = useRootStyles7();
  state.root.className = mergeClasses(radioClassNames.root, rootBaseClassName, labelPosition === "below" && rootStyles.vertical, state.root.className);
  const inputBaseClassName = useInputBaseClassName2();
  const inputStyles = useInputStyles3();
  state.input.className = mergeClasses(radioClassNames.input, inputBaseClassName, labelPosition === "below" && inputStyles.below, state.indicator.children ? inputStyles.customIndicator : inputStyles.defaultIndicator, state.input.className);
  const indicatorBaseClassName = useIndicatorBaseClassName2();
  state.indicator.className = mergeClasses(radioClassNames.indicator, indicatorBaseClassName, state.indicator.className);
  const labelStyles = useLabelStyles2();
  if (state.label) {
    state.label.className = mergeClasses(radioClassNames.label, labelStyles.base, labelStyles[labelPosition], state.label.className);
  }
  return state;
};

// node_modules/@fluentui/react-radio/lib/components/Radio/Radio.js
var Radio = React180.forwardRef((props, ref) => {
  const state = useRadio_unstable(props, ref);
  useRadioStyles_unstable(state);
  useCustomStyleHook("useRadioStyles_unstable")(state);
  return renderRadio_unstable(state);
});
Radio.displayName = "Radio";

// node_modules/@fluentui/react-radio/lib/components/Radio/Radio.types.js
var React181 = __toESM(require_react());

// node_modules/@fluentui/react-select/lib/components/Select/Select.js
var React183 = __toESM(require_react());

// node_modules/@fluentui/react-select/lib/components/Select/useSelect.js
var React182 = __toESM(require_react());
var useSelect_unstable = (props, ref) => {
  props = useFieldControlProps_unstable(props, {
    supportsLabelFor: true,
    supportsRequired: true,
    supportsSize: true
  });
  const overrides = useOverrides();
  var _overrides_inputDefaultAppearance;
  const { defaultValue, value, select, icon, root, appearance = (_overrides_inputDefaultAppearance = overrides.inputDefaultAppearance) !== null && _overrides_inputDefaultAppearance !== void 0 ? _overrides_inputDefaultAppearance : "outline", onChange, size = "medium" } = props;
  const nativeProps = getPartitionedNativeProps({
    props,
    primarySlotTagName: "select",
    excludedPropNames: [
      "appearance",
      "defaultValue",
      "onChange",
      "size",
      "value"
    ]
  });
  const state = {
    size,
    appearance,
    components: {
      root: "span",
      select: "select",
      icon: "span"
    },
    select: slot_exports.always(select, {
      defaultProps: {
        defaultValue,
        value,
        ref,
        ...nativeProps.primary
      },
      elementType: "select"
    }),
    icon: slot_exports.optional(icon, {
      renderByDefault: true,
      defaultProps: {
        children: React182.createElement(ChevronDownRegular, null)
      },
      elementType: "span"
    }),
    root: slot_exports.always(root, {
      defaultProps: nativeProps.root,
      elementType: "span"
    })
  };
  state.select.onChange = useEventCallback((event) => {
    onChange === null || onChange === void 0 ? void 0 : onChange(event, {
      value: event.target.value
    });
  });
  return state;
};

// node_modules/@fluentui/react-select/lib/components/Select/renderSelect.js
var renderSelect_unstable = (state) => {
  assertSlots(state);
  return jsxs(state.root, {
    children: [
      jsx(state.select, {
        children: state.select.children
      }),
      state.icon && jsx(state.icon, {})
    ]
  });
};

// node_modules/@fluentui/react-select/lib/components/Select/useSelectStyles.styles.js
var selectClassNames = {
  root: "fui-Select",
  select: "fui-Select__select",
  icon: "fui-Select__icon"
};
var iconSizes2 = {
  small: "16px",
  medium: "20px",
  large: "24px"
};
var paddingRight = {
  small: `calc(${tokens.spacingHorizontalSNudge}
    + ${iconSizes2.small}
    + ${tokens.spacingHorizontalXXS}
    + ${tokens.spacingHorizontalXXS})`,
  medium: `calc(${tokens.spacingHorizontalMNudge}
    + ${iconSizes2.medium}
    + ${tokens.spacingHorizontalXXS}
    + ${tokens.spacingHorizontalXXS})`,
  large: `calc(${tokens.spacingHorizontalM}
    + ${iconSizes2.large}
    + ${tokens.spacingHorizontalSNudge}
    + ${tokens.spacingHorizontalSNudge})`
};
var paddingLeft = {
  small: `calc(${tokens.spacingHorizontalSNudge} + ${tokens.spacingHorizontalXXS})`,
  medium: `calc(${tokens.spacingHorizontalMNudge} + ${tokens.spacingHorizontalXXS})`,
  large: `calc(${tokens.spacingHorizontalM} + ${tokens.spacingHorizontalSNudge})`
};
var useRootStyles8 = __styles2({
  base: {
    Bt984gj: "f122n59",
    B7ck84d: "f1ewtqcl",
    mc9l5x: "f22iagw",
    Eh141a: "flvyvdh",
    Bahqtrf: "fk6fouc",
    qhf8xq: "f10pi13n",
    h62rwi: "f7ll8cq",
    d9w3h3: 0,
    B3778ie: 0,
    B4j8arr: 0,
    Bl18szs: 0,
    Blrzh8d: "fe5s0lv",
    li1rpt: "f1gw3sf2",
    Bsft5z2: "f13zj6fq",
    Dlnsje: "fhwjr99",
    E3zdtr: "f1mdlcz9",
    By385i5: "fo72kxq",
    Eqx8gd: ["f1n6gb5g", "f15yvnhg"],
    B1piin3: ["f15yvnhg", "f1n6gb5g"],
    b1kco5: "f1yk9hq",
    Ba2ppi3: "fhwpy7i",
    F2fol1: "f14ee0xe",
    lck23g: "f1xhbsuh",
    df92cz: "fv8e3ye",
    I188md: "ftb5wc6",
    umuwi5: "fjw5xc1",
    Blcqepd: "f1xdyd5c",
    nplu4u: "fatpbeo",
    Bioka5o: "fb7uyps",
    H713fs: "f1cmft4k",
    B9ooomg: "f1x58t8o"
  }
}, {
  d: [".f122n59{align-items:center;}", ".f1ewtqcl{box-sizing:border-box;}", ".f22iagw{display:flex;}", ".flvyvdh{flex-wrap:nowrap;}", ".fk6fouc{font-family:var(--fontFamilyBase);}", ".f10pi13n{position:relative;}", ".f7ll8cq::after{background-image:linear-gradient(\n        0deg,\n        var(--colorCompoundBrandStroke) 0%,\n        var(--colorCompoundBrandStroke) 50%,\n        transparent 50%,\n        transparent 100%\n      );}", [".fe5s0lv::after{border-radius:0 0 var(--borderRadiusMedium) var(--borderRadiusMedium);}", {
    p: -1
  }], ".f1gw3sf2::after{box-sizing:border-box;}", '.f13zj6fq::after{content:"";}', ".fhwjr99::after{height:var(--borderRadiusMedium);}", ".f1mdlcz9::after{position:absolute;}", ".fo72kxq::after{bottom:0;}", ".f1n6gb5g::after{left:0;}", ".f15yvnhg::after{right:0;}", ".f1yk9hq::after{transform:scaleX(0);}", ".fhwpy7i::after{transition-property:transform;}", ".f14ee0xe::after{transition-duration:var(--durationUltraFast);}", ".f1xhbsuh::after{transition-delay:var(--curveAccelerateMid);}"],
  m: [["@media screen and (prefers-reduced-motion: reduce){.fv8e3ye::after{transition-duration:0.01ms;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }], ["@media screen and (prefers-reduced-motion: reduce){.ftb5wc6::after{transition-delay:0.01ms;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }], ["@media screen and (prefers-reduced-motion: reduce){.f1cmft4k:focus-within::after{transition-duration:0.01ms;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }], ["@media screen and (prefers-reduced-motion: reduce){.f1x58t8o:focus-within::after{transition-delay:0.01ms;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }]],
  w: [".fjw5xc1:focus-within::after{transform:scaleX(1);}", ".f1xdyd5c:focus-within::after{transition-property:transform;}", ".fatpbeo:focus-within::after{transition-duration:var(--durationNormal);}", ".fb7uyps:focus-within::after{transition-delay:var(--curveDecelerateMid);}"]
});
var useSelectStyles = __styles2({
  base: {
    Bowrso0: "fqrijq1",
    Bgfg5da: 0,
    B9xav0g: 0,
    oivjwe: 0,
    Bn0qgzm: 0,
    B4g9neb: 0,
    zhjwy3: 0,
    wvpqe5: 0,
    ibv6hh: 0,
    u1mtju: 0,
    h3c5rm: 0,
    vrafjx: 0,
    Bekrc4i: 0,
    i8vvqc: 0,
    g2u3we: 0,
    icvyot: 0,
    B4j52fo: 0,
    irswps: "faev5xe",
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "ft85np5",
    E5pizo: "f1couhl3",
    B7ck84d: "f1ewtqcl",
    sj55zd: "f19n0e5",
    Bceei9c: "f1k6fduh",
    Bh6795r: "fqerorx",
    B2u0y6b: "f6dzj5z",
    Byoj8tv: "f1qch9an",
    z8tnut: "f1g0x7ka",
    B3aqqti: "fatbyko",
    Brovlpu: "f1grzc83",
    Bxa1mx5: "f19shzzi"
  },
  disabled: {
    De3pzq: "f1c21dwh",
    g2u3we: "f1jj8ep1",
    h3c5rm: ["f15xbau", "fy0fskl"],
    B9xav0g: "f4ikngz",
    zhjwy3: ["fy0fskl", "f15xbau"],
    sj55zd: "f1s2aq7o",
    Bceei9c: "fdrzuqr",
    Bjwas2f: "fg455y9",
    Bn1d65q: ["f1rvyvqg", "f14g86mu"],
    Bxeuatn: "f1cwzwz",
    n51gp8: ["f14g86mu", "f1rvyvqg"]
  },
  disabledUnderline: {
    g2u3we: "fgig46g",
    h3c5rm: ["f1mxt3zg", "fziff3p"],
    B9xav0g: "f4ikngz",
    zhjwy3: ["fziff3p", "f1mxt3zg"]
  },
  small: {
    Bqenvij: "frvgh55",
    uwmqm3: ["f1xile11", "fqznh8f"],
    z189sj: ["fiqd4sw", "f11fkzut"],
    Bahqtrf: "fk6fouc",
    Be2twd7: "fy9rknc",
    Bhrd7zp: "figsok6",
    Bg96gwp: "fwrc4pm"
  },
  medium: {
    Bqenvij: "f1d2rq10",
    uwmqm3: ["f1e60jzv", "f135dnwl"],
    z189sj: ["f154vowv", "flqamny"],
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "figsok6",
    Bg96gwp: "f1i3iumi"
  },
  large: {
    Bqenvij: "fbhnoac",
    uwmqm3: ["fnphzt9", "flt1dlf"],
    z189sj: ["f1xi5ia2", "f1xi1l47"],
    Bahqtrf: "fk6fouc",
    Be2twd7: "fod5ikn",
    Bhrd7zp: "figsok6",
    Bg96gwp: "faaz57k"
  },
  outline: {
    De3pzq: "fxugw4r",
    Bgfg5da: 0,
    B9xav0g: "f1c1zstj",
    oivjwe: 0,
    Bn0qgzm: 0,
    B4g9neb: 0,
    zhjwy3: 0,
    wvpqe5: 0,
    ibv6hh: 0,
    u1mtju: 0,
    h3c5rm: 0,
    vrafjx: 0,
    Bekrc4i: 0,
    i8vvqc: 0,
    g2u3we: 0,
    icvyot: 0,
    B4j52fo: 0,
    irswps: "fm9niy"
  },
  outlineInteractive: {
    Bgoe8wy: "fvcxoqz",
    Bwzppfd: ["f1ub3y4t", "f1m52nbi"],
    oetu4i: "flmw63s",
    gg5e9n: ["f1m52nbi", "f1ub3y4t"],
    B6oc9vd: "fvs00aa",
    ak43y8: ["f1assf6x", "f4ruux4"],
    wmxk5l: "fqhmt4z",
    B50zh58: ["f4ruux4", "f1assf6x"]
  },
  underline: {
    De3pzq: "f1c21dwh",
    B9xav0g: 0,
    oivjwe: 0,
    Bn0qgzm: 0,
    Bgfg5da: "fd91s9p",
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "fokr779",
    C8i20h: "fb77jct"
  },
  "filled-lighter": {
    De3pzq: "fxugw4r"
  },
  "filled-darker": {
    De3pzq: "f16xq7d1"
  },
  invalid: {
    tvckwq: "fs4k3qj",
    gk2u95: ["fcee079", "fmyw78r"],
    hhx65j: "f1fgmyf4",
    Bxowmz0: ["fmyw78r", "fcee079"]
  },
  invalidUnderline: {
    hhx65j: "f1fgmyf4"
  }
}, {
  d: [".fqrijq1{-webkit-appearance:none;-moz-appearance:none;appearance:none;}", [".faev5xe{border:1px solid transparent;}", {
    p: -2
  }], [".ft85np5{border-radius:var(--borderRadiusMedium);}", {
    p: -1
  }], ".f1couhl3{box-shadow:none;}", ".f1ewtqcl{box-sizing:border-box;}", ".f19n0e5{color:var(--colorNeutralForeground1);}", ".f1k6fduh{cursor:pointer;}", ".fqerorx{flex-grow:1;}", ".f6dzj5z{max-width:100%;}", ".f1qch9an{padding-bottom:0;}", ".f1g0x7ka{padding-top:0;}", ".f1c21dwh{background-color:var(--colorTransparentBackground);}", ".f1jj8ep1{border-top-color:var(--colorNeutralStrokeDisabled);}", ".f15xbau{border-right-color:var(--colorNeutralStrokeDisabled);}", ".fy0fskl{border-left-color:var(--colorNeutralStrokeDisabled);}", ".f4ikngz{border-bottom-color:var(--colorNeutralStrokeDisabled);}", ".f1s2aq7o{color:var(--colorNeutralForegroundDisabled);}", ".fdrzuqr{cursor:not-allowed;}", ".fgig46g{border-top-color:var(--colorTransparentStrokeDisabled);}", ".f1mxt3zg{border-right-color:var(--colorTransparentStrokeDisabled);}", ".fziff3p{border-left-color:var(--colorTransparentStrokeDisabled);}", ".frvgh55{height:24px;}", ".f1xile11{padding-left:calc(var(--spacingHorizontalSNudge) + var(--spacingHorizontalXXS));}", ".fqznh8f{padding-right:calc(var(--spacingHorizontalSNudge) + var(--spacingHorizontalXXS));}", ".fiqd4sw{padding-right:calc(var(--spacingHorizontalSNudge)\n    + 16px\n    + var(--spacingHorizontalXXS)\n    + var(--spacingHorizontalXXS));}", ".f11fkzut{padding-left:calc(var(--spacingHorizontalSNudge)\n    + 16px\n    + var(--spacingHorizontalXXS)\n    + var(--spacingHorizontalXXS));}", ".fk6fouc{font-family:var(--fontFamilyBase);}", ".fy9rknc{font-size:var(--fontSizeBase200);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".fwrc4pm{line-height:var(--lineHeightBase200);}", ".f1d2rq10{height:32px;}", ".f1e60jzv{padding-left:calc(var(--spacingHorizontalMNudge) + var(--spacingHorizontalXXS));}", ".f135dnwl{padding-right:calc(var(--spacingHorizontalMNudge) + var(--spacingHorizontalXXS));}", ".f154vowv{padding-right:calc(var(--spacingHorizontalMNudge)\n    + 20px\n    + var(--spacingHorizontalXXS)\n    + var(--spacingHorizontalXXS));}", ".flqamny{padding-left:calc(var(--spacingHorizontalMNudge)\n    + 20px\n    + var(--spacingHorizontalXXS)\n    + var(--spacingHorizontalXXS));}", ".fkhj508{font-size:var(--fontSizeBase300);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}", ".fbhnoac{height:40px;}", ".fnphzt9{padding-left:calc(var(--spacingHorizontalM) + var(--spacingHorizontalSNudge));}", ".flt1dlf{padding-right:calc(var(--spacingHorizontalM) + var(--spacingHorizontalSNudge));}", ".f1xi5ia2{padding-right:calc(var(--spacingHorizontalM)\n    + 24px\n    + var(--spacingHorizontalSNudge)\n    + var(--spacingHorizontalSNudge));}", ".f1xi1l47{padding-left:calc(var(--spacingHorizontalM)\n    + 24px\n    + var(--spacingHorizontalSNudge)\n    + var(--spacingHorizontalSNudge));}", ".fod5ikn{font-size:var(--fontSizeBase400);}", ".faaz57k{line-height:var(--lineHeightBase400);}", ".fxugw4r{background-color:var(--colorNeutralBackground1);}", [".fm9niy{border:1px solid var(--colorNeutralStroke1);}", {
    p: -2
  }], ".f1c1zstj{border-bottom-color:var(--colorNeutralStrokeAccessible);}", [".fd91s9p{border-bottom:1px solid var(--colorNeutralStrokeAccessible);}", {
    p: -1
  }], [".fokr779{border-radius:0;}", {
    p: -1
  }], ".fb77jct option{background-color:var(--colorNeutralBackground1);}", ".f16xq7d1{background-color:var(--colorNeutralBackground3);}", ".fs4k3qj:not(:focus-within),.fs4k3qj:hover:not(:focus-within){border-top-color:var(--colorPaletteRedBorder2);}", ".fcee079:not(:focus-within),.fcee079:hover:not(:focus-within){border-right-color:var(--colorPaletteRedBorder2);}", ".fmyw78r:not(:focus-within),.fmyw78r:hover:not(:focus-within){border-left-color:var(--colorPaletteRedBorder2);}", ".f1fgmyf4:not(:focus-within),.f1fgmyf4:hover:not(:focus-within){border-bottom-color:var(--colorPaletteRedBorder2);}"],
  f: [".fatbyko:focus{outline-width:2px;}", ".f1grzc83:focus{outline-style:solid;}", ".f19shzzi:focus{outline-color:transparent;}"],
  m: [["@media (forced-colors: active){.fg455y9{border-top-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f14g86mu{border-left-color:GrayText;}.f1rvyvqg{border-right-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1cwzwz{border-bottom-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }]],
  h: [".fvcxoqz:hover{border-top-color:var(--colorNeutralStroke1Hover);}", ".f1ub3y4t:hover{border-right-color:var(--colorNeutralStroke1Hover);}", ".f1m52nbi:hover{border-left-color:var(--colorNeutralStroke1Hover);}", ".flmw63s:hover{border-bottom-color:var(--colorNeutralStrokeAccessible);}"],
  a: [".fvs00aa:active{border-top-color:var(--colorNeutralStroke1Pressed);}", ".f1assf6x:active{border-right-color:var(--colorNeutralStroke1Pressed);}", ".f4ruux4:active{border-left-color:var(--colorNeutralStroke1Pressed);}", ".fqhmt4z:active{border-bottom-color:var(--colorNeutralStrokeAccessible);}"]
});
var useIconStyles6 = __styles2({
  icon: {
    B7ck84d: "f1ewtqcl",
    sj55zd: "fxkbij4",
    mc9l5x: "ftgm304",
    qhf8xq: "f1euv43f",
    Bkecrkj: "f1aehjj5",
    Bo70h7d: "fvc9v3g"
  },
  disabled: {
    sj55zd: "f1s2aq7o",
    Bbusuzp: "f1dcs8yz"
  },
  small: {
    Be2twd7: "f4ybsrx",
    Bqenvij: "fd461yt",
    j35jbq: ["f13lnp83", "f1i5nn0v"],
    a9b677: "fjw5fx7"
  },
  medium: {
    Be2twd7: "fe5j1ua",
    Bqenvij: "fjamq6b",
    j35jbq: ["fnyteob", "f1enpzzf"],
    a9b677: "f64fuq3"
  },
  large: {
    Be2twd7: "f1rt2boy",
    Bqenvij: "frvgh55",
    j35jbq: ["f8b87gs", "fedtrts"],
    a9b677: "fq4mcun"
  }
}, {
  d: [".f1ewtqcl{box-sizing:border-box;}", ".fxkbij4{color:var(--colorNeutralStrokeAccessible);}", ".ftgm304{display:block;}", ".f1euv43f{position:absolute;}", ".f1aehjj5{pointer-events:none;}", ".fvc9v3g svg{display:block;}", ".f1s2aq7o{color:var(--colorNeutralForegroundDisabled);}", ".f4ybsrx{font-size:16px;}", ".fd461yt{height:16px;}", ".f13lnp83{right:var(--spacingHorizontalSNudge);}", ".f1i5nn0v{left:var(--spacingHorizontalSNudge);}", ".fjw5fx7{width:16px;}", ".fe5j1ua{font-size:20px;}", ".fjamq6b{height:20px;}", ".fnyteob{right:var(--spacingHorizontalMNudge);}", ".f1enpzzf{left:var(--spacingHorizontalMNudge);}", ".f64fuq3{width:20px;}", ".f1rt2boy{font-size:24px;}", ".frvgh55{height:24px;}", ".f8b87gs{right:var(--spacingHorizontalM);}", ".fedtrts{left:var(--spacingHorizontalM);}", ".fq4mcun{width:24px;}"],
  m: [["@media (forced-colors: active){.f1dcs8yz{color:GrayText;}}", {
    m: "(forced-colors: active)"
  }]]
});
var useSelectStyles_unstable = (state) => {
  "use no memo";
  const {
    size,
    appearance
  } = state;
  const disabled = state.select.disabled;
  const invalid = `${state.select["aria-invalid"]}` === "true";
  const iconStyles = useIconStyles6();
  const rootStyles = useRootStyles8();
  const selectStyles = useSelectStyles();
  state.root.className = mergeClasses(selectClassNames.root, rootStyles.base, state.root.className);
  state.select.className = mergeClasses(selectClassNames.select, selectStyles.base, selectStyles[size], selectStyles[appearance], !disabled && appearance === "outline" && selectStyles.outlineInteractive, !disabled && invalid && appearance !== "underline" && selectStyles.invalid, !disabled && invalid && appearance === "underline" && selectStyles.invalidUnderline, disabled && selectStyles.disabled, disabled && appearance === "underline" && selectStyles.disabledUnderline, state.select.className);
  if (state.icon) {
    state.icon.className = mergeClasses(selectClassNames.icon, iconStyles.icon, disabled && iconStyles.disabled, iconStyles[size], state.icon.className);
  }
  return state;
};

// node_modules/@fluentui/react-select/lib/components/Select/Select.js
var Select = React183.forwardRef((props, ref) => {
  const state = useSelect_unstable(props, ref);
  useSelectStyles_unstable(state);
  useCustomStyleHook("useSelectStyles_unstable")(state);
  return renderSelect_unstable(state);
});
Select.displayName = "Select";

// node_modules/@fluentui/react-select/lib/components/Select/Select.types.js
var React184 = __toESM(require_react());

// node_modules/@fluentui/react-skeleton/lib/components/Skeleton/Skeleton.js
var React188 = __toESM(require_react());

// node_modules/@fluentui/react-skeleton/lib/components/Skeleton/useSkeleton.js
var React186 = __toESM(require_react());

// node_modules/@fluentui/react-skeleton/lib/contexts/SkeletonContext.js
var React185 = __toESM(require_react());
var SkeletonContext = React185.createContext(void 0);
var skeletonContextDefaultValue = {};
var SkeletonContextProvider = SkeletonContext.Provider;
var useSkeletonContext = () => {
  var _React_useContext;
  return (_React_useContext = React185.useContext(SkeletonContext)) !== null && _React_useContext !== void 0 ? _React_useContext : skeletonContextDefaultValue;
};

// node_modules/@fluentui/react-skeleton/lib/components/Skeleton/useSkeleton.js
var useSkeleton_unstable = (props, ref) => {
  const { animation: contextAnimation, appearance: contextAppearance } = useSkeletonContext();
  const { animation = contextAnimation !== null && contextAnimation !== void 0 ? contextAnimation : "wave", appearance = contextAppearance !== null && contextAppearance !== void 0 ? contextAppearance : "opaque" } = props;
  const root = slot_exports.always(getIntrinsicElementProps("div", {
    // FIXME:
    // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`
    // but since it would be a breaking change to fix it, we are casting ref to it's proper type
    ref,
    role: "progressbar",
    "aria-busy": true,
    ...props
  }), {
    elementType: "div"
  });
  return {
    animation,
    appearance,
    components: {
      root: "div"
    },
    root
  };
};

// node_modules/@fluentui/react-skeleton/lib/components/Skeleton/renderSkeleton.js
var renderSkeleton_unstable = (state, contextValues) => {
  assertSlots(state);
  return jsx(SkeletonContextProvider, {
    value: contextValues.skeletonGroup,
    children: jsx(state.root, {})
  });
};

// node_modules/@fluentui/react-skeleton/lib/components/Skeleton/useSkeletonStyles.styles.js
var skeletonClassNames = {
  root: "fui-Skeleton"
};
var useSkeletonStyles_unstable = (state) => {
  "use no memo";
  state.root.className = mergeClasses(skeletonClassNames.root, state.root.className);
  return state;
};

// node_modules/@fluentui/react-skeleton/lib/components/Skeleton/useSkeletonContextValues.js
var React187 = __toESM(require_react());
var useSkeletonContextValues = (state) => {
  const { animation, appearance } = state;
  const skeletonGroup = React187.useMemo(() => ({
    animation,
    appearance
  }), [
    animation,
    appearance
  ]);
  return {
    skeletonGroup
  };
};

// node_modules/@fluentui/react-skeleton/lib/components/Skeleton/Skeleton.js
var Skeleton = React188.forwardRef((props, ref) => {
  const state = useSkeleton_unstable(props, ref);
  const contextValues = useSkeletonContextValues(state);
  useSkeletonStyles_unstable(state);
  return renderSkeleton_unstable(state, contextValues);
});
Skeleton.displayName = "Skeleton";

// node_modules/@fluentui/react-skeleton/lib/components/SkeletonItem/SkeletonItem.js
var React190 = __toESM(require_react());

// node_modules/@fluentui/react-skeleton/lib/components/SkeletonItem/useSkeletonItem.js
var React189 = __toESM(require_react());
var useSkeletonItem_unstable = (props, ref) => {
  const { animation: contextAnimation, appearance: contextAppearance } = useSkeletonContext();
  const { animation = contextAnimation !== null && contextAnimation !== void 0 ? contextAnimation : "wave", appearance = contextAppearance !== null && contextAppearance !== void 0 ? contextAppearance : "opaque", size = 16, shape = "rectangle" } = props;
  const root = slot_exports.always(getIntrinsicElementProps("div", {
    // FIXME:
    // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`
    // but since it would be a breaking change to fix it, we are casting ref to it's proper type
    ref,
    ...props
  }), {
    elementType: "div"
  });
  return {
    appearance,
    animation,
    size,
    shape,
    components: {
      root: "div"
    },
    root
  };
};

// node_modules/@fluentui/react-skeleton/lib/components/SkeletonItem/renderSkeletonItem.js
var renderSkeletonItem_unstable = (state) => {
  assertSlots(state);
  return jsx(state.root, {});
};

// node_modules/@fluentui/react-skeleton/lib/components/SkeletonItem/useSkeletonItemStyles.styles.js
var skeletonItemClassNames = {
  root: "fui-SkeletonItem"
};
var useStyles27 = __styles2({
  root: {
    qhf8xq: "f10pi13n",
    B68tc82: 0,
    Bmxbyg5: 0,
    Bpg54ce: "f1a3p1vp",
    Bsft5z2: "f13zj6fq",
    ap17g6: "f2gz7yw",
    E3zdtr: "f1mdlcz9",
    By385i5: 0,
    Eqx8gd: 0,
    B1piin3: 0,
    bn5sak: 0,
    B58onuk: "f1nt53hs",
    s9ouvv: "f18xs7ez",
    xr36ep: "ffm3629",
    Bitv4sc: "f1f9zsvm",
    Jx5sug: "f1ub80pn",
    Hzyzrh: "f1e7twep"
  },
  wave: {
    De3pzq: "f1gjxg63",
    Br128sd: ["f3fo419", "f6m9r4"],
    h62rwi: ["ftnv2js", "f12jzhyt"],
    b1kco5: ["fig1c6l", "f1rv5y9h"],
    oi31me: "f103n15n"
  },
  pulse: {
    Br128sd: "f171zwvm",
    xr36ep: "fs3pcyf",
    Bjyk6c5: "f1yu5riq"
  },
  translucent: {
    De3pzq: "f162mh4z",
    h62rwi: ["flvf4r0", "f1uek97b"]
  },
  translucentPulse: {
    De3pzq: "flu3bqm",
    Bjyk6c5: "fxucc0w"
  }
}, {
  d: [".f10pi13n{position:relative;}", [".f1a3p1vp{overflow:hidden;}", {
    p: -1
  }], '.f13zj6fq::after{content:"";}', ".f2gz7yw::after{display:block;}", ".f1mdlcz9::after{position:absolute;}", [".f1nt53hs::after{inset:0;}", {
    p: -1
  }], ".f18xs7ez::after{animation-iteration-count:infinite;}", ".ffm3629::after{animation-duration:3s;}", ".f1f9zsvm::after{animation-timing-function:ease-in-out;}", ".f1gjxg63{background-color:var(--colorNeutralStencil1);}", ".f3fo419::after{animation-name:f1efwx7q;}", ".f6m9r4::after{animation-name:f1kkgpz1;}", ".ftnv2js::after{background-image:linear-gradient(\n        to right,\n        var(--colorNeutralStencil1) 0%,\n        var(--colorNeutralStencil2) 50%,\n        var(--colorNeutralStencil1) 100%);}", ".f12jzhyt::after{background-image:linear-gradient(\n        to left,\n        var(--colorNeutralStencil1) 0%,\n        var(--colorNeutralStencil2) 50%,\n        var(--colorNeutralStencil1) 100%);}", ".fig1c6l::after{transform:translate(-100%);}", ".f1rv5y9h::after{transform:translate(100%);}", ".f171zwvm::after{animation-name:f12o7gg6;}", ".fs3pcyf::after{animation-duration:1s;}", ".f1yu5riq::after{background-color:var(--colorNeutralStencil1);}", ".f162mh4z{background-color:var(--colorNeutralStencil1Alpha);}", ".flvf4r0::after{background-image:linear-gradient(\n      to right,\n      transparent 0%,\n      var(--colorNeutralStencil1Alpha) 50%,\n      transparent 100%);}", ".f1uek97b::after{background-image:linear-gradient(\n      to left,\n      transparent 0%,\n      var(--colorNeutralStencil1Alpha) 50%,\n      transparent 100%);}", ".flu3bqm{background-color:none;}", ".fxucc0w::after{background-color:var(--colorNeutralStencil1Alpha);}"],
  m: [["@media screen and (prefers-reduced-motion: reduce){.f1ub80pn::after{animation-duration:0.01ms;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }], ["@media screen and (prefers-reduced-motion: reduce){.f1e7twep::after{animation-iteration-count:1;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }], ["@media screen and (forced-colors: active){.f103n15n::after{background-color:WindowText;}}", {
    m: "screen and (forced-colors: active)"
  }]],
  k: ["@keyframes f1efwx7q{to{transform:translate(100%);}}", "@keyframes f1kkgpz1{to{transform:translate(-100%);}}", "@keyframes f12o7gg6{0%{opacity:1;}50%{opacity:0.4;}100%{opacity:1;}}"]
});
var useRectangleStyles = __styles2({
  "8": {
    Bqenvij: "f1x82gua"
  },
  "12": {
    Bqenvij: "fvblgha"
  },
  "16": {
    Bqenvij: "fd461yt"
  },
  "20": {
    Bqenvij: "fjamq6b"
  },
  "24": {
    Bqenvij: "frvgh55"
  },
  "28": {
    Bqenvij: "fxldao9"
  },
  "32": {
    Bqenvij: "f1d2rq10"
  },
  "36": {
    Bqenvij: "f8ljn23"
  },
  "40": {
    Bqenvij: "fbhnoac"
  },
  "48": {
    Bqenvij: "ff2sm71"
  },
  "56": {
    Bqenvij: "fzki0ko"
  },
  "64": {
    Bqenvij: "f16k9i2m"
  },
  "72": {
    Bqenvij: "f1shusfg"
  },
  "96": {
    Bqenvij: "fypu0ge"
  },
  "120": {
    Bqenvij: "fjr5b71"
  },
  "128": {
    Bqenvij: "fele2au"
  },
  root: {
    a9b677: "fly5x3f",
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "ff3glw6"
  }
}, {
  d: [".f1x82gua{height:8px;}", ".fvblgha{height:12px;}", ".fd461yt{height:16px;}", ".fjamq6b{height:20px;}", ".frvgh55{height:24px;}", ".fxldao9{height:28px;}", ".f1d2rq10{height:32px;}", ".f8ljn23{height:36px;}", ".fbhnoac{height:40px;}", ".ff2sm71{height:48px;}", ".fzki0ko{height:56px;}", ".f16k9i2m{height:64px;}", ".f1shusfg{height:72px;}", ".fypu0ge{height:96px;}", ".fjr5b71{height:120px;}", ".fele2au{height:128px;}", ".fly5x3f{width:100%;}", [".ff3glw6{border-radius:4px;}", {
    p: -1
  }]]
});
var useSizeStyles2 = __styles2({
  "8": {
    a9b677: "f1o3cbw4",
    Bqenvij: "f1x82gua"
  },
  "12": {
    a9b677: "frx94fk",
    Bqenvij: "fvblgha"
  },
  "16": {
    a9b677: "fjw5fx7",
    Bqenvij: "fd461yt"
  },
  "20": {
    a9b677: "f64fuq3",
    Bqenvij: "fjamq6b"
  },
  "24": {
    a9b677: "fq4mcun",
    Bqenvij: "frvgh55"
  },
  "28": {
    a9b677: "f1w9dchk",
    Bqenvij: "fxldao9"
  },
  "32": {
    a9b677: "f1szoe96",
    Bqenvij: "f1d2rq10"
  },
  "36": {
    a9b677: "fpdz1er",
    Bqenvij: "f8ljn23"
  },
  "40": {
    a9b677: "feqmc2u",
    Bqenvij: "fbhnoac"
  },
  "48": {
    a9b677: "f124akge",
    Bqenvij: "ff2sm71"
  },
  "56": {
    a9b677: "f1u66zr1",
    Bqenvij: "fzki0ko"
  },
  "64": {
    a9b677: "fa9ln6p",
    Bqenvij: "f16k9i2m"
  },
  "72": {
    a9b677: "fhcae8x",
    Bqenvij: "f1shusfg"
  },
  "96": {
    a9b677: "f1kyr2gn",
    Bqenvij: "fypu0ge"
  },
  "120": {
    a9b677: "fwfqyga",
    Bqenvij: "fjr5b71"
  },
  "128": {
    a9b677: "f1iksgmy",
    Bqenvij: "fele2au"
  }
}, {
  d: [".f1o3cbw4{width:8px;}", ".f1x82gua{height:8px;}", ".frx94fk{width:12px;}", ".fvblgha{height:12px;}", ".fjw5fx7{width:16px;}", ".fd461yt{height:16px;}", ".f64fuq3{width:20px;}", ".fjamq6b{height:20px;}", ".fq4mcun{width:24px;}", ".frvgh55{height:24px;}", ".f1w9dchk{width:28px;}", ".fxldao9{height:28px;}", ".f1szoe96{width:32px;}", ".f1d2rq10{height:32px;}", ".fpdz1er{width:36px;}", ".f8ljn23{height:36px;}", ".feqmc2u{width:40px;}", ".fbhnoac{height:40px;}", ".f124akge{width:48px;}", ".ff2sm71{height:48px;}", ".f1u66zr1{width:56px;}", ".fzki0ko{height:56px;}", ".fa9ln6p{width:64px;}", ".f16k9i2m{height:64px;}", ".fhcae8x{width:72px;}", ".f1shusfg{height:72px;}", ".f1kyr2gn{width:96px;}", ".fypu0ge{height:96px;}", ".fwfqyga{width:120px;}", ".fjr5b71{height:120px;}", ".f1iksgmy{width:128px;}", ".fele2au{height:128px;}"]
});
var useCircleSizeStyles = __styles2({
  root: {
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "f5q2cvs"
  }
}, {
  d: [[".f5q2cvs{border-radius:50%;}", {
    p: -1
  }]]
});
var useSkeletonItemStyles_unstable = (state) => {
  "use no memo";
  const {
    animation,
    appearance,
    size,
    shape
  } = state;
  const rootStyles = useStyles27();
  const rectStyles = useRectangleStyles();
  const sizeStyles = useSizeStyles2();
  const circleStyles = useCircleSizeStyles();
  state.root.className = mergeClasses(skeletonItemClassNames.root, rootStyles.root, animation === "wave" && rootStyles.wave, animation === "pulse" && rootStyles.pulse, appearance === "translucent" && rootStyles.translucent, animation === "pulse" && appearance === "translucent" && rootStyles.translucentPulse, shape === "rectangle" && rectStyles.root, shape === "rectangle" && rectStyles[size], shape === "square" && sizeStyles[size], shape === "circle" && circleStyles.root, shape === "circle" && sizeStyles[size], state.root.className);
  return state;
};

// node_modules/@fluentui/react-skeleton/lib/components/SkeletonItem/SkeletonItem.js
var SkeletonItem = React190.forwardRef((props, ref) => {
  const state = useSkeletonItem_unstable(props, ref);
  useSkeletonItemStyles_unstable(state);
  return renderSkeletonItem_unstable(state);
});
SkeletonItem.displayName = "SkeletonItem";

// node_modules/@fluentui/react-slider/lib/components/Slider/Slider.js
var React193 = __toESM(require_react());

// node_modules/@fluentui/react-slider/lib/components/Slider/useSlider.js
var React192 = __toESM(require_react());

// node_modules/@fluentui/react-slider/lib/components/Slider/useSliderState.js
var React191 = __toESM(require_react());

// node_modules/@fluentui/react-slider/lib/components/Slider/useSliderStyles.styles.js
var sliderClassNames = {
  root: "fui-Slider",
  rail: "fui-Slider__rail",
  thumb: "fui-Slider__thumb",
  input: "fui-Slider__input"
};
var sliderCSSVars = {
  sliderDirectionVar: `--fui-Slider--direction`,
  sliderProgressVar: `--fui-Slider--progress`,
  sliderStepsPercentVar: `--fui-Slider--steps-percent`
};
var {
  sliderDirectionVar,
  sliderStepsPercentVar,
  sliderProgressVar
} = sliderCSSVars;
var useRootStyles9 = __styles2({
  root: {
    qhf8xq: "f10pi13n",
    mc9l5x: "fwk3njj",
    lpbzjs: "f1sdsnyy",
    Bt984gj: "f122n59",
    B7hvi0a: "f1oiokrs"
  },
  small: {
    Bi64ftq: "f1agqo6f",
    Ba19x4e: "f1i7ztpd",
    sshi5w: "f1pha7fy"
  },
  medium: {
    Bi64ftq: "f1a78h9h",
    Ba19x4e: "fuok0yf",
    sshi5w: "f1nxs5xn"
  },
  horizontal: {
    Bf4jedk: "fyvtabn",
    wkccdc: "fgfd48t",
    Budl1dq: "f4t5rw1"
  },
  vertical: {
    sshi5w: "f1pzv1zu",
    wkccdc: "fktlcaf",
    Budl1dq: "fiadc6h"
  },
  enabled: {
    B7wi8oa: "f4l8x3l",
    B250r6j: "f671q34",
    Bpmy4es: "fvfzmw5",
    Buw9y6v: "faw1t00",
    Bq939m0: "fxdgx5",
    gjzr1t: "fii04fa",
    tg7hqu: "f36hzz8",
    ypdvl1: "f1volkfw",
    Bw5jdd4: "f1xddb6",
    Bdjie01: "fcdikl",
    Bvh9j6m: "fhpzgm6",
    Bvsvvpo: "f1q6pm3h"
  },
  disabled: {
    Bpmy4es: "foojseg",
    B7wi8oa: "f1lgdqhv",
    B250r6j: "f1veetlj",
    ypdvl1: "fu12m3e",
    Bw5jdd4: "fi9guym",
    Bdjie01: "fcdjl4u"
  },
  focusIndicatorHorizontal: {
    Brovlpu: "ftqa4ok",
    B486eqv: "f2hkw1w",
    Bssx7fj: "f1b1k54r",
    uh7if5: ["f4ne723", "fqqcjud"],
    clntm0: "fh7aioi",
    Dlk2r6: ["fqqcjud", "f4ne723"],
    Bm3wd5j: "f1k55ka9",
    Bbrhkcr: ["fgclinu", "f16pcs8n"],
    f1oku: "fycbxed",
    aywvf2: ["f16pcs8n", "fgclinu"],
    B2j2mmj: "ffht0p2",
    wigs8: "f1p0ul1q",
    pbfy6t: "f1c901ms",
    B0v4ure: "f1alokd7",
    Byrf0fs: 0,
    Bsiemmq: 0,
    Bwckmig: 0,
    skfxo0: 0,
    Iidy0u: 0,
    B98u21t: 0,
    Bvwlmkc: 0,
    jo1ztg: 0,
    Ba1iezr: 0,
    Blmvk6g: 0,
    B24cy0v: 0,
    Bil7v7r: 0,
    Br3gin4: 0,
    nr063g: 0,
    ghq09: 0,
    Bbgo44z: 0,
    Bseh09z: "fmj8fco",
    az1dzo: 0,
    Ba3ybja: 0,
    B6352mv: 0,
    vppk2z: 0,
    Biaj6j7: "f1iwowo3",
    B2pnrqr: "f1pffoy2",
    B29w5g4: ["f1bmyog6", "f15fv2gd"],
    Bhhzhcn: "fs6b7xr",
    Bec0n69: ["f15fv2gd", "f1bmyog6"]
  },
  focusIndicatorVertical: {
    Brovlpu: "ftqa4ok",
    B486eqv: "f2hkw1w",
    Bssx7fj: "f1b1k54r",
    uh7if5: ["f4ne723", "fqqcjud"],
    clntm0: "fh7aioi",
    Dlk2r6: ["fqqcjud", "f4ne723"],
    Bm3wd5j: "f1k55ka9",
    Bbrhkcr: ["fgclinu", "f16pcs8n"],
    f1oku: "fycbxed",
    aywvf2: ["f16pcs8n", "fgclinu"],
    B2j2mmj: "ffht0p2",
    wigs8: "f1p0ul1q",
    pbfy6t: "f1c901ms",
    B0v4ure: "f1alokd7",
    Byrf0fs: 0,
    Bsiemmq: 0,
    Bwckmig: 0,
    skfxo0: 0,
    Iidy0u: 0,
    B98u21t: 0,
    Bvwlmkc: 0,
    jo1ztg: 0,
    Ba1iezr: 0,
    Blmvk6g: 0,
    B24cy0v: 0,
    Bil7v7r: 0,
    Br3gin4: 0,
    nr063g: 0,
    ghq09: 0,
    Bbgo44z: 0,
    Bseh09z: "fmj8fco",
    az1dzo: 0,
    Ba3ybja: 0,
    B6352mv: 0,
    vppk2z: 0,
    Biaj6j7: "f1iwowo3",
    B2pnrqr: "f1hxpdv8",
    B29w5g4: ["fm5xmfm", "femsgmt"],
    Bhhzhcn: "f1dmxpeg",
    Bec0n69: ["femsgmt", "fm5xmfm"]
  }
}, {
  d: [".f10pi13n{position:relative;}", ".fwk3njj{display:inline-grid;}", ".f1sdsnyy{touch-action:none;}", ".f122n59{align-items:center;}", ".f1oiokrs{justify-items:center;}", ".f1agqo6f{--fui-Slider__thumb--size:16px;}", ".f1i7ztpd{--fui-Slider__rail--size:2px;}", ".f1pha7fy{min-height:24px;}", ".f1a78h9h{--fui-Slider__thumb--size:20px;}", ".fuok0yf{--fui-Slider__rail--size:4px;}", ".f1nxs5xn{min-height:32px;}", ".fyvtabn{min-width:120px;}", ".fgfd48t{grid-template-rows:1fr var(--fui-Slider__thumb--size) 1fr;}", ".f4t5rw1{grid-template-columns:1fr calc(100% - var(--fui-Slider__thumb--size)) 1fr;}", ".f1pzv1zu{min-height:120px;}", ".fktlcaf{grid-template-rows:1fr calc(100% - var(--fui-Slider__thumb--size)) 1fr;}", ".fiadc6h{grid-template-columns:1fr var(--fui-Slider__thumb--size) 1fr;}", ".f4l8x3l{--fui-Slider__rail--color:var(--colorNeutralStrokeAccessible);}", ".f671q34{--fui-Slider__progress--color:var(--colorCompoundBrandBackground);}", ".fvfzmw5{--fui-Slider__thumb--color:var(--colorCompoundBrandBackground);}", ".foojseg{--fui-Slider__thumb--color:var(--colorNeutralForegroundDisabled);}", ".f1lgdqhv{--fui-Slider__rail--color:var(--colorNeutralBackgroundDisabled);}", ".f1veetlj{--fui-Slider__progress--color:var(--colorNeutralForegroundDisabled);}", ".f1b1k54r[data-fui-focus-within]:focus-within{border-top-color:transparent;}", ".f4ne723[data-fui-focus-within]:focus-within{border-right-color:transparent;}", ".fqqcjud[data-fui-focus-within]:focus-within{border-left-color:transparent;}", ".fh7aioi[data-fui-focus-within]:focus-within{border-bottom-color:transparent;}", '.ffht0p2[data-fui-focus-within]:focus-within::after{content:"";}', ".f1p0ul1q[data-fui-focus-within]:focus-within::after{position:absolute;}", ".f1c901ms[data-fui-focus-within]:focus-within::after{pointer-events:none;}", ".f1alokd7[data-fui-focus-within]:focus-within::after{z-index:1;}", [".fmj8fco[data-fui-focus-within]:focus-within::after{border:2px solid var(--colorStrokeFocus2);}", {
    p: -2
  }], [".f1iwowo3[data-fui-focus-within]:focus-within::after{border-radius:var(--borderRadiusMedium);}", {
    p: -1
  }], ".f1pffoy2[data-fui-focus-within]:focus-within::after{top:calc(0px - 2px - -2px);}", ".f1bmyog6[data-fui-focus-within]:focus-within::after{right:calc(0px - 2px - 8px);}", ".f15fv2gd[data-fui-focus-within]:focus-within::after{left:calc(0px - 2px - 8px);}", ".fs6b7xr[data-fui-focus-within]:focus-within::after{bottom:calc(0px - 2px - -2px);}", [".fmj8fco[data-fui-focus-within]:focus-within::after{border:2px solid var(--colorStrokeFocus2);}", {
    p: -2
  }], [".f1iwowo3[data-fui-focus-within]:focus-within::after{border-radius:var(--borderRadiusMedium);}", {
    p: -1
  }], ".f1hxpdv8[data-fui-focus-within]:focus-within::after{top:calc(0px - 2px - 6px);}", ".fm5xmfm[data-fui-focus-within]:focus-within::after{right:calc(0px - 2px - 4px);}", ".femsgmt[data-fui-focus-within]:focus-within::after{left:calc(0px - 2px - 4px);}", ".f1dmxpeg[data-fui-focus-within]:focus-within::after{bottom:calc(0px - 2px - 6px);}"],
  h: [".faw1t00:hover{--fui-Slider__thumb--color:var(--colorCompoundBrandBackgroundHover);}", ".fxdgx5:hover{--fui-Slider__progress--color:var(--colorCompoundBrandBackgroundHover);}"],
  a: [".fii04fa:active{--fui-Slider__thumb--color:var(--colorCompoundBrandBackgroundPressed);}", ".f36hzz8:active{--fui-Slider__progress--color:var(--colorCompoundBrandBackgroundPressed);}"],
  m: [["@media (forced-colors: active){.f1volkfw{--fui-Slider__rail--color:CanvasText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1xddb6{--fui-Slider__thumb--color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fcdikl{--fui-Slider__progress--color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fhpzgm6:hover{--fui-Slider__thumb--color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1q6pm3h:hover{--fui-Slider__progress--color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fu12m3e{--fui-Slider__rail--color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fi9guym{--fui-Slider__thumb--color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fcdjl4u{--fui-Slider__progress--color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1k55ka9[data-fui-focus-within]:focus-within::after{border-top-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f16pcs8n[data-fui-focus-within]:focus-within::after{border-left-color:Highlight;}.fgclinu[data-fui-focus-within]:focus-within::after{border-right-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fycbxed[data-fui-focus-within]:focus-within::after{border-bottom-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }]],
  f: [".ftqa4ok:focus{outline-style:none;}"],
  i: [".f2hkw1w:focus-visible{outline-style:none;}"]
});
var useRailStyles = __styles2({
  rail: {
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "f1kijzfu",
    Bkecrkj: "f1aehjj5",
    Ijaq50: "faunodf",
    nk6f5a: "f88nxoq",
    Br312pm: "fd46tj4",
    Bw0ie65: "f1e2fz10",
    qhf8xq: "f10pi13n",
    Bvjb7m6: "fdgv6k0",
    Bcmaq0h: "fizngqt",
    Bpd4iqm: "fpvhumw",
    oeaueh: "f1yog68k",
    Bw0xxkn: "f13sgyd8",
    Ftih45: "fzhtfnv",
    Brfgrao: "f1j7ml58",
    Bbn5juq: "fx36ao7",
    Brdvuy1: "fux3rle"
  },
  horizontal: {
    a9b677: "fly5x3f",
    Bqenvij: "f1cy86ho",
    Fbdkly: ["f1heqfse", "fkh49vu"],
    mdwyqc: ["fkh49vu", "f1heqfse"],
    Baz25je: "f16tdq4e"
  },
  vertical: {
    a9b677: "fqxfnkd",
    Bqenvij: "f1l02sjl",
    Ccq8qp: "f1rik0od",
    Bciustq: "f14xwovp",
    lawp4y: "febq2dz"
  }
}, {
  d: [[".f1kijzfu{border-radius:var(--borderRadiusXLarge);}", {
    p: -1
  }], ".f1aehjj5{pointer-events:none;}", ".faunodf{grid-row-start:2;}", ".f88nxoq{grid-row-end:2;}", ".fd46tj4{grid-column-start:2;}", ".f1e2fz10{grid-column-end:2;}", ".f10pi13n{position:relative;}", ".fdgv6k0{forced-color-adjust:none;}", ".fizngqt{background-image:linear-gradient(\n      var(--fui-Slider--direction),\n      var(--fui-Slider__progress--color) 0%,\n      var(--fui-Slider__progress--color) var(--fui-Slider--progress),\n      var(--fui-Slider__rail--color) var(--fui-Slider--progress)\n    );}", ".fpvhumw{outline-width:1px;}", ".f1yog68k{outline-style:solid;}", ".f13sgyd8{outline-color:var(--colorTransparentStroke);}", ".fzhtfnv::before{content:'';}", ".f1j7ml58::before{position:absolute;}", ".fx36ao7::before{background-image:repeating-linear-gradient(\n        var(--fui-Slider--direction),\n        #0000 0%,\n        #0000 calc(var(--fui-Slider--steps-percent) - 1px),\n        var(--colorNeutralBackground1) calc(var(--fui-Slider--steps-percent) - 1px),\n        var(--colorNeutralBackground1) var(--fui-Slider--steps-percent)\n      );}", ".fly5x3f{width:100%;}", ".f1cy86ho{height:var(--fui-Slider__rail--size);}", ".f1heqfse::before{left:-1px;}", ".fkh49vu::before{right:-1px;}", ".f16tdq4e::before{height:var(--fui-Slider__rail--size);}", ".fqxfnkd{width:var(--fui-Slider__rail--size);}", ".f1l02sjl{height:100%;}", ".f1rik0od::before{width:var(--fui-Slider__rail--size);}", ".f14xwovp::before{top:-1px;}", ".febq2dz::before{bottom:1px;}"],
  m: [["@media (forced-colors: active){.fux3rle::before{background-image:repeating-linear-gradient(\n          var(--fui-Slider--direction),\n          #0000 0%,\n          #0000 calc(var(--fui-Slider--steps-percent) - 1px),\n          HighlightText calc(var(--fui-Slider--steps-percent) - 1px),\n          HighlightText var(--fui-Slider--steps-percent)\n        );}}", {
    m: "(forced-colors: active)"
  }]]
});
var useThumbStyles = __styles2({
  thumb: {
    Ijaq50: "faunodf",
    nk6f5a: "f88nxoq",
    Br312pm: "fd46tj4",
    Bw0ie65: "f1e2fz10",
    qhf8xq: "f1euv43f",
    a9b677: "f174ca62",
    Bqenvij: "f1yfdkfd",
    Bkecrkj: "f1aehjj5",
    oeaueh: "f1s6fcnf",
    Bvjb7m6: "fdgv6k0",
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "f44lkw9",
    E5pizo: "fof7hq0",
    De3pzq: "foksa45",
    Brfgrao: "f1j7ml58",
    Bciustq: "f14u7mkt",
    Fbdkly: ["f5zrw40", "f1ks5ppg"],
    lawp4y: "fto0uou",
    mdwyqc: ["f1ks5ppg", "f5zrw40"],
    r59vdv: 0,
    Budzafs: 0,
    ck0cow: 0,
    n07z76: 0,
    Gng75u: "fielpny",
    Bcvre1j: "fyl8oag",
    Ftih45: "fzhtfnv",
    Bcgcnre: 0,
    Bqjgrrk: 0,
    qa3bma: 0,
    y0oebl: 0,
    Biqmznv: 0,
    Bm6vgfq: 0,
    Bbv0w2i: 0,
    uvfttm: 0,
    eqrjj: 0,
    Bk5zm6e: 0,
    m598lv: 0,
    B4f6apu: 0,
    ydt019: 0,
    Bq4z7u6: 0,
    Bdkvgpv: 0,
    B0qfbqy: 0,
    kj8mxx: "f1fsco4d"
  },
  disabled: {
    Bcgcnre: 0,
    Bqjgrrk: 0,
    qa3bma: 0,
    y0oebl: 0,
    Biqmznv: 0,
    Bm6vgfq: 0,
    Bbv0w2i: 0,
    uvfttm: 0,
    eqrjj: 0,
    Bk5zm6e: 0,
    m598lv: 0,
    B4f6apu: 0,
    ydt019: 0,
    Bq4z7u6: 0,
    Bdkvgpv: 0,
    B0qfbqy: 0,
    kj8mxx: "f1pv9hn4"
  },
  horizontal: {
    Bz10aip: ["f13gfj74", "f1nfknbn"],
    oyh7mz: ["f1fj3zth", "fcf9u6w"]
  },
  vertical: {
    Bz10aip: "f5cv5a3",
    B5kzvoi: "feeniun"
  }
}, {
  d: [".faunodf{grid-row-start:2;}", ".f88nxoq{grid-row-end:2;}", ".fd46tj4{grid-column-start:2;}", ".f1e2fz10{grid-column-end:2;}", ".f1euv43f{position:absolute;}", ".f174ca62{width:var(--fui-Slider__thumb--size);}", ".f1yfdkfd{height:var(--fui-Slider__thumb--size);}", ".f1aehjj5{pointer-events:none;}", ".f1s6fcnf{outline-style:none;}", ".fdgv6k0{forced-color-adjust:none;}", [".f44lkw9{border-radius:var(--borderRadiusCircular);}", {
    p: -1
  }], ".fof7hq0{box-shadow:0 0 0 calc(var(--fui-Slider__thumb--size) * .2) var(--colorNeutralBackground1) inset;}", ".foksa45{background-color:var(--fui-Slider__thumb--color);}", ".f1j7ml58::before{position:absolute;}", ".f14u7mkt::before{top:0px;}", ".f5zrw40::before{left:0px;}", ".f1ks5ppg::before{right:0px;}", ".fto0uou::before{bottom:0px;}", [".fielpny::before{border-radius:var(--borderRadiusCircular);}", {
    p: -1
  }], ".fyl8oag::before{box-sizing:border-box;}", ".fzhtfnv::before{content:'';}", [".f1fsco4d::before{border:calc(var(--fui-Slider__thumb--size) * .05) solid var(--colorNeutralStroke1);}", {
    p: -2
  }], [".f1pv9hn4::before{border:calc(var(--fui-Slider__thumb--size) * .05) solid var(--colorNeutralForegroundDisabled);}", {
    p: -2
  }], ".f13gfj74{transform:translateX(-50%);}", ".f1nfknbn{transform:translateX(50%);}", ".f1fj3zth{left:var(--fui-Slider--progress);}", ".fcf9u6w{right:var(--fui-Slider--progress);}", ".f5cv5a3{transform:translateY(50%);}", ".feeniun{bottom:var(--fui-Slider--progress);}"]
});
var useInputStyles4 = __styles2({
  input: {
    Bceei9c: "f1k6fduh",
    abs64n: "fk73vx1",
    Ijaq50: "f16hsg94",
    nk6f5a: "f1nzqi2z",
    Br312pm: "fwpfdsa",
    Bw0ie65: "fuur7zz",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f1mk8lai",
    jrapky: 0,
    Frg6f3: 0,
    t21cq0: 0,
    B6of3ja: 0,
    B74szlk: "f1s184ao"
  },
  disabled: {
    Bceei9c: "f158kwzp"
  },
  horizontal: {
    Bqenvij: "f1yfdkfd",
    a9b677: "fly5x3f"
  },
  vertical: {
    Bqenvij: "f1l02sjl",
    a9b677: "f174ca62",
    Brp00wb: "f1r9mf01"
  }
}, {
  d: [".f1k6fduh{cursor:pointer;}", ".fk73vx1{opacity:0;}", ".f16hsg94{grid-row-start:1;}", ".f1nzqi2z{grid-row-end:-1;}", ".fwpfdsa{grid-column-start:1;}", ".fuur7zz{grid-column-end:-1;}", [".f1mk8lai{padding:0;}", {
    p: -1
  }], [".f1s184ao{margin:0;}", {
    p: -1
  }], ".f158kwzp{cursor:default;}", ".f1yfdkfd{height:var(--fui-Slider__thumb--size);}", ".fly5x3f{width:100%;}", ".f1l02sjl{height:100%;}", ".f174ca62{width:var(--fui-Slider__thumb--size);}", ".f1r9mf01{-webkit-appearance:slider-vertical;}"]
});
var useSliderStyles_unstable = (state) => {
  "use no memo";
  const rootStyles = useRootStyles9();
  const railStyles = useRailStyles();
  const thumbStyles = useThumbStyles();
  const inputStyles = useInputStyles4();
  const isVertical = state.vertical;
  state.root.className = mergeClasses(sliderClassNames.root, rootStyles.root, isVertical ? rootStyles.focusIndicatorVertical : rootStyles.focusIndicatorHorizontal, rootStyles[state.size], isVertical ? rootStyles.vertical : rootStyles.horizontal, state.disabled ? rootStyles.disabled : rootStyles.enabled, state.root.className);
  state.rail.className = mergeClasses(sliderClassNames.rail, railStyles.rail, isVertical ? railStyles.vertical : railStyles.horizontal, state.rail.className);
  state.thumb.className = mergeClasses(sliderClassNames.thumb, thumbStyles.thumb, isVertical ? thumbStyles.vertical : thumbStyles.horizontal, state.disabled && thumbStyles.disabled, state.thumb.className);
  state.input.className = mergeClasses(sliderClassNames.input, inputStyles.input, isVertical ? inputStyles.vertical : inputStyles.horizontal, state.disabled && inputStyles.disabled, state.input.className);
  return state;
};

// node_modules/@fluentui/react-slider/lib/components/Slider/useSliderState.js
var { sliderStepsPercentVar: sliderStepsPercentVar2, sliderProgressVar: sliderProgressVar2, sliderDirectionVar: sliderDirectionVar2 } = sliderCSSVars;
var getPercent = (value, min, max) => {
  return max === min ? 0 : (value - min) / (max - min) * 100;
};
var useSliderState_unstable = (state, props) => {
  "use no memo";
  const { min = 0, max = 100, step } = props;
  const { dir } = useFluent();
  const [currentValue, setCurrentValue] = useControllableState({
    state: props.value,
    defaultState: props.defaultValue,
    initialState: 0
  });
  const clampedValue = clamp(currentValue, min, max);
  const valuePercent = getPercent(clampedValue, min, max);
  const inputOnChange = state.input.onChange;
  const propsOnChange = props.onChange;
  const onChange = useEventCallback((ev) => {
    const newValue = Number(ev.target.value);
    setCurrentValue(clamp(newValue, min, max));
    if (inputOnChange && inputOnChange !== propsOnChange) {
      inputOnChange(ev);
    } else if (propsOnChange) {
      propsOnChange(ev, {
        value: newValue
      });
    }
  });
  const rootVariables = {
    [sliderDirectionVar2]: state.vertical ? "0deg" : dir === "ltr" ? "90deg" : "270deg",
    [sliderStepsPercentVar2]: step && step > 0 ? `${step * 100 / (max - min)}%` : "",
    [sliderProgressVar2]: `${valuePercent}%`
  };
  state.root.style = {
    ...rootVariables,
    ...state.root.style
  };
  state.input.value = clampedValue;
  state.input.onChange = onChange;
  return state;
};

// node_modules/@fluentui/react-slider/lib/components/Slider/useSlider.js
var useSlider_unstable = (props, ref) => {
  props = useFieldControlProps_unstable(props, {
    supportsLabelFor: true
  });
  const nativeProps = getPartitionedNativeProps({
    props,
    primarySlotTagName: "input",
    excludedPropNames: [
      "onChange",
      "size"
    ]
  });
  const {
    disabled,
    vertical,
    size = "medium",
    // Slots
    root,
    input,
    rail,
    thumb
  } = props;
  const state = {
    disabled,
    size,
    vertical,
    components: {
      input: "input",
      rail: "div",
      root: "div",
      thumb: "div"
    },
    root: slot_exports.always(root, {
      defaultProps: nativeProps.root,
      elementType: "div"
    }),
    input: slot_exports.always(input, {
      defaultProps: {
        id: useId("slider-", props.id),
        ref,
        ...nativeProps.primary,
        type: "range",
        orient: vertical ? "vertical" : void 0
      },
      elementType: "input"
    }),
    rail: slot_exports.always(rail, {
      elementType: "div"
    }),
    thumb: slot_exports.always(thumb, {
      elementType: "div"
    })
  };
  state.root.ref = useMergedRefs(state.root.ref, useFocusWithin());
  useSliderState_unstable(state, props);
  return state;
};

// node_modules/@fluentui/react-slider/lib/components/Slider/renderSlider.js
var renderSlider_unstable = (state) => {
  assertSlots(state);
  return jsxs(state.root, {
    children: [
      jsx(state.input, {}),
      jsx(state.rail, {}),
      jsx(state.thumb, {})
    ]
  });
};

// node_modules/@fluentui/react-slider/lib/components/Slider/Slider.js
var Slider = React193.forwardRef((props, ref) => {
  const state = useSlider_unstable(props, ref);
  useSliderStyles_unstable(state);
  useCustomStyleHook("useSliderStyles_unstable")(state);
  return renderSlider_unstable(state);
});
Slider.displayName = "Slider";

// node_modules/@fluentui/react-slider/lib/components/Slider/Slider.types.js
var React194 = __toESM(require_react());

// node_modules/@fluentui/react-spinbutton/lib/components/SpinButton/SpinButton.js
var React196 = __toESM(require_react());

// node_modules/@fluentui/react-spinbutton/lib/components/SpinButton/useSpinButton.js
var React195 = __toESM(require_react());

// node_modules/@fluentui/react-spinbutton/lib/utils/clamp.js
var clamp2 = (value, min, max) => {
  let nextValue = value;
  if (min !== void 0) {
    if (max !== void 0 && min > max) {
      const error = new Error();
      if (true) {
        console.error([
          `"min" value "${min}" is greater than "max" value "${max}".`,
          '"min" must be less than or equal to "max".',
          `Returning value "${value}".`,
          error.stack
        ].join());
      }
      return value;
    }
    nextValue = Math.max(min, nextValue);
  }
  if (max !== void 0) {
    nextValue = Math.min(max, nextValue);
  }
  return nextValue;
};

// node_modules/@fluentui/react-spinbutton/lib/utils/getBound.js
var getBound = (value, min, max) => {
  if (min !== void 0 && value === min) {
    if (max === min) {
      return "both";
    }
    return "min";
  } else if (max !== void 0 && value === max) {
    return "max";
  }
  return "none";
};

// node_modules/@fluentui/react-spinbutton/lib/utils/precision.js
function calculatePrecision(value) {
  const groups = /[1-9]([0]+$)|\.([0-9]*)/.exec(String(value));
  if (!groups) {
    return 0;
  }
  if (groups[1]) {
    return -groups[1].length;
  }
  if (groups[2]) {
    return groups[2].length;
  }
  return 0;
}
function precisionRound(value, precision, base = 10) {
  const exp = Math.pow(base, precision);
  return Math.round(value * exp) / exp;
}

// node_modules/@fluentui/react-spinbutton/lib/components/SpinButton/useSpinButton.js
var DEFAULT_SPIN_DELAY_MS = 150;
var MIN_SPIN_DELAY_MS = 80;
var MAX_SPIN_TIME_MS = 1e3;
var lerp = (start, end, percent) => start + (end - start) * percent;
var useSpinButton_unstable = (props, ref) => {
  props = useFieldControlProps_unstable(props, {
    supportsLabelFor: true,
    supportsRequired: true
  });
  const nativeProps = getPartitionedNativeProps({
    props,
    primarySlotTagName: "input",
    excludedPropNames: [
      "defaultValue",
      "max",
      "min",
      "onChange",
      "size",
      "value"
    ]
  });
  const overrides = useOverrides();
  var _overrides_inputDefaultAppearance;
  const { value, displayValue, defaultValue, min, max, step = 1, stepPage = 1, precision: precisionFromProps, onChange, size = "medium", appearance = (_overrides_inputDefaultAppearance = overrides.inputDefaultAppearance) !== null && _overrides_inputDefaultAppearance !== void 0 ? _overrides_inputDefaultAppearance : "outline", root, input, incrementButton, decrementButton } = props;
  const precision = React195.useMemo(() => {
    return precisionFromProps !== null && precisionFromProps !== void 0 ? precisionFromProps : Math.max(calculatePrecision(step), 0);
  }, [
    precisionFromProps,
    step
  ]);
  const [currentValue, setCurrentValue] = useControllableState({
    state: value,
    defaultState: defaultValue,
    initialState: 0
  });
  const isControlled = value !== void 0;
  const [textValue, setTextValue] = React195.useState(void 0);
  const [keyboardSpinState, setKeyboardSpinState] = React195.useState("rest");
  const internalState = React195.useRef({
    value: currentValue,
    spinState: "rest",
    spinTime: 0,
    spinDelay: DEFAULT_SPIN_DELAY_MS,
    atBound: currentValue !== null ? getBound(precisionRound(currentValue, precision), min, max) : "none"
  });
  const [setStepTimeout, clearStepTimeout] = useTimeout();
  const stepValue = (e, direction, startFrom) => {
    let startValue = internalState.current.value;
    if (startFrom) {
      const num = parseFloat(startFrom);
      if (!isNaN(num)) {
        startValue = num;
      }
    }
    const val = startValue;
    const dir = direction === "up" || direction === "upPage" ? 1 : -1;
    const stepSize = direction === "upPage" || direction === "downPage" ? stepPage : step;
    if (val === null) {
      const stepStart = min === void 0 ? 0 : min;
      const nullStep = clamp2(stepStart + stepSize * dir, min, max);
      commit(e, nullStep);
      return;
    }
    let newValue = val + stepSize * dir;
    if (!Number.isNaN(newValue)) {
      newValue = clamp2(newValue, min, max);
    }
    commit(e, newValue);
    if (internalState.current.spinState !== "rest") {
      setStepTimeout(() => {
        internalState.current.spinTime += internalState.current.spinDelay;
        internalState.current.spinDelay = lerp(DEFAULT_SPIN_DELAY_MS, MIN_SPIN_DELAY_MS, internalState.current.spinTime / MAX_SPIN_TIME_MS);
        stepValue(e, direction);
      }, internalState.current.spinDelay);
    }
  };
  const handleInputChange = (e) => {
    if (!internalState.current.previousTextValue) {
      internalState.current.previousTextValue = textValue !== null && textValue !== void 0 ? textValue : String(currentValue);
    }
    const newValue = e.target.value;
    setTextValue(newValue);
  };
  const handleIncrementMouseDown = (e) => {
    internalState.current.spinState = "up";
    stepValue(e, "up");
  };
  const handleDecrementMouseDown = (e) => {
    internalState.current.spinState = "down";
    stepValue(e, "down");
  };
  const handleStepMouseUpOrLeave = (e) => {
    clearStepTimeout();
    internalState.current.spinState = "rest";
    internalState.current.spinDelay = DEFAULT_SPIN_DELAY_MS;
    internalState.current.spinTime = 0;
  };
  const handleBlur = (e) => {
    commit(e, currentValue, textValue);
    internalState.current.previousTextValue = void 0;
  };
  const handleKeyDown = (e) => {
    let nextKeyboardSpinState = "rest";
    if (e.key === ArrowUp) {
      stepValue(e, "up", textValue);
      nextKeyboardSpinState = "up";
    } else if (e.key === ArrowDown) {
      stepValue(e, "down", textValue);
      nextKeyboardSpinState = "down";
    } else if (e.key === PageUp) {
      e.preventDefault();
      stepValue(e, "upPage", textValue);
      nextKeyboardSpinState = "up";
    } else if (e.key === PageDown) {
      e.preventDefault();
      stepValue(e, "downPage", textValue);
      nextKeyboardSpinState = "down";
    } else if (!e.shiftKey && e.key === Home && min !== void 0) {
      commit(e, min);
      nextKeyboardSpinState = "down";
    } else if (!e.shiftKey && e.key === End && max !== void 0) {
      commit(e, max);
      nextKeyboardSpinState = "up";
    } else if (e.key === Enter) {
      commit(e, currentValue, textValue);
      internalState.current.previousTextValue = void 0;
    } else if (e.key === Escape) {
      if (internalState.current.previousTextValue) {
        setTextValue(void 0);
        internalState.current.previousTextValue = void 0;
      }
    }
    if (keyboardSpinState !== nextKeyboardSpinState) {
      setKeyboardSpinState(nextKeyboardSpinState);
    }
  };
  const handleKeyUp = (e) => {
    if (keyboardSpinState !== "rest") {
      setKeyboardSpinState("rest");
      internalState.current.spinState = "rest";
    }
  };
  const commit = (e, newValue, newDisplayValue) => {
    const valueChanged = newValue !== void 0 && currentValue !== newValue;
    const displayValueChanged = newDisplayValue !== void 0 && internalState.current.previousTextValue !== void 0 && internalState.current.previousTextValue !== newDisplayValue;
    let roundedValue;
    if (valueChanged) {
      roundedValue = precisionRound(newValue, precision);
      setCurrentValue(roundedValue);
    } else if (displayValueChanged && !isControlled) {
      const nextValue = parseFloat(newDisplayValue);
      if (!isNaN(nextValue)) {
        setCurrentValue(precisionRound(nextValue, precision));
      }
    }
    if (valueChanged || displayValueChanged) {
      onChange === null || onChange === void 0 ? void 0 : onChange(e, {
        value: roundedValue,
        displayValue: newDisplayValue
      });
    }
    setTextValue(void 0);
  };
  let valueToDisplay;
  if (textValue !== void 0) {
    valueToDisplay = textValue;
  } else if (value === null || currentValue === null) {
    valueToDisplay = displayValue !== null && displayValue !== void 0 ? displayValue : "";
    internalState.current.value = null;
    internalState.current.atBound = "none";
  } else {
    const roundedValue = precisionRound(currentValue, precision);
    internalState.current.value = roundedValue;
    internalState.current.atBound = getBound(roundedValue, min, max);
    if (isControlled) {
      valueToDisplay = displayValue !== null && displayValue !== void 0 ? displayValue : String(roundedValue);
    } else {
      valueToDisplay = String(roundedValue);
    }
  }
  const state = {
    size,
    appearance,
    spinState: keyboardSpinState,
    atBound: internalState.current.atBound,
    components: {
      root: "span",
      input: "input",
      incrementButton: "button",
      decrementButton: "button"
    },
    root: slot_exports.always(root, {
      defaultProps: nativeProps.root,
      elementType: "span"
    }),
    input: slot_exports.always(input, {
      defaultProps: {
        ref,
        autoComplete: "off",
        role: "spinbutton",
        appearance,
        type: "text",
        ...nativeProps.primary
      },
      elementType: "input"
    }),
    incrementButton: slot_exports.always(incrementButton, {
      defaultProps: {
        tabIndex: -1,
        children: React195.createElement(ChevronUp16Regular, null),
        disabled: nativeProps.primary.disabled,
        "aria-label": "Increment value",
        type: "button"
      },
      elementType: "button"
    }),
    decrementButton: slot_exports.always(decrementButton, {
      defaultProps: {
        tabIndex: -1,
        children: React195.createElement(ChevronDown16Regular, null),
        disabled: nativeProps.primary.disabled,
        "aria-label": "Decrement value",
        type: "button"
      },
      elementType: "button"
    })
  };
  state.input.value = valueToDisplay;
  state.input["aria-valuemin"] = min;
  state.input["aria-valuemax"] = max;
  var _state_input_ariavaluetext;
  state.input["aria-valuetext"] = (_state_input_ariavaluetext = state.input["aria-valuetext"]) !== null && _state_input_ariavaluetext !== void 0 ? _state_input_ariavaluetext : value !== void 0 && displayValue || void 0;
  state.input.onChange = mergeCallbacks(state.input.onChange, handleInputChange);
  state.input.onBlur = mergeCallbacks(state.input.onBlur, handleBlur);
  state.input.onKeyDown = mergeCallbacks(state.input.onKeyDown, handleKeyDown);
  state.input.onKeyUp = mergeCallbacks(state.input.onKeyUp, handleKeyUp);
  state.incrementButton.onMouseDown = mergeCallbacks(handleIncrementMouseDown, state.incrementButton.onMouseDown);
  state.incrementButton.onMouseUp = mergeCallbacks(state.incrementButton.onMouseUp, handleStepMouseUpOrLeave);
  state.incrementButton.onMouseLeave = mergeCallbacks(state.incrementButton.onMouseLeave, handleStepMouseUpOrLeave);
  state.decrementButton.onMouseDown = mergeCallbacks(handleDecrementMouseDown, state.decrementButton.onMouseDown);
  state.decrementButton.onMouseUp = mergeCallbacks(state.decrementButton.onMouseUp, handleStepMouseUpOrLeave);
  state.decrementButton.onMouseLeave = mergeCallbacks(state.decrementButton.onMouseLeave, handleStepMouseUpOrLeave);
  return state;
};

// node_modules/@fluentui/react-spinbutton/lib/components/SpinButton/renderSpinButton.js
var renderSpinButton_unstable = (state) => {
  assertSlots(state);
  return jsxs(state.root, {
    children: [
      jsx(state.input, {}),
      jsx(state.incrementButton, {}),
      jsx(state.decrementButton, {})
    ]
  });
};

// node_modules/@fluentui/react-spinbutton/lib/components/SpinButton/useSpinButtonStyles.styles.js
var spinButtonClassNames = {
  root: "fui-SpinButton",
  input: "fui-SpinButton__input",
  incrementButton: "fui-SpinButton__incrementButton",
  decrementButton: "fui-SpinButton__decrementButton"
};
var spinButtonExtraClassNames = {
  buttonActive: "fui-SpinButton__button_active"
};
var useRootClassName5 = __resetStyles("r109xulx", "r1h2jnch", {
  r: [".r109xulx{display:inline-grid;grid-template-columns:1fr 24px;grid-template-rows:1fr 1fr;column-gap:var(--spacingHorizontalXS);row-gap:0;position:relative;isolation:isolate;vertical-align:middle;background-color:var(--colorNeutralBackground1);min-height:32px;padding:0 0 0 var(--spacingHorizontalMNudge);border-radius:var(--borderRadiusMedium);}", '.r109xulx::before{content:"";box-sizing:border-box;position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none;z-index:10;border:1px solid var(--colorNeutralStroke1);border-bottom-color:var(--colorNeutralStrokeAccessible);border-radius:var(--borderRadiusMedium);}', '.r109xulx::after{box-sizing:border-box;content:"";position:absolute;right:0;bottom:0;left:0;z-index:20;height:max(2px, var(--borderRadiusMedium));border-bottom-left-radius:var(--borderRadiusMedium);border-bottom-right-radius:var(--borderRadiusMedium);border-bottom:2px solid var(--colorCompoundBrandStroke);clip-path:inset(calc(100% - 2px) 0 0 0);transform:scaleX(0);transition-property:transform;transition-duration:var(--durationUltraFast);transition-delay:var(--curveAccelerateMid);}', ".r109xulx:focus-within::after{transform:scaleX(1);transition-property:transform;transition-duration:var(--durationNormal);transition-delay:var(--curveDecelerateMid);}", ".r109xulx:focus-within:active::after{border-bottom-color:var(--colorCompoundBrandStrokePressed);}", ".r109xulx:focus-within{outline:2px solid transparent;}", ".r1h2jnch{display:inline-grid;grid-template-columns:1fr 24px;grid-template-rows:1fr 1fr;column-gap:var(--spacingHorizontalXS);row-gap:0;position:relative;isolation:isolate;vertical-align:middle;background-color:var(--colorNeutralBackground1);min-height:32px;padding:0 var(--spacingHorizontalMNudge) 0 0;border-radius:var(--borderRadiusMedium);}", '.r1h2jnch::before{content:"";box-sizing:border-box;position:absolute;top:0;left:0;bottom:0;right:0;pointer-events:none;z-index:10;border:1px solid var(--colorNeutralStroke1);border-bottom-color:var(--colorNeutralStrokeAccessible);border-radius:var(--borderRadiusMedium);}', '.r1h2jnch::after{box-sizing:border-box;content:"";position:absolute;left:0;bottom:0;right:0;z-index:20;height:max(2px, var(--borderRadiusMedium));border-bottom-right-radius:var(--borderRadiusMedium);border-bottom-left-radius:var(--borderRadiusMedium);border-bottom:2px solid var(--colorCompoundBrandStroke);clip-path:inset(calc(100% - 2px) 0 0 0);transform:scaleX(0);transition-property:transform;transition-duration:var(--durationUltraFast);transition-delay:var(--curveAccelerateMid);}', ".r1h2jnch:focus-within::after{transform:scaleX(1);transition-property:transform;transition-duration:var(--durationNormal);transition-delay:var(--curveDecelerateMid);}", ".r1h2jnch:focus-within:active::after{border-bottom-color:var(--colorCompoundBrandStrokePressed);}", ".r1h2jnch:focus-within{outline:2px solid transparent;}"],
  s: ["@media screen and (prefers-reduced-motion: reduce){.r109xulx::after{transition-duration:0.01ms;transition-delay:0.01ms;}}", "@media screen and (prefers-reduced-motion: reduce){.r109xulx:focus-within::after{transition-duration:0.01ms;transition-delay:0.01ms;}}", "@media screen and (prefers-reduced-motion: reduce){.r1h2jnch::after{transition-duration:0.01ms;transition-delay:0.01ms;}}", "@media screen and (prefers-reduced-motion: reduce){.r1h2jnch:focus-within::after{transition-duration:0.01ms;transition-delay:0.01ms;}}"]
});
var useRootStyles10 = __styles2({
  small: {
    sshi5w: "f1pha7fy",
    Bahqtrf: "fk6fouc",
    Be2twd7: "fy9rknc",
    Bhrd7zp: "figsok6",
    Bg96gwp: "fwrc4pm",
    uwmqm3: ["f1f5gg8d", "f1vdfbxk"]
  },
  medium: {},
  outline: {},
  outlineInteractive: {
    Bo3r8zu: "f1w2y1rc",
    Hpvxnh: ["f1gofhvl", "f18htlvq"],
    Bx11ytk: "ffcnd28",
    B1rg0w0: ["f18htlvq", "f1gofhvl"],
    Bsg1tlv: "f6lmxco",
    Brjw370: ["fcoc0mf", "f15r4wkl"],
    xcfy85: "f1ipdth8",
    Bcc6kan: ["f15r4wkl", "fcoc0mf"]
  },
  underline: {
    B0qfbqy: "f1o236ok",
    B4f6apu: ["faeg28l", "f64aojp"],
    y0oebl: "fdw6hkg",
    uvfttm: ["f64aojp", "faeg28l"],
    r59vdv: 0,
    Budzafs: 0,
    ck0cow: 0,
    n07z76: 0,
    Gng75u: "f1xyh2jw"
  },
  underlineInteractive: {
    Bx11ytk: "ffcnd28",
    xcfy85: "f1ipdth8",
    d9w3h3: 0,
    B3778ie: 0,
    B4j8arr: 0,
    Bl18szs: 0,
    Blrzh8d: "fkp7w9h"
  },
  filled: {
    Bcgcnre: 0,
    Bqjgrrk: 0,
    qa3bma: 0,
    y0oebl: 0,
    Biqmznv: 0,
    Bm6vgfq: 0,
    Bbv0w2i: 0,
    uvfttm: 0,
    eqrjj: 0,
    Bk5zm6e: 0,
    m598lv: 0,
    B4f6apu: 0,
    ydt019: 0,
    Bq4z7u6: 0,
    Bdkvgpv: 0,
    B0qfbqy: 0,
    kj8mxx: "f1kc0wz4"
  },
  "filled-darker": {
    De3pzq: "f16xq7d1"
  },
  "filled-lighter": {
    De3pzq: "fxugw4r"
  },
  filledInteractive: {
    B05mzqr: "f1xqt08",
    tb9y6h: ["fzt5lgo", "f8tv3r9"],
    jcehpj: "fyhrops",
    B23o0hn: ["f8tv3r9", "fzt5lgo"]
  },
  invalid: {
    emecyz: "fl48pg9",
    lz0pba: ["f1a168p3", "f1pvdymy"],
    Bo1k74p: "f11knvgl",
    Ba322q7: ["f1pvdymy", "f1a168p3"]
  },
  disabled: {
    Bceei9c: "fdrzuqr",
    De3pzq: "f1c21dwh",
    Bq4z7u6: "f1a0lfh7",
    Bk5zm6e: ["f1p2ejm6", "fmzytvz"],
    Bqjgrrk: "fas2e61",
    Bm6vgfq: ["fmzytvz", "f1p2ejm6"],
    Cffpyd: "flb8es4",
    hxi8he: ["f1lclws", "frjp63v"],
    Bcuq369: "f1yv9wnt",
    Imo2if: ["frjp63v", "f1lclws"]
  }
}, {
  d: [".f1pha7fy{min-height:24px;}", ".fk6fouc{font-family:var(--fontFamilyBase);}", ".fy9rknc{font-size:var(--fontSizeBase200);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".fwrc4pm{line-height:var(--lineHeightBase200);}", ".f1f5gg8d{padding-left:var(--spacingHorizontalS);}", ".f1vdfbxk{padding-right:var(--spacingHorizontalS);}", ".f1o236ok::before{border-top-width:0;}", ".faeg28l::before{border-right-width:0;}", ".f64aojp::before{border-left-width:0;}", ".fdw6hkg::before{border-bottom-width:1px;}", [".f1xyh2jw::before{border-radius:var(--borderRadiusNone);}", {
    p: -1
  }], [".fkp7w9h::after{border-radius:var(--borderRadiusNone);}", {
    p: -1
  }], [".f1kc0wz4::before{border:1px solid var(--colorTransparentStroke);}", {
    p: -2
  }], ".f16xq7d1{background-color:var(--colorNeutralBackground3);}", ".fxugw4r{background-color:var(--colorNeutralBackground1);}", ".fl48pg9:not(:focus-within)::before,.fl48pg9:hover:not(:focus-within)::before{border-top-color:var(--colorPaletteRedBorder2);}", ".f1a168p3:not(:focus-within)::before,.f1a168p3:hover:not(:focus-within)::before{border-right-color:var(--colorPaletteRedBorder2);}", ".f1pvdymy:not(:focus-within)::before,.f1pvdymy:hover:not(:focus-within)::before{border-left-color:var(--colorPaletteRedBorder2);}", ".f11knvgl:not(:focus-within)::before,.f11knvgl:hover:not(:focus-within)::before{border-bottom-color:var(--colorPaletteRedBorder2);}", ".fdrzuqr{cursor:not-allowed;}", ".f1c21dwh{background-color:var(--colorTransparentBackground);}", ".f1a0lfh7::before{border-top-color:var(--colorNeutralStrokeDisabled);}", ".f1p2ejm6::before{border-right-color:var(--colorNeutralStrokeDisabled);}", ".fmzytvz::before{border-left-color:var(--colorNeutralStrokeDisabled);}", ".fas2e61::before{border-bottom-color:var(--colorNeutralStrokeDisabled);}"],
  h: [".f1w2y1rc:hover::before{border-top-color:var(--colorNeutralStroke1Hover);}", ".f1gofhvl:hover::before{border-right-color:var(--colorNeutralStroke1Hover);}", ".f18htlvq:hover::before{border-left-color:var(--colorNeutralStroke1Hover);}", ".ffcnd28:hover::before{border-bottom-color:var(--colorNeutralStrokeAccessibleHover);}", ".f1xqt08:hover::before,.f1xqt08:focus-within::before{border-top-color:var(--colorTransparentStrokeInteractive);}", ".fzt5lgo:hover::before,.fzt5lgo:focus-within::before{border-right-color:var(--colorTransparentStrokeInteractive);}", ".f8tv3r9:hover::before,.f8tv3r9:focus-within::before{border-left-color:var(--colorTransparentStrokeInteractive);}", ".fyhrops:hover::before,.fyhrops:focus-within::before{border-bottom-color:var(--colorTransparentStrokeInteractive);}"],
  a: [".f6lmxco:active::before,.f6lmxco:focus-within::before{border-top-color:var(--colorNeutralStroke1Pressed);}", ".fcoc0mf:active::before,.fcoc0mf:focus-within::before{border-right-color:var(--colorNeutralStroke1Pressed);}", ".f15r4wkl:active::before,.f15r4wkl:focus-within::before{border-left-color:var(--colorNeutralStroke1Pressed);}", ".f1ipdth8:active::before,.f1ipdth8:focus-within::before{border-bottom-color:var(--colorNeutralStrokeAccessiblePressed);}"],
  m: [["@media (forced-colors: active){.flb8es4::before{border-top-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1lclws::before{border-right-color:GrayText;}.frjp63v::before{border-left-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1yv9wnt::before{border-bottom-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }]]
});
var useInputClassName = __resetStyles("r1ljrqje", null, [".r1ljrqje{grid-column-start:1;grid-column-end:2;grid-row-start:1;grid-row-end:3;outline-style:none;border:0;padding:0;color:var(--colorNeutralForeground1);background-color:transparent;font-family:inherit;font-size:inherit;font-weight:inherit;line-height:inherit;width:100%;}", ".r1ljrqje::-webkit-input-placeholder{color:var(--colorNeutralForeground4);opacity:1;}", ".r1ljrqje::-moz-placeholder{color:var(--colorNeutralForeground4);opacity:1;}", ".r1ljrqje::placeholder{color:var(--colorNeutralForeground4);opacity:1;}"]);
var useInputStyles5 = __styles2({
  disabled: {
    sj55zd: "f1s2aq7o",
    Bceei9c: "fdrzuqr",
    De3pzq: "f1c21dwh",
    yvdlaj: "fahhnxm"
  }
}, {
  d: [".f1s2aq7o{color:var(--colorNeutralForegroundDisabled);}", ".fdrzuqr{cursor:not-allowed;}", ".f1c21dwh{background-color:var(--colorTransparentBackground);}", ".fahhnxm::-webkit-input-placeholder{color:var(--colorNeutralForegroundDisabled);}", ".fahhnxm::-moz-placeholder{color:var(--colorNeutralForegroundDisabled);}"]
});
var useBaseButtonClassName = __resetStyles("r1g4chgs", null, [".r1g4chgs{display:inline-flex;width:24px;align-items:center;justify-content:center;border:0;position:absolute;outline-style:none;height:16px;background-color:transparent;color:var(--colorNeutralForeground3);grid-column-start:2;border-radius:0;padding:0 5px 0 5px;}", ".r1g4chgs:active{outline-style:none;}", ".r1g4chgs:enabled:hover{cursor:pointer;color:var(--colorNeutralForeground3Hover);background-color:var(--colorSubtleBackgroundHover);}", ".r1g4chgs:enabled:active{color:var(--colorNeutralForeground3Pressed);background-color:var(--colorSubtleBackgroundPressed);}", ".r1g4chgs:enabled.fui-SpinButton__button_active{color:var(--colorNeutralForeground3Pressed);background-color:var(--colorSubtleBackgroundPressed);}", ".r1g4chgs:disabled{cursor:not-allowed;color:var(--colorNeutralForegroundDisabled);}"]);
var useButtonStyles = __styles2({
  increment: {
    Ijaq50: "f16hsg94",
    B7oj6ja: ["f1jar5jt", "fyu767a"],
    z8tnut: "f10ra9hq",
    Byoj8tv: "f1brlhvm"
  },
  decrement: {
    Ijaq50: "faunodf",
    Bbmb7ep: ["f1aa9q02", "f16jpd5f"],
    z8tnut: "f1sl3k7w",
    Byoj8tv: "f1y2xyjm"
  },
  incrementButtonSmall: {
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: ["f4lv8q1", "fm3uwd2"],
    Bqenvij: "fvblgha"
  },
  decrementButtonSmall: {
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: ["f1q86st8", "frkrfqj"],
    Bqenvij: "fvblgha"
  },
  outline: {},
  underline: {
    De3pzq: "f3rmtva",
    sj55zd: "f11d4kpn",
    r4wkhp: "f1no7wuu",
    B95qlz1: "f1bifk9c",
    p743kt: "fp1zg4s",
    B7xitij: "fo6hitd",
    B6siaa6: "f1wiab75",
    Ba9qmo4: "fj9zm5z",
    Dyrjrp: "f1cqwcg4"
  },
  "filled-darker": {
    De3pzq: "f3rmtva",
    sj55zd: "f11d4kpn",
    r4wkhp: "f1no7wuu",
    B95qlz1: "fwwxidx",
    p743kt: "fp1zg4s",
    B7xitij: "f14i52sd",
    B6siaa6: "f1wiab75",
    Ba9qmo4: "fwry2ka",
    Dyrjrp: "f1cqwcg4"
  },
  "filled-lighter": {
    De3pzq: "f3rmtva",
    sj55zd: "f11d4kpn",
    r4wkhp: "f1no7wuu",
    B95qlz1: "f1yywxnv",
    drw0cw: "fzaa11h",
    idzz8t: "f4fpmm9",
    Dyrjrp: "f1cqwcg4"
  }
}, {
  d: [".f16hsg94{grid-row-start:1;}", ".f1jar5jt{border-top-right-radius:var(--borderRadiusMedium);}", ".fyu767a{border-top-left-radius:var(--borderRadiusMedium);}", ".f10ra9hq{padding-top:4px;}", ".f1brlhvm{padding-bottom:1px;}", ".faunodf{grid-row-start:2;}", ".f1aa9q02{border-bottom-right-radius:var(--borderRadiusMedium);}", ".f16jpd5f{border-bottom-left-radius:var(--borderRadiusMedium);}", ".f1sl3k7w{padding-top:1px;}", ".f1y2xyjm{padding-bottom:4px;}", [".f4lv8q1{padding:3px 6px 0px 4px;}", {
    p: -1
  }], [".fm3uwd2{padding:3px 4px 0px 6px;}", {
    p: -1
  }], ".fvblgha{height:12px;}", [".f1q86st8{padding:0px 6px 3px 4px;}", {
    p: -1
  }], [".frkrfqj{padding:0px 4px 3px 6px;}", {
    p: -1
  }], ".f3rmtva{background-color:transparent;}", ".f11d4kpn{color:var(--colorNeutralForeground3);}", ".f1no7wuu:enabled:hover{color:var(--colorNeutralForeground3Hover);}", ".f1bifk9c:enabled:hover{background-color:var(--colorSubtleBackgroundHover);}", ".fp1zg4s:enabled:active{color:var(--colorNeutralForeground3Pressed);}", ".fo6hitd:enabled:active{background-color:var(--colorSubtleBackgroundPressed);}", ".f1wiab75:enabled.fui-SpinButton__button_active{color:var(--colorNeutralForeground3Pressed);}", ".fj9zm5z:enabled.fui-SpinButton__button_active{background-color:var(--colorSubtleBackgroundPressed);}", ".f1cqwcg4:disabled{color:var(--colorNeutralForegroundDisabled);}", ".fwwxidx:enabled:hover{background-color:var(--colorNeutralBackground3Hover);}", ".f14i52sd:enabled:active{background-color:var(--colorNeutralBackground3Pressed);}", ".fwry2ka:enabled.fui-SpinButton__button_active{background-color:var(--colorNeutralBackground3Pressed);}", ".f1yywxnv:enabled:hover{background-color:var(--colorNeutralBackground1Hover);}", ".fzaa11h:enabled:active,.fzaa11h:enabled.fui-SpinButton__button_active{color:var(--colorNeutralForeground3Pressed);}", ".f4fpmm9:enabled:active,.f4fpmm9:enabled.fui-SpinButton__button_active{background-color:var(--colorNeutralBackground1Pressed);}"]
});
var useButtonDisabledStyles = __styles2({
  base: {
    Bceei9c: "fdrzuqr",
    eoavqd: "fphbwmw"
  },
  outline: {
    sj55zd: "f1s2aq7o",
    r4wkhp: "few7wvn",
    B95qlz1: "f110wuh6",
    p743kt: "f9s4mys",
    B7xitij: "f10404rc",
    B6siaa6: "fwzu9cz",
    Ba9qmo4: "f1snwkb6"
  },
  underline: {
    sj55zd: "f1s2aq7o",
    r4wkhp: "few7wvn",
    B95qlz1: "f110wuh6",
    p743kt: "f9s4mys",
    B7xitij: "f10404rc",
    B6siaa6: "fwzu9cz",
    Ba9qmo4: "f1snwkb6"
  },
  "filled-darker": {
    sj55zd: "f1s2aq7o",
    r4wkhp: "few7wvn",
    B95qlz1: "f110wuh6",
    p743kt: "f9s4mys",
    B7xitij: "f10404rc",
    B6siaa6: "fwzu9cz",
    Ba9qmo4: "f1snwkb6"
  },
  "filled-lighter": {
    sj55zd: "f1s2aq7o",
    r4wkhp: "few7wvn",
    B95qlz1: "f110wuh6",
    p743kt: "f9s4mys",
    B7xitij: "f10404rc",
    B6siaa6: "fwzu9cz",
    Ba9qmo4: "f1snwkb6"
  }
}, {
  d: [".fdrzuqr{cursor:not-allowed;}", ".f1s2aq7o{color:var(--colorNeutralForegroundDisabled);}", ".few7wvn:enabled:hover{color:var(--colorNeutralForegroundDisabled);}", ".f110wuh6:enabled:hover{background-color:transparent;}", ".f9s4mys:enabled:active{color:var(--colorNeutralForegroundDisabled);}", ".f10404rc:enabled:active{background-color:transparent;}", ".fwzu9cz:enabled.fui-SpinButton__button_active{color:var(--colorNeutralForegroundDisabled);}", ".f1snwkb6:enabled.fui-SpinButton__button_active{background-color:transparent;}"],
  h: [".fphbwmw:hover{cursor:not-allowed;}"]
});
var useSpinButtonStyles_unstable = (state) => {
  "use no memo";
  const {
    appearance,
    atBound,
    spinState,
    size
  } = state;
  const disabled = state.input.disabled;
  const invalid = `${state.input["aria-invalid"]}` === "true";
  const filled = appearance.startsWith("filled");
  const rootStyles = useRootStyles10();
  const buttonStyles = useButtonStyles();
  const buttonDisabledStyles = useButtonDisabledStyles();
  const inputStyles = useInputStyles5();
  state.root.className = mergeClasses(spinButtonClassNames.root, useRootClassName5(), rootStyles[size], rootStyles[appearance], filled && rootStyles.filled, !disabled && appearance === "outline" && rootStyles.outlineInteractive, !disabled && appearance === "underline" && rootStyles.underlineInteractive, !disabled && filled && rootStyles.filledInteractive, !disabled && invalid && rootStyles.invalid, disabled && rootStyles.disabled, state.root.className);
  state.incrementButton.className = mergeClasses(spinButtonClassNames.incrementButton, spinState === "up" && `${spinButtonExtraClassNames.buttonActive}`, useBaseButtonClassName(), buttonStyles.increment, buttonStyles[appearance], size === "small" && buttonStyles.incrementButtonSmall, (atBound === "max" || atBound === "both") && buttonDisabledStyles.base, (atBound === "max" || atBound === "both") && buttonDisabledStyles[appearance], state.incrementButton.className);
  state.decrementButton.className = mergeClasses(spinButtonClassNames.decrementButton, spinState === "down" && `${spinButtonExtraClassNames.buttonActive}`, useBaseButtonClassName(), buttonStyles.decrement, buttonStyles[appearance], size === "small" && buttonStyles.decrementButtonSmall, (atBound === "min" || atBound === "both") && buttonDisabledStyles.base, (atBound === "min" || atBound === "both") && buttonDisabledStyles[appearance], state.decrementButton.className);
  state.input.className = mergeClasses(spinButtonClassNames.input, useInputClassName(), disabled && inputStyles.disabled, state.input.className);
  return state;
};

// node_modules/@fluentui/react-spinbutton/lib/components/SpinButton/SpinButton.js
var SpinButton = React196.forwardRef((props, ref) => {
  const state = useSpinButton_unstable(props, ref);
  useSpinButtonStyles_unstable(state);
  useCustomStyleHook("useSpinButtonStyles_unstable")(state);
  return renderSpinButton_unstable(state);
});
SpinButton.displayName = "SpinButton";

// node_modules/@fluentui/react-spinbutton/lib/components/SpinButton/SpinButton.types.js
var React197 = __toESM(require_react());

// node_modules/@fluentui/react-spinner/lib/components/Spinner/Spinner.js
var React200 = __toESM(require_react());

// node_modules/@fluentui/react-spinner/lib/components/Spinner/useSpinner.js
var React199 = __toESM(require_react());

// node_modules/@fluentui/react-spinner/lib/contexts/SpinnerContext.js
var React198 = __toESM(require_react());
var SpinnerContext = React198.createContext(void 0);
var SpinnerContextDefaultValue = {};
var SpinnerContextProvider = SpinnerContext.Provider;
var useSpinnerContext = () => {
  var _React_useContext;
  return (_React_useContext = React198.useContext(SpinnerContext)) !== null && _React_useContext !== void 0 ? _React_useContext : SpinnerContextDefaultValue;
};

// node_modules/@fluentui/react-spinner/lib/components/Spinner/useSpinner.js
var useSpinner_unstable = (props, ref) => {
  const { size: contextSize } = useSpinnerContext();
  const { appearance = "primary", labelPosition = "after", size = contextSize !== null && contextSize !== void 0 ? contextSize : "medium", delay = 0 } = props;
  const baseId = useId("spinner");
  const { role = "progressbar", ...rest } = props;
  const nativeRoot = slot_exports.always(getIntrinsicElementProps("div", {
    // FIXME:
    // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`
    // but since it would be a breaking change to fix it, we are casting ref to it's proper type
    ref,
    role,
    ...rest
  }, [
    "size"
  ]), {
    elementType: "div"
  });
  const [isShownAfterDelay, setIsShownAfterDelay] = React199.useState(false);
  const [setDelayTimeout, clearDelayTimeout] = useTimeout();
  React199.useEffect(() => {
    if (delay <= 0) {
      return;
    }
    setDelayTimeout(() => {
      setIsShownAfterDelay(true);
    }, delay);
    return () => {
      clearDelayTimeout();
    };
  }, [
    setDelayTimeout,
    clearDelayTimeout,
    delay
  ]);
  const labelShorthand = slot_exports.optional(props.label, {
    defaultProps: {
      id: baseId
    },
    renderByDefault: false,
    elementType: Label
  });
  const spinnerShortHand = slot_exports.optional(props.spinner, {
    renderByDefault: true,
    elementType: "span"
  });
  if (labelShorthand && nativeRoot && !nativeRoot["aria-labelledby"]) {
    nativeRoot["aria-labelledby"] = labelShorthand.id;
  }
  const state = {
    appearance,
    delay,
    labelPosition,
    size,
    shouldRenderSpinner: !delay || isShownAfterDelay,
    components: {
      root: "div",
      spinner: "span",
      spinnerTail: "span",
      label: Label
    },
    root: nativeRoot,
    spinner: spinnerShortHand,
    spinnerTail: slot_exports.always(props.spinnerTail, {
      elementType: "span"
    }),
    label: labelShorthand
  };
  return state;
};

// node_modules/@fluentui/react-spinner/lib/components/Spinner/renderSpinner.js
var renderSpinner_unstable = (state) => {
  assertSlots(state);
  const { labelPosition, shouldRenderSpinner } = state;
  return jsxs(state.root, {
    children: [
      state.label && shouldRenderSpinner && (labelPosition === "above" || labelPosition === "before") && jsx(state.label, {}),
      state.spinner && shouldRenderSpinner && jsx(state.spinner, {
        children: state.spinnerTail && jsx(state.spinnerTail, {})
      }),
      state.label && shouldRenderSpinner && (labelPosition === "below" || labelPosition === "after") && jsx(state.label, {})
    ]
  });
};

// node_modules/@fluentui/react-spinner/lib/components/Spinner/useSpinnerStyles.styles.js
var spinnerClassNames = {
  root: "fui-Spinner",
  spinner: "fui-Spinner__spinner",
  spinnerTail: "fui-Spinner__spinnerTail",
  label: "fui-Spinner__label"
};
var useRootBaseClassName4 = __resetStyles("r82apo5", null, [".r82apo5{display:flex;align-items:center;justify-content:center;line-height:0;gap:8px;overflow:hidden;}"]);
var useRootStyles11 = __styles2({
  vertical: {
    Beiy3e4: "f1vx9l62"
  }
}, {
  d: [".f1vx9l62{flex-direction:column;}"]
});
var useSpinnerBaseClassName = __resetStyles("rvgcg50", "r15nd2jo", {
  r: [".rvgcg50{position:relative;flex-shrink:0;-webkit-mask-image:radial-gradient(closest-side, transparent calc(100% - var(--fui-Spinner--strokeWidth) - 1px), white calc(100% - var(--fui-Spinner--strokeWidth)) calc(100% - 1px), transparent 100%);mask-image:radial-gradient(closest-side, transparent calc(100% - var(--fui-Spinner--strokeWidth) - 1px), white calc(100% - var(--fui-Spinner--strokeWidth)) calc(100% - 1px), transparent 100%);background-color:var(--colorBrandStroke2Contrast);color:var(--colorBrandStroke1);animation-duration:1.5s;animation-iteration-count:infinite;animation-timing-function:linear;animation-name:rb7n1on;}", "@keyframes rb7n1on{0%{transform:rotate(0deg);}100%{transform:rotate(360deg);}}", ".r15nd2jo{position:relative;flex-shrink:0;-webkit-mask-image:radial-gradient(closest-side, transparent calc(100% - var(--fui-Spinner--strokeWidth) - 1px), white calc(100% - var(--fui-Spinner--strokeWidth)) calc(100% - 1px), transparent 100%);mask-image:radial-gradient(closest-side, transparent calc(100% - var(--fui-Spinner--strokeWidth) - 1px), white calc(100% - var(--fui-Spinner--strokeWidth)) calc(100% - 1px), transparent 100%);background-color:var(--colorBrandStroke2Contrast);color:var(--colorBrandStroke1);animation-duration:1.5s;animation-iteration-count:infinite;animation-timing-function:linear;animation-name:r1gx3jof;}", "@keyframes r1gx3jof{0%{transform:rotate(0deg);}100%{transform:rotate(-360deg);}}"],
  s: ["@media screen and (forced-colors: active){.rvgcg50{background-color:HighlightText;color:Highlight;forced-color-adjust:none;}}", "@media screen and (prefers-reduced-motion: reduce){.rvgcg50{animation-duration:1.8s;}}", "@media screen and (forced-colors: active){.r15nd2jo{background-color:HighlightText;color:Highlight;forced-color-adjust:none;}}", "@media screen and (prefers-reduced-motion: reduce){.r15nd2jo{animation-duration:1.8s;}}"]
});
var useSpinnerTailBaseClassName = __resetStyles("rxov3xa", "r1o544mv", {
  r: [".rxov3xa{position:absolute;display:block;width:100%;height:100%;-webkit-mask-image:conic-gradient(transparent 105deg, white 105deg);mask-image:conic-gradient(transparent 105deg, white 105deg);animation-duration:1.5s;animation-iteration-count:infinite;animation-timing-function:var(--curveEasyEase);animation-name:r15mim6k;}", '.rxov3xa::before,.rxov3xa::after{content:"";position:absolute;display:block;width:100%;height:100%;animation:inherit;background-image:conic-gradient(currentcolor 135deg, transparent 135deg);}', "@keyframes r15mim6k{0%{transform:rotate(-135deg);}50%{transform:rotate(0deg);}100%{transform:rotate(225deg);}}", ".rxov3xa::before{animation-name:r18vhmn8;}", "@keyframes r18vhmn8{0%{transform:rotate(0deg);}50%{transform:rotate(105deg);}100%{transform:rotate(0deg);}}", ".rxov3xa::after{animation-name:rkgrvoi;}", "@keyframes rkgrvoi{0%{transform:rotate(0deg);}50%{transform:rotate(225deg);}100%{transform:rotate(0deg);}}", ".r1o544mv{position:absolute;display:block;width:100%;height:100%;-webkit-mask-image:conic-gradient(transparent 105deg, white 105deg);mask-image:conic-gradient(transparent 105deg, white 105deg);animation-duration:1.5s;animation-iteration-count:infinite;animation-timing-function:var(--curveEasyEase);animation-name:r109gmi5;}", '.r1o544mv::before,.r1o544mv::after{content:"";position:absolute;display:block;width:100%;height:100%;animation:inherit;background-image:conic-gradient(currentcolor 135deg, transparent 135deg);}', "@keyframes r109gmi5{0%{transform:rotate(135deg);}50%{transform:rotate(0deg);}100%{transform:rotate(-225deg);}}", ".r1o544mv::before{animation-name:r17whflh;}", "@keyframes r17whflh{0%{transform:rotate(0deg);}50%{transform:rotate(-105deg);}100%{transform:rotate(0deg);}}", ".r1o544mv::after{animation-name:re4odhl;}", "@keyframes re4odhl{0%{transform:rotate(0deg);}50%{transform:rotate(-225deg);}100%{transform:rotate(0deg);}}"],
  s: ["@media screen and (prefers-reduced-motion: reduce){.rxov3xa{animation-iteration-count:0;background-image:conic-gradient(transparent 120deg, currentcolor 360deg);}.rxov3xa::before,.rxov3xa::after{content:none;}}", "@media screen and (prefers-reduced-motion: reduce){.r1o544mv{animation-iteration-count:0;background-image:conic-gradient(transparent 120deg, currentcolor 360deg);}.r1o544mv::before,.r1o544mv::after{content:none;}}"]
});
var useSpinnerStyles = __styles2({
  inverted: {
    De3pzq: "fr407j0",
    sj55zd: "f1f7voed"
  },
  rtlTail: {
    btxmck: "f179dep3",
    gb5jj2: "fbz9ihp",
    Br2kee7: "f1wkkxo7"
  },
  "extra-tiny": {
    Bqenvij: "fd461yt",
    a9b677: "fjw5fx7",
    qmp6fs: "f1v3ph3m"
  },
  tiny: {
    Bqenvij: "fjamq6b",
    a9b677: "f64fuq3",
    qmp6fs: "f1v3ph3m"
  },
  "extra-small": {
    Bqenvij: "frvgh55",
    a9b677: "fq4mcun",
    qmp6fs: "f1v3ph3m"
  },
  small: {
    Bqenvij: "fxldao9",
    a9b677: "f1w9dchk",
    qmp6fs: "f1v3ph3m"
  },
  medium: {
    Bqenvij: "f1d2rq10",
    a9b677: "f1szoe96",
    qmp6fs: "fb52u90"
  },
  large: {
    Bqenvij: "f8ljn23",
    a9b677: "fpdz1er",
    qmp6fs: "fb52u90"
  },
  "extra-large": {
    Bqenvij: "fbhnoac",
    a9b677: "feqmc2u",
    qmp6fs: "fb52u90"
  },
  huge: {
    Bqenvij: "f1ft4266",
    a9b677: "fksc0bp",
    qmp6fs: "fa3u9ii"
  }
}, {
  d: [".fr407j0{background-color:var(--colorNeutralStrokeAlpha2);}", ".f1f7voed{color:var(--colorNeutralStrokeOnBrand2);}", ".f179dep3{-webkit-mask-image:conic-gradient(white 255deg, transparent 255deg);mask-image:conic-gradient(white 255deg, transparent 255deg);}", ".fbz9ihp::before,.fbz9ihp::after{background-image:conic-gradient(transparent 225deg, currentcolor 225deg);}", ".fd461yt{height:16px;}", ".fjw5fx7{width:16px;}", ".f1v3ph3m{--fui-Spinner--strokeWidth:var(--strokeWidthThick);}", ".fjamq6b{height:20px;}", ".f64fuq3{width:20px;}", ".frvgh55{height:24px;}", ".fq4mcun{width:24px;}", ".fxldao9{height:28px;}", ".f1w9dchk{width:28px;}", ".f1d2rq10{height:32px;}", ".f1szoe96{width:32px;}", ".fb52u90{--fui-Spinner--strokeWidth:var(--strokeWidthThicker);}", ".f8ljn23{height:36px;}", ".fpdz1er{width:36px;}", ".fbhnoac{height:40px;}", ".feqmc2u{width:40px;}", ".f1ft4266{height:44px;}", ".fksc0bp{width:44px;}", ".fa3u9ii{--fui-Spinner--strokeWidth:var(--strokeWidthThickest);}"],
  m: [["@media screen and (prefers-reduced-motion: reduce){.f1wkkxo7{background-image:conic-gradient(currentcolor 0deg, transparent 240deg);}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }]]
});
var useLabelStyles3 = __styles2({
  inverted: {
    sj55zd: "fonrgv7"
  },
  "extra-tiny": {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "figsok6",
    Bg96gwp: "f1i3iumi"
  },
  tiny: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "figsok6",
    Bg96gwp: "f1i3iumi"
  },
  "extra-small": {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "figsok6",
    Bg96gwp: "f1i3iumi"
  },
  small: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "figsok6",
    Bg96gwp: "f1i3iumi"
  },
  medium: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fod5ikn",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "faaz57k"
  },
  large: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fod5ikn",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "faaz57k"
  },
  "extra-large": {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fod5ikn",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "faaz57k"
  },
  huge: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "f1pp30po",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "f106mvju"
  }
}, {
  d: [".fonrgv7{color:var(--colorNeutralForegroundStaticInverted);}", ".fk6fouc{font-family:var(--fontFamilyBase);}", ".fkhj508{font-size:var(--fontSizeBase300);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}", ".fod5ikn{font-size:var(--fontSizeBase400);}", ".fl43uef{font-weight:var(--fontWeightSemibold);}", ".faaz57k{line-height:var(--lineHeightBase400);}", ".f1pp30po{font-size:var(--fontSizeBase500);}", ".f106mvju{line-height:var(--lineHeightBase500);}"]
});
var useSpinnerStyles_unstable = (state) => {
  "use no memo";
  const {
    labelPosition,
    size,
    appearance
  } = state;
  const {
    dir
  } = useFluent();
  const rootBaseClassName = useRootBaseClassName4();
  const rootStyles = useRootStyles11();
  const spinnerBaseClassName = useSpinnerBaseClassName();
  const spinnerStyles = useSpinnerStyles();
  const spinnerTailBaseClassName = useSpinnerTailBaseClassName();
  const labelStyles = useLabelStyles3();
  state.root.className = mergeClasses(spinnerClassNames.root, rootBaseClassName, (labelPosition === "above" || labelPosition === "below") && rootStyles.vertical, state.root.className);
  if (state.spinner) {
    state.spinner.className = mergeClasses(spinnerClassNames.spinner, spinnerBaseClassName, spinnerStyles[size], appearance === "inverted" && spinnerStyles.inverted, state.spinner.className);
  }
  if (state.spinnerTail) {
    state.spinnerTail.className = mergeClasses(spinnerClassNames.spinnerTail, spinnerTailBaseClassName, dir === "rtl" && spinnerStyles.rtlTail, state.spinnerTail.className);
  }
  if (state.label) {
    state.label.className = mergeClasses(spinnerClassNames.label, labelStyles[size], appearance === "inverted" && labelStyles.inverted, state.label.className);
  }
  return state;
};

// node_modules/@fluentui/react-spinner/lib/components/Spinner/Spinner.js
var Spinner = React200.forwardRef((props, ref) => {
  const state = useSpinner_unstable(props, ref);
  useSpinnerStyles_unstable(state);
  useCustomStyleHook("useSpinnerStyles_unstable")(state);
  return renderSpinner_unstable(state);
});
Spinner.displayName = "Spinner";

// node_modules/@fluentui/react-switch/lib/components/Switch/Switch.js
var React202 = __toESM(require_react());

// node_modules/@fluentui/react-switch/lib/components/Switch/useSwitch.js
var React201 = __toESM(require_react());
var useSwitch_unstable = (props, ref) => {
  props = useFieldControlProps_unstable(props, {
    supportsLabelFor: true,
    supportsRequired: true
  });
  const { checked, defaultChecked, disabled, labelPosition = "after", onChange, required } = props;
  const nativeProps = getPartitionedNativeProps({
    props,
    primarySlotTagName: "input",
    excludedPropNames: [
      "checked",
      "defaultChecked",
      "onChange"
    ]
  });
  const id = useId("switch-", nativeProps.primary.id);
  const root = slot_exports.always(props.root, {
    defaultProps: {
      ref: useFocusWithin(),
      ...nativeProps.root
    },
    elementType: "div"
  });
  const indicator = slot_exports.always(props.indicator, {
    defaultProps: {
      "aria-hidden": true,
      children: React201.createElement(CircleFilled, null)
    },
    elementType: "div"
  });
  const input = slot_exports.always(props.input, {
    defaultProps: {
      checked,
      defaultChecked,
      id,
      ref,
      role: "switch",
      type: "checkbox",
      ...nativeProps.primary
    },
    elementType: "input"
  });
  input.onChange = mergeCallbacks(input.onChange, (ev) => onChange === null || onChange === void 0 ? void 0 : onChange(ev, {
    checked: ev.currentTarget.checked
  }));
  const label = slot_exports.optional(props.label, {
    defaultProps: {
      disabled,
      htmlFor: id,
      required,
      size: "medium"
    },
    elementType: Label
  });
  return {
    labelPosition,
    components: {
      root: "div",
      indicator: "div",
      input: "input",
      label: Label
    },
    root,
    indicator,
    input,
    label
  };
};

// node_modules/@fluentui/react-switch/lib/components/Switch/renderSwitch.js
var renderSwitch_unstable = (state) => {
  assertSlots(state);
  const { labelPosition } = state;
  return jsxs(state.root, {
    children: [
      jsx(state.input, {}),
      labelPosition !== "after" && state.label && jsx(state.label, {}),
      jsx(state.indicator, {}),
      labelPosition === "after" && state.label && jsx(state.label, {})
    ]
  });
};

// node_modules/@fluentui/react-switch/lib/components/Switch/useSwitchStyles.styles.js
var switchClassNames = {
  root: "fui-Switch",
  indicator: "fui-Switch__indicator",
  input: "fui-Switch__input",
  label: "fui-Switch__label"
};
var switchClassName = switchClassNames.root;
var spaceBetweenThumbAndTrack2 = 2;
var trackHeight2 = 20;
var thumbSize2 = trackHeight2 - spaceBetweenThumbAndTrack2;
var useRootBaseClassName5 = __resetStyles("r2i81i2", "rofhmb8", {
  r: [".r2i81i2{align-items:flex-start;box-sizing:border-box;display:inline-flex;position:relative;}", ".r2i81i2:focus{outline-style:none;}", ".r2i81i2:focus-visible{outline-style:none;}", ".r2i81i2[data-fui-focus-within]:focus-within{border-top-color:transparent;border-right-color:transparent;border-bottom-color:transparent;border-left-color:transparent;}", '.r2i81i2[data-fui-focus-within]:focus-within::after{content:"";position:absolute;pointer-events:none;z-index:1;border:2px solid var(--colorStrokeFocus2);border-radius:var(--borderRadiusMedium);top:calc(2px * -1);right:calc(2px * -1);bottom:calc(2px * -1);left:calc(2px * -1);}', ".rofhmb8{align-items:flex-start;box-sizing:border-box;display:inline-flex;position:relative;}", ".rofhmb8:focus{outline-style:none;}", ".rofhmb8:focus-visible{outline-style:none;}", ".rofhmb8[data-fui-focus-within]:focus-within{border-top-color:transparent;border-left-color:transparent;border-bottom-color:transparent;border-right-color:transparent;}", '.rofhmb8[data-fui-focus-within]:focus-within::after{content:"";position:absolute;pointer-events:none;z-index:1;border:2px solid var(--colorStrokeFocus2);border-radius:var(--borderRadiusMedium);top:calc(2px * -1);left:calc(2px * -1);bottom:calc(2px * -1);right:calc(2px * -1);}'],
  s: ["@media (forced-colors: active){.r2i81i2[data-fui-focus-within]:focus-within::after{border-top-color:Highlight;border-right-color:Highlight;border-bottom-color:Highlight;border-left-color:Highlight;}}", "@media (forced-colors: active){.rofhmb8[data-fui-focus-within]:focus-within::after{border-top-color:Highlight;border-left-color:Highlight;border-bottom-color:Highlight;border-right-color:Highlight;}}"]
});
var useRootStyles12 = __styles2({
  vertical: {
    Beiy3e4: "f1vx9l62"
  }
}, {
  d: [".f1vx9l62{flex-direction:column;}"]
});
var useIndicatorBaseClassName3 = __resetStyles("r1c3hft5", null, {
  r: [".r1c3hft5{border-radius:var(--borderRadiusCircular);border:1px solid;line-height:0;box-sizing:border-box;fill:currentColor;flex-shrink:0;font-size:18px;height:20px;margin:var(--spacingVerticalS) var(--spacingHorizontalS);pointer-events:none;transition-duration:var(--durationNormal);transition-timing-function:var(--curveEasyEase);transition-property:background,border,color;width:40px;}", ".r1c3hft5>*{transition-duration:var(--durationNormal);transition-timing-function:var(--curveEasyEase);transition-property:transform;}"],
  s: ["@media screen and (prefers-reduced-motion: reduce){.r1c3hft5{transition-duration:0.01ms;}}", "@media (forced-colors: active){.r1c3hft5{color:CanvasText;}.r1c3hft5>i{forced-color-adjust:none;}}", "@media screen and (prefers-reduced-motion: reduce){.r1c3hft5>*{transition-duration:0.01ms;}}"]
});
var useIndicatorStyles2 = __styles2({
  labelAbove: {
    B6of3ja: "f1hu3pq6"
  }
}, {
  d: [".f1hu3pq6{margin-top:0;}"]
});
var useInputBaseClassName3 = __resetStyles("rsji9ng", "r15xih98", {
  r: [".rsji9ng{box-sizing:border-box;cursor:pointer;height:100%;margin:0;opacity:0;position:absolute;width:calc(40px + 2 * var(--spacingHorizontalS));}", ".rsji9ng:checked~.fui-Switch__indicator>*{transform:translateX(20px);}", ".rsji9ng:disabled{cursor:default;}", ".rsji9ng:disabled~.fui-Switch__indicator{color:var(--colorNeutralForegroundDisabled);}", ".rsji9ng:disabled~.fui-Switch__label{cursor:default;color:var(--colorNeutralForegroundDisabled);}", ".rsji9ng:enabled:not(:checked)~.fui-Switch__indicator{color:var(--colorNeutralStrokeAccessible);border-color:var(--colorNeutralStrokeAccessible);}", ".rsji9ng:enabled:not(:checked)~.fui-Switch__label{color:var(--colorNeutralForeground1);}", ".rsji9ng:enabled:not(:checked):hover~.fui-Switch__indicator{color:var(--colorNeutralStrokeAccessibleHover);border-color:var(--colorNeutralStrokeAccessibleHover);}", ".rsji9ng:enabled:not(:checked):hover:active~.fui-Switch__indicator{color:var(--colorNeutralStrokeAccessiblePressed);border-color:var(--colorNeutralStrokeAccessiblePressed);}", ".rsji9ng:enabled:checked~.fui-Switch__indicator{background-color:var(--colorCompoundBrandBackground);color:var(--colorNeutralForegroundInverted);border-color:var(--colorTransparentStroke);}", ".rsji9ng:enabled:checked:hover~.fui-Switch__indicator{background-color:var(--colorCompoundBrandBackgroundHover);border-color:var(--colorTransparentStrokeInteractive);}", ".rsji9ng:enabled:checked:hover:active~.fui-Switch__indicator{background-color:var(--colorCompoundBrandBackgroundPressed);border-color:var(--colorTransparentStrokeInteractive);}", ".rsji9ng:disabled:not(:checked)~.fui-Switch__indicator{border-color:var(--colorNeutralStrokeDisabled);}", ".rsji9ng:disabled:checked~.fui-Switch__indicator{background-color:var(--colorNeutralBackgroundDisabled);border-color:var(--colorTransparentStrokeDisabled);}", ".r15xih98{box-sizing:border-box;cursor:pointer;height:100%;margin:0;opacity:0;position:absolute;width:calc(40px + 2 * var(--spacingHorizontalS));}", ".r15xih98:checked~.fui-Switch__indicator>*{transform:translateX(-20px);}", ".r15xih98:disabled{cursor:default;}", ".r15xih98:disabled~.fui-Switch__indicator{color:var(--colorNeutralForegroundDisabled);}", ".r15xih98:disabled~.fui-Switch__label{cursor:default;color:var(--colorNeutralForegroundDisabled);}", ".r15xih98:enabled:not(:checked)~.fui-Switch__indicator{color:var(--colorNeutralStrokeAccessible);border-color:var(--colorNeutralStrokeAccessible);}", ".r15xih98:enabled:not(:checked)~.fui-Switch__label{color:var(--colorNeutralForeground1);}", ".r15xih98:enabled:not(:checked):hover~.fui-Switch__indicator{color:var(--colorNeutralStrokeAccessibleHover);border-color:var(--colorNeutralStrokeAccessibleHover);}", ".r15xih98:enabled:not(:checked):hover:active~.fui-Switch__indicator{color:var(--colorNeutralStrokeAccessiblePressed);border-color:var(--colorNeutralStrokeAccessiblePressed);}", ".r15xih98:enabled:checked~.fui-Switch__indicator{background-color:var(--colorCompoundBrandBackground);color:var(--colorNeutralForegroundInverted);border-color:var(--colorTransparentStroke);}", ".r15xih98:enabled:checked:hover~.fui-Switch__indicator{background-color:var(--colorCompoundBrandBackgroundHover);border-color:var(--colorTransparentStrokeInteractive);}", ".r15xih98:enabled:checked:hover:active~.fui-Switch__indicator{background-color:var(--colorCompoundBrandBackgroundPressed);border-color:var(--colorTransparentStrokeInteractive);}", ".r15xih98:disabled:not(:checked)~.fui-Switch__indicator{border-color:var(--colorNeutralStrokeDisabled);}", ".r15xih98:disabled:checked~.fui-Switch__indicator{background-color:var(--colorNeutralBackgroundDisabled);border-color:var(--colorTransparentStrokeDisabled);}"],
  s: ["@media (forced-colors: active){.rsji9ng:disabled~.fui-Switch__indicator{color:GrayText;border-color:GrayText;}.rsji9ng:disabled~.fui-Switch__label{color:GrayText;}.rsji9ng:hover{color:CanvasText;}.rsji9ng:hover:active{color:CanvasText;}.rsji9ng:enabled:checked:hover~.fui-Switch__indicator{background-color:Highlight;color:Canvas;}.rsji9ng:enabled:checked:hover:active~.fui-Switch__indicator{background-color:Highlight;color:Canvas;}.rsji9ng:enabled:checked~.fui-Switch__indicator{background-color:Highlight;color:Canvas;}}", "@media (forced-colors: active){.r15xih98:disabled~.fui-Switch__indicator{color:GrayText;border-color:GrayText;}.r15xih98:disabled~.fui-Switch__label{color:GrayText;}.r15xih98:hover{color:CanvasText;}.r15xih98:hover:active{color:CanvasText;}.r15xih98:enabled:checked:hover~.fui-Switch__indicator{background-color:Highlight;color:Canvas;}.r15xih98:enabled:checked:hover:active~.fui-Switch__indicator{background-color:Highlight;color:Canvas;}.r15xih98:enabled:checked~.fui-Switch__indicator{background-color:Highlight;color:Canvas;}}"]
});
var useInputStyles6 = __styles2({
  before: {
    j35jbq: ["f1e31b4d", "f1vgc2s3"],
    Bhzewxz: "f15twtuk"
  },
  after: {
    oyh7mz: ["f1vgc2s3", "f1e31b4d"],
    Bhzewxz: "f15twtuk"
  },
  above: {
    B5kzvoi: "f1yab3r1",
    Bqenvij: "f1aar7gd",
    a9b677: "fly5x3f"
  }
}, {
  d: [".f1e31b4d{right:0;}", ".f1vgc2s3{left:0;}", ".f15twtuk{top:0;}", ".f1yab3r1{bottom:0;}", ".f1aar7gd{height:calc(20px + var(--spacingVerticalS));}", ".fly5x3f{width:100%;}"]
});
var useLabelStyles4 = __styles2({
  base: {
    Bceei9c: "f1k6fduh",
    jrapky: "f49ad5g",
    B6of3ja: "f1xlvstr",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f1f5q0n8"
  },
  above: {
    z8tnut: "f1ywm7hm",
    Byoj8tv: "f14wxoun",
    a9b677: "fly5x3f"
  },
  after: {
    uwmqm3: ["fruq291", "f7x41pl"]
  },
  before: {
    z189sj: ["f7x41pl", "fruq291"]
  }
}, {
  d: [".f1k6fduh{cursor:pointer;}", ".f49ad5g{margin-bottom:calc((20px - var(--lineHeightBase300)) / 2);}", ".f1xlvstr{margin-top:calc((20px - var(--lineHeightBase300)) / 2);}", [".f1f5q0n8{padding:var(--spacingVerticalS) var(--spacingHorizontalS);}", {
    p: -1
  }], ".f1ywm7hm{padding-top:var(--spacingVerticalXS);}", ".f14wxoun{padding-bottom:var(--spacingVerticalXS);}", ".fly5x3f{width:100%;}", ".fruq291{padding-left:var(--spacingHorizontalXS);}", ".f7x41pl{padding-right:var(--spacingHorizontalXS);}"]
});
var useSwitchStyles_unstable = (state) => {
  "use no memo";
  const rootBaseClassName = useRootBaseClassName5();
  const rootStyles = useRootStyles12();
  const indicatorBaseClassName = useIndicatorBaseClassName3();
  const indicatorStyles = useIndicatorStyles2();
  const inputBaseClassName = useInputBaseClassName3();
  const inputStyles = useInputStyles6();
  const labelStyles = useLabelStyles4();
  const {
    label,
    labelPosition
  } = state;
  state.root.className = mergeClasses(switchClassNames.root, rootBaseClassName, labelPosition === "above" && rootStyles.vertical, state.root.className);
  state.indicator.className = mergeClasses(switchClassNames.indicator, indicatorBaseClassName, label && labelPosition === "above" && indicatorStyles.labelAbove, state.indicator.className);
  state.input.className = mergeClasses(switchClassNames.input, inputBaseClassName, label && inputStyles[labelPosition], state.input.className);
  if (state.label) {
    state.label.className = mergeClasses(switchClassNames.label, labelStyles.base, labelStyles[labelPosition], state.label.className);
  }
  return state;
};

// node_modules/@fluentui/react-switch/lib/components/Switch/Switch.js
var Switch = React202.forwardRef((props, ref) => {
  const state = useSwitch_unstable(props, ref);
  useSwitchStyles_unstable(state);
  useCustomStyleHook("useSwitchStyles_unstable")(state);
  return renderSwitch_unstable(state);
});
Switch.displayName = "Switch";

// node_modules/@fluentui/react-switch/lib/components/Switch/Switch.types.js
var React203 = __toESM(require_react());

// node_modules/@fluentui/react-tabs/lib/components/Tab/Tab.js
var React209 = __toESM(require_react());

// node_modules/@fluentui/react-tabs/lib/components/Tab/useTab.js
var React207 = __toESM(require_react());

// node_modules/@fluentui/react-tabs/node_modules/@fluentui/react-context-selector/lib/createContext.js
var React204 = __toESM(require_react());
var import_scheduler6 = __toESM(require_scheduler6());
var createProvider6 = (Original) => {
  const Provider2 = (props) => {
    const valueRef = React204.useRef(props.value);
    const versionRef = React204.useRef(0);
    const contextValue = React204.useRef();
    if (!contextValue.current) {
      contextValue.current = {
        value: valueRef,
        version: versionRef,
        listeners: []
      };
    }
    useIsomorphicLayoutEffect(() => {
      valueRef.current = props.value;
      versionRef.current += 1;
      (0, import_scheduler6.unstable_runWithPriority)(import_scheduler6.unstable_NormalPriority, () => {
        contextValue.current.listeners.forEach((listener) => {
          listener([
            versionRef.current,
            props.value
          ]);
        });
      });
    }, [
      props.value
    ]);
    return React204.createElement(Original, {
      value: contextValue.current
    }, props.children);
  };
  if (true) {
    Provider2.displayName = "ContextSelector.Provider";
  }
  return Provider2;
};
var createContext25 = (defaultValue) => {
  const context = React204.createContext({
    value: {
      current: defaultValue
    },
    version: {
      current: -1
    },
    listeners: []
  });
  context.Provider = createProvider6(context.Provider);
  delete context.Consumer;
  return context;
};

// node_modules/@fluentui/react-tabs/node_modules/@fluentui/react-context-selector/lib/useContextSelector.js
var React205 = __toESM(require_react());
var useContextSelector6 = (context, selector) => {
  const contextValue = React205.useContext(context);
  const { value: { current: value }, version: { current: version }, listeners } = contextValue;
  const selected = selector(value);
  const [state, setState] = React205.useState([
    value,
    selected
  ]);
  const dispatch = (payload) => {
    setState((prevState) => {
      if (!payload) {
        return [
          value,
          selected
        ];
      }
      if (payload[0] <= version) {
        if (Object.is(prevState[1], selected)) {
          return prevState;
        }
        return [
          value,
          selected
        ];
      }
      try {
        if (Object.is(prevState[0], payload[1])) {
          return prevState;
        }
        const nextSelected = selector(payload[1]);
        if (Object.is(prevState[1], nextSelected)) {
          return prevState;
        }
        return [
          payload[1],
          nextSelected
        ];
      } catch (e) {
      }
      return [
        prevState[0],
        prevState[1]
      ];
    });
  };
  if (!Object.is(state[1], selected)) {
    dispatch(void 0);
  }
  const stableDispatch = useEventCallback(dispatch);
  useIsomorphicLayoutEffect(() => {
    listeners.push(stableDispatch);
    return () => {
      const index = listeners.indexOf(stableDispatch);
      listeners.splice(index, 1);
    };
  }, [
    stableDispatch,
    listeners
  ]);
  return state[1];
};

// node_modules/@fluentui/react-tabs/node_modules/@fluentui/react-context-selector/lib/useHasParentContext.js
var React206 = __toESM(require_react());

// node_modules/@fluentui/react-tabs/lib/components/TabList/TabListContext.js
var tabListContextDefaultValue = {
  appearance: "transparent",
  reserveSelectedTabSpace: true,
  selectTabOnFocus: false,
  disabled: false,
  selectedValue: void 0,
  onRegister: () => {
  },
  onUnregister: () => {
  },
  onSelect: () => {
  },
  getRegisteredTabs: () => {
    return {
      registeredTabs: {}
    };
  },
  size: "medium",
  vertical: false
};
var TabListContext = createContext25(void 0);
var TabListProvider = TabListContext.Provider;
var useTabListContext_unstable = (selector) => useContextSelector6(TabListContext, (ctx = tabListContextDefaultValue) => selector(ctx));

// node_modules/@fluentui/react-tabs/lib/components/Tab/useTab.js
var useTab_unstable = (props, ref) => {
  const { content, disabled: tabDisabled = false, icon, onClick, onFocus, value } = props;
  const appearance = useTabListContext_unstable((ctx) => ctx.appearance);
  const reserveSelectedTabSpace = useTabListContext_unstable((ctx) => ctx.reserveSelectedTabSpace);
  const selectTabOnFocus = useTabListContext_unstable((ctx) => ctx.selectTabOnFocus);
  const listDisabled = useTabListContext_unstable((ctx) => ctx.disabled);
  const selected = useTabListContext_unstable((ctx) => ctx.selectedValue === value);
  const onRegister = useTabListContext_unstable((ctx) => ctx.onRegister);
  const onUnregister = useTabListContext_unstable((ctx) => ctx.onUnregister);
  const onSelect = useTabListContext_unstable((ctx) => ctx.onSelect);
  const size = useTabListContext_unstable((ctx) => ctx.size);
  const vertical = useTabListContext_unstable((ctx) => !!ctx.vertical);
  const disabled = listDisabled || tabDisabled;
  const innerRef = React207.useRef(null);
  const onSelectCallback = (event) => onSelect(event, {
    value
  });
  const onTabClick = useEventCallback(mergeCallbacks(onClick, onSelectCallback));
  const onTabFocus = useEventCallback(mergeCallbacks(onFocus, onSelectCallback));
  React207.useEffect(() => {
    onRegister({
      value,
      ref: innerRef
    });
    return () => {
      onUnregister({
        value,
        ref: innerRef
      });
    };
  }, [
    onRegister,
    onUnregister,
    innerRef,
    value
  ]);
  const iconSlot = slot_exports.optional(icon, {
    elementType: "span"
  });
  const contentSlot = slot_exports.always(content, {
    defaultProps: {
      children: props.children
    },
    elementType: "span"
  });
  const contentReservedSpace = content && typeof content === "object" ? omit(content, [
    "ref"
  ]) : content;
  const iconOnly = Boolean((iconSlot === null || iconSlot === void 0 ? void 0 : iconSlot.children) && !contentSlot.children);
  return {
    components: {
      root: "button",
      icon: "span",
      content: "span",
      contentReservedSpace: "span"
    },
    root: slot_exports.always(getIntrinsicElementProps("button", {
      // FIXME:
      // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLButtonElement`
      // but since it would be a breaking change to fix it, we are casting ref to it's proper type
      ref: useMergedRefs(ref, innerRef),
      role: "tab",
      type: "button",
      // aria-selected undefined indicates it is not selectable
      // according to https://www.w3.org/TR/wai-aria-1.1/#aria-selected
      "aria-selected": disabled ? void 0 : `${selected}`,
      ...props,
      disabled,
      onClick: onTabClick,
      onFocus: selectTabOnFocus ? onTabFocus : onFocus
    }), {
      elementType: "button"
    }),
    icon: iconSlot,
    iconOnly,
    content: contentSlot,
    contentReservedSpace: slot_exports.optional(contentReservedSpace, {
      renderByDefault: !selected && !iconOnly && reserveSelectedTabSpace,
      defaultProps: {
        children: props.children
      },
      elementType: "span"
    }),
    appearance,
    disabled,
    selected,
    size,
    value,
    vertical
  };
};

// node_modules/@fluentui/react-tabs/lib/components/Tab/renderTab.js
var renderTab_unstable = (state) => {
  assertSlots(state);
  return jsxs(state.root, {
    children: [
      state.icon && jsx(state.icon, {}),
      !state.iconOnly && jsx(state.content, {}),
      state.contentReservedSpace && jsx(state.contentReservedSpace, {})
    ]
  });
};

// node_modules/@fluentui/react-tabs/lib/components/Tab/useTabAnimatedIndicator.styles.js
var React208 = __toESM(require_react());
var tabIndicatorCssVars_unstable = {
  offsetVar: "--fui-Tab__indicator--offset",
  scaleVar: "--fui-Tab__indicator--scale"
};
var useActiveIndicatorStyles = __styles2({
  base: {
    B68tc82: 0,
    Bmxbyg5: 0,
    Bpg54ce: "f1gl81tg"
  },
  animated: {
    Ba2ppi3: "fhwpy7i",
    F2fol1: "f6zz20j",
    B1dyfl9: "f1ai4sc1",
    B0vmy72: "f9qxlq5",
    u9bimw: "f1aql376"
  },
  horizontal: {
    sjv3b2: ["fug4aj8", "f1i5xzg7"],
    b1kco5: "f1q7ujh"
  },
  vertical: {
    sjv3b2: "f1hqboyk",
    b1kco5: "f1dxupa6"
  }
}, {
  d: [[".f1gl81tg{overflow:visible;}", {
    p: -1
  }], ".fhwpy7i::after{transition-property:transform;}", ".f6zz20j::after{transition-duration:var(--durationSlow);}", ".f1ai4sc1::after{transition-timing-function:var(--curveDecelerateMax);}", ".fug4aj8::after{transform-origin:left;}", ".f1i5xzg7::after{transform-origin:right;}", ".f1q7ujh::after{transform:translateX(var(--fui-Tab__indicator--offset)) scaleX(var(--fui-Tab__indicator--scale));}", ".f1hqboyk::after{transform-origin:top;}", ".f1dxupa6::after{transform:translateY(var(--fui-Tab__indicator--offset)) scaleY(var(--fui-Tab__indicator--scale));}"],
  m: [["@media (prefers-reduced-motion: reduce){.f9qxlq5::after{transition-property:none;}}", {
    m: "(prefers-reduced-motion: reduce)"
  }], ["@media (prefers-reduced-motion: reduce){.f1aql376::after{transition-duration:0.01ms;}}", {
    m: "(prefers-reduced-motion: reduce)"
  }]]
});
var calculateTabRect = (element) => {
  if (element) {
    var _element_parentElement;
    const parentRect = ((_element_parentElement = element.parentElement) === null || _element_parentElement === void 0 ? void 0 : _element_parentElement.getBoundingClientRect()) || {
      x: 0,
      y: 0,
      width: 0,
      height: 0
    };
    const tabRect = element.getBoundingClientRect();
    return {
      x: tabRect.x - parentRect.x,
      y: tabRect.y - parentRect.y,
      width: tabRect.width,
      height: tabRect.height
    };
  }
  return void 0;
};
var getRegisteredTabRect = (registeredTabs, value) => {
  var _registeredTabs_JSON_stringify;
  const element = isValueDefined(value) ? (_registeredTabs_JSON_stringify = registeredTabs[JSON.stringify(value)]) === null || _registeredTabs_JSON_stringify === void 0 ? void 0 : _registeredTabs_JSON_stringify.ref.current : void 0;
  return element ? calculateTabRect(element) : void 0;
};
var isValueDefined = (value) => value != null;
var useTabAnimatedIndicatorStyles_unstable = (state) => {
  const {
    disabled,
    selected,
    vertical
  } = state;
  const activeIndicatorStyles = useActiveIndicatorStyles();
  const [lastAnimatedFrom, setLastAnimatedFrom] = React208.useState();
  const [animationValues, setAnimationValues] = React208.useState({
    offset: 0,
    scale: 1
  });
  const getRegisteredTabs = useTabListContext_unstable((ctx) => ctx.getRegisteredTabs);
  React208.useEffect(() => {
    if (isValueDefined(lastAnimatedFrom)) {
      setAnimationValues({
        offset: 0,
        scale: 1
      });
    }
  }, [lastAnimatedFrom]);
  if (selected) {
    const {
      previousSelectedValue,
      selectedValue,
      registeredTabs
    } = getRegisteredTabs();
    if (isValueDefined(previousSelectedValue) && lastAnimatedFrom !== previousSelectedValue) {
      const previousSelectedTabRect = getRegisteredTabRect(registeredTabs, previousSelectedValue);
      const selectedTabRect = getRegisteredTabRect(registeredTabs, selectedValue);
      if (selectedTabRect && previousSelectedTabRect) {
        const offset = vertical ? previousSelectedTabRect.y - selectedTabRect.y : previousSelectedTabRect.x - selectedTabRect.x;
        const scale = vertical ? previousSelectedTabRect.height / selectedTabRect.height : previousSelectedTabRect.width / selectedTabRect.width;
        setAnimationValues({
          offset,
          scale
        });
        setLastAnimatedFrom(previousSelectedValue);
      }
    }
  } else if (isValueDefined(lastAnimatedFrom)) {
    setLastAnimatedFrom(void 0);
  }
  if (disabled) {
    return state;
  }
  const animating = animationValues.offset === 0 && animationValues.scale === 1;
  state.root.className = mergeClasses(state.root.className, selected && activeIndicatorStyles.base, selected && animating && activeIndicatorStyles.animated, selected && (vertical ? activeIndicatorStyles.vertical : activeIndicatorStyles.horizontal));
  const rootCssVars = {
    [tabIndicatorCssVars_unstable.offsetVar]: `${animationValues.offset}px`,
    [tabIndicatorCssVars_unstable.scaleVar]: `${animationValues.scale}`
  };
  state.root.style = {
    ...rootCssVars,
    ...state.root.style
  };
  return state;
};

// node_modules/@fluentui/react-tabs/lib/components/Tab/useTabStyles.styles.js
var tabClassNames = {
  root: "fui-Tab",
  icon: "fui-Tab__icon",
  content: "fui-Tab__content"
};
var reservedSpaceClassNames = {
  content: "fui-Tab__content--reserved-space"
};
var useRootStyles13 = __styles2({
  root: {
    Bt984gj: "f122n59",
    mc9l5x: "f13qh94s",
    Bnnss6s: "fi64zpg",
    Bxotwcr: "f1u07yai",
    Budl1dq: "frn2hmy",
    wkccdc: "f1olsevy",
    oeaueh: "f1s6fcnf",
    qhf8xq: "f10pi13n"
  },
  button: {
    Bt984gj: "f122n59",
    Bgfg5da: 0,
    B9xav0g: 0,
    oivjwe: 0,
    Bn0qgzm: 0,
    B4g9neb: 0,
    zhjwy3: 0,
    wvpqe5: 0,
    ibv6hh: 0,
    u1mtju: 0,
    h3c5rm: 0,
    vrafjx: 0,
    Bekrc4i: 0,
    i8vvqc: 0,
    g2u3we: 0,
    icvyot: 0,
    B4j52fo: 0,
    irswps: "f3bhgqh",
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "ft85np5",
    Bceei9c: "f1k6fduh",
    mc9l5x: "f13qh94s",
    Bnnss6s: "fi64zpg",
    Bxotwcr: "f1u07yai",
    Budl1dq: "frn2hmy",
    wkccdc: "f1olsevy",
    Bahqtrf: "fk6fouc",
    Bg96gwp: "f1i3iumi",
    oeaueh: "f1s6fcnf",
    qhf8xq: "f10pi13n",
    B68tc82: 0,
    Bmxbyg5: 0,
    Bpg54ce: "f1a3p1vp",
    B9bfxx9: "f1cxpek8"
  },
  horizontal: {
    Brf1p80: "f4d9j23"
  },
  vertical: {
    Brf1p80: "f1s9ku6b"
  },
  smallHorizontal: {
    i8kkvl: "f14mj54c",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f1wmopi4"
  },
  smallVertical: {
    i8kkvl: "f14mj54c",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f12or63q"
  },
  mediumHorizontal: {
    i8kkvl: "f1rjii52",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f1w08f2p"
  },
  mediumVertical: {
    i8kkvl: "f1rjii52",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "fymxs25"
  },
  largeHorizontal: {
    i8kkvl: "f1rjii52",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f1ssfvub"
  },
  largeVertical: {
    i8kkvl: "f1rjii52",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "fwkd1rq"
  },
  transparent: {
    De3pzq: "f1c21dwh",
    B95qlz1: "f9rvdkv",
    B7xitij: "f1051ucx",
    Bptxc3x: "fmmjozx",
    Bwqhzpy: "fqhzt5g",
    iyk698: "f7l5cgy",
    cl4aha: "fpkze5g",
    B0q3jbp: "f1iywnoi",
    Be9ayug: "f9n45c4"
  },
  subtle: {
    De3pzq: "fhovq9v",
    B95qlz1: "f1bifk9c",
    B7xitij: "fo6hitd",
    Bptxc3x: "fmmjozx",
    Bwqhzpy: "fqhzt5g",
    iyk698: "f7l5cgy",
    cl4aha: "fpkze5g",
    B0q3jbp: "f1iywnoi",
    Be9ayug: "f9n45c4"
  },
  disabled: {
    De3pzq: "f1c21dwh",
    Bptxc3x: "fato7r6",
    cl4aha: "fao1bnu",
    Bceei9c: "fdrzuqr"
  },
  selected: {
    Bptxc3x: "f1cadz5z",
    Bwqhzpy: "fwhdxxj",
    iyk698: "fintccb",
    cl4aha: "ffplhdr",
    B0q3jbp: "fjo17wb",
    Be9ayug: "f148789c"
  },
  circular: {
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "f44lkw9",
    Bptxc3x: "ftorr8m",
    cl4aha: "f16lqpmv"
  },
  subtleCircular: {
    De3pzq: "f1c21dwh",
    Bgfg5da: 0,
    B9xav0g: 0,
    oivjwe: 0,
    Bn0qgzm: 0,
    B4g9neb: 0,
    zhjwy3: 0,
    wvpqe5: 0,
    ibv6hh: 0,
    u1mtju: 0,
    h3c5rm: 0,
    vrafjx: 0,
    Bekrc4i: 0,
    i8vvqc: 0,
    g2u3we: 0,
    icvyot: 0,
    B4j52fo: 0,
    irswps: "fp7rvkm",
    sj55zd: "fkfq4zb",
    B95qlz1: "f1yywxnv",
    Eo63ln: 0,
    r9osk6: 0,
    Itrz8y: 0,
    zeg6vx: 0,
    l65xgk: 0,
    Bw4olcx: 0,
    Folb0i: 0,
    I2h8y4: 0,
    Bgxgoyi: 0,
    Bvlkotb: 0,
    Fwyncl: 0,
    Byh5edv: 0,
    Becqvjq: 0,
    uumbiq: 0,
    B73q3dg: 0,
    Bblwbaf: 0,
    B0ezav: "ft57sj0",
    r4wkhp: "f1fcoy83",
    B7xitij: "f1lzpamt",
    d3wsvi: 0,
    Hdqn7s: 0,
    zu5y1p: 0,
    owqphb: 0,
    g9c53k: 0,
    Btmu08z: 0,
    Bthxvy6: 0,
    gluvuq: 0,
    tb88gp: 0,
    wns6jk: 0,
    kdfdk4: 0,
    Bbw008l: 0,
    Bayi1ib: 0,
    B1kkfu3: 0,
    J1oqyp: 0,
    kem6az: 0,
    goa3yj: "fhn220o",
    p743kt: "f15qf7sh"
  },
  subtleCircularSelected: {
    De3pzq: "f16xkysk",
    Bgfg5da: 0,
    B9xav0g: 0,
    oivjwe: 0,
    Bn0qgzm: 0,
    B4g9neb: 0,
    zhjwy3: 0,
    wvpqe5: 0,
    ibv6hh: 0,
    u1mtju: 0,
    h3c5rm: 0,
    vrafjx: 0,
    Bekrc4i: 0,
    i8vvqc: 0,
    g2u3we: 0,
    icvyot: 0,
    B4j52fo: 0,
    irswps: "f1c2pc3t",
    sj55zd: "faj9fo0",
    B95qlz1: "fsm7zmf",
    Eo63ln: 0,
    r9osk6: 0,
    Itrz8y: 0,
    zeg6vx: 0,
    l65xgk: 0,
    Bw4olcx: 0,
    Folb0i: 0,
    I2h8y4: 0,
    Bgxgoyi: 0,
    Bvlkotb: 0,
    Fwyncl: 0,
    Byh5edv: 0,
    Becqvjq: 0,
    uumbiq: 0,
    B73q3dg: 0,
    Bblwbaf: 0,
    B0ezav: "f1wo0sfq",
    r4wkhp: "f1afuynh",
    B7xitij: "f94ddyl",
    d3wsvi: 0,
    Hdqn7s: 0,
    zu5y1p: 0,
    owqphb: 0,
    g9c53k: 0,
    Btmu08z: 0,
    Bthxvy6: 0,
    gluvuq: 0,
    tb88gp: 0,
    wns6jk: 0,
    kdfdk4: 0,
    Bbw008l: 0,
    Bayi1ib: 0,
    B1kkfu3: 0,
    J1oqyp: 0,
    kem6az: 0,
    goa3yj: "fmle6oo",
    p743kt: "f1d3itm4"
  },
  subtleCircularDisabled: {
    De3pzq: "f1c21dwh",
    sj55zd: "f1s2aq7o",
    Bgfg5da: 0,
    B9xav0g: 0,
    oivjwe: 0,
    Bn0qgzm: 0,
    B4g9neb: 0,
    zhjwy3: 0,
    wvpqe5: 0,
    ibv6hh: 0,
    u1mtju: 0,
    h3c5rm: 0,
    vrafjx: 0,
    Bekrc4i: 0,
    i8vvqc: 0,
    g2u3we: 0,
    icvyot: 0,
    B4j52fo: 0,
    irswps: "fp7rvkm"
  },
  subtleCircularDisabledSelected: {
    Bgfg5da: 0,
    B9xav0g: 0,
    oivjwe: 0,
    Bn0qgzm: 0,
    B4g9neb: 0,
    zhjwy3: 0,
    wvpqe5: 0,
    ibv6hh: 0,
    u1mtju: 0,
    h3c5rm: 0,
    vrafjx: 0,
    Bekrc4i: 0,
    i8vvqc: 0,
    g2u3we: 0,
    icvyot: 0,
    B4j52fo: 0,
    irswps: "fegtqic"
  },
  filledCircular: {
    De3pzq: "f16xq7d1",
    sj55zd: "fkfq4zb",
    B95qlz1: "fwwxidx",
    r4wkhp: "f1fcoy83",
    B7xitij: "f14i52sd",
    p743kt: "f15qf7sh"
  },
  filledCircularSelected: {
    De3pzq: "ffp7eso",
    sj55zd: "f1phragk",
    B95qlz1: "f1lm9dni",
    r4wkhp: "f1mn5ei1",
    B7xitij: "f1g6ncd0",
    p743kt: "fl71aob"
  },
  filledCircularDisabled: {
    De3pzq: "f1bg9a2p",
    Bgfg5da: 0,
    B9xav0g: 0,
    oivjwe: 0,
    Bn0qgzm: 0,
    B4g9neb: 0,
    zhjwy3: 0,
    wvpqe5: 0,
    ibv6hh: 0,
    u1mtju: 0,
    h3c5rm: 0,
    vrafjx: 0,
    Bekrc4i: 0,
    i8vvqc: 0,
    g2u3we: 0,
    icvyot: 0,
    B4j52fo: 0,
    irswps: "fp7rvkm",
    sj55zd: "f1s2aq7o"
  },
  filledCircularDisabledSelected: {
    Bgfg5da: 0,
    B9xav0g: 0,
    oivjwe: 0,
    Bn0qgzm: 0,
    B4g9neb: 0,
    zhjwy3: 0,
    wvpqe5: 0,
    ibv6hh: 0,
    u1mtju: 0,
    h3c5rm: 0,
    vrafjx: 0,
    Bekrc4i: 0,
    i8vvqc: 0,
    g2u3we: 0,
    icvyot: 0,
    B4j52fo: 0,
    irswps: "fegtqic"
  }
}, {
  d: [".f122n59{align-items:center;}", ".f13qh94s{display:grid;}", ".fi64zpg{flex-shrink:0;}", ".f1u07yai{grid-auto-flow:column;}", ".frn2hmy{grid-template-columns:auto;}", ".f1olsevy{grid-template-rows:auto;}", ".f1s6fcnf{outline-style:none;}", ".f10pi13n{position:relative;}", [".f3bhgqh{border:none;}", {
    p: -2
  }], [".ft85np5{border-radius:var(--borderRadiusMedium);}", {
    p: -1
  }], ".f1k6fduh{cursor:pointer;}", ".fk6fouc{font-family:var(--fontFamilyBase);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}", [".f1a3p1vp{overflow:hidden;}", {
    p: -1
  }], ".f1cxpek8{text-transform:none;}", ".f4d9j23{justify-content:center;}", ".f1s9ku6b{justify-content:start;}", ".f14mj54c{column-gap:var(--spacingHorizontalXXS);}", [".f1wmopi4{padding:var(--spacingVerticalSNudge) var(--spacingHorizontalSNudge);}", {
    p: -1
  }], [".f12or63q{padding:var(--spacingVerticalXXS) var(--spacingHorizontalSNudge);}", {
    p: -1
  }], ".f1rjii52{column-gap:var(--spacingHorizontalSNudge);}", [".f1w08f2p{padding:var(--spacingVerticalM) var(--spacingHorizontalMNudge);}", {
    p: -1
  }], [".fymxs25{padding:var(--spacingVerticalSNudge) var(--spacingHorizontalMNudge);}", {
    p: -1
  }], [".f1ssfvub{padding:var(--spacingVerticalL) var(--spacingHorizontalMNudge);}", {
    p: -1
  }], [".fwkd1rq{padding:var(--spacingVerticalS) var(--spacingHorizontalMNudge);}", {
    p: -1
  }], ".f1c21dwh{background-color:var(--colorTransparentBackground);}", ".f9rvdkv:enabled:hover{background-color:var(--colorTransparentBackgroundHover);}", ".f1051ucx:enabled:active{background-color:var(--colorTransparentBackgroundPressed);}", ".fmmjozx .fui-Tab__icon{color:var(--colorNeutralForeground2);}", ".fqhzt5g:enabled:hover .fui-Tab__icon{color:var(--colorNeutralForeground2Hover);}", ".f7l5cgy:enabled:active .fui-Tab__icon{color:var(--colorNeutralForeground2Pressed);}", ".fpkze5g .fui-Tab__content{color:var(--colorNeutralForeground2);}", ".f1iywnoi:enabled:hover .fui-Tab__content{color:var(--colorNeutralForeground2Hover);}", ".f9n45c4:enabled:active .fui-Tab__content{color:var(--colorNeutralForeground2Pressed);}", ".fhovq9v{background-color:var(--colorSubtleBackground);}", ".f1bifk9c:enabled:hover{background-color:var(--colorSubtleBackgroundHover);}", ".fo6hitd:enabled:active{background-color:var(--colorSubtleBackgroundPressed);}", ".fato7r6 .fui-Tab__icon{color:var(--colorNeutralForegroundDisabled);}", ".fao1bnu .fui-Tab__content{color:var(--colorNeutralForegroundDisabled);}", ".fdrzuqr{cursor:not-allowed;}", ".f1cadz5z .fui-Tab__icon{color:var(--colorCompoundBrandForeground1);}", ".fwhdxxj:enabled:hover .fui-Tab__icon{color:var(--colorCompoundBrandForeground1Hover);}", ".fintccb:enabled:active .fui-Tab__icon{color:var(--colorCompoundBrandForeground1Pressed);}", ".ffplhdr .fui-Tab__content{color:var(--colorNeutralForeground1);}", ".fjo17wb:enabled:hover .fui-Tab__content{color:var(--colorNeutralForeground1Hover);}", ".f148789c:enabled:active .fui-Tab__content{color:var(--colorNeutralForeground1Pressed);}", [".f44lkw9{border-radius:var(--borderRadiusCircular);}", {
    p: -1
  }], ".ftorr8m .fui-Tab__icon{color:inherit;}", ".f16lqpmv .fui-Tab__content{color:inherit;}", [".fp7rvkm{border:solid var(--strokeWidthThin) var(--colorTransparentStroke);}", {
    p: -2
  }], ".fkfq4zb{color:var(--colorNeutralForeground2);}", ".f1yywxnv:enabled:hover{background-color:var(--colorNeutralBackground1Hover);}", [".ft57sj0:enabled:hover{border:solid var(--strokeWidthThin) var(--colorNeutralStroke1Hover);}", {
    p: -2
  }], ".f1fcoy83:enabled:hover{color:var(--colorNeutralForeground2Hover);}", ".f1lzpamt:enabled:active{background-color:var(--colorNeutralBackground1Pressed);}", [".fhn220o:enabled:active{border:solid var(--strokeWidthThin) var(--colorNeutralStroke1Pressed);}", {
    p: -2
  }], ".f15qf7sh:enabled:active{color:var(--colorNeutralForeground2Pressed);}", ".f16xkysk{background-color:var(--colorBrandBackground2);}", [".f1c2pc3t{border:solid var(--strokeWidthThin) var(--colorCompoundBrandStroke);}", {
    p: -2
  }], ".faj9fo0{color:var(--colorBrandForeground2);}", ".fsm7zmf:enabled:hover{background-color:var(--colorBrandBackground2Hover);}", [".f1wo0sfq:enabled:hover{border:solid var(--strokeWidthThin) var(--colorCompoundBrandStrokeHover);}", {
    p: -2
  }], ".f1afuynh:enabled:hover{color:var(--colorBrandForeground2Hover);}", ".f94ddyl:enabled:active{background-color:var(--colorBrandBackground2Pressed);}", [".fmle6oo:enabled:active{border:solid var(--strokeWidthThin) var(--colorCompoundBrandStrokePressed);}", {
    p: -2
  }], ".f1d3itm4:enabled:active{color:var(--colorBrandForeground2Pressed);}", ".f1s2aq7o{color:var(--colorNeutralForegroundDisabled);}", [".fp7rvkm{border:solid var(--strokeWidthThin) var(--colorTransparentStroke);}", {
    p: -2
  }], [".fegtqic{border:solid var(--strokeWidthThin) var(--colorNeutralStrokeDisabled);}", {
    p: -2
  }], ".f16xq7d1{background-color:var(--colorNeutralBackground3);}", ".fwwxidx:enabled:hover{background-color:var(--colorNeutralBackground3Hover);}", ".f14i52sd:enabled:active{background-color:var(--colorNeutralBackground3Pressed);}", ".ffp7eso{background-color:var(--colorBrandBackground);}", ".f1phragk{color:var(--colorNeutralForegroundOnBrand);}", ".f1lm9dni:enabled:hover{background-color:var(--colorBrandBackgroundHover);}", ".f1mn5ei1:enabled:hover{color:var(--colorNeutralForegroundOnBrand);}", ".f1g6ncd0:enabled:active{background-color:var(--colorBrandBackgroundPressed);}", ".fl71aob:enabled:active{color:var(--colorNeutralForegroundOnBrand);}", ".f1bg9a2p{background-color:var(--colorNeutralBackgroundDisabled);}", [".fp7rvkm{border:solid var(--strokeWidthThin) var(--colorTransparentStroke);}", {
    p: -2
  }], [".fegtqic{border:solid var(--strokeWidthThin) var(--colorNeutralStrokeDisabled);}", {
    p: -2
  }]]
});
var useFocusStyles2 = __styles2({
  base: {
    B8q5s1w: "f8hki3x",
    Bci5o5g: ["f1d2448m", "ffh67wi"],
    n8qw10: "f1bjia2o",
    Bdrgwmp: ["ffh67wi", "f1d2448m"],
    Bn4voq9: "f1p7hgxw",
    Bfpq7zp: "f1way5bb",
    g9k6zt: "f9znhxp",
    j6ew2k: ["fqa318h", "fqa318h"],
    Bhxq17a: "f1vjpng2"
  }
}, {
  d: [".f8hki3x[data-fui-focus-visible]{border-top-color:transparent;}", ".f1d2448m[data-fui-focus-visible]{border-right-color:transparent;}", ".ffh67wi[data-fui-focus-visible]{border-left-color:transparent;}", ".f1bjia2o[data-fui-focus-visible]{border-bottom-color:transparent;}", ".f1p7hgxw[data-fui-focus-visible]{outline-width:var(--strokeWidthThick);}", ".f1way5bb[data-fui-focus-visible]{outline-color:transparent;}", ".f9znhxp[data-fui-focus-visible]{outline-style:solid;}", ".fqa318h[data-fui-focus-visible]{box-shadow:var(--shadow4),0 0 0 var(--strokeWidthThick) var(--colorStrokeFocus2);}", ".f1vjpng2[data-fui-focus-visible]{z-index:1;}"]
});
var usePendingIndicatorStyles = __styles2({
  base: {
    az7l2e: "fhw179n",
    vqofr: 0,
    Bv4n3vi: 0,
    Bgqb9hq: 0,
    B0uxbk8: 0,
    Bf3jju6: "fg9j5n4",
    amg5m6: "f1kmhr4c",
    zkfqfm: "fl1ydde",
    Bkydozb: "f1y7maxz",
    Bka2azo: 0,
    vzq8l0: 0,
    csmgbd: 0,
    Br4ovkg: 0,
    aelrif: "fceyvr4",
    y36c18: "f16cxu0",
    B1ctymy: "f1nwgacf",
    Bgvrrv0: "f15ovonk",
    ddr6p5: "fvje46l"
  },
  disabled: {
    az7l2e: "f1ut20fw",
    Bkydozb: "fhrzcfn"
  },
  smallHorizontal: {
    lawp4y: "fchca7p",
    Baz25je: "f1r53b5e",
    Fbdkly: ["f1s6rxz5", "fo35v8s"],
    mdwyqc: ["fo35v8s", "f1s6rxz5"]
  },
  smallVertical: {
    lawp4y: "fze4zud",
    Fbdkly: ["f1fzr1x6", "f1f351id"],
    Bciustq: "fdp32p8",
    Ccq8qp: "f1aij3q"
  },
  mediumHorizontal: {
    lawp4y: "fchca7p",
    Baz25je: "f1s2r9ax",
    Fbdkly: ["f1o0nnkk", "fxb7rol"],
    mdwyqc: ["fxb7rol", "f1o0nnkk"]
  },
  mediumVertical: {
    lawp4y: "f17jracn",
    Fbdkly: ["f1fzr1x6", "f1f351id"],
    Bciustq: "f117lcb2",
    Ccq8qp: "f1aij3q"
  },
  largeHorizontal: {
    lawp4y: "fchca7p",
    Baz25je: "f1s2r9ax",
    Fbdkly: ["f1o0nnkk", "fxb7rol"],
    mdwyqc: ["fxb7rol", "f1o0nnkk"]
  },
  largeVertical: {
    lawp4y: "fel9d3z",
    Fbdkly: ["f1fzr1x6", "f1f351id"],
    Bciustq: "f6vqlre",
    Ccq8qp: "f1aij3q"
  }
}, {
  h: [".fhw179n:hover::before{background-color:var(--colorNeutralStroke1Hover);}", [".fg9j5n4:hover::before{border-radius:var(--borderRadiusCircular);}", {
    p: -1
  }], '.f1kmhr4c:hover::before{content:"";}', ".fl1ydde:hover::before{position:absolute;}", ".f1ut20fw:hover::before{background-color:var(--colorTransparentStroke);}"],
  a: [".f1y7maxz:active::before{background-color:var(--colorNeutralStroke1Pressed);}", [".fceyvr4:active::before{border-radius:var(--borderRadiusCircular);}", {
    p: -1
  }], '.f16cxu0:active::before{content:"";}', ".f1nwgacf:active::before{position:absolute;}", ".fhrzcfn:active::before{background-color:var(--colorTransparentStroke);}"],
  m: [["@media (forced-colors: active){.f15ovonk:hover::before{background-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fvje46l:active::before{background-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }]],
  d: [".fchca7p::before{bottom:0;}", ".f1r53b5e::before{height:var(--strokeWidthThick);}", ".f1s6rxz5::before{left:var(--spacingHorizontalSNudge);}", ".fo35v8s::before{right:var(--spacingHorizontalSNudge);}", ".fze4zud::before{bottom:var(--spacingVerticalXS);}", ".f1fzr1x6::before{left:0;}", ".f1f351id::before{right:0;}", ".fdp32p8::before{top:var(--spacingVerticalXS);}", ".f1aij3q::before{width:var(--strokeWidthThicker);}", ".f1s2r9ax::before{height:var(--strokeWidthThicker);}", ".f1o0nnkk::before{left:var(--spacingHorizontalM);}", ".fxb7rol::before{right:var(--spacingHorizontalM);}", ".f17jracn::before{bottom:var(--spacingVerticalS);}", ".f117lcb2::before{top:var(--spacingVerticalS);}", ".fel9d3z::before{bottom:var(--spacingVerticalMNudge);}", ".f6vqlre::before{top:var(--spacingVerticalMNudge);}"]
});
var useActiveIndicatorStyles2 = __styles2({
  base: {
    Bjyk6c5: "f1rp0jgh",
    d9w3h3: 0,
    B3778ie: 0,
    B4j8arr: 0,
    Bl18szs: 0,
    Blrzh8d: "f3b9emi",
    Bsft5z2: "f13zj6fq",
    E3zdtr: "f1mdlcz9"
  },
  selected: {
    Bjyk6c5: "f1ksivud",
    Bej4dhw: "f1476jrx",
    B7wqxwa: "f18q216b",
    f7digc: "fy7ktjt",
    Bvuzv5k: "f1033yux",
    k4sdgo: "fkh9b8o"
  },
  disabled: {
    Bjyk6c5: "f13lkzet"
  },
  smallHorizontal: {
    By385i5: "fo72kxq",
    Dlnsje: "f9bb2ob",
    Eqx8gd: ["f1q70ajw", "f18rbzdx"],
    B1piin3: ["f18rbzdx", "f1q70ajw"]
  },
  smallVertical: {
    By385i5: "fqbue9b",
    Eqx8gd: ["f1n6gb5g", "f15yvnhg"],
    bn5sak: "fk1klkt",
    a2br6o: "f1o25lip"
  },
  mediumHorizontal: {
    By385i5: "fo72kxq",
    Dlnsje: "f1vx7lu8",
    Eqx8gd: ["fna7m5n", "f1oxpfwv"],
    B1piin3: ["f1oxpfwv", "fna7m5n"]
  },
  mediumVertical: {
    By385i5: "fipylg0",
    Eqx8gd: ["f1n6gb5g", "f15yvnhg"],
    bn5sak: "fqchiol",
    a2br6o: "f1o25lip"
  },
  largeHorizontal: {
    By385i5: "fo72kxq",
    Dlnsje: "f1vx7lu8",
    Eqx8gd: ["fna7m5n", "f1oxpfwv"],
    B1piin3: ["f1oxpfwv", "fna7m5n"]
  },
  largeVertical: {
    By385i5: "f1w7dm5g",
    Eqx8gd: ["f1n6gb5g", "f15yvnhg"],
    bn5sak: "f1p6em4m",
    a2br6o: "f1o25lip"
  }
}, {
  d: [".f1rp0jgh::after{background-color:var(--colorTransparentStroke);}", [".f3b9emi::after{border-radius:var(--borderRadiusCircular);}", {
    p: -1
  }], '.f13zj6fq::after{content:"";}', ".f1mdlcz9::after{position:absolute;}", ".f1ksivud::after{background-color:var(--colorCompoundBrandStroke);}", ".f1476jrx:enabled:hover::after{background-color:var(--colorCompoundBrandStrokeHover);}", ".f18q216b:enabled:active::after{background-color:var(--colorCompoundBrandStrokePressed);}", ".f13lkzet::after{background-color:var(--colorNeutralForegroundDisabled);}", ".fo72kxq::after{bottom:0;}", ".f9bb2ob::after{height:var(--strokeWidthThick);}", ".f1q70ajw::after{left:var(--spacingHorizontalSNudge);}", ".f18rbzdx::after{right:var(--spacingHorizontalSNudge);}", ".fqbue9b::after{bottom:var(--spacingVerticalXS);}", ".f1n6gb5g::after{left:0;}", ".f15yvnhg::after{right:0;}", ".fk1klkt::after{top:var(--spacingVerticalXS);}", ".f1o25lip::after{width:var(--strokeWidthThicker);}", ".f1vx7lu8::after{height:var(--strokeWidthThicker);}", ".fna7m5n::after{left:var(--spacingHorizontalM);}", ".f1oxpfwv::after{right:var(--spacingHorizontalM);}", ".fipylg0::after{bottom:var(--spacingVerticalS);}", ".fqchiol::after{top:var(--spacingVerticalS);}", ".f1w7dm5g::after{bottom:var(--spacingVerticalMNudge);}", ".f1p6em4m::after{top:var(--spacingVerticalMNudge);}"],
  m: [["@media (forced-colors: active){.fy7ktjt::after{background-color:ButtonText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1033yux:enabled:hover::after{background-color:ButtonText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fkh9b8o:enabled:active::after{background-color:ButtonText;}}", {
    m: "(forced-colors: active)"
  }]]
});
var useIconStyles7 = __styles2({
  base: {
    Br312pm: "fwpfdsa",
    Ijaq50: "f16hsg94",
    Bt984gj: "f122n59",
    mc9l5x: "ftuwxu6",
    Brf1p80: "f4d9j23",
    B68tc82: 0,
    Bmxbyg5: 0,
    Bpg54ce: "f1a3p1vp",
    D0sxk3: "f16u1re",
    t6yez3: "f8bsbmo"
  },
  small: {
    Be2twd7: "fe5j1ua",
    Bqenvij: "fjamq6b",
    a9b677: "f64fuq3"
  },
  medium: {
    Be2twd7: "fe5j1ua",
    Bqenvij: "fjamq6b",
    a9b677: "f64fuq3"
  },
  large: {
    Be2twd7: "f1rt2boy",
    Bqenvij: "frvgh55",
    a9b677: "fq4mcun"
  },
  selected: {
    D0sxk3: "fxoiby5",
    t6yez3: "f15q0o9g"
  }
}, {
  d: [".fwpfdsa{grid-column-start:1;}", ".f16hsg94{grid-row-start:1;}", ".f122n59{align-items:center;}", ".ftuwxu6{display:inline-flex;}", ".f4d9j23{justify-content:center;}", [".f1a3p1vp{overflow:hidden;}", {
    p: -1
  }], ".f16u1re .fui-Icon-filled{display:none;}", ".f8bsbmo .fui-Icon-regular{display:inline;}", ".fe5j1ua{font-size:20px;}", ".fjamq6b{height:20px;}", ".f64fuq3{width:20px;}", ".f1rt2boy{font-size:24px;}", ".frvgh55{height:24px;}", ".fq4mcun{width:24px;}", ".fxoiby5 .fui-Icon-filled{display:inline;}", ".f15q0o9g .fui-Icon-regular{display:none;}"]
});
var useContentStyles2 = __styles2({
  base: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "figsok6",
    Bg96gwp: "f1i3iumi",
    B68tc82: 0,
    Bmxbyg5: 0,
    Bpg54ce: "f1a3p1vp",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f1bwptpd"
  },
  selected: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "f1i3iumi"
  },
  large: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fod5ikn",
    Bhrd7zp: "figsok6",
    Bg96gwp: "faaz57k"
  },
  largeSelected: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fod5ikn",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "faaz57k"
  },
  noIconBefore: {
    Br312pm: "fwpfdsa",
    Ijaq50: "f16hsg94"
  },
  iconBefore: {
    Br312pm: "fd46tj4",
    Ijaq50: "f16hsg94"
  },
  placeholder: {
    Bcdw1i0: "fd7fpy0"
  }
}, {
  d: [".fk6fouc{font-family:var(--fontFamilyBase);}", ".fkhj508{font-size:var(--fontSizeBase300);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}", [".f1a3p1vp{overflow:hidden;}", {
    p: -1
  }], [".f1bwptpd{padding:var(--spacingVerticalNone) var(--spacingHorizontalXXS);}", {
    p: -1
  }], ".fl43uef{font-weight:var(--fontWeightSemibold);}", ".fod5ikn{font-size:var(--fontSizeBase400);}", ".faaz57k{line-height:var(--lineHeightBase400);}", ".fwpfdsa{grid-column-start:1;}", ".f16hsg94{grid-row-start:1;}", ".fd46tj4{grid-column-start:2;}", ".fd7fpy0{visibility:hidden;}"]
});
var useTabStyles_unstable = (state) => {
  "use no memo";
  useTabIndicatorStyles_unstable(state);
  useTabButtonStyles_unstable(state, state.root);
  useTabContentStyles_unstable(state);
  return state;
};
var useTabIndicatorStyles_unstable = (state) => {
  "use no memo";
  const rootStyles = useRootStyles13();
  const pendingIndicatorStyles = usePendingIndicatorStyles();
  const activeIndicatorStyles = useActiveIndicatorStyles2();
  const {
    appearance,
    disabled,
    selected,
    size,
    vertical
  } = state;
  const classes = [tabClassNames.root, rootStyles.root];
  if (appearance !== "subtle-circular" && appearance !== "filled-circular") {
    classes.push(
      // pending indicator (before pseudo element)
      pendingIndicatorStyles.base,
      size === "small" && (vertical ? pendingIndicatorStyles.smallVertical : pendingIndicatorStyles.smallHorizontal),
      size === "medium" && (vertical ? pendingIndicatorStyles.mediumVertical : pendingIndicatorStyles.mediumHorizontal),
      size === "large" && (vertical ? pendingIndicatorStyles.largeVertical : pendingIndicatorStyles.largeHorizontal),
      disabled && pendingIndicatorStyles.disabled,
      // active indicator (after pseudo element)
      selected && activeIndicatorStyles.base,
      selected && !disabled && activeIndicatorStyles.selected,
      selected && size === "small" && (vertical ? activeIndicatorStyles.smallVertical : activeIndicatorStyles.smallHorizontal),
      selected && size === "medium" && (vertical ? activeIndicatorStyles.mediumVertical : activeIndicatorStyles.mediumHorizontal),
      selected && size === "large" && (vertical ? activeIndicatorStyles.largeVertical : activeIndicatorStyles.largeHorizontal),
      selected && disabled && activeIndicatorStyles.disabled
    );
  }
  state.root.className = mergeClasses(...classes, state.root.className);
  useTabAnimatedIndicatorStyles_unstable(state);
  return state;
};
var useTabButtonStyles_unstable = (state, slot) => {
  "use no memo";
  const rootStyles = useRootStyles13();
  const focusStyles = useFocusStyles2();
  const {
    appearance,
    disabled,
    selected,
    size,
    vertical
  } = state;
  const isSubtleCircular = appearance === "subtle-circular";
  const isFilledCircular = appearance === "filled-circular";
  const isCircular = isSubtleCircular || isFilledCircular;
  const circularAppearance = [
    rootStyles.circular,
    // subtle-circular appearance
    isSubtleCircular && rootStyles.subtleCircular,
    selected && isSubtleCircular && rootStyles.subtleCircularSelected,
    disabled && isSubtleCircular && rootStyles.subtleCircularDisabled,
    selected && disabled && isSubtleCircular && rootStyles.subtleCircularDisabledSelected,
    // filled-circular appearance
    isFilledCircular && rootStyles.filledCircular,
    selected && isFilledCircular && rootStyles.filledCircularSelected,
    disabled && isFilledCircular && rootStyles.filledCircularDisabled,
    selected && disabled && isFilledCircular && rootStyles.filledCircularDisabledSelected
  ];
  slot.className = mergeClasses(
    rootStyles.button,
    // orientation
    vertical ? rootStyles.vertical : rootStyles.horizontal,
    // size
    size === "small" && (vertical ? rootStyles.smallVertical : rootStyles.smallHorizontal),
    size === "medium" && (vertical ? rootStyles.mediumVertical : rootStyles.mediumHorizontal),
    size === "large" && (vertical ? rootStyles.largeVertical : rootStyles.largeHorizontal),
    focusStyles.base,
    !disabled && appearance === "subtle" && rootStyles.subtle,
    !disabled && appearance === "transparent" && rootStyles.transparent,
    ...isCircular ? circularAppearance : [!disabled && selected && rootStyles.selected],
    disabled && rootStyles.disabled,
    slot.className
  );
  return state;
};
var useTabContentStyles_unstable = (state) => {
  "use no memo";
  const iconStyles = useIconStyles7();
  const contentStyles = useContentStyles2();
  const {
    selected,
    size
  } = state;
  if (state.icon) {
    state.icon.className = mergeClasses(tabClassNames.icon, iconStyles.base, iconStyles[size], selected && iconStyles.selected, state.icon.className);
  }
  if (state.contentReservedSpace) {
    state.contentReservedSpace.className = mergeClasses(reservedSpaceClassNames.content, contentStyles.base, size === "large" ? contentStyles.largeSelected : contentStyles.selected, state.icon ? contentStyles.iconBefore : contentStyles.noIconBefore, contentStyles.placeholder, state.content.className);
    state.contentReservedSpaceClassName = state.contentReservedSpace.className;
  }
  state.content.className = mergeClasses(tabClassNames.content, contentStyles.base, size === "large" && contentStyles.large, selected && (size === "large" ? contentStyles.largeSelected : contentStyles.selected), state.icon ? contentStyles.iconBefore : contentStyles.noIconBefore, state.content.className);
  return state;
};

// node_modules/@fluentui/react-tabs/lib/components/Tab/Tab.js
var Tab2 = React209.forwardRef((props, ref) => {
  const state = useTab_unstable(props, ref);
  useTabStyles_unstable(state);
  useCustomStyleHook("useTabStyles_unstable")(state);
  return renderTab_unstable(state);
});
Tab2.displayName = "Tab";

// node_modules/@fluentui/react-tabs/lib/components/TabList/TabList.js
var React211 = __toESM(require_react());

// node_modules/@fluentui/react-tabs/lib/components/TabList/useTabList.js
var React210 = __toESM(require_react());
var useTabList_unstable = (props, ref) => {
  const { appearance = "transparent", reserveSelectedTabSpace = true, disabled = false, onTabSelect, selectTabOnFocus = false, size = "medium", vertical = false } = props;
  const innerRef = React210.useRef(null);
  const focusAttributes = useArrowNavigationGroup({
    circular: true,
    axis: vertical ? "vertical" : "horizontal",
    memorizeCurrent: true
  });
  const [selectedValue, setSelectedValue] = useControllableState({
    state: props.selectedValue,
    defaultState: props.defaultSelectedValue,
    initialState: void 0
  });
  const currentSelectedValue = React210.useRef(void 0);
  const previousSelectedValue = React210.useRef(void 0);
  React210.useEffect(() => {
    previousSelectedValue.current = currentSelectedValue.current;
    currentSelectedValue.current = selectedValue;
  }, [
    selectedValue
  ]);
  const onSelect = useEventCallback((event, data) => {
    setSelectedValue(data.value);
    onTabSelect === null || onTabSelect === void 0 ? void 0 : onTabSelect(event, data);
  });
  const registeredTabs = React210.useRef({});
  const onRegister = useEventCallback((data) => {
    registeredTabs.current[JSON.stringify(data.value)] = data;
  });
  const onUnregister = useEventCallback((data) => {
    delete registeredTabs.current[JSON.stringify(data.value)];
  });
  const getRegisteredTabs = React210.useCallback(() => {
    return {
      selectedValue: currentSelectedValue.current,
      previousSelectedValue: previousSelectedValue.current,
      registeredTabs: registeredTabs.current
    };
  }, []);
  return {
    components: {
      root: "div"
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      // FIXME:
      // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`
      // but since it would be a breaking change to fix it, we are casting ref to it's proper type
      ref: useMergedRefs(ref, innerRef),
      role: "tablist",
      "aria-orientation": vertical ? "vertical" : "horizontal",
      ...focusAttributes,
      ...props
    }), {
      elementType: "div"
    }),
    appearance,
    reserveSelectedTabSpace,
    disabled,
    selectTabOnFocus,
    selectedValue,
    size,
    vertical,
    onRegister,
    onUnregister,
    onSelect,
    getRegisteredTabs
  };
};

// node_modules/@fluentui/react-tabs/lib/components/TabList/renderTabList.js
var renderTabList_unstable = (state, contextValues) => {
  assertSlots(state);
  return jsx(state.root, {
    children: jsx(TabListProvider, {
      value: contextValues.tabList,
      children: state.root.children
    })
  });
};

// node_modules/@fluentui/react-tabs/lib/components/TabList/useTabListStyles.styles.js
var tabListClassNames = {
  root: "fui-TabList"
};
var useStyles28 = __styles2({
  root: {
    mc9l5x: "f22iagw",
    Beiy3e4: "f1063pyq",
    Bnnss6s: "fi64zpg",
    Eh141a: "flvyvdh",
    qhf8xq: "f10pi13n"
  },
  horizontal: {
    Bt984gj: "f1q9h2pe",
    Beiy3e4: "f1063pyq"
  },
  vertical: {
    Bt984gj: "f1q9h2pe",
    Beiy3e4: "f1vx9l62"
  },
  roundedSmall: {
    i8kkvl: 0,
    Belr9w4: 0,
    rmohyg: "f1eyhf9v"
  },
  rounded: {
    i8kkvl: 0,
    Belr9w4: 0,
    rmohyg: "faqewft"
  }
}, {
  d: [".f22iagw{display:flex;}", ".f1063pyq{flex-direction:row;}", ".fi64zpg{flex-shrink:0;}", ".flvyvdh{flex-wrap:nowrap;}", ".f10pi13n{position:relative;}", ".f1q9h2pe{align-items:stretch;}", ".f1vx9l62{flex-direction:column;}", [".f1eyhf9v{gap:var(--spacingHorizontalSNudge);}", {
    p: -1
  }], [".faqewft{gap:var(--spacingHorizontalS);}", {
    p: -1
  }]]
});
var useTabListStyles_unstable = (state) => {
  "use no memo";
  const {
    appearance,
    vertical,
    size
  } = state;
  const styles = useStyles28();
  const isRounded = appearance === "subtle-circular" || appearance === "filled-circular";
  state.root.className = mergeClasses(tabListClassNames.root, styles.root, vertical ? styles.vertical : styles.horizontal, isRounded && (size === "small" ? styles.roundedSmall : styles.rounded), state.root.className);
  return state;
};

// node_modules/@fluentui/react-tabs/lib/components/TabList/useTabListContextValues.js
function useTabListContextValues_unstable(state) {
  const { appearance, reserveSelectedTabSpace, disabled, selectTabOnFocus, selectedValue: selectedKey, onRegister, onUnregister, onSelect, getRegisteredTabs, size, vertical } = state;
  const tabList = {
    appearance,
    reserveSelectedTabSpace,
    disabled,
    selectTabOnFocus,
    selectedValue: selectedKey,
    onSelect,
    onRegister,
    onUnregister,
    getRegisteredTabs,
    size,
    vertical
  };
  return {
    tabList
  };
}

// node_modules/@fluentui/react-tabs/lib/components/TabList/TabList.js
var TabList = React211.forwardRef((props, ref) => {
  const state = useTabList_unstable(props, ref);
  const contextValues = useTabListContextValues_unstable(state);
  useTabListStyles_unstable(state);
  useCustomStyleHook("useTabListStyles_unstable")(state);
  return renderTabList_unstable(state, contextValues);
});
TabList.displayName = "TabList";

// node_modules/@fluentui/react-tabs/lib/components/TabList/TabList.types.js
var React212 = __toESM(require_react());

// node_modules/@fluentui/react-text/lib/components/Text/Text.js
var React214 = __toESM(require_react());

// node_modules/@fluentui/react-text/lib/components/Text/useText.js
var React213 = __toESM(require_react());
var useText_unstable = (props, ref) => {
  const { wrap, truncate, block, italic, underline, strikethrough, size, font, weight, align } = props;
  const state = {
    align: align !== null && align !== void 0 ? align : "start",
    block: block !== null && block !== void 0 ? block : false,
    font: font !== null && font !== void 0 ? font : "base",
    italic: italic !== null && italic !== void 0 ? italic : false,
    size: size !== null && size !== void 0 ? size : 300,
    strikethrough: strikethrough !== null && strikethrough !== void 0 ? strikethrough : false,
    truncate: truncate !== null && truncate !== void 0 ? truncate : false,
    underline: underline !== null && underline !== void 0 ? underline : false,
    weight: weight !== null && weight !== void 0 ? weight : "regular",
    wrap: wrap !== null && wrap !== void 0 ? wrap : true,
    components: {
      root: "span"
    },
    root: slot_exports.always(getIntrinsicElementProps("span", {
      // FIXME:
      // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLHeadingElement & HTMLPreElement`
      // but since it would be a breaking change to fix it, we are casting ref to it's proper type
      ref,
      ...props
    }), {
      elementType: "span"
    })
  };
  return state;
};

// node_modules/@fluentui/react-text/lib/components/Text/renderText.js
var renderText_unstable = (state) => {
  assertSlots(state);
  return jsx(state.root, {});
};

// node_modules/@fluentui/react-text/lib/components/Text/useTextStyles.styles.js
var textClassNames = {
  root: "fui-Text"
};
var useStyles29 = __styles2({
  root: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bg96gwp: "f1i3iumi",
    Bhrd7zp: "figsok6",
    fsow6f: "fpgzoln",
    mc9l5x: "f1w7gpdv",
    Huce71: "f6juhto",
    B68tc82: 0,
    Bmxbyg5: 0,
    Bpg54ce: "f1gl81tg",
    ygn44y: "f2jf649"
  },
  nowrap: {
    Huce71: "fz5stix",
    B68tc82: 0,
    Bmxbyg5: 0,
    Bpg54ce: "f1a3p1vp"
  },
  truncate: {
    ygn44y: "f1cmbuwj"
  },
  block: {
    mc9l5x: "ftgm304"
  },
  italic: {
    B80ckks: "f1j4dglz"
  },
  underline: {
    w71qe1: "f13mvf36"
  },
  strikethrough: {
    w71qe1: "fv5q2k7"
  },
  strikethroughUnderline: {
    w71qe1: "f1drk4o6"
  },
  base100: {
    Be2twd7: "f13mqy1h",
    Bg96gwp: "fcpl73t"
  },
  base200: {
    Be2twd7: "fy9rknc",
    Bg96gwp: "fwrc4pm"
  },
  base400: {
    Be2twd7: "fod5ikn",
    Bg96gwp: "faaz57k"
  },
  base500: {
    Be2twd7: "f1pp30po",
    Bg96gwp: "f106mvju"
  },
  base600: {
    Be2twd7: "f1x0m3f5",
    Bg96gwp: "fb86gi6"
  },
  hero700: {
    Be2twd7: "fojgt09",
    Bg96gwp: "fcen8rp"
  },
  hero800: {
    Be2twd7: "fccw675",
    Bg96gwp: "f1ebx5kk"
  },
  hero900: {
    Be2twd7: "f15afnhw",
    Bg96gwp: "fr3w3wp"
  },
  hero1000: {
    Be2twd7: "fpyltcb",
    Bg96gwp: "f1ivgwrt"
  },
  monospace: {
    Bahqtrf: "f1fedwem"
  },
  numeric: {
    Bahqtrf: "f1uq0ln5"
  },
  weightMedium: {
    Bhrd7zp: "fdj6btp"
  },
  weightSemibold: {
    Bhrd7zp: "fl43uef"
  },
  weightBold: {
    Bhrd7zp: "flh3ekv"
  },
  alignCenter: {
    fsow6f: "f17mccla"
  },
  alignEnd: {
    fsow6f: "f12ymhq5"
  },
  alignJustify: {
    fsow6f: "f1j59e10"
  }
}, {
  d: [".fk6fouc{font-family:var(--fontFamilyBase);}", ".fkhj508{font-size:var(--fontSizeBase300);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".fpgzoln{text-align:start;}", ".f1w7gpdv{display:inline;}", ".f6juhto{white-space:normal;}", [".f1gl81tg{overflow:visible;}", {
    p: -1
  }], ".f2jf649{text-overflow:clip;}", ".fz5stix{white-space:nowrap;}", [".f1a3p1vp{overflow:hidden;}", {
    p: -1
  }], ".f1cmbuwj{text-overflow:ellipsis;}", ".ftgm304{display:block;}", ".f1j4dglz{font-style:italic;}", ".f13mvf36{text-decoration-line:underline;}", ".fv5q2k7{text-decoration-line:line-through;}", ".f1drk4o6{text-decoration-line:line-through underline;}", ".f13mqy1h{font-size:var(--fontSizeBase100);}", ".fcpl73t{line-height:var(--lineHeightBase100);}", ".fy9rknc{font-size:var(--fontSizeBase200);}", ".fwrc4pm{line-height:var(--lineHeightBase200);}", ".fod5ikn{font-size:var(--fontSizeBase400);}", ".faaz57k{line-height:var(--lineHeightBase400);}", ".f1pp30po{font-size:var(--fontSizeBase500);}", ".f106mvju{line-height:var(--lineHeightBase500);}", ".f1x0m3f5{font-size:var(--fontSizeBase600);}", ".fb86gi6{line-height:var(--lineHeightBase600);}", ".fojgt09{font-size:var(--fontSizeHero700);}", ".fcen8rp{line-height:var(--lineHeightHero700);}", ".fccw675{font-size:var(--fontSizeHero800);}", ".f1ebx5kk{line-height:var(--lineHeightHero800);}", ".f15afnhw{font-size:var(--fontSizeHero900);}", ".fr3w3wp{line-height:var(--lineHeightHero900);}", ".fpyltcb{font-size:var(--fontSizeHero1000);}", ".f1ivgwrt{line-height:var(--lineHeightHero1000);}", ".f1fedwem{font-family:var(--fontFamilyMonospace);}", ".f1uq0ln5{font-family:var(--fontFamilyNumeric);}", ".fdj6btp{font-weight:var(--fontWeightMedium);}", ".fl43uef{font-weight:var(--fontWeightSemibold);}", ".flh3ekv{font-weight:var(--fontWeightBold);}", ".f17mccla{text-align:center;}", ".f12ymhq5{text-align:end;}", ".f1j59e10{text-align:justify;}"]
});
var useTextStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles29();
  state.root.className = mergeClasses(textClassNames.root, styles.root, state.wrap === false && styles.nowrap, state.truncate && styles.truncate, state.block && styles.block, state.italic && styles.italic, state.underline && styles.underline, state.strikethrough && styles.strikethrough, state.underline && state.strikethrough && styles.strikethroughUnderline, state.size === 100 && styles.base100, state.size === 200 && styles.base200, state.size === 400 && styles.base400, state.size === 500 && styles.base500, state.size === 600 && styles.base600, state.size === 700 && styles.hero700, state.size === 800 && styles.hero800, state.size === 900 && styles.hero900, state.size === 1e3 && styles.hero1000, state.font === "monospace" && styles.monospace, state.font === "numeric" && styles.numeric, state.weight === "medium" && styles.weightMedium, state.weight === "semibold" && styles.weightSemibold, state.weight === "bold" && styles.weightBold, state.align === "center" && styles.alignCenter, state.align === "end" && styles.alignEnd, state.align === "justify" && styles.alignJustify, state.root.className);
  return state;
};

// node_modules/@fluentui/react-text/lib/components/Text/Text.js
var Text = React214.forwardRef((props, ref) => {
  const state = useText_unstable(props, ref);
  useTextStyles_unstable(state);
  useCustomStyleHook("useTextStyles_unstable")(state);
  return renderText_unstable(state);
});
Text.displayName = "Text";

// node_modules/@fluentui/react-text/lib/components/presets/createPreset.js
var React215 = __toESM(require_react());
function createPreset(options) {
  const { useStyles: useStyles90, className, displayName } = options;
  const Wrapper = React215.forwardRef((props, ref) => {
    "use no memo";
    const styles = useStyles90();
    const state = useText_unstable(props, ref);
    useTextStyles_unstable(state);
    state.root.className = mergeClasses(className, state.root.className, styles.root, props.className);
    return renderText_unstable(state);
  });
  Wrapper.displayName = displayName;
  return Wrapper;
}

// node_modules/@fluentui/react-text/lib/components/presets/Body1/useBody1Styles.styles.js
var body1ClassNames = {
  root: "fui-Body1"
};
var useBody1Styles = __styles2({
  root: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "figsok6",
    Bg96gwp: "f1i3iumi"
  }
}, {
  d: [".fk6fouc{font-family:var(--fontFamilyBase);}", ".fkhj508{font-size:var(--fontSizeBase300);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}"]
});

// node_modules/@fluentui/react-text/lib/components/presets/Body1/Body1.js
var Body1 = createPreset({
  useStyles: useBody1Styles,
  className: body1ClassNames.root,
  displayName: "Body1"
});

// node_modules/@fluentui/react-text/lib/components/presets/Body1Strong/useBody1StrongStyles.styles.js
var body1StrongClassNames = {
  root: "fui-Body1Strong"
};
var useBody1StrongStyles = __styles2({
  root: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "f1i3iumi"
  }
}, {
  d: [".fk6fouc{font-family:var(--fontFamilyBase);}", ".fkhj508{font-size:var(--fontSizeBase300);}", ".fl43uef{font-weight:var(--fontWeightSemibold);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}"]
});

// node_modules/@fluentui/react-text/lib/components/presets/Body1Strong/Body1Strong.js
var Body1Strong = createPreset({
  useStyles: useBody1StrongStyles,
  className: body1StrongClassNames.root,
  displayName: "Body1Strong"
});

// node_modules/@fluentui/react-text/lib/components/presets/Body1Stronger/useBody1StrongerStyles.styles.js
var body1StrongerClassNames = {
  root: "fui-Body1Stronger"
};
var useBody1StrongerStyles = __styles2({
  root: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "flh3ekv",
    Bg96gwp: "f1i3iumi"
  }
}, {
  d: [".fk6fouc{font-family:var(--fontFamilyBase);}", ".fkhj508{font-size:var(--fontSizeBase300);}", ".flh3ekv{font-weight:var(--fontWeightBold);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}"]
});

// node_modules/@fluentui/react-text/lib/components/presets/Body1Stronger/Body1Stronger.js
var Body1Stronger = createPreset({
  useStyles: useBody1StrongerStyles,
  className: body1StrongerClassNames.root,
  displayName: "Body1Stronger"
});

// node_modules/@fluentui/react-text/lib/components/presets/Body2/useBody2Styles.styles.js
var body2ClassNames = {
  root: "fui-Body2"
};
var useBody2Styles = __styles2({
  root: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fod5ikn",
    Bhrd7zp: "figsok6",
    Bg96gwp: "faaz57k"
  }
}, {
  d: [".fk6fouc{font-family:var(--fontFamilyBase);}", ".fod5ikn{font-size:var(--fontSizeBase400);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".faaz57k{line-height:var(--lineHeightBase400);}"]
});

// node_modules/@fluentui/react-text/lib/components/presets/Body2/Body2.js
var Body2 = createPreset({
  useStyles: useBody2Styles,
  className: body2ClassNames.root,
  displayName: "Body2"
});

// node_modules/@fluentui/react-text/lib/components/presets/Caption1/useCaption1Styles.styles.js
var caption1ClassNames = {
  root: "fui-Caption1"
};
var useCaption1Styles = __styles2({
  root: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fy9rknc",
    Bhrd7zp: "figsok6",
    Bg96gwp: "fwrc4pm"
  }
}, {
  d: [".fk6fouc{font-family:var(--fontFamilyBase);}", ".fy9rknc{font-size:var(--fontSizeBase200);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".fwrc4pm{line-height:var(--lineHeightBase200);}"]
});

// node_modules/@fluentui/react-text/lib/components/presets/Caption1/Caption1.js
var Caption1 = createPreset({
  useStyles: useCaption1Styles,
  className: caption1ClassNames.root,
  displayName: "Caption1"
});

// node_modules/@fluentui/react-text/lib/components/presets/Caption1Strong/useCaption1StrongStyles.styles.js
var caption1StrongClassNames = {
  root: "fui-Caption1Strong"
};
var useCaption1StrongStyles = __styles2({
  root: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fy9rknc",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "fwrc4pm"
  }
}, {
  d: [".fk6fouc{font-family:var(--fontFamilyBase);}", ".fy9rknc{font-size:var(--fontSizeBase200);}", ".fl43uef{font-weight:var(--fontWeightSemibold);}", ".fwrc4pm{line-height:var(--lineHeightBase200);}"]
});

// node_modules/@fluentui/react-text/lib/components/presets/Caption1Strong/Caption1Strong.js
var Caption1Strong = createPreset({
  useStyles: useCaption1StrongStyles,
  className: caption1StrongClassNames.root,
  displayName: "Caption1Strong"
});

// node_modules/@fluentui/react-text/lib/components/presets/Caption1Stronger/useCaption1Stronger.styles.js
var caption1StrongerClassNames = {
  root: "fui-Caption1Stronger"
};
var useCaption1StrongerStyles = __styles2({
  root: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fy9rknc",
    Bhrd7zp: "flh3ekv",
    Bg96gwp: "fwrc4pm"
  }
}, {
  d: [".fk6fouc{font-family:var(--fontFamilyBase);}", ".fy9rknc{font-size:var(--fontSizeBase200);}", ".flh3ekv{font-weight:var(--fontWeightBold);}", ".fwrc4pm{line-height:var(--lineHeightBase200);}"]
});

// node_modules/@fluentui/react-text/lib/components/presets/Caption1Stronger/Caption1Stronger.js
var Caption1Stronger = createPreset({
  useStyles: useCaption1StrongerStyles,
  className: caption1StrongerClassNames.root,
  displayName: "Caption1Stronger"
});

// node_modules/@fluentui/react-text/lib/components/presets/Caption2/useCaption2Styles.styles.js
var caption2ClassNames = {
  root: "fui-Caption2"
};
var useCaption2Styles = __styles2({
  root: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "f13mqy1h",
    Bhrd7zp: "figsok6",
    Bg96gwp: "fcpl73t"
  }
}, {
  d: [".fk6fouc{font-family:var(--fontFamilyBase);}", ".f13mqy1h{font-size:var(--fontSizeBase100);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".fcpl73t{line-height:var(--lineHeightBase100);}"]
});

// node_modules/@fluentui/react-text/lib/components/presets/Caption2/Caption2.js
var Caption2 = createPreset({
  useStyles: useCaption2Styles,
  className: caption2ClassNames.root,
  displayName: "Caption2"
});

// node_modules/@fluentui/react-text/lib/components/presets/Caption2Strong/useCaption2StrongStyles.styles.js
var caption2StrongClassNames = {
  root: "fui-Caption2Strong"
};
var useCaption2StrongStyles = __styles2({
  root: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "f13mqy1h",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "fcpl73t"
  }
}, {
  d: [".fk6fouc{font-family:var(--fontFamilyBase);}", ".f13mqy1h{font-size:var(--fontSizeBase100);}", ".fl43uef{font-weight:var(--fontWeightSemibold);}", ".fcpl73t{line-height:var(--lineHeightBase100);}"]
});

// node_modules/@fluentui/react-text/lib/components/presets/Caption2Strong/Caption2Strong.js
var Caption2Strong = createPreset({
  useStyles: useCaption2StrongStyles,
  className: caption2StrongClassNames.root,
  displayName: "Caption2Strong"
});

// node_modules/@fluentui/react-text/lib/components/presets/Display/useDisplayStyles.styles.js
var displayClassNames = {
  root: "fui-Display"
};
var useDisplayStyles = __styles2({
  root: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fpyltcb",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "f1ivgwrt"
  }
}, {
  d: [".fk6fouc{font-family:var(--fontFamilyBase);}", ".fpyltcb{font-size:var(--fontSizeHero1000);}", ".fl43uef{font-weight:var(--fontWeightSemibold);}", ".f1ivgwrt{line-height:var(--lineHeightHero1000);}"]
});

// node_modules/@fluentui/react-text/lib/components/presets/Display/Display.js
var Display = createPreset({
  useStyles: useDisplayStyles,
  className: displayClassNames.root,
  displayName: "Display"
});

// node_modules/@fluentui/react-text/lib/components/presets/LargeTitle/useLargeTitleStyles.styles.js
var largeTitleClassNames = {
  root: "fui-LargeTitle"
};
var useLargeTitleStyles = __styles2({
  root: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "f15afnhw",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "fr3w3wp"
  }
}, {
  d: [".fk6fouc{font-family:var(--fontFamilyBase);}", ".f15afnhw{font-size:var(--fontSizeHero900);}", ".fl43uef{font-weight:var(--fontWeightSemibold);}", ".fr3w3wp{line-height:var(--lineHeightHero900);}"]
});

// node_modules/@fluentui/react-text/lib/components/presets/LargeTitle/LargeTitle.js
var LargeTitle = createPreset({
  useStyles: useLargeTitleStyles,
  className: largeTitleClassNames.root,
  displayName: "LargeTitle"
});

// node_modules/@fluentui/react-text/lib/components/presets/Subtitle1/useSubtitle1Styles.styles.js
var subtitle1ClassNames = {
  root: "fui-Subtitle1"
};
var useSubtitle1Styles = __styles2({
  root: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "f1pp30po",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "f106mvju"
  }
}, {
  d: [".fk6fouc{font-family:var(--fontFamilyBase);}", ".f1pp30po{font-size:var(--fontSizeBase500);}", ".fl43uef{font-weight:var(--fontWeightSemibold);}", ".f106mvju{line-height:var(--lineHeightBase500);}"]
});

// node_modules/@fluentui/react-text/lib/components/presets/Subtitle1/Subtitle1.js
var Subtitle1 = createPreset({
  useStyles: useSubtitle1Styles,
  className: subtitle1ClassNames.root,
  displayName: "Subtitle1"
});

// node_modules/@fluentui/react-text/lib/components/presets/Subtitle2/useSubtitle2Styles.styles.js
var subtitle2ClassNames = {
  root: "fui-Subtitle2"
};
var useSubtitle2Styles = __styles2({
  root: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fod5ikn",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "faaz57k"
  }
}, {
  d: [".fk6fouc{font-family:var(--fontFamilyBase);}", ".fod5ikn{font-size:var(--fontSizeBase400);}", ".fl43uef{font-weight:var(--fontWeightSemibold);}", ".faaz57k{line-height:var(--lineHeightBase400);}"]
});

// node_modules/@fluentui/react-text/lib/components/presets/Subtitle2/Subtitle2.js
var Subtitle2 = createPreset({
  useStyles: useSubtitle2Styles,
  className: subtitle2ClassNames.root,
  displayName: "Subtitle2"
});

// node_modules/@fluentui/react-text/lib/components/presets/Subtitle2Stronger/useSubtitle2Stronger.styles.js
var subtitle2StrongerClassNames = {
  root: "fui-Subtitle2Stronger"
};
var useSubtitle2StrongerStyles = __styles2({
  root: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fod5ikn",
    Bhrd7zp: "flh3ekv",
    Bg96gwp: "faaz57k"
  }
}, {
  d: [".fk6fouc{font-family:var(--fontFamilyBase);}", ".fod5ikn{font-size:var(--fontSizeBase400);}", ".flh3ekv{font-weight:var(--fontWeightBold);}", ".faaz57k{line-height:var(--lineHeightBase400);}"]
});

// node_modules/@fluentui/react-text/lib/components/presets/Subtitle2Stronger/Subtitle2Stronger.js
var Subtitle2Stronger = createPreset({
  useStyles: useSubtitle2StrongerStyles,
  className: subtitle2StrongerClassNames.root,
  displayName: "Subtitle2Stronger"
});

// node_modules/@fluentui/react-text/lib/components/presets/Title1/useTitle1Styles.styles.js
var title1ClassNames = {
  root: "fui-Title1"
};
var useTitle1Styles = __styles2({
  root: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fccw675",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "f1ebx5kk"
  }
}, {
  d: [".fk6fouc{font-family:var(--fontFamilyBase);}", ".fccw675{font-size:var(--fontSizeHero800);}", ".fl43uef{font-weight:var(--fontWeightSemibold);}", ".f1ebx5kk{line-height:var(--lineHeightHero800);}"]
});

// node_modules/@fluentui/react-text/lib/components/presets/Title1/Title1.js
var Title1 = createPreset({
  useStyles: useTitle1Styles,
  className: title1ClassNames.root,
  displayName: "Title1"
});

// node_modules/@fluentui/react-text/lib/components/presets/Title2/useTitle2Styles.styles.js
var title2ClassNames = {
  root: "fui-Title2"
};
var useTitle2Styles = __styles2({
  root: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fojgt09",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "fcen8rp"
  }
}, {
  d: [".fk6fouc{font-family:var(--fontFamilyBase);}", ".fojgt09{font-size:var(--fontSizeHero700);}", ".fl43uef{font-weight:var(--fontWeightSemibold);}", ".fcen8rp{line-height:var(--lineHeightHero700);}"]
});

// node_modules/@fluentui/react-text/lib/components/presets/Title2/Title2.js
var Title2 = createPreset({
  useStyles: useTitle2Styles,
  className: title2ClassNames.root,
  displayName: "Title2"
});

// node_modules/@fluentui/react-text/lib/components/presets/Title3/useTitle3Styles.styles.js
var title3ClassNames = {
  root: "fui-Title3"
};
var useTitle3Styles = __styles2({
  root: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "f1x0m3f5",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "fb86gi6"
  }
}, {
  d: [".fk6fouc{font-family:var(--fontFamilyBase);}", ".f1x0m3f5{font-size:var(--fontSizeBase600);}", ".fl43uef{font-weight:var(--fontWeightSemibold);}", ".fb86gi6{line-height:var(--lineHeightBase600);}"]
});

// node_modules/@fluentui/react-text/lib/components/presets/Title3/Title3.js
var Title3 = createPreset({
  useStyles: useTitle3Styles,
  className: title3ClassNames.root,
  displayName: "Title3"
});

// node_modules/@fluentui/react-textarea/lib/components/Textarea/Textarea.js
var React217 = __toESM(require_react());

// node_modules/@fluentui/react-textarea/lib/components/Textarea/renderTextarea.js
var renderTextarea_unstable = (state) => {
  assertSlots(state);
  return jsx(state.root, {
    children: jsx(state.textarea, {})
  });
};

// node_modules/@fluentui/react-textarea/lib/components/Textarea/useTextarea.js
var React216 = __toESM(require_react());
var useTextarea_unstable = (props, ref) => {
  props = useFieldControlProps_unstable(props, {
    supportsLabelFor: true,
    supportsRequired: true,
    supportsSize: true
  });
  const overrides = useOverrides();
  var _overrides_inputDefaultAppearance;
  const { size = "medium", appearance = (_overrides_inputDefaultAppearance = overrides.inputDefaultAppearance) !== null && _overrides_inputDefaultAppearance !== void 0 ? _overrides_inputDefaultAppearance : "outline", resize = "none", onChange } = props;
  if (appearance === "filled-darker-shadow" || appearance === "filled-lighter-shadow") {
    console.error("The 'filled-darker-shadow' and 'filled-lighter-shadow' appearances are deprecated and will be removed in the future.");
  }
  const [value, setValue] = useControllableState({
    state: props.value,
    defaultState: props.defaultValue,
    initialState: void 0
  });
  const nativeProps = getPartitionedNativeProps({
    props,
    primarySlotTagName: "textarea",
    excludedPropNames: [
      "onChange",
      "value",
      "defaultValue"
    ]
  });
  const state = {
    size,
    appearance,
    resize,
    components: {
      root: "span",
      textarea: "textarea"
    },
    textarea: slot_exports.always(props.textarea, {
      defaultProps: {
        ref,
        ...nativeProps.primary
      },
      elementType: "textarea"
    }),
    root: slot_exports.always(props.root, {
      defaultProps: nativeProps.root,
      elementType: "span"
    })
  };
  state.textarea.value = value;
  state.textarea.onChange = useEventCallback((ev) => {
    const newValue = ev.target.value;
    onChange === null || onChange === void 0 ? void 0 : onChange(ev, {
      value: newValue
    });
    setValue(newValue);
  });
  return state;
};

// node_modules/@fluentui/react-textarea/lib/components/Textarea/useTextareaStyles.styles.js
var textareaClassNames = {
  root: "fui-Textarea",
  textarea: "fui-Textarea__textarea"
};
var useRootStyles14 = __styles2({
  base: {
    mc9l5x: "ftuwxu6",
    B7ck84d: "f1ewtqcl",
    qhf8xq: "f10pi13n",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f1yiegib",
    jrapky: 0,
    Frg6f3: 0,
    t21cq0: 0,
    B6of3ja: 0,
    B74szlk: "f1s184ao",
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "ft85np5",
    ha4doy: "f12kltsn"
  },
  disabled: {
    De3pzq: "f1c21dwh",
    Bgfg5da: 0,
    B9xav0g: 0,
    oivjwe: 0,
    Bn0qgzm: 0,
    B4g9neb: 0,
    zhjwy3: 0,
    wvpqe5: 0,
    ibv6hh: 0,
    u1mtju: 0,
    h3c5rm: 0,
    vrafjx: 0,
    Bekrc4i: 0,
    i8vvqc: 0,
    g2u3we: 0,
    icvyot: 0,
    B4j52fo: 0,
    irswps: "ff3nzm7",
    Bjwas2f: "fg455y9",
    Bn1d65q: ["f1rvyvqg", "f14g86mu"],
    Bxeuatn: "f1cwzwz",
    n51gp8: ["f14g86mu", "f1rvyvqg"]
  },
  interactive: {
    li1rpt: "f1gw3sf2",
    Bsft5z2: "f13zj6fq",
    E3zdtr: "f1mdlcz9",
    Eqx8gd: ["f1a7op3", "f1cjjd47"],
    By385i5: "f1gboi2j",
    B1piin3: ["f1cjjd47", "f1a7op3"],
    Dlnsje: "ffyw7fx",
    d9w3h3: ["f1kp91vd", "f1ibwz09"],
    B3778ie: ["f1ibwz09", "f1kp91vd"],
    B1q35kw: 0,
    Bw17bha: 0,
    Bcgy8vk: 0,
    Bjuhk93: "f1mnjydx",
    Gjdm7m: "fj2g8qd",
    b1kco5: "f1yk9hq",
    Ba2ppi3: "fhwpy7i",
    F2fol1: "f14ee0xe",
    lck23g: "f1xhbsuh",
    df92cz: "fv8e3ye",
    I188md: "ftb5wc6",
    umuwi5: "fjw5xc1",
    Blcqepd: "f1xdyd5c",
    nplu4u: "fatpbeo",
    Bioka5o: "fb7uyps",
    H713fs: "f1cmft4k",
    B9ooomg: "f1x58t8o",
    Bercvud: "f1ibeo51",
    Bbr2w1p: "f1vnc8sk",
    Bduesf4: "f3e99gv",
    Bpq79vn: "fhljsf7"
  },
  filled: {
    Bgfg5da: 0,
    B9xav0g: 0,
    oivjwe: 0,
    Bn0qgzm: 0,
    B4g9neb: 0,
    zhjwy3: 0,
    wvpqe5: 0,
    ibv6hh: 0,
    u1mtju: 0,
    h3c5rm: 0,
    vrafjx: 0,
    Bekrc4i: 0,
    i8vvqc: 0,
    g2u3we: 0,
    icvyot: 0,
    B4j52fo: 0,
    irswps: "f88035w",
    q7v0qe: "ftmjh5b",
    kmh5ft: ["f17blpuu", "fsrcdbj"],
    nagaa4: "f1tpwn32",
    B1yhkcb: ["fsrcdbj", "f17blpuu"]
  },
  "filled-darker": {
    De3pzq: "f16xq7d1"
  },
  "filled-lighter": {
    De3pzq: "fxugw4r"
  },
  "filled-darker-shadow": {
    De3pzq: "f16xq7d1",
    Bgfg5da: 0,
    B9xav0g: 0,
    oivjwe: 0,
    Bn0qgzm: 0,
    B4g9neb: 0,
    zhjwy3: 0,
    wvpqe5: 0,
    ibv6hh: 0,
    u1mtju: 0,
    h3c5rm: 0,
    vrafjx: 0,
    Bekrc4i: 0,
    i8vvqc: 0,
    g2u3we: 0,
    icvyot: 0,
    B4j52fo: 0,
    irswps: "f1gmd7mu",
    E5pizo: "fyed02w"
  },
  "filled-lighter-shadow": {
    De3pzq: "fxugw4r",
    Bgfg5da: 0,
    B9xav0g: 0,
    oivjwe: 0,
    Bn0qgzm: 0,
    B4g9neb: 0,
    zhjwy3: 0,
    wvpqe5: 0,
    ibv6hh: 0,
    u1mtju: 0,
    h3c5rm: 0,
    vrafjx: 0,
    Bekrc4i: 0,
    i8vvqc: 0,
    g2u3we: 0,
    icvyot: 0,
    B4j52fo: 0,
    irswps: "f1gmd7mu",
    E5pizo: "fyed02w"
  },
  outline: {
    De3pzq: "fxugw4r",
    Bgfg5da: 0,
    B9xav0g: "f1c1zstj",
    oivjwe: 0,
    Bn0qgzm: 0,
    B4g9neb: 0,
    zhjwy3: 0,
    wvpqe5: 0,
    ibv6hh: 0,
    u1mtju: 0,
    h3c5rm: 0,
    vrafjx: 0,
    Bekrc4i: 0,
    i8vvqc: 0,
    g2u3we: 0,
    icvyot: 0,
    B4j52fo: 0,
    irswps: "fhz96rm"
  },
  outlineInteractive: {
    kzujx5: 0,
    oetu4i: "f1l4zc64",
    gvrnp0: 0,
    xv9156: 0,
    jek2p4: 0,
    gg5e9n: 0,
    Beu9t3s: 0,
    dt87k2: 0,
    Bt1vbvt: 0,
    Bwzppfd: 0,
    Bop6t4b: 0,
    B2zwrfe: 0,
    Bwp2tzp: 0,
    Bgoe8wy: 0,
    Bf40cpq: 0,
    ckks6v: 0,
    Baalond: "f9mts5e",
    v2iqwr: 0,
    wmxk5l: "f1z0osm6",
    Bj33j0h: 0,
    Bs0cc2w: 0,
    qwjtx1: 0,
    B50zh58: 0,
    f7epvg: 0,
    e1hlit: 0,
    B7mkhst: 0,
    ak43y8: 0,
    Bbcopvn: 0,
    Bvecx4l: 0,
    lwioe0: 0,
    B6oc9vd: 0,
    e2sjt0: 0,
    uqwnxt: 0,
    asj8p9: "f1acnei2",
    Br8fjdy: 0,
    zoxjo1: "f1so894s",
    Bt3ojkv: 0,
    B7pmvfx: 0,
    Bfht2n1: 0,
    an54nd: 0,
    t1ykpo: 0,
    Belqbek: 0,
    bbt1vd: 0,
    Brahy3i: 0,
    r7b1zc: 0,
    rexu52: 0,
    ovtnii: 0,
    Bvq3b66: 0,
    Bawrxx6: 0,
    Bbs6y8j: 0,
    B2qpgjt: "fds4ob8"
  },
  invalid: {
    tvckwq: "fs4k3qj",
    gk2u95: ["fcee079", "fmyw78r"],
    hhx65j: "f1fgmyf4",
    Bxowmz0: ["fmyw78r", "fcee079"]
  }
}, {
  d: [".ftuwxu6{display:inline-flex;}", ".f1ewtqcl{box-sizing:border-box;}", ".f10pi13n{position:relative;}", [".f1yiegib{padding:0 0 var(--strokeWidthThick) 0;}", {
    p: -1
  }], [".f1s184ao{margin:0;}", {
    p: -1
  }], [".ft85np5{border-radius:var(--borderRadiusMedium);}", {
    p: -1
  }], ".f12kltsn{vertical-align:top;}", ".f1c21dwh{background-color:var(--colorTransparentBackground);}", [".ff3nzm7{border:var(--strokeWidthThin) solid var(--colorNeutralStrokeDisabled);}", {
    p: -2
  }], ".f1gw3sf2::after{box-sizing:border-box;}", '.f13zj6fq::after{content:"";}', ".f1mdlcz9::after{position:absolute;}", ".f1a7op3::after{left:-1px;}", ".f1cjjd47::after{right:-1px;}", ".f1gboi2j::after{bottom:-1px;}", ".ffyw7fx::after{height:max(var(--strokeWidthThick), var(--borderRadiusMedium));}", ".f1kp91vd::after{border-bottom-left-radius:var(--borderRadiusMedium);}", ".f1ibwz09::after{border-bottom-right-radius:var(--borderRadiusMedium);}", [".f1mnjydx::after{border-bottom:var(--strokeWidthThick) solid var(--colorCompoundBrandStroke);}", {
    p: -1
  }], ".fj2g8qd::after{clip-path:inset(calc(100% - var(--strokeWidthThick)) 0 0 0);}", ".f1yk9hq::after{transform:scaleX(0);}", ".fhwpy7i::after{transition-property:transform;}", ".f14ee0xe::after{transition-duration:var(--durationUltraFast);}", ".f1xhbsuh::after{transition-delay:var(--curveAccelerateMid);}", [".f88035w{border:var(--strokeWidthThin) solid var(--colorTransparentStroke);}", {
    p: -2
  }], ".f16xq7d1{background-color:var(--colorNeutralBackground3);}", ".fxugw4r{background-color:var(--colorNeutralBackground1);}", [".f1gmd7mu{border:var(--strokeWidthThin) solid var(--colorTransparentStrokeInteractive);}", {
    p: -2
  }], ".fyed02w{box-shadow:var(--shadow2);}", [".f1gmd7mu{border:var(--strokeWidthThin) solid var(--colorTransparentStrokeInteractive);}", {
    p: -2
  }], [".fhz96rm{border:var(--strokeWidthThin) solid var(--colorNeutralStroke1);}", {
    p: -2
  }], ".f1c1zstj{border-bottom-color:var(--colorNeutralStrokeAccessible);}", ".fs4k3qj:not(:focus-within),.fs4k3qj:hover:not(:focus-within){border-top-color:var(--colorPaletteRedBorder2);}", ".fcee079:not(:focus-within),.fcee079:hover:not(:focus-within){border-right-color:var(--colorPaletteRedBorder2);}", ".fmyw78r:not(:focus-within),.fmyw78r:hover:not(:focus-within){border-left-color:var(--colorPaletteRedBorder2);}", ".f1fgmyf4:not(:focus-within),.f1fgmyf4:hover:not(:focus-within){border-bottom-color:var(--colorPaletteRedBorder2);}"],
  m: [["@media (forced-colors: active){.fg455y9{border-top-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f14g86mu{border-left-color:GrayText;}.f1rvyvqg{border-right-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1cwzwz{border-bottom-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media screen and (prefers-reduced-motion: reduce){.fv8e3ye::after{transition-duration:0.01ms;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }], ["@media screen and (prefers-reduced-motion: reduce){.ftb5wc6::after{transition-delay:0.01ms;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }], ["@media screen and (prefers-reduced-motion: reduce){.f1cmft4k:focus-within::after{transition-duration:0.01ms;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }], ["@media screen and (prefers-reduced-motion: reduce){.f1x58t8o:focus-within::after{transition-delay:0.01ms;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }]],
  w: [".fjw5xc1:focus-within::after{transform:scaleX(1);}", ".f1xdyd5c:focus-within::after{transition-property:transform;}", ".fatpbeo:focus-within::after{transition-duration:var(--durationNormal);}", ".fb7uyps:focus-within::after{transition-delay:var(--curveDecelerateMid);}", ".f1ibeo51:focus-within:active::after{border-bottom-color:var(--colorCompoundBrandStrokePressed);}", ".f1vnc8sk:focus-within{outline-width:var(--strokeWidthThick);}", ".f3e99gv:focus-within{outline-style:solid;}", ".fhljsf7:focus-within{outline-color:transparent;}", [".fds4ob8:focus-within{border:var(--strokeWidthThin) solid var(--colorNeutralStroke1);}", {
    p: -2
  }], ".f1so894s:focus-within{border-bottom-color:var(--colorCompoundBrandStroke);}"],
  h: [".ftmjh5b:hover,.ftmjh5b:focus-within{border-top-color:var(--colorTransparentStrokeInteractive);}", ".f17blpuu:hover,.f17blpuu:focus-within{border-right-color:var(--colorTransparentStrokeInteractive);}", ".fsrcdbj:hover,.fsrcdbj:focus-within{border-left-color:var(--colorTransparentStrokeInteractive);}", ".f1tpwn32:hover,.f1tpwn32:focus-within{border-bottom-color:var(--colorTransparentStrokeInteractive);}", [".f9mts5e:hover{border:var(--strokeWidthThin) solid var(--colorNeutralStroke1Hover);}", {
    p: -2
  }], ".f1l4zc64:hover{border-bottom-color:var(--colorNeutralStrokeAccessibleHover);}"],
  a: [[".f1acnei2:active{border:var(--strokeWidthThin) solid var(--colorNeutralStroke1Pressed);}", {
    p: -2
  }], ".f1z0osm6:active{border-bottom-color:var(--colorNeutralStrokeAccessiblePressed);}"]
});
var useTextareaStyles = __styles2({
  base: {
    icvyot: "f1ern45e",
    vrafjx: ["f1n71otn", "f1deefiw"],
    oivjwe: "f1h8hb77",
    wvpqe5: ["f1deefiw", "f1n71otn"],
    jrapky: 0,
    Frg6f3: 0,
    t21cq0: 0,
    B6of3ja: 0,
    B74szlk: "f1s184ao",
    De3pzq: "f3rmtva",
    B7ck84d: "f1ewtqcl",
    sj55zd: "f19n0e5",
    Bh6795r: "fqerorx",
    Bahqtrf: "fk6fouc",
    Bqenvij: "f1l02sjl",
    yvdlaj: "fwyc1cq",
    B3o7kgh: "f13ta7ih",
    B4brmom: "f1vw9udw",
    Brrnbx2: "fbb3kq8",
    oeaueh: "f1s6fcnf"
  },
  disabled: {
    sj55zd: "f1s2aq7o",
    Bceei9c: "fdrzuqr",
    yvdlaj: "fahhnxm"
  },
  small: {
    sshi5w: "f1w5jphr",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f1pnffij",
    Bxyxcbc: "f192z54u",
    Bahqtrf: "fk6fouc",
    Be2twd7: "fy9rknc",
    Bhrd7zp: "figsok6",
    Bg96gwp: "fwrc4pm"
  },
  medium: {
    sshi5w: "fvmd9f",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f1ww82xo",
    Bxyxcbc: "f1if7ixc",
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "figsok6",
    Bg96gwp: "f1i3iumi"
  },
  large: {
    sshi5w: "f1kfson",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f15hvtkj",
    Bxyxcbc: "f3kip1f",
    Bahqtrf: "fk6fouc",
    Be2twd7: "fod5ikn",
    Bhrd7zp: "figsok6",
    Bg96gwp: "faaz57k"
  }
}, {
  d: [".f1ern45e{border-top-style:none;}", ".f1n71otn{border-right-style:none;}", ".f1deefiw{border-left-style:none;}", ".f1h8hb77{border-bottom-style:none;}", [".f1s184ao{margin:0;}", {
    p: -1
  }], ".f3rmtva{background-color:transparent;}", ".f1ewtqcl{box-sizing:border-box;}", ".f19n0e5{color:var(--colorNeutralForeground1);}", ".fqerorx{flex-grow:1;}", ".fk6fouc{font-family:var(--fontFamilyBase);}", ".f1l02sjl{height:100%;}", ".fwyc1cq::-webkit-input-placeholder{color:var(--colorNeutralForeground4);}", ".fwyc1cq::-moz-placeholder{color:var(--colorNeutralForeground4);}", ".f13ta7ih::-webkit-input-placeholder{opacity:1;}", ".f13ta7ih::-moz-placeholder{opacity:1;}", ".f1vw9udw::selection{color:var(--colorNeutralForegroundInverted);}", ".fbb3kq8::selection{background-color:var(--colorNeutralBackgroundInverted);}", ".f1s6fcnf{outline-style:none;}", ".f1s2aq7o{color:var(--colorNeutralForegroundDisabled);}", ".fdrzuqr{cursor:not-allowed;}", ".fahhnxm::-webkit-input-placeholder{color:var(--colorNeutralForegroundDisabled);}", ".fahhnxm::-moz-placeholder{color:var(--colorNeutralForegroundDisabled);}", ".f1w5jphr{min-height:40px;}", [".f1pnffij{padding:var(--spacingVerticalXS) calc(var(--spacingHorizontalSNudge) + var(--spacingHorizontalXXS));}", {
    p: -1
  }], ".f192z54u{max-height:200px;}", ".fy9rknc{font-size:var(--fontSizeBase200);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".fwrc4pm{line-height:var(--lineHeightBase200);}", ".fvmd9f{min-height:52px;}", [".f1ww82xo{padding:var(--spacingVerticalSNudge) calc(var(--spacingHorizontalMNudge) + var(--spacingHorizontalXXS));}", {
    p: -1
  }], ".f1if7ixc{max-height:260px;}", ".fkhj508{font-size:var(--fontSizeBase300);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}", ".f1kfson{min-height:64px;}", [".f15hvtkj{padding:var(--spacingVerticalS) calc(var(--spacingHorizontalM) + var(--spacingHorizontalXXS));}", {
    p: -1
  }], ".f3kip1f{max-height:320px;}", ".fod5ikn{font-size:var(--fontSizeBase400);}", ".faaz57k{line-height:var(--lineHeightBase400);}"]
});
var useTextareaResizeStyles = __styles2({
  none: {
    B3rzk8w: "f1o1s39h"
  },
  both: {
    B3rzk8w: "f1pxm0xe"
  },
  horizontal: {
    B3rzk8w: "fq6nmtn"
  },
  vertical: {
    B3rzk8w: "f1f5ktr4"
  }
}, {
  d: [".f1o1s39h{resize:none;}", ".f1pxm0xe{resize:both;}", ".fq6nmtn{resize:horizontal;}", ".f1f5ktr4{resize:vertical;}"]
});
var useTextareaStyles_unstable = (state) => {
  "use no memo";
  const {
    size,
    appearance,
    resize
  } = state;
  const disabled = state.textarea.disabled;
  const invalid = `${state.textarea["aria-invalid"]}` === "true";
  const filled = appearance.startsWith("filled");
  const rootStyles = useRootStyles14();
  state.root.className = mergeClasses(textareaClassNames.root, rootStyles.base, disabled && rootStyles.disabled, !disabled && filled && rootStyles.filled, !disabled && rootStyles[appearance], !disabled && rootStyles.interactive, !disabled && appearance === "outline" && rootStyles.outlineInteractive, !disabled && invalid && rootStyles.invalid, state.root.className);
  const textareaStyles = useTextareaStyles();
  const textareaResizeStyles = useTextareaResizeStyles();
  state.textarea.className = mergeClasses(textareaClassNames.textarea, textareaStyles.base, textareaStyles[size], textareaResizeStyles[resize], disabled && textareaStyles.disabled, state.textarea.className);
  return state;
};

// node_modules/@fluentui/react-textarea/lib/components/Textarea/Textarea.js
var Textarea = React217.forwardRef((props, ref) => {
  const state = useTextarea_unstable(props, ref);
  useTextareaStyles_unstable(state);
  useCustomStyleHook("useTextareaStyles_unstable")(state);
  return renderTextarea_unstable(state);
});
Textarea.displayName = "Textarea";

// node_modules/@fluentui/react-textarea/lib/components/Textarea/Textarea.types.js
var React218 = __toESM(require_react());

// node_modules/@fluentui/react-dialog/lib/components/Dialog/Dialog.js
var React227 = __toESM(require_react());

// node_modules/@fluentui/react-dialog/node_modules/@fluentui/react-context-selector/lib/createContext.js
var React219 = __toESM(require_react());
var import_scheduler7 = __toESM(require_scheduler7());
var createProvider7 = (Original) => {
  const Provider2 = (props) => {
    const valueRef = React219.useRef(props.value);
    const versionRef = React219.useRef(0);
    const contextValue = React219.useRef();
    if (!contextValue.current) {
      contextValue.current = {
        value: valueRef,
        version: versionRef,
        listeners: []
      };
    }
    useIsomorphicLayoutEffect(() => {
      valueRef.current = props.value;
      versionRef.current += 1;
      (0, import_scheduler7.unstable_runWithPriority)(import_scheduler7.unstable_NormalPriority, () => {
        contextValue.current.listeners.forEach((listener) => {
          listener([
            versionRef.current,
            props.value
          ]);
        });
      });
    }, [
      props.value
    ]);
    return React219.createElement(Original, {
      value: contextValue.current
    }, props.children);
  };
  if (true) {
    Provider2.displayName = "ContextSelector.Provider";
  }
  return Provider2;
};
var createContext27 = (defaultValue) => {
  const context = React219.createContext({
    value: {
      current: defaultValue
    },
    version: {
      current: -1
    },
    listeners: []
  });
  context.Provider = createProvider7(context.Provider);
  delete context.Consumer;
  return context;
};

// node_modules/@fluentui/react-dialog/node_modules/@fluentui/react-context-selector/lib/useContextSelector.js
var React220 = __toESM(require_react());
var useContextSelector7 = (context, selector) => {
  const contextValue = React220.useContext(context);
  const { value: { current: value }, version: { current: version }, listeners } = contextValue;
  const selected = selector(value);
  const [state, setState] = React220.useState([
    value,
    selected
  ]);
  const dispatch = (payload) => {
    setState((prevState) => {
      if (!payload) {
        return [
          value,
          selected
        ];
      }
      if (payload[0] <= version) {
        if (Object.is(prevState[1], selected)) {
          return prevState;
        }
        return [
          value,
          selected
        ];
      }
      try {
        if (Object.is(prevState[0], payload[1])) {
          return prevState;
        }
        const nextSelected = selector(payload[1]);
        if (Object.is(prevState[1], nextSelected)) {
          return prevState;
        }
        return [
          payload[1],
          nextSelected
        ];
      } catch (e) {
      }
      return [
        prevState[0],
        prevState[1]
      ];
    });
  };
  if (!Object.is(state[1], selected)) {
    dispatch(void 0);
  }
  const stableDispatch = useEventCallback(dispatch);
  useIsomorphicLayoutEffect(() => {
    listeners.push(stableDispatch);
    return () => {
      const index = listeners.indexOf(stableDispatch);
      listeners.splice(index, 1);
    };
  }, [
    stableDispatch,
    listeners
  ]);
  return state[1];
};

// node_modules/@fluentui/react-dialog/node_modules/@fluentui/react-context-selector/lib/useHasParentContext.js
var React221 = __toESM(require_react());
function useHasParentContext7(context) {
  const contextValue = React221.useContext(context);
  if (contextValue.version) {
    return contextValue.version.current !== -1;
  }
  return false;
}

// node_modules/@fluentui/react-dialog/lib/components/Dialog/useDialog.js
var React224 = __toESM(require_react());

// node_modules/@fluentui/react-dialog/lib/utils/useDisableBodyScroll.js
var import_react79 = __toESM(require_react());

// node_modules/@fluentui/react-dialog/lib/utils/useDisableBodyScroll.styles.js
var useHTMLNoScrollStyles = __resetStyles("r6pzz3z", null, [".r6pzz3z{overflow-y:hidden;overflow-y:clip;scrollbar-gutter:stable;}"]);
var useBodyNoScrollStyles = __resetStyles("r144vlu9", null, [".r144vlu9{overflow-y:hidden;}"]);

// node_modules/@fluentui/react-dialog/lib/utils/useDisableBodyScroll.js
function useDisableBodyScroll() {
  const htmlNoScrollStyles = useHTMLNoScrollStyles();
  const bodyNoScrollStyles = useBodyNoScrollStyles();
  const { targetDocument } = useFluent();
  const disableBodyScroll = (0, import_react79.useCallback)(() => {
    var _targetDocument_defaultView;
    if (!targetDocument) {
      return;
    }
    var _targetDocument_defaultView_innerHeight;
    const isHorizontalScrollbarVisible = (
      // When the window is a fractional height, `innerHeight` always rounds down but `clientHeight` rounds either up or down depending on the value.
      // To properly compare the body clientHeight to the window innerHeight, manually round down the fractional value to match innerHeight's calculation.
      Math.floor(targetDocument.body.getBoundingClientRect().height) > ((_targetDocument_defaultView_innerHeight = (_targetDocument_defaultView = targetDocument.defaultView) === null || _targetDocument_defaultView === void 0 ? void 0 : _targetDocument_defaultView.innerHeight) !== null && _targetDocument_defaultView_innerHeight !== void 0 ? _targetDocument_defaultView_innerHeight : 0)
    );
    if (!isHorizontalScrollbarVisible) {
      return;
    }
    targetDocument.documentElement.classList.add(htmlNoScrollStyles);
    targetDocument.body.classList.add(bodyNoScrollStyles);
    return;
  }, [
    targetDocument,
    htmlNoScrollStyles,
    bodyNoScrollStyles
  ]);
  const enableBodyScroll = (0, import_react79.useCallback)(() => {
    if (!targetDocument) {
      return;
    }
    targetDocument.documentElement.classList.remove(htmlNoScrollStyles);
    targetDocument.body.classList.remove(bodyNoScrollStyles);
  }, [
    targetDocument,
    htmlNoScrollStyles,
    bodyNoScrollStyles
  ]);
  return {
    disableBodyScroll,
    enableBodyScroll
  };
}

// node_modules/@fluentui/react-dialog/lib/utils/useFocusFirstElement.js
var React222 = __toESM(require_react());
function useFocusFirstElement(open, modalType) {
  const { findFirstFocusable } = useFocusFinders();
  const { targetDocument } = useFluent();
  const dialogRef = React222.useRef(null);
  React222.useEffect(() => {
    if (!open) {
      return;
    }
    const element = dialogRef.current && findFirstFocusable(dialogRef.current);
    if (element) {
      element.focus();
    } else {
      var _dialogRef_current;
      (_dialogRef_current = dialogRef.current) === null || _dialogRef_current === void 0 ? void 0 : _dialogRef_current.focus();
      if (true) {
        console.warn(`@fluentui/react-dialog [useFocusFirstElement]:
A Dialog should have at least one focusable element inside DialogSurface.
Please add at least a close button either on \`DialogTitle\` action slot or inside \`DialogActions\``);
      }
    }
  }, [
    findFirstFocusable,
    open,
    modalType,
    targetDocument
  ]);
  return dialogRef;
}

// node_modules/@fluentui/react-dialog/lib/contexts/dialogContext.js
var React223 = __toESM(require_react());
var defaultContextValue = {
  open: false,
  inertTrapFocus: false,
  modalType: "modal",
  isNestedDialog: false,
  dialogRef: {
    current: null
  },
  requestOpenChange() {
  }
};
var DialogContext = createContext27(void 0);
var DialogProvider = DialogContext.Provider;
var useDialogContext_unstable = (selector) => useContextSelector7(DialogContext, (ctx = defaultContextValue) => selector(ctx));

// node_modules/@fluentui/react-dialog/lib/contexts/dialogSurfaceContext.js
var import_react80 = __toESM(require_react());
var defaultContextValue2 = false;
var DialogSurfaceContext = (0, import_react80.createContext)(void 0);
var DialogSurfaceProvider = DialogSurfaceContext.Provider;
var useDialogSurfaceContext_unstable = () => {
  var _useContext;
  return (_useContext = (0, import_react80.useContext)(DialogSurfaceContext)) !== null && _useContext !== void 0 ? _useContext : defaultContextValue2;
};

// node_modules/@fluentui/react-dialog/lib/components/DialogSurfaceMotion.js
var keyframes = [
  {
    opacity: 0,
    boxShadow: "0px 0px 0px 0px rgba(0, 0, 0, 0.1)",
    transform: "scale(0.85) translateZ(0)"
  },
  {
    boxShadow: tokens.shadow64,
    transform: "scale(1) translateZ(0)",
    opacity: 1
  }
];
var DialogSurfaceMotion = createPresenceComponent({
  enter: {
    keyframes,
    easing: motionTokens.curveDecelerateMid,
    duration: motionTokens.durationGentle
  },
  exit: {
    keyframes: [
      ...keyframes
    ].reverse(),
    easing: motionTokens.curveAccelerateMin,
    duration: motionTokens.durationGentle
  }
});

// node_modules/@fluentui/react-dialog/lib/components/Dialog/useDialog.js
var useDialog_unstable = (props) => {
  const { children: children2, modalType = "modal", onOpenChange, inertTrapFocus = false } = props;
  const [trigger, content] = childrenToTriggerAndContent(children2);
  const [open, setOpen] = useControllableState({
    state: props.open,
    defaultState: props.defaultOpen,
    initialState: false
  });
  const requestOpenChange = useEventCallback((data) => {
    onOpenChange === null || onOpenChange === void 0 ? void 0 : onOpenChange(data.event, data);
    if (!data.event.isDefaultPrevented()) {
      setOpen(data.open);
    }
  });
  const focusRef = useFocusFirstElement(open, modalType);
  const { modalAttributes, triggerAttributes } = useModalAttributes({
    trapFocus: modalType !== "non-modal",
    legacyTrapFocus: !inertTrapFocus
  });
  const isNestedDialog = useHasParentContext7(DialogContext);
  return {
    components: {
      // TODO: remove once React v18 slot API is modified
      // This is a problem at the moment due to UnknownSlotProps assumption
      // that `children` property is `ReactNode`, which in this case is not valid
      // as PresenceComponentProps['children'] is `ReactElement`
      surfaceMotion: DialogSurfaceMotion
    },
    inertTrapFocus,
    open,
    modalType,
    content,
    trigger,
    requestOpenChange,
    dialogTitleId: useId("dialog-title-"),
    isNestedDialog,
    dialogRef: focusRef,
    modalAttributes,
    triggerAttributes,
    surfaceMotion: presenceMotionSlot(props.surfaceMotion, {
      elementType: DialogSurfaceMotion,
      defaultProps: {
        appear: true,
        visible: open,
        unmountOnExit: true
      }
    })
  };
};
function childrenToTriggerAndContent(children2) {
  const childrenArray = React224.Children.toArray(children2);
  if (true) {
    if (childrenArray.length !== 1 && childrenArray.length !== 2) {
      console.warn(`@fluentui/react-dialog [useDialog]:
Dialog must contain at least one child <DialogSurface/>,
and at most two children <DialogTrigger/> <DialogSurface/> (in this order).`);
    }
  }
  switch (childrenArray.length) {
    case 2:
      return childrenArray;
    case 1:
      return [
        void 0,
        childrenArray[0]
      ];
    default:
      return [
        void 0,
        void 0
      ];
  }
}

// node_modules/@fluentui/react-dialog/lib/components/Dialog/renderDialog.js
var React226 = __toESM(require_react());

// node_modules/@fluentui/react-dialog/lib/components/MotionRefForwarder.js
var React225 = __toESM(require_react());
var MotionRefForwarderContext = React225.createContext(void 0);
function useMotionForwardedRef() {
  return React225.useContext(MotionRefForwarderContext);
}
var MotionRefForwarder = React225.forwardRef((props, ref) => {
  return React225.createElement(MotionRefForwarderContext.Provider, {
    value: ref
  }, props.children);
});

// node_modules/@fluentui/react-dialog/lib/components/Dialog/renderDialog.js
var renderDialog_unstable = (state, contextValues) => {
  assertSlots(state);
  return jsx(DialogProvider, {
    value: contextValues.dialog,
    children: jsxs(DialogSurfaceProvider, {
      value: contextValues.dialogSurface,
      children: [
        state.trigger,
        state.content && jsx(state.surfaceMotion, {
          children: jsx(MotionRefForwarder, {
            children: state.content
          })
        })
      ]
    })
  });
};

// node_modules/@fluentui/react-dialog/lib/components/Dialog/useDialogContextValues.js
function useDialogContextValues_unstable(state) {
  const { modalType, open, dialogRef, dialogTitleId, isNestedDialog, inertTrapFocus, requestOpenChange, modalAttributes, triggerAttributes } = state;
  const dialog = {
    open,
    modalType,
    dialogRef,
    dialogTitleId,
    isNestedDialog,
    inertTrapFocus,
    modalAttributes,
    triggerAttributes,
    requestOpenChange
  };
  const dialogSurface = false;
  return {
    dialog,
    dialogSurface
  };
}

// node_modules/@fluentui/react-dialog/lib/components/Dialog/Dialog.js
var Dialog = React227.memo((props) => {
  const state = useDialog_unstable(props);
  const contextValues = useDialogContextValues_unstable(state);
  return renderDialog_unstable(state, contextValues);
});
Dialog.displayName = "Dialog";

// node_modules/@fluentui/react-dialog/lib/components/DialogTrigger/DialogTrigger.js
var React229 = __toESM(require_react());

// node_modules/@fluentui/react-dialog/lib/components/DialogTrigger/useDialogTrigger.js
var React228 = __toESM(require_react());
var useDialogTrigger_unstable = (props) => {
  const isInsideSurfaceDialog = useDialogSurfaceContext_unstable();
  const { children: children2, disableButtonEnhancement = false, action = isInsideSurfaceDialog ? "close" : "open" } = props;
  const child = getTriggerChild(children2);
  const requestOpenChange = useDialogContext_unstable((ctx) => ctx.requestOpenChange);
  const { triggerAttributes } = useModalAttributes();
  const handleClick = useEventCallback((event) => {
    var _child_props_onClick, _child_props;
    child === null || child === void 0 ? void 0 : (_child_props_onClick = (_child_props = child.props).onClick) === null || _child_props_onClick === void 0 ? void 0 : _child_props_onClick.call(_child_props, event);
    if (!event.isDefaultPrevented()) {
      requestOpenChange({
        event,
        type: "triggerClick",
        open: action === "open"
      });
    }
  });
  const triggerChildProps = {
    ...child === null || child === void 0 ? void 0 : child.props,
    ref: child === null || child === void 0 ? void 0 : child.ref,
    onClick: handleClick,
    ...triggerAttributes
  };
  const ariaButtonTriggerChildProps = useARIAButtonProps((child === null || child === void 0 ? void 0 : child.type) === "button" || (child === null || child === void 0 ? void 0 : child.type) === "a" ? child.type : "div", {
    ...triggerChildProps,
    type: "button"
  });
  return {
    children: applyTriggerPropsToChildren(children2, disableButtonEnhancement ? triggerChildProps : ariaButtonTriggerChildProps)
  };
};

// node_modules/@fluentui/react-dialog/lib/components/DialogTrigger/renderDialogTrigger.js
var renderDialogTrigger_unstable = (state) => state.children;

// node_modules/@fluentui/react-dialog/lib/components/DialogTrigger/DialogTrigger.js
var DialogTrigger = (props) => {
  const state = useDialogTrigger_unstable(props);
  return renderDialogTrigger_unstable(state);
};
DialogTrigger.displayName = "DialogTrigger";
DialogTrigger.isFluentTriggerComponent = true;

// node_modules/@fluentui/react-dialog/lib/components/DialogTrigger/DialogTrigger.types.js
var React230 = __toESM(require_react());

// node_modules/@fluentui/react-dialog/lib/components/DialogActions/DialogActions.js
var React232 = __toESM(require_react());

// node_modules/@fluentui/react-dialog/lib/components/DialogActions/useDialogActions.js
var React231 = __toESM(require_react());
var useDialogActions_unstable = (props, ref) => {
  const { position = "end", fluid = false } = props;
  return {
    components: {
      root: "div"
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      // FIXME:
      // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`
      // but since it would be a breaking change to fix it, we are casting ref to it's proper type
      ref,
      ...props
    }), {
      elementType: "div"
    }),
    position,
    fluid
  };
};

// node_modules/@fluentui/react-dialog/lib/components/DialogActions/renderDialogActions.js
var renderDialogActions_unstable = (state) => {
  assertSlots(state);
  return jsx(state.root, {});
};

// node_modules/@fluentui/react-dialog/lib/components/DialogActions/useDialogActionsStyles.styles.js
var dialogActionsClassNames = {
  root: "fui-DialogActions"
};
var useResetStyles = __resetStyles("rhfpeu0", null, {
  r: [".rhfpeu0{gap:8px;height:fit-content;box-sizing:border-box;display:flex;grid-row-start:3;grid-row-end:3;}"],
  s: ["@media screen and (max-width: 480px){.rhfpeu0{flex-direction:column;justify-self:stretch;}}"]
});
var useStyles30 = __styles2({
  gridPositionEnd: {
    Bdqf98w: "f1a7i8kp",
    Br312pm: "fd46tj4",
    Bw0ie65: "fsyjsko",
    B6n781s: "f1f41i0t",
    Bv5d0be: "f1jaqex3",
    v4ugfu: "f2ao6jk"
  },
  gridPositionStart: {
    Bdqf98w: "fsxvdwy",
    Br312pm: "fwpfdsa",
    Bw0ie65: "f1e2fz10",
    Bojbm9c: "f11ihkml",
    Bv5d0be: "fce5bvx",
    v4ugfu: "f2ao6jk"
  },
  fluidStart: {
    Bw0ie65: "fsyjsko"
  },
  fluidEnd: {
    Br312pm: "fwpfdsa"
  }
}, {
  d: [".f1a7i8kp{justify-self:end;}", ".fd46tj4{grid-column-start:2;}", ".fsyjsko{grid-column-end:4;}", ".fsxvdwy{justify-self:start;}", ".fwpfdsa{grid-column-start:1;}", ".f1e2fz10{grid-column-end:2;}"],
  m: [["@media screen and (max-width: 480px){.f1f41i0t{grid-column-start:1;}}", {
    m: "screen and (max-width: 480px)"
  }], ["@media screen and (max-width: 480px){.f1jaqex3{grid-row-start:4;}}", {
    m: "screen and (max-width: 480px)"
  }], ["@media screen and (max-width: 480px){.f2ao6jk{grid-row-end:auto;}}", {
    m: "screen and (max-width: 480px)"
  }], ["@media screen and (max-width: 480px){.f11ihkml{grid-column-end:4;}}", {
    m: "screen and (max-width: 480px)"
  }], ["@media screen and (max-width: 480px){.fce5bvx{grid-row-start:3;}}", {
    m: "screen and (max-width: 480px)"
  }]]
});
var useDialogActionsStyles_unstable = (state) => {
  "use no memo";
  const resetStyles = useResetStyles();
  const styles = useStyles30();
  state.root.className = mergeClasses(dialogActionsClassNames.root, resetStyles, state.position === "start" && styles.gridPositionStart, state.position === "end" && styles.gridPositionEnd, state.fluid && state.position === "start" && styles.fluidStart, state.fluid && state.position === "end" && styles.fluidEnd, state.root.className);
  return state;
};

// node_modules/@fluentui/react-dialog/lib/components/DialogActions/DialogActions.js
var DialogActions = React232.forwardRef((props, ref) => {
  const state = useDialogActions_unstable(props, ref);
  useDialogActionsStyles_unstable(state);
  useCustomStyleHook("useDialogActionsStyles_unstable")(state);
  return renderDialogActions_unstable(state);
});
DialogActions.displayName = "DialogActions";

// node_modules/@fluentui/react-dialog/lib/components/DialogBody/DialogBody.js
var React234 = __toESM(require_react());

// node_modules/@fluentui/react-dialog/lib/components/DialogBody/useDialogBody.js
var React233 = __toESM(require_react());
var useDialogBody_unstable = (props, ref) => {
  var _props_as;
  return {
    components: {
      root: "div"
    },
    root: slot_exports.always(getIntrinsicElementProps((_props_as = props.as) !== null && _props_as !== void 0 ? _props_as : "div", {
      // FIXME:
      // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`
      // but since it would be a breaking change to fix it, we are casting ref to it's proper type
      ref,
      ...props
    }), {
      elementType: "div"
    })
  };
};

// node_modules/@fluentui/react-dialog/lib/components/DialogBody/renderDialogBody.js
var renderDialogBody_unstable = (state) => {
  assertSlots(state);
  return jsx(state.root, {});
};

// node_modules/@fluentui/react-dialog/lib/components/DialogBody/useDialogBodyStyles.styles.js
var dialogBodyClassNames = {
  root: "fui-DialogBody"
};
var useResetStyles2 = __resetStyles("r1h3qql9", null, {
  r: [".r1h3qql9{overflow:unset;gap:8px;display:grid;max-height:calc(100vh - 2 * 24px);box-sizing:border-box;grid-template-rows:auto 1fr;grid-template-columns:1fr 1fr auto;}"],
  s: ["@media screen and (max-width: 480px){.r1h3qql9{max-width:100vw;grid-template-rows:auto 1fr auto;}}", "@media screen and (max-height: 359px){.r1h3qql9{max-height:unset;}}"]
});
var useDialogBodyStyles_unstable = (state) => {
  "use no memo";
  const resetStyles = useResetStyles2();
  state.root.className = mergeClasses(dialogBodyClassNames.root, resetStyles, state.root.className);
  return state;
};

// node_modules/@fluentui/react-dialog/lib/components/DialogBody/DialogBody.js
var DialogBody = React234.forwardRef((props, ref) => {
  const state = useDialogBody_unstable(props, ref);
  useDialogBodyStyles_unstable(state);
  useCustomStyleHook("useDialogBodyStyles_unstable")(state);
  return renderDialogBody_unstable(state);
});
DialogBody.displayName = "DialogBody";

// node_modules/@fluentui/react-dialog/lib/components/DialogTitle/DialogTitle.js
var React236 = __toESM(require_react());

// node_modules/@fluentui/react-dialog/lib/components/DialogTitle/useDialogTitle.js
var React235 = __toESM(require_react());

// node_modules/@fluentui/react-dialog/lib/components/DialogTitle/useDialogTitleStyles.styles.js
var dialogTitleClassNames = {
  root: "fui-DialogTitle",
  action: "fui-DialogTitle__action"
};
var useRootResetStyles = __resetStyles("rxjm636", null, [".rxjm636{font-family:var(--fontFamilyBase);font-size:var(--fontSizeBase500);font-weight:var(--fontWeightSemibold);line-height:var(--lineHeightBase500);margin:0;grid-row-start:1;grid-row-end:1;grid-column-start:1;grid-column-end:3;}"]);
var useStyles31 = __styles2({
  rootWithoutAction: {
    Bw0ie65: "fsyjsko"
  }
}, {
  d: [".fsyjsko{grid-column-end:4;}"]
});
var useActionResetStyles = __resetStyles("r13kcrze", null, [".r13kcrze{grid-row-start:1;grid-row-end:1;grid-column-start:3;justify-self:end;align-self:start;}"]);
var useDialogTitleInternalStyles = __resetStyles("r2avt6e", "roj2bbc", {
  r: [".r2avt6e{overflow:visible;padding:0;border-style:none;position:relative;box-sizing:content-box;background-color:inherit;color:inherit;font-family:inherit;font-size:inherit;cursor:pointer;line-height:0;-webkit-appearance:button;text-align:unset;}", ".r2avt6e:focus{outline-style:none;}", ".r2avt6e:focus-visible{outline-style:none;}", ".r2avt6e[data-fui-focus-visible]{border-top-color:transparent;border-right-color:transparent;border-bottom-color:transparent;border-left-color:transparent;}", '.r2avt6e[data-fui-focus-visible]::after{content:"";position:absolute;pointer-events:none;z-index:1;border:2px solid var(--colorStrokeFocus2);border-radius:var(--borderRadiusMedium);top:calc(2px * -1);right:calc(2px * -1);bottom:calc(2px * -1);left:calc(2px * -1);}', ".roj2bbc{overflow:visible;padding:0;border-style:none;position:relative;box-sizing:content-box;background-color:inherit;color:inherit;font-family:inherit;font-size:inherit;cursor:pointer;line-height:0;-webkit-appearance:button;text-align:unset;}", ".roj2bbc:focus{outline-style:none;}", ".roj2bbc:focus-visible{outline-style:none;}", ".roj2bbc[data-fui-focus-visible]{border-top-color:transparent;border-left-color:transparent;border-bottom-color:transparent;border-right-color:transparent;}", '.roj2bbc[data-fui-focus-visible]::after{content:"";position:absolute;pointer-events:none;z-index:1;border:2px solid var(--colorStrokeFocus2);border-radius:var(--borderRadiusMedium);top:calc(2px * -1);left:calc(2px * -1);bottom:calc(2px * -1);right:calc(2px * -1);}'],
  s: ["@media (forced-colors: active){.r2avt6e[data-fui-focus-visible]::after{border-top-color:Highlight;border-right-color:Highlight;border-bottom-color:Highlight;border-left-color:Highlight;}}", "@media (forced-colors: active){.roj2bbc[data-fui-focus-visible]::after{border-top-color:Highlight;border-left-color:Highlight;border-bottom-color:Highlight;border-right-color:Highlight;}}"]
});
var useDialogTitleStyles_unstable = (state) => {
  "use no memo";
  const rootResetStyles = useRootResetStyles();
  const actionResetStyles = useActionResetStyles();
  const styles = useStyles31();
  state.root.className = mergeClasses(dialogTitleClassNames.root, rootResetStyles, !state.action && styles.rootWithoutAction, state.root.className);
  if (state.action) {
    state.action.className = mergeClasses(dialogTitleClassNames.action, actionResetStyles, state.action.className);
  }
  return state;
};

// node_modules/@fluentui/react-dialog/lib/components/DialogTitle/useDialogTitle.js
var useDialogTitle_unstable = (props, ref) => {
  const { action } = props;
  const modalType = useDialogContext_unstable((ctx) => ctx.modalType);
  const internalStyles = useDialogTitleInternalStyles();
  return {
    components: {
      root: "h2",
      action: "div"
    },
    root: slot_exports.always(getIntrinsicElementProps("h2", {
      ref,
      id: useDialogContext_unstable((ctx) => ctx.dialogTitleId),
      ...props
    }), {
      elementType: "h2"
    }),
    action: slot_exports.optional(action, {
      renderByDefault: modalType === "non-modal",
      defaultProps: {
        children: React235.createElement(DialogTrigger, {
          disableButtonEnhancement: true,
          action: "close"
        }, React235.createElement("button", {
          type: "button",
          className: internalStyles,
          // TODO: find a better way to add internal labels
          "aria-label": "close"
        }, React235.createElement(Dismiss20Regular, null)))
      },
      elementType: "div"
    })
  };
};

// node_modules/@fluentui/react-dialog/lib/components/DialogTitle/renderDialogTitle.js
var renderDialogTitle_unstable = (state) => {
  assertSlots(state);
  return jsxs(import_react.Fragment, {
    children: [
      jsx(state.root, {
        children: state.root.children
      }),
      state.action && jsx(state.action, {})
    ]
  });
};

// node_modules/@fluentui/react-dialog/lib/components/DialogTitle/DialogTitle.js
var DialogTitle = React236.forwardRef((props, ref) => {
  const state = useDialogTitle_unstable(props, ref);
  useDialogTitleStyles_unstable(state);
  useCustomStyleHook("useDialogTitleStyles_unstable")(state);
  return renderDialogTitle_unstable(state);
});
DialogTitle.displayName = "DialogTitle";

// node_modules/@fluentui/react-dialog/lib/components/DialogSurface/DialogSurface.js
var React238 = __toESM(require_react());

// node_modules/@fluentui/react-dialog/lib/components/DialogSurface/useDialogSurface.js
var React237 = __toESM(require_react());

// node_modules/@fluentui/react-dialog/lib/components/DialogBackdropMotion.js
var keyframes2 = [
  {
    opacity: 0
  },
  {
    opacity: 1
  }
];
var DialogBackdropMotion = createPresenceComponent({
  enter: {
    keyframes: keyframes2,
    easing: motionTokens.curveLinear,
    duration: motionTokens.durationGentle
  },
  exit: {
    keyframes: [
      ...keyframes2
    ].reverse(),
    easing: motionTokens.curveLinear,
    duration: motionTokens.durationGentle
  }
});

// node_modules/@fluentui/react-dialog/lib/components/DialogSurface/useDialogSurface.js
var useDialogSurface_unstable = (props, ref) => {
  const contextRef = useMotionForwardedRef();
  const modalType = useDialogContext_unstable((ctx) => ctx.modalType);
  const isNestedDialog = useDialogContext_unstable((ctx) => ctx.isNestedDialog);
  const modalAttributes = useDialogContext_unstable((ctx) => ctx.modalAttributes);
  const dialogRef = useDialogContext_unstable((ctx) => ctx.dialogRef);
  const requestOpenChange = useDialogContext_unstable((ctx) => ctx.requestOpenChange);
  const dialogTitleID = useDialogContext_unstable((ctx) => ctx.dialogTitleId);
  const open = useDialogContext_unstable((ctx) => ctx.open);
  const handledBackdropClick = useEventCallback((event) => {
    if (isResolvedShorthand(props.backdrop)) {
      var _props_backdrop_onClick, _props_backdrop;
      (_props_backdrop_onClick = (_props_backdrop = props.backdrop).onClick) === null || _props_backdrop_onClick === void 0 ? void 0 : _props_backdrop_onClick.call(_props_backdrop, event);
    }
    if (modalType === "modal" && !event.isDefaultPrevented()) {
      requestOpenChange({
        event,
        open: false,
        type: "backdropClick"
      });
    }
  });
  const handleKeyDown = useEventCallback((event) => {
    var _props_onKeyDown;
    (_props_onKeyDown = props.onKeyDown) === null || _props_onKeyDown === void 0 ? void 0 : _props_onKeyDown.call(props, event);
    if (event.key === Escape && !event.isDefaultPrevented()) {
      requestOpenChange({
        event,
        open: false,
        type: "escapeKeyDown"
      });
      event.preventDefault();
    }
  });
  const backdrop = slot_exports.optional(props.backdrop, {
    renderByDefault: modalType !== "non-modal",
    defaultProps: {
      "aria-hidden": "true"
    },
    elementType: "div"
  });
  if (backdrop) {
    backdrop.onClick = handledBackdropClick;
  }
  const { disableBodyScroll, enableBodyScroll } = useDisableBodyScroll();
  useIsomorphicLayoutEffect(() => {
    if (isNestedDialog || modalType === "non-modal") {
      return;
    }
    disableBodyScroll();
    return () => {
      enableBodyScroll();
    };
  }, [
    enableBodyScroll,
    isNestedDialog,
    disableBodyScroll,
    modalType
  ]);
  return {
    components: {
      backdrop: "div",
      root: "div",
      // TODO: remove once React v18 slot API is modified
      // This is a problem at the moment due to UnknownSlotProps assumption
      // that `children` property is `ReactNode`, which in this case is not valid
      // as PresenceComponentProps['children'] is `ReactElement`
      backdropMotion: DialogBackdropMotion
    },
    open,
    backdrop,
    isNestedDialog,
    mountNode: props.mountNode,
    root: slot_exports.always(getIntrinsicElementProps("div", {
      tabIndex: -1,
      "aria-modal": modalType !== "non-modal",
      role: modalType === "alert" ? "alertdialog" : "dialog",
      "aria-labelledby": props["aria-label"] ? void 0 : dialogTitleID,
      ...props,
      ...modalAttributes,
      onKeyDown: handleKeyDown,
      // FIXME:
      // `DialogSurfaceElement` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`
      // but since it would be a breaking change to fix it, we are casting ref to it's proper type
      ref: useMergedRefs(ref, contextRef, dialogRef)
    }), {
      elementType: "div"
    }),
    backdropMotion: presenceMotionSlot(props.backdropMotion, {
      elementType: DialogBackdropMotion,
      defaultProps: {
        appear: true,
        visible: open
      }
    }),
    // Deprecated properties
    transitionStatus: void 0
  };
};

// node_modules/@fluentui/react-dialog/lib/components/DialogSurface/renderDialogSurface.js
var renderDialogSurface_unstable = (state, contextValues) => {
  assertSlots(state);
  return jsxs(Portal, {
    mountNode: state.mountNode,
    children: [
      state.backdrop && // TODO: state.backdropMotion is non nullable, but assertSlots asserts it as nullable
      // FIXME: this should be resolved by properly splitting props and state slots declaration
      state.backdropMotion && jsx(state.backdropMotion, {
        children: jsx(state.backdrop, {})
      }),
      jsx(DialogSurfaceProvider, {
        value: contextValues.dialogSurface,
        children: jsx(state.root, {})
      })
    ]
  });
};

// node_modules/@fluentui/react-dialog/lib/components/DialogSurface/useDialogSurfaceStyles.styles.js
var dialogSurfaceClassNames = {
  root: "fui-DialogSurface",
  backdrop: "fui-DialogSurface__backdrop"
};
var useRootBaseStyle = __resetStyles("r1svjbtt", "r131yuoq", {
  r: [".r1svjbtt{inset:0;padding:24px;margin:auto;border-style:none;overflow:unset;border:1px solid var(--colorTransparentStroke);border-radius:var(--borderRadiusXLarge);display:block;-webkit-user-select:unset;-moz-user-select:unset;user-select:unset;visibility:unset;position:fixed;height:fit-content;max-width:600px;max-height:100vh;box-sizing:border-box;background-color:var(--colorNeutralBackground1);color:var(--colorNeutralForeground1);}", ".r1svjbtt:focus{outline-style:none;}", ".r1svjbtt:focus-visible{outline-style:none;}", ".r1svjbtt[data-fui-focus-visible]{border-top-color:transparent;border-right-color:transparent;border-bottom-color:transparent;border-left-color:transparent;}", '.r1svjbtt[data-fui-focus-visible]::after{content:"";position:absolute;pointer-events:none;z-index:1;border:2px solid var(--colorStrokeFocus2);border-radius:var(--borderRadiusMedium);top:calc(2px * -1);right:calc(2px * -1);bottom:calc(2px * -1);left:calc(2px * -1);}', ".r131yuoq{inset:0;padding:24px;margin:auto;border-style:none;overflow:unset;border:1px solid var(--colorTransparentStroke);border-radius:var(--borderRadiusXLarge);display:block;-webkit-user-select:unset;-moz-user-select:unset;user-select:unset;visibility:unset;position:fixed;height:fit-content;max-width:600px;max-height:100vh;box-sizing:border-box;background-color:var(--colorNeutralBackground1);color:var(--colorNeutralForeground1);}", ".r131yuoq:focus{outline-style:none;}", ".r131yuoq:focus-visible{outline-style:none;}", ".r131yuoq[data-fui-focus-visible]{border-top-color:transparent;border-left-color:transparent;border-bottom-color:transparent;border-right-color:transparent;}", '.r131yuoq[data-fui-focus-visible]::after{content:"";position:absolute;pointer-events:none;z-index:1;border:2px solid var(--colorStrokeFocus2);border-radius:var(--borderRadiusMedium);top:calc(2px * -1);left:calc(2px * -1);bottom:calc(2px * -1);right:calc(2px * -1);}'],
  s: ["@media (forced-colors: active){.r1svjbtt[data-fui-focus-visible]::after{border-top-color:Highlight;border-right-color:Highlight;border-bottom-color:Highlight;border-left-color:Highlight;}}", "@media screen and (max-width: 480px){.r1svjbtt{max-width:100vw;}}", "@media screen and (max-height: 359px){.r1svjbtt{overflow-y:auto;padding-right:calc(24px - 4px);border-right-width:4px;border-top-width:4px;border-bottom-width:4px;}}", "@media (forced-colors: active){.r131yuoq[data-fui-focus-visible]::after{border-top-color:Highlight;border-left-color:Highlight;border-bottom-color:Highlight;border-right-color:Highlight;}}", "@media screen and (max-width: 480px){.r131yuoq{max-width:100vw;}}", "@media screen and (max-height: 359px){.r131yuoq{overflow-y:auto;padding-left:calc(24px - 4px);border-left-width:4px;border-top-width:4px;border-bottom-width:4px;}}"]
});
var useBackdropBaseStyle = __resetStyles("rsptlh5", null, [".rsptlh5{inset:0px;background-color:rgba(0, 0, 0, 0.4);position:fixed;}"]);
var useBackdropStyles = __styles2({
  nestedDialogBackdrop: {
    De3pzq: "f1c21dwh"
  }
}, {
  d: [".f1c21dwh{background-color:var(--colorTransparentBackground);}"]
});
var useDialogSurfaceStyles_unstable = (state) => {
  "use no memo";
  const {
    isNestedDialog,
    root,
    backdrop
  } = state;
  const rootBaseStyle = useRootBaseStyle();
  const backdropBaseStyle = useBackdropBaseStyle();
  const backdropStyles = useBackdropStyles();
  root.className = mergeClasses(dialogSurfaceClassNames.root, rootBaseStyle, root.className);
  if (backdrop) {
    backdrop.className = mergeClasses(dialogSurfaceClassNames.backdrop, backdropBaseStyle, isNestedDialog && backdropStyles.nestedDialogBackdrop, backdrop.className);
  }
  return state;
};

// node_modules/@fluentui/react-dialog/lib/components/DialogSurface/useDialogSurfaceContextValues.js
function useDialogSurfaceContextValues_unstable(state) {
  const dialogSurface = true;
  return {
    dialogSurface
  };
}

// node_modules/@fluentui/react-dialog/lib/components/DialogSurface/DialogSurface.js
var DialogSurface = React238.forwardRef((props, ref) => {
  const state = useDialogSurface_unstable(props, ref);
  const contextValues = useDialogSurfaceContextValues_unstable(state);
  useDialogSurfaceStyles_unstable(state);
  useCustomStyleHook("useDialogSurfaceStyles_unstable")(state);
  return renderDialogSurface_unstable(state, contextValues);
});
DialogSurface.displayName = "DialogSurface";

// node_modules/@fluentui/react-dialog/lib/components/DialogContent/DialogContent.js
var React240 = __toESM(require_react());

// node_modules/@fluentui/react-dialog/lib/components/DialogContent/useDialogContent.js
var React239 = __toESM(require_react());
var useDialogContent_unstable = (props, ref) => {
  var _props_as;
  return {
    components: {
      root: "div"
    },
    root: slot_exports.always(getIntrinsicElementProps((_props_as = props.as) !== null && _props_as !== void 0 ? _props_as : "div", {
      // FIXME:
      // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`
      // but since it would be a breaking change to fix it, we are casting ref to it's proper type
      ref,
      ...props
    }), {
      elementType: "div"
    })
  };
};

// node_modules/@fluentui/react-dialog/lib/components/DialogContent/renderDialogContent.js
var renderDialogContent_unstable = (state) => {
  assertSlots(state);
  return jsx(state.root, {});
};

// node_modules/@fluentui/react-dialog/lib/components/DialogContent/useDialogContentStyles.styles.js
var dialogContentClassNames = {
  root: "fui-DialogContent"
};
var useStyles32 = __resetStyles("r1v5zwsm", null, {
  r: [".r1v5zwsm{padding:var(--strokeWidthThick);margin:calc(var(--strokeWidthThick) * -1);font-family:var(--fontFamilyBase);font-size:var(--fontSizeBase300);font-weight:var(--fontWeightRegular);line-height:var(--lineHeightBase300);overflow-y:auto;min-height:32px;box-sizing:border-box;grid-row-start:2;grid-row-end:2;grid-column-start:1;grid-column-end:4;}"],
  s: ["@media screen and (max-height: 359px){.r1v5zwsm{overflow-y:unset;}}"]
});
var useDialogContentStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles32();
  state.root.className = mergeClasses(dialogContentClassNames.root, styles, state.root.className);
  return state;
};

// node_modules/@fluentui/react-dialog/lib/components/DialogContent/DialogContent.js
var DialogContent = React240.forwardRef((props, ref) => {
  const state = useDialogContent_unstable(props, ref);
  useDialogContentStyles_unstable(state);
  useCustomStyleHook("useDialogContentStyles_unstable")(state);
  return renderDialogContent_unstable(state);
});
DialogContent.displayName = "DialogContent";

// node_modules/@fluentui/react-progress/lib/components/ProgressBar/ProgressBar.js
var React242 = __toESM(require_react());

// node_modules/@fluentui/react-progress/lib/components/ProgressBar/useProgressBar.js
var React241 = __toESM(require_react());

// node_modules/@fluentui/react-progress/lib/utils/clampMax.js
var clampMax = (max) => {
  const internalMax = max <= 0 ? 1 : max;
  if (true) {
    if (max <= 0) {
      console.error(`The prop 'max' must be greater than 0. Received max: ${max}`);
    }
  }
  return internalMax;
};

// node_modules/@fluentui/react-progress/lib/utils/clampValue.js
var clampValue = (value, max) => {
  if (value === void 0) {
    return value;
  }
  const internalValue = value < 0 ? 0 : value > max ? max : value;
  if (true) {
    if (value < 0) {
      console.error(`The prop 'value' must be greater than or equal to zero. Received value: ${value}`);
    }
    if (value > max) {
      console.error(`The prop 'value' must be less than or equal to 'max'. Received value: ${value}, max: ${max}`);
    }
  }
  return internalValue;
};

// node_modules/@fluentui/react-progress/lib/components/ProgressBar/useProgressBar.js
var useProgressBar_unstable = (props, ref) => {
  const field = useFieldContext_unstable();
  const fieldState = field === null || field === void 0 ? void 0 : field.validationState;
  const { color: color2 = fieldState === "error" || fieldState === "warning" || fieldState === "success" ? fieldState : "brand", shape = "rounded", thickness = "medium" } = props;
  var _props_max;
  const max = clampMax((_props_max = props.max) !== null && _props_max !== void 0 ? _props_max : 1);
  const value = clampValue(props.value, max);
  const root = slot_exports.always(getIntrinsicElementProps("div", {
    // FIXME:
    // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`
    // but since it would be a breaking change to fix it, we are casting ref to it's proper type
    ref,
    role: "progressbar",
    "aria-valuemin": value !== void 0 ? 0 : void 0,
    "aria-valuemax": value !== void 0 ? max : void 0,
    "aria-valuenow": value,
    "aria-labelledby": field === null || field === void 0 ? void 0 : field.labelId,
    ...props
  }), {
    elementType: "div"
  });
  if (field && (field.validationMessageId || field.hintId)) {
    root["aria-describedby"] = [
      field === null || field === void 0 ? void 0 : field.validationMessageId,
      field === null || field === void 0 ? void 0 : field.hintId,
      root["aria-describedby"]
    ].filter(Boolean).join(" ");
  }
  const bar = slot_exports.always(props.bar, {
    elementType: "div"
  });
  const state = {
    color: color2,
    max,
    shape,
    thickness,
    value,
    components: {
      root: "div",
      bar: "div"
    },
    root,
    bar
  };
  return state;
};

// node_modules/@fluentui/react-progress/lib/components/ProgressBar/renderProgressBar.js
var renderProgressBar_unstable = (state) => {
  assertSlots(state);
  return jsx(state.root, {
    children: state.bar && jsx(state.bar, {})
  });
};

// node_modules/@fluentui/react-progress/lib/components/ProgressBar/useProgressBarStyles.styles.js
var progressBarClassNames = {
  root: "fui-ProgressBar",
  bar: "fui-ProgressBar__bar"
};
var ZERO_THRESHOLD = 0.01;
var useRootStyles15 = __styles2({
  root: {
    mc9l5x: "ftgm304",
    De3pzq: "f18f03hv",
    a9b677: "fly5x3f",
    B68tc82: 0,
    Bmxbyg5: 0,
    Bpg54ce: "f1a3p1vp",
    Bpep1pd: "fu42dvn"
  },
  rounded: {
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "ft85np5"
  },
  square: {
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "f1fabniw"
  },
  medium: {
    Bqenvij: "f4t8t6x"
  },
  large: {
    Bqenvij: "f6ywr7j"
  }
}, {
  d: [".ftgm304{display:block;}", ".f18f03hv{background-color:var(--colorNeutralBackground6);}", ".fly5x3f{width:100%;}", [".f1a3p1vp{overflow:hidden;}", {
    p: -1
  }], [".ft85np5{border-radius:var(--borderRadiusMedium);}", {
    p: -1
  }], [".f1fabniw{border-radius:var(--borderRadiusNone);}", {
    p: -1
  }], ".f4t8t6x{height:2px;}", ".f6ywr7j{height:4px;}"],
  m: [["@media screen and (forced-colors: active){.fu42dvn{background-color:CanvasText;}}", {
    m: "screen and (forced-colors: active)"
  }]]
});
var useBarStyles = __styles2({
  base: {
    Bpep1pd: "f1neahkh",
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "f12b9xdw",
    Bqenvij: "f1l02sjl"
  },
  nonZeroDeterminate: {
    Bmy1vo4: "fjt6zfz",
    B3o57yi: "f1wofebd",
    Bkqvd7p: "fv71qf3"
  },
  indeterminate: {
    B2u0y6b: "fa0wk36",
    qhf8xq: "f10pi13n",
    Bcmaq0h: ["fpo0yib", "f1u5hf6c"],
    Bv12yb3: ["fwd2bol", "f14gig94"],
    vin17d: "f1a27w2r",
    Ezkn3b: "f452v7t",
    w3vfg9: "f1cpbl36",
    Gqtpxc: "f4akx1t",
    B3vm3ge: "f18p5put"
  },
  brand: {
    De3pzq: "ftywsgz"
  },
  error: {
    De3pzq: "fdl5y0r"
  },
  warning: {
    De3pzq: "f1s438gw"
  },
  success: {
    De3pzq: "flxk52p"
  }
}, {
  m: [["@media screen and (forced-colors: active){.f1neahkh{background-color:Highlight;}}", {
    m: "screen and (forced-colors: active)"
  }], ["@media screen and (prefers-reduced-motion: reduce){.f4akx1t{animation-duration:0.01ms;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }], ["@media screen and (prefers-reduced-motion: reduce){.f18p5put{animation-iteration-count:1;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }]],
  d: [[".f12b9xdw{border-radius:inherit;}", {
    p: -1
  }], ".f1l02sjl{height:100%;}", ".fjt6zfz{transition-property:width;}", ".f1wofebd{transition-duration:0.3s;}", ".fv71qf3{transition-timing-function:ease;}", ".fa0wk36{max-width:33%;}", ".f10pi13n{position:relative;}", ".fpo0yib{background-image:linear-gradient(\n      to right,\n      var(--colorNeutralBackground6) 0%,\n      var(--colorTransparentBackground) 50%,\n      var(--colorNeutralBackground6) 100%\n    );}", ".f1u5hf6c{background-image:linear-gradient(\n      to left,\n      var(--colorNeutralBackground6) 0%,\n      var(--colorTransparentBackground) 50%,\n      var(--colorNeutralBackground6) 100%\n    );}", ".fwd2bol{animation-name:f1keuaan;}", ".f14gig94{animation-name:f10x8f8u;}", ".f1a27w2r{animation-duration:3s;}", ".f452v7t{animation-timing-function:linear;}", ".f1cpbl36{animation-iteration-count:infinite;}", ".ftywsgz{background-color:var(--colorCompoundBrandBackground);}", ".fdl5y0r{background-color:var(--colorPaletteRedBackground3);}", ".f1s438gw{background-color:var(--colorPaletteDarkOrangeBackground3);}", ".flxk52p{background-color:var(--colorPaletteGreenBackground3);}"],
  k: ["@keyframes f1keuaan{0%{left:-33%;}100%{left:100%;}}", "@keyframes f10x8f8u{0%{right:-33%;}100%{right:100%;}}"]
});
var useProgressBarStyles_unstable = (state) => {
  "use no memo";
  const {
    color: color2,
    max,
    shape,
    thickness,
    value
  } = state;
  const rootStyles = useRootStyles15();
  const barStyles = useBarStyles();
  state.root.className = mergeClasses(progressBarClassNames.root, rootStyles.root, rootStyles[shape], rootStyles[thickness], state.root.className);
  if (state.bar) {
    state.bar.className = mergeClasses(progressBarClassNames.bar, barStyles.base, barStyles.brand, value === void 0 && barStyles.indeterminate, value !== void 0 && value > ZERO_THRESHOLD && barStyles.nonZeroDeterminate, color2 && value !== void 0 && barStyles[color2], state.bar.className);
  }
  if (state.bar && value !== void 0) {
    state.bar.style = {
      width: Math.min(100, Math.max(0, value / max * 100)) + "%",
      ...state.bar.style
    };
  }
  return state;
};

// node_modules/@fluentui/react-progress/lib/components/ProgressBar/ProgressBar.js
var ProgressBar = React242.forwardRef((props, ref) => {
  const state = useProgressBar_unstable(props, ref);
  useProgressBarStyles_unstable(state);
  useCustomStyleHook("useProgressBarStyles_unstable")(state);
  return renderProgressBar_unstable(state);
});
ProgressBar.displayName = "ProgressBar";

// node_modules/@fluentui/react-overflow/lib/components/Overflow.js
var React247 = __toESM(require_react());

// node_modules/@fluentui/react-overflow/node_modules/@fluentui/react-context-selector/lib/createContext.js
var React243 = __toESM(require_react());
var import_scheduler8 = __toESM(require_scheduler8());
var createProvider8 = (Original) => {
  const Provider2 = (props) => {
    const valueRef = React243.useRef(props.value);
    const versionRef = React243.useRef(0);
    const contextValue = React243.useRef();
    if (!contextValue.current) {
      contextValue.current = {
        value: valueRef,
        version: versionRef,
        listeners: []
      };
    }
    useIsomorphicLayoutEffect(() => {
      valueRef.current = props.value;
      versionRef.current += 1;
      (0, import_scheduler8.unstable_runWithPriority)(import_scheduler8.unstable_NormalPriority, () => {
        contextValue.current.listeners.forEach((listener) => {
          listener([
            versionRef.current,
            props.value
          ]);
        });
      });
    }, [
      props.value
    ]);
    return React243.createElement(Original, {
      value: contextValue.current
    }, props.children);
  };
  if (true) {
    Provider2.displayName = "ContextSelector.Provider";
  }
  return Provider2;
};
var createContext31 = (defaultValue) => {
  const context = React243.createContext({
    value: {
      current: defaultValue
    },
    version: {
      current: -1
    },
    listeners: []
  });
  context.Provider = createProvider8(context.Provider);
  delete context.Consumer;
  return context;
};

// node_modules/@fluentui/react-overflow/node_modules/@fluentui/react-context-selector/lib/useContextSelector.js
var React244 = __toESM(require_react());
var useContextSelector8 = (context, selector) => {
  const contextValue = React244.useContext(context);
  const { value: { current: value }, version: { current: version }, listeners } = contextValue;
  const selected = selector(value);
  const [state, setState] = React244.useState([
    value,
    selected
  ]);
  const dispatch = (payload) => {
    setState((prevState) => {
      if (!payload) {
        return [
          value,
          selected
        ];
      }
      if (payload[0] <= version) {
        if (Object.is(prevState[1], selected)) {
          return prevState;
        }
        return [
          value,
          selected
        ];
      }
      try {
        if (Object.is(prevState[0], payload[1])) {
          return prevState;
        }
        const nextSelected = selector(payload[1]);
        if (Object.is(prevState[1], nextSelected)) {
          return prevState;
        }
        return [
          payload[1],
          nextSelected
        ];
      } catch (e) {
      }
      return [
        prevState[0],
        prevState[1]
      ];
    });
  };
  if (!Object.is(state[1], selected)) {
    dispatch(void 0);
  }
  const stableDispatch = useEventCallback(dispatch);
  useIsomorphicLayoutEffect(() => {
    listeners.push(stableDispatch);
    return () => {
      const index = listeners.indexOf(stableDispatch);
      listeners.splice(index, 1);
    };
  }, [
    stableDispatch,
    listeners
  ]);
  return state[1];
};

// node_modules/@fluentui/react-overflow/node_modules/@fluentui/react-context-selector/lib/useHasParentContext.js
var React245 = __toESM(require_react());

// node_modules/@fluentui/react-overflow/lib/overflowContext.js
var OverflowContext = createContext31(void 0);
var overflowContextDefaultValue = {
  itemVisibility: {},
  groupVisibility: {},
  hasOverflow: false,
  registerItem: () => () => null,
  updateOverflow: () => null,
  registerOverflowMenu: () => () => null,
  registerDivider: () => () => null
};
var useOverflowContext = (selector) => useContextSelector8(OverflowContext, (ctx = overflowContextDefaultValue) => selector(ctx));

// node_modules/@fluentui/react-overflow/lib/useOverflowContainer.js
var React246 = __toESM(require_react());

// node_modules/@fluentui/priority-overflow/lib/consts.js
var DATA_OVERFLOWING = "data-overflowing";
var DATA_OVERFLOW_GROUP = "data-overflow-group";

// node_modules/@fluentui/priority-overflow/lib/createResizeObserver.js
function observeResize(elementToObserve, callback) {
  var _elementToObserve_ownerDocument_defaultView;
  const GlobalResizeObserver = (_elementToObserve_ownerDocument_defaultView = elementToObserve.ownerDocument.defaultView) === null || _elementToObserve_ownerDocument_defaultView === void 0 ? void 0 : _elementToObserve_ownerDocument_defaultView.ResizeObserver;
  if (!GlobalResizeObserver) {
    if (true) {
      console.error("@fluentui/priority-overflow", "ResizeObserver does not exist on container window");
    }
    return () => null;
  }
  let resizeObserver = new GlobalResizeObserver(callback);
  resizeObserver.observe(elementToObserve);
  return () => {
    resizeObserver === null || resizeObserver === void 0 ? void 0 : resizeObserver.disconnect();
    resizeObserver = void 0;
  };
}

// node_modules/@fluentui/priority-overflow/lib/debounce.js
function debounce(fn) {
  let pending;
  if (false) {
    return fn;
  }
  return () => {
    if (!pending) {
      pending = true;
      queueMicrotask(() => {
        pending = false;
        fn();
      });
    }
  };
}

// node_modules/@fluentui/priority-overflow/lib/priorityQueue.js
function createPriorityQueue2(compare) {
  const arr = [];
  let size = 0;
  const left = (i) => {
    return 2 * i + 1;
  };
  const right = (i) => {
    return 2 * i + 2;
  };
  const parent = (i) => {
    return Math.floor((i - 1) / 2);
  };
  const swap = (a, b) => {
    const tmp = arr[a];
    arr[a] = arr[b];
    arr[b] = tmp;
  };
  const heapify = (i) => {
    let smallest = i;
    const l = left(i);
    const r = right(i);
    if (l < size && compare(arr[l], arr[smallest]) < 0) {
      smallest = l;
    }
    if (r < size && compare(arr[r], arr[smallest]) < 0) {
      smallest = r;
    }
    if (smallest !== i) {
      swap(smallest, i);
      heapify(smallest);
    }
  };
  const dequeue = () => {
    if (size === 0) {
      throw new Error("Priority queue empty");
    }
    const res = arr[0];
    arr[0] = arr[--size];
    heapify(0);
    return res;
  };
  const peek = () => {
    if (size === 0) {
      return null;
    }
    return arr[0];
  };
  const enqueue = (item) => {
    arr[size++] = item;
    let i = size - 1;
    let p = parent(i);
    while (i > 0 && compare(arr[p], arr[i]) > 0) {
      swap(p, i);
      i = p;
      p = parent(i);
    }
  };
  const contains = (item) => {
    const index = arr.indexOf(item);
    return index >= 0 && index < size;
  };
  const remove = (item) => {
    const i = arr.indexOf(item);
    if (i === -1 || i >= size) {
      return;
    }
    arr[i] = arr[--size];
    heapify(i);
  };
  const clear = () => {
    size = 0;
  };
  const all = () => {
    return arr.slice(0, size);
  };
  return {
    all,
    clear,
    contains,
    dequeue,
    enqueue,
    peek,
    remove,
    size: () => size
  };
}

// node_modules/@fluentui/priority-overflow/lib/overflowManager.js
function createOverflowManager() {
  const sizeCache = /* @__PURE__ */ new Map();
  let container;
  let overflowMenu;
  let observing = false;
  let forceDispatch = true;
  const options = {
    padding: 10,
    overflowAxis: "horizontal",
    overflowDirection: "end",
    minimumVisible: 0,
    onUpdateItemVisibility: () => void 0,
    onUpdateOverflow: () => void 0
  };
  const overflowItems = {};
  const overflowDividers = {};
  let disposeResizeObserver = () => null;
  const getNextItem = (queueToDequeue, queueToEnqueue) => {
    const nextItem = queueToDequeue.dequeue();
    queueToEnqueue.enqueue(nextItem);
    return overflowItems[nextItem];
  };
  const groupManager = createGroupManager();
  function compareItems(lt, rt) {
    if (!lt || !rt) {
      return 0;
    }
    const lte = overflowItems[lt];
    const rte = overflowItems[rt];
    if (lte.priority !== rte.priority) {
      return lte.priority > rte.priority ? 1 : -1;
    }
    const positionStatusBit = options.overflowDirection === "end" ? Node.DOCUMENT_POSITION_FOLLOWING : Node.DOCUMENT_POSITION_PRECEDING;
    return lte.element.compareDocumentPosition(rte.element) & positionStatusBit ? 1 : -1;
  }
  function getElementAxisSize(horizontal, vertical, el) {
    if (!sizeCache.has(el)) {
      sizeCache.set(el, options.overflowAxis === "horizontal" ? el[horizontal] : el[vertical]);
    }
    return sizeCache.get(el);
  }
  const getOffsetSize = getElementAxisSize.bind(null, "offsetWidth", "offsetHeight");
  const getClientSize = getElementAxisSize.bind(null, "clientWidth", "clientHeight");
  const invisibleItemQueue = createPriorityQueue2((a, b) => -1 * compareItems(a, b));
  const visibleItemQueue = createPriorityQueue2(compareItems);
  function occupiedSize() {
    const totalItemSize = visibleItemQueue.all().map((id) => overflowItems[id].element).map(getOffsetSize).reduce((prev, current) => prev + current, 0);
    const totalDividerSize = Object.entries(groupManager.groupVisibility()).reduce((acc, [id, state]) => acc + (state !== "hidden" && overflowDividers[id] ? getOffsetSize(overflowDividers[id].element) : 0), 0);
    const overflowMenuSize = invisibleItemQueue.size() > 0 && overflowMenu ? getOffsetSize(overflowMenu) : 0;
    return totalItemSize + totalDividerSize + overflowMenuSize;
  }
  const showItem = () => {
    const item = getNextItem(invisibleItemQueue, visibleItemQueue);
    options.onUpdateItemVisibility({
      item,
      visible: true
    });
    if (item.groupId) {
      groupManager.showItem(item.id, item.groupId);
      if (groupManager.isSingleItemVisible(item.id, item.groupId)) {
        var _overflowDividers_item_groupId;
        (_overflowDividers_item_groupId = overflowDividers[item.groupId]) === null || _overflowDividers_item_groupId === void 0 ? void 0 : _overflowDividers_item_groupId.element.removeAttribute(DATA_OVERFLOWING);
      }
    }
  };
  const hideItem = () => {
    const item = getNextItem(visibleItemQueue, invisibleItemQueue);
    options.onUpdateItemVisibility({
      item,
      visible: false
    });
    if (item.groupId) {
      if (groupManager.isSingleItemVisible(item.id, item.groupId)) {
        var _overflowDividers_item_groupId;
        (_overflowDividers_item_groupId = overflowDividers[item.groupId]) === null || _overflowDividers_item_groupId === void 0 ? void 0 : _overflowDividers_item_groupId.element.setAttribute(DATA_OVERFLOWING, "");
      }
      groupManager.hideItem(item.id, item.groupId);
    }
  };
  const dispatchOverflowUpdate = () => {
    const visibleItemIds = visibleItemQueue.all();
    const invisibleItemIds = invisibleItemQueue.all();
    const visibleItems = visibleItemIds.map((itemId) => overflowItems[itemId]);
    const invisibleItems = invisibleItemIds.map((itemId) => overflowItems[itemId]);
    options.onUpdateOverflow({
      visibleItems,
      invisibleItems,
      groupVisibility: groupManager.groupVisibility()
    });
  };
  const processOverflowItems = () => {
    if (!container) {
      return false;
    }
    sizeCache.clear();
    const availableSize = getClientSize(container) - options.padding;
    const visibleTop = visibleItemQueue.peek();
    const invisibleTop = invisibleItemQueue.peek();
    while (compareItems(invisibleItemQueue.peek(), visibleItemQueue.peek()) > 0) {
      hideItem();
    }
    for (let i = 0; i < 2; i++) {
      while (occupiedSize() < availableSize && invisibleItemQueue.size() > 0 || invisibleItemQueue.size() === 1) {
        showItem();
      }
      while (occupiedSize() > availableSize && visibleItemQueue.size() > options.minimumVisible) {
        hideItem();
      }
    }
    return visibleItemQueue.peek() !== visibleTop || invisibleItemQueue.peek() !== invisibleTop;
  };
  const forceUpdate = () => {
    if (processOverflowItems() || forceDispatch) {
      forceDispatch = false;
      dispatchOverflowUpdate();
    }
  };
  const update = debounce(forceUpdate);
  const observe = (observedContainer, userOptions) => {
    Object.assign(options, userOptions);
    observing = true;
    Object.values(overflowItems).forEach((item) => visibleItemQueue.enqueue(item.id));
    container = observedContainer;
    disposeResizeObserver = observeResize(container, (entries) => {
      if (!entries[0] || !container) {
        return;
      }
      update();
    });
  };
  const addItem = (item) => {
    if (overflowItems[item.id]) {
      return;
    }
    overflowItems[item.id] = item;
    if (observing) {
      forceDispatch = true;
      visibleItemQueue.enqueue(item.id);
    }
    if (item.groupId) {
      groupManager.addItem(item.id, item.groupId);
      item.element.setAttribute(DATA_OVERFLOW_GROUP, item.groupId);
    }
    update();
  };
  const addOverflowMenu = (el) => {
    overflowMenu = el;
  };
  const addDivider = (divider) => {
    if (!divider.groupId || overflowDividers[divider.groupId]) {
      return;
    }
    divider.element.setAttribute(DATA_OVERFLOW_GROUP, divider.groupId);
    overflowDividers[divider.groupId] = divider;
  };
  const removeOverflowMenu = () => {
    overflowMenu = void 0;
  };
  const removeDivider = (groupId) => {
    if (!overflowDividers[groupId]) {
      return;
    }
    const divider = overflowDividers[groupId];
    if (divider.groupId) {
      delete overflowDividers[groupId];
      divider.element.removeAttribute(DATA_OVERFLOW_GROUP);
    }
  };
  const removeItem = (itemId) => {
    if (!overflowItems[itemId]) {
      return;
    }
    if (observing) {
      forceDispatch = true;
    }
    const item = overflowItems[itemId];
    visibleItemQueue.remove(itemId);
    invisibleItemQueue.remove(itemId);
    if (item.groupId) {
      groupManager.removeItem(item.id, item.groupId);
      item.element.removeAttribute(DATA_OVERFLOW_GROUP);
    }
    sizeCache.delete(item.element);
    delete overflowItems[itemId];
    update();
  };
  const disconnect = () => {
    disposeResizeObserver();
    container = void 0;
    observing = false;
    forceDispatch = true;
    Object.keys(overflowItems).forEach((itemId) => removeItem(itemId));
    Object.keys(overflowDividers).forEach((dividerId) => removeDivider(dividerId));
    removeOverflowMenu();
    sizeCache.clear();
  };
  return {
    addItem,
    disconnect,
    forceUpdate,
    observe,
    removeItem,
    update,
    addOverflowMenu,
    removeOverflowMenu,
    addDivider,
    removeDivider
  };
}
var createGroupManager = () => {
  const groupVisibility = {};
  const groups = {};
  function updateGroupVisibility(groupId) {
    const group = groups[groupId];
    if (group.invisibleItemIds.size && group.visibleItemIds.size) {
      groupVisibility[groupId] = "overflow";
    } else if (group.visibleItemIds.size === 0) {
      groupVisibility[groupId] = "hidden";
    } else {
      groupVisibility[groupId] = "visible";
    }
  }
  function isGroupVisible(groupId) {
    return groupVisibility[groupId] === "visible" || groupVisibility[groupId] === "overflow";
  }
  return {
    groupVisibility: () => groupVisibility,
    isSingleItemVisible(itemId, groupId) {
      return isGroupVisible(groupId) && groups[groupId].visibleItemIds.has(itemId) && groups[groupId].visibleItemIds.size === 1;
    },
    addItem(itemId, groupId) {
      var _groups, _groupId;
      var _;
      (_ = (_groups = groups)[_groupId = groupId]) !== null && _ !== void 0 ? _ : _groups[_groupId] = {
        visibleItemIds: /* @__PURE__ */ new Set(),
        invisibleItemIds: /* @__PURE__ */ new Set()
      };
      groups[groupId].visibleItemIds.add(itemId);
      updateGroupVisibility(groupId);
    },
    removeItem(itemId, groupId) {
      groups[groupId].invisibleItemIds.delete(itemId);
      groups[groupId].visibleItemIds.delete(itemId);
      updateGroupVisibility(groupId);
    },
    showItem(itemId, groupId) {
      groups[groupId].invisibleItemIds.delete(itemId);
      groups[groupId].visibleItemIds.add(itemId);
      updateGroupVisibility(groupId);
    },
    hideItem(itemId, groupId) {
      groups[groupId].invisibleItemIds.add(itemId);
      groups[groupId].visibleItemIds.delete(itemId);
      updateGroupVisibility(groupId);
    }
  };
};

// node_modules/@fluentui/react-overflow/lib/constants.js
var DATA_OVERFLOWING2 = "data-overflowing";
var DATA_OVERFLOW_ITEM = "data-overflow-item";
var DATA_OVERFLOW_MENU = "data-overflow-menu";
var DATA_OVERFLOW_DIVIDER = "data-overflow-divider";

// node_modules/@fluentui/react-overflow/lib/useOverflowContainer.js
var noop2 = () => null;
var useOverflowContainer = (update, options) => {
  "use no memo";
  const { overflowAxis = "horizontal", overflowDirection = "end", padding = 10, minimumVisible = 0, onUpdateItemVisibility = noop2 } = options;
  const onUpdateOverflow = useEventCallback(update);
  const overflowOptions = React246.useMemo(() => ({
    overflowAxis,
    overflowDirection,
    padding,
    minimumVisible,
    onUpdateItemVisibility,
    onUpdateOverflow
  }), [
    minimumVisible,
    onUpdateItemVisibility,
    overflowAxis,
    overflowDirection,
    padding,
    onUpdateOverflow
  ]);
  const firstMount = useFirstMount();
  const containerRef = React246.useRef(null);
  const [overflowManager, setOverflowManager] = React246.useState(() => canUseDOM() ? createOverflowManager() : null);
  useIsomorphicLayoutEffect(() => {
    if (firstMount && containerRef.current) {
      overflowManager === null || overflowManager === void 0 ? void 0 : overflowManager.observe(containerRef.current, overflowOptions);
    }
  }, [
    firstMount,
    overflowManager,
    overflowOptions
  ]);
  useIsomorphicLayoutEffect(() => {
    if (!containerRef.current || !canUseDOM() || firstMount) {
      return;
    }
    const newOverflowManager = createOverflowManager();
    newOverflowManager.observe(containerRef.current, overflowOptions);
    setOverflowManager(newOverflowManager);
  }, [
    overflowOptions
  ]);
  React246.useEffect(() => () => {
    overflowManager === null || overflowManager === void 0 ? void 0 : overflowManager.disconnect();
  }, [
    overflowManager
  ]);
  const registerItem = React246.useCallback((item) => {
    overflowManager === null || overflowManager === void 0 ? void 0 : overflowManager.addItem(item);
    item.element.setAttribute(DATA_OVERFLOW_ITEM, "");
    return () => {
      item.element.removeAttribute(DATA_OVERFLOWING2);
      item.element.removeAttribute(DATA_OVERFLOW_ITEM);
      overflowManager === null || overflowManager === void 0 ? void 0 : overflowManager.removeItem(item.id);
    };
  }, [
    overflowManager
  ]);
  const registerDivider = React246.useCallback((divider) => {
    const el = divider.element;
    overflowManager === null || overflowManager === void 0 ? void 0 : overflowManager.addDivider(divider);
    el.setAttribute(DATA_OVERFLOW_DIVIDER, "");
    return () => {
      divider.groupId && (overflowManager === null || overflowManager === void 0 ? void 0 : overflowManager.removeDivider(divider.groupId));
      el.removeAttribute(DATA_OVERFLOW_DIVIDER);
    };
  }, [
    overflowManager
  ]);
  const registerOverflowMenu = React246.useCallback((el) => {
    overflowManager === null || overflowManager === void 0 ? void 0 : overflowManager.addOverflowMenu(el);
    el.setAttribute(DATA_OVERFLOW_MENU, "");
    return () => {
      overflowManager === null || overflowManager === void 0 ? void 0 : overflowManager.removeOverflowMenu();
      el.removeAttribute(DATA_OVERFLOW_MENU);
    };
  }, [
    overflowManager
  ]);
  const updateOverflow = React246.useCallback(() => {
    overflowManager === null || overflowManager === void 0 ? void 0 : overflowManager.update();
  }, [
    overflowManager
  ]);
  return {
    registerItem,
    registerDivider,
    registerOverflowMenu,
    updateOverflow,
    containerRef
  };
};
var updateVisibilityAttribute = ({ item, visible }) => {
  if (visible) {
    item.element.removeAttribute(DATA_OVERFLOWING2);
  } else {
    item.element.setAttribute(DATA_OVERFLOWING2, "");
  }
};

// node_modules/@fluentui/react-overflow/lib/components/useOverflowStyles.styles.js
var useOverflowStyles = __styles2({
  overflowMenu: {
    Brvla84: "fyfkpbf"
  },
  overflowingItems: {
    zb22lx: "f10570jf"
  }
}, {
  d: [".fyfkpbf [data-overflow-menu]{flex-shrink:0;}", ".f10570jf [data-overflowing]{display:none;}"]
});

// node_modules/@fluentui/react-overflow/lib/components/Overflow.js
var Overflow = React247.forwardRef((props, ref) => {
  const styles = useOverflowStyles();
  const { children: children2, minimumVisible, overflowAxis = "horizontal", overflowDirection, padding } = props;
  const [overflowState, setOverflowState] = React247.useState({
    hasOverflow: false,
    itemVisibility: {},
    groupVisibility: {}
  });
  const update = (data) => {
    const { visibleItems, invisibleItems, groupVisibility } = data;
    const itemVisibility = {};
    visibleItems.forEach((item) => {
      itemVisibility[item.id] = true;
    });
    invisibleItems.forEach((x) => itemVisibility[x.id] = false);
    setOverflowState(() => {
      return {
        hasOverflow: data.invisibleItems.length > 0,
        itemVisibility,
        groupVisibility
      };
    });
  };
  const { containerRef, registerItem, updateOverflow, registerOverflowMenu, registerDivider } = useOverflowContainer(update, {
    overflowDirection,
    overflowAxis,
    padding,
    minimumVisible,
    onUpdateItemVisibility: updateVisibilityAttribute
  });
  const child = getTriggerChild(children2);
  const clonedChild = applyTriggerPropsToChildren(children2, {
    ref: useMergedRefs(containerRef, ref, child === null || child === void 0 ? void 0 : child.ref),
    className: mergeClasses("fui-Overflow", styles.overflowMenu, styles.overflowingItems, children2.props.className)
  });
  return React247.createElement(OverflowContext.Provider, {
    value: {
      itemVisibility: overflowState.itemVisibility,
      groupVisibility: overflowState.groupVisibility,
      hasOverflow: overflowState.hasOverflow,
      registerItem,
      updateOverflow,
      registerOverflowMenu,
      registerDivider
    }
  }, clonedChild);
});

// node_modules/@fluentui/react-overflow/lib/useIsOverflowGroupVisible.js
function useIsOverflowGroupVisible(id) {
  return useOverflowContext((ctx) => ctx.groupVisibility[id]);
}

// node_modules/@fluentui/react-overflow/lib/useIsOverflowItemVisible.js
function useIsOverflowItemVisible(id) {
  return !!useOverflowContext((ctx) => ctx.itemVisibility[id]);
}

// node_modules/@fluentui/react-overflow/lib/useOverflowCount.js
var useOverflowCount = () => useOverflowContext((v) => {
  return Object.entries(v.itemVisibility).reduce((acc, [id, visible]) => {
    if (!visible) {
      acc++;
    }
    return acc;
  }, 0);
});

// node_modules/@fluentui/react-overflow/lib/useOverflowItem.js
var React248 = __toESM(require_react());
function useOverflowItem(id, priority, groupId) {
  const ref = React248.useRef(null);
  const registerItem = useOverflowContext((v) => v.registerItem);
  useIsomorphicLayoutEffect(() => {
    if (ref.current) {
      return registerItem({
        element: ref.current,
        id,
        priority: priority !== null && priority !== void 0 ? priority : 0,
        groupId
      });
    }
  }, [
    id,
    priority,
    registerItem,
    groupId
  ]);
  return ref;
}

// node_modules/@fluentui/react-overflow/lib/useOverflowMenu.js
var React249 = __toESM(require_react());
function useOverflowMenu(id) {
  const elementId = useId("overflow-menu", id);
  const overflowCount = useOverflowCount();
  const registerOverflowMenu = useOverflowContext((v) => v.registerOverflowMenu);
  const updateOverflow = useOverflowContext((v) => v.updateOverflow);
  const ref = React249.useRef(null);
  const isOverflowing = overflowCount > 0;
  useIsomorphicLayoutEffect(() => {
    if (ref.current) {
      return registerOverflowMenu(ref.current);
    }
  }, [
    registerOverflowMenu,
    isOverflowing,
    elementId
  ]);
  useIsomorphicLayoutEffect(() => {
    if (isOverflowing) {
      updateOverflow();
    }
  }, [
    isOverflowing,
    updateOverflow,
    ref
  ]);
  return {
    ref,
    overflowCount,
    isOverflowing
  };
}

// node_modules/@fluentui/react-overflow/lib/useOverflowDivider.js
var React250 = __toESM(require_react());
function useOverflowDivider(groupId) {
  const ref = React250.useRef(null);
  const registerDivider = useOverflowContext((v) => v.registerDivider);
  useIsomorphicLayoutEffect(() => {
    if (ref.current && groupId) {
      return registerDivider({
        element: ref.current,
        groupId
      });
    }
  }, [
    registerDivider,
    groupId
  ]);
  return ref;
}

// node_modules/@fluentui/react-overflow/lib/useOverflowVisibility.js
var React251 = __toESM(require_react());
function useOverflowVisibility() {
  const itemVisibility = useOverflowContext((ctx) => ctx.itemVisibility);
  const groupVisibility = useOverflowContext((ctx) => ctx.groupVisibility);
  return React251.useMemo(() => ({
    itemVisibility,
    groupVisibility
  }), [
    itemVisibility,
    groupVisibility
  ]);
}

// node_modules/@fluentui/react-overflow/lib/components/OverflowItem/OverflowItem.js
var React252 = __toESM(require_react());
var OverflowItem = React252.forwardRef((props, ref) => {
  const { id, groupId, priority, children: children2 } = props;
  const containerRef = useOverflowItem(id, priority, groupId);
  const child = getTriggerChild(children2);
  return applyTriggerPropsToChildren(children2, {
    ref: useMergedRefs(containerRef, ref, child === null || child === void 0 ? void 0 : child.ref)
  });
});
OverflowItem.isFluentTriggerComponent = true;

// node_modules/@fluentui/react-overflow/lib/components/OverflowDivider/OverflowDivider.js
var React253 = __toESM(require_react());
var OverflowDivider = React253.forwardRef((props, ref) => {
  const { groupId, children: children2 } = props;
  const containerRef = useOverflowDivider(groupId);
  return applyTriggerPropsToChildren(children2, {
    ref: useMergedRefs(containerRef, ref)
  });
});

// node_modules/@fluentui/react-toolbar/lib/components/Toolbar/Toolbar.js
var React258 = __toESM(require_react());

// node_modules/@fluentui/react-toolbar/lib/components/Toolbar/useToolbar.js
var React254 = __toESM(require_react());
var useToolbar_unstable = (props, ref) => {
  const { size = "medium", vertical = false } = props;
  const arrowNavigationProps = useArrowNavigationGroup({
    circular: true,
    axis: "both"
  });
  const initialState = {
    size,
    vertical,
    // TODO add appropriate props/defaults
    components: {
      // TODO add each slot's element type or component
      root: "div"
    },
    // TODO add appropriate slots, for example:
    // mySlot: resolveShorthand(props.mySlot),
    root: slot_exports.always(getIntrinsicElementProps("div", {
      role: "toolbar",
      // FIXME:
      // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`
      // but since it would be a breaking change to fix it, we are casting ref to it's proper type
      ref,
      ...vertical && {
        "aria-orientation": "vertical"
      },
      ...arrowNavigationProps,
      ...props
    }), {
      elementType: "div"
    })
  };
  const [checkedValues, onCheckedValueChange] = useToolbarSelectableState({
    checkedValues: props.checkedValues,
    defaultCheckedValues: props.defaultCheckedValues,
    onCheckedValueChange: props.onCheckedValueChange
  });
  const handleToggleButton = useEventCallback((e, name, value, checked) => {
    if (name && value) {
      const checkedItems = (checkedValues === null || checkedValues === void 0 ? void 0 : checkedValues[name]) || [];
      const newCheckedItems = [
        ...checkedItems
      ];
      if (checked) {
        newCheckedItems.splice(newCheckedItems.indexOf(value), 1);
      } else {
        newCheckedItems.push(value);
      }
      onCheckedValueChange === null || onCheckedValueChange === void 0 ? void 0 : onCheckedValueChange(e, {
        name,
        checkedItems: newCheckedItems
      });
    }
  });
  const handleRadio = useEventCallback((e, name, value, checked) => {
    if (name && value) {
      onCheckedValueChange === null || onCheckedValueChange === void 0 ? void 0 : onCheckedValueChange(e, {
        name,
        checkedItems: [
          value
        ]
      });
    }
  });
  return {
    ...initialState,
    handleToggleButton,
    handleRadio,
    checkedValues: checkedValues !== null && checkedValues !== void 0 ? checkedValues : {}
  };
};
var useToolbarSelectableState = (state) => {
  const [checkedValues, setCheckedValues] = useControllableState({
    state: state.checkedValues,
    defaultState: state.defaultCheckedValues,
    initialState: {}
  });
  const { onCheckedValueChange: onCheckedValueChangeOriginal } = state;
  const onCheckedValueChange = useEventCallback((e, { name, checkedItems }) => {
    if (onCheckedValueChangeOriginal) {
      onCheckedValueChangeOriginal(e, {
        name,
        checkedItems
      });
    }
    setCheckedValues((s) => {
      return s ? {
        ...s,
        [name]: checkedItems
      } : {
        [name]: checkedItems
      };
    });
  });
  return [
    checkedValues,
    onCheckedValueChange
  ];
};

// node_modules/@fluentui/react-toolbar/node_modules/@fluentui/react-context-selector/lib/createContext.js
var React255 = __toESM(require_react());
var import_scheduler9 = __toESM(require_scheduler9());
var createProvider9 = (Original) => {
  const Provider2 = (props) => {
    const valueRef = React255.useRef(props.value);
    const versionRef = React255.useRef(0);
    const contextValue = React255.useRef();
    if (!contextValue.current) {
      contextValue.current = {
        value: valueRef,
        version: versionRef,
        listeners: []
      };
    }
    useIsomorphicLayoutEffect(() => {
      valueRef.current = props.value;
      versionRef.current += 1;
      (0, import_scheduler9.unstable_runWithPriority)(import_scheduler9.unstable_NormalPriority, () => {
        contextValue.current.listeners.forEach((listener) => {
          listener([
            versionRef.current,
            props.value
          ]);
        });
      });
    }, [
      props.value
    ]);
    return React255.createElement(Original, {
      value: contextValue.current
    }, props.children);
  };
  if (true) {
    Provider2.displayName = "ContextSelector.Provider";
  }
  return Provider2;
};
var createContext33 = (defaultValue) => {
  const context = React255.createContext({
    value: {
      current: defaultValue
    },
    version: {
      current: -1
    },
    listeners: []
  });
  context.Provider = createProvider9(context.Provider);
  delete context.Consumer;
  return context;
};

// node_modules/@fluentui/react-toolbar/node_modules/@fluentui/react-context-selector/lib/useContextSelector.js
var React256 = __toESM(require_react());
var useContextSelector9 = (context, selector) => {
  const contextValue = React256.useContext(context);
  const { value: { current: value }, version: { current: version }, listeners } = contextValue;
  const selected = selector(value);
  const [state, setState] = React256.useState([
    value,
    selected
  ]);
  const dispatch = (payload) => {
    setState((prevState) => {
      if (!payload) {
        return [
          value,
          selected
        ];
      }
      if (payload[0] <= version) {
        if (Object.is(prevState[1], selected)) {
          return prevState;
        }
        return [
          value,
          selected
        ];
      }
      try {
        if (Object.is(prevState[0], payload[1])) {
          return prevState;
        }
        const nextSelected = selector(payload[1]);
        if (Object.is(prevState[1], nextSelected)) {
          return prevState;
        }
        return [
          payload[1],
          nextSelected
        ];
      } catch (e) {
      }
      return [
        prevState[0],
        prevState[1]
      ];
    });
  };
  if (!Object.is(state[1], selected)) {
    dispatch(void 0);
  }
  const stableDispatch = useEventCallback(dispatch);
  useIsomorphicLayoutEffect(() => {
    listeners.push(stableDispatch);
    return () => {
      const index = listeners.indexOf(stableDispatch);
      listeners.splice(index, 1);
    };
  }, [
    stableDispatch,
    listeners
  ]);
  return state[1];
};

// node_modules/@fluentui/react-toolbar/node_modules/@fluentui/react-context-selector/lib/useHasParentContext.js
var React257 = __toESM(require_react());

// node_modules/@fluentui/react-toolbar/lib/components/Toolbar/ToolbarContext.js
var ToolbarContext = createContext33(void 0);
var toolbarContextDefaultValue = {
  size: "medium",
  handleToggleButton: () => null,
  handleRadio: () => null,
  vertical: false,
  checkedValues: {}
};
var useToolbarContext_unstable = (selector) => useContextSelector9(ToolbarContext, (ctx = toolbarContextDefaultValue) => selector(ctx));

// node_modules/@fluentui/react-toolbar/lib/components/Toolbar/renderToolbar.js
var renderToolbar_unstable = (state, contextValues) => {
  assertSlots(state);
  return jsx(ToolbarContext.Provider, {
    value: contextValues.toolbar,
    children: jsx(state.root, {
      children: state.root.children
    })
  });
};

// node_modules/@fluentui/react-toolbar/lib/components/Toolbar/useToolbarStyles.styles.js
var toolbarClassNames = {
  root: "fui-Toolbar"
};
var useStyles33 = __styles2({
  root: {
    mc9l5x: "f22iagw",
    Bt984gj: "f122n59",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f1yqiaad"
  },
  vertical: {
    Beiy3e4: "f1vx9l62",
    a9b677: "f1acs6jw"
  },
  small: {
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "fvz760z"
  },
  medium: {
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f1yqiaad"
  },
  large: {
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f1ms6bdn"
  }
}, {
  d: [".f22iagw{display:flex;}", ".f122n59{align-items:center;}", [".f1yqiaad{padding:4px 8px;}", {
    p: -1
  }], ".f1vx9l62{flex-direction:column;}", ".f1acs6jw{width:fit-content;}", [".fvz760z{padding:0px 4px;}", {
    p: -1
  }], [".f1yqiaad{padding:4px 8px;}", {
    p: -1
  }], [".f1ms6bdn{padding:4px 20px;}", {
    p: -1
  }]]
});
var useToolbarStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles33();
  const {
    vertical,
    size
  } = state;
  state.root.className = mergeClasses(toolbarClassNames.root, styles.root, vertical && styles.vertical, size === "small" && !vertical && styles.small, size === "medium" && !vertical && styles.medium, size === "large" && !vertical && styles.large, state.root.className);
  return state;
};

// node_modules/@fluentui/react-toolbar/lib/components/Toolbar/useToolbarContextValues.js
function useToolbarContextValues_unstable(state) {
  const { size, handleToggleButton, vertical, checkedValues, handleRadio } = state;
  const toolbar = {
    size,
    vertical,
    handleToggleButton,
    handleRadio,
    checkedValues
  };
  return {
    toolbar
  };
}

// node_modules/@fluentui/react-toolbar/lib/components/Toolbar/Toolbar.js
var Toolbar = React258.forwardRef((props, ref) => {
  const state = useToolbar_unstable(props, ref);
  const contextValues = useToolbarContextValues_unstable(state);
  useToolbarStyles_unstable(state);
  useCustomStyleHook("useToolbarStyles_unstable")(state);
  return renderToolbar_unstable(state, contextValues);
});
Toolbar.displayName = "Toolbar";

// node_modules/@fluentui/react-toolbar/lib/components/Toolbar/Toolbar.types.js
var React259 = __toESM(require_react());

// node_modules/@fluentui/react-toolbar/lib/components/ToolbarButton/ToolbarButton.js
var React261 = __toESM(require_react());

// node_modules/@fluentui/react-toolbar/lib/components/ToolbarButton/useToolbarButtonStyles.styles.js
var useBaseStyles2 = __styles2({
  vertical: {
    Beiy3e4: "f1vx9l62"
  },
  verticalIcon: {
    Be2twd7: "f1rt2boy",
    jrapky: 0,
    Frg6f3: 0,
    t21cq0: 0,
    B6of3ja: 0,
    B74szlk: "f1s184ao"
  }
}, {
  d: [".f1vx9l62{flex-direction:column;}", ".f1rt2boy{font-size:24px;}", [".f1s184ao{margin:0;}", {
    p: -1
  }]]
});
var useToolbarButtonStyles_unstable = (state) => {
  "use no memo";
  useButtonStyles_unstable(state);
  const buttonStyles = useBaseStyles2();
  state.root.className = mergeClasses(state.root.className, state.vertical && buttonStyles.vertical);
  if (state.icon) {
    state.icon.className = mergeClasses(state.icon.className, state.vertical && buttonStyles.verticalIcon);
  }
};

// node_modules/@fluentui/react-toolbar/lib/components/ToolbarButton/useToolbarButton.js
var React260 = __toESM(require_react());
var useToolbarButton_unstable = (props, ref) => {
  const { vertical = false, ...buttonProps } = props;
  const state = useButton_unstable({
    appearance: "subtle",
    ...buttonProps,
    size: "medium"
  }, ref);
  return {
    vertical,
    ...state
  };
};

// node_modules/@fluentui/react-toolbar/lib/components/ToolbarButton/ToolbarButton.js
var ToolbarButton = React261.forwardRef((props, ref) => {
  const state = useToolbarButton_unstable(props, ref);
  useToolbarButtonStyles_unstable(state);
  useCustomStyleHook("useToolbarButtonStyles_unstable")(state);
  return renderButton_unstable(state);
});
ToolbarButton.displayName = "ToolbarButton";

// node_modules/@fluentui/react-toolbar/lib/components/ToolbarDivider/ToolbarDivider.js
var React263 = __toESM(require_react());

// node_modules/@fluentui/react-toolbar/lib/components/ToolbarDivider/useToolbarDividerStyles.styles.js
var useBaseStyles3 = __styles2({
  root: {
    mc9l5x: "ftuwxu6",
    B2u0y6b: "f1lwjmbk",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f1oic3e7"
  },
  vertical: {
    B2u0y6b: "fe668z"
  }
}, {
  d: [".ftuwxu6{display:inline-flex;}", ".f1lwjmbk{max-width:1px;}", [".f1oic3e7{padding:0 12px;}", {
    p: -1
  }], ".fe668z{max-width:initial;}"]
});
var useToolbarDividerStyles_unstable = (state) => {
  "use no memo";
  useDividerStyles_unstable(state);
  const {
    vertical
  } = state;
  const toolbarDividerStyles = useBaseStyles3();
  state.root.className = mergeClasses(toolbarDividerStyles.root, !vertical && toolbarDividerStyles.vertical, state.root.className);
  return state;
};

// node_modules/@fluentui/react-toolbar/lib/components/ToolbarDivider/useToolbarDivider.js
var React262 = __toESM(require_react());
var useToolbarDivider_unstable = (props, ref) => {
  const vertical = useToolbarContext_unstable((ctx) => ctx.vertical);
  return useDivider_unstable({
    vertical: !vertical,
    ...props
  }, ref);
};

// node_modules/@fluentui/react-toolbar/lib/components/ToolbarDivider/ToolbarDivider.js
var ToolbarDivider = React263.forwardRef((props, ref) => {
  const state = useToolbarDivider_unstable(props, ref);
  useToolbarDividerStyles_unstable(state);
  useCustomStyleHook("useToolbarDividerStyles_unstable")(state);
  return renderDivider_unstable(state);
});
ToolbarDivider.displayName = "ToolbarDivider";

// node_modules/@fluentui/react-toolbar/lib/components/ToolbarToggleButton/ToolbarToggleButton.js
var React265 = __toESM(require_react());

// node_modules/@fluentui/react-toolbar/lib/components/ToolbarToggleButton/useToolbarToggleButton.js
var React264 = __toESM(require_react());
var useToolbarToggleButton_unstable = (props, ref) => {
  const handleToggleButton = useToolbarContext_unstable((ctx) => ctx.handleToggleButton);
  const checked = useToolbarContext_unstable((ctx) => {
    var _ctx_checkedValues_props_name;
    return !!((_ctx_checkedValues_props_name = ctx.checkedValues[props.name]) === null || _ctx_checkedValues_props_name === void 0 ? void 0 : _ctx_checkedValues_props_name.includes(props.value));
  });
  const { onClick: onClickOriginal } = props;
  const toggleButtonState = useToggleButton_unstable({
    checked,
    ...props
  }, ref);
  const state = {
    ...toggleButtonState,
    name: props.name,
    value: props.value
  };
  const handleOnClick = (e) => {
    if (state.disabled) {
      e.preventDefault();
      e.stopPropagation();
      return;
    }
    handleToggleButton === null || handleToggleButton === void 0 ? void 0 : handleToggleButton(e, state.name, state.value, state.checked);
    onClickOriginal === null || onClickOriginal === void 0 ? void 0 : onClickOriginal(e);
  };
  state.root.onClick = handleOnClick;
  return state;
};

// node_modules/@fluentui/react-toolbar/lib/components/ToolbarToggleButton/useToolbarToggleButtonStyles.styles.js
var useBaseStyles4 = __styles2({
  selected: {
    sj55zd: "f16muhyy"
  }
}, {
  d: [".f16muhyy{color:var(--colorBrandForeground1);}"]
});
var useToolbarToggleButtonStyles_unstable = (state) => {
  "use no memo";
  useToggleButtonStyles_unstable(state);
  const toggleButtonStyles = useBaseStyles4();
  state.root.className = mergeClasses(state.root.className, state.checked && toggleButtonStyles.selected);
  return state;
};

// node_modules/@fluentui/react-toolbar/lib/components/ToolbarToggleButton/ToolbarToggleButton.js
var ToolbarToggleButton = React265.forwardRef((props, ref) => {
  const state = useToolbarToggleButton_unstable(props, ref);
  useToolbarToggleButtonStyles_unstable(state);
  useCustomStyleHook("useToolbarToggleButtonStyles_unstable")(state);
  return renderButton_unstable(state);
});
ToolbarToggleButton.displayName = "ToolbarToggleButton";

// node_modules/@fluentui/react-toolbar/lib/components/ToolbarRadioButton/ToolbarRadioButton.js
var React267 = __toESM(require_react());

// node_modules/@fluentui/react-toolbar/lib/components/ToolbarRadioButton/useToolbarRadioButton.js
var React266 = __toESM(require_react());
var useToolbarRadioButton_unstable = (props, ref) => {
  const handleRadio = useToolbarContext_unstable((ctx) => ctx.handleRadio);
  const checked = useToolbarContext_unstable((ctx) => {
    var _ctx_checkedValues_props_name;
    return !!((_ctx_checkedValues_props_name = ctx.checkedValues[props.name]) === null || _ctx_checkedValues_props_name === void 0 ? void 0 : _ctx_checkedValues_props_name.includes(props.value));
  });
  const size = useToolbarContext_unstable((ctx) => ctx.size);
  const { onClick: onClickOriginal } = props;
  const toggleButtonState = useToggleButton_unstable({
    size,
    checked,
    role: "radio",
    "aria-checked": checked,
    ...props
  }, ref);
  const state = {
    ...toggleButtonState,
    name: props.name,
    value: props.value
  };
  const handleOnClick = useEventCallback((e) => {
    handleRadio === null || handleRadio === void 0 ? void 0 : handleRadio(e, state.name, state.value, state.checked);
    onClickOriginal === null || onClickOriginal === void 0 ? void 0 : onClickOriginal(e);
  });
  state.root["aria-pressed"] = void 0;
  state.root.onClick = handleOnClick;
  return state;
};

// node_modules/@fluentui/react-toolbar/lib/components/ToolbarRadioButton/useToolbarRadioButtonStyles.styles.js
var useBaseStyles5 = __styles2({
  selected: {
    sj55zd: "f16muhyy"
  }
}, {
  d: [".f16muhyy{color:var(--colorBrandForeground1);}"]
});
var useToolbarRadioButtonStyles_unstable = (state) => {
  "use no memo";
  useToggleButtonStyles_unstable(state);
  const toggleButtonStyles = useBaseStyles5();
  state.root.className = mergeClasses(state.root.className, state.checked && toggleButtonStyles.selected);
  return state;
};

// node_modules/@fluentui/react-toolbar/lib/components/ToolbarRadioButton/ToolbarRadioButton.js
var ToolbarRadioButton = React267.forwardRef((props, ref) => {
  const state = useToolbarRadioButton_unstable(props, ref);
  useToolbarRadioButtonStyles_unstable(state);
  useCustomStyleHook("useToolbarRadioButtonStyles_unstable")(state);
  return renderButton_unstable(state);
});
ToolbarRadioButton.displayName = "ToolbarRadioButton";

// node_modules/@fluentui/react-toolbar/lib/components/ToolbarGroup/ToolbarGroup.js
var React269 = __toESM(require_react());

// node_modules/@fluentui/react-toolbar/lib/components/ToolbarGroup/useToolbarGroup.js
var React268 = __toESM(require_react());
var useToolbarGroup_unstable = (props, ref) => {
  return {
    components: {
      root: "div"
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      ref,
      role: "presentation",
      ...props
    }), {
      elementType: "div"
    })
  };
};

// node_modules/@fluentui/react-toolbar/lib/components/ToolbarGroup/useToolbarGroupStyles.styles.js
var toolbarGroupClassNames = {
  root: "fui-ToolbarGroup"
};
var useToolbarGroupStyles_unstable = (state) => {
  "use no memo";
  state.root.className = mergeClasses(toolbarGroupClassNames.root, state.root.className);
  return state;
};

// node_modules/@fluentui/react-toolbar/lib/components/ToolbarGroup/renderToolbarGroup.js
var renderToolbarGroup_unstable = (state) => {
  assertSlots(state);
  return jsx(state.root, {
    children: state.root.children
  });
};

// node_modules/@fluentui/react-toolbar/lib/components/ToolbarGroup/ToolbarGroup.js
var ToolbarGroup = React269.forwardRef((props, ref) => {
  const state = useToolbarGroup_unstable(props, ref);
  useToolbarGroupStyles_unstable(state);
  useCustomStyleHook("useToolbarGroupStyles_unstable")(state);
  return renderToolbarGroup_unstable(state);
});
ToolbarGroup.displayName = "ToolbarGroup";

// node_modules/@fluentui/react-toolbar/lib/components/ToolbarRadioGroup/ToolbarRadioGroup.js
var React270 = __toESM(require_react());
var ToolbarRadioGroup = React270.forwardRef((props, ref) => {
  const state = useToolbarGroup_unstable({
    role: "radiogroup",
    ...props
  }, ref);
  useToolbarGroupStyles_unstable(state);
  useCustomStyleHook("useToolbarGroupStyles_unstable")(state);
  return renderToolbarGroup_unstable(state);
});
ToolbarRadioGroup.displayName = "ToolbarRadioGroup";

// node_modules/@fluentui/react-table/lib/hooks/types.js
var React271 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/hooks/useTableFeatures.js
var React281 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/hooks/useTableSelection.js
var React272 = __toESM(require_react());
var noop3 = () => void 0;
var defaultTableSelectionState = {
  allRowsSelected: false,
  clearRows: noop3,
  deselectRow: noop3,
  isRowSelected: () => false,
  selectRow: noop3,
  selectedRows: /* @__PURE__ */ new Set(),
  someRowsSelected: false,
  toggleAllRows: noop3,
  toggleRow: noop3,
  selectionMode: "multiselect"
};
function useTableSelection(options) {
  "use no memo";
  return (tableState) => useTableSelectionState(tableState, options);
}
function useTableSelectionState(tableState, options) {
  const { items, getRowId } = tableState;
  const { selectionMode, defaultSelectedItems, selectedItems, onSelectionChange } = options;
  const [selected, selectionMethods] = useSelection({
    selectionMode,
    defaultSelectedItems,
    selectedItems,
    onSelectionChange
  });
  const selectableRowIds = React272.useMemo(() => {
    const rowIds = /* @__PURE__ */ new Set();
    for (let i = 0; i < items.length; i++) {
      var _getRowId;
      rowIds.add((_getRowId = getRowId === null || getRowId === void 0 ? void 0 : getRowId(items[i])) !== null && _getRowId !== void 0 ? _getRowId : i);
    }
    return rowIds;
  }, [
    items,
    getRowId
  ]);
  const allRowsSelected = React272.useMemo(() => {
    if (selectionMode === "single") {
      const selectedRow = Array.from(selected)[0];
      return selectableRowIds.has(selectedRow);
    }
    if (selected.size < selectableRowIds.size) {
      return false;
    }
    if (selectableRowIds.size === 0) {
      return false;
    }
    let res = true;
    selectableRowIds.forEach((selectableRowId) => {
      if (!selected.has(selectableRowId)) {
        res = false;
      }
    });
    return res;
  }, [
    selectableRowIds,
    selected,
    selectionMode
  ]);
  const someRowsSelected = React272.useMemo(() => {
    if (selected.size <= 0) {
      return false;
    }
    let res = false;
    selectableRowIds.forEach((selectableRowId) => {
      if (selected.has(selectableRowId)) {
        res = true;
      }
    });
    return res;
  }, [
    selectableRowIds,
    selected
  ]);
  const toggleAllRows = useEventCallback((e) => {
    selectionMethods.toggleAllItems(e, items.map((item, i) => {
      var _getRowId;
      return (_getRowId = getRowId === null || getRowId === void 0 ? void 0 : getRowId(item)) !== null && _getRowId !== void 0 ? _getRowId : i;
    }));
  });
  const toggleRow = useEventCallback((e, rowId) => selectionMethods.toggleItem(e, rowId));
  const deselectRow = useEventCallback((e, rowId) => selectionMethods.deselectItem(e, rowId));
  const selectRow = useEventCallback((e, rowId) => selectionMethods.selectItem(e, rowId));
  const isRowSelected = (rowId) => selectionMethods.isSelected(rowId);
  const clearRows = useEventCallback((e) => selectionMethods.clearItems(e));
  return {
    ...tableState,
    selection: {
      selectionMode,
      someRowsSelected,
      allRowsSelected,
      selectedRows: selected,
      toggleRow,
      toggleAllRows,
      clearRows,
      deselectRow,
      selectRow,
      isRowSelected
    }
  };
}

// node_modules/@fluentui/react-table/lib/hooks/useTableSort.js
var React273 = __toESM(require_react());
var noop4 = () => void 0;
var defaultTableSortState = {
  getSortDirection: () => "ascending",
  setColumnSort: noop4,
  sort: (rows) => [
    ...rows
  ],
  sortColumn: void 0,
  sortDirection: "ascending",
  toggleColumnSort: noop4
};
function useTableSort(options) {
  "use no memo";
  return (tableState) => useTableSortState(tableState, options);
}
function useTableSortState(tableState, options) {
  const { columns } = tableState;
  const { sortState, defaultSortState, onSortChange: onSortChangeProp = noop4 } = options;
  const [sorted, setSorted] = useControllableState({
    initialState: {
      sortDirection: "ascending",
      sortColumn: void 0
    },
    defaultState: defaultSortState,
    state: sortState
  });
  const { sortColumn, sortDirection } = sorted;
  const onSortChange = useEventCallback(onSortChangeProp);
  const toggleColumnSort = React273.useCallback((e, columnId) => {
    setSorted((s) => {
      const newState = {
        ...s,
        sortColumn: columnId
      };
      if (s.sortColumn === columnId) {
        newState.sortDirection = s.sortDirection === "ascending" ? "descending" : "ascending";
      } else {
        newState.sortDirection = "ascending";
      }
      onSortChange === null || onSortChange === void 0 ? void 0 : onSortChange(e, newState);
      return newState;
    });
  }, [
    onSortChange,
    setSorted
  ]);
  const setColumnSort = (e, nextSortColumn, nextSortDirection) => {
    const newState = {
      sortColumn: nextSortColumn,
      sortDirection: nextSortDirection
    };
    onSortChange === null || onSortChange === void 0 ? void 0 : onSortChange(e, newState);
    setSorted(newState);
  };
  const sort = React273.useCallback((rows) => {
    return rows.slice().sort((a, b) => {
      const sortColumnDef = columns.find((column) => column.columnId === sortColumn);
      if (!(sortColumnDef === null || sortColumnDef === void 0 ? void 0 : sortColumnDef.compare)) {
        return 0;
      }
      const mod = sortDirection === "ascending" ? 1 : -1;
      return sortColumnDef.compare(a.item, b.item) * mod;
    });
  }, [
    columns,
    sortColumn,
    sortDirection
  ]);
  const getSortDirection = (columnId) => {
    return sortColumn === columnId ? sortDirection : void 0;
  };
  return {
    ...tableState,
    sort: {
      sort,
      sortColumn,
      sortDirection,
      setColumnSort,
      toggleColumnSort,
      getSortDirection
    }
  };
}

// node_modules/@fluentui/react-table/lib/hooks/useTableColumnSizing.js
var React280 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/components/TableResizeHandle/TableResizeHandle.js
var React275 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/components/TableResizeHandle/useTableResizeHandle.js
var React274 = __toESM(require_react());
var useTableResizeHandle_unstable = (props, ref) => {
  const onClick = useEventCallback((event) => {
    var _props_onClick;
    (_props_onClick = props.onClick) === null || _props_onClick === void 0 ? void 0 : _props_onClick.call(props, event);
    event.stopPropagation();
  });
  return {
    components: {
      root: "div"
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      // FIXME:
      // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`
      // but since it would be a breaking change to fix it, we are casting ref to it's proper type
      ref,
      ...props,
      onClick
    }), {
      elementType: "div"
    })
  };
};

// node_modules/@fluentui/react-table/lib/components/TableResizeHandle/renderTableResizeHandle.js
var renderTableResizeHandle_unstable = (state) => {
  assertSlots(state);
  return jsx(state.root, {});
};

// node_modules/@fluentui/react-table/lib/components/TableResizeHandle/useTableResizeHandleStyles.styles.js
var tableResizeHandleClassNames = {
  root: "fui-TableResizeHandle"
};
var useStyles34 = __styles2({
  root: {
    qhf8xq: "f1euv43f",
    j35jbq: ["f1e31b4d", "f1vgc2s3"],
    Bhzewxz: "f15twtuk",
    B5kzvoi: "f1yab3r1",
    a9b677: "fjw5fx7",
    jrapky: 0,
    Frg6f3: 0,
    t21cq0: 0,
    B6of3ja: 0,
    B74szlk: "fg06o1j",
    Bceei9c: "fc3en1c",
    abs64n: "fk73vx1",
    Bmy1vo4: "f13u1uyl",
    B3o57yi: "fezquic",
    Bj3rh1h: "f19g0ac",
    B3cna0y: "f1tkae59",
    Brovlpu: "ftqa4ok",
    B7zu5sd: "f15pjodv",
    Bsft5z2: "f1rcdj94",
    ap17g6: "f2gz7yw",
    a2br6o: "ff2ryt5",
    E3zdtr: "f1mdlcz9",
    Eqx8gd: ["f10awi5f", "f1nzedbg"],
    bn5sak: "frwkxtg",
    By385i5: "fo72kxq",
    Bjyk6c5: "fdlpgxj"
  }
}, {
  d: [".f1euv43f{position:absolute;}", ".f1e31b4d{right:0;}", ".f1vgc2s3{left:0;}", ".f15twtuk{top:0;}", ".f1yab3r1{bottom:0;}", ".fjw5fx7{width:16px;}", [".fg06o1j{margin:0 -8px;}", {
    p: -1
  }], ".fc3en1c{cursor:col-resize;}", ".fk73vx1{opacity:0;}", ".f13u1uyl{transition-property:opacity;}", ".fezquic{transition-duration:.2s;}", ".f19g0ac{z-index:1;}", '.f1rcdj94::after{content:" ";}', ".f2gz7yw::after{display:block;}", ".ff2ryt5::after{width:1px;}", ".f1mdlcz9::after{position:absolute;}", ".f10awi5f::after{left:50%;}", ".f1nzedbg::after{right:50%;}", ".frwkxtg::after{top:0;}", ".fo72kxq::after{bottom:0;}", ".fdlpgxj::after{background-color:var(--colorNeutralStroke1);}"],
  f: [".f1tkae59:focus{opacity:1;}", ".ftqa4ok:focus{outline-style:none;}"],
  h: [".f15pjodv:hover{opacity:1;}"]
});
var useTableResizeHandleStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles34();
  state.root.className = mergeClasses(tableResizeHandleClassNames.root, styles.root, state.root.className);
  return state;
};

// node_modules/@fluentui/react-table/lib/components/TableResizeHandle/TableResizeHandle.js
var TableResizeHandle = React275.forwardRef((props, ref) => {
  const state = useTableResizeHandle_unstable(props, ref);
  useTableResizeHandleStyles_unstable(state);
  useCustomStyleHook("useTableResizeHandleStyles_unstable")(state);
  return renderTableResizeHandle_unstable(state);
});
TableResizeHandle.displayName = "TableResizeHandle";

// node_modules/@fluentui/react-table/lib/hooks/useMeasureElement.js
var React276 = __toESM(require_react());
function useMeasureElement() {
  const [width, setWidth] = React276.useState(0);
  const container = React276.useRef(void 0);
  const resizeObserverRef = React276.useRef(null);
  const { targetDocument } = useFluent();
  const handleResize = React276.useCallback(() => {
    var _container_current;
    const containerWidth = (_container_current = container.current) === null || _container_current === void 0 ? void 0 : _container_current.getBoundingClientRect().width;
    setWidth(containerWidth || 0);
  }, []);
  const measureElementRef = React276.useCallback((el) => {
    if (!targetDocument) {
      return;
    }
    if (!el && resizeObserverRef.current && container.current) {
      resizeObserverRef.current.unobserve(container.current);
    }
    container.current = void 0;
    if (el === null || el === void 0 ? void 0 : el.parentElement) {
      var _resizeObserverRef_current;
      container.current = el.parentElement;
      handleResize();
      (_resizeObserverRef_current = resizeObserverRef.current) === null || _resizeObserverRef_current === void 0 ? void 0 : _resizeObserverRef_current.observe(container.current);
    }
  }, [
    targetDocument,
    handleResize
  ]);
  React276.useEffect(() => {
    resizeObserverRef.current = createResizeObserverFromDocument(targetDocument, handleResize);
    if (!container.current || !resizeObserverRef.current) {
      return;
    }
    resizeObserverRef.current.observe(container.current);
    return () => {
      var _resizeObserverRef_current;
      (_resizeObserverRef_current = resizeObserverRef.current) === null || _resizeObserverRef_current === void 0 ? void 0 : _resizeObserverRef_current.disconnect();
    };
  }, [
    handleResize,
    targetDocument
  ]);
  return {
    width,
    measureElementRef
  };
}
function createResizeObserverFromDocument(targetDocument, callback) {
  var _targetDocument_defaultView;
  if (!(targetDocument === null || targetDocument === void 0 ? void 0 : (_targetDocument_defaultView = targetDocument.defaultView) === null || _targetDocument_defaultView === void 0 ? void 0 : _targetDocument_defaultView.ResizeObserver)) {
    return null;
  }
  return new targetDocument.defaultView.ResizeObserver(callback);
}

// node_modules/@fluentui/react-table/lib/hooks/useTableColumnResizeMouseHandler.js
var React277 = __toESM(require_react());
function useTableColumnResizeMouseHandler(columnResizeState) {
  const mouseX = React277.useRef(0);
  const currentWidth = React277.useRef(0);
  const colId = React277.useRef(void 0);
  const [dragging, setDragging] = React277.useState(false);
  const { targetDocument } = useFluent();
  const { getColumnWidth: getColumnWidth2, setColumnWidth } = columnResizeState;
  const recalculatePosition = React277.useCallback((e) => {
    const { clientX } = getEventClientCoords(e);
    const dx = clientX - mouseX.current;
    currentWidth.current += dx;
    colId.current && setColumnWidth(e, {
      columnId: colId.current,
      width: currentWidth.current
    });
    mouseX.current = clientX;
  }, [
    setColumnWidth
  ]);
  const [requestRecalcFrame] = useAnimationFrame();
  const onDrag = React277.useCallback((e) => {
    requestRecalcFrame(() => recalculatePosition(e));
  }, [
    requestRecalcFrame,
    recalculatePosition
  ]);
  const onDragEnd = React277.useCallback((event) => {
    if (isMouseEvent(event)) {
      targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.removeEventListener("mouseup", onDragEnd);
      targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.removeEventListener("mousemove", onDrag);
    }
    if (isTouchEvent(event)) {
      targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.removeEventListener("touchend", onDragEnd);
      targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.removeEventListener("touchmove", onDrag);
    }
    setDragging(false);
  }, [
    onDrag,
    targetDocument
  ]);
  const getOnMouseDown = React277.useCallback((columnId) => (event) => {
    currentWidth.current = getColumnWidth2(columnId);
    mouseX.current = getEventClientCoords(event).clientX;
    colId.current = columnId;
    if (isMouseEvent(event)) {
      if (event.target !== event.currentTarget || event.button !== 0) {
        return;
      }
      targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.addEventListener("mouseup", onDragEnd);
      targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.addEventListener("mousemove", onDrag);
      setDragging(true);
    }
    if (isTouchEvent(event)) {
      targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.addEventListener("touchend", onDragEnd);
      targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.addEventListener("touchmove", onDrag);
      setDragging(true);
    }
  }, [
    getColumnWidth2,
    onDrag,
    onDragEnd,
    targetDocument
  ]);
  return {
    getOnMouseDown,
    dragging
  };
}

// node_modules/@fluentui/react-table/lib/hooks/useTableColumnResizeState.js
var React278 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/utils/columnResizeUtils.js
var DEFAULT_WIDTH = 150;
var DEFAULT_MIN_WIDTH = 100;
function columnDefinitionsToState(columns, state = [], columnSizingOptions = {}) {
  let updated = false;
  const stateMap = new Map(state.map((s) => [
    s.columnId,
    s
  ]));
  const updatedState = columns.map((column) => {
    const existingColumnState = stateMap.get(column.columnId);
    if (existingColumnState) {
      var _columnSizingOptions_column_columnId;
      const { idealWidth: idealWidth2 = existingColumnState.idealWidth, minWidth: minWidth2 = existingColumnState.minWidth, padding: padding2 = existingColumnState.padding } = (_columnSizingOptions_column_columnId = columnSizingOptions[column.columnId]) !== null && _columnSizingOptions_column_columnId !== void 0 ? _columnSizingOptions_column_columnId : {};
      if (idealWidth2 !== existingColumnState.idealWidth || minWidth2 !== existingColumnState.minWidth || padding2 !== existingColumnState.padding) {
        updated = true;
        return {
          ...existingColumnState,
          idealWidth: idealWidth2,
          width: idealWidth2,
          minWidth: minWidth2,
          padding: padding2
        };
      }
      return existingColumnState;
    }
    var _columnSizingOptions_column_columnId1;
    const { defaultWidth, idealWidth = DEFAULT_WIDTH, minWidth = DEFAULT_MIN_WIDTH, padding } = (_columnSizingOptions_column_columnId1 = columnSizingOptions[column.columnId]) !== null && _columnSizingOptions_column_columnId1 !== void 0 ? _columnSizingOptions_column_columnId1 : {};
    updated = true;
    return {
      columnId: column.columnId,
      width: Math.max(defaultWidth !== null && defaultWidth !== void 0 ? defaultWidth : idealWidth, minWidth),
      minWidth,
      idealWidth: Math.max(defaultWidth !== null && defaultWidth !== void 0 ? defaultWidth : idealWidth, minWidth),
      padding: padding !== null && padding !== void 0 ? padding : 16
    };
  });
  if (updatedState.length !== state.length || updated) {
    const column = updatedState.find((col) => col.width > col.idealWidth);
    if (column) {
      column.width = column.idealWidth;
    }
    updated = true;
  }
  return updated ? updatedState : state;
}
function getColumnById(state, columnId) {
  return state.find((c) => c.columnId === columnId);
}
function getColumnByIndex(state, index) {
  return state[index];
}
function getTotalWidth(state) {
  return state.reduce((sum, column) => sum + column.width + column.padding, 0);
}
function getColumnWidth(state, columnId) {
  const column = getColumnById(state, columnId);
  var _column_width;
  return (_column_width = column === null || column === void 0 ? void 0 : column.width) !== null && _column_width !== void 0 ? _column_width : 0;
}
function setColumnProperty(localState, columnId, property, value) {
  const currentColumn = getColumnById(localState, columnId);
  if (!currentColumn || (currentColumn === null || currentColumn === void 0 ? void 0 : currentColumn[property]) === value) {
    return localState;
  }
  const updatedColumn = {
    ...currentColumn,
    [property]: value
  };
  const newState = localState.reduce((acc, current) => {
    if (current.columnId === updatedColumn.columnId) {
      return [
        ...acc,
        updatedColumn
      ];
    }
    return [
      ...acc,
      current
    ];
  }, []);
  return newState;
}
function adjustColumnWidthsToFitContainer(state, containerWidth) {
  let newState = state;
  const totalWidth = getTotalWidth(newState);
  if (totalWidth < containerWidth) {
    let difference = containerWidth - totalWidth;
    let i = 0;
    while (i < newState.length && difference > 0) {
      const currentCol = getColumnByIndex(newState, i);
      const colAdjustment = Math.min(currentCol.idealWidth - currentCol.width, difference);
      newState = setColumnProperty(newState, currentCol.columnId, "width", currentCol.width + colAdjustment);
      difference -= colAdjustment;
      if (i === newState.length - 1 && difference !== 0) {
        const lastCol = getColumnByIndex(newState, i);
        newState = setColumnProperty(newState, lastCol.columnId, "width", lastCol.width + difference);
      }
      i++;
    }
  } else if (totalWidth >= containerWidth) {
    let difference = totalWidth - containerWidth;
    let j = newState.length - 1;
    while (j >= 0 && difference > 0) {
      const currentCol = getColumnByIndex(newState, j);
      if (currentCol.width > currentCol.minWidth) {
        const colAdjustment = Math.min(currentCol.width - currentCol.minWidth, difference);
        difference -= colAdjustment;
        newState = setColumnProperty(newState, currentCol.columnId, "width", currentCol.width - colAdjustment);
      }
      j--;
    }
  }
  return newState;
}

// node_modules/@fluentui/react-table/lib/hooks/useTableColumnResizeState.js
var createReducer = (autoFitColumns) => (state, action) => {
  switch (action.type) {
    case "CONTAINER_WIDTH_UPDATED":
      return {
        ...state,
        containerWidth: action.containerWidth,
        columnWidthState: autoFitColumns ? adjustColumnWidthsToFitContainer(state.columnWidthState, action.containerWidth) : state.columnWidthState
      };
    case "COLUMNS_UPDATED":
      const newS = columnDefinitionsToState(action.columns, state.columnWidthState, state.columnSizingOptions);
      return {
        ...state,
        columns: action.columns,
        columnWidthState: autoFitColumns ? adjustColumnWidthsToFitContainer(newS, state.containerWidth) : newS
      };
    case "COLUMN_SIZING_OPTIONS_UPDATED":
      const newState = columnDefinitionsToState(state.columns, state.columnWidthState, action.columnSizingOptions);
      return {
        ...state,
        columnSizingOptions: action.columnSizingOptions,
        columnWidthState: autoFitColumns ? adjustColumnWidthsToFitContainer(newState, state.containerWidth) : newState
      };
    case "SET_COLUMN_WIDTH":
      const { columnId, width } = action;
      const { containerWidth } = state;
      const column = getColumnById(state.columnWidthState, columnId);
      let newColumnWidthState = [
        ...state.columnWidthState
      ];
      if (!column) {
        return state;
      }
      newColumnWidthState = setColumnProperty(newColumnWidthState, columnId, "width", width);
      newColumnWidthState = setColumnProperty(newColumnWidthState, columnId, "idealWidth", width);
      if (autoFitColumns) {
        newColumnWidthState = adjustColumnWidthsToFitContainer(newColumnWidthState, containerWidth);
      }
      return {
        ...state,
        columnWidthState: newColumnWidthState
      };
  }
};
function useTableColumnResizeState(columns, containerWidth, params = {}) {
  const { onColumnResize, columnSizingOptions, autoFitColumns = true } = params;
  const reducer = React278.useMemo(() => createReducer(autoFitColumns), [
    autoFitColumns
  ]);
  const [state, dispatch] = React278.useReducer(reducer, {
    columns,
    containerWidth: 0,
    columnWidthState: columnDefinitionsToState(columns, void 0, columnSizingOptions),
    columnSizingOptions
  });
  useIsomorphicLayoutEffect(() => {
    dispatch({
      type: "CONTAINER_WIDTH_UPDATED",
      containerWidth
    });
  }, [
    containerWidth
  ]);
  useIsomorphicLayoutEffect(() => {
    dispatch({
      type: "COLUMNS_UPDATED",
      columns
    });
  }, [
    columns
  ]);
  useIsomorphicLayoutEffect(() => {
    dispatch({
      type: "COLUMN_SIZING_OPTIONS_UPDATED",
      columnSizingOptions
    });
  }, [
    columnSizingOptions
  ]);
  const setColumnWidth = useEventCallback((event, data) => {
    let { width } = data;
    const { columnId } = data;
    const col = getColumnById(state.columnWidthState, columnId);
    if (!col) {
      return;
    }
    width = Math.max(col.minWidth || 0, width);
    if (onColumnResize) {
      onColumnResize(event, {
        columnId,
        width
      });
    }
    dispatch({
      type: "SET_COLUMN_WIDTH",
      columnId,
      width
    });
  });
  return {
    getColumnById: React278.useCallback((colId) => getColumnById(state.columnWidthState, colId), [
      state.columnWidthState
    ]),
    getColumns: React278.useCallback(() => state.columnWidthState, [
      state.columnWidthState
    ]),
    getColumnWidth: React278.useCallback((colId) => getColumnWidth(state.columnWidthState, colId), [
      state.columnWidthState
    ]),
    setColumnWidth
  };
}

// node_modules/@fluentui/react-table/lib/hooks/useKeyboardResizing.js
var React279 = __toESM(require_react());
var STEP = 20;
var PRECISION_MODIFIER = Shift;
var PRECISION_FACTOR = 1 / 4;
function useKeyboardResizing(columnResizeState) {
  const [columnId, setColumnId] = React279.useState();
  const onChangeRef = React279.useRef();
  const { findPrevFocusable } = useFocusFinders();
  const columnResizeStateRef = React279.useRef(columnResizeState);
  React279.useEffect(() => {
    columnResizeStateRef.current = columnResizeState;
  }, [
    columnResizeState
  ]);
  const [resizeHandleRefs] = React279.useState(() => /* @__PURE__ */ new Map());
  const keyboardHandler = useEventCallback((event) => {
    if (!columnId) {
      return;
    }
    const width = columnResizeStateRef.current.getColumnWidth(columnId);
    const precisionModifier = event.getModifierState(PRECISION_MODIFIER);
    const stopEvent = () => {
      event.preventDefault();
      event.stopPropagation();
    };
    switch (event.key) {
      case ArrowLeft:
        stopEvent();
        columnResizeStateRef.current.setColumnWidth(event.nativeEvent, {
          columnId,
          width: width - (precisionModifier ? STEP * PRECISION_FACTOR : STEP)
        });
        return;
      case ArrowRight:
        stopEvent();
        columnResizeStateRef.current.setColumnWidth(event.nativeEvent, {
          columnId,
          width: width + (precisionModifier ? STEP * PRECISION_FACTOR : STEP)
        });
        return;
      case Space:
      case Enter:
      case Escape:
        var _resizeHandleRefs_get_current, _resizeHandleRefs_get;
        stopEvent();
        (_resizeHandleRefs_get = resizeHandleRefs.get(columnId)) === null || _resizeHandleRefs_get === void 0 ? void 0 : (_resizeHandleRefs_get_current = _resizeHandleRefs_get.current) === null || _resizeHandleRefs_get_current === void 0 ? void 0 : _resizeHandleRefs_get_current.blur();
        break;
    }
  });
  const enableInteractiveMode = React279.useCallback((colId) => {
    var _onChangeRef_current, _resizeHandleRefs_get;
    setColumnId(colId);
    (_onChangeRef_current = onChangeRef.current) === null || _onChangeRef_current === void 0 ? void 0 : _onChangeRef_current.call(onChangeRef, colId, true);
    const handle = (_resizeHandleRefs_get = resizeHandleRefs.get(colId)) === null || _resizeHandleRefs_get === void 0 ? void 0 : _resizeHandleRefs_get.current;
    if (handle) {
      handle.setAttribute("tabindex", "-1");
      handle.tabIndex = -1;
      handle.focus();
    }
  }, [
    resizeHandleRefs
  ]);
  const disableInteractiveMode = React279.useCallback(() => {
    var _onChangeRef_current, _resizeHandleRefs_get;
    if (!columnId) {
      return;
    }
    (_onChangeRef_current = onChangeRef.current) === null || _onChangeRef_current === void 0 ? void 0 : _onChangeRef_current.call(onChangeRef, columnId, false);
    const el = (_resizeHandleRefs_get = resizeHandleRefs.get(columnId)) === null || _resizeHandleRefs_get === void 0 ? void 0 : _resizeHandleRefs_get.current;
    if (el) {
      var _findPrevFocusable;
      (_findPrevFocusable = findPrevFocusable(el)) === null || _findPrevFocusable === void 0 ? void 0 : _findPrevFocusable.focus();
      el.removeAttribute("tabindex");
    }
    setColumnId(void 0);
  }, [
    columnId,
    findPrevFocusable,
    resizeHandleRefs
  ]);
  const toggleInteractiveMode = (colId, onChange) => {
    onChangeRef.current = onChange;
    if (!columnId) {
      enableInteractiveMode(colId);
    } else if (colId && columnId !== colId) {
      enableInteractiveMode(colId);
      setColumnId(colId);
    } else {
      disableInteractiveMode();
    }
  };
  const getKeyboardResizingRef = React279.useCallback((colId) => {
    const ref = resizeHandleRefs.get(colId) || React279.createRef();
    resizeHandleRefs.set(colId, ref);
    return ref;
  }, [
    resizeHandleRefs
  ]);
  const tabsterAttrs = useTabsterAttributes({
    focusable: {
      ignoreKeydown: {
        ArrowLeft: true,
        ArrowRight: true
      }
    }
  });
  return {
    toggleInteractiveMode,
    columnId,
    getKeyboardResizingProps: React279.useCallback((colId, currentWidth) => ({
      onKeyDown: keyboardHandler,
      onBlur: disableInteractiveMode,
      ref: getKeyboardResizingRef(colId),
      role: "separator",
      "aria-label": "Resize column",
      "aria-valuetext": `${currentWidth} pixels`,
      "aria-hidden": colId === columnId ? false : true,
      tabIndex: colId === columnId ? 0 : void 0,
      ...tabsterAttrs
    }), [
      columnId,
      disableInteractiveMode,
      getKeyboardResizingRef,
      keyboardHandler,
      tabsterAttrs
    ])
  };
}

// node_modules/@fluentui/react-table/lib/hooks/useTableColumnSizing.js
var defaultColumnSizingState = {
  getColumnWidths: () => [],
  getOnMouseDown: () => () => null,
  setColumnWidth: () => null,
  getTableProps: () => ({}),
  getTableHeaderCellProps: () => ({
    style: {},
    columnId: ""
  }),
  getTableCellProps: () => ({
    style: {},
    columnId: ""
  }),
  enableKeyboardMode: () => () => null
};
function useTableColumnSizing_unstable(params) {
  "use no memo";
  return (tableState) => (
    // eslint-disable-next-line react-hooks/rules-of-hooks
    useTableColumnSizingState(tableState, {
      autoFitColumns: true,
      ...params
    })
  );
}
function getColumnStyles(column, dragging) {
  const width = column.width;
  return {
    // native styles
    width,
    // non-native element styles (flex layout)
    minWidth: width,
    maxWidth: width,
    // Fixed the unwanted sort: https://github.com/microsoft/fluentui/issues/27803
    ...dragging ? {
      pointerEvents: "none"
    } : {}
  };
}
function useTableColumnSizingState(tableState, params = {}) {
  const { columns } = tableState;
  const { width, measureElementRef } = useMeasureElement();
  const columnResizeState = useTableColumnResizeState(columns, width + ((params === null || params === void 0 ? void 0 : params.containerWidthOffset) || 0), params);
  const mouseHandler = useTableColumnResizeMouseHandler(columnResizeState);
  const { toggleInteractiveMode, getKeyboardResizingProps } = useKeyboardResizing(columnResizeState);
  const { autoFitColumns } = params;
  const enableKeyboardMode = React280.useCallback((columnId, onChange) => (e) => {
    e.preventDefault();
    e.nativeEvent.stopPropagation();
    toggleInteractiveMode(columnId, onChange);
  }, [
    toggleInteractiveMode
  ]);
  const { getColumnById: getColumnById2, setColumnWidth, getColumns } = columnResizeState;
  const { getOnMouseDown, dragging } = mouseHandler;
  return {
    ...tableState,
    tableRef: measureElementRef,
    // eslint-disable-next-line @typescript-eslint/naming-convention
    columnSizing_unstable: {
      getOnMouseDown,
      setColumnWidth: (columnId, w) => setColumnWidth(void 0, {
        columnId,
        width: w
      }),
      getColumnWidths: getColumns,
      getTableProps: (props = {}) => {
        return {
          ...props,
          style: {
            minWidth: "fit-content",
            ...props.style || {}
          }
        };
      },
      getTableHeaderCellProps: React280.useCallback((columnId) => {
        var _columns_;
        const col = getColumnById2(columnId);
        const isLastColumn = ((_columns_ = columns[columns.length - 1]) === null || _columns_ === void 0 ? void 0 : _columns_.columnId) === columnId;
        const aside = isLastColumn && autoFitColumns ? null : React280.createElement(TableResizeHandle, {
          onMouseDown: getOnMouseDown(columnId),
          onTouchStart: getOnMouseDown(columnId),
          ...getKeyboardResizingProps(columnId, (col === null || col === void 0 ? void 0 : col.width) || 0)
        });
        return col ? {
          style: getColumnStyles(col, dragging),
          aside
        } : {};
      }, [
        getColumnById2,
        columns,
        dragging,
        getKeyboardResizingProps,
        getOnMouseDown,
        autoFitColumns
      ]),
      getTableCellProps: React280.useCallback((columnId) => {
        const col = getColumnById2(columnId);
        return col ? {
          style: getColumnStyles(col)
        } : {};
      }, [
        getColumnById2
      ]),
      enableKeyboardMode
    }
  };
}

// node_modules/@fluentui/react-table/lib/hooks/useTableFeatures.js
var defaultRowEnhancer = (row) => row;
var defaultTableState = {
  selection: defaultTableSelectionState,
  sort: defaultTableSortState,
  getRows: () => [],
  getRowId: () => "",
  items: [],
  columns: [],
  // eslint-disable-next-line @typescript-eslint/naming-convention
  columnSizing_unstable: defaultColumnSizingState,
  tableRef: React281.createRef()
};
function useTableFeatures(options, plugins = []) {
  const { items, getRowId, columns } = options;
  const getRows = React281.useCallback((rowEnhancer = defaultRowEnhancer) => {
    return items.map((item, i) => {
      var _getRowId;
      return rowEnhancer({
        item,
        rowId: (_getRowId = getRowId === null || getRowId === void 0 ? void 0 : getRowId(item)) !== null && _getRowId !== void 0 ? _getRowId : i
      });
    });
  }, [
    items,
    getRowId
  ]);
  const initialState = {
    getRowId,
    items,
    columns,
    getRows,
    selection: defaultTableSelectionState,
    sort: defaultTableSortState,
    // eslint-disable-next-line @typescript-eslint/naming-convention
    columnSizing_unstable: defaultColumnSizingState,
    tableRef: React281.createRef()
  };
  return plugins.reduce((state, plugin) => plugin(state), initialState);
}

// node_modules/@fluentui/react-table/lib/hooks/createColumn.js
var defaultCompare = () => 0;
var defaultRenderCell = () => {
  if (true) {
    console.warn("@fluentui/react-table: You are using the default column renderCell function that renders null");
  }
  return null;
};
var defaultRenderHeaderCell = () => {
  if (true) {
    console.warn("@fluentui/react-table: You are using the default column renderHeaderCell function that renders null");
  }
  return null;
};
function createTableColumn(options) {
  const { columnId, renderCell = defaultRenderCell, renderHeaderCell = defaultRenderHeaderCell, compare = defaultCompare } = options;
  return {
    columnId,
    renderCell,
    renderHeaderCell,
    compare
  };
}

// node_modules/@fluentui/react-table/lib/hooks/useTableCompositeNavigation.js
var React282 = __toESM(require_react());
function useTableCompositeNavigation() {
  const horizontalAttr = useArrowNavigationGroup({
    axis: "horizontal"
  });
  const gridAttr = useArrowNavigationGroup({
    axis: "grid"
  });
  const groupperAttr = useFocusableGroup({
    tabBehavior: "limited-trap-focus"
  });
  const { findFirstFocusable } = useFocusFinders();
  const { targetDocument } = useFluent();
  const rowAttr = useMergedTabsterAttributes_unstable(horizontalAttr, groupperAttr);
  const onKeyDown = React282.useCallback((e) => {
    if (!targetDocument) {
      return;
    }
    let activeElement = targetDocument.activeElement;
    if (!activeElement || !e.currentTarget.contains(activeElement)) {
      return;
    }
    const activeElementRole = activeElement.getAttribute("role");
    if (e.key === ArrowRight && activeElementRole === "row" && isHTMLElement(activeElement)) {
      var _findFirstFocusable;
      (_findFirstFocusable = findFirstFocusable(activeElement)) === null || _findFirstFocusable === void 0 ? void 0 : _findFirstFocusable.focus();
    }
    if (activeElementRole === "row") {
      return;
    }
    const isInCell = (() => {
      let cur = isHTMLElement(activeElement) ? activeElement : null;
      while (cur) {
        const curRole = cur.getAttribute("role");
        if (curRole === "cell" || curRole === "gridcell") {
          return true;
        }
        cur = cur.parentElement;
      }
      return false;
    })();
    if ((e.key === ArrowDown || e.key === ArrowUp) && isInCell) {
      activeElement.dispatchEvent(new GroupperMoveFocusEvent({
        action: GroupperMoveFocusActions.Escape
      }));
      activeElement = targetDocument.activeElement;
      if (activeElement) {
        activeElement.dispatchEvent(new MoverMoveFocusEvent({
          key: MoverKeys[e.key]
        }));
      }
    }
  }, [
    targetDocument,
    findFirstFocusable
  ]);
  return {
    onTableKeyDown: onKeyDown,
    tableTabsterAttribute: gridAttr,
    tableRowTabsterAttribute: rowAttr
  };
}

// node_modules/@fluentui/react-table/lib/components/TableCell/TableCell.js
var React285 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/components/TableCell/useTableCell.js
var React284 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/contexts/tableContext.js
var React283 = __toESM(require_react());
var tableContext = React283.createContext(void 0);
var tableContextDefaultValue = {
  size: "medium",
  noNativeElements: false,
  sortable: false
};
var TableContextProvider = tableContext.Provider;
var useTableContext = () => {
  var _React_useContext;
  return (_React_useContext = React283.useContext(tableContext)) !== null && _React_useContext !== void 0 ? _React_useContext : tableContextDefaultValue;
};

// node_modules/@fluentui/react-table/lib/components/TableCell/useTableCell.js
var useTableCell_unstable = (props, ref) => {
  const { noNativeElements, size } = useTableContext();
  var _props_as;
  const rootComponent = ((_props_as = props.as) !== null && _props_as !== void 0 ? _props_as : noNativeElements) ? "div" : "td";
  return {
    components: {
      root: rootComponent
    },
    root: slot_exports.always(getIntrinsicElementProps(rootComponent, {
      // FIXME:
      // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`
      // but since it would be a breaking change to fix it, we are casting ref to it's proper type
      ref,
      role: rootComponent === "div" ? "cell" : void 0,
      ...props
    }), {
      elementType: rootComponent
    }),
    noNativeElements,
    size
  };
};

// node_modules/@fluentui/react-table/lib/components/TableCell/renderTableCell.js
var renderTableCell_unstable = (state) => {
  assertSlots(state);
  return jsx(state.root, {});
};

// node_modules/@fluentui/react-table/lib/components/TableCell/useTableCellStyles.styles.js
var tableCellClassName = "fui-TableCell";
var tableCellClassNames = {
  root: tableCellClassName
};
var useTableLayoutStyles = __styles2({
  root: {
    mc9l5x: "f15pt5es",
    ha4doy: "fmrv4ls"
  },
  medium: {
    Bqenvij: "f1ft4266"
  },
  small: {
    Bqenvij: "fbsu25e"
  },
  "extra-small": {
    Bqenvij: "frvgh55"
  }
}, {
  d: [".f15pt5es{display:table-cell;}", ".fmrv4ls{vertical-align:middle;}", ".f1ft4266{height:44px;}", ".fbsu25e{height:34px;}", ".frvgh55{height:24px;}"]
});
var useFlexLayoutStyles = __styles2({
  root: {
    mc9l5x: "f22iagw",
    Bf4jedk: "f10tiqix",
    Bt984gj: "f122n59",
    xawz: 0,
    Bh6795r: 0,
    Bnnss6s: 0,
    fkmc3a: "f1izfyrr"
  },
  medium: {
    sshi5w: "f5pgtk9"
  },
  small: {
    sshi5w: "fcep9tg"
  },
  "extra-small": {
    sshi5w: "f1pha7fy"
  }
}, {
  d: [".f22iagw{display:flex;}", ".f10tiqix{min-width:0px;}", ".f122n59{align-items:center;}", [".f1izfyrr{flex:1 1 0px;}", {
    p: -1
  }], ".f5pgtk9{min-height:44px;}", ".fcep9tg{min-height:34px;}", ".f1pha7fy{min-height:24px;}"]
});
var useStyles35 = __styles2({
  root: {
    qhf8xq: "f10pi13n",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f3gpkru",
    Bfpq7zp: 0,
    g9k6zt: 0,
    Bn4voq9: 0,
    giviqs: "f1dxfoyt",
    Bw81rd7: 0,
    kdpuga: 0,
    dm238s: 0,
    B6xbmo0: 0,
    B3whbx2: "f2krc9w"
  }
}, {
  d: [".f10pi13n{position:relative;}", [".f3gpkru{padding:0px var(--spacingHorizontalS);}", {
    p: -1
  }], [".f1dxfoyt[data-fui-focus-visible]{outline:2px solid var(--colorStrokeFocus2);}", {
    p: -1
  }], [".f2krc9w[data-fui-focus-visible]{border-radius:var(--borderRadiusMedium);}", {
    p: -1
  }]]
});
var useTableCellStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles35();
  const layoutStyles = {
    table: useTableLayoutStyles(),
    flex: useFlexLayoutStyles()
  };
  state.root.className = mergeClasses(tableCellClassNames.root, styles.root, state.noNativeElements ? layoutStyles.flex.root : layoutStyles.table.root, state.noNativeElements ? layoutStyles.flex[state.size] : layoutStyles.table[state.size], state.root.className);
  return state;
};

// node_modules/@fluentui/react-table/lib/components/TableCell/TableCell.js
var TableCell = React285.forwardRef((props, ref) => {
  const state = useTableCell_unstable(props, ref);
  useTableCellStyles_unstable(state);
  useCustomStyleHook("useTableCellStyles_unstable")(state);
  return renderTableCell_unstable(state);
});
TableCell.displayName = "TableCell";

// node_modules/@fluentui/react-table/lib/components/TableRow/TableRow.js
var React288 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/components/TableRow/useTableRow.js
var React287 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/contexts/tableHeaderContext.js
var React286 = __toESM(require_react());
var tableHeaderContext = React286.createContext(void 0);
var tableHeaderContextDefaultValue = "";
var TableHeaderContextProvider = tableHeaderContext.Provider;
var useIsInTableHeader = () => React286.useContext(tableHeaderContext) === tableHeaderContextDefaultValue;

// node_modules/@fluentui/react-table/lib/components/TableRow/useTableRow.js
var useTableRow_unstable = (props, ref) => {
  const { noNativeElements, size } = useTableContext();
  var _props_as;
  const rootComponent = ((_props_as = props.as) !== null && _props_as !== void 0 ? _props_as : noNativeElements) ? "div" : "tr";
  const focusVisibleRef = useFocusVisible();
  const focusWithinRef = useFocusWithin();
  const isHeaderRow = useIsInTableHeader();
  var _props_appearance;
  return {
    components: {
      root: rootComponent
    },
    root: slot_exports.always(getIntrinsicElementProps(rootComponent, {
      // FIXME:
      // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`
      // but since it would be a breaking change to fix it, we are casting ref to it's proper type
      ref: useMergedRefs(ref, focusVisibleRef, focusWithinRef),
      role: rootComponent === "div" ? "row" : void 0,
      ...props
    }), {
      elementType: rootComponent
    }),
    size,
    noNativeElements,
    appearance: (_props_appearance = props.appearance) !== null && _props_appearance !== void 0 ? _props_appearance : "none",
    isHeaderRow
  };
};

// node_modules/@fluentui/react-table/lib/components/TableRow/renderTableRow.js
var renderTableRow_unstable = (state) => {
  assertSlots(state);
  return jsx(state.root, {});
};

// node_modules/@fluentui/react-table/lib/components/TableCellActions/useTableCellActionsStyles.styles.js
var tableCellActionsClassNames = {
  root: "fui-TableCellActions"
};
var useStyles36 = __styles2({
  root: {
    De3pzq: "f1u2r49w",
    qhf8xq: "f1euv43f",
    j35jbq: ["f10k790i", "f1xynx9j"],
    Bhzewxz: "f1i1t8d1",
    Bz10aip: "f188r07x",
    abs64n: "fk73vx1",
    Frg6f3: ["fcgxt0o", "f1ujusj6"]
  },
  visible: {
    abs64n: "f5p0z4x"
  }
}, {
  d: [".f1u2r49w{background-color:inherit;}", ".f1euv43f{position:absolute;}", ".f10k790i{right:0px;}", ".f1xynx9j{left:0px;}", ".f1i1t8d1{top:50%;}", ".f188r07x{transform:translateY(-50%);}", ".fk73vx1{opacity:0;}", ".fcgxt0o{margin-left:auto;}", ".f1ujusj6{margin-right:auto;}", ".f5p0z4x{opacity:1;}"]
});
var useTableCellActionsStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles36();
  state.root.className = mergeClasses(tableCellActionsClassNames.root, styles.root, state.visible && styles.visible, state.root.className);
  return state;
};

// node_modules/@fluentui/react-table/lib/components/TableSelectionCell/useTableSelectionCellStyles.styles.js
var CELL_WIDTH = 44;
var tableSelectionCellClassNames = {
  root: "fui-TableSelectionCell",
  checkboxIndicator: "fui-TableSelectionCell__checkboxIndicator",
  radioIndicator: "fui-TableSelectionCell__radioIndicator"
};
var useTableLayoutStyles2 = __styles2({
  root: {
    mc9l5x: "f15pt5es",
    a9b677: "fksc0bp"
  }
}, {
  d: [".f15pt5es{display:table-cell;}", ".fksc0bp{width:44px;}"]
});
var useFlexLayoutStyles2 = __styles2({
  root: {
    mc9l5x: "f22iagw",
    xawz: 0,
    Bh6795r: 0,
    Bnnss6s: 0,
    fkmc3a: "f1izfyrr",
    Bf4jedk: "fvrlu0f",
    B2u0y6b: "f1c71y05",
    Brf1p80: "f4d9j23"
  }
}, {
  d: [".f22iagw{display:flex;}", [".f1izfyrr{flex:1 1 0px;}", {
    p: -1
  }], ".fvrlu0f{min-width:44px;}", ".f1c71y05{max-width:44px;}", ".f4d9j23{justify-content:center;}"]
});
var useStyles37 = __styles2({
  root: {
    fsow6f: "f17mccla",
    Huce71: "fz5stix",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f1mk8lai",
    Bfpq7zp: 0,
    g9k6zt: 0,
    Bn4voq9: 0,
    giviqs: "f1dxfoyt",
    Bw81rd7: 0,
    kdpuga: 0,
    dm238s: 0,
    B6xbmo0: 0,
    B3whbx2: "f2krc9w"
  },
  radioIndicator: {
    mc9l5x: "f22iagw",
    Bh6795r: "fqerorx",
    Bt984gj: "f122n59",
    Brf1p80: "f4d9j23"
  },
  subtle: {
    abs64n: "fk73vx1",
    B8a84jv: "f1y7ij6c"
  },
  hidden: {
    abs64n: "fk73vx1"
  }
}, {
  d: [".f17mccla{text-align:center;}", ".fz5stix{white-space:nowrap;}", [".f1mk8lai{padding:0;}", {
    p: -1
  }], [".f1dxfoyt[data-fui-focus-visible]{outline:2px solid var(--colorStrokeFocus2);}", {
    p: -1
  }], [".f2krc9w[data-fui-focus-visible]{border-radius:var(--borderRadiusMedium);}", {
    p: -1
  }], ".f22iagw{display:flex;}", ".fqerorx{flex-grow:1;}", ".f122n59{align-items:center;}", ".f4d9j23{justify-content:center;}", ".fk73vx1{opacity:0;}", ".f1y7ij6c[data-fui-focus-within]:focus-within{opacity:1;}"]
});
var useTableSelectionCellStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles37();
  const layoutStyles = {
    table: useTableLayoutStyles2(),
    flex: useFlexLayoutStyles2()
  };
  state.root.className = mergeClasses(tableSelectionCellClassNames.root, styles.root, state.noNativeElements ? layoutStyles.flex.root : layoutStyles.table.root, state.subtle && state.checked === false && styles.subtle, state.hidden && styles.hidden, state.root.className);
  if (state.checkboxIndicator) {
    state.checkboxIndicator.className = mergeClasses(tableSelectionCellClassNames.checkboxIndicator, state.checkboxIndicator.className);
  }
  if (state.radioIndicator) {
    state.radioIndicator.className = mergeClasses(tableSelectionCellClassNames.radioIndicator, styles.radioIndicator, state.radioIndicator.className);
  }
  return state;
};

// node_modules/@fluentui/react-table/lib/components/TableRow/useTableRowStyles.styles.js
var tableRowClassName = "fui-TableRow";
var tableRowClassNames = {
  root: tableRowClassName
};
var useTableLayoutStyles3 = __styles2({
  root: {
    mc9l5x: "f1u0rzck"
  }
}, {
  d: [".f1u0rzck{display:table-row;}"]
});
var useFlexLayoutStyles3 = __styles2({
  root: {
    mc9l5x: "f22iagw",
    Bt984gj: "f122n59"
  }
}, {
  d: [".f22iagw{display:flex;}", ".f122n59{align-items:center;}"]
});
var useStyles38 = __styles2({
  root: {
    sj55zd: "f19n0e5",
    B7ck84d: "f1ewtqcl",
    Bconypa: "f1jazu75",
    B6guboy: "f1xeqee6",
    Bfpq7zp: 0,
    g9k6zt: 0,
    Bn4voq9: 0,
    giviqs: "f1dxfoyt",
    Bw81rd7: 0,
    kdpuga: 0,
    dm238s: 0,
    B6xbmo0: 0,
    B3whbx2: "f2krc9w"
  },
  rootInteractive: {
    ecr2s2: "f1wfn5kd",
    lj723h: "f1g4hkjv",
    B43xm9u: "f15ngxrw",
    i921ia: "fjbbrdp",
    Jwef8y: "f1t94bn6",
    Bi91k9c: "feu1g3u",
    Bpt6rm4: "f1uorfem",
    ff6mpl: "fw60kww",
    ze5xyy: "f4xjyn1",
    pgvf35: "ff1wgvm",
    Bh7lczh: ["fiob0tu", "f1x4h75k"],
    dpv3f4: "f1j6scgf",
    Bpnjhaq: ["f1x4h75k", "fiob0tu"]
  },
  medium: {
    B9xav0g: 0,
    oivjwe: 0,
    Bn0qgzm: 0,
    Bgfg5da: "f1facbz3"
  },
  small: {
    B9xav0g: 0,
    oivjwe: 0,
    Bn0qgzm: 0,
    Bgfg5da: "f1facbz3"
  },
  "extra-small": {
    Be2twd7: "fy9rknc"
  },
  brand: {
    De3pzq: "f16xkysk",
    g2u3we: "f1bh3yvw",
    h3c5rm: ["fmi79ni", "f11fozsx"],
    B9xav0g: "fnzw4c6",
    zhjwy3: ["f11fozsx", "fmi79ni"],
    ecr2s2: "f7tkmfy",
    lj723h: "f1r2dosr",
    uu68id: 0,
    Bxeuatn: 0,
    felo30: 0,
    Bc736ss: 0,
    Bhz882k: 0,
    n51gp8: 0,
    Eshu5l: 0,
    Bk6ri7n: 0,
    v49c4f: 0,
    Bn1d65q: 0,
    c4eypz: 0,
    v3aym: 0,
    hft9gk: 0,
    Bjwas2f: 0,
    Bk5ld8o: 0,
    gwxt9v: 0,
    B6k8go: "f95l9gw",
    h6lo6r: 0,
    Beo2b4z: 0,
    w1pwid: 0,
    Btyw6ap: 0,
    Hkxhyr: "fw8kmcu",
    Brwvgy3: "fd94n53",
    yadkgm: "f1e0wld5"
  },
  neutral: {
    uu68id: 0,
    Bxeuatn: 0,
    felo30: 0,
    Bc736ss: 0,
    Bhz882k: 0,
    n51gp8: 0,
    Eshu5l: 0,
    Bk6ri7n: 0,
    v49c4f: 0,
    Bn1d65q: 0,
    c4eypz: 0,
    v3aym: 0,
    hft9gk: 0,
    Bjwas2f: 0,
    Bk5ld8o: 0,
    gwxt9v: 0,
    B6k8go: "f95l9gw",
    h6lo6r: 0,
    Beo2b4z: 0,
    w1pwid: 0,
    Btyw6ap: 0,
    Hkxhyr: "fw8kmcu",
    Brwvgy3: "fd94n53",
    yadkgm: "f1e0wld5",
    De3pzq: "fq5gl1p",
    sj55zd: "f1cgsbmv",
    Jwef8y: "f1uqaxdt",
    ecr2s2: "fa9o754",
    g2u3we: "frmsihh",
    h3c5rm: ["frttxa5", "f11o2r7f"],
    B9xav0g: "fem5et0",
    zhjwy3: ["f11o2r7f", "frttxa5"]
  },
  none: {}
}, {
  d: [".f19n0e5{color:var(--colorNeutralForeground1);}", ".f1ewtqcl{box-sizing:border-box;}", ".f1jazu75[data-fui-focus-within]:focus-within .fui-TableSelectionCell{opacity:1;}", ".f1xeqee6[data-fui-focus-within]:focus-within .fui-TableCellActions{opacity:1;}", [".f1dxfoyt[data-fui-focus-visible]{outline:2px solid var(--colorStrokeFocus2);}", {
    p: -1
  }], [".f2krc9w[data-fui-focus-visible]{border-radius:var(--borderRadiusMedium);}", {
    p: -1
  }], [".f1facbz3{border-bottom:var(--strokeWidthThin) solid var(--colorNeutralStroke2);}", {
    p: -1
  }], [".f1facbz3{border-bottom:var(--strokeWidthThin) solid var(--colorNeutralStroke2);}", {
    p: -1
  }], ".fy9rknc{font-size:var(--fontSizeBase200);}", ".f16xkysk{background-color:var(--colorBrandBackground2);}", ".f1bh3yvw{border-top-color:var(--colorTransparentStrokeInteractive);}", ".fmi79ni{border-right-color:var(--colorTransparentStrokeInteractive);}", ".f11fozsx{border-left-color:var(--colorTransparentStrokeInteractive);}", ".fnzw4c6{border-bottom-color:var(--colorTransparentStrokeInteractive);}", ".fq5gl1p{background-color:var(--colorSubtleBackgroundSelected);}", ".f1cgsbmv{color:var(--colorNeutralForeground1Hover);}", ".frmsihh{border-top-color:var(--colorNeutralStrokeOnBrand);}", ".frttxa5{border-right-color:var(--colorNeutralStrokeOnBrand);}", ".f11o2r7f{border-left-color:var(--colorNeutralStrokeOnBrand);}", ".fem5et0{border-bottom-color:var(--colorNeutralStrokeOnBrand);}"],
  a: [".f1wfn5kd:active{background-color:var(--colorSubtleBackgroundPressed);}", ".f1g4hkjv:active{color:var(--colorNeutralForeground1Pressed);}", ".f15ngxrw:active .fui-TableCellActions{opacity:1;}", ".fjbbrdp:active .fui-TableSelectionCell{opacity:1;}", ".f7tkmfy:active{background-color:var(--colorBrandBackground2);}", ".f1r2dosr:active{color:var(--colorNeutralForeground1);}", ".fa9o754:active{background-color:var(--colorSubtleBackgroundSelected);}"],
  h: [".f1t94bn6:hover{background-color:var(--colorSubtleBackgroundHover);}", ".feu1g3u:hover{color:var(--colorNeutralForeground1Hover);}", ".f1uorfem:hover .fui-TableCellActions{opacity:1;}", ".fw60kww:hover .fui-TableSelectionCell{opacity:1;}", ".f1uqaxdt:hover{background-color:var(--colorSubtleBackgroundSelected);}"],
  m: [["@media (forced-colors: active){.f4xjyn1:hover{color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.ff1wgvm:hover{border-top-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1x4h75k:hover{border-left-color:Highlight;}.fiob0tu:hover{border-right-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1j6scgf:hover{border-bottom-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f95l9gw{border:2px solid transparent;}}", {
    p: -2,
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fw8kmcu{border-radius:var(--borderRadiusMedium);}}", {
    p: -1,
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fd94n53{box-sizing:border-box;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1e0wld5:focus-visible{outline-offset:-4px;}}", {
    m: "(forced-colors: active)"
  }]]
});
var useTableRowStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles38();
  const layoutStyles = {
    table: useTableLayoutStyles3(),
    flex: useFlexLayoutStyles3()
  };
  state.root.className = mergeClasses(tableRowClassNames.root, styles.root, !state.isHeaderRow && styles.rootInteractive, styles[state.size], state.noNativeElements ? layoutStyles.flex.root : layoutStyles.table.root, styles[state.appearance], state.root.className);
  return state;
};

// node_modules/@fluentui/react-table/lib/components/TableRow/TableRow.js
var TableRow = React288.forwardRef((props, ref) => {
  const state = useTableRow_unstable(props, ref);
  useTableRowStyles_unstable(state);
  useCustomStyleHook("useTableRowStyles_unstable")(state);
  return renderTableRow_unstable(state);
});
TableRow.displayName = "TableRow";

// node_modules/@fluentui/react-table/lib/components/TableBody/TableBody.js
var React290 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/components/TableBody/useTableBody.js
var React289 = __toESM(require_react());
var useTableBody_unstable = (props, ref) => {
  const { noNativeElements } = useTableContext();
  var _props_as;
  const rootComponent = ((_props_as = props.as) !== null && _props_as !== void 0 ? _props_as : noNativeElements) ? "div" : "tbody";
  return {
    components: {
      root: rootComponent
    },
    root: slot_exports.always(getIntrinsicElementProps(rootComponent, {
      // FIXME:
      // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`
      // but since it would be a breaking change to fix it, we are casting ref to it's proper type
      ref,
      role: rootComponent === "div" ? "rowgroup" : void 0,
      ...props
    }), {
      elementType: rootComponent
    }),
    noNativeElements
  };
};

// node_modules/@fluentui/react-table/lib/components/TableBody/renderTableBody.js
var renderTableBody_unstable = (state) => {
  assertSlots(state);
  return jsx(state.root, {});
};

// node_modules/@fluentui/react-table/lib/components/TableBody/useTableBodyStyles.styles.js
var useTableLayoutStyles4 = __styles2({
  root: {
    mc9l5x: "f1tp1avn"
  }
}, {
  d: [".f1tp1avn{display:table-row-group;}"]
});
var useFlexLayoutStyles4 = __styles2({
  root: {
    mc9l5x: "ftgm304"
  }
}, {
  d: [".ftgm304{display:block;}"]
});
var tableBodyClassName = "fui-TableBody";
var tableBodyClassNames = {
  root: "fui-TableBody"
};
var useTableBodyStyles_unstable = (state) => {
  "use no memo";
  const layoutStyles = {
    table: useTableLayoutStyles4(),
    flex: useFlexLayoutStyles4()
  };
  state.root.className = mergeClasses(tableBodyClassName, state.noNativeElements ? layoutStyles.flex.root : layoutStyles.table.root, state.root.className);
  return state;
};

// node_modules/@fluentui/react-table/lib/components/TableBody/TableBody.js
var TableBody = React290.forwardRef((props, ref) => {
  const state = useTableBody_unstable(props, ref);
  useTableBodyStyles_unstable(state);
  useCustomStyleHook("useTableBodyStyles_unstable")(state);
  return renderTableBody_unstable(state);
});
TableBody.displayName = "TableBody";

// node_modules/@fluentui/react-table/lib/components/Table/Table.js
var React293 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/components/Table/useTable.js
var React291 = __toESM(require_react());
var useTable_unstable = (props, ref) => {
  var _props_as;
  const rootComponent = ((_props_as = props.as) !== null && _props_as !== void 0 ? _props_as : props.noNativeElements) ? "div" : "table";
  var _props_size, _props_noNativeElements, _props_sortable;
  return {
    components: {
      root: rootComponent
    },
    root: slot_exports.always(getIntrinsicElementProps(rootComponent, {
      // FIXME:
      // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`
      // but since it would be a breaking change to fix it, we are casting ref to it's proper type
      ref,
      role: rootComponent === "div" ? "table" : void 0,
      ...props
    }), {
      elementType: rootComponent
    }),
    size: (_props_size = props.size) !== null && _props_size !== void 0 ? _props_size : "medium",
    noNativeElements: (_props_noNativeElements = props.noNativeElements) !== null && _props_noNativeElements !== void 0 ? _props_noNativeElements : false,
    sortable: (_props_sortable = props.sortable) !== null && _props_sortable !== void 0 ? _props_sortable : false
  };
};

// node_modules/@fluentui/react-table/lib/components/Table/renderTable.js
var renderTable_unstable = (state, contextValues) => {
  assertSlots(state);
  return jsx(TableContextProvider, {
    value: contextValues.table,
    children: jsx(state.root, {})
  });
};

// node_modules/@fluentui/react-table/lib/components/Table/useTableStyles.styles.js
var tableClassName = "fui-Table";
var tableClassNames = {
  root: "fui-Table"
};
var useTableLayoutStyles5 = __styles2({
  root: {
    mc9l5x: "f1w4nmp0",
    ha4doy: "fmrv4ls",
    a9b677: "fly5x3f",
    B73mfa3: "f14m3nip"
  }
}, {
  d: [".f1w4nmp0{display:table;}", ".fmrv4ls{vertical-align:middle;}", ".fly5x3f{width:100%;}", ".f14m3nip{table-layout:fixed;}"]
});
var useFlexLayoutStyles5 = __styles2({
  root: {
    mc9l5x: "ftgm304"
  }
}, {
  d: [".ftgm304{display:block;}"]
});
var useStyles39 = __styles2({
  root: {
    po53p8: "fgkb47j",
    De3pzq: "fhovq9v"
  }
}, {
  d: [".fgkb47j{border-collapse:collapse;}", ".fhovq9v{background-color:var(--colorSubtleBackground);}"]
});
var useTableStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles39();
  const layoutStyles = {
    table: useTableLayoutStyles5(),
    flex: useFlexLayoutStyles5()
  };
  state.root.className = mergeClasses(tableClassName, styles.root, state.noNativeElements ? layoutStyles.flex.root : layoutStyles.table.root, state.root.className);
  return state;
};

// node_modules/@fluentui/react-table/lib/components/Table/useTableContextValues.js
var React292 = __toESM(require_react());
function useTableContextValues_unstable(state) {
  const { size, noNativeElements, sortable } = state;
  const tableContext2 = React292.useMemo(() => ({
    noNativeElements,
    size,
    sortable
  }), [
    noNativeElements,
    size,
    sortable
  ]);
  return {
    table: tableContext2
  };
}

// node_modules/@fluentui/react-table/lib/components/Table/Table.js
var Table = React293.forwardRef((props, ref) => {
  const state = useTable_unstable(props, ref);
  useTableStyles_unstable(state);
  useCustomStyleHook("useTableStyles_unstable")(state);
  return renderTable_unstable(state, useTableContextValues_unstable(state));
});
Table.displayName = "Table";

// node_modules/@fluentui/react-table/lib/components/TableHeader/TableHeader.js
var React295 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/components/TableHeader/useTableHeader.js
var React294 = __toESM(require_react());
var useTableHeader_unstable = (props, ref) => {
  const { noNativeElements } = useTableContext();
  var _props_as;
  const rootComponent = ((_props_as = props.as) !== null && _props_as !== void 0 ? _props_as : noNativeElements) ? "div" : "thead";
  return {
    components: {
      root: rootComponent
    },
    root: slot_exports.always(getIntrinsicElementProps(rootComponent, {
      // FIXME:
      // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`
      // but since it would be a breaking change to fix it, we are casting ref to it's proper type
      ref,
      role: rootComponent === "div" ? "rowgroup" : void 0,
      ...props
    }), {
      elementType: rootComponent
    }),
    noNativeElements
  };
};

// node_modules/@fluentui/react-table/lib/components/TableHeader/renderTableHeader.js
var renderTableHeader_unstable = (state) => {
  assertSlots(state);
  return jsx(TableHeaderContextProvider, {
    value: "",
    children: jsx(state.root, {})
  });
};

// node_modules/@fluentui/react-table/lib/components/TableHeader/useTableHeaderStyles.styles.js
var tableHeaderClassName = "fui-TableHeader";
var tableHeaderClassNames = {
  root: "fui-TableHeader"
};
var useFlexLayoutStyles6 = __styles2({
  root: {
    mc9l5x: "ftgm304"
  }
}, {
  d: [".ftgm304{display:block;}"]
});
var useTableLayoutStyles6 = __styles2({
  root: {
    mc9l5x: "f1tp1avn"
  }
}, {
  d: [".f1tp1avn{display:table-row-group;}"]
});
var useTableHeaderStyles_unstable = (state) => {
  "use no memo";
  const layoutStyles = {
    table: useTableLayoutStyles6(),
    flex: useFlexLayoutStyles6()
  };
  state.root.className = mergeClasses(tableHeaderClassName, state.noNativeElements ? layoutStyles.flex.root : layoutStyles.table.root, state.root.className);
  return state;
};

// node_modules/@fluentui/react-table/lib/components/TableHeader/TableHeader.js
var TableHeader = React295.forwardRef((props, ref) => {
  const state = useTableHeader_unstable(props, ref);
  useTableHeaderStyles_unstable(state);
  useCustomStyleHook("useTableHeaderStyles_unstable")(state);
  return renderTableHeader_unstable(state);
});
TableHeader.displayName = "TableHeader";

// node_modules/@fluentui/react-table/lib/components/TableHeaderCell/TableHeaderCell.js
var React297 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/components/TableHeaderCell/useTableHeaderCell.js
var React296 = __toESM(require_react());
var sortIcons = {
  ascending: React296.createElement(ArrowUpRegular, {
    fontSize: 12
  }),
  descending: React296.createElement(ArrowDownRegular, {
    fontSize: 12
  })
};
var useTableHeaderCell_unstable = (props, ref) => {
  const { noNativeElements, sortable: contextSortable } = useTableContext();
  const { sortable = contextSortable } = props;
  var _props_as;
  const rootComponent = ((_props_as = props.as) !== null && _props_as !== void 0 ? _props_as : noNativeElements) ? "div" : "th";
  const buttonSlot = slot_exports.always(props.button, {
    elementType: "div",
    defaultProps: {
      as: "div",
      ...!sortable && {
        role: "presentation",
        tabIndex: void 0
      }
    }
  });
  var _props_sortDirection;
  return {
    components: {
      root: rootComponent,
      button: "div",
      sortIcon: "span",
      aside: "span"
    },
    root: slot_exports.always(getIntrinsicElementProps(rootComponent, {
      // FIXME:
      // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`
      // but since it would be a breaking change to fix it, we are casting ref to it's proper type
      ref: useMergedRefs(ref, useFocusWithin()),
      role: rootComponent === "div" ? "columnheader" : void 0,
      "aria-sort": sortable ? (_props_sortDirection = props.sortDirection) !== null && _props_sortDirection !== void 0 ? _props_sortDirection : "none" : void 0,
      ...props
    }), {
      elementType: rootComponent
    }),
    aside: slot_exports.optional(props.aside, {
      elementType: "span"
    }),
    sortIcon: slot_exports.optional(props.sortIcon, {
      renderByDefault: !!props.sortDirection,
      defaultProps: {
        children: props.sortDirection ? sortIcons[props.sortDirection] : void 0
      },
      elementType: "span"
    }),
    button: useARIAButtonProps(buttonSlot.as, buttonSlot),
    sortable,
    noNativeElements
  };
};

// node_modules/@fluentui/react-table/lib/components/TableHeaderCell/renderTableHeaderCell.js
var renderTableHeaderCell_unstable = (state) => {
  assertSlots(state);
  return jsxs(state.root, {
    children: [
      jsxs(state.button, {
        children: [
          state.root.children,
          state.sortIcon && jsx(state.sortIcon, {})
        ]
      }),
      state.aside && jsx(state.aside, {})
    ]
  });
};

// node_modules/@fluentui/react-table/lib/components/TableHeaderCell/useTableHeaderCellStyles.styles.js
var tableHeaderCellClassName = "fui-TableHeaderCell";
var tableHeaderCellClassNames = {
  root: "fui-TableHeaderCell",
  button: "fui-TableHeaderCell__button",
  sortIcon: "fui-TableHeaderCell__sortIcon",
  aside: "fui-TableHeaderCell__aside"
};
var useTableLayoutStyles7 = __styles2({
  root: {
    mc9l5x: "f15pt5es",
    ha4doy: "fmrv4ls"
  }
}, {
  d: [".f15pt5es{display:table-cell;}", ".fmrv4ls{vertical-align:middle;}"]
});
var useFlexLayoutStyles7 = __styles2({
  root: {
    mc9l5x: "f22iagw",
    xawz: 0,
    Bh6795r: 0,
    Bnnss6s: 0,
    fkmc3a: "f1izfyrr",
    Bf4jedk: "f10tiqix"
  }
}, {
  d: [".f22iagw{display:flex;}", [".f1izfyrr{flex:1 1 0px;}", {
    p: -1
  }], ".f10tiqix{min-width:0px;}"]
});
var useStyles40 = __styles2({
  root: {
    Bhrd7zp: "figsok6",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f3gpkru",
    robkg1: 0,
    Bmvh20x: 0,
    B3nxjsc: 0,
    Bmkhcsx: "f14ym4q2",
    B8osjzx: 0,
    pehzd3: 0,
    Blsv9te: 0,
    u7xebq: 0,
    Bsvwmf7: "f1euou18",
    qhf8xq: "f10pi13n"
  },
  rootInteractive: {
    Bi91k9c: "feu1g3u",
    Jwef8y: "f1t94bn6",
    lj723h: "f1g4hkjv",
    ecr2s2: "f1wfn5kd"
  },
  resetButton: {
    B3rzk8w: "fq6nmtn",
    B7ck84d: "f1e4lqlz",
    De3pzq: "f1u2r49w",
    sj55zd: "f1ym3bx4",
    Bahqtrf: "f1mo0ibp",
    Be2twd7: "fjoy568",
    Bg96gwp: "fytdu2e",
    B68tc82: 0,
    Bmxbyg5: 0,
    Bpg54ce: "f1gl81tg",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f1mk8lai",
    Bgfg5da: 0,
    B9xav0g: 0,
    oivjwe: 0,
    Bn0qgzm: 0,
    B4g9neb: 0,
    zhjwy3: 0,
    wvpqe5: 0,
    ibv6hh: 0,
    u1mtju: 0,
    h3c5rm: 0,
    vrafjx: 0,
    Bekrc4i: 0,
    i8vvqc: 0,
    g2u3we: 0,
    icvyot: 0,
    B4j52fo: 0,
    irswps: "f3bhgqh",
    fsow6f: "fgusgyc"
  },
  button: {
    qhf8xq: "f10pi13n",
    a9b677: "fly5x3f",
    mc9l5x: "f22iagw",
    Bh6795r: 0,
    Bqenvij: "f1l02sjl",
    Bt984gj: "f122n59",
    i8kkvl: 0,
    Belr9w4: 0,
    rmohyg: "fkln5zr",
    sshi5w: "f1nxs5xn",
    xawz: 0,
    Bnnss6s: 0,
    fkmc3a: "f1izfyrr",
    oeaueh: "f1s6fcnf"
  },
  sortable: {
    Bceei9c: "f1k6fduh"
  },
  sortIcon: {
    mc9l5x: "f22iagw",
    Bt984gj: "f122n59",
    z8tnut: "fclwglc"
  },
  resizeHandle: {}
}, {
  d: [".figsok6{font-weight:var(--fontWeightRegular);}", [".f3gpkru{padding:0px var(--spacingHorizontalS);}", {
    p: -1
  }], [".f14ym4q2[data-fui-focus-within]:focus-within{outline:2px solid var(--colorStrokeFocus2);}", {
    p: -1
  }], [".f1euou18[data-fui-focus-within]:focus-within{border-radius:var(--borderRadiusMedium);}", {
    p: -1
  }], ".f10pi13n{position:relative;}", ".fq6nmtn{resize:horizontal;}", ".f1e4lqlz{box-sizing:content-box;}", ".f1u2r49w{background-color:inherit;}", ".f1ym3bx4{color:inherit;}", ".f1mo0ibp{font-family:inherit;}", ".fjoy568{font-size:inherit;}", ".fytdu2e{line-height:normal;}", [".f1gl81tg{overflow:visible;}", {
    p: -1
  }], [".f1mk8lai{padding:0;}", {
    p: -1
  }], [".f3bhgqh{border:none;}", {
    p: -2
  }], ".fgusgyc{text-align:unset;}", ".fly5x3f{width:100%;}", ".f22iagw{display:flex;}", ".fqerorx{flex-grow:1;}", ".f1l02sjl{height:100%;}", ".f122n59{align-items:center;}", [".fkln5zr{gap:var(--spacingHorizontalXS);}", {
    p: -1
  }], ".f1nxs5xn{min-height:32px;}", [".f1izfyrr{flex:1 1 0px;}", {
    p: -1
  }], ".f1s6fcnf{outline-style:none;}", ".f1k6fduh{cursor:pointer;}", ".fclwglc{padding-top:var(--spacingVerticalXXS);}"],
  h: [".feu1g3u:hover{color:var(--colorNeutralForeground1Hover);}", ".f1t94bn6:hover{background-color:var(--colorSubtleBackgroundHover);}"],
  a: [".f1g4hkjv:active{color:var(--colorNeutralForeground1Pressed);}", ".f1wfn5kd:active{background-color:var(--colorSubtleBackgroundPressed);}"]
});
var useTableHeaderCellStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles40();
  const layoutStyles = {
    table: useTableLayoutStyles7(),
    flex: useFlexLayoutStyles7()
  };
  state.root.className = mergeClasses(tableHeaderCellClassNames.root, styles.root, state.sortable && styles.rootInteractive, state.noNativeElements ? layoutStyles.flex.root : layoutStyles.table.root, state.root.className);
  state.button.className = mergeClasses(tableHeaderCellClassNames.button, styles.resetButton, styles.button, state.sortable && styles.sortable, state.button.className);
  if (state.sortIcon) {
    state.sortIcon.className = mergeClasses(tableHeaderCellClassNames.sortIcon, styles.sortIcon, state.sortIcon.className);
  }
  if (state.aside) {
    state.aside.className = mergeClasses(tableHeaderCellClassNames.aside, styles.resizeHandle, state.aside.className);
  }
  return state;
};

// node_modules/@fluentui/react-table/lib/components/TableHeaderCell/TableHeaderCell.js
var TableHeaderCell = React297.forwardRef((props, ref) => {
  const state = useTableHeaderCell_unstable(props, ref);
  useTableHeaderCellStyles_unstable(state);
  useCustomStyleHook("useTableHeaderCellStyles_unstable")(state);
  return renderTableHeaderCell_unstable(state);
});
TableHeaderCell.displayName = "TableHeaderCell";

// node_modules/@fluentui/react-table/lib/contexts/columnIdContext.js
var React298 = __toESM(require_react());
var columnIdContext = React298.createContext(void 0);
var columnIdContextDefaultValue = "";
var useColumnIdContext = () => {
  var _React_useContext;
  return (_React_useContext = React298.useContext(columnIdContext)) !== null && _React_useContext !== void 0 ? _React_useContext : columnIdContextDefaultValue;
};
var ColumnIdContextProvider = columnIdContext.Provider;

// node_modules/@fluentui/react-table/lib/contexts/rowIdContext.js
var React299 = __toESM(require_react());
var rowIdContext = React299.createContext(void 0);
var tableRowIdContextDefaultValue = "";
var useTableRowIdContext = () => {
  var _React_useContext;
  return (_React_useContext = React299.useContext(rowIdContext)) !== null && _React_useContext !== void 0 ? _React_useContext : tableRowIdContextDefaultValue;
};
var TableRowIdContextProvider = rowIdContext.Provider;

// node_modules/@fluentui/react-table/lib/components/TableSelectionCell/TableSelectionCell.js
var React301 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/components/TableSelectionCell/useTableSelectionCell.js
var React300 = __toESM(require_react());
var useTableSelectionCell_unstable = (props, ref) => {
  const tableCellState = useTableCell_unstable(props, ref);
  const { noNativeElements } = useTableContext();
  const {
    type = "checkbox",
    checked = false,
    subtle = false,
    // eslint-disable-next-line deprecation/deprecation
    hidden = false,
    invisible = false
  } = props;
  return {
    ...tableCellState,
    components: {
      ...tableCellState.components,
      checkboxIndicator: Checkbox,
      radioIndicator: Radio
    },
    checkboxIndicator: slot_exports.optional(props.checkboxIndicator, {
      renderByDefault: type === "checkbox",
      defaultProps: {
        checked: props.checked
      },
      elementType: Checkbox
    }),
    radioIndicator: slot_exports.optional(props.radioIndicator, {
      renderByDefault: type === "radio",
      defaultProps: {
        checked: !!checked,
        input: {
          name: useId("table-selection-radio")
        }
      },
      elementType: Radio
    }),
    type,
    checked,
    noNativeElements,
    subtle,
    hidden: invisible || hidden
  };
};

// node_modules/@fluentui/react-table/lib/components/TableSelectionCell/renderTableSelectionCell.js
var renderTableSelectionCell_unstable = (state) => {
  assertSlots(state);
  return jsxs(state.root, {
    children: [
      state.type === "checkbox" && state.checkboxIndicator && jsx(state.checkboxIndicator, {}),
      state.type === "radio" && state.radioIndicator && jsx(state.radioIndicator, {})
    ]
  });
};

// node_modules/@fluentui/react-table/lib/components/TableSelectionCell/TableSelectionCell.js
var TableSelectionCell = React301.forwardRef((props, ref) => {
  const state = useTableSelectionCell_unstable(props, ref);
  useTableSelectionCellStyles_unstable(state);
  useCustomStyleHook("useTableSelectionCellStyles_unstable")(state);
  return renderTableSelectionCell_unstable(state);
});
TableSelectionCell.displayName = "TableSelectionCell";

// node_modules/@fluentui/react-table/lib/components/TableCellActions/TableCellActions.js
var React303 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/components/TableCellActions/useTableCellActions.js
var React302 = __toESM(require_react());
var useTableCellActions_unstable = (props, ref) => {
  var _props_visible;
  return {
    components: {
      root: "div"
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      // FIXME:
      // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`
      // but since it would be a breaking change to fix it, we are casting ref to it's proper type
      ref,
      ...props
    }), {
      elementType: "div"
    }),
    visible: (_props_visible = props.visible) !== null && _props_visible !== void 0 ? _props_visible : false
  };
};

// node_modules/@fluentui/react-table/lib/components/TableCellActions/renderTableCellActions.js
var renderTableCellActions_unstable = (state) => {
  assertSlots(state);
  return jsx(state.root, {});
};

// node_modules/@fluentui/react-table/lib/components/TableCellActions/TableCellActions.js
var TableCellActions = React303.forwardRef((props, ref) => {
  const state = useTableCellActions_unstable(props, ref);
  useTableCellActionsStyles_unstable(state);
  useCustomStyleHook("useTableCellActionsStyles_unstable")(state);
  return renderTableCellActions_unstable(state);
});
TableCellActions.displayName = "TableCellActions";

// node_modules/@fluentui/react-table/lib/components/TableCellLayout/TableCellLayout.js
var React306 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/components/TableCellLayout/useTableCellLayout.js
var React304 = __toESM(require_react());
var tableAvatarSizeMap = {
  medium: 32,
  small: 24,
  "extra-small": 20
};
var useTableCellLayout_unstable = (props, ref) => {
  const { size } = useTableContext();
  return {
    components: {
      root: "div",
      main: "span",
      description: "span",
      content: "div",
      media: "span"
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      // FIXME:
      // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`
      // but since it would be a breaking change to fix it, we are casting ref to it's proper type
      ref,
      ...props
    }), {
      elementType: "div"
    }),
    appearance: props.appearance,
    truncate: props.truncate,
    main: slot_exports.optional(props.main, {
      renderByDefault: true,
      elementType: "span"
    }),
    media: slot_exports.optional(props.media, {
      elementType: "span"
    }),
    description: slot_exports.optional(props.description, {
      elementType: "span"
    }),
    content: slot_exports.optional(props.content, {
      renderByDefault: !!props.description || !!props.children,
      elementType: "div"
    }),
    avatarSize: tableAvatarSizeMap[size],
    size
  };
};

// node_modules/@fluentui/react-table/lib/components/TableCellLayout/renderTableCellLayout.js
var renderTableCellLayout_unstable = (state, contextValues) => {
  assertSlots(state);
  return jsxs(state.root, {
    children: [
      state.media && jsx(AvatarContextProvider, {
        value: contextValues.avatar,
        children: jsx(state.media, {})
      }),
      state.content && jsxs(state.content, {
        children: [
          state.main && jsx(state.main, {
            children: state.root.children
          }),
          state.description && jsx(state.description, {})
        ]
      })
    ]
  });
};

// node_modules/@fluentui/react-table/lib/components/TableCellLayout/useTableCellLayoutStyles.styles.js
var tableCellLayoutClassNames = {
  root: "fui-TableCellLayout",
  media: "fui-TableCellLayout__media",
  main: "fui-TableCellLayout__main",
  description: "fui-TableCellLayout__description",
  content: "fui-TableCellLayout__content"
};
var useStyles41 = __styles2({
  root: {
    mc9l5x: "f22iagw",
    Bt984gj: "f122n59",
    i8kkvl: 0,
    Belr9w4: 0,
    rmohyg: "faqewft",
    xawz: 0,
    Bh6795r: 0,
    Bnnss6s: 0,
    fkmc3a: "f1izfyrr"
  },
  rootTruncate: {
    B68tc82: "f1p9o1ba"
  },
  content: {
    mc9l5x: "f22iagw",
    Beiy3e4: "f1vx9l62"
  },
  contentTruncate: {
    B68tc82: "f1p9o1ba"
  },
  media: {
    mc9l5x: "f22iagw",
    Bt984gj: "f122n59"
  },
  mediaExtraSmall: {
    Be2twd7: "f4ybsrx"
  },
  mediaSmallAndMedium: {
    Be2twd7: "fe5j1ua"
  },
  mediaPrimary: {
    Be2twd7: "f1rt2boy"
  },
  mainPrimary: {
    Bhrd7zp: "fl43uef"
  },
  mainTruncate: {
    B68tc82: "f1p9o1ba",
    Huce71: "fz5stix",
    ygn44y: "f1cmbuwj"
  },
  description: {
    sj55zd: "fkfq4zb",
    Bahqtrf: "fk6fouc",
    Be2twd7: "fy9rknc",
    Bhrd7zp: "figsok6",
    Bg96gwp: "fwrc4pm"
  }
}, {
  d: [".f22iagw{display:flex;}", ".f122n59{align-items:center;}", [".faqewft{gap:var(--spacingHorizontalS);}", {
    p: -1
  }], [".f1izfyrr{flex:1 1 0px;}", {
    p: -1
  }], ".f1p9o1ba{overflow-x:hidden;}", ".f1vx9l62{flex-direction:column;}", ".f4ybsrx{font-size:16px;}", ".fe5j1ua{font-size:20px;}", ".f1rt2boy{font-size:24px;}", ".fl43uef{font-weight:var(--fontWeightSemibold);}", ".fz5stix{white-space:nowrap;}", ".f1cmbuwj{text-overflow:ellipsis;}", ".fkfq4zb{color:var(--colorNeutralForeground2);}", ".fk6fouc{font-family:var(--fontFamilyBase);}", ".fy9rknc{font-size:var(--fontSizeBase200);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".fwrc4pm{line-height:var(--lineHeightBase200);}"]
});
var useTableCellLayoutStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles41();
  const {
    truncate
  } = state;
  state.root.className = mergeClasses(tableCellLayoutClassNames.root, styles.root, truncate && styles.rootTruncate, state.root.className);
  const primary = state.appearance === "primary";
  if (state.media) {
    const mediaSizedStyles = {
      small: styles.mediaSmallAndMedium,
      medium: styles.mediaSmallAndMedium,
      "extra-small": styles.mediaExtraSmall
    };
    state.media.className = mergeClasses(tableCellLayoutClassNames.media, styles.media, mediaSizedStyles[state.size], primary && styles.mediaPrimary, state.media.className);
  }
  if (state.main) {
    state.main.className = mergeClasses(tableCellLayoutClassNames.main, truncate && styles.mainTruncate, primary && styles.mainPrimary, state.main.className);
  }
  if (state.description) {
    state.description.className = mergeClasses(tableCellLayoutClassNames.description, styles.description, state.description.className);
  }
  if (state.content) {
    state.content.className = mergeClasses(tableCellLayoutClassNames.content, styles.content, truncate && styles.contentTruncate, state.content.className);
  }
  return state;
};

// node_modules/@fluentui/react-table/lib/components/TableCellLayout/useTableCellLayoutContextValues.js
var React305 = __toESM(require_react());
function useTableCellLayoutContextValues_unstable(state) {
  const { avatarSize } = state;
  const avatar = React305.useMemo(() => ({
    size: avatarSize
  }), [
    avatarSize
  ]);
  return {
    avatar
  };
}

// node_modules/@fluentui/react-table/lib/components/TableCellLayout/TableCellLayout.js
var TableCellLayout = React306.forwardRef((props, ref) => {
  const state = useTableCellLayout_unstable(props, ref);
  useTableCellLayoutStyles_unstable(state);
  useCustomStyleHook("useTableCellLayoutStyles_unstable")(state);
  return renderTableCellLayout_unstable(state, useTableCellLayoutContextValues_unstable(state));
});
TableCellLayout.displayName = "TableCellLayout";

// node_modules/@fluentui/react-table/lib/components/DataGridCell/DataGridCell.js
var React311 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/components/DataGridCell/useDataGridCell.js
var React310 = __toESM(require_react());

// node_modules/@fluentui/react-table/node_modules/@fluentui/react-context-selector/lib/createContext.js
var React307 = __toESM(require_react());
var import_scheduler10 = __toESM(require_scheduler10());
var createProvider10 = (Original) => {
  const Provider2 = (props) => {
    const valueRef = React307.useRef(props.value);
    const versionRef = React307.useRef(0);
    const contextValue = React307.useRef();
    if (!contextValue.current) {
      contextValue.current = {
        value: valueRef,
        version: versionRef,
        listeners: []
      };
    }
    useIsomorphicLayoutEffect(() => {
      valueRef.current = props.value;
      versionRef.current += 1;
      (0, import_scheduler10.unstable_runWithPriority)(import_scheduler10.unstable_NormalPriority, () => {
        contextValue.current.listeners.forEach((listener) => {
          listener([
            versionRef.current,
            props.value
          ]);
        });
      });
    }, [
      props.value
    ]);
    return React307.createElement(Original, {
      value: contextValue.current
    }, props.children);
  };
  if (true) {
    Provider2.displayName = "ContextSelector.Provider";
  }
  return Provider2;
};
var createContext39 = (defaultValue) => {
  const context = React307.createContext({
    value: {
      current: defaultValue
    },
    version: {
      current: -1
    },
    listeners: []
  });
  context.Provider = createProvider10(context.Provider);
  delete context.Consumer;
  return context;
};

// node_modules/@fluentui/react-table/node_modules/@fluentui/react-context-selector/lib/useContextSelector.js
var React308 = __toESM(require_react());
var useContextSelector10 = (context, selector) => {
  const contextValue = React308.useContext(context);
  const { value: { current: value }, version: { current: version }, listeners } = contextValue;
  const selected = selector(value);
  const [state, setState] = React308.useState([
    value,
    selected
  ]);
  const dispatch = (payload) => {
    setState((prevState) => {
      if (!payload) {
        return [
          value,
          selected
        ];
      }
      if (payload[0] <= version) {
        if (Object.is(prevState[1], selected)) {
          return prevState;
        }
        return [
          value,
          selected
        ];
      }
      try {
        if (Object.is(prevState[0], payload[1])) {
          return prevState;
        }
        const nextSelected = selector(payload[1]);
        if (Object.is(prevState[1], nextSelected)) {
          return prevState;
        }
        return [
          payload[1],
          nextSelected
        ];
      } catch (e) {
      }
      return [
        prevState[0],
        prevState[1]
      ];
    });
  };
  if (!Object.is(state[1], selected)) {
    dispatch(void 0);
  }
  const stableDispatch = useEventCallback(dispatch);
  useIsomorphicLayoutEffect(() => {
    listeners.push(stableDispatch);
    return () => {
      const index = listeners.indexOf(stableDispatch);
      listeners.splice(index, 1);
    };
  }, [
    stableDispatch,
    listeners
  ]);
  return state[1];
};

// node_modules/@fluentui/react-table/node_modules/@fluentui/react-context-selector/lib/useHasParentContext.js
var React309 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/contexts/dataGridContext.js
var dataGridContext = createContext39(void 0);
var dataGridContextDefaultValue = {
  ...defaultTableState,
  subtleSelection: false,
  selectableRows: false,
  selectionAppearance: "brand",
  focusMode: "none",
  compositeRowTabsterAttribute: {}
};
var DataGridContextProvider = dataGridContext.Provider;
var useDataGridContext_unstable = (selector) => useContextSelector10(dataGridContext, (ctx = dataGridContextDefaultValue) => selector(ctx));

// node_modules/@fluentui/react-table/lib/components/DataGridCell/useDataGridCell.js
var useDataGridCell_unstable = (props, ref) => {
  const { focusMode = "cell" } = props;
  const columnId = useColumnIdContext();
  const tabbable = useDataGridContext_unstable((ctx) => (ctx.focusMode === "cell" || ctx.focusMode === "composite") && focusMode !== "none");
  const resizableColumns = useDataGridContext_unstable((ctx) => ctx.resizableColumns);
  const getTableCellProps = useDataGridContext_unstable((ctx) => {
    return ctx.columnSizing_unstable.getTableCellProps;
  });
  const focusableGroupAttr = useFocusableGroup({
    tabBehavior: "limited-trap-focus"
  });
  return useTableCell_unstable({
    as: "div",
    role: "gridcell",
    ...focusMode === "group" && focusableGroupAttr,
    tabIndex: tabbable ? 0 : void 0,
    ...resizableColumns ? getTableCellProps(columnId) : {},
    ...props
  }, ref);
};

// node_modules/@fluentui/react-table/lib/components/DataGridCell/renderDataGridCell.js
var renderDataGridCell_unstable = (state) => {
  return renderTableCell_unstable(state);
};

// node_modules/@fluentui/react-table/lib/components/DataGridCell/useDataGridCellStyles.styles.js
var dataGridCellClassNames = {
  root: "fui-DataGridCell"
};
var useDataGridCellStyles_unstable = (state) => {
  "use no memo";
  useTableCellStyles_unstable(state);
  state.root.className = mergeClasses(dataGridCellClassNames.root, state.root.className);
  return state;
};

// node_modules/@fluentui/react-table/lib/components/DataGridCell/DataGridCell.js
var DataGridCell = React311.forwardRef((props, ref) => {
  const state = useDataGridCell_unstable(props, ref);
  useDataGridCellStyles_unstable(state);
  useCustomStyleHook("useDataGridCellStyles_unstable")(state);
  return renderDataGridCell_unstable(state);
});
DataGridCell.displayName = "DataGridCell";

// node_modules/@fluentui/react-table/lib/components/DataGridRow/DataGridRow.js
var React315 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/components/DataGridRow/useDataGridRow.js
var React314 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/components/DataGridSelectionCell/DataGridSelectionCell.js
var React313 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/components/DataGridSelectionCell/useDataGridSelectionCell.js
var React312 = __toESM(require_react());
var useDataGridSelectionCell_unstable = (props, ref) => {
  const isHeader = useIsInTableHeader();
  const rowId = useTableRowIdContext();
  const subtle = useDataGridContext_unstable((ctx) => ctx.subtleSelection);
  const checked = useDataGridContext_unstable((ctx) => {
    if (isHeader && ctx.selection.selectionMode === "multiselect") {
      return ctx.selection.allRowsSelected ? true : ctx.selection.someRowsSelected ? "mixed" : false;
    }
    return ctx.selection.isRowSelected(rowId);
  });
  const toggleAllRows = useDataGridContext_unstable((ctx) => ctx.selection.toggleAllRows);
  const type = useDataGridContext_unstable((ctx) => ctx.selection.selectionMode === "multiselect" ? "checkbox" : "radio");
  const onClick = useEventCallback((e) => {
    var _props_onClick;
    if (isHeader) {
      toggleAllRows(e);
    }
    (_props_onClick = props.onClick) === null || _props_onClick === void 0 ? void 0 : _props_onClick.call(props, e);
  });
  return useTableSelectionCell_unstable({
    as: "div",
    role: "gridcell",
    checked,
    type,
    invisible: isHeader && type === "radio",
    "aria-checked": isHeader && type !== "radio" ? checked : void 0,
    "aria-selected": isHeader || checked === "mixed" ? void 0 : checked,
    subtle,
    ...props,
    onClick
  }, ref);
};

// node_modules/@fluentui/react-table/lib/components/DataGridSelectionCell/renderDataGridSelectionCell.js
var renderDataGridSelectionCell_unstable = (state) => {
  return renderTableSelectionCell_unstable(state);
};

// node_modules/@fluentui/react-table/lib/components/DataGridSelectionCell/useDataGridSelectionCellStyles.styles.js
var dataGridSelectionCellClassNames = {
  root: "fui-DataGridSelectionCell",
  checkboxIndicator: "fui-DataGridSelectionCell__checkboxIndicator",
  radioIndicator: "fui-DataGridSelectionCell__radioIndicator"
};
var useDataGridSelectionCellStyles_unstable = (state) => {
  "use no memo";
  useTableSelectionCellStyles_unstable(state);
  state.root.className = mergeClasses(dataGridSelectionCellClassNames.root, state.root.className);
  if (state.checkboxIndicator) {
    state.checkboxIndicator.className = mergeClasses(dataGridSelectionCellClassNames.checkboxIndicator, state.checkboxIndicator.className);
  }
  if (state.radioIndicator) {
    state.radioIndicator.className = mergeClasses(dataGridSelectionCellClassNames.radioIndicator, state.radioIndicator.className);
  }
  return state;
};

// node_modules/@fluentui/react-table/lib/components/DataGridSelectionCell/DataGridSelectionCell.js
var DataGridSelectionCell = React313.forwardRef((props, ref) => {
  const state = useDataGridSelectionCell_unstable(props, ref);
  useDataGridSelectionCellStyles_unstable(state);
  useCustomStyleHook("useDataGridSelectionCellStyles_unstable")(state);
  return renderDataGridSelectionCell_unstable(state);
});
DataGridSelectionCell.displayName = "DataGridSelectionCell";

// node_modules/@fluentui/react-table/lib/components/DataGridRow/useDataGridRow.js
var useDataGridRow_unstable = (props, ref) => {
  const rowId = useTableRowIdContext();
  const isHeader = useIsInTableHeader();
  const columnDefs = useDataGridContext_unstable((ctx) => ctx.columns);
  const selectable = useDataGridContext_unstable((ctx) => ctx.selectableRows);
  const selected = useDataGridContext_unstable((ctx) => ctx.selection.isRowSelected(rowId));
  const focusMode = useDataGridContext_unstable((ctx) => ctx.focusMode);
  const compositeRowTabsterAttribute = useDataGridContext_unstable((ctx) => ctx.compositeRowTabsterAttribute);
  const tabbable = focusMode === "row_unstable" || focusMode === "composite";
  const appearance = useDataGridContext_unstable((ctx) => {
    if (!isHeader && selectable && ctx.selection.isRowSelected(rowId)) {
      return ctx.selectionAppearance;
    }
    return "none";
  });
  const toggleRow = useDataGridContext_unstable((ctx) => ctx.selection.toggleRow);
  const onClick = useEventCallback((e) => {
    var _props_onClick;
    if (selectable && !isHeader) {
      toggleRow(e, rowId);
    }
    (_props_onClick = props.onClick) === null || _props_onClick === void 0 ? void 0 : _props_onClick.call(props, e);
  });
  const onKeyDown = useEventCallback((e) => {
    var _props_onKeyDown;
    if (selectable && !isHeader && e.key === Space && !isInteractiveHTMLElement(e.target)) {
      e.preventDefault();
      toggleRow(e, rowId);
    }
    (_props_onKeyDown = props.onKeyDown) === null || _props_onKeyDown === void 0 ? void 0 : _props_onKeyDown.call(props, e);
  });
  const baseState = useTableRow_unstable({
    appearance,
    "aria-selected": selectable ? selected : void 0,
    tabIndex: tabbable && !isHeader ? 0 : void 0,
    ...focusMode === "composite" && !isHeader && compositeRowTabsterAttribute,
    ...props,
    onClick,
    onKeyDown,
    children: null,
    as: "div"
  }, ref);
  return {
    ...baseState,
    components: {
      ...baseState.components,
      selectionCell: DataGridSelectionCell
    },
    selectionCell: slot_exports.optional(props.selectionCell, {
      renderByDefault: selectable,
      elementType: DataGridSelectionCell
    }),
    renderCell: props.children,
    columnDefs,
    // This context value should not be used internally
    // It's intended to help power user render functions
    dataGridContextValue: useStableDataGridContextValue()
  };
};
function useStableDataGridContextValue() {
  const ref = React314.useRef(dataGridContextDefaultValue);
  useDataGridContext_unstable((ctx) => {
    ref.current = ctx;
    return null;
  });
  return ref.current;
}

// node_modules/@fluentui/react-table/lib/components/DataGridRow/renderDataGridRow.js
var renderDataGridRow_unstable = (state) => {
  assertSlots(state);
  return jsxs(state.root, {
    children: [
      state.selectionCell && jsx(state.selectionCell, {}),
      state.columnDefs.map((columnDef) => jsx(ColumnIdContextProvider, {
        value: columnDef.columnId,
        children: state.renderCell(columnDef, state.dataGridContextValue)
      }, columnDef.columnId))
    ]
  });
};

// node_modules/@fluentui/react-table/lib/components/DataGridRow/useDataGridRowStyles.styles.js
var dataGridRowClassNames = {
  root: "fui-DataGridRow",
  selectionCell: "fui-DataGridRow__selectionCell"
};
var useDataGridRowStyles_unstable = (state) => {
  "use no memo";
  useTableRowStyles_unstable(state);
  state.root.className = mergeClasses(dataGridRowClassNames.root, state.root.className);
  if (state.selectionCell) {
    state.selectionCell.className = mergeClasses(dataGridRowClassNames.selectionCell, state.selectionCell.className);
  }
  return state;
};

// node_modules/@fluentui/react-table/lib/components/DataGridRow/DataGridRow.js
var DataGridRow = React315.forwardRef((props, ref) => {
  const state = useDataGridRow_unstable(props, ref);
  useDataGridRowStyles_unstable(state);
  useCustomStyleHook("useDataGridRowStyles_unstable")(state);
  return renderDataGridRow_unstable(state);
});
DataGridRow.displayName = "DataGridRow";

// node_modules/@fluentui/react-table/lib/components/DataGridRow/DataGridRow.types.js
var React316 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/components/DataGridBody/DataGridBody.js
var React318 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/components/DataGridBody/useDataGridBody.js
var React317 = __toESM(require_react());
var useDataGridBody_unstable = (props, ref) => {
  const { sortable } = useTableContext();
  const getRows = useDataGridContext_unstable((ctx) => ctx.getRows);
  const sort = useDataGridContext_unstable((ctx) => ctx.sort.sort);
  const rows = sortable ? sort(getRows()) : getRows();
  const baseState = useTableBody_unstable({
    ...props,
    children: null,
    as: "div"
  }, ref);
  return {
    ...baseState,
    rows,
    renderRow: props.children
  };
};

// node_modules/@fluentui/react-table/lib/components/DataGridBody/renderDataGridBody.js
var renderDataGridBody_unstable = (state) => {
  assertSlots(state);
  return jsx(state.root, {
    children: state.rows.map((row) => jsx(TableRowIdContextProvider, {
      value: row.rowId,
      children: state.renderRow(row)
    }, row.rowId))
  });
};

// node_modules/@fluentui/react-table/lib/components/DataGridBody/useDataGridBodyStyles.styles.js
var dataGridBodyClassNames = {
  root: "fui-DataGridBody"
};
var useDataGridBodyStyles_unstable = (state) => {
  "use no memo";
  useTableBodyStyles_unstable(state);
  state.root.className = mergeClasses(dataGridBodyClassNames.root, state.root.className);
  return state;
};

// node_modules/@fluentui/react-table/lib/components/DataGridBody/DataGridBody.js
var DataGridBody = React318.forwardRef((props, ref) => {
  const state = useDataGridBody_unstable(props, ref);
  useDataGridBodyStyles_unstable(state);
  useCustomStyleHook("useDataGridBodyStyles_unstable")(state);
  return renderDataGridBody_unstable(state);
});
DataGridBody.displayName = "DataGridBody";

// node_modules/@fluentui/react-table/lib/components/DataGridBody/DataGridBody.types.js
var React319 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/components/DataGrid/DataGrid.js
var React322 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/components/DataGrid/useDataGrid.js
var React320 = __toESM(require_react());
var useDataGrid_unstable = (props, ref) => {
  const { items, columns, focusMode = "cell", selectionMode, onSortChange, onSelectionChange, defaultSortState, sortState, selectedItems, defaultSelectedItems, subtleSelection = false, selectionAppearance = "brand", getRowId, resizableColumns, columnSizingOptions, onColumnResize, containerWidthOffset, resizableColumnsOptions = {} } = props;
  const widthOffset = containerWidthOffset !== null && containerWidthOffset !== void 0 ? containerWidthOffset : selectionMode ? -CELL_WIDTH : 0;
  const gridTabsterAttribute = useArrowNavigationGroup({
    axis: "grid"
  });
  const { onTableKeyDown: onCompositeKeyDown, tableTabsterAttribute: compositeTabsterAttribute, tableRowTabsterAttribute: compositeRowTabsterAttribute } = useTableCompositeNavigation();
  var _resizableColumnsOptions_autoFitColumns;
  const tableState = useTableFeatures({
    items,
    columns,
    getRowId
  }, [
    useTableSort({
      defaultSortState,
      sortState,
      onSortChange
    }),
    useTableSelection({
      defaultSelectedItems,
      selectedItems,
      onSelectionChange,
      selectionMode: selectionMode !== null && selectionMode !== void 0 ? selectionMode : "multiselect"
    }),
    useTableColumnSizing_unstable({
      onColumnResize,
      columnSizingOptions,
      // The selection cell is not part of the columns, therefore its width needs to be subtracted
      // from the container to make sure the columns don't overflow the table.
      containerWidthOffset: widthOffset,
      // Disables automatic resizing of columns when the container overflows.
      // This allows the sum of the columns to be larger than the container.
      autoFitColumns: (_resizableColumnsOptions_autoFitColumns = resizableColumnsOptions.autoFitColumns) !== null && _resizableColumnsOptions_autoFitColumns !== void 0 ? _resizableColumnsOptions_autoFitColumns : true
    })
  ]);
  const innerRef = React320.useRef(null);
  const { findFirstFocusable, findLastFocusable } = useFocusFinders();
  const onKeyDown = useEventCallback((e) => {
    var _props_onKeyDown;
    (_props_onKeyDown = props.onKeyDown) === null || _props_onKeyDown === void 0 ? void 0 : _props_onKeyDown.call(props, e);
    focusMode === "composite" && onCompositeKeyDown(e);
    if (!innerRef.current || !e.ctrlKey || e.defaultPrevented) {
      return;
    }
    if (e.key === Home) {
      const firstRow = innerRef.current.querySelector('[role="row"]');
      if (firstRow) {
        var _findFirstFocusable;
        (_findFirstFocusable = findFirstFocusable(firstRow)) === null || _findFirstFocusable === void 0 ? void 0 : _findFirstFocusable.focus();
      }
    }
    if (e.key === End) {
      const rows = innerRef.current.querySelectorAll('[role="row"]');
      if (rows.length) {
        var _findLastFocusable;
        const lastRow = rows.item(rows.length - 1);
        (_findLastFocusable = findLastFocusable(lastRow)) === null || _findLastFocusable === void 0 ? void 0 : _findLastFocusable.focus();
      }
    }
  });
  const baseTableState = useTable_unstable({
    role: "grid",
    as: "div",
    noNativeElements: true,
    ...focusMode === "cell" && gridTabsterAttribute,
    ...focusMode === "composite" && compositeTabsterAttribute,
    ...props,
    onKeyDown,
    ...resizableColumns ? tableState.columnSizing_unstable.getTableProps(props) : {}
  }, useMergedRefs(ref, tableState.tableRef, innerRef));
  return {
    ...baseTableState,
    focusMode,
    tableState,
    selectableRows: !!selectionMode,
    subtleSelection,
    selectionAppearance,
    resizableColumns,
    compositeRowTabsterAttribute
  };
};

// node_modules/@fluentui/react-table/lib/components/DataGrid/renderDataGrid.js
var React321 = __toESM(require_react());
var renderDataGrid_unstable = (state, contextValues) => {
  return React321.createElement(DataGridContextProvider, {
    value: contextValues.dataGrid
  }, renderTable_unstable(state, contextValues));
};

// node_modules/@fluentui/react-table/lib/components/DataGrid/useDataGridStyles.styles.js
var dataGridClassNames = {
  root: "fui-DataGrid"
};
var useDataGridStyles_unstable = (state) => {
  "use no memo";
  useTableStyles_unstable(state);
  state.root.className = mergeClasses(dataGridClassNames.root, state.root.className);
  return state;
};

// node_modules/@fluentui/react-table/lib/components/DataGrid/useDataGridContextValues.js
function useDataGridContextValues_unstable(state) {
  const tableContextValues = useTableContextValues_unstable(state);
  const { tableState, focusMode, selectableRows, subtleSelection, selectionAppearance, resizableColumns, compositeRowTabsterAttribute } = state;
  return {
    ...tableContextValues,
    dataGrid: {
      ...tableState,
      focusMode,
      selectableRows,
      subtleSelection,
      selectionAppearance,
      resizableColumns,
      compositeRowTabsterAttribute
    }
  };
}

// node_modules/@fluentui/react-table/lib/components/DataGrid/DataGrid.js
var DataGrid = React322.forwardRef((props, ref) => {
  const state = useDataGrid_unstable(props, ref);
  useDataGridStyles_unstable(state);
  useCustomStyleHook("useDataGridStyles_unstable")(state);
  return renderDataGrid_unstable(state, useDataGridContextValues_unstable(state));
});
DataGrid.displayName = "DataGrid";

// node_modules/@fluentui/react-table/lib/components/DataGrid/DataGrid.types.js
var React323 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/components/DataGridHeader/DataGridHeader.js
var React325 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/components/DataGridHeader/useDataGridHeader.js
var React324 = __toESM(require_react());
var useDataGridHeader_unstable = (props, ref) => {
  return useTableHeader_unstable({
    ...props,
    as: "div"
  }, ref);
};

// node_modules/@fluentui/react-table/lib/components/DataGridHeader/renderDataGridHeader.js
var renderDataGridHeader_unstable = (state) => {
  return renderTableHeader_unstable(state);
};

// node_modules/@fluentui/react-table/lib/components/DataGridHeader/useDataGridHeaderStyles.styles.js
var dataGridHeaderClassNames = {
  root: "fui-DataGridHeader"
};
var useDataGridHeaderStyles_unstable = (state) => {
  "use no memo";
  useTableHeaderStyles_unstable(state);
  state.root.className = mergeClasses(dataGridHeaderClassNames.root, state.root.className);
  return state;
};

// node_modules/@fluentui/react-table/lib/components/DataGridHeader/DataGridHeader.js
var DataGridHeader = React325.forwardRef((props, ref) => {
  const state = useDataGridHeader_unstable(props, ref);
  useDataGridHeaderStyles_unstable(state);
  useCustomStyleHook("useDataGridHeaderStyles_unstable")(state);
  return renderDataGridHeader_unstable(state);
});
DataGridHeader.displayName = "DataGridHeader";

// node_modules/@fluentui/react-table/lib/components/DataGridHeaderCell/DataGridHeaderCell.js
var React327 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/components/DataGridHeaderCell/useDataGridHeaderCell.js
var React326 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/utils/isColumnSortable.js
function isColumnSortable(column) {
  return column.compare.length > 0;
}

// node_modules/@fluentui/react-table/lib/components/DataGridHeaderCell/useDataGridHeaderCell.js
var useDataGridHeaderCell_unstable = (props, ref) => {
  const columnId = useColumnIdContext();
  const { sortable: gridSortable } = useTableContext();
  const toggleColumnSort = useDataGridContext_unstable((ctx) => ctx.sort.toggleColumnSort);
  const sortable = useDataGridContext_unstable((ctx) => {
    const columnSortable = !!ctx.columns.find((c) => c.columnId === columnId && isColumnSortable(c));
    if (!gridSortable) {
      return false;
    }
    return columnSortable;
  });
  const sortDirection = useDataGridContext_unstable((ctx) => sortable ? ctx.sort.getSortDirection(columnId) : void 0);
  const resizableColumns = useDataGridContext_unstable((ctx) => ctx.resizableColumns);
  const getTableHeaderCellProps = useDataGridContext_unstable((ctx) => {
    return ctx.columnSizing_unstable.getTableHeaderCellProps;
  });
  const onClick = useEventCallback((e) => {
    var _props_onClick;
    if (sortable) {
      toggleColumnSort(e, columnId);
    }
    (_props_onClick = props.onClick) === null || _props_onClick === void 0 ? void 0 : _props_onClick.call(props, e);
  });
  return useTableHeaderCell_unstable({
    sortable,
    sortDirection,
    as: "div",
    tabIndex: sortable ? void 0 : 0,
    ...resizableColumns ? getTableHeaderCellProps(columnId) : {},
    ...props,
    onClick
  }, ref);
};

// node_modules/@fluentui/react-table/lib/components/DataGridHeaderCell/renderDataGridHeaderCell.js
var renderDataGridHeaderCell_unstable = (state) => {
  return renderTableHeaderCell_unstable(state);
};

// node_modules/@fluentui/react-table/lib/components/DataGridHeaderCell/useDataGridHeaderCellStyles.styles.js
var dataGridHeaderCellClassNames = {
  root: "fui-DataGridHeaderCell",
  button: "fui-DataGridHeaderCell__button",
  sortIcon: "fui-DataGridHeaderCell__sortIcon",
  aside: "fui-DataGridHeaderCell__aside"
};
var useDataGridHeaderCellStyles_unstable = (state) => {
  "use no memo";
  useTableHeaderCellStyles_unstable(state);
  state.root.className = mergeClasses(dataGridHeaderCellClassNames.root, state.root.className);
  if (state.button) {
    state.button.className = mergeClasses(dataGridHeaderCellClassNames.button, state.button.className);
  }
  if (state.sortIcon) {
    state.sortIcon.className = mergeClasses(dataGridHeaderCellClassNames.sortIcon, state.sortIcon.className);
  }
  if (state.aside) {
    state.aside.className = mergeClasses(dataGridHeaderCellClassNames.aside, state.aside.className);
  }
  return state;
};

// node_modules/@fluentui/react-table/lib/components/DataGridHeaderCell/DataGridHeaderCell.js
var DataGridHeaderCell = React327.forwardRef((props, ref) => {
  const state = useDataGridHeaderCell_unstable(props, ref);
  useDataGridHeaderCellStyles_unstable(state);
  useCustomStyleHook("useDataGridHeaderCellStyles_unstable")(state);
  return renderDataGridHeaderCell_unstable(state);
});
DataGridHeaderCell.displayName = "DataGridHeaderCell";

// node_modules/@fluentui/react-card/lib/components/Card/Card.js
var React332 = __toESM(require_react());

// node_modules/@fluentui/react-card/lib/components/Card/useCard.js
var React330 = __toESM(require_react());

// node_modules/@fluentui/react-card/lib/components/Card/useCardSelectable.js
var React328 = __toESM(require_react());
var useCardSelectable = (props, { referenceLabel, referenceId }, cardRef) => {
  const { checkbox = {}, onSelectionChange, floatingAction, onClick, onKeyDown } = props;
  const { findAllFocusable } = useFocusFinders();
  const checkboxRef = React328.useRef(null);
  const [selected, setSelected] = useControllableState({
    state: props.selected,
    defaultState: props.defaultSelected,
    initialState: false
  });
  const selectable = [
    props.selected,
    props.defaultSelected,
    onSelectionChange
  ].some((prop) => typeof prop !== "undefined");
  const [selectFocused, setSelectFocused] = React328.useState(false);
  const shouldRestrictTriggerAction = React328.useCallback((event) => {
    if (!cardRef.current) {
      return false;
    }
    const focusableElements = findAllFocusable(cardRef.current);
    const target = event.target;
    const isElementInFocusableGroup = focusableElements.some((element) => element.contains(target));
    const isCheckboxSlot = (checkboxRef === null || checkboxRef === void 0 ? void 0 : checkboxRef.current) === target;
    return isElementInFocusableGroup && !isCheckboxSlot;
  }, [
    cardRef,
    findAllFocusable
  ]);
  const onChangeHandler = React328.useCallback((event) => {
    if (shouldRestrictTriggerAction(event)) {
      return;
    }
    const newCheckedValue = !selected;
    setSelected(newCheckedValue);
    if (onSelectionChange) {
      onSelectionChange(event, {
        selected: newCheckedValue
      });
    }
  }, [
    onSelectionChange,
    selected,
    setSelected,
    shouldRestrictTriggerAction
  ]);
  const onKeyDownHandler = React328.useCallback((event) => {
    if ([
      Enter
    ].includes(event.key)) {
      event.preventDefault();
      onChangeHandler(event);
    }
  }, [
    onChangeHandler
  ]);
  const checkboxSlot = React328.useMemo(() => {
    if (!selectable || floatingAction) {
      return;
    }
    const selectableCheckboxProps = {};
    if (referenceId) {
      selectableCheckboxProps["aria-labelledby"] = referenceId;
    } else if (referenceLabel) {
      selectableCheckboxProps["aria-label"] = referenceLabel;
    }
    return slot_exports.optional(checkbox, {
      defaultProps: {
        ref: checkboxRef,
        type: "checkbox",
        checked: selected,
        onChange: (event) => onChangeHandler(event),
        onFocus: () => setSelectFocused(true),
        onBlur: () => setSelectFocused(false),
        ...selectableCheckboxProps
      },
      elementType: "input"
    });
  }, [
    checkbox,
    floatingAction,
    selected,
    selectable,
    onChangeHandler,
    referenceId,
    referenceLabel
  ]);
  const floatingActionSlot = React328.useMemo(() => {
    if (!floatingAction) {
      return;
    }
    return slot_exports.optional(floatingAction, {
      defaultProps: {
        ref: checkboxRef
      },
      elementType: "div"
    });
  }, [
    floatingAction
  ]);
  const selectableCardProps = React328.useMemo(() => {
    if (!selectable) {
      return null;
    }
    return {
      onClick: mergeCallbacks(onClick, onChangeHandler),
      onKeyDown: mergeCallbacks(onKeyDown, onKeyDownHandler)
    };
  }, [
    selectable,
    onChangeHandler,
    onClick,
    onKeyDown,
    onKeyDownHandler
  ]);
  return {
    selected,
    selectable,
    selectFocused,
    selectableCardProps,
    checkboxSlot,
    floatingActionSlot
  };
};

// node_modules/@fluentui/react-card/lib/components/Card/CardContext.js
var React329 = __toESM(require_react());
var cardContext = React329.createContext(void 0);
var cardContextDefaultValue = {
  selectableA11yProps: {
    referenceId: void 0,
    setReferenceId() {
    },
    referenceLabel: void 0,
    setReferenceLabel() {
    }
  }
};
var CardProvider = cardContext.Provider;
var useCardContext_unstable = () => {
  var _React_useContext;
  return (_React_useContext = React329.useContext(cardContext)) !== null && _React_useContext !== void 0 ? _React_useContext : cardContextDefaultValue;
};

// node_modules/@fluentui/react-card/lib/components/Card/useCard.js
var focusMap = {
  off: void 0,
  "no-tab": "limited-trap-focus",
  "tab-exit": "limited",
  "tab-only": "unlimited"
};
var useCardInteractive = ({ focusMode: initialFocusMode, ...props }) => {
  const interactive = [
    "onClick",
    "onDoubleClick",
    "onMouseUp",
    "onMouseDown",
    "onPointerUp",
    "onPointerDown",
    "onTouchStart",
    "onTouchEnd",
    "onDragStart",
    "onDragEnd"
  ].some((prop) => props[prop]);
  const focusMode = initialFocusMode !== null && initialFocusMode !== void 0 ? initialFocusMode : interactive ? "no-tab" : "off";
  const groupperAttrs = useFocusableGroup({
    tabBehavior: focusMap[focusMode]
  });
  const interactiveFocusAttributes = {
    ...groupperAttrs,
    tabIndex: 0
  };
  return {
    interactive,
    focusAttributes: focusMode === "off" ? null : interactiveFocusAttributes
  };
};
var useCard_unstable = (props, ref) => {
  const { appearance = "filled", orientation = "vertical", size = "medium" } = props;
  const [referenceId, setReferenceId] = React330.useState(cardContextDefaultValue.selectableA11yProps.referenceId);
  const [referenceLabel, setReferenceLabel] = React330.useState(cardContextDefaultValue.selectableA11yProps.referenceId);
  const cardBaseRef = useFocusWithin();
  const { selectable, selected, selectableCardProps, selectFocused, checkboxSlot, floatingActionSlot } = useCardSelectable(props, {
    referenceId,
    referenceLabel
  }, cardBaseRef);
  const cardRef = useMergedRefs(cardBaseRef, ref);
  const { interactive, focusAttributes } = useCardInteractive(props);
  return {
    appearance,
    orientation,
    size,
    interactive,
    selectable,
    selectFocused,
    selected,
    selectableA11yProps: {
      setReferenceId,
      referenceId,
      referenceLabel,
      setReferenceLabel
    },
    components: {
      root: "div",
      floatingAction: "div",
      checkbox: "input"
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      ref: cardRef,
      role: "group",
      ...!selectable ? focusAttributes : null,
      ...props,
      ...selectableCardProps
    }), {
      elementType: "div"
    }),
    floatingAction: floatingActionSlot,
    checkbox: checkboxSlot
  };
};

// node_modules/@fluentui/react-card/lib/components/Card/renderCard.js
var renderCard_unstable = (state, cardContextValue) => {
  assertSlots(state);
  return jsx(state.root, {
    children: jsxs(CardProvider, {
      value: cardContextValue,
      children: [
        state.checkbox ? jsx(state.checkbox, {}) : null,
        state.floatingAction ? jsx(state.floatingAction, {}) : null,
        state.root.children
      ]
    })
  });
};

// node_modules/@fluentui/react-card/lib/components/Card/useCardStyles.styles.js
var React331 = __toESM(require_react());

// node_modules/@fluentui/react-card/lib/components/CardPreview/useCardPreviewStyles.styles.js
var cardPreviewClassNames = {
  root: "fui-CardPreview",
  logo: "fui-CardPreview__logo"
};
var useStyles42 = __styles2({
  root: {
    qhf8xq: "f10pi13n",
    Byfpedg: "fgourly",
    Btj6oj6: "f1vui7lx",
    B1m4t4s: "fda5zwx"
  },
  logo: {
    qhf8xq: "f1euv43f",
    B5kzvoi: "f1gcvs1y",
    oyh7mz: ["f1t6tvco", "ffrfxm3"],
    a9b677: "f1szoe96",
    Bqenvij: "f1d2rq10"
  }
}, {
  d: [".f10pi13n{position:relative;}", ".fgourly>:not(.fui-CardPreview__logo){display:block;}", ".f1vui7lx>:not(.fui-CardPreview__logo){height:100%;}", ".fda5zwx>:not(.fui-CardPreview__logo){width:100%;}", ".f1euv43f{position:absolute;}", ".f1gcvs1y{bottom:12px;}", ".f1t6tvco{left:12px;}", ".ffrfxm3{right:12px;}", ".f1szoe96{width:32px;}", ".f1d2rq10{height:32px;}"]
});
var useCardPreviewStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles42();
  state.root.className = mergeClasses(cardPreviewClassNames.root, styles.root, state.root.className);
  if (state.logo) {
    state.logo.className = mergeClasses(cardPreviewClassNames.logo, styles.logo, state.logo.className);
  }
  return state;
};

// node_modules/@fluentui/react-card/lib/components/CardHeader/useCardHeaderStyles.styles.js
var cardHeaderClassNames = {
  root: "fui-CardHeader",
  image: "fui-CardHeader__image",
  header: "fui-CardHeader__header",
  description: "fui-CardHeader__description",
  action: "fui-CardHeader__action"
};
var cardHeaderCSSVars = {
  cardHeaderGapVar: "--fui-CardHeader--gap"
};
var useStyles43 = __styles2({
  root: {
    Bkc6ea2: "fkufhic",
    Bt984gj: "f122n59"
  },
  image: {
    mc9l5x: "ftuwxu6",
    t21cq0: ["fql5097", "f6yss9k"]
  },
  header: {
    mc9l5x: "f22iagw"
  },
  description: {
    mc9l5x: "f22iagw"
  },
  action: {
    Frg6f3: ["f6yss9k", "fql5097"],
    B7frvx2: "f1ndzpm5",
    B06c7xf: ["f1fkeggc", "f1u45u6i"],
    B8uq84v: "f16eyofs",
    snkdo8: ["f1u45u6i", "f1fkeggc"],
    Bpf22ct: "f1wkmkig",
    apjfyd: "f18alut9"
  }
}, {
  d: [".fkufhic{--fui-CardHeader--gap:12px;}", ".f122n59{align-items:center;}", ".ftuwxu6{display:inline-flex;}", ".fql5097{margin-right:var(--fui-CardHeader--gap);}", ".f6yss9k{margin-left:var(--fui-CardHeader--gap);}", ".f22iagw{display:flex;}"],
  m: [["@media (forced-colors: active){.f1ndzpm5 .fui-Button,.f1ndzpm5 .fui-Link{border-top-color:currentColor;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1fkeggc .fui-Button,.f1fkeggc .fui-Link{border-right-color:currentColor;}.f1u45u6i .fui-Button,.f1u45u6i .fui-Link{border-left-color:currentColor;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f16eyofs .fui-Button,.f16eyofs .fui-Link{border-bottom-color:currentColor;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1wkmkig .fui-Button,.f1wkmkig .fui-Link{color:currentColor;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f18alut9 .fui-Button,.f18alut9 .fui-Link{outline-color:currentColor;}}", {
    m: "(forced-colors: active)"
  }]]
});
var useStylesGrid = __styles2({
  root: {
    mc9l5x: "f13qh94s",
    t4k1zu: "f8a668j"
  },
  image: {
    Br312pm: "fwpfdsa",
    Ijaq50: "fldnz9j"
  },
  header: {
    Br312pm: "fd46tj4",
    Ijaq50: "f16hsg94"
  },
  description: {
    Br312pm: "fd46tj4",
    Ijaq50: "faunodf"
  },
  action: {
    Br312pm: "fis13di",
    Ijaq50: "fldnz9j"
  }
}, {
  d: [".f13qh94s{display:grid;}", ".f8a668j{grid-auto-columns:min-content 1fr min-content;}", ".fwpfdsa{grid-column-start:1;}", ".fldnz9j{grid-row-start:span 2;}", ".fd46tj4{grid-column-start:2;}", ".f16hsg94{grid-row-start:1;}", ".faunodf{grid-row-start:2;}", ".fis13di{grid-column-start:3;}"]
});
var useStylesFlex = __styles2({
  root: {
    mc9l5x: "f22iagw"
  },
  header: {
    Bh6795r: "fqerorx"
  },
  image: {},
  description: {},
  action: {}
}, {
  d: [".f22iagw{display:flex;}", ".fqerorx{flex-grow:1;}"]
});
var useCardHeaderStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles43();
  const stylesGrid = useStylesGrid();
  const stylesFlex = useStylesFlex();
  const boxModelStyles = state.description ? stylesGrid : stylesFlex;
  const getSlotStyles = (slotName) => {
    var _state_slotName;
    return mergeClasses(cardHeaderClassNames[slotName], styles[slotName], boxModelStyles[slotName], (_state_slotName = state[slotName]) === null || _state_slotName === void 0 ? void 0 : _state_slotName.className);
  };
  state.root.className = getSlotStyles("root");
  if (state.image) {
    state.image.className = getSlotStyles("image");
  }
  if (state.header) {
    state.header.className = getSlotStyles("header");
  }
  if (state.description) {
    state.description.className = getSlotStyles("description");
  }
  if (state.action) {
    state.action.className = getSlotStyles("action");
  }
  return state;
};

// node_modules/@fluentui/react-card/lib/components/CardFooter/useCardFooterStyles.styles.js
var cardFooterClassNames = {
  root: "fui-CardFooter",
  action: "fui-CardFooter__action"
};
var useStyles44 = __styles2({
  root: {
    mc9l5x: "f22iagw",
    Beiy3e4: "f1063pyq",
    i8kkvl: 0,
    Belr9w4: 0,
    rmohyg: "fsbu5mz"
  },
  action: {
    Frg6f3: ["fcgxt0o", "f1ujusj6"],
    B7frvx2: "f1ndzpm5",
    B06c7xf: ["f1fkeggc", "f1u45u6i"],
    B8uq84v: "f16eyofs",
    snkdo8: ["f1u45u6i", "f1fkeggc"],
    Bpf22ct: "f1wkmkig",
    apjfyd: "f18alut9"
  }
}, {
  d: [".f22iagw{display:flex;}", ".f1063pyq{flex-direction:row;}", [".fsbu5mz{gap:12px;}", {
    p: -1
  }], ".fcgxt0o{margin-left:auto;}", ".f1ujusj6{margin-right:auto;}"],
  m: [["@media (forced-colors: active){.f1ndzpm5 .fui-Button,.f1ndzpm5 .fui-Link{border-top-color:currentColor;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1fkeggc .fui-Button,.f1fkeggc .fui-Link{border-right-color:currentColor;}.f1u45u6i .fui-Button,.f1u45u6i .fui-Link{border-left-color:currentColor;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f16eyofs .fui-Button,.f16eyofs .fui-Link{border-bottom-color:currentColor;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1wkmkig .fui-Button,.f1wkmkig .fui-Link{color:currentColor;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f18alut9 .fui-Button,.f18alut9 .fui-Link{outline-color:currentColor;}}", {
    m: "(forced-colors: active)"
  }]]
});
var useCardFooterStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles44();
  state.root.className = mergeClasses(cardFooterClassNames.root, styles.root, state.root.className);
  if (state.action) {
    state.action.className = mergeClasses(cardFooterClassNames.action, styles.action, state.action.className);
  }
  return state;
};

// node_modules/@fluentui/react-card/lib/components/Card/useCardStyles.styles.js
var cardClassNames = {
  root: "fui-Card",
  floatingAction: "fui-Card__floatingAction",
  checkbox: "fui-Card__checkbox"
};
var cardCSSVars = {
  cardSizeVar: "--fui-Card--size",
  cardBorderRadiusVar: "--fui-Card--border-radius"
};
var focusOutlineStyle = {
  outlineRadius: `var(${cardCSSVars.cardBorderRadiusVar})`,
  outlineWidth: tokens.strokeWidthThick,
  outlineOffset: "-2px"
};
var useCardResetStyles = __resetStyles("rfxo2k2", "rgle7w9", [".rfxo2k2{overflow:hidden;border-radius:var(--fui-Card--border-radius);padding:var(--fui-Card--size);gap:var(--fui-Card--size);display:flex;position:relative;box-sizing:border-box;color:var(--colorNeutralForeground1);}", '.rfxo2k2::after{position:absolute;top:0;left:0;right:0;bottom:0;content:"";pointer-events:none;border-top-style:solid;border-right-style:solid;border-bottom-style:solid;border-left-style:solid;border-top-width:var(--strokeWidthThin);border-right-width:var(--strokeWidthThin);border-bottom-width:var(--strokeWidthThin);border-left-width:var(--strokeWidthThin);border-radius:var(--fui-Card--border-radius);}', ".rfxo2k2>.fui-CardHeader,.rfxo2k2>.fui-CardFooter{flex-shrink:0;}", ".rgle7w9{overflow:hidden;border-radius:var(--fui-Card--border-radius);padding:var(--fui-Card--size);gap:var(--fui-Card--size);display:flex;position:relative;box-sizing:border-box;color:var(--colorNeutralForeground1);}", '.rgle7w9::after{position:absolute;top:0;right:0;left:0;bottom:0;content:"";pointer-events:none;border-top-style:solid;border-left-style:solid;border-bottom-style:solid;border-right-style:solid;border-top-width:var(--strokeWidthThin);border-left-width:var(--strokeWidthThin);border-bottom-width:var(--strokeWidthThin);border-right-width:var(--strokeWidthThin);border-radius:var(--fui-Card--border-radius);}', ".rgle7w9>.fui-CardHeader,.rgle7w9>.fui-CardFooter{flex-shrink:0;}"]);
var useCardStyles = __styles2({
  focused: {
    Brovlpu: "ftqa4ok",
    B486eqv: "f2hkw1w",
    B8q5s1w: "f8hki3x",
    Bci5o5g: ["f1d2448m", "ffh67wi"],
    n8qw10: "f1bjia2o",
    Bdrgwmp: ["ffh67wi", "f1d2448m"],
    Bb7d1vk: "f226i61",
    zhwhgb: ["f13kzufm", "fsx75g8"],
    dhy2o1: "flujwa2",
    Gfyso: ["fsx75g8", "f13kzufm"],
    Bm4h7ae: "f15bsgw9",
    B7ys5i9: "f14e48fq",
    Busjfv9: "f18yb2kv",
    Bhk32uz: "fd6o370",
    f6g5ot: 0,
    Boxcth7: 0,
    Bhdgwq3: 0,
    hgwjuy: 0,
    Bshpdp8: 0,
    Bsom6fd: 0,
    Blkhhs4: 0,
    Bonggc9: 0,
    Ddfuxk: 0,
    i03rao: 0,
    kclons: 0,
    clg4pj: 0,
    Bpqj9nj: 0,
    B6dhp37: 0,
    Bf4ptjt: 0,
    Bqtpl0w: 0,
    i4rwgc: "fpqizxz",
    Dah5zi: 0,
    B1tsrr9: 0,
    qqdqy8: 0,
    Bkh64rk: 0,
    e3fwne: "fnd8nzh",
    J0r882: "f15fr7a0",
    Bule8hv: ["fwsq40z", "fy0y4wt"],
    Bjwuhne: "f34ld9f",
    Ghsupd: ["fy0y4wt", "fwsq40z"]
  },
  selectableFocused: {
    Brovlpu: "ftqa4ok",
    B486eqv: "f2hkw1w",
    Bssx7fj: "f1b1k54r",
    uh7if5: ["f4ne723", "fqqcjud"],
    clntm0: "fh7aioi",
    Dlk2r6: ["fqqcjud", "f4ne723"],
    Bm3wd5j: "f1k55ka9",
    Bbrhkcr: ["fgclinu", "f16pcs8n"],
    f1oku: "fycbxed",
    aywvf2: ["f16pcs8n", "fgclinu"],
    B2j2mmj: "ffht0p2",
    wigs8: "f1p0ul1q",
    pbfy6t: "f1c901ms",
    B0v4ure: "f1alokd7",
    Byrf0fs: 0,
    Bsiemmq: 0,
    Bwckmig: 0,
    skfxo0: 0,
    Iidy0u: 0,
    B98u21t: 0,
    Bvwlmkc: 0,
    jo1ztg: 0,
    Ba1iezr: 0,
    Blmvk6g: 0,
    B24cy0v: 0,
    Bil7v7r: 0,
    Br3gin4: 0,
    nr063g: 0,
    ghq09: 0,
    Bbgo44z: 0,
    Bseh09z: "f1i978nd",
    az1dzo: 0,
    Ba3ybja: 0,
    B6352mv: 0,
    vppk2z: 0,
    Biaj6j7: "f1nh8hsq",
    B2pnrqr: "f1amxum7",
    B29w5g4: ["f1cec8w7", "f554mv0"],
    Bhhzhcn: "f1sj6kbr",
    Bec0n69: ["f554mv0", "f1cec8w7"]
  },
  orientationHorizontal: {
    Beiy3e4: "f1063pyq",
    Bt984gj: "f122n59",
    Binpb3b: "ftrw7vg",
    qrt8p2: "f18opajm",
    k6ws3r: ["f13002it", "fqo182t"],
    Btcwela: ["f18yna97", "f1kd6wh7"],
    Fer9m8: "f4i4759"
  },
  orientationVertical: {
    Beiy3e4: "f1vx9l62",
    B5nvv7i: ["f14k419y", "f1fgo9fz"],
    Baxg94k: ["f1fgo9fz", "f14k419y"],
    tn21ii: "fvqmfsm",
    B0ud6bj: "f3am6yf",
    Bgdo4j: "f1r5wgso"
  },
  sizeSmall: {
    B7balbw: "f1pi9uxy",
    B1h88n7: "f1h1zgly"
  },
  sizeMedium: {
    B7balbw: "frsmuga",
    B1h88n7: "fuldkky"
  },
  sizeLarge: {
    B7balbw: "f1qua4xo",
    B1h88n7: "fimkt6v"
  },
  interactive: {
    rhjd8f: "f1epqm3e"
  },
  filled: {
    De3pzq: "fxugw4r",
    E5pizo: "f1whvlc6",
    B0n5ga8: "f16gxe2i",
    s924m2: ["fpgykix", "fzybk4o"],
    B1q35kw: "f1osi826",
    Gp14am: ["fzybk4o", "fpgykix"]
  },
  filledInteractive: {
    Bceei9c: "f1k6fduh",
    De3pzq: "fxugw4r",
    E5pizo: "f1whvlc6",
    B0n5ga8: "f16gxe2i",
    s924m2: ["fpgykix", "fzybk4o"],
    B1q35kw: "f1osi826",
    Gp14am: ["fzybk4o", "fpgykix"],
    Bi91k9c: "feu1g3u",
    Jwef8y: "f1knas48",
    Bvxd0ez: "f1m145df",
    ecr2s2: "fb40n2d"
  },
  filledInteractiveSelected: {
    De3pzq: "f1nfm20t",
    B0n5ga8: "f16eln5f",
    s924m2: ["fa2okxs", "fg4zq3l"],
    B1q35kw: "ff6932p",
    Gp14am: ["fg4zq3l", "fa2okxs"],
    Bi91k9c: "fx9teim",
    Jwef8y: "f1kz6goq"
  },
  filledAlternative: {
    De3pzq: "f1dmdbja",
    E5pizo: "f1whvlc6",
    B0n5ga8: "f16gxe2i",
    s924m2: ["fpgykix", "fzybk4o"],
    B1q35kw: "f1osi826",
    Gp14am: ["fzybk4o", "fpgykix"]
  },
  filledAlternativeInteractive: {
    Bceei9c: "f1k6fduh",
    De3pzq: "f1dmdbja",
    E5pizo: "f1whvlc6",
    B0n5ga8: "f16gxe2i",
    s924m2: ["fpgykix", "fzybk4o"],
    B1q35kw: "f1osi826",
    Gp14am: ["fzybk4o", "fpgykix"],
    Bi91k9c: "fnwyq0v",
    Jwef8y: "f1uvynv3",
    Bvxd0ez: "f1m145df",
    ecr2s2: "f1yhgkbh"
  },
  filledAlternativeInteractiveSelected: {
    De3pzq: "fjxa0vh",
    B0n5ga8: "f16eln5f",
    s924m2: ["fa2okxs", "fg4zq3l"],
    B1q35kw: "ff6932p",
    Gp14am: ["fg4zq3l", "fa2okxs"],
    Bi91k9c: "f1luvkty",
    Jwef8y: "fehi0vp"
  },
  outline: {
    De3pzq: "f1c21dwh",
    E5pizo: "f1couhl3",
    B0n5ga8: "ft83z1f",
    s924m2: ["f1g4150c", "f192dr6e"],
    B1q35kw: "f1qnawh6",
    Gp14am: ["f192dr6e", "f1g4150c"]
  },
  outlineInteractive: {
    Bceei9c: "f1k6fduh",
    De3pzq: "f1c21dwh",
    E5pizo: "f1couhl3",
    B0n5ga8: "ft83z1f",
    s924m2: ["f1g4150c", "f192dr6e"],
    B1q35kw: "f1qnawh6",
    Gp14am: ["f192dr6e", "f1g4150c"],
    Bi91k9c: "feu1g3u",
    Jwef8y: "fjxutwb",
    Be0v6ae: "f1llr77y",
    B5kxglz: ["fzk0khw", "fjj8tog"],
    B3pwyw6: "fb1u8ub",
    Bymgtzf: ["fjj8tog", "fzk0khw"],
    ecr2s2: "fophhak",
    dmfk: "f1uohb70",
    B4ofi8: ["f1jm7v1n", "f1bus3rq"],
    jgq6uv: "f1fbu7rr",
    Baxewws: ["f1bus3rq", "f1jm7v1n"]
  },
  outlineInteractiveSelected: {
    De3pzq: "f1q9pm1r",
    B0n5ga8: "f16eln5f",
    s924m2: ["fa2okxs", "fg4zq3l"],
    B1q35kw: "ff6932p",
    Gp14am: ["fg4zq3l", "fa2okxs"],
    Bi91k9c: "fx9teim",
    Jwef8y: "fg59vm4"
  },
  subtle: {
    De3pzq: "fhovq9v",
    E5pizo: "f1couhl3",
    B0n5ga8: "f16gxe2i",
    s924m2: ["fpgykix", "fzybk4o"],
    B1q35kw: "f1osi826",
    Gp14am: ["fzybk4o", "fpgykix"]
  },
  subtleInteractive: {
    Bceei9c: "f1k6fduh",
    De3pzq: "fhovq9v",
    E5pizo: "f1couhl3",
    B0n5ga8: "f16gxe2i",
    s924m2: ["fpgykix", "fzybk4o"],
    B1q35kw: "f1osi826",
    Gp14am: ["fzybk4o", "fpgykix"],
    Bi91k9c: "feu1g3u",
    Jwef8y: "f1t94bn6",
    ecr2s2: "f1wfn5kd"
  },
  subtleInteractiveSelected: {
    De3pzq: "fq5gl1p",
    B0n5ga8: "f16eln5f",
    s924m2: ["fa2okxs", "fg4zq3l"],
    B1q35kw: "ff6932p",
    Gp14am: ["fg4zq3l", "fa2okxs"],
    Bi91k9c: "fx9teim",
    Jwef8y: "f1uqaxdt"
  },
  highContrastSelected: {
    ycbfsm: "fkc42ay",
    Bsw6fvg: "f1rirnrt",
    Bbusuzp: "f1lkg8j3",
    xgfqdd: "f1nkj0oa",
    Bmmdzwq: "fey3rwa",
    zkpvhj: ["f5jhx11", "fff9uym"],
    B20bydw: "fm7n0jy",
    Bwwwggl: ["fff9uym", "f5jhx11"]
  },
  highContrastInteractive: {
    h1vhog: "fpfvv3l",
    kslmdy: "f1oamsm6",
    Baaf6ca: "f1il21bs",
    x9zz3d: "fnn5dk0",
    Bmmdzwq: "fey3rwa",
    zkpvhj: ["f5jhx11", "fff9uym"],
    B20bydw: "fm7n0jy",
    Bwwwggl: ["fff9uym", "f5jhx11"]
  },
  select: {
    qhf8xq: "f1euv43f",
    Bhzewxz: "fqclxi7",
    j35jbq: ["fiv86kb", "f36uhnt"],
    Bj3rh1h: "f19g0ac"
  },
  hiddenCheckbox: {
    B68tc82: 0,
    Bmxbyg5: 0,
    Bpg54ce: "f1a3p1vp",
    a9b677: "frkrog8",
    Bqenvij: "f1mpe4l3",
    qhf8xq: "f1euv43f",
    Bh84pgu: "fmf1zke",
    Bgl5zvf: "f1wch0ki",
    Huce71: "fz5stix"
  }
}, {
  f: [".ftqa4ok:focus{outline-style:none;}"],
  i: [".f2hkw1w:focus-visible{outline-style:none;}"],
  d: [".f8hki3x[data-fui-focus-visible]{border-top-color:transparent;}", ".f1d2448m[data-fui-focus-visible]{border-right-color:transparent;}", ".ffh67wi[data-fui-focus-visible]{border-left-color:transparent;}", ".f1bjia2o[data-fui-focus-visible]{border-bottom-color:transparent;}", '.f15bsgw9[data-fui-focus-visible]::after{content:"";}', ".f14e48fq[data-fui-focus-visible]::after{position:absolute;}", ".f18yb2kv[data-fui-focus-visible]::after{pointer-events:none;}", ".fd6o370[data-fui-focus-visible]::after{z-index:1;}", [".fpqizxz[data-fui-focus-visible]::after{border:var(--strokeWidthThick) solid var(--colorStrokeFocus2);}", {
    p: -2
  }], [".fnd8nzh[data-fui-focus-visible]::after{border-radius:var(--fui-Card--border-radius);}", {
    p: -1
  }], ".f15fr7a0[data-fui-focus-visible]::after{top:calc(0px - var(--strokeWidthThick) - -2px);}", ".fwsq40z[data-fui-focus-visible]::after{right:calc(0px - var(--strokeWidthThick) - -2px);}", ".fy0y4wt[data-fui-focus-visible]::after{left:calc(0px - var(--strokeWidthThick) - -2px);}", ".f34ld9f[data-fui-focus-visible]::after{bottom:calc(0px - var(--strokeWidthThick) - -2px);}", ".f1b1k54r[data-fui-focus-within]:focus-within{border-top-color:transparent;}", ".f4ne723[data-fui-focus-within]:focus-within{border-right-color:transparent;}", ".fqqcjud[data-fui-focus-within]:focus-within{border-left-color:transparent;}", ".fh7aioi[data-fui-focus-within]:focus-within{border-bottom-color:transparent;}", '.ffht0p2[data-fui-focus-within]:focus-within::after{content:"";}', ".f1p0ul1q[data-fui-focus-within]:focus-within::after{position:absolute;}", ".f1c901ms[data-fui-focus-within]:focus-within::after{pointer-events:none;}", ".f1alokd7[data-fui-focus-within]:focus-within::after{z-index:1;}", [".f1i978nd[data-fui-focus-within]:focus-within::after{border:var(--strokeWidthThick) solid var(--colorStrokeFocus2);}", {
    p: -2
  }], [".f1nh8hsq[data-fui-focus-within]:focus-within::after{border-radius:var(--fui-Card--border-radius);}", {
    p: -1
  }], ".f1amxum7[data-fui-focus-within]:focus-within::after{top:calc(0px - var(--strokeWidthThick) - -2px);}", ".f1cec8w7[data-fui-focus-within]:focus-within::after{right:calc(0px - var(--strokeWidthThick) - -2px);}", ".f554mv0[data-fui-focus-within]:focus-within::after{left:calc(0px - var(--strokeWidthThick) - -2px);}", ".f1sj6kbr[data-fui-focus-within]:focus-within::after{bottom:calc(0px - var(--strokeWidthThick) - -2px);}", ".f1063pyq{flex-direction:row;}", ".f122n59{align-items:center;}", ".ftrw7vg>.fui-CardPreview{margin-top:calc(var(--fui-Card--size) * -1);}", ".f18opajm>.fui-CardPreview{margin-bottom:calc(var(--fui-Card--size) * -1);}", '.f13002it>:not([aria-hidden="true"]).fui-CardPreview:first-of-type{margin-left:calc(var(--fui-Card--size) * -1);}', '.fqo182t>:not([aria-hidden="true"]).fui-CardPreview:first-of-type{margin-right:calc(var(--fui-Card--size) * -1);}', '.f18yna97>:not([aria-hidden="true"]).fui-CardPreview:last-of-type{margin-right:calc(var(--fui-Card--size) * -1);}', '.f1kd6wh7>:not([aria-hidden="true"]).fui-CardPreview:last-of-type{margin-left:calc(var(--fui-Card--size) * -1);}', ".f4i4759>.fui-CardHeader:last-of-type,.f4i4759>.fui-CardFooter:last-of-type{flex-grow:1;}", ".f1vx9l62{flex-direction:column;}", ".f14k419y>.fui-CardPreview{margin-left:calc(var(--fui-Card--size) * -1);}", ".f1fgo9fz>.fui-CardPreview{margin-right:calc(var(--fui-Card--size) * -1);}", '.fvqmfsm>:not([aria-hidden="true"]).fui-CardPreview:first-of-type{margin-top:calc(var(--fui-Card--size) * -1);}', ".f3am6yf>.fui-Card__floatingAction+.fui-CardPreview{margin-top:calc(var(--fui-Card--size) * -1);}", '.f1r5wgso>:not([aria-hidden="true"]).fui-CardPreview:last-of-type{margin-bottom:calc(var(--fui-Card--size) * -1);}', ".f1pi9uxy{--fui-Card--size:8px;}", ".f1h1zgly{--fui-Card--border-radius:var(--borderRadiusSmall);}", ".frsmuga{--fui-Card--size:12px;}", ".fuldkky{--fui-Card--border-radius:var(--borderRadiusMedium);}", ".f1qua4xo{--fui-Card--size:16px;}", ".fimkt6v{--fui-Card--border-radius:var(--borderRadiusLarge);}", ".f1epqm3e .fui-Text{color:currentColor;}", ".fxugw4r{background-color:var(--colorNeutralBackground1);}", ".f1whvlc6{box-shadow:var(--shadow4);}", ".f16gxe2i::after{border-top-color:var(--colorTransparentStroke);}", ".fpgykix::after{border-right-color:var(--colorTransparentStroke);}", ".fzybk4o::after{border-left-color:var(--colorTransparentStroke);}", ".f1osi826::after{border-bottom-color:var(--colorTransparentStroke);}", ".f1k6fduh{cursor:pointer;}", ".f1nfm20t{background-color:var(--colorNeutralBackground1Selected);}", ".f16eln5f::after{border-top-color:var(--colorNeutralStroke1Selected);}", ".fa2okxs::after{border-right-color:var(--colorNeutralStroke1Selected);}", ".fg4zq3l::after{border-left-color:var(--colorNeutralStroke1Selected);}", ".ff6932p::after{border-bottom-color:var(--colorNeutralStroke1Selected);}", ".f1dmdbja{background-color:var(--colorNeutralBackground2);}", ".fjxa0vh{background-color:var(--colorNeutralBackground2Selected);}", ".f1c21dwh{background-color:var(--colorTransparentBackground);}", ".f1couhl3{box-shadow:none;}", ".ft83z1f::after{border-top-color:var(--colorNeutralStroke1);}", ".f1g4150c::after{border-right-color:var(--colorNeutralStroke1);}", ".f192dr6e::after{border-left-color:var(--colorNeutralStroke1);}", ".f1qnawh6::after{border-bottom-color:var(--colorNeutralStroke1);}", ".f1q9pm1r{background-color:var(--colorTransparentBackgroundSelected);}", ".fhovq9v{background-color:var(--colorSubtleBackground);}", ".fq5gl1p{background-color:var(--colorSubtleBackgroundSelected);}", ".f1euv43f{position:absolute;}", ".fqclxi7{top:4px;}", ".fiv86kb{right:4px;}", ".f36uhnt{left:4px;}", ".f19g0ac{z-index:1;}", [".f1a3p1vp{overflow:hidden;}", {
    p: -1
  }], ".frkrog8{width:1px;}", ".f1mpe4l3{height:1px;}", ".fmf1zke{clip:rect(0 0 0 0);}", ".f1wch0ki{clip-path:inset(50%);}", ".fz5stix{white-space:nowrap;}"],
  m: [["@media (forced-colors: active){.f226i61[data-fui-focus-visible]::after{border-top-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f13kzufm[data-fui-focus-visible]::after{border-right-color:Highlight;}.fsx75g8[data-fui-focus-visible]::after{border-left-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.flujwa2[data-fui-focus-visible]::after{border-bottom-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1k55ka9[data-fui-focus-within]:focus-within::after{border-top-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f16pcs8n[data-fui-focus-within]:focus-within::after{border-left-color:Highlight;}.fgclinu[data-fui-focus-within]:focus-within::after{border-right-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fycbxed[data-fui-focus-within]:focus-within::after{border-bottom-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fkc42ay{forced-color-adjust:none;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1rirnrt{background-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1lkg8j3{color:HighlightText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1nkj0oa .fui-CardPreview,.f1nkj0oa .fui-CardFooter{forced-color-adjust:auto;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fey3rwa::after{border-top-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f5jhx11::after{border-right-color:Highlight;}.fff9uym::after{border-left-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fm7n0jy::after{border-bottom-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fpfvv3l:hover,.fpfvv3l :active{forced-color-adjust:none;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1oamsm6:hover,.f1oamsm6 :active{background-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1il21bs:hover,.f1il21bs :active{color:HighlightText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fnn5dk0:hover .fui-CardPreview,.fnn5dk0 :active .fui-CardPreview,.fnn5dk0:hover .fui-CardFooter,.fnn5dk0 :active .fui-CardFooter{forced-color-adjust:auto;}}", {
    m: "(forced-colors: active)"
  }]],
  h: [".feu1g3u:hover{color:var(--colorNeutralForeground1Hover);}", ".f1knas48:hover{background-color:var(--colorNeutralBackground1Hover);}", ".f1m145df:hover{box-shadow:var(--shadow8);}", ".fx9teim:hover{color:var(--colorNeutralForeground1Selected);}", ".f1kz6goq:hover{background-color:var(--colorNeutralBackground1Selected);}", ".fnwyq0v:hover{color:var(--colorNeutralForeground2Hover);}", ".f1uvynv3:hover{background-color:var(--colorNeutralBackground2Hover);}", ".f1luvkty:hover{color:var(--colorNeutralForeground2Selected);}", ".fehi0vp:hover{background-color:var(--colorNeutralBackground2Selected);}", ".fjxutwb:hover{background-color:var(--colorTransparentBackgroundHover);}", ".f1llr77y:hover::after{border-top-color:var(--colorNeutralStroke1Hover);}", ".fzk0khw:hover::after{border-right-color:var(--colorNeutralStroke1Hover);}", ".fjj8tog:hover::after{border-left-color:var(--colorNeutralStroke1Hover);}", ".fb1u8ub:hover::after{border-bottom-color:var(--colorNeutralStroke1Hover);}", ".fg59vm4:hover{background-color:var(--colorTransparentBackgroundSelected);}", ".f1t94bn6:hover{background-color:var(--colorSubtleBackgroundHover);}", ".f1uqaxdt:hover{background-color:var(--colorSubtleBackgroundSelected);}"],
  a: [".fb40n2d:active{background-color:var(--colorNeutralBackground1Pressed);}", ".f1yhgkbh:active{background-color:var(--colorNeutralBackground2Pressed);}", ".fophhak:active{background-color:var(--colorTransparentBackgroundPressed);}", ".f1uohb70:active::after{border-top-color:var(--colorNeutralStroke1Pressed);}", ".f1jm7v1n:active::after{border-right-color:var(--colorNeutralStroke1Pressed);}", ".f1bus3rq:active::after{border-left-color:var(--colorNeutralStroke1Pressed);}", ".f1fbu7rr:active::after{border-bottom-color:var(--colorNeutralStroke1Pressed);}", ".f1wfn5kd:active{background-color:var(--colorSubtleBackgroundPressed);}"]
});
var useCardStyles_unstable = (state) => {
  "use no memo";
  const resetStyles = useCardResetStyles();
  const styles = useCardStyles();
  const orientationMap = {
    horizontal: styles.orientationHorizontal,
    vertical: styles.orientationVertical
  };
  const sizeMap = {
    small: styles.sizeSmall,
    medium: styles.sizeMedium,
    large: styles.sizeLarge
  };
  const appearanceMap = {
    filled: styles.filled,
    "filled-alternative": styles.filledAlternative,
    outline: styles.outline,
    subtle: styles.subtle
  };
  const selectedMap = {
    filled: styles.filledInteractiveSelected,
    "filled-alternative": styles.filledAlternativeInteractiveSelected,
    outline: styles.outlineInteractiveSelected,
    subtle: styles.subtleInteractiveSelected
  };
  const interactiveMap = {
    filled: styles.filledInteractive,
    "filled-alternative": styles.filledAlternativeInteractive,
    outline: styles.outlineInteractive,
    subtle: styles.subtleInteractive
  };
  const isSelectableOrInteractive = state.interactive || state.selectable;
  const focusedClassName = React331.useMemo(() => {
    if (state.selectable) {
      if (state.selectFocused) {
        return styles.selectableFocused;
      }
      return "";
    }
    return styles.focused;
  }, [state.selectFocused, state.selectable, styles.focused, styles.selectableFocused]);
  state.root.className = mergeClasses(cardClassNames.root, resetStyles, orientationMap[state.orientation], sizeMap[state.size], appearanceMap[state.appearance], isSelectableOrInteractive && styles.interactive, isSelectableOrInteractive && interactiveMap[state.appearance], state.selected && selectedMap[state.appearance], focusedClassName, isSelectableOrInteractive && styles.highContrastInteractive, state.selected && styles.highContrastSelected, state.root.className);
  if (state.floatingAction) {
    state.floatingAction.className = mergeClasses(cardClassNames.floatingAction, styles.select, state.floatingAction.className);
  }
  if (state.checkbox) {
    state.checkbox.className = mergeClasses(cardClassNames.checkbox, styles.hiddenCheckbox, state.checkbox.className);
  }
  return state;
};

// node_modules/@fluentui/react-card/lib/components/Card/useCardContextValue.js
function useCardContextValue({ selectableA11yProps }) {
  return {
    selectableA11yProps
  };
}

// node_modules/@fluentui/react-card/lib/components/Card/Card.js
var Card = React332.forwardRef((props, ref) => {
  const state = useCard_unstable(props, ref);
  const cardContextValue = useCardContextValue(state);
  useCardStyles_unstable(state);
  return renderCard_unstable(state, cardContextValue);
});
Card.displayName = "Card";

// node_modules/@fluentui/react-card/lib/components/Card/Card.types.js
var React333 = __toESM(require_react());

// node_modules/@fluentui/react-card/lib/components/CardFooter/CardFooter.js
var React335 = __toESM(require_react());

// node_modules/@fluentui/react-card/lib/components/CardFooter/useCardFooter.js
var React334 = __toESM(require_react());
var useCardFooter_unstable = (props, ref) => {
  const { action } = props;
  return {
    components: {
      root: "div",
      action: "div"
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      // FIXME:
      // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`
      // but since it would be a breaking change to fix it, we are casting ref to it's proper type
      ref,
      ...props
    }), {
      elementType: "div"
    }),
    action: slot_exports.optional(action, {
      elementType: "div"
    })
  };
};

// node_modules/@fluentui/react-card/lib/components/CardFooter/renderCardFooter.js
var renderCardFooter_unstable = (state) => {
  assertSlots(state);
  return jsxs(state.root, {
    children: [
      state.root.children,
      state.action && jsx(state.action, {})
    ]
  });
};

// node_modules/@fluentui/react-card/lib/components/CardFooter/CardFooter.js
var CardFooter = React335.forwardRef((props, ref) => {
  const state = useCardFooter_unstable(props, ref);
  useCardFooterStyles_unstable(state);
  return renderCardFooter_unstable(state);
});
CardFooter.displayName = "CardFooter";

// node_modules/@fluentui/react-card/lib/components/CardHeader/CardHeader.js
var React337 = __toESM(require_react());

// node_modules/@fluentui/react-card/lib/components/CardHeader/useCardHeader.js
var React336 = __toESM(require_react());
function getChildWithId(header) {
  function isReactElementWithIdProp(element) {
    return React336.isValidElement(element) && Boolean(element.props.id);
  }
  return React336.Children.toArray(header).find(isReactElementWithIdProp);
}
function getReferenceId(headerId, childWithId, generatedId) {
  if (headerId) {
    return headerId;
  }
  if (childWithId === null || childWithId === void 0 ? void 0 : childWithId.props.id) {
    return childWithId.props.id;
  }
  return generatedId;
}
var useCardHeader_unstable = (props, ref) => {
  const { image, header, description, action } = props;
  const { selectableA11yProps: { referenceId, setReferenceId } } = useCardContext_unstable();
  const headerRef = React336.useRef(null);
  const hasChildId = React336.useRef(false);
  const generatedId = useId(cardHeaderClassNames.header, referenceId);
  const headerSlot = slot_exports.optional(header, {
    renderByDefault: true,
    defaultProps: {
      ref: headerRef,
      id: !hasChildId.current ? referenceId : void 0
    },
    elementType: "div"
  });
  React336.useEffect(() => {
    var _headerRef_current;
    const headerId = !hasChildId.current ? (_headerRef_current = headerRef.current) === null || _headerRef_current === void 0 ? void 0 : _headerRef_current.id : void 0;
    const childWithId = getChildWithId(headerSlot === null || headerSlot === void 0 ? void 0 : headerSlot.children);
    hasChildId.current = Boolean(childWithId);
    setReferenceId(getReferenceId(headerId, childWithId, generatedId));
  }, [
    generatedId,
    header,
    headerSlot,
    setReferenceId
  ]);
  return {
    components: {
      root: "div",
      image: "div",
      header: "div",
      description: "div",
      action: "div"
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      // FIXME:
      // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`
      // but since it would be a breaking change to fix it, we are casting ref to it's proper type
      ref,
      ...props
    }), {
      elementType: "div"
    }),
    image: slot_exports.optional(image, {
      elementType: "div"
    }),
    header: headerSlot,
    description: slot_exports.optional(description, {
      elementType: "div"
    }),
    action: slot_exports.optional(action, {
      elementType: "div"
    })
  };
};

// node_modules/@fluentui/react-card/lib/components/CardHeader/renderCardHeader.js
var renderCardHeader_unstable = (state) => {
  assertSlots(state);
  return jsxs(state.root, {
    children: [
      state.image && jsx(state.image, {}),
      state.header && jsx(state.header, {}),
      state.description && jsx(state.description, {}),
      state.action && jsx(state.action, {})
    ]
  });
};

// node_modules/@fluentui/react-card/lib/components/CardHeader/CardHeader.js
var CardHeader = React337.forwardRef((props, ref) => {
  const state = useCardHeader_unstable(props, ref);
  useCardHeaderStyles_unstable(state);
  return renderCardHeader_unstable(state);
});
CardHeader.displayName = "CardHeader";

// node_modules/@fluentui/react-card/lib/components/CardPreview/CardPreview.js
var React339 = __toESM(require_react());

// node_modules/@fluentui/react-card/lib/components/CardPreview/useCardPreview.js
var React338 = __toESM(require_react());
var useCardPreview_unstable = (props, ref) => {
  const { logo } = props;
  const { selectableA11yProps: { referenceLabel, referenceId, setReferenceLabel, setReferenceId } } = useCardContext_unstable();
  const previewRef = useMergedRefs(ref, React338.useRef(null));
  React338.useEffect(() => {
    if (referenceLabel && referenceId) {
      return;
    }
    if (previewRef.current && previewRef.current.parentNode) {
      const img = previewRef.current.parentNode.querySelector(`.${cardPreviewClassNames.root} > img`);
      if (img) {
        const ariaLabel = img.getAttribute("aria-label");
        const ariaDescribedby = img.getAttribute("aria-describedby");
        if (ariaDescribedby) {
          setReferenceId(ariaDescribedby);
        } else if (img.alt) {
          setReferenceLabel(img.alt);
        } else if (ariaLabel) {
          setReferenceLabel(ariaLabel);
        }
      }
    }
  }, [
    setReferenceLabel,
    referenceLabel,
    previewRef,
    referenceId,
    setReferenceId
  ]);
  return {
    components: {
      root: "div",
      logo: "div"
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      ref: previewRef,
      ...props
    }), {
      elementType: "div"
    }),
    logo: slot_exports.optional(logo, {
      elementType: "div"
    })
  };
};

// node_modules/@fluentui/react-card/lib/components/CardPreview/renderCardPreview.js
var renderCardPreview_unstable = (state) => {
  assertSlots(state);
  return jsxs(state.root, {
    children: [
      state.root.children,
      state.logo && jsx(state.logo, {})
    ]
  });
};

// node_modules/@fluentui/react-card/lib/components/CardPreview/CardPreview.js
var CardPreview = React339.forwardRef((props, ref) => {
  const state = useCardPreview_unstable(props, ref);
  useCardPreviewStyles_unstable(state);
  return renderCardPreview_unstable(state);
});
CardPreview.displayName = "CardPreview";

// node_modules/@fluentui/react-toast/lib/state/types.js
var React340 = __toESM(require_react());

// node_modules/@fluentui/react-toast/lib/state/useToaster.js
var React342 = __toESM(require_react());

// node_modules/@fluentui/react-toast/lib/state/constants.js
var EVENTS = {
  show: "fui-toast-show",
  dismiss: "fui-toast-dismiss",
  dismissAll: "fui-toast-dismiss-all",
  update: "fui-toast-update",
  pause: "fui-toast-pause",
  play: "fui-toast-play"
};
var TOAST_POSITIONS = {
  bottom: "bottom",
  bottomEnd: "bottom-end",
  bottomStart: "bottom-start",
  top: "top",
  topEnd: "top-end",
  topStart: "top-start"
};

// node_modules/@fluentui/react-toast/lib/state/vanilla/dispatchToast.js
var counter = 0;
function dispatchToast(content, options = {}, targetDocument) {
  var _options_toastId;
  const detail = {
    ...options,
    content,
    toastId: (_options_toastId = options.toastId) !== null && _options_toastId !== void 0 ? _options_toastId : (counter++).toString()
  };
  const event = new CustomEvent(EVENTS.show, {
    bubbles: false,
    cancelable: false,
    detail
  });
  targetDocument.dispatchEvent(event);
}

// node_modules/@fluentui/react-toast/lib/state/vanilla/dismissToast.js
function dismissToast(toastId, toasterId = void 0, targetDocument) {
  const event = new CustomEvent(EVENTS.dismiss, {
    bubbles: false,
    cancelable: false,
    detail: {
      toastId,
      toasterId
    }
  });
  targetDocument.dispatchEvent(event);
}

// node_modules/@fluentui/react-toast/lib/state/vanilla/dismissAllToasts.js
function dismissAllToasts(toasterId = void 0, targetDocument) {
  const event = new CustomEvent(EVENTS.dismissAll, {
    bubbles: false,
    cancelable: false,
    detail: {
      toasterId
    }
  });
  targetDocument.dispatchEvent(event);
}

// node_modules/@fluentui/react-toast/lib/state/vanilla/updateToast.js
function updateToast(options, targetDocument) {
  const event = new CustomEvent(EVENTS.update, {
    bubbles: false,
    cancelable: false,
    detail: options
  });
  targetDocument.dispatchEvent(event);
}

// node_modules/@fluentui/react-toast/lib/state/vanilla/pauseToast.js
function pauseToast(toastId, toasterId = void 0, targetDocument) {
  const event = new CustomEvent(EVENTS.pause, {
    bubbles: false,
    cancelable: false,
    detail: {
      toastId,
      toasterId
    }
  });
  targetDocument.dispatchEvent(event);
}

// node_modules/@fluentui/react-toast/lib/state/vanilla/playToast.js
function playToast(toastId, toasterId = void 0, targetDocument) {
  const event = new CustomEvent(EVENTS.play, {
    bubbles: false,
    cancelable: false,
    detail: {
      toastId,
      toasterId
    }
  });
  targetDocument.dispatchEvent(event);
}

// node_modules/@fluentui/react-toast/lib/state/vanilla/createToaster.js
var React341 = __toESM(require_react());
function assignDefined(a, b) {
  for (const [key, prop] of Object.entries(b)) {
    if (prop != void 0) {
      a[key] = prop;
    }
  }
}
var defaulToastOptions = {
  onStatusChange: void 0,
  priority: 0,
  pauseOnHover: false,
  pauseOnWindowBlur: false,
  position: "bottom-end",
  timeout: 3e3
};
var counter2 = 0;
function createToaster(options) {
  const { limit = Number.POSITIVE_INFINITY } = options;
  const visibleToasts = /* @__PURE__ */ new Set();
  const toasts = /* @__PURE__ */ new Map();
  const queue = createPriorityQueue((ta, tb) => {
    const a = toasts.get(ta);
    const b = toasts.get(tb);
    if (!a || !b) {
      return 0;
    }
    if (a.priority === b.priority) {
      return a.order - b.order;
    }
    return a.priority - b.priority;
  });
  const isToastVisible = (toastId) => {
    return visibleToasts.has(toastId);
  };
  const updateToast2 = (toastOptions) => {
    const { toastId } = toastOptions;
    const toastToUpdate = toasts.get(toastId);
    if (!toastToUpdate) {
      return;
    }
    Object.assign(toastToUpdate, toastOptions);
    toastToUpdate.updateId++;
  };
  const dismissToast2 = (toastId) => {
    visibleToasts.delete(toastId);
  };
  const dismissAllToasts2 = () => {
    visibleToasts.clear();
    queue.clear();
  };
  const buildToast = (toastOptions, onUpdate) => {
    var _toast_onStatusChange;
    const { toastId, content, toasterId } = toastOptions;
    if (toasts.has(toastId)) {
      return;
    }
    const close = () => {
      var _toast_onStatusChange2;
      const toast2 = toasts.get(toastId);
      if (!toast2) {
        return;
      }
      visibleToasts.delete(toastId);
      onUpdate();
      (_toast_onStatusChange2 = toast2.onStatusChange) === null || _toast_onStatusChange2 === void 0 ? void 0 : _toast_onStatusChange2.call(toast2, null, {
        status: "dismissed",
        ...toast2
      });
    };
    const remove = () => {
      const toast2 = toasts.get(toastId);
      if (!toast2) {
        return;
      }
      toasts.delete(toastId);
      if (visibleToasts.size < limit && queue.peek()) {
        const nextToast = toasts.get(queue.dequeue());
        if (!nextToast) {
          return;
        }
        visibleToasts.add(nextToast.toastId);
      }
      onUpdate();
    };
    const toast = {
      ...defaulToastOptions,
      close,
      remove,
      toastId,
      content,
      updateId: 0,
      toasterId,
      order: counter2++,
      data: {},
      imperativeRef: React341.createRef()
    };
    assignDefined(toast, options);
    assignDefined(toast, toastOptions);
    toasts.set(toastId, toast);
    (_toast_onStatusChange = toast.onStatusChange) === null || _toast_onStatusChange === void 0 ? void 0 : _toast_onStatusChange.call(toast, null, {
      status: "queued",
      ...toast
    });
    if (visibleToasts.size >= limit) {
      queue.enqueue(toastId);
    } else {
      visibleToasts.add(toastId);
    }
  };
  return {
    buildToast,
    dismissAllToasts: dismissAllToasts2,
    dismissToast: dismissToast2,
    isToastVisible,
    updateToast: updateToast2,
    visibleToasts,
    toasts
  };
}

// node_modules/@fluentui/react-toast/lib/state/vanilla/getPositionStyles.js
var getPositionStyles = (position, dir, offset) => {
  const positionStyles = {};
  var _offset_position;
  const offsetStyles = offset ? isShorthandOffset(offset) ? offset : (_offset_position = offset[position]) !== null && _offset_position !== void 0 ? _offset_position : {} : {};
  const centered = position === "top" || position === "bottom";
  const { horizontal = centered ? 0 : 20, vertical = 16 } = offsetStyles;
  const start = dir === "ltr" ? "left" : "right";
  const end = dir === "ltr" ? "right" : "left";
  switch (position) {
    case "top":
      Object.assign(positionStyles, {
        top: vertical,
        left: `calc(50% + ${horizontal}px)`,
        transform: "translateX(-50%)"
      });
      break;
    case "bottom":
      Object.assign(positionStyles, {
        bottom: vertical,
        left: `calc(50% + ${horizontal}px)`,
        transform: "translateX(-50%)"
      });
      break;
    case "top-start":
      Object.assign(positionStyles, {
        top: vertical,
        [start]: horizontal
      });
      break;
    case "top-end":
      Object.assign(positionStyles, {
        top: vertical,
        [end]: horizontal
      });
      break;
    case "bottom-start":
      Object.assign(positionStyles, {
        bottom: vertical,
        [start]: horizontal
      });
      break;
    case "bottom-end":
      Object.assign(positionStyles, {
        bottom: vertical,
        [end]: horizontal
      });
      break;
  }
  return positionStyles;
};
function isShorthandOffset(offset) {
  return "horizontal" in offset || "vertical" in offset;
}

// node_modules/@fluentui/react-toast/lib/state/useToaster.js
function useToaster(options = {}) {
  const forceUpdate = useForceUpdate();
  const { toasterId: userToasterId, shortcuts } = options;
  const [toaster] = React342.useState(() => createToaster(options));
  const { targetDocument } = useFluent();
  const lastActiveElementRef = React342.useRef(null);
  const isCorrectToaster = useEventCallback((toasterId) => {
    return toasterId === userToasterId;
  });
  const isFocusShortcut = useEventCallback((e) => {
    if (shortcuts === null || shortcuts === void 0 ? void 0 : shortcuts.focus) {
      return shortcuts.focus(e);
    }
  });
  const pauseAllToasts = React342.useCallback(() => {
    toaster.visibleToasts.forEach((toastId) => {
      var _toast_imperativeRef_current;
      const toast = toaster.toasts.get(toastId);
      toast === null || toast === void 0 ? void 0 : (_toast_imperativeRef_current = toast.imperativeRef.current) === null || _toast_imperativeRef_current === void 0 ? void 0 : _toast_imperativeRef_current.pause();
    });
  }, [
    toaster
  ]);
  const playAllToasts = React342.useCallback(() => {
    toaster.visibleToasts.forEach((toastId) => {
      var _toast_imperativeRef_current;
      const toast = toaster.toasts.get(toastId);
      toast === null || toast === void 0 ? void 0 : (_toast_imperativeRef_current = toast.imperativeRef.current) === null || _toast_imperativeRef_current === void 0 ? void 0 : _toast_imperativeRef_current.play();
    });
  }, [
    toaster
  ]);
  const getMostRecentVisibleToast = React342.useCallback(() => {
    return Array.from(toaster.visibleToasts).reduce((cur, next) => {
      const toast = toaster.toasts.get(next);
      if (!toast) {
        return cur;
      }
      if (!cur) {
        return toast;
      }
      if (cur.order < (toast === null || toast === void 0 ? void 0 : toast.order)) {
        return toast;
      }
      return cur;
    }, void 0);
  }, [
    toaster
  ]);
  const tryRestoreFocus = React342.useCallback(() => {
    const mostRecentToast = getMostRecentVisibleToast();
    if (mostRecentToast === null || mostRecentToast === void 0 ? void 0 : mostRecentToast.imperativeRef.current) {
      mostRecentToast.imperativeRef.current.focus();
    } else {
      var _lastActiveElementRef_current;
      (_lastActiveElementRef_current = lastActiveElementRef.current) === null || _lastActiveElementRef_current === void 0 ? void 0 : _lastActiveElementRef_current.focus();
      lastActiveElementRef.current = null;
    }
  }, [
    getMostRecentVisibleToast
  ]);
  const closeAllToasts = React342.useCallback(() => {
    toaster.visibleToasts.forEach((toastId) => {
      const toast = toaster.toasts.get(toastId);
      toast === null || toast === void 0 ? void 0 : toast.close();
    });
    tryRestoreFocus();
  }, [
    toaster,
    tryRestoreFocus
  ]);
  React342.useEffect(() => {
    if (!targetDocument) {
      return;
    }
    const addToastListener = (eventType, callback) => {
      const listener = (e) => {
        if (!isCorrectToaster(e.detail.toasterId)) {
          return;
        }
        callback(e);
        forceUpdate();
      };
      targetDocument.addEventListener(eventType, listener);
      return () => targetDocument.removeEventListener(eventType, listener);
    };
    const buildToast = (e) => {
      toaster.buildToast(e.detail, forceUpdate);
    };
    const dismissToast2 = (e) => {
      toaster.dismissToast(e.detail.toastId);
    };
    const updateToast2 = (e) => {
      toaster.updateToast(e.detail);
    };
    const dismissAllToasts2 = (e) => {
      toaster.dismissAllToasts();
    };
    const pauseToast2 = (e) => {
      const toast = toaster.toasts.get(e.detail.toastId);
      if (toast) {
        var _toast_imperativeRef_current;
        (_toast_imperativeRef_current = toast.imperativeRef.current) === null || _toast_imperativeRef_current === void 0 ? void 0 : _toast_imperativeRef_current.pause();
      }
    };
    const playToast2 = (e) => {
      const toast = toaster.toasts.get(e.detail.toastId);
      if (toast) {
        var _toast_imperativeRef_current;
        (_toast_imperativeRef_current = toast.imperativeRef.current) === null || _toast_imperativeRef_current === void 0 ? void 0 : _toast_imperativeRef_current.play();
      }
    };
    const cleanupBuildListener = addToastListener(EVENTS.show, buildToast);
    const cleanupUpdateListener = addToastListener(EVENTS.update, updateToast2);
    const cleanupDismissListener = addToastListener(EVENTS.dismiss, dismissToast2);
    const cleanupDismissAllListener = addToastListener(EVENTS.dismissAll, dismissAllToasts2);
    const cleanupPauseListener = addToastListener(EVENTS.pause, pauseToast2);
    const cleanupPlayListener = addToastListener(EVENTS.play, playToast2);
    const focusShortcutListener = (e) => {
      if (isFocusShortcut(e)) {
        pauseAllToasts();
        const mostRecentToast = getMostRecentVisibleToast();
        if (mostRecentToast) {
          var _mostRecentToast_imperativeRef_current;
          lastActiveElementRef.current = isHTMLElement(targetDocument.activeElement) ? targetDocument.activeElement : null;
          (_mostRecentToast_imperativeRef_current = mostRecentToast.imperativeRef.current) === null || _mostRecentToast_imperativeRef_current === void 0 ? void 0 : _mostRecentToast_imperativeRef_current.focus();
        }
      }
    };
    targetDocument.addEventListener("keydown", focusShortcutListener);
    return () => {
      cleanupBuildListener();
      cleanupDismissAllListener();
      cleanupUpdateListener();
      cleanupDismissListener();
      cleanupPauseListener();
      cleanupPlayListener();
      targetDocument.removeEventListener("keydown", focusShortcutListener);
    };
  }, [
    toaster,
    forceUpdate,
    targetDocument,
    isCorrectToaster,
    pauseAllToasts,
    getMostRecentVisibleToast,
    isFocusShortcut
  ]);
  const toastsToRender = (() => {
    if (!toaster) {
      return /* @__PURE__ */ new Map();
    }
    const toRender = /* @__PURE__ */ new Map();
    const toasts = Array.from(toaster.toasts.values());
    toasts.forEach((toast) => {
      const { position } = toast;
      toRender.has(position) || toRender.set(position, []);
      if (position.startsWith("bottom")) {
        toRender.get(position).push(toast);
      } else {
        toRender.get(position).unshift(toast);
      }
    });
    return toRender;
  })();
  return {
    isToastVisible: toaster.isToastVisible,
    toastsToRender,
    pauseAllToasts,
    playAllToasts,
    tryRestoreFocus,
    closeAllToasts
  };
}

// node_modules/@fluentui/react-toast/lib/state/useToastController.js
var React343 = __toESM(require_react());
var noop5 = () => void 0;
function useToastController(toasterId) {
  const { targetDocument } = useFluent();
  return React343.useMemo(() => {
    if (!targetDocument) {
      return {
        dispatchToast: noop5,
        dismissToast: noop5,
        dismissAllToasts: noop5,
        updateToast: noop5,
        pauseToast: noop5,
        playToast: noop5
      };
    }
    return {
      dispatchToast: (content, options) => {
        dispatchToast(content, {
          ...options,
          toasterId,
          data: {
            root: options === null || options === void 0 ? void 0 : options.root
          }
        }, targetDocument);
      },
      dismissToast: (toastId) => {
        dismissToast(toastId, toasterId, targetDocument);
      },
      dismissAllToasts: () => {
        dismissAllToasts(toasterId, targetDocument);
      },
      updateToast: (options) => {
        updateToast({
          ...options,
          data: {
            root: options.root
          },
          toasterId
        }, targetDocument);
      },
      pauseToast: (toastId) => {
        pauseToast(toastId, toasterId, targetDocument);
      },
      playToast: (toastId) => {
        playToast(toastId, toasterId, targetDocument);
      }
    };
  }, [
    targetDocument,
    toasterId
  ]);
}

// node_modules/@fluentui/react-toast/lib/components/ToastTrigger/ToastTrigger.js
var React346 = __toESM(require_react());

// node_modules/@fluentui/react-toast/lib/components/ToastTrigger/useToastTrigger.js
var React345 = __toESM(require_react());

// node_modules/@fluentui/react-toast/lib/contexts/toastContainerContext.js
var React344 = __toESM(require_react());
var toastContainerContextDefaultValue = {
  close: () => null,
  intent: void 0,
  bodyId: "",
  titleId: ""
};
var ToastContainerContext = React344.createContext(void 0);
var ToastContainerContextProvider = ToastContainerContext.Provider;
var useToastContainerContext = () => {
  var _React_useContext;
  return (_React_useContext = React344.useContext(ToastContainerContext)) !== null && _React_useContext !== void 0 ? _React_useContext : toastContainerContextDefaultValue;
};

// node_modules/@fluentui/react-toast/lib/components/ToastTrigger/useToastTrigger.js
var useToastTrigger_unstable = (props) => {
  const { children: children2, disableButtonEnhancement = false } = props;
  const { close } = useToastContainerContext();
  const child = getTriggerChild(children2);
  const handleClick = useEventCallback((e) => {
    var _child_props_onClick, _child_props;
    child === null || child === void 0 ? void 0 : (_child_props_onClick = (_child_props = child.props).onClick) === null || _child_props_onClick === void 0 ? void 0 : _child_props_onClick.call(_child_props, e);
    if (!e.isDefaultPrevented()) {
      close();
    }
  });
  const triggerChildProps = {
    ...child === null || child === void 0 ? void 0 : child.props,
    ref: child === null || child === void 0 ? void 0 : child.ref,
    onClick: handleClick
  };
  const ariaButtonTriggerChildProps = useARIAButtonProps((child === null || child === void 0 ? void 0 : child.type) === "button" || (child === null || child === void 0 ? void 0 : child.type) === "a" ? child.type : "div", {
    ...triggerChildProps,
    type: "button"
  });
  return {
    children: applyTriggerPropsToChildren(children2, disableButtonEnhancement ? triggerChildProps : ariaButtonTriggerChildProps)
  };
};

// node_modules/@fluentui/react-toast/lib/components/ToastTrigger/renderToastTrigger.js
var renderToastTrigger_unstable = (state) => state.children;

// node_modules/@fluentui/react-toast/lib/components/ToastTrigger/ToastTrigger.js
var ToastTrigger = (props) => {
  const state = useToastTrigger_unstable(props);
  return renderToastTrigger_unstable(state);
};
ToastTrigger.displayName = "ToastTrigger";

// node_modules/@fluentui/react-toast/lib/components/ToastTrigger/ToastTrigger.types.js
var React347 = __toESM(require_react());

// node_modules/@fluentui/react-toast/lib/components/Toaster/Toaster.js
var React359 = __toESM(require_react());

// node_modules/@fluentui/react-toast/lib/components/Toaster/useToaster.js
var React355 = __toESM(require_react());

// node_modules/@fluentui/react-toast/lib/components/ToastContainer/ToastContainer.js
var React351 = __toESM(require_react());

// node_modules/@fluentui/react-toast/lib/components/ToastContainer/useToastContainer.js
var React349 = __toESM(require_react());

// node_modules/@fluentui/react-toast/lib/components/Timer/Timer.js
var React348 = __toESM(require_react());

// node_modules/@fluentui/react-toast/lib/components/Timer/useTimerStyles.styles.js
var useBaseAnimationStyles = __resetStyles("r16zaflb", "r75casi", [".r16zaflb{animation-name:rsacmq1;}", "@keyframes rsacmq1{from{opacity:0;}to{opacity:0;}}", ".r75casi{animation-name:rsacmq1;}"]);

// node_modules/@fluentui/react-toast/lib/components/Timer/Timer.js
var Timer = React348.forwardRef((props, ref) => {
  const baseAnimationStyles = useBaseAnimationStyles();
  const { running, timeout: timeout2, onTimeout } = props;
  const style = {
    animationDuration: `${timeout2}ms`,
    animationPlayState: running ? "running" : "paused"
  };
  if (timeout2 < 0) {
    return null;
  }
  return React348.createElement("span", {
    onAnimationEnd: onTimeout,
    "data-timer-status": style.animationPlayState,
    ref,
    style,
    className: baseAnimationStyles
  });
});
Timer.displayName = "Timer";

// node_modules/@fluentui/react-toast/lib/components/ToastContainer/useToastContainer.js
var intentPolitenessMap = {
  success: "assertive",
  warning: "assertive",
  error: "assertive",
  info: "polite"
};
var useToastContainer_unstable = (props, ref) => {
  const { visible, children: children2, close: closeProp, remove, updateId, announce, data, timeout: timerTimeout, politeness: desiredPoliteness, intent = "info", pauseOnHover, pauseOnWindowBlur, imperativeRef, tryRestoreFocus, ...rest } = props;
  const titleId = useId("toast-title");
  const bodyId = useId("toast-body");
  const toastRef = React349.useRef(null);
  const { targetDocument } = useFluent();
  const [running, setRunning] = React349.useState(false);
  const imperativePauseRef = React349.useRef(false);
  const focusedToastBeforeClose = React349.useRef(false);
  const focusableGroupAttribute = useFocusableGroup({
    tabBehavior: "limited-trap-focus",
    // Users should only use Tab to focus into the toast
    // Escape is already reserved to dismiss all toasts
    ignoreDefaultKeydown: {
      Tab: true,
      Escape: true,
      Enter: true
    }
  });
  const close = useEventCallback(() => {
    var _toastRef_current;
    const activeElement = targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.activeElement;
    if (activeElement && ((_toastRef_current = toastRef.current) === null || _toastRef_current === void 0 ? void 0 : _toastRef_current.contains(activeElement))) {
      focusedToastBeforeClose.current = true;
    }
    closeProp();
  });
  const onStatusChange = useEventCallback((status) => {
    var _props_onStatusChange;
    return (_props_onStatusChange = props.onStatusChange) === null || _props_onStatusChange === void 0 ? void 0 : _props_onStatusChange.call(props, null, {
      status,
      ...props
    });
  });
  const pause = useEventCallback(() => setRunning(false));
  const play = useEventCallback(() => {
    var _toastRef_current;
    if (imperativePauseRef.current) {
      return;
    }
    var _targetDocument_activeElement;
    const containsActive = !!((_toastRef_current = toastRef.current) === null || _toastRef_current === void 0 ? void 0 : _toastRef_current.contains((_targetDocument_activeElement = targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.activeElement) !== null && _targetDocument_activeElement !== void 0 ? _targetDocument_activeElement : null));
    if (timerTimeout < 0) {
      setRunning(true);
      return;
    }
    if (!containsActive) {
      setRunning(true);
    }
  });
  React349.useImperativeHandle(imperativeRef, () => ({
    focus: () => {
      if (!toastRef.current) {
        return;
      }
      toastRef.current.focus();
    },
    play: () => {
      imperativePauseRef.current = false;
      play();
    },
    pause: () => {
      imperativePauseRef.current = true;
      pause();
    }
  }));
  React349.useEffect(() => {
    return () => onStatusChange("unmounted");
  }, [
    onStatusChange
  ]);
  React349.useEffect(() => {
    if (!targetDocument) {
      return;
    }
    if (pauseOnWindowBlur) {
      var _targetDocument_defaultView, _targetDocument_defaultView1;
      (_targetDocument_defaultView = targetDocument.defaultView) === null || _targetDocument_defaultView === void 0 ? void 0 : _targetDocument_defaultView.addEventListener("focus", play);
      (_targetDocument_defaultView1 = targetDocument.defaultView) === null || _targetDocument_defaultView1 === void 0 ? void 0 : _targetDocument_defaultView1.addEventListener("blur", pause);
      return () => {
        var _targetDocument_defaultView2, _targetDocument_defaultView12;
        (_targetDocument_defaultView2 = targetDocument.defaultView) === null || _targetDocument_defaultView2 === void 0 ? void 0 : _targetDocument_defaultView2.removeEventListener("focus", play);
        (_targetDocument_defaultView12 = targetDocument.defaultView) === null || _targetDocument_defaultView12 === void 0 ? void 0 : _targetDocument_defaultView12.removeEventListener("blur", pause);
      };
    }
  }, [
    targetDocument,
    pause,
    play,
    pauseOnWindowBlur
  ]);
  const userRootSlot = data.root;
  const onMotionFinish = React349.useCallback((_, { direction }) => {
    if (direction === "exit") {
      remove();
    }
    if (direction === "enter") {
      play();
      onStatusChange("visible");
    }
  }, [
    onStatusChange,
    play,
    remove
  ]);
  const onMouseEnter = useEventCallback((e) => {
    var _userRootSlot_onMouseEnter;
    pause();
    userRootSlot === null || userRootSlot === void 0 ? void 0 : (_userRootSlot_onMouseEnter = userRootSlot.onMouseEnter) === null || _userRootSlot_onMouseEnter === void 0 ? void 0 : _userRootSlot_onMouseEnter.call(userRootSlot, e);
  });
  const onMouseLeave = useEventCallback((e) => {
    var _userRootSlot_onMouseEnter;
    play();
    userRootSlot === null || userRootSlot === void 0 ? void 0 : (_userRootSlot_onMouseEnter = userRootSlot.onMouseEnter) === null || _userRootSlot_onMouseEnter === void 0 ? void 0 : _userRootSlot_onMouseEnter.call(userRootSlot, e);
  });
  const { findFirstFocusable, findLastFocusable } = useFocusFinders();
  const onKeyDown = useEventCallback((e) => {
    var _userRootSlot_onKeyDown;
    if (e.key === Delete) {
      e.preventDefault();
      close();
    }
    if (e.key === Tab && e.currentTarget === e.target) {
      e.preventDefault();
      if (e.shiftKey) {
        var _findLastFocusable;
        (_findLastFocusable = findLastFocusable(e.currentTarget)) === null || _findLastFocusable === void 0 ? void 0 : _findLastFocusable.focus();
      } else {
        var _findFirstFocusable;
        (_findFirstFocusable = findFirstFocusable(e.currentTarget)) === null || _findFirstFocusable === void 0 ? void 0 : _findFirstFocusable.focus();
      }
    }
    userRootSlot === null || userRootSlot === void 0 ? void 0 : (_userRootSlot_onKeyDown = userRootSlot.onKeyDown) === null || _userRootSlot_onKeyDown === void 0 ? void 0 : _userRootSlot_onKeyDown.call(userRootSlot, e);
  });
  React349.useEffect(() => {
    var _toastRef_current;
    if (!visible) {
      return;
    }
    const politeness = desiredPoliteness !== null && desiredPoliteness !== void 0 ? desiredPoliteness : intentPolitenessMap[intent];
    var _toastRef_current_textContent;
    announce((_toastRef_current_textContent = (_toastRef_current = toastRef.current) === null || _toastRef_current === void 0 ? void 0 : _toastRef_current.textContent) !== null && _toastRef_current_textContent !== void 0 ? _toastRef_current_textContent : "", {
      politeness
    });
  }, [
    announce,
    desiredPoliteness,
    toastRef,
    visible,
    updateId,
    intent
  ]);
  React349.useEffect(() => {
    return () => {
      if (focusedToastBeforeClose.current) {
        focusedToastBeforeClose.current = false;
        tryRestoreFocus();
      }
    };
  }, [
    tryRestoreFocus
  ]);
  return {
    components: {
      timer: Timer,
      root: "div"
    },
    timer: slot_exports.always({
      onTimeout: close,
      running,
      timeout: timerTimeout !== null && timerTimeout !== void 0 ? timerTimeout : -1
    }, {
      elementType: Timer
    }),
    root: slot_exports.always(getIntrinsicElementProps("div", {
      // FIXME:
      // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`
      // but since it would be a breaking change to fix it, we are casting ref to it's proper type
      ref: useMergedRefs(ref, toastRef),
      children: children2,
      tabIndex: 0,
      role: "listitem",
      "aria-labelledby": titleId,
      "aria-describedby": bodyId,
      ...rest,
      ...userRootSlot,
      ...focusableGroupAttribute,
      onMouseEnter,
      onMouseLeave,
      onKeyDown
    }), {
      elementType: "div"
    }),
    timerTimeout,
    transitionTimeout: 0,
    running,
    visible,
    remove,
    close,
    onTransitionEntering: () => {
    },
    updateId,
    nodeRef: toastRef,
    intent,
    titleId,
    bodyId,
    onMotionFinish
  };
};

// node_modules/@fluentui/react-toast/lib/components/ToastContainer/ToastContainerMotion.js
var ToastContainerMotion = createPresenceComponent(({ element }) => ({
  enter: [
    {
      keyframes: [
        {
          marginTop: 0,
          minHeight: 0,
          maxHeight: 0,
          opacity: 0
        },
        {
          marginTop: "16px",
          minHeight: 44,
          maxHeight: `${element.scrollHeight}px`,
          opacity: 0
        }
      ],
      duration: 200
    },
    {
      keyframes: [
        {
          opacity: 0
        },
        {
          opacity: 1
        }
      ],
      delay: 200,
      duration: 400
    }
  ],
  exit: [
    {
      keyframes: [
        {
          marginTop: "16px",
          minHeight: 44,
          maxHeight: `${element.scrollHeight}px`
        },
        {
          marginTop: 0,
          minHeight: 0,
          maxHeight: 0
        }
      ],
      delay: 400,
      duration: 200
    },
    {
      keyframes: [
        {
          opacity: 1
        },
        {
          opacity: 0
        }
      ],
      duration: 400
    }
  ]
}));

// node_modules/@fluentui/react-toast/lib/components/ToastContainer/renderToastContainer.js
var renderToastContainer_unstable = (state, contextValues) => {
  const { onMotionFinish, visible, updateId } = state;
  assertSlots(state);
  return jsx(ToastContainerContextProvider, {
    value: contextValues.toast,
    children: jsx(ToastContainerMotion, {
      appear: true,
      onMotionFinish,
      visible,
      unmountOnExit: true,
      children: jsxs(state.root, {
        children: [
          state.root.children,
          jsx(state.timer, {}, updateId)
        ]
      })
    })
  });
};

// node_modules/@fluentui/react-toast/lib/components/ToastContainer/useToastContainerStyles.styles.js
var toastContainerClassNames = {
  root: "fui-ToastContainer",
  timer: "fui-ToastContainer__timer"
};
var useRootBaseClassName6 = __resetStyles("r98b696", null, [".r98b696{box-sizing:border-box;margin-top:16px;pointer-events:all;border-radius:var(--borderRadiusMedium);}", ".r98b696[data-fui-focus-visible]{outline:var(--strokeWidthThick) solid var(--colorStrokeFocus2);}"]);
var useToastContainerStyles_unstable = (state) => {
  "use no memo";
  const rootBaseClassName = useRootBaseClassName6();
  state.root.className = mergeClasses(toastContainerClassNames.root, rootBaseClassName, state.root.className);
  return state;
};

// node_modules/@fluentui/react-toast/lib/components/ToastContainer/useToastContainerContextValues.js
var React350 = __toESM(require_react());
function useToastContainerContextValues_unstable(state) {
  const { close, intent, titleId, bodyId } = state;
  const toastContainerContext = React350.useMemo(() => ({
    close,
    intent,
    titleId,
    bodyId
  }), [
    close,
    intent,
    titleId,
    bodyId
  ]);
  return {
    toast: toastContainerContext
  };
}

// node_modules/@fluentui/react-toast/lib/components/ToastContainer/ToastContainer.js
var ToastContainer = React351.forwardRef((props, ref) => {
  const state = useToastContainer_unstable(props, ref);
  useToastContainerStyles_unstable(state);
  return renderToastContainer_unstable(state, useToastContainerContextValues_unstable(state));
});
ToastContainer.displayName = "ToastContainer";

// node_modules/@fluentui/react-toast/lib/components/ToastContainer/ToastContainer.types.js
var React352 = __toESM(require_react());

// node_modules/@fluentui/react-toast/lib/components/Toaster/useToasterFocusManagement.js
var React353 = __toESM(require_react());
var noop6 = () => void 0;
function useToasterFocusManagement_unstable(pauseAllToasts, playAllToasts) {
  const { targetDocument } = useFluent();
  const cleanupListenersRef = React353.useRef(noop6);
  return React353.useCallback((el) => {
    if (!el || !targetDocument) {
      cleanupListenersRef.current();
      cleanupListenersRef.current = noop6;
      return;
    }
    const toastContainerWalker = targetDocument.createTreeWalker(el, NodeFilter.SHOW_ELEMENT, {
      acceptNode(node) {
        if (isHTMLElement(node) && node.classList.contains(toastContainerClassNames.root)) {
          return NodeFilter.FILTER_ACCEPT;
        }
        return NodeFilter.FILTER_SKIP;
      }
    });
    const keydownListener = (e) => {
      const { target, key } = e;
      if (!isHTMLElement(target)) {
        return;
      }
      if (key === ArrowDown) {
        toastContainerWalker.currentNode = target;
        let nextToastContainer = toastContainerWalker.nextNode();
        if (!nextToastContainer) {
          toastContainerWalker.currentNode = el;
          nextToastContainer = toastContainerWalker.nextNode();
        }
        if (isHTMLElement(nextToastContainer)) {
          nextToastContainer.focus();
        }
      }
      if (key === ArrowUp) {
        toastContainerWalker.currentNode = target;
        let prevToastContainer = toastContainerWalker.previousNode();
        if (prevToastContainer && prevToastContainer.contains(target)) {
          prevToastContainer = toastContainerWalker.previousNode();
        }
        if (!prevToastContainer) {
          toastContainerWalker.currentNode = el;
          prevToastContainer = toastContainerWalker.lastChild();
        }
        if (isHTMLElement(prevToastContainer)) {
          prevToastContainer.focus();
        }
      }
    };
    const focusInListener = (e) => {
      if (isHTMLElement(e.currentTarget) && !e.currentTarget.contains(isHTMLElement(e.relatedTarget) ? e.relatedTarget : null)) {
        pauseAllToasts();
      }
    };
    const focusOutListener = (e) => {
      if (isHTMLElement(e.currentTarget) && !e.currentTarget.contains(isHTMLElement(e.relatedTarget) ? e.relatedTarget : null)) {
        playAllToasts();
      }
    };
    el.addEventListener("keydown", keydownListener);
    el.addEventListener("focusin", focusInListener);
    el.addEventListener("focusout", focusOutListener);
    cleanupListenersRef.current = () => {
      el.removeEventListener("keydown", keydownListener);
      el.removeEventListener("focusin", focusInListener);
      el.removeEventListener("focusout", focusOutListener);
    };
  }, [
    targetDocument,
    pauseAllToasts,
    playAllToasts
  ]);
}

// node_modules/@fluentui/react-toast/lib/components/Toaster/useToastAnnounce.js
var React354 = __toESM(require_react());
function useToastAnnounce(announce) {
  const activeRef = React354.useRef(true);
  const cleanupRef = React354.useRef(() => void 0);
  const announceToast = React354.useCallback((message, options) => {
    if (activeRef.current) {
      announce(message, options);
    }
  }, [
    announce
  ]);
  const toasterRef = React354.useCallback((el) => {
    if (!el) {
      cleanupRef.current();
      return;
    }
    const onFocusIn = (e) => {
      if (isHTMLElement(e.currentTarget) && e.currentTarget.contains(isHTMLElement(e.relatedTarget) ? e.relatedTarget : null)) {
        return;
      }
      activeRef.current = false;
    };
    const onFocusOut = (e) => {
      if (isHTMLElement(e.currentTarget) && e.currentTarget.contains(isHTMLElement(e.relatedTarget) ? e.relatedTarget : null)) {
        return;
      }
      activeRef.current = true;
    };
    el.addEventListener("focusin", onFocusIn);
    el.addEventListener("focusout", onFocusOut);
    cleanupRef.current = () => {
      el.removeEventListener("focusin", onFocusIn);
      el.removeEventListener("focusout", onFocusOut);
    };
  }, []);
  return {
    announceToast,
    toasterRef
  };
}

// node_modules/@fluentui/react-toast/lib/components/Toaster/useToaster.js
var useToaster_unstable = (props) => {
  "use no memo";
  const { offset, announce: announceProp, mountNode, inline = false, ...rest } = props;
  const announceRef = React355.useRef(() => null);
  const { toastsToRender, isToastVisible, pauseAllToasts, playAllToasts, tryRestoreFocus, closeAllToasts } = useToaster(rest);
  const announce = React355.useCallback((message, options) => announceRef.current(message, options), []);
  const { dir } = useFluent();
  const rootProps = slot_exports.always(getIntrinsicElementProps("div", rest), {
    elementType: "div"
  });
  const focusableGroupAttr = useFocusableGroup({
    tabBehavior: "limited-trap-focus",
    ignoreDefaultKeydown: {
      Escape: true
    }
  });
  const onKeyDown = useEventCallback((e) => {
    var _props_onKeyDown;
    if (e.key === Escape) {
      e.preventDefault();
      closeAllToasts();
    }
    (_props_onKeyDown = props.onKeyDown) === null || _props_onKeyDown === void 0 ? void 0 : _props_onKeyDown.call(props, e);
  });
  const usePositionSlot = (toastPosition) => {
    var _toastsToRender_get;
    const focusManagementRef = useToasterFocusManagement_unstable(pauseAllToasts, playAllToasts);
    const { announceToast, toasterRef } = useToastAnnounce(announceProp !== null && announceProp !== void 0 ? announceProp : announce);
    return slot_exports.optional(toastsToRender.has(toastPosition) ? rootProps : null, {
      defaultProps: {
        ref: useMergedRefs(focusManagementRef, toasterRef),
        children: (_toastsToRender_get = toastsToRender.get(toastPosition)) === null || _toastsToRender_get === void 0 ? void 0 : _toastsToRender_get.map((toast) => React355.createElement(ToastContainer, {
          ...toast,
          tryRestoreFocus,
          intent: toast.intent,
          announce: announceToast,
          key: toast.toastId,
          visible: isToastVisible(toast.toastId)
        }, toast.content)),
        onKeyDown,
        ...focusableGroupAttr,
        "data-toaster-position": toastPosition,
        role: "list"
      },
      elementType: "div"
    });
  };
  return {
    dir,
    mountNode,
    components: {
      root: "div",
      bottomStart: "div",
      bottomEnd: "div",
      topStart: "div",
      topEnd: "div",
      top: "div",
      bottom: "div"
    },
    root: slot_exports.always(rootProps, {
      elementType: "div"
    }),
    bottomStart: usePositionSlot(TOAST_POSITIONS.bottomStart),
    bottomEnd: usePositionSlot(TOAST_POSITIONS.bottomEnd),
    topStart: usePositionSlot(TOAST_POSITIONS.topStart),
    topEnd: usePositionSlot(TOAST_POSITIONS.topEnd),
    top: usePositionSlot(TOAST_POSITIONS.top),
    bottom: usePositionSlot(TOAST_POSITIONS.bottom),
    announceRef,
    offset,
    announce: announceProp !== null && announceProp !== void 0 ? announceProp : announce,
    renderAriaLive: !announceProp,
    inline
  };
};

// node_modules/@fluentui/react-toast/lib/components/AriaLive/AriaLive.js
var React357 = __toESM(require_react());

// node_modules/@fluentui/react-toast/lib/components/AriaLive/useAriaLive.js
var React356 = __toESM(require_react());
var MESSAGE_DURATION2 = 500;
var useAriaLive_unstable = (props) => {
  const [currentMessage, setCurrentMessage] = React356.useState(void 0);
  const order = React356.useRef(0);
  const [messageQueue] = React356.useState(() => createPriorityQueue((a, b) => {
    if (a.politeness === b.politeness) {
      return a.createdAt - b.createdAt;
    }
    return a.politeness === "assertive" ? -1 : 1;
  }));
  const announce = useEventCallback((message, options) => {
    const { politeness } = options;
    if (message === (currentMessage === null || currentMessage === void 0 ? void 0 : currentMessage.message)) {
      return;
    }
    const liveMessage = {
      message,
      politeness,
      createdAt: order.current++
    };
    if (!currentMessage) {
      setCurrentMessage(liveMessage);
    } else {
      messageQueue.enqueue(liveMessage);
    }
  });
  const [setMessageTimeout, clearMessageTimeout] = useTimeout();
  React356.useEffect(() => {
    setMessageTimeout(() => {
      if (messageQueue.peek()) {
        setCurrentMessage(messageQueue.dequeue());
      } else {
        setCurrentMessage(void 0);
      }
    }, MESSAGE_DURATION2);
    return () => clearMessageTimeout();
  }, [
    currentMessage,
    messageQueue,
    setMessageTimeout,
    clearMessageTimeout
  ]);
  React356.useImperativeHandle(props.announceRef, () => announce);
  const politeMessage = (currentMessage === null || currentMessage === void 0 ? void 0 : currentMessage.politeness) === "polite" ? currentMessage.message : void 0;
  const assertiveMessage = (currentMessage === null || currentMessage === void 0 ? void 0 : currentMessage.politeness) === "assertive" ? currentMessage.message : void 0;
  return {
    components: {
      assertive: "div",
      polite: "div"
    },
    assertive: slot_exports.always(props.assertive, {
      defaultProps: {
        "aria-live": "assertive",
        children: assertiveMessage
      },
      elementType: "div"
    }),
    polite: slot_exports.always(props.polite, {
      defaultProps: {
        "aria-live": "polite",
        children: politeMessage
      },
      elementType: "div"
    })
  };
};

// node_modules/@fluentui/react-toast/lib/components/AriaLive/renderAriaLive.js
var renderAriaLive_unstable = (state) => {
  assertSlots(state);
  return jsxs(import_react.Fragment, {
    children: [
      jsx(state.assertive, {}),
      jsx(state.polite, {})
    ]
  });
};

// node_modules/@fluentui/react-toast/lib/components/AriaLive/useAriaLiveStyles.styles.js
var ariaLiveClassNames = {
  assertive: "fui-AriaLive__assertive",
  polite: "fui-AriaLive__polite"
};
var useResetStyles3 = __resetStyles("rrd10u0", null, [".rrd10u0{clip:rect(0px, 0px, 0px, 0px);height:1px;margin:-1px;overflow:hidden;padding:0px;width:1px;position:absolute;}"]);
var useAriaLiveStyles_unstable = (state) => {
  "use no memo";
  const visuallyHidden = useResetStyles3();
  state.assertive.className = mergeClasses(visuallyHidden, ariaLiveClassNames.assertive, state.assertive.className);
  state.polite.className = mergeClasses(visuallyHidden, ariaLiveClassNames.polite, state.polite.className);
  return state;
};

// node_modules/@fluentui/react-toast/lib/components/AriaLive/AriaLive.js
var AriaLive = (props) => {
  const state = useAriaLive_unstable(props);
  useAriaLiveStyles_unstable(state);
  return renderAriaLive_unstable(state);
};
AriaLive.displayName = "AriaLive";

// node_modules/@fluentui/react-toast/lib/components/AriaLive/AriaLive.types.js
var React358 = __toESM(require_react());

// node_modules/@fluentui/react-toast/lib/components/Toaster/renderToaster.js
var renderToaster_unstable = (state) => {
  const { announceRef, renderAriaLive, inline, mountNode } = state;
  assertSlots(state);
  const hasToasts = !!state.bottomStart || !!state.bottomEnd || !!state.topStart || !!state.topEnd || !!state.top || !!state.bottom;
  const ariaLive = renderAriaLive ? jsx(AriaLive, {
    announceRef
  }) : null;
  const positionSlots = jsxs(import_react.Fragment, {
    children: [
      state.bottom ? jsx(state.bottom, {}) : null,
      state.bottomStart ? jsx(state.bottomStart, {}) : null,
      state.bottomEnd ? jsx(state.bottomEnd, {}) : null,
      state.topStart ? jsx(state.topStart, {}) : null,
      state.topEnd ? jsx(state.topEnd, {}) : null,
      state.top ? jsx(state.top, {}) : null
    ]
  });
  if (inline) {
    return jsxs(import_react.Fragment, {
      children: [
        ariaLive,
        hasToasts ? positionSlots : null
      ]
    });
  }
  return jsxs(import_react.Fragment, {
    children: [
      ariaLive,
      hasToasts ? jsx(Portal, {
        mountNode,
        children: positionSlots
      }) : null
    ]
  });
};

// node_modules/@fluentui/react-toast/lib/components/Toaster/useToasterStyles.styles.js
var toasterClassNames = {
  root: "fui-Toaster"
};
var useRootBaseClassName7 = __resetStyles("r3hfdjz", null, [".r3hfdjz{position:fixed;width:292px;pointer-events:none;}"]);
var useToasterStyles = __styles2({
  inline: {
    qhf8xq: "f1euv43f"
  }
}, {
  d: [".f1euv43f{position:absolute;}"]
});
var useToasterStyles_unstable = (state) => {
  "use no memo";
  const rootBaseClassName = useRootBaseClassName7();
  const styles = useToasterStyles();
  const className = mergeClasses(toasterClassNames.root, rootBaseClassName, state.inline && styles.inline, state.root.className);
  if (state.bottomStart) {
    var _state_bottomStart;
    state.bottomStart.className = className;
    var _style;
    (_style = (_state_bottomStart = state.bottomStart).style) !== null && _style !== void 0 ? _style : _state_bottomStart.style = {};
    Object.assign(state.bottomStart.style, getPositionStyles(TOAST_POSITIONS.bottomStart, state.dir, state.offset));
  }
  if (state.bottomEnd) {
    var _state_bottomEnd;
    state.bottomEnd.className = className;
    var _style1;
    (_style1 = (_state_bottomEnd = state.bottomEnd).style) !== null && _style1 !== void 0 ? _style1 : _state_bottomEnd.style = {};
    Object.assign(state.bottomEnd.style, getPositionStyles(TOAST_POSITIONS.bottomEnd, state.dir, state.offset));
  }
  if (state.topStart) {
    var _state_topStart;
    state.topStart.className = className;
    var _style2;
    (_style2 = (_state_topStart = state.topStart).style) !== null && _style2 !== void 0 ? _style2 : _state_topStart.style = {};
    Object.assign(state.topStart.style, getPositionStyles(TOAST_POSITIONS.topStart, state.dir, state.offset));
  }
  if (state.topEnd) {
    var _state_topEnd;
    state.topEnd.className = className;
    var _style3;
    (_style3 = (_state_topEnd = state.topEnd).style) !== null && _style3 !== void 0 ? _style3 : _state_topEnd.style = {};
    Object.assign(state.topEnd.style, getPositionStyles(TOAST_POSITIONS.topEnd, state.dir, state.offset));
  }
  if (state.top) {
    var _state_top;
    state.top.className = className;
    var _style4;
    (_style4 = (_state_top = state.top).style) !== null && _style4 !== void 0 ? _style4 : _state_top.style = {};
    Object.assign(state.top.style, getPositionStyles(TOAST_POSITIONS.top, state.dir, state.offset));
  }
  if (state.bottom) {
    var _state_bottom;
    state.bottom.className = className;
    var _style5;
    (_style5 = (_state_bottom = state.bottom).style) !== null && _style5 !== void 0 ? _style5 : _state_bottom.style = {};
    Object.assign(state.bottom.style, getPositionStyles(TOAST_POSITIONS.bottom, state.dir, state.offset));
  }
  return state;
};

// node_modules/@fluentui/react-toast/lib/components/Toaster/Toaster.js
var Toaster = (props) => {
  const state = useToaster_unstable(props);
  useToasterStyles_unstable(state);
  useCustomStyleHook("useToasterStyles_unstable")(state);
  return renderToaster_unstable(state);
};
Toaster.displayName = "Toaster";

// node_modules/@fluentui/react-toast/lib/components/Toast/Toast.js
var React361 = __toESM(require_react());

// node_modules/@fluentui/react-toast/lib/components/Toast/useToast.js
var React360 = __toESM(require_react());
var useToast_unstable = (props, ref) => {
  return {
    components: {
      root: "div"
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      // FIXME:
      // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`
      // but since it would be a breaking change to fix it, we are casting ref to it's proper type
      ref,
      ...props
    }), {
      elementType: "div"
    }),
    backgroundAppearance: props.appearance
  };
};

// node_modules/@fluentui/react-toast/lib/components/Toast/renderToast.js
var renderToast_unstable = (state, contextValues) => {
  assertSlots(state);
  return jsx(BackgroundAppearanceProvider, {
    value: contextValues.backgroundAppearance,
    children: jsx(state.root, {})
  });
};

// node_modules/@fluentui/react-toast/lib/components/Toast/useToastStyles.styles.js
var toastClassNames = {
  root: "fui-Toast"
};
var useRootBaseClassName8 = __resetStyles("rhf7k35", null, [".rhf7k35{display:grid;grid-template-columns:auto 1fr auto;padding:12px;border-radius:var(--borderRadiusMedium);border:1px solid var(--colorTransparentStroke);box-shadow:var(--shadow8);font-size:var(--fontSizeBase300);line-height:20px;font-weight:var(--fontWeightSemibold);color:var(--colorNeutralForeground1);background-color:var(--colorNeutralBackground1);}"]);
var useStyles45 = __styles2({
  inverted: {
    sj55zd: "f1w7i9ko",
    De3pzq: "f5pduvr"
  }
}, {
  d: [".f1w7i9ko{color:var(--colorNeutralForegroundInverted2);}", ".f5pduvr{background-color:var(--colorNeutralBackgroundInverted);}"]
});
var useToastStyles_unstable = (state) => {
  "use no memo";
  const rootBaseClassName = useRootBaseClassName8();
  const styles = useStyles45();
  state.root.className = mergeClasses(toastClassNames.root, rootBaseClassName, state.backgroundAppearance === "inverted" && styles.inverted, state.root.className);
  return state;
};

// node_modules/@fluentui/react-toast/lib/components/Toast/useToastContextValues.js
function useToastContextValues_unstable(state) {
  const { backgroundAppearance } = state;
  return {
    backgroundAppearance
  };
}

// node_modules/@fluentui/react-toast/lib/components/Toast/Toast.js
var Toast = React361.forwardRef((props, ref) => {
  const state = useToast_unstable(props, ref);
  useToastStyles_unstable(state);
  return renderToast_unstable(state, useToastContextValues_unstable(state));
});
Toast.displayName = "Toast";

// node_modules/@fluentui/react-toast/lib/components/ToastTitle/ToastTitle.js
var React363 = __toESM(require_react());

// node_modules/@fluentui/react-toast/lib/components/ToastTitle/useToastTitle.js
var React362 = __toESM(require_react());
var useToastTitle_unstable = (props, ref) => {
  const { intent, titleId } = useToastContainerContext();
  const backgroundAppearance = useBackgroundAppearance();
  let defaultIcon;
  switch (intent) {
    case "success":
      defaultIcon = React362.createElement(CheckmarkCircleFilled, null);
      break;
    case "error":
      defaultIcon = React362.createElement(DismissCircleFilled, null);
      break;
    case "warning":
      defaultIcon = React362.createElement(WarningFilled, null);
      break;
    case "info":
      defaultIcon = React362.createElement(InfoFilled, null);
      break;
  }
  return {
    action: slot_exports.optional(props.action, {
      elementType: "div"
    }),
    components: {
      root: "div",
      media: "div",
      action: "div"
    },
    media: slot_exports.optional(props.media, {
      renderByDefault: !!intent,
      defaultProps: {
        children: defaultIcon
      },
      elementType: "div"
    }),
    root: slot_exports.always(getIntrinsicElementProps("div", {
      // FIXME:
      // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`
      // but since it would be a breaking change to fix it, we are casting ref to it's proper type
      ref,
      children: props.children,
      id: titleId,
      ...props
    }), {
      elementType: "div"
    }),
    intent,
    backgroundAppearance
  };
};

// node_modules/@fluentui/react-toast/lib/components/ToastTitle/renderToastTitle.js
var renderToastTitle_unstable = (state) => {
  assertSlots(state);
  return jsxs(import_react.Fragment, {
    children: [
      state.media ? jsx(state.media, {}) : null,
      jsx(state.root, {}),
      state.action ? jsx(state.action, {}) : null
    ]
  });
};

// node_modules/@fluentui/react-toast/lib/components/ToastTitle/useToastTitleStyles.styles.js
var toastTitleClassNames = {
  root: "fui-ToastTitle",
  media: "fui-ToastTitle__media",
  action: "fui-ToastTitle__action"
};
var useRootBaseClassName9 = __resetStyles("rdjap1e", null, [".rdjap1e{display:flex;grid-column-end:3;color:var(--colorNeutralForeground1);word-break:break-word;}"]);
var useMediaBaseClassName = __resetStyles("r8x5mrd", "r1soj19y", [".r8x5mrd{display:flex;padding-top:2px;grid-column-end:2;padding-right:8px;font-size:16px;color:var(--colorNeutralForeground1);}", ".r1soj19y{display:flex;padding-top:2px;grid-column-end:2;padding-left:8px;font-size:16px;color:var(--colorNeutralForeground1);}"]);
var useActionBaseClassName = __resetStyles("r2j19ip", "rjfozdo", [".r2j19ip{display:flex;align-items:start;padding-left:12px;grid-column-end:-1;color:var(--colorBrandForeground1);}", ".rjfozdo{display:flex;align-items:start;padding-right:12px;grid-column-end:-1;color:var(--colorBrandForeground1);}"]);
var useInvertedStyles = __styles2({
  root: {
    sj55zd: "f1w7i9ko"
  },
  action: {
    sj55zd: "f1qz2gb0"
  },
  media: {
    sj55zd: "fqpbvvt"
  }
}, {
  d: [".f1w7i9ko{color:var(--colorNeutralForegroundInverted2);}", ".f1qz2gb0{color:var(--colorBrandForegroundInverted);}", ".fqpbvvt{color:var(--colorNeutralForegroundInverted);}"]
});
var useIntentIconStyles = __styles2({
  success: {
    sj55zd: "f36rra6"
  },
  error: {
    sj55zd: "f1ca9wz"
  },
  warning: {
    sj55zd: "f13isgzr"
  },
  info: {
    sj55zd: "fkfq4zb"
  }
}, {
  d: [".f36rra6{color:var(--colorStatusSuccessForeground1);}", ".f1ca9wz{color:var(--colorStatusDangerForeground1);}", ".f13isgzr{color:var(--colorStatusWarningForeground1);}", ".fkfq4zb{color:var(--colorNeutralForeground2);}"]
});
var useIntentIconStylesInverted = __styles2({
  success: {
    sj55zd: "ff3wk4x"
  },
  error: {
    sj55zd: "fbq2gqr"
  },
  warning: {
    sj55zd: "fx6hq1t"
  },
  info: {
    sj55zd: "f1w7i9ko"
  }
}, {
  d: [".ff3wk4x{color:var(--colorStatusSuccessForegroundInverted);}", ".fbq2gqr{color:var(--colorStatusDangerForegroundInverted);}", ".fx6hq1t{color:var(--colorStatusWarningForegroundInverted);}", ".f1w7i9ko{color:var(--colorNeutralForegroundInverted2);}"]
});
var useToastTitleStyles_unstable = (state) => {
  "use no memo";
  const rootBaseClassName = useRootBaseClassName9();
  const actionBaseClassName = useActionBaseClassName();
  const mediaBaseClassName = useMediaBaseClassName();
  const intentIconStyles = useIntentIconStyles();
  const intentIconStylesInverted = useIntentIconStylesInverted();
  const {
    intent
  } = state;
  const invertedStyles = useInvertedStyles();
  state.root.className = mergeClasses(toastTitleClassNames.root, rootBaseClassName, state.backgroundAppearance === "inverted" && invertedStyles.root, state.root.className);
  if (state.media) {
    state.media.className = mergeClasses(toastTitleClassNames.media, mediaBaseClassName, state.backgroundAppearance === "inverted" && invertedStyles.media, state.media.className, intent && intentIconStyles[intent], intent && state.backgroundAppearance === "inverted" && intentIconStylesInverted[intent]);
  }
  if (state.action) {
    state.action.className = mergeClasses(toastTitleClassNames.action, actionBaseClassName, state.backgroundAppearance === "inverted" && invertedStyles.action, state.action.className);
  }
  return state;
};

// node_modules/@fluentui/react-toast/lib/components/ToastTitle/ToastTitle.js
var ToastTitle = React363.forwardRef((props, ref) => {
  const state = useToastTitle_unstable(props, ref);
  useToastTitleStyles_unstable(state);
  return renderToastTitle_unstable(state);
});
ToastTitle.displayName = "ToastTitle";

// node_modules/@fluentui/react-toast/lib/components/ToastBody/ToastBody.js
var React365 = __toESM(require_react());

// node_modules/@fluentui/react-toast/lib/components/ToastBody/useToastBody.js
var React364 = __toESM(require_react());
var useToastBody_unstable = (props, ref) => {
  const backgroundAppearance = useBackgroundAppearance();
  const { bodyId } = useToastContainerContext();
  return {
    components: {
      root: "div",
      subtitle: "div"
    },
    subtitle: slot_exports.optional(props.subtitle, {
      elementType: "div"
    }),
    root: slot_exports.always(getIntrinsicElementProps("div", {
      // FIXME:
      // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`
      // but since it would be a breaking change to fix it, we are casting ref to it's proper type
      ref,
      id: bodyId,
      ...props
    }), {
      elementType: "div"
    }),
    backgroundAppearance
  };
};

// node_modules/@fluentui/react-toast/lib/components/ToastBody/renderToastBody.js
var renderToastBody_unstable = (state) => {
  assertSlots(state);
  return jsxs(import_react.Fragment, {
    children: [
      jsx(state.root, {}),
      state.subtitle ? jsx(state.subtitle, {}) : null
    ]
  });
};

// node_modules/@fluentui/react-toast/lib/components/ToastBody/useToastBodyStyles.styles.js
var toastBodyClassNames = {
  root: "fui-ToastBody",
  subtitle: "fui-ToastBody__subtitle"
};
var useRootBaseClassName10 = __resetStyles("rciajo9", null, [".rciajo9{grid-column-start:2;grid-column-end:3;padding-top:6px;font-size:var(--fontSizeBase300);line-height:var(--fontSizeBase300);font-weight:var(--fontWeightRegular);color:var(--colorNeutralForeground1);word-break:break-word;}"]);
var useSubtitleBaseClassName = __resetStyles("rzjw1xk", null, [".rzjw1xk{padding-top:4px;grid-column-start:2;grid-column-end:3;font-size:var(--fontSizeBase200);line-height:var(--fontSizeBase200);font-weight:var(--fontWeightRegular);color:var(--colorNeutralForeground2);}"]);
var useInvertedStyles2 = __styles2({
  root: {
    sj55zd: "f1w7i9ko"
  },
  subtitle: {
    sj55zd: "f1w7i9ko"
  }
}, {
  d: [".f1w7i9ko{color:var(--colorNeutralForegroundInverted2);}"]
});
var useToastBodyStyles_unstable = (state) => {
  "use no memo";
  const rootBaseClassName = useRootBaseClassName10();
  const subtitleBaseClassName = useSubtitleBaseClassName();
  const invertedStyles = useInvertedStyles2();
  state.root.className = mergeClasses(toastBodyClassNames.root, rootBaseClassName, state.backgroundAppearance === "inverted" && invertedStyles.root, state.root.className);
  if (state.subtitle) {
    state.subtitle.className = mergeClasses(toastBodyClassNames.subtitle, subtitleBaseClassName, state.backgroundAppearance === "inverted" && invertedStyles.subtitle, state.subtitle.className);
  }
  return state;
};

// node_modules/@fluentui/react-toast/lib/components/ToastBody/ToastBody.js
var ToastBody = React365.forwardRef((props, ref) => {
  const state = useToastBody_unstable(props, ref);
  useToastBodyStyles_unstable(state);
  return renderToastBody_unstable(state);
});
ToastBody.displayName = "ToastBody";

// node_modules/@fluentui/react-toast/lib/components/ToastFooter/ToastFooter.js
var React367 = __toESM(require_react());

// node_modules/@fluentui/react-toast/lib/components/ToastFooter/useToastFooter.js
var React366 = __toESM(require_react());
var useToastFooter_unstable = (props, ref) => {
  return {
    components: {
      root: "div"
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      // FIXME:
      // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`
      // but since it would be a breaking change to fix it, we are casting ref to it's proper type
      ref,
      ...props
    }), {
      elementType: "div"
    })
  };
};

// node_modules/@fluentui/react-toast/lib/components/ToastFooter/renderToastFooter.js
var renderToastFooter_unstable = (state) => {
  assertSlots(state);
  return jsx(state.root, {});
};

// node_modules/@fluentui/react-toast/lib/components/ToastFooter/useToastFooterStyles.styles.js
var toastFooterClassNames = {
  root: "fui-ToastFooter"
};
var useRootBaseClassName11 = __resetStyles("r56x6h2", null, [".r56x6h2{padding-top:16px;grid-column-start:2;grid-column-end:3;display:flex;align-items:center;gap:14px;}"]);
var useToastFooterStyles_unstable = (state) => {
  "use no memo";
  const rootBaseClassName = useRootBaseClassName11();
  state.root.className = mergeClasses(toastFooterClassNames.root, rootBaseClassName, state.root.className);
  return state;
};

// node_modules/@fluentui/react-toast/lib/components/ToastFooter/ToastFooter.js
var ToastFooter = React367.forwardRef((props, ref) => {
  const state = useToastFooter_unstable(props, ref);
  useToastFooterStyles_unstable(state);
  return renderToastFooter_unstable(state);
});
ToastFooter.displayName = "ToastFooter";

// node_modules/@fluentui/react-tree/lib/components/Tree/Tree.js
var React383 = __toESM(require_react());

// node_modules/@fluentui/react-tree/lib/components/Tree/useTree.js
var React380 = __toESM(require_react());

// node_modules/@fluentui/react-tree/lib/hooks/useControllableOpenItems.js
var React368 = __toESM(require_react());

// node_modules/@fluentui/react-tree/lib/utils/ImmutableSet.js
var internalSetSymbol = Symbol("#internalSet");
var _internalSetSymbol = internalSetSymbol;
var _Symbol_hasInstance = Symbol.hasInstance;
var _Symbol_iterator = Symbol.iterator;
var ImmutableSet = class _ImmutableSet {
  static dangerouslyGetInternalSet(set) {
    return set[internalSetSymbol];
  }
  static copy(immutableSet) {
    return new _ImmutableSet(new Set(immutableSet[internalSetSymbol]));
  }
  /**
  * Creates a new {@link ImmutableSet} from an iterable.
  * If the iterable is undefined, {@link ImmutableSet.empty} will be returned.
  * If the iterable is already an {@link ImmutableSet}, it will be returned as is no copy will be made.
  */
  static from(iterable) {
    if (iterable === void 0) {
      return this.empty;
    }
    if (iterable instanceof this) {
      return iterable;
    }
    return new this(new Set(iterable));
  }
  static [_Symbol_hasInstance](instance) {
    return Boolean(typeof instance === "object" && instance && internalSetSymbol in instance);
  }
  add(value) {
    if (this.has(value)) {
      return this;
    }
    const copy = _ImmutableSet.copy(this);
    copy[internalSetSymbol].add(value);
    return copy;
  }
  delete(value) {
    if (!this.has(value)) {
      return this;
    }
    const copy = _ImmutableSet.copy(this);
    copy[internalSetSymbol].delete(value);
    return copy;
  }
  has(value) {
    return this[internalSetSymbol].has(value);
  }
  [_Symbol_iterator]() {
    return this[internalSetSymbol].values();
  }
  /**
  * Do not use this constructor directly, use {@link ImmutableSet.from} instead.
  * {@link ImmutableSet.from} handles instance verification (which might be problematic on {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/instanceof#instanceof_and_multiple_realms | multiple realms}),
  * avoid unnecessary copies, supports iterables and ensures that the internal set is never exposed.
  *
  *⚠️⚠️  _By using this constructor directly, you might end up with a mutable set, as it is not guaranteed that the internal set is not exposed._ ⚠️⚠️
  */
  constructor(internalSet) {
    _define_property(this, "size", void 0);
    _define_property(this, _internalSetSymbol, void 0);
    this[internalSetSymbol] = internalSet;
    this.size = this[internalSetSymbol].size;
  }
};
_define_property(ImmutableSet, "empty", new ImmutableSet(/* @__PURE__ */ new Set()));

// node_modules/@fluentui/react-tree/lib/hooks/useControllableOpenItems.js
function useControllableOpenItems(props) {
  return useControllableState({
    state: React368.useMemo(() => props.openItems && ImmutableSet.from(props.openItems), [
      props.openItems
    ]),
    defaultState: props.defaultOpenItems && (() => ImmutableSet.from(props.defaultOpenItems)),
    initialState: ImmutableSet.empty
  });
}
function createNextOpenItems(data, previousOpenItems) {
  return data.open ? previousOpenItems.add(data.value) : previousOpenItems.delete(data.value);
}

// node_modules/@fluentui/react-tree/lib/components/Tree/useNestedControllableCheckedItems.js
var React369 = __toESM(require_react());

// node_modules/@fluentui/react-tree/lib/utils/ImmutableMap.js
var internalMapSymbol = Symbol("#internalMap");
var _internalMapSymbol = internalMapSymbol;
var _Symbol_hasInstance2 = Symbol.hasInstance;
var _Symbol_iterator2 = Symbol.iterator;
var ImmutableMap = class _ImmutableMap {
  static dangerouslyGetInternalMap(immutableMap) {
    return immutableMap[internalMapSymbol];
  }
  static copy(immutableMap) {
    return this.from(immutableMap[internalMapSymbol]);
  }
  static from(iterable, mapFn) {
    if (iterable === void 0) {
      return this.empty;
    }
    if (!mapFn) {
      if (iterable instanceof this) {
        return iterable;
      }
      const iterableAsTuple = iterable;
      return new this(new Map(iterableAsTuple));
    }
    const map = /* @__PURE__ */ new Map();
    for (const value of iterable) {
      map.set(...mapFn(value));
    }
    return new this(map);
  }
  static [_Symbol_hasInstance2](instance) {
    return Boolean(typeof instance === "object" && instance && internalMapSymbol in instance);
  }
  delete(key) {
    if (!this.has(key)) {
      return this;
    }
    const copy = _ImmutableMap.copy(this);
    copy[internalMapSymbol].delete(key);
    return copy;
  }
  get(key) {
    return this[internalMapSymbol].get(key);
  }
  has(key) {
    return this[internalMapSymbol].has(key);
  }
  set(key, value) {
    if (this.get(key) === value) {
      return this;
    }
    const copy = _ImmutableMap.copy(this);
    copy[internalMapSymbol].set(key, value);
    return copy;
  }
  [_Symbol_iterator2]() {
    return this[internalMapSymbol].entries();
  }
  /**
  * Do not use this constructor directly, use {@link ImmutableMap.from} instead.
  * {@link ImmutableMap.from} handles instance verification (which might be problematic on {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/instanceof#instanceof_and_multiple_realms | multiple realms}),
  * avoid unnecessary copies, supports iterables and ensures that the internal map is never exposed.
  *
  *⚠️⚠️  _By using this constructor directly, you might end up with a mutable map, as it is not guaranteed that the internal map is not exposed._ ⚠️⚠️
  */
  constructor(internalMap) {
    _define_property(this, "size", void 0);
    _define_property(this, _internalMapSymbol, void 0);
    this[internalMapSymbol] = internalMap;
    this.size = this[internalMapSymbol].size;
  }
};
_define_property(ImmutableMap, "empty", new ImmutableMap(/* @__PURE__ */ new Map()));

// node_modules/@fluentui/react-tree/lib/utils/createCheckedItems.js
var tuplifyCheckedItem = (value) => Array.isArray(value) ? value : [
  value,
  true
];
var createCheckedItems = (iterable) => ImmutableMap.from(iterable, tuplifyCheckedItem);

// node_modules/@fluentui/react-tree/lib/components/Tree/useNestedControllableCheckedItems.js
function useNestedCheckedItems(props) {
  return React369.useMemo(() => createCheckedItems(props.checkedItems), [
    props.checkedItems
  ]);
}
function createNextNestedCheckedItems(data, previousCheckedItems) {
  if (data.selectionMode === "single") {
    return ImmutableMap.from([
      [
        data.value,
        data.checked
      ]
    ]);
  }
  if (data.selectionMode === "multiselect") {
    return previousCheckedItems.set(data.value, data.checked);
  }
  return previousCheckedItems;
}

// node_modules/@fluentui/react-tree/lib/contexts/subtreeContext.js
var React370 = __toESM(require_react());
var defaultSubTreeContextValue = {
  level: 0,
  contextType: "subtree"
};
var SubtreeContext = React370.createContext(void 0);
var useSubtreeContext_unstable = () => {
  var _React_useContext;
  return (_React_useContext = React370.useContext(SubtreeContext)) !== null && _React_useContext !== void 0 ? _React_useContext : defaultSubTreeContextValue;
};

// node_modules/@fluentui/react-tree/lib/hooks/useRootTree.js
var React371 = __toESM(require_react());

// node_modules/@fluentui/react-tree/lib/utils/tokens.js
var treeItemLevelToken = "--fluent-TreeItem--level";
var treeAvatarSize = {
  medium: 32,
  small: 24
};
var treeDataTypes = {
  ArrowLeft,
  ArrowRight,
  Enter,
  Click: "Click",
  ExpandIconClick: "ExpandIconClick",
  End,
  Home,
  ArrowUp,
  ArrowDown,
  TypeAhead: "TypeAhead",
  Change: "Change"
};

// node_modules/@fluentui/react-tree/lib/hooks/useRootTree.js
function useRootTree(props, ref) {
  warnIfNoProperPropsRootTree(props);
  const { appearance = "subtle", size = "medium", selectionMode = "none" } = props;
  const openItems = React371.useMemo(() => ImmutableSet.from(props.openItems), [
    props.openItems
  ]);
  const checkedItems = React371.useMemo(() => createCheckedItems(props.checkedItems), [
    props.checkedItems
  ]);
  const requestOpenChange = (request) => {
    var _props_onOpenChange;
    (_props_onOpenChange = props.onOpenChange) === null || _props_onOpenChange === void 0 ? void 0 : _props_onOpenChange.call(props, request.event, {
      ...request,
      openItems: ImmutableSet.dangerouslyGetInternalSet(createNextOpenItems(request, openItems))
    });
  };
  const requestCheckedChange = (request) => {
    var _props_onCheckedChange;
    if (selectionMode === "none") {
      return;
    }
    (_props_onCheckedChange = props.onCheckedChange) === null || _props_onCheckedChange === void 0 ? void 0 : _props_onCheckedChange.call(props, request.event, {
      ...request,
      selectionMode,
      checkedItems: ImmutableMap.dangerouslyGetInternalMap(checkedItems)
    });
  };
  const requestNavigation = (request) => {
    var _props_onNavigation;
    let isScrollPrevented = false;
    (_props_onNavigation = props.onNavigation) === null || _props_onNavigation === void 0 ? void 0 : _props_onNavigation.call(props, request.event, {
      ...request,
      preventScroll: () => {
        isScrollPrevented = true;
      },
      isScrollPrevented: () => isScrollPrevented
    });
    switch (request.type) {
      case treeDataTypes.ArrowDown:
      case treeDataTypes.ArrowUp:
      case treeDataTypes.Home:
      case treeDataTypes.End:
        request.event.preventDefault();
    }
  };
  const requestTreeResponse = useEventCallback((request) => {
    switch (request.requestType) {
      case "navigate":
        return requestNavigation(request);
      case "open":
        return requestOpenChange(request);
      case "selection":
        return requestCheckedChange(request);
    }
  });
  return {
    components: {
      root: "div",
      // TODO: remove once React v18 slot API is modified
      // This is a problem at the moment due to UnknownSlotProps assumption
      // that `children` property is `ReactNode`, which in this case is not valid
      // as PresenceComponentProps['children'] is `ReactElement`
      collapseMotion: Collapse
    },
    contextType: "root",
    selectionMode,
    open: true,
    appearance,
    size,
    level: 1,
    openItems,
    checkedItems,
    requestTreeResponse,
    forceUpdateRovingTabIndex: () => {
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      // FIXME:
      // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`
      // but since it would be a breaking change to fix it, we are casting ref to it's proper type
      ref,
      role: "tree",
      "aria-multiselectable": selectionMode === "multiselect" ? true : void 0,
      ...props
    }), {
      elementType: "div"
    }),
    collapseMotion: void 0
  };
}
function warnIfNoProperPropsRootTree(props) {
  if (true) {
    if (!props["aria-label"] && !props["aria-labelledby"]) {
      console.warn(`@fluentui/react-tree [useRootTree]:
Tree must have either a \`aria-label\` or \`aria-labelledby\` property defined`);
    }
  }
}

// node_modules/@fluentui/react-tree/lib/hooks/useSubtree.js
var React376 = __toESM(require_react());

// node_modules/@fluentui/react-tree/node_modules/@fluentui/react-context-selector/lib/createContext.js
var React372 = __toESM(require_react());
var import_scheduler11 = __toESM(require_scheduler11());
var createProvider11 = (Original) => {
  const Provider2 = (props) => {
    const valueRef = React372.useRef(props.value);
    const versionRef = React372.useRef(0);
    const contextValue = React372.useRef();
    if (!contextValue.current) {
      contextValue.current = {
        value: valueRef,
        version: versionRef,
        listeners: []
      };
    }
    useIsomorphicLayoutEffect(() => {
      valueRef.current = props.value;
      versionRef.current += 1;
      (0, import_scheduler11.unstable_runWithPriority)(import_scheduler11.unstable_NormalPriority, () => {
        contextValue.current.listeners.forEach((listener) => {
          listener([
            versionRef.current,
            props.value
          ]);
        });
      });
    }, [
      props.value
    ]);
    return React372.createElement(Original, {
      value: contextValue.current
    }, props.children);
  };
  if (true) {
    Provider2.displayName = "ContextSelector.Provider";
  }
  return Provider2;
};
var createContext44 = (defaultValue) => {
  const context = React372.createContext({
    value: {
      current: defaultValue
    },
    version: {
      current: -1
    },
    listeners: []
  });
  context.Provider = createProvider11(context.Provider);
  delete context.Consumer;
  return context;
};

// node_modules/@fluentui/react-tree/node_modules/@fluentui/react-context-selector/lib/useContextSelector.js
var React373 = __toESM(require_react());
var useContextSelector11 = (context, selector) => {
  const contextValue = React373.useContext(context);
  const { value: { current: value }, version: { current: version }, listeners } = contextValue;
  const selected = selector(value);
  const [state, setState] = React373.useState([
    value,
    selected
  ]);
  const dispatch = (payload) => {
    setState((prevState) => {
      if (!payload) {
        return [
          value,
          selected
        ];
      }
      if (payload[0] <= version) {
        if (Object.is(prevState[1], selected)) {
          return prevState;
        }
        return [
          value,
          selected
        ];
      }
      try {
        if (Object.is(prevState[0], payload[1])) {
          return prevState;
        }
        const nextSelected = selector(payload[1]);
        if (Object.is(prevState[1], nextSelected)) {
          return prevState;
        }
        return [
          payload[1],
          nextSelected
        ];
      } catch (e) {
      }
      return [
        prevState[0],
        prevState[1]
      ];
    });
  };
  if (!Object.is(state[1], selected)) {
    dispatch(void 0);
  }
  const stableDispatch = useEventCallback(dispatch);
  useIsomorphicLayoutEffect(() => {
    listeners.push(stableDispatch);
    return () => {
      const index = listeners.indexOf(stableDispatch);
      listeners.splice(index, 1);
    };
  }, [
    stableDispatch,
    listeners
  ]);
  return state[1];
};

// node_modules/@fluentui/react-tree/node_modules/@fluentui/react-context-selector/lib/useHasParentContext.js
var React374 = __toESM(require_react());
function useHasParentContext11(context) {
  const contextValue = React374.useContext(context);
  if (contextValue.version) {
    return contextValue.version.current !== -1;
  }
  return false;
}

// node_modules/@fluentui/react-tree/lib/contexts/treeContext.js
var defaultTreeContextValue = {
  level: 0,
  contextType: "root",
  treeType: "nested",
  selectionMode: "none",
  openItems: ImmutableSet.empty,
  checkedItems: ImmutableMap.empty,
  requestTreeResponse: noop7,
  forceUpdateRovingTabIndex: noop7,
  appearance: "subtle",
  size: "medium"
};
function noop7() {
}
var TreeContext = createContext44(void 0);
var useTreeContext_unstable = (selector) => useContextSelector11(TreeContext, (ctx = defaultTreeContextValue) => selector(ctx));

// node_modules/@fluentui/react-tree/lib/contexts/treeItemContext.js
var React375 = __toESM(require_react());

// node_modules/@fluentui/react-tree/lib/utils/createHeadlessTree.js
function createHeadlessTree(initialProps = []) {
  const root = createHeadlessTreeRootItem();
  const itemsPerValue = /* @__PURE__ */ new Map([
    [
      root.value,
      root
    ]
  ]);
  const headlessTree = {
    root,
    get size() {
      return itemsPerValue.size;
    },
    getParent: (key) => {
      var _itemsPerValue_get;
      var _itemsPerValue_get_parentValue, _itemsPerValue_get1;
      return (_itemsPerValue_get1 = itemsPerValue.get((_itemsPerValue_get_parentValue = (_itemsPerValue_get = itemsPerValue.get(key)) === null || _itemsPerValue_get === void 0 ? void 0 : _itemsPerValue_get.parentValue) !== null && _itemsPerValue_get_parentValue !== void 0 ? _itemsPerValue_get_parentValue : root.value)) !== null && _itemsPerValue_get1 !== void 0 ? _itemsPerValue_get1 : root;
    },
    get: (key) => itemsPerValue.get(key),
    has: (key) => itemsPerValue.has(key),
    add(props) {
      const { parentValue = headlessTreeRootId, ...propsWithoutParentValue } = props;
      const parentItem = itemsPerValue.get(parentValue);
      if (!parentItem) {
        if (true) {
          console.error(`@fluentui/react-tree [createHeadlessTree]:
TreeItem "${props.value}" is wrongly positioned, did you properly ordered provided item props? make sure provided items are organized, parents should come before children`);
        }
        return;
      }
      parentItem.itemType = "branch";
      var _propsWithoutParentValue_itemType;
      const item = {
        value: props.value,
        getTreeItemProps: () => ({
          ...propsWithoutParentValue,
          parentValue,
          "aria-level": item.level,
          "aria-posinset": item.position,
          "aria-setsize": parentItem.childrenValues.length,
          itemType: item.itemType
        }),
        itemType: (_propsWithoutParentValue_itemType = propsWithoutParentValue.itemType) !== null && _propsWithoutParentValue_itemType !== void 0 ? _propsWithoutParentValue_itemType : "leaf",
        level: parentItem.level + 1,
        parentValue,
        childrenValues: [],
        index: -1,
        position: parentItem.childrenValues.push(props.value)
      };
      itemsPerValue.set(item.value, item);
    },
    subtree: (key) => HeadlessTreeSubtreeGenerator(key, headlessTree),
    children: (key) => HeadlessTreeChildrenGenerator(key, headlessTree),
    ancestors: (key) => HeadlessTreeAncestorsGenerator(key, headlessTree),
    visibleItems: (openItems) => HeadlessTreeVisibleItemsGenerator(openItems, headlessTree)
  };
  initialProps.forEach(headlessTree.add);
  return headlessTree;
}
var headlessTreeRootId = "__fuiHeadlessTreeRoot";
function createHeadlessTreeRootItem() {
  return {
    parentValue: void 0,
    value: headlessTreeRootId,
    itemType: "branch",
    getTreeItemProps: () => {
      if (true) {
        console.error(`@fluentui/react-tree [createHeadlessTree]:
Internal error, trying to access treeitem props from invalid root element`);
      }
      return {
        id: headlessTreeRootId,
        parentValue: void 0,
        value: headlessTreeRootId,
        "aria-setsize": -1,
        "aria-level": -1,
        "aria-posinset": -1,
        itemType: "branch"
      };
    },
    childrenValues: [],
    get index() {
      if (true) {
        console.error(`@fluentui/react-tree [createHeadlessTree]:
Internal error, trying to access treeitem props from invalid root element`);
      }
      return -1;
    },
    get position() {
      if (true) {
        console.error(`@fluentui/react-tree [createHeadlessTree]:
Internal error, trying to access treeitem props from invalid root element`);
      }
      return -1;
    },
    level: 0
  };
}
function* HeadlessTreeSubtreeGenerator(key, virtualTreeItems) {
  const item = virtualTreeItems.get(key);
  if (!item || item.childrenValues.length === 0) {
    return;
  }
  for (const childValue of item.childrenValues) {
    yield virtualTreeItems.get(childValue);
    yield* HeadlessTreeSubtreeGenerator(childValue, virtualTreeItems);
  }
}
function* HeadlessTreeChildrenGenerator(key, virtualTreeItems) {
  const item = virtualTreeItems.get(key);
  if (!item || item.childrenValues.length === 0) {
    return;
  }
  for (const childValue of item.childrenValues) {
    yield virtualTreeItems.get(childValue);
  }
}
function* HeadlessTreeAncestorsGenerator(key, virtualTreeItems) {
  let parent = virtualTreeItems.getParent(key);
  while (parent !== virtualTreeItems.root) {
    yield parent;
    parent = virtualTreeItems.getParent(parent.value);
  }
}
function* HeadlessTreeVisibleItemsGenerator(openItems, virtualTreeItems) {
  let index = 0;
  for (const item of HeadlessTreeSubtreeGenerator(virtualTreeItems.root.value, virtualTreeItems)) {
    if (isItemVisible(item, openItems, virtualTreeItems)) {
      item.index = index++;
      yield item;
    }
  }
}
function isItemVisible(item, openItems, virtualTreeItems) {
  if (item.level === 1) {
    return true;
  }
  while (item.parentValue && item.parentValue !== virtualTreeItems.root.value) {
    if (!openItems.has(item.parentValue)) {
      return false;
    }
    const parent = virtualTreeItems.get(item.parentValue);
    if (!parent) {
      return false;
    }
    item = parent;
  }
  return true;
}

// node_modules/@fluentui/react-tree/lib/contexts/treeItemContext.js
var defaultContextValue3 = {
  value: headlessTreeRootId,
  selectionRef: React375.createRef(),
  layoutRef: React375.createRef(),
  treeItemRef: React375.createRef(),
  subtreeRef: React375.createRef(),
  actionsRef: React375.createRef(),
  expandIconRef: React375.createRef(),
  isActionsVisible: false,
  isAsideVisible: false,
  itemType: "leaf",
  open: false,
  checked: false
};
var TreeItemContext = createContext44(void 0);
var { Provider: TreeItemProvider } = TreeItemContext;
var useTreeItemContext_unstable = (selector) => useContextSelector11(TreeItemContext, (ctx = defaultContextValue3) => selector(ctx));

// node_modules/@fluentui/react-tree/lib/hooks/useSubtree.js
function useSubtree(props, ref) {
  const subtreeRef = useTreeItemContext_unstable((ctx) => ctx.subtreeRef);
  const { level: parentLevel } = useSubtreeContext_unstable();
  const open = useTreeItemContext_unstable((ctx) => ctx.open);
  return {
    contextType: "subtree",
    open,
    components: {
      root: "div",
      // TODO: remove once React v18 slot API is modified
      // This is a problem at the moment due to UnknownSlotProps assumption
      // that `children` property is `ReactNode`, which in this case is not valid
      // as PresenceComponentProps['children'] is `ReactElement`
      collapseMotion: Collapse
    },
    level: parentLevel + 1,
    root: slot_exports.always(getIntrinsicElementProps("div", {
      // FIXME:
      // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`
      // but since it would be a breaking change to fix it, we are casting ref to it's proper type
      ref: useMergedRefs(ref, subtreeRef),
      role: "group",
      ...props
    }), {
      elementType: "div"
    }),
    collapseMotion: presenceMotionSlot(props.collapseMotion, {
      elementType: Collapse,
      defaultProps: {
        visible: open,
        unmountOnExit: true
      }
    })
  };
}

// node_modules/@fluentui/react-tree/lib/utils/nextTypeAheadElement.js
function nextTypeAheadElement(treeWalker, key) {
  const keyToLowerCase = key.toLowerCase();
  const typeAheadFilter = (element) => {
    var _element_textContent;
    return ((_element_textContent = element.textContent) === null || _element_textContent === void 0 ? void 0 : _element_textContent.trim().charAt(0).toLowerCase()) === keyToLowerCase ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;
  };
  let nextElement = treeWalker.nextElement(typeAheadFilter);
  if (!nextElement) {
    treeWalker.currentElement = treeWalker.root;
    nextElement = treeWalker.nextElement(typeAheadFilter);
  }
  return nextElement;
}

// node_modules/@fluentui/react-tree/lib/hooks/useRovingTabIndexes.js
var React377 = __toESM(require_react());
function useRovingTabIndex() {
  const currentElementRef = React377.useRef(null);
  const walkerRef = React377.useRef(null);
  const { targetDocument } = useFluent();
  useFocusedElementChange((element) => {
    if ((element === null || element === void 0 ? void 0 : element.getAttribute("role")) === "treeitem" && walkerRef.current && elementContains(walkerRef.current.root, element)) {
      rove(element);
    }
  });
  const initialize = React377.useCallback((walker) => {
    walkerRef.current = walker;
    walker.currentElement = walker.root;
    let tabbableChild = walker.firstChild((element) => element.tabIndex === 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP);
    walker.currentElement = walker.root;
    tabbableChild !== null && tabbableChild !== void 0 ? tabbableChild : tabbableChild = walker.firstChild();
    if (!tabbableChild) {
      return;
    }
    tabbableChild.tabIndex = 0;
    currentElementRef.current = tabbableChild;
    let nextElement = null;
    while ((nextElement = walker.nextElement()) && nextElement !== tabbableChild) {
      nextElement.tabIndex = -1;
    }
  }, []);
  const rove = React377.useCallback((nextElement, focusOptions) => {
    if (!currentElementRef.current) {
      return;
    }
    currentElementRef.current.tabIndex = -1;
    nextElement.tabIndex = 0;
    nextElement.focus(focusOptions);
    currentElementRef.current = nextElement;
  }, []);
  const forceUpdate = React377.useCallback(() => {
    if ((currentElementRef.current === null || !(targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.body.contains(currentElementRef.current))) && walkerRef.current) {
      initialize(walkerRef.current);
    }
  }, [
    targetDocument,
    initialize
  ]);
  return {
    rove,
    initialize,
    forceUpdate
  };
}

// node_modules/@fluentui/react-tree/lib/hooks/useTreeNavigation.js
var React379 = __toESM(require_react());

// node_modules/@fluentui/react-tree/lib/hooks/useHTMLElementWalkerRef.js
var React378 = __toESM(require_react());

// node_modules/@fluentui/react-tree/lib/utils/createHTMLElementWalker.js
function createHTMLElementWalker(root, targetDocument, filter = () => NodeFilter.FILTER_ACCEPT) {
  let temporaryFilter;
  const treeWalker = targetDocument.createTreeWalker(root, NodeFilter.SHOW_ELEMENT, {
    acceptNode(node) {
      if (!isHTMLElement(node)) {
        return NodeFilter.FILTER_REJECT;
      }
      const filterResult = filter(node);
      var _temporaryFilter;
      return filterResult === NodeFilter.FILTER_ACCEPT ? (_temporaryFilter = temporaryFilter === null || temporaryFilter === void 0 ? void 0 : temporaryFilter(node)) !== null && _temporaryFilter !== void 0 ? _temporaryFilter : filterResult : filterResult;
    }
  });
  return {
    get root() {
      return treeWalker.root;
    },
    get currentElement() {
      return treeWalker.currentNode;
    },
    set currentElement(element) {
      treeWalker.currentNode = element;
    },
    firstChild: (localFilter) => {
      temporaryFilter = localFilter;
      const result = treeWalker.firstChild();
      temporaryFilter = void 0;
      return result;
    },
    lastChild: (localFilter) => {
      temporaryFilter = localFilter;
      const result = treeWalker.lastChild();
      temporaryFilter = void 0;
      return result;
    },
    nextElement: (localFilter) => {
      temporaryFilter = localFilter;
      const result = treeWalker.nextNode();
      temporaryFilter = void 0;
      return result;
    },
    nextSibling: (localFilter) => {
      temporaryFilter = localFilter;
      const result = treeWalker.nextSibling();
      temporaryFilter = void 0;
      return result;
    },
    parentElement: (localFilter) => {
      temporaryFilter = localFilter;
      const result = treeWalker.parentNode();
      temporaryFilter = void 0;
      return result;
    },
    previousElement: (localFilter) => {
      temporaryFilter = localFilter;
      const result = treeWalker.previousNode();
      temporaryFilter = void 0;
      return result;
    },
    previousSibling: (localFilter) => {
      temporaryFilter = localFilter;
      const result = treeWalker.previousSibling();
      temporaryFilter = void 0;
      return result;
    }
  };
}

// node_modules/@fluentui/react-tree/lib/utils/treeItemFilter.js
var treeItemFilter = (element) => {
  return element.getAttribute("role") === "treeitem" ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;
};

// node_modules/@fluentui/react-tree/lib/hooks/useHTMLElementWalkerRef.js
function useHTMLElementWalkerRef() {
  const { targetDocument } = useFluent();
  const walkerRef = React378.useRef();
  const rootRef = React378.useCallback((root) => {
    walkerRef.current = targetDocument && root ? createHTMLElementWalker(root, targetDocument, treeItemFilter) : void 0;
  }, [
    targetDocument
  ]);
  return {
    walkerRef,
    rootRef
  };
}

// node_modules/@fluentui/react-tree/lib/hooks/useTreeNavigation.js
function useTreeNavigation() {
  "use no memo";
  const { rove, initialize: initializeRovingTabIndex, forceUpdate: forceUpdateRovingTabIndex } = useRovingTabIndex();
  const { walkerRef, rootRef: walkerRootRef } = useHTMLElementWalkerRef();
  const rootRefCallback = React379.useCallback((root) => {
    if (root && walkerRef.current) {
      initializeRovingTabIndex(walkerRef.current);
    }
  }, [
    walkerRef,
    initializeRovingTabIndex
  ]);
  const getNextElement = (data) => {
    if (!walkerRef.current) {
      return null;
    }
    switch (data.type) {
      case treeDataTypes.Click:
        return data.target;
      case treeDataTypes.TypeAhead:
        walkerRef.current.currentElement = data.target;
        return nextTypeAheadElement(walkerRef.current, data.event.key);
      case treeDataTypes.ArrowLeft:
        walkerRef.current.currentElement = data.target;
        return walkerRef.current.parentElement();
      case treeDataTypes.ArrowRight:
        walkerRef.current.currentElement = data.target;
        return walkerRef.current.firstChild();
      case treeDataTypes.End:
        walkerRef.current.currentElement = walkerRef.current.root;
        return lastChildRecursive(walkerRef.current);
      case treeDataTypes.Home:
        walkerRef.current.currentElement = walkerRef.current.root;
        return walkerRef.current.firstChild();
      case treeDataTypes.ArrowDown:
        walkerRef.current.currentElement = data.target;
        return walkerRef.current.nextElement();
      case treeDataTypes.ArrowUp:
        walkerRef.current.currentElement = data.target;
        return walkerRef.current.previousElement();
    }
  };
  function navigate(data, focusOptions) {
    const nextElement = getNextElement(data);
    if (nextElement) {
      rove(nextElement, focusOptions);
    }
  }
  return {
    navigate,
    treeRef: useMergedRefs(walkerRootRef, rootRefCallback),
    forceUpdateRovingTabIndex
  };
}
function lastChildRecursive(walker) {
  let lastElement = null;
  let nextElement = null;
  while (nextElement = walker.lastChild()) {
    lastElement = nextElement;
  }
  return lastElement;
}

// node_modules/@fluentui/react-tree/lib/components/Tree/useTree.js
var useTree_unstable = (props, ref) => {
  "use no memo";
  const isRoot = React380.useContext(SubtreeContext) === void 0;
  return isRoot ? useNestedRootTree(props, ref) : useNestedSubtree(props, ref);
};
function useNestedRootTree(props, ref) {
  "use no memo";
  const [openItems, setOpenItems] = useControllableOpenItems(props);
  const checkedItems = useNestedCheckedItems(props);
  const navigation = useTreeNavigation();
  return Object.assign(useRootTree({
    ...props,
    openItems,
    checkedItems,
    onOpenChange: useEventCallback((event, data) => {
      var _props_onOpenChange;
      const nextOpenItems = createNextOpenItems(data, openItems);
      (_props_onOpenChange = props.onOpenChange) === null || _props_onOpenChange === void 0 ? void 0 : _props_onOpenChange.call(props, event, {
        ...data,
        openItems: ImmutableSet.dangerouslyGetInternalSet(nextOpenItems)
      });
      setOpenItems(nextOpenItems);
    }),
    onNavigation: useEventCallback((event, data) => {
      var _props_onNavigation;
      (_props_onNavigation = props.onNavigation) === null || _props_onNavigation === void 0 ? void 0 : _props_onNavigation.call(props, event, data);
      if (!event.isDefaultPrevented()) {
        navigation.navigate(data, {
          preventScroll: data.isScrollPrevented()
        });
      }
    }),
    onCheckedChange: useEventCallback((event, data) => {
      var _props_onCheckedChange;
      const nextCheckedItems = createNextNestedCheckedItems(data, checkedItems);
      (_props_onCheckedChange = props.onCheckedChange) === null || _props_onCheckedChange === void 0 ? void 0 : _props_onCheckedChange.call(props, event, {
        ...data,
        checkedItems: ImmutableMap.dangerouslyGetInternalMap(nextCheckedItems)
      });
    })
  }, useMergedRefs(ref, navigation.treeRef)), {
    treeType: "nested",
    forceUpdateRovingTabIndex: navigation.forceUpdateRovingTabIndex
  });
}
function useNestedSubtree(props, ref) {
  "use no memo";
  if (true) {
    const treeType = useTreeContext_unstable((ctx) => ctx.treeType);
    if (treeType === "flat") {
      throw new Error(`@fluentui/react-tree [useTree]:
Subtrees are not allowed in a FlatTree!
You cannot use a <Tree> component inside of a <FlatTree> component!`);
    }
  }
  return useSubtree(props, ref);
}

// node_modules/@fluentui/react-tree/lib/components/Tree/useTreeContextValues.js
var React381 = __toESM(require_react());
function useTreeContextValues_unstable(state) {
  "use no memo";
  if (state.contextType === "root") {
    const { openItems, level, contextType, treeType, checkedItems, selectionMode, appearance, size, requestTreeResponse, forceUpdateRovingTabIndex } = state;
    const tree = {
      treeType,
      size,
      openItems,
      appearance,
      checkedItems,
      selectionMode,
      contextType,
      level,
      requestTreeResponse,
      forceUpdateRovingTabIndex
    };
    return {
      tree
    };
  }
  return {
    // contextType is statically determined by the context
    // eslint-disable-next-line react-hooks/rules-of-hooks
    tree: React381.useMemo(() => ({
      level: state.level,
      contextType: "subtree"
    }), [
      state.level
    ])
  };
}

// node_modules/@fluentui/react-tree/lib/components/Tree/useTreeStyles.styles.js
var treeClassNames = {
  root: "fui-Tree"
};
var useBaseStyles6 = __resetStyles("rnv2ez3", null, [".rnv2ez3{display:flex;flex-direction:column;row-gap:var(--spacingVerticalXXS);}"]);
var useStyles46 = __styles2({
  subtree: {
    z8tnut: "fclwglc"
  }
}, {
  d: [".fclwglc{padding-top:var(--spacingVerticalXXS);}"]
});
var useTreeStyles_unstable = (state) => {
  "use no memo";
  const baseStyles3 = useBaseStyles6();
  const styles = useStyles46();
  const isSubTree = state.level > 1;
  state.root.className = mergeClasses(treeClassNames.root, baseStyles3, isSubTree && styles.subtree, state.root.className);
  return state;
};

// node_modules/@fluentui/react-tree/lib/components/TreeProvider.js
var React382 = __toESM(require_react());
var rootSubtreeContextValue = {
  level: 1,
  contextType: "subtree"
};
var TreeProvider = (props) => {
  if (props.value.contextType === "subtree") {
    return React382.createElement(SubtreeContext.Provider, {
      value: props.value
    }, props.children);
  }
  return React382.createElement(TreeContext.Provider, {
    value: props.value
  }, React382.createElement(SubtreeContext.Provider, {
    value: rootSubtreeContextValue
  }, props.children));
};
TreeProvider.displayName = "TreeProvider";

// node_modules/@fluentui/react-tree/lib/components/Tree/renderTree.js
var renderTree_unstable = (state, contextValues) => {
  assertSlots(state);
  return jsx(TreeProvider, {
    value: contextValues.tree,
    children: state.collapseMotion ? jsx(state.collapseMotion, {
      children: jsx(state.root, {})
    }) : jsx(state.root, {})
  });
};

// node_modules/@fluentui/react-tree/lib/components/Tree/Tree.js
var Tree = React383.forwardRef((props, ref) => {
  const state = useTree_unstable(props, ref);
  const contextValues = useTreeContextValues_unstable(state);
  useTreeStyles_unstable(state);
  return renderTree_unstable(state, contextValues);
});
Tree.displayName = "Tree";

// node_modules/@fluentui/react-tree/lib/components/FlatTree/FlatTree.js
var React386 = __toESM(require_react());

// node_modules/@fluentui/react-tree/lib/components/FlatTree/useFlatTree.js
var React385 = __toESM(require_react());

// node_modules/@fluentui/react-tree/lib/utils/getTreeItemValueFromElement.js
var dataTreeItemValueAttrName = "data-fui-tree-item-value";

// node_modules/@fluentui/react-tree/lib/hooks/useFlatTreeNavigation.js
var React384 = __toESM(require_react());
function useFlatTreeNavigation() {
  "use no memo";
  const { walkerRef, rootRef: walkerRootRef } = useHTMLElementWalkerRef();
  const { rove, forceUpdate: forceUpdateRovingTabIndex, initialize: initializeRovingTabIndex } = useRovingTabIndex();
  const rootRefCallback = React384.useCallback((root) => {
    if (walkerRef.current && root) {
      initializeRovingTabIndex(walkerRef.current);
    }
  }, [
    initializeRovingTabIndex,
    walkerRef
  ]);
  function getNextElement(data) {
    if (!walkerRef.current) {
      return null;
    }
    switch (data.type) {
      case treeDataTypes.Click:
        return data.target;
      case treeDataTypes.TypeAhead:
        walkerRef.current.currentElement = data.target;
        return nextTypeAheadElement(walkerRef.current, data.event.key);
      case treeDataTypes.ArrowLeft: {
        const nextElement = parentElement(data.parentValue, walkerRef.current);
        if (!nextElement && true) {
          console.warn(`@fluentui/react-tree [useFlatTreeNavigation]:
'ArrowLeft' navigation was not possible.
No parent element found for the current element:`, data.target);
        }
        return nextElement;
      }
      case treeDataTypes.ArrowRight: {
        walkerRef.current.currentElement = data.target;
        const nextElement = firstChild(data.target, walkerRef.current);
        if (!nextElement && true) {
          const ariaLevel = Number(data.target.getAttribute("aria-level"));
          console.warn(`@fluentui/react-tree [useFlatTreeNavigation]:
'ArrowRight' navigation was not possible.
No element with "aria-posinset=1" and "aria-level=${ariaLevel + 1}"
was found after the current element!`, data.target);
        }
        return nextElement;
      }
      case treeDataTypes.End:
        walkerRef.current.currentElement = walkerRef.current.root;
        return walkerRef.current.lastChild();
      case treeDataTypes.Home:
        walkerRef.current.currentElement = walkerRef.current.root;
        return walkerRef.current.firstChild();
      case treeDataTypes.ArrowDown:
        walkerRef.current.currentElement = data.target;
        return walkerRef.current.nextElement();
      case treeDataTypes.ArrowUp:
        walkerRef.current.currentElement = data.target;
        return walkerRef.current.previousElement();
    }
  }
  const navigate = useEventCallback((data) => {
    const nextElement = getNextElement(data);
    if (nextElement) {
      rove(nextElement);
    }
  });
  return {
    navigate,
    rootRef: useMergedRefs(walkerRootRef, rootRefCallback),
    forceUpdateRovingTabIndex
  };
}
function firstChild(target, treeWalker) {
  const nextElement = treeWalker.nextElement();
  if (!nextElement) {
    return null;
  }
  const nextElementAriaPosInSet = nextElement.getAttribute("aria-posinset");
  const nextElementAriaLevel = nextElement.getAttribute("aria-level");
  const targetAriaLevel = target.getAttribute("aria-level");
  if (nextElementAriaPosInSet === "1" && Number(nextElementAriaLevel) === Number(targetAriaLevel) + 1) {
    return nextElement;
  }
  return null;
}
function parentElement(parentValue, treeWalker) {
  if (parentValue === void 0) {
    return null;
  }
  return treeWalker.root.querySelector(`[${dataTreeItemValueAttrName}="${parentValue}"]`);
}

// node_modules/@fluentui/react-tree/lib/components/FlatTree/useFlatTree.js
var useFlatTree_unstable = (props, ref) => {
  "use no memo";
  const isRoot = React385.useContext(SubtreeContext) === void 0;
  return isRoot ? useRootFlatTree(props, ref) : useSubFlatTree(props, ref);
};
function useRootFlatTree(props, ref) {
  const navigation = useFlatTreeNavigation();
  return Object.assign(useRootTree({
    ...props,
    onNavigation: useEventCallback((event, data) => {
      var _props_onNavigation;
      (_props_onNavigation = props.onNavigation) === null || _props_onNavigation === void 0 ? void 0 : _props_onNavigation.call(props, event, data);
      if (!event.isDefaultPrevented()) {
        navigation.navigate(data);
      }
    })
  }, useMergedRefs(ref, navigation.rootRef)), {
    treeType: "flat",
    forceUpdateRovingTabIndex: navigation.forceUpdateRovingTabIndex
  });
}
function useSubFlatTree(props, ref) {
  if (true) {
    throw new Error(`@fluentui/react-tree [useFlatTree]:
Subtrees are not allowed in a FlatTree!
You cannot use a <FlatTree> component inside of another <FlatTree> nor a <Tree> component!`);
  }
  return {
    ...useSubtree(props, ref),
    // ------ defaultTreeContextValue
    level: 0,
    contextType: "root",
    treeType: "nested",
    selectionMode: "none",
    openItems: ImmutableSet.empty,
    checkedItems: ImmutableMap.empty,
    requestTreeResponse: noop8,
    forceUpdateRovingTabIndex: noop8,
    appearance: "subtle",
    size: "medium",
    // ------ defaultTreeContextValue
    open: false
  };
}
function noop8() {
}

// node_modules/@fluentui/react-tree/lib/components/FlatTree/useFlatTreeStyles.styles.js
var flatTreeClassNames = {
  root: "fui-FlatTree"
};
var useBaseStyles7 = __resetStyles("rnv2ez3", null, [".rnv2ez3{display:flex;flex-direction:column;row-gap:var(--spacingVerticalXXS);}"]);
var useFlatTreeStyles_unstable = (state) => {
  "use no memo";
  const baseStyles3 = useBaseStyles7();
  state.root.className = mergeClasses(flatTreeClassNames.root, baseStyles3, state.root.className);
  return state;
};

// node_modules/@fluentui/react-tree/lib/components/FlatTree/useFlatTreeContextValues.js
var useFlatTreeContextValues_unstable = (state) => {
  const { openItems, level, contextType, treeType, checkedItems, selectionMode, appearance, size, requestTreeResponse, forceUpdateRovingTabIndex } = state;
  const tree = {
    treeType,
    size,
    openItems,
    appearance,
    checkedItems,
    selectionMode,
    contextType,
    level,
    requestTreeResponse,
    forceUpdateRovingTabIndex
  };
  return {
    tree
  };
};

// node_modules/@fluentui/react-tree/lib/components/FlatTree/renderFlatTree.js
var renderFlatTree_unstable = renderTree_unstable;

// node_modules/@fluentui/react-tree/lib/components/FlatTree/FlatTree.js
var FlatTree = React386.forwardRef((props, ref) => {
  const state = useFlatTree_unstable(props, ref);
  const contextValues = useFlatTreeContextValues_unstable(state);
  useFlatTreeStyles_unstable(state);
  return renderFlatTree_unstable(state, contextValues);
});
FlatTree.displayName = "FlatTree";

// node_modules/@fluentui/react-tree/lib/components/FlatTree/useHeadlessFlatTree.js
var React388 = __toESM(require_react());

// node_modules/@fluentui/react-tree/lib/components/FlatTree/useFlatControllableCheckedItems.js
var React387 = __toESM(require_react());
function useFlatControllableCheckedItems(props, headlessTree) {
  return useControllableState({
    initialState: ImmutableMap.empty,
    state: React387.useMemo(() => props.selectionMode ? props.checkedItems && createCheckedItems(props.checkedItems) : void 0, [
      props.checkedItems,
      props.selectionMode
    ]),
    defaultState: props.defaultCheckedItems ? () => initializeCheckedItems(props, headlessTree) : void 0
  });
}
function createNextFlatCheckedItems(data, previousCheckedItems, headlessTree) {
  if (data.selectionMode === "single") {
    return ImmutableMap.from([
      [
        data.value,
        data.checked
      ]
    ]);
  }
  const treeItem = headlessTree.get(data.value);
  if (!treeItem) {
    if (true) {
      console.error(`@fluentui/react-tree [useHeadlessFlatTree]:
Tree item ${data.value} not found.`);
    }
    return previousCheckedItems;
  }
  let nextCheckedItems = previousCheckedItems;
  for (const children2 of headlessTree.subtree(data.value)) {
    nextCheckedItems = nextCheckedItems.set(children2.value, data.checked);
  }
  nextCheckedItems = nextCheckedItems.set(data.value, data.checked);
  let isAncestorsMixed = false;
  for (const parent of headlessTree.ancestors(treeItem.value)) {
    if (isAncestorsMixed) {
      nextCheckedItems = nextCheckedItems.set(parent.value, "mixed");
      continue;
    }
    let checkedChildrenAmount = 0;
    for (const child of headlessTree.children(parent.value)) {
      if ((nextCheckedItems.get(child.value) || false) === data.checked) {
        checkedChildrenAmount++;
      }
    }
    if (checkedChildrenAmount === parent.childrenValues.length) {
      nextCheckedItems = nextCheckedItems.set(parent.value, data.checked);
    } else {
      isAncestorsMixed = true;
      nextCheckedItems = nextCheckedItems.set(parent.value, "mixed");
    }
  }
  return nextCheckedItems;
}
function initializeCheckedItems(props, headlessTree) {
  if (!props.selectionMode) {
    return ImmutableMap.empty;
  }
  let state = createCheckedItems(props.defaultCheckedItems);
  if (props.selectionMode === "multiselect") {
    for (const [value, checked] of state) {
      state = createNextFlatCheckedItems({
        value,
        checked,
        selectionMode: props.selectionMode
      }, state, headlessTree);
    }
  }
  return state;
}

// node_modules/@fluentui/react-tree/lib/components/FlatTree/useHeadlessFlatTree.js
function useHeadlessFlatTree_unstable(props, options = {}) {
  "use no memo";
  const headlessTree = React388.useMemo(() => createHeadlessTree(props), [
    props
  ]);
  const [openItems, setOpenItems] = useControllableOpenItems(options);
  const [checkedItems, setCheckedItems] = useFlatControllableCheckedItems(options, headlessTree);
  const navigation = useFlatTreeNavigation();
  const treeRef = React388.useRef(null);
  const handleOpenChange = useEventCallback((event, data) => {
    var _options_onOpenChange;
    const nextOpenItems = createNextOpenItems(data, openItems);
    (_options_onOpenChange = options.onOpenChange) === null || _options_onOpenChange === void 0 ? void 0 : _options_onOpenChange.call(options, event, {
      ...data,
      openItems: ImmutableSet.dangerouslyGetInternalSet(nextOpenItems)
    });
    setOpenItems(nextOpenItems);
  });
  const handleCheckedChange = useEventCallback((event, data) => {
    var _options_onCheckedChange;
    const nextCheckedItems = createNextFlatCheckedItems(data, checkedItems, headlessTree);
    (_options_onCheckedChange = options.onCheckedChange) === null || _options_onCheckedChange === void 0 ? void 0 : _options_onCheckedChange.call(options, event, {
      ...data,
      checkedItems: ImmutableMap.dangerouslyGetInternalMap(nextCheckedItems)
    });
    setCheckedItems(nextCheckedItems);
  });
  const getNextNavigableItem = useEventCallback((visibleItems, data) => {
    const item = headlessTree.get(data.value);
    if (item) {
      switch (data.type) {
        case treeDataTypes.TypeAhead:
          return item;
        case treeDataTypes.ArrowLeft:
          return headlessTree.get(item.parentValue);
        case treeDataTypes.ArrowRight:
          return visibleItems[item.index + 1];
        case treeDataTypes.End:
          return visibleItems[visibleItems.length - 1];
        case treeDataTypes.Home:
          return visibleItems[0];
        case treeDataTypes.ArrowDown:
          return visibleItems[item.index + 1];
        case treeDataTypes.ArrowUp:
          return visibleItems[item.index - 1];
      }
    }
  });
  const getElementFromItem = React388.useCallback((item) => {
    var _treeRef_current;
    return (_treeRef_current = treeRef.current) === null || _treeRef_current === void 0 ? void 0 : _treeRef_current.querySelector(`[${dataTreeItemValueAttrName}="${item.value}"]`);
  }, []);
  const ref = useMergedRefs(treeRef, navigation.rootRef);
  const getTreeProps = React388.useCallback(
    () => {
      var _options_onNavigation;
      return {
        ref,
        openItems,
        selectionMode: options.selectionMode,
        checkedItems,
        onOpenChange: handleOpenChange,
        onCheckedChange: handleCheckedChange,
        onNavigation: (_options_onNavigation = options.onNavigation) !== null && _options_onNavigation !== void 0 ? _options_onNavigation : noop9
      };
    },
    // ref, handleOpenChange - useEventCallback, handleCheckedChange - useEventCallback
    // eslint-disable-next-line react-hooks/exhaustive-deps
    [
      openItems,
      checkedItems,
      options.selectionMode,
      options.onNavigation
    ]
  );
  const items = React388.useCallback(() => headlessTree.visibleItems(openItems), [
    openItems,
    headlessTree
  ]);
  const getItem = React388.useCallback((value) => headlessTree.get(value), [
    headlessTree
  ]);
  return React388.useMemo(() => ({
    navigate: navigation.navigate,
    getTreeProps,
    getNextNavigableItem,
    getElementFromItem,
    items,
    getItem
  }), [
    navigation.navigate,
    getTreeProps,
    getNextNavigableItem,
    getElementFromItem,
    items,
    getItem
  ]);
}
function noop9() {
}

// node_modules/@fluentui/react-tree/lib/components/TreeItem/TreeItem.js
var React390 = __toESM(require_react());

// node_modules/@fluentui/react-tree/lib/components/TreeItem/useTreeItem.js
var React389 = __toESM(require_react());
var ReactDOM2 = __toESM(require_react_dom());
function useTreeItem_unstable(props, ref) {
  "use no memo";
  const treeType = useTreeContext_unstable((ctx) => ctx.treeType);
  if (treeType === "flat") {
    warnIfNoProperPropsFlatTreeItem(props);
  }
  const requestTreeResponse = useTreeContext_unstable((ctx) => ctx.requestTreeResponse);
  const forceUpdateRovingTabIndex = useTreeContext_unstable((ctx) => ctx.forceUpdateRovingTabIndex);
  const { level: contextLevel } = useSubtreeContext_unstable();
  const parentValue = useTreeItemContext_unstable((ctx) => {
    var _props_parentValue;
    return (_props_parentValue = props.parentValue) !== null && _props_parentValue !== void 0 ? _props_parentValue : ctx.value;
  });
  const internalValue = useId("fuiTreeItemValue-");
  var _props_value;
  const value = (_props_value = props.value) !== null && _props_value !== void 0 ? _props_value : internalValue;
  const { onClick, onKeyDown, onChange, as = "div", itemType = "leaf", "aria-level": level = contextLevel, "aria-selected": ariaSelected, "aria-expanded": ariaExpanded, ...rest } = props;
  const actionsRef = React389.useRef(null);
  const expandIconRef = React389.useRef(null);
  const layoutRef = React389.useRef(null);
  const subtreeRef = React389.useRef(null);
  const selectionRef = React389.useRef(null);
  const treeItemRef = React389.useRef(null);
  if (true) {
    const hasTreeContext = useHasParentContext11(TreeContext);
    React389.useEffect(() => {
      var _treeItemRef_current;
      if (hasTreeContext) {
        return;
      }
      if ((_treeItemRef_current = treeItemRef.current) === null || _treeItemRef_current === void 0 ? void 0 : _treeItemRef_current.querySelector(`.${treeClassNames.root}`)) {
        console.error(`@fluentui/react-tree [useTreeItem]:
<TreeItem> should be declared inside a <Tree> component.`);
      }
    }, [
      hasTreeContext
    ]);
  }
  React389.useEffect(() => {
    const treeItem = treeItemRef.current;
    return () => {
      if (treeItem && treeItem.tabIndex === 0) {
        forceUpdateRovingTabIndex === null || forceUpdateRovingTabIndex === void 0 ? void 0 : forceUpdateRovingTabIndex();
      }
    };
  }, [
    forceUpdateRovingTabIndex
  ]);
  const open = useTreeContext_unstable((ctx) => {
    var _props_open;
    return (_props_open = props.open) !== null && _props_open !== void 0 ? _props_open : ctx.openItems.has(value);
  });
  const getNextOpen = () => itemType === "branch" ? !open : open;
  const selectionMode = useTreeContext_unstable((ctx) => ctx.selectionMode);
  const checked = useTreeContext_unstable((ctx) => {
    var _ctx_checkedItems_get;
    return (_ctx_checkedItems_get = ctx.checkedItems.get(value)) !== null && _ctx_checkedItems_get !== void 0 ? _ctx_checkedItems_get : false;
  });
  const handleClick = useEventCallback((event) => {
    var _expandIconRef_current;
    const isEventFromActions = () => actionsRef.current && elementContains(actionsRef.current, event.target);
    const isEventFromSubtree = () => subtreeRef.current && elementContains(subtreeRef.current, event.target);
    const isEventFromSelection = () => {
      var _selectionRef_current;
      return (_selectionRef_current = selectionRef.current) === null || _selectionRef_current === void 0 ? void 0 : _selectionRef_current.contains(event.target);
    };
    const isEventFromExpandIcon = (_expandIconRef_current = expandIconRef.current) === null || _expandIconRef_current === void 0 ? void 0 : _expandIconRef_current.contains(event.target);
    if (isEventFromActions() || isEventFromSubtree() || isEventFromSelection()) {
      return;
    } else if (!isEventFromExpandIcon) {
      onClick === null || onClick === void 0 ? void 0 : onClick(event);
    }
    if (event.isDefaultPrevented() || itemType === "leaf") {
      return;
    }
    ReactDOM2.unstable_batchedUpdates(() => {
      var _props_onOpenChange;
      const data = {
        event,
        value,
        open: getNextOpen(),
        target: event.currentTarget,
        type: isEventFromExpandIcon ? treeDataTypes.ExpandIconClick : treeDataTypes.Click
      };
      (_props_onOpenChange = props.onOpenChange) === null || _props_onOpenChange === void 0 ? void 0 : _props_onOpenChange.call(props, event, data);
      requestTreeResponse({
        ...data,
        itemType,
        requestType: "open"
      });
      requestTreeResponse({
        ...data,
        itemType,
        parentValue,
        requestType: "navigate",
        type: treeDataTypes.Click
      });
    });
  });
  const handleKeyDown = useEventCallback((event) => {
    onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown(event);
    if (event.isDefaultPrevented() || event.currentTarget !== event.target) {
      return;
    }
    switch (event.key) {
      case Space:
        if (selectionMode !== "none") {
          var _selectionRef_current;
          (_selectionRef_current = selectionRef.current) === null || _selectionRef_current === void 0 ? void 0 : _selectionRef_current.click();
          event.preventDefault();
        }
        return;
      case treeDataTypes.Enter: {
        return event.currentTarget.click();
      }
      case treeDataTypes.End:
      case treeDataTypes.Home:
      case treeDataTypes.ArrowUp:
      case treeDataTypes.ArrowDown:
        return requestTreeResponse({
          requestType: "navigate",
          event,
          value,
          itemType,
          parentValue,
          type: event.key,
          target: event.currentTarget
        });
      case treeDataTypes.ArrowLeft: {
        if (event.altKey) {
          return;
        }
        if (level === 1 && !open) {
          return;
        }
        const data = {
          value,
          event,
          open: getNextOpen(),
          type: event.key,
          target: event.currentTarget
        };
        if (open) {
          var _props_onOpenChange;
          (_props_onOpenChange = props.onOpenChange) === null || _props_onOpenChange === void 0 ? void 0 : _props_onOpenChange.call(props, event, data);
        }
        requestTreeResponse({
          ...data,
          itemType,
          parentValue,
          requestType: open ? "open" : "navigate"
        });
        return;
      }
      case treeDataTypes.ArrowRight: {
        if (event.altKey) {
          return;
        }
        if (itemType === "leaf") {
          return;
        }
        const data = {
          value,
          event,
          open: getNextOpen(),
          type: event.key,
          target: event.currentTarget
        };
        if (!open) {
          var _props_onOpenChange1;
          (_props_onOpenChange1 = props.onOpenChange) === null || _props_onOpenChange1 === void 0 ? void 0 : _props_onOpenChange1.call(props, event, data);
        }
        requestTreeResponse({
          ...data,
          itemType,
          parentValue,
          requestType: open ? "navigate" : "open"
        });
        return;
      }
    }
    const isTypeAheadCharacter = event.key.length === 1 && event.key.match(/\w/) && !event.altKey && !event.ctrlKey && !event.metaKey;
    if (isTypeAheadCharacter) {
      requestTreeResponse({
        requestType: "navigate",
        event,
        target: event.currentTarget,
        value,
        itemType,
        type: treeDataTypes.TypeAhead,
        parentValue
      });
    }
  });
  const handleChange = useEventCallback((event) => {
    onChange === null || onChange === void 0 ? void 0 : onChange(event);
    if (event.isDefaultPrevented()) {
      return;
    }
    const isEventFromSubtree = subtreeRef.current && elementContains(subtreeRef.current, event.target);
    if (isEventFromSubtree) {
      return;
    }
    requestTreeResponse({
      requestType: "selection",
      event,
      value,
      itemType,
      type: "Change",
      target: event.currentTarget,
      checked: checked === "mixed" ? true : !checked
    });
  });
  return {
    value,
    open,
    checked,
    subtreeRef,
    layoutRef,
    selectionRef,
    expandIconRef,
    treeItemRef,
    actionsRef,
    itemType,
    level,
    components: {
      root: "div"
    },
    // FIXME: this property is not necessary anymore, but as removing it would be a breaking change, we need to keep it as false
    isAsideVisible: false,
    // FIXME: this property is not necessary anymore, but as removing it would be a breaking change, we need to keep it as false
    isActionsVisible: false,
    root: slot_exports.always(getIntrinsicElementProps(as, {
      tabIndex: -1,
      [dataTreeItemValueAttrName]: value,
      ...rest,
      ref: useMergedRefs(ref, treeItemRef),
      role: "treeitem",
      "aria-level": level,
      "aria-checked": selectionMode === "multiselect" ? checked : void 0,
      // Casting: when selectionMode is 'single', checked is a boolean
      "aria-selected": ariaSelected !== void 0 ? ariaSelected : selectionMode === "single" ? !!checked : void 0,
      "aria-expanded": ariaExpanded !== void 0 ? ariaExpanded : itemType === "branch" ? open : void 0,
      onClick: handleClick,
      onKeyDown: handleKeyDown,
      onChange: handleChange
    }), {
      elementType: "div"
    })
  };
}
function warnIfNoProperPropsFlatTreeItem(props) {
  if (true) {
    if (props["aria-posinset"] === void 0 || props["aria-setsize"] === void 0 || props["aria-level"] === void 0 || props.parentValue === void 0 && props["aria-level"] !== 1) {
      console.error(`@fluentui/react-tree [${useTreeItem_unstable.name}]:
A flat treeitem must have "aria-posinset", "aria-setsize", "aria-level"
and "parentValue" (if "aria-level" > 1) to ensure a11y and navigation.

- "aria-posinset": the position of this treeitem in the current level of the tree.
- "aria-setsize": the number of siblings in this level of the tree.
- "aria-level": the current level of the treeitem.
- "parentValue": the "value" property of the parent item of this item.`);
    }
  }
}

// node_modules/@fluentui/react-tree/lib/components/TreeItem/renderTreeItem.js
var renderTreeItem_unstable = (state, contextValues) => {
  assertSlots(state);
  return jsx(state.root, {
    children: jsx(TreeItemProvider, {
      value: contextValues.treeItem,
      children: state.root.children
    })
  });
};

// node_modules/@fluentui/react-tree/lib/components/TreeItemLayout/useTreeItemLayoutStyles.styles.js
var treeItemLayoutClassNames = {
  root: "fui-TreeItemLayout",
  iconBefore: "fui-TreeItemLayout__iconBefore",
  main: "fui-TreeItemLayout__main",
  iconAfter: "fui-TreeItemLayout__iconAfter",
  expandIcon: "fui-TreeItemLayout__expandIcon",
  aside: "fui-TreeItemLayout__aside",
  actions: "fui-TreeItemLayout__actions",
  selector: "fui-TreeItemLayout__selector"
};
var useRootBaseStyles2 = __resetStyles("r1bx0xiv", null, [".r1bx0xiv{display:flex;align-items:center;min-height:32px;box-sizing:border-box;grid-area:layout;}", ".r1bx0xiv:active{color:var(--colorNeutralForeground2Pressed);background-color:var(--colorSubtleBackgroundPressed);}", ".r1bx0xiv:active .fui-TreeItemLayout__expandIcon{color:var(--colorNeutralForeground3Pressed);}", ".r1bx0xiv:hover{color:var(--colorNeutralForeground2Hover);background-color:var(--colorSubtleBackgroundHover);}", ".r1bx0xiv:hover .fui-TreeItemLayout__expandIcon{color:var(--colorNeutralForeground3Hover);}"]);
var useRootStyles16 = __styles2({
  leaf: {
    uwmqm3: ["f1k1erfc", "faevyjx"]
  },
  branch: {
    uwmqm3: ["fo100m9", "f6yw3pu"]
  },
  medium: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "figsok6",
    Bg96gwp: "f1i3iumi"
  },
  small: {
    sshi5w: "f1pha7fy",
    Bahqtrf: "fk6fouc",
    Be2twd7: "fy9rknc",
    Bhrd7zp: "figsok6",
    Bg96gwp: "fwrc4pm"
  },
  subtle: {},
  "subtle-alpha": {
    Jwef8y: "f146ro5n",
    ecr2s2: "fkam630"
  },
  transparent: {
    De3pzq: "f1c21dwh",
    Jwef8y: "fjxutwb",
    ecr2s2: "fophhak"
  }
}, {
  d: [".f1k1erfc{padding-left:calc(var(--fluent-TreeItem--level, 1) * var(--spacingHorizontalXXL));}", ".faevyjx{padding-right:calc(var(--fluent-TreeItem--level, 1) * var(--spacingHorizontalXXL));}", ".fo100m9{padding-left:calc((var(--fluent-TreeItem--level, 1) - 1) * var(--spacingHorizontalXXL));}", ".f6yw3pu{padding-right:calc((var(--fluent-TreeItem--level, 1) - 1) * var(--spacingHorizontalXXL));}", ".fk6fouc{font-family:var(--fontFamilyBase);}", ".fkhj508{font-size:var(--fontSizeBase300);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}", ".f1pha7fy{min-height:24px;}", ".fy9rknc{font-size:var(--fontSizeBase200);}", ".fwrc4pm{line-height:var(--lineHeightBase200);}", ".f1c21dwh{background-color:var(--colorTransparentBackground);}"],
  h: [".f146ro5n:hover{background-color:var(--colorSubtleBackgroundLightAlphaHover);}", ".fjxutwb:hover{background-color:var(--colorTransparentBackgroundHover);}"],
  a: [".fkam630:active{background-color:var(--colorSubtleBackgroundLightAlphaPressed);}", ".fophhak:active{background-color:var(--colorTransparentBackgroundPressed);}"]
});
var useActionsBaseStyles = __resetStyles("rzvs2in", "r17h8a29", [".rzvs2in{display:flex;margin-left:auto;position:relative;z-index:1;grid-area:aside;padding:0 var(--spacingHorizontalS);}", ".r17h8a29{display:flex;margin-right:auto;position:relative;z-index:1;grid-area:aside;padding:0 var(--spacingHorizontalS);}"]);
var useAsideBaseStyles = __resetStyles("r1825u21", "rezy0yk", [".r1825u21{display:flex;margin-left:auto;align-items:center;z-index:0;grid-area:aside;padding:0 var(--spacingHorizontalM);gap:var(--spacingHorizontalXS);}", ".rezy0yk{display:flex;margin-right:auto;align-items:center;z-index:0;grid-area:aside;padding:0 var(--spacingHorizontalM);gap:var(--spacingHorizontalXS);}"]);
var useExpandIconBaseStyles = __resetStyles("rh4pu5o", null, [".rh4pu5o{display:flex;align-items:center;justify-content:center;min-width:24px;box-sizing:border-box;color:var(--colorNeutralForeground3);flex:0 0 auto;padding:var(--spacingVerticalXS) 0;}"]);
var useMainBaseStyles = __resetStyles("rklbe47", null, [".rklbe47{padding:0 var(--spacingHorizontalXXS);}"]);
var useIconBaseStyles2 = __resetStyles("rphzgg1", null, [".rphzgg1{display:flex;align-items:center;color:var(--colorNeutralForeground2);line-height:var(--lineHeightBase500);font-size:var(--fontSizeBase500);}"]);
var useIconBeforeStyles = __styles2({
  medium: {
    z189sj: ["f7x41pl", "fruq291"]
  },
  small: {
    z189sj: ["ffczdla", "fgiv446"]
  }
}, {
  d: [".f7x41pl{padding-right:var(--spacingHorizontalXS);}", ".fruq291{padding-left:var(--spacingHorizontalXS);}", ".ffczdla{padding-right:var(--spacingHorizontalXXS);}", ".fgiv446{padding-left:var(--spacingHorizontalXXS);}"]
});
var useIconAfterStyles = __styles2({
  medium: {
    uwmqm3: ["fruq291", "f7x41pl"]
  },
  small: {
    uwmqm3: ["fgiv446", "ffczdla"]
  }
}, {
  d: [".fruq291{padding-left:var(--spacingHorizontalXS);}", ".f7x41pl{padding-right:var(--spacingHorizontalXS);}", ".fgiv446{padding-left:var(--spacingHorizontalXXS);}", ".ffczdla{padding-right:var(--spacingHorizontalXXS);}"]
});
var useTreeItemLayoutStyles_unstable = (state) => {
  "use no memo";
  const {
    main,
    iconAfter,
    iconBefore,
    expandIcon,
    root,
    aside,
    actions,
    selector
  } = state;
  const rootStyles = useRootStyles16();
  const rootBaseStyles = useRootBaseStyles2();
  const actionsBaseStyles = useActionsBaseStyles();
  const asideBaseStyles = useAsideBaseStyles();
  const mainBaseStyles = useMainBaseStyles();
  const expandIconBaseStyles = useExpandIconBaseStyles();
  const iconBaseStyles = useIconBaseStyles2();
  const iconBeforeStyles = useIconBeforeStyles();
  const iconAfterStyles = useIconAfterStyles();
  const size = useTreeContext_unstable((ctx) => ctx.size);
  const appearance = useTreeContext_unstable((ctx) => ctx.appearance);
  const itemType = useTreeItemContext_unstable((ctx) => ctx.itemType);
  root.className = mergeClasses(treeItemLayoutClassNames.root, rootBaseStyles, rootStyles[appearance], rootStyles[size], rootStyles[itemType], root.className);
  main.className = mergeClasses(treeItemLayoutClassNames.main, mainBaseStyles, main.className);
  if (expandIcon) {
    expandIcon.className = mergeClasses(treeItemLayoutClassNames.expandIcon, expandIconBaseStyles, expandIcon.className);
  }
  if (iconBefore) {
    iconBefore.className = mergeClasses(treeItemLayoutClassNames.iconBefore, iconBaseStyles, iconBeforeStyles[size], iconBefore.className);
  }
  if (iconAfter) {
    iconAfter.className = mergeClasses(treeItemLayoutClassNames.iconAfter, iconBaseStyles, iconAfterStyles[size], iconAfter.className);
  }
  if (actions) {
    actions.className = mergeClasses(treeItemLayoutClassNames.actions, actionsBaseStyles, actions.className);
  }
  if (aside) {
    aside.className = mergeClasses(treeItemLayoutClassNames.aside, asideBaseStyles, aside.className);
  }
  if (selector) {
    selector.className = mergeClasses(treeItemLayoutClassNames.selector, selector.className);
  }
  return state;
};

// node_modules/@fluentui/react-tree/lib/components/TreeItemPersonaLayout/useTreeItemPersonaLayoutStyles.styles.js
var treeItemPersonaLayoutClassNames = {
  root: "fui-TreeItemPersonaLayout",
  media: "fui-TreeItemPersonaLayout__media",
  description: "fui-TreeItemPersonaLayout__description",
  main: "fui-TreeItemPersonaLayout__main",
  expandIcon: "fui-TreeItemPersonaLayout__expandIcon",
  aside: "fui-TreeItemPersonaLayout__aside",
  actions: "fui-TreeItemPersonaLayout__actions",
  selector: "fui-TreeItemPersonaLayout__selector"
};
var useRootBaseStyles3 = __resetStyles("r1r98egg", null, ['.r1r98egg{display:grid;grid-template-rows:1fr auto;grid-template-columns:auto auto 1fr auto;grid-template-areas:"expandIcon media main        aside" "expandIcon media description aside";align-items:center;font-family:var(--fontFamilyBase);font-size:var(--fontSizeBase300);font-weight:var(--fontWeightRegular);line-height:var(--lineHeightBase300);}', ".r1r98egg:active{color:var(--colorNeutralForeground2Pressed);background-color:var(--colorSubtleBackgroundPressed);}", ".r1r98egg:active .fui-TreeItemPersonaLayout__expandIcon{color:var(--colorNeutralForeground3Pressed);}", ".r1r98egg:hover{color:var(--colorNeutralForeground2Hover);background-color:var(--colorSubtleBackgroundHover);}", ".r1r98egg:hover .fui-TreeItemPersonaLayout__expandIcon{color:var(--colorNeutralForeground3Hover);}"]);
var useRootStyles17 = __styles2({
  leaf: {
    uwmqm3: ["f1k1erfc", "faevyjx"]
  },
  branch: {
    uwmqm3: ["fo100m9", "f6yw3pu"]
  }
}, {
  d: [".f1k1erfc{padding-left:calc(var(--fluent-TreeItem--level, 1) * var(--spacingHorizontalXXL));}", ".faevyjx{padding-right:calc(var(--fluent-TreeItem--level, 1) * var(--spacingHorizontalXXL));}", ".fo100m9{padding-left:calc((var(--fluent-TreeItem--level, 1) - 1) * var(--spacingHorizontalXXL));}", ".f6yw3pu{padding-right:calc((var(--fluent-TreeItem--level, 1) - 1) * var(--spacingHorizontalXXL));}"]
});
var useMediaBaseStyles = __resetStyles("rkcde6g", "r1e986zr", [".rkcde6g{display:flex;align-items:center;width:32px;height:32px;grid-area:media;padding:0 var(--spacingHorizontalXS) 0 var(--spacingHorizontalXXS);}", ".r1e986zr{display:flex;align-items:center;width:32px;height:32px;grid-area:media;padding:0 var(--spacingHorizontalXXS) 0 var(--spacingHorizontalXS);}"]);
var useMainBaseStyles2 = __resetStyles("r1qjtz99", "rob5fcp", [".r1qjtz99{grid-area:main;padding:var(--spacingVerticalMNudge) var(--spacingHorizontalXS) var(--spacingVerticalMNudge) var(--spacingHorizontalS);}", ".rob5fcp{grid-area:main;padding:var(--spacingVerticalMNudge) var(--spacingHorizontalS) var(--spacingVerticalMNudge) var(--spacingHorizontalXS);}"]);
var useMainStyles = __styles2({
  withDescription: {
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: ["f1625emv", "f5y9hxg"]
  }
}, {
  d: [[".f1625emv{padding:var(--spacingVerticalMNudge) var(--spacingHorizontalXS) 0 var(--spacingHorizontalS);}", {
    p: -1
  }], [".f5y9hxg{padding:var(--spacingVerticalMNudge) var(--spacingHorizontalS) 0 var(--spacingHorizontalXS);}", {
    p: -1
  }]]
});
var useDescriptionBaseStyles = __resetStyles("r1bnsn1b", "r13x7gq", [".r1bnsn1b{grid-area:description;font-family:var(--fontFamilyBase);font-size:var(--fontSizeBase200);font-weight:var(--fontWeightRegular);line-height:var(--lineHeightBase200);padding:0 var(--spacingHorizontalXS) var(--spacingVerticalMNudge) var(--spacingHorizontalS);}", ".r13x7gq{grid-area:description;font-family:var(--fontFamilyBase);font-size:var(--fontSizeBase200);font-weight:var(--fontWeightRegular);line-height:var(--lineHeightBase200);padding:0 var(--spacingHorizontalS) var(--spacingVerticalMNudge) var(--spacingHorizontalXS);}"]);
var useActionsBaseStyles2 = __resetStyles("rzvs2in", "r17h8a29", [".rzvs2in{display:flex;margin-left:auto;position:relative;z-index:1;grid-area:aside;padding:0 var(--spacingHorizontalS);}", ".r17h8a29{display:flex;margin-right:auto;position:relative;z-index:1;grid-area:aside;padding:0 var(--spacingHorizontalS);}"]);
var useAsideBaseStyles2 = __resetStyles("r1825u21", "rezy0yk", [".r1825u21{display:flex;margin-left:auto;align-items:center;z-index:0;grid-area:aside;padding:0 var(--spacingHorizontalM);gap:var(--spacingHorizontalXS);}", ".rezy0yk{display:flex;margin-right:auto;align-items:center;z-index:0;grid-area:aside;padding:0 var(--spacingHorizontalM);gap:var(--spacingHorizontalXS);}"]);
var useExpandIconBaseStyles2 = __resetStyles("rn61xvs", null, [".rn61xvs{display:flex;align-items:center;justify-content:center;min-width:24px;box-sizing:border-box;color:var(--colorNeutralForeground3);grid-area:expandIcon;flex:0 0 auto;padding:var(--spacingVerticalXS) 0;}"]);
var useTreeItemPersonaLayoutStyles_unstable = (state) => {
  "use no memo";
  const rootBaseStyles = useRootBaseStyles3();
  const rootStyles = useRootStyles17();
  const mediaBaseStyles = useMediaBaseStyles();
  const descriptionBaseStyles = useDescriptionBaseStyles();
  const actionsBaseStyles = useActionsBaseStyles2();
  const asideBaseStyles = useAsideBaseStyles2();
  const expandIconBaseStyles = useExpandIconBaseStyles2();
  const mainBaseStyles = useMainBaseStyles2();
  const mainStyles = useMainStyles();
  const itemType = useTreeItemContext_unstable((ctx) => ctx.itemType);
  state.root.className = mergeClasses(treeItemPersonaLayoutClassNames.root, rootBaseStyles, rootStyles[itemType], state.root.className);
  state.media.className = mergeClasses(treeItemPersonaLayoutClassNames.media, mediaBaseStyles, state.media.className);
  if (state.main) {
    state.main.className = mergeClasses(treeItemPersonaLayoutClassNames.main, mainBaseStyles, state.description && mainStyles.withDescription, state.main.className);
  }
  if (state.description) {
    state.description.className = mergeClasses(treeItemPersonaLayoutClassNames.description, descriptionBaseStyles, state.description.className);
  }
  if (state.actions) {
    state.actions.className = mergeClasses(treeItemPersonaLayoutClassNames.actions, actionsBaseStyles, state.actions.className);
  }
  if (state.aside) {
    state.aside.className = mergeClasses(treeItemPersonaLayoutClassNames.aside, asideBaseStyles, state.aside.className);
  }
  if (state.expandIcon) {
    state.expandIcon.className = mergeClasses(treeItemPersonaLayoutClassNames.expandIcon, expandIconBaseStyles, state.expandIcon.className);
  }
  if (state.selector) {
    state.selector.className = mergeClasses(treeItemPersonaLayoutClassNames.selector, state.selector.className);
  }
  return state;
};

// node_modules/@fluentui/react-tree/lib/components/TreeItem/useTreeItemStyles.styles.js
var treeItemClassNames = {
  root: "fui-TreeItem"
};
var useBaseStyles8 = __resetStyles("r15xhw3a", "r2f6k57", [".r15xhw3a{position:relative;cursor:pointer;display:flex;flex-direction:column;box-sizing:border-box;background-color:var(--colorSubtleBackground);color:var(--colorNeutralForeground2);padding-right:var(--spacingHorizontalNone);}", ".r15xhw3a:focus{outline-style:none;}", ".r15xhw3a:focus-visible{outline-style:none;}", ".r15xhw3a[data-fui-focus-visible]>.fui-TreeItemLayout,.r15xhw3a[data-fui-focus-visible]>.fui-TreeItemPersonaLayout{border-radius:var(--borderRadiusMedium);outline-color:var(--colorStrokeFocus2);outline-radius:var(--borderRadiusMedium);outline-width:2px;outline-style:solid;}", ".r2f6k57{position:relative;cursor:pointer;display:flex;flex-direction:column;box-sizing:border-box;background-color:var(--colorSubtleBackground);color:var(--colorNeutralForeground2);padding-left:var(--spacingHorizontalNone);}", ".r2f6k57:focus{outline-style:none;}", ".r2f6k57:focus-visible{outline-style:none;}", ".r2f6k57[data-fui-focus-visible]>.fui-TreeItemLayout,.r2f6k57[data-fui-focus-visible]>.fui-TreeItemPersonaLayout{border-radius:var(--borderRadiusMedium);outline-color:var(--colorStrokeFocus2);outline-radius:var(--borderRadiusMedium);outline-width:2px;outline-style:solid;}"]);
var useStyles47 = __styles2({
  level1: {
    iytv0q: "f10bgyvd"
  },
  level2: {
    iytv0q: "f1h0rod3"
  },
  level3: {
    iytv0q: "fgoqafk"
  },
  level4: {
    iytv0q: "f75dvuh"
  },
  level5: {
    iytv0q: "fqk7yw6"
  },
  level6: {
    iytv0q: "f1r3z17b"
  },
  level7: {
    iytv0q: "f1hrpd1h"
  },
  level8: {
    iytv0q: "f1iy65d0"
  },
  level9: {
    iytv0q: "ftg42e5"
  },
  level10: {
    iytv0q: "fyat3t"
  }
}, {
  d: [".f10bgyvd{--fluent-TreeItem--level:1;}", ".f1h0rod3{--fluent-TreeItem--level:2;}", ".fgoqafk{--fluent-TreeItem--level:3;}", ".f75dvuh{--fluent-TreeItem--level:4;}", ".fqk7yw6{--fluent-TreeItem--level:5;}", ".f1r3z17b{--fluent-TreeItem--level:6;}", ".f1hrpd1h{--fluent-TreeItem--level:7;}", ".f1iy65d0{--fluent-TreeItem--level:8;}", ".ftg42e5{--fluent-TreeItem--level:9;}", ".fyat3t{--fluent-TreeItem--level:10;}"]
});
var useTreeItemStyles_unstable = (state) => {
  "use no memo";
  const baseStyles3 = useBaseStyles8();
  const styles = useStyles47();
  const {
    level
  } = state;
  state.root.className = mergeClasses(treeItemClassNames.root, baseStyles3, isStaticallyDefinedLevel(level) && styles[`level${level}`], state.root.className);
  return state;
};
function isStaticallyDefinedLevel(level) {
  return level >= 1 && level <= 10;
}

// node_modules/@fluentui/react-tree/lib/components/TreeItem/useTreeItemContextValues.js
function useTreeItemContextValues_unstable(state) {
  const {
    value,
    itemType,
    layoutRef,
    subtreeRef,
    open,
    expandIconRef,
    actionsRef,
    treeItemRef,
    // eslint-disable-next-line deprecation/deprecation
    isActionsVisible,
    // eslint-disable-next-line deprecation/deprecation
    isAsideVisible,
    selectionRef,
    checked
  } = state;
  const treeItem = {
    value,
    checked,
    itemType,
    layoutRef,
    subtreeRef,
    open,
    selectionRef,
    isActionsVisible,
    isAsideVisible,
    actionsRef,
    treeItemRef,
    expandIconRef
  };
  return {
    treeItem
  };
}

// node_modules/@fluentui/react-tree/lib/components/TreeItem/TreeItem.js
var TreeItem = React390.forwardRef((props, ref) => {
  const state = useTreeItem_unstable(props, ref);
  useTreeItemStyles_unstable(state);
  const contextValues = useTreeItemContextValues_unstable(state);
  return renderTreeItem_unstable(state, contextValues);
});
TreeItem.displayName = "TreeItem";

// node_modules/@fluentui/react-tree/lib/components/TreeItem/TreeItem.types.js
var React391 = __toESM(require_react());

// node_modules/@fluentui/react-tree/lib/components/FlatTreeItem/FlatTreeItem.js
var FlatTreeItem = TreeItem;

// node_modules/@fluentui/react-tree/lib/components/TreeItemLayout/TreeItemLayout.js
var React394 = __toESM(require_react());

// node_modules/@fluentui/react-tree/lib/components/TreeItemLayout/useTreeItemLayout.js
var React393 = __toESM(require_react());

// node_modules/@fluentui/react-tree/lib/components/TreeItemChevron.js
var React392 = __toESM(require_react());
var TreeItemChevron = React392.memo(() => {
  const open = useTreeItemContext_unstable((ctx) => ctx.open);
  const { dir } = useFluent();
  const expandIconRotation = open ? 90 : dir !== "rtl" ? 0 : 180;
  return React392.createElement(ChevronRight12Regular, {
    style: {
      ...expandIconInlineStyles[expandIconRotation],
      transition: `transform ${durations.durationNormal}ms ${curves.curveEasyEaseMax}`
    }
  });
});
TreeItemChevron.displayName = "TreeItemChevron";
var expandIconInlineStyles = {
  90: {
    transform: `rotate(90deg)`
  },
  0: {
    transform: `rotate(0deg)`
  },
  180: {
    transform: `rotate(180deg)`
  }
};

// node_modules/@fluentui/react-tree/lib/components/TreeItemLayout/useTreeItemLayout.js
var useTreeItemLayout_unstable = (props, ref) => {
  "use no memo";
  const { main, iconAfter, iconBefore } = props;
  const layoutRef = useTreeItemContext_unstable((ctx) => ctx.layoutRef);
  const selectionMode = useTreeContext_unstable((ctx) => ctx.selectionMode);
  const [isActionsVisibleFromProps, onActionVisibilityChange] = isResolvedShorthand(props.actions) ? [
    props.actions.visible,
    props.actions.onVisibilityChange
  ] : [
    void 0,
    void 0
  ];
  const [isActionsVisible, setIsActionsVisible] = useControllableState({
    state: isActionsVisibleFromProps,
    initialState: false
  });
  const selectionRef = useTreeItemContext_unstable((ctx) => ctx.selectionRef);
  const expandIconRef = useTreeItemContext_unstable((ctx) => ctx.expandIconRef);
  const actionsRef = useTreeItemContext_unstable((ctx) => ctx.actionsRef);
  const actionsRefInternal = React393.useRef(null);
  const treeItemRef = useTreeItemContext_unstable((ctx) => ctx.treeItemRef);
  const subtreeRef = useTreeItemContext_unstable((ctx) => ctx.subtreeRef);
  const checked = useTreeItemContext_unstable((ctx) => ctx.checked);
  const isBranch = useTreeItemContext_unstable((ctx) => ctx.itemType === "branch");
  assertIsRefObject(treeItemRef);
  assertIsRefObject(subtreeRef);
  const setActionsVisibleIfNotFromSubtree = React393.useCallback((event) => {
    const isTargetFromSubtree = Boolean(subtreeRef.current && elementContains(subtreeRef.current, event.target));
    if (!isTargetFromSubtree) {
      onActionVisibilityChange === null || onActionVisibilityChange === void 0 ? void 0 : onActionVisibilityChange(event, {
        visible: true,
        event,
        type: event.type
      });
      setIsActionsVisible(true);
    }
  }, [
    subtreeRef,
    setIsActionsVisible,
    onActionVisibilityChange
  ]);
  const setActionsInvisibleIfNotFromSubtree = React393.useCallback((event) => {
    const isRelatedTargetFromActions = () => Boolean(actionsRefInternal.current && elementContains(actionsRefInternal.current, event.relatedTarget));
    const isRelatedTargetFromTreeItem = () => Boolean(treeItemRef.current && elementContains(treeItemRef.current, event.relatedTarget));
    const isTargetFromActions = () => {
      var _actionsRefInternal_current;
      return Boolean((_actionsRefInternal_current = actionsRefInternal.current) === null || _actionsRefInternal_current === void 0 ? void 0 : _actionsRefInternal_current.contains(event.target));
    };
    if (isRelatedTargetFromActions()) {
      onActionVisibilityChange === null || onActionVisibilityChange === void 0 ? void 0 : onActionVisibilityChange(event, {
        visible: true,
        event,
        type: event.type
      });
      setIsActionsVisible(true);
      return;
    }
    if (isTargetFromActions() && isRelatedTargetFromTreeItem()) {
      return;
    }
    onActionVisibilityChange === null || onActionVisibilityChange === void 0 ? void 0 : onActionVisibilityChange(event, {
      visible: false,
      event,
      type: event.type
    });
    setIsActionsVisible(false);
  }, [
    setIsActionsVisible,
    onActionVisibilityChange,
    treeItemRef
  ]);
  const expandIcon = slot_exports.optional(props.expandIcon, {
    renderByDefault: isBranch,
    defaultProps: {
      children: React393.createElement(TreeItemChevron, null),
      "aria-hidden": true
    },
    elementType: "div"
  });
  const expandIconRefs = useMergedRefs(expandIcon === null || expandIcon === void 0 ? void 0 : expandIcon.ref, expandIconRef);
  if (expandIcon) {
    expandIcon.ref = expandIconRefs;
  }
  const arrowNavigationProps = useArrowNavigationGroup({
    circular: true,
    axis: "horizontal"
  });
  const actions = isActionsVisible ? slot_exports.optional(props.actions, {
    defaultProps: {
      ...arrowNavigationProps,
      role: "toolbar"
    },
    elementType: "div"
  }) : void 0;
  actions === null || actions === void 0 ? true : delete actions.visible;
  actions === null || actions === void 0 ? true : delete actions.onVisibilityChange;
  const actionsRefs = useMergedRefs(actions === null || actions === void 0 ? void 0 : actions.ref, actionsRef, actionsRefInternal);
  const handleActionsBlur = useEventCallback((event) => {
    if (isResolvedShorthand(props.actions)) {
      var _props_actions_onBlur, _props_actions;
      (_props_actions_onBlur = (_props_actions = props.actions).onBlur) === null || _props_actions_onBlur === void 0 ? void 0 : _props_actions_onBlur.call(_props_actions, event);
    }
    const isRelatedTargetFromActions = Boolean(elementContains(event.currentTarget, event.relatedTarget));
    onActionVisibilityChange === null || onActionVisibilityChange === void 0 ? void 0 : onActionVisibilityChange(event, {
      visible: isRelatedTargetFromActions,
      event,
      type: event.type
    });
    setIsActionsVisible(isRelatedTargetFromActions);
  });
  if (actions) {
    actions.ref = actionsRefs;
    actions.onBlur = handleActionsBlur;
  }
  const hasActions = Boolean(props.actions);
  React393.useEffect(() => {
    if (treeItemRef.current && hasActions && isActionsVisibleFromProps === void 0) {
      const treeItemElement = treeItemRef.current;
      const handleMouseOver = setActionsVisibleIfNotFromSubtree;
      const handleMouseOut = setActionsInvisibleIfNotFromSubtree;
      const handleFocus = setActionsVisibleIfNotFromSubtree;
      const handleBlur = setActionsInvisibleIfNotFromSubtree;
      treeItemElement.addEventListener("mouseover", handleMouseOver);
      treeItemElement.addEventListener("mouseout", handleMouseOut);
      treeItemElement.addEventListener("focus", handleFocus);
      treeItemElement.addEventListener("blur", handleBlur);
      return () => {
        treeItemElement.removeEventListener("mouseover", handleMouseOver);
        treeItemElement.removeEventListener("mouseout", handleMouseOut);
        treeItemElement.removeEventListener("focus", handleFocus);
        treeItemElement.removeEventListener("blur", handleBlur);
      };
    }
  }, [
    hasActions,
    treeItemRef,
    isActionsVisibleFromProps,
    setActionsVisibleIfNotFromSubtree,
    setActionsInvisibleIfNotFromSubtree
  ]);
  return {
    components: {
      root: "div",
      expandIcon: "div",
      iconBefore: "div",
      main: "div",
      iconAfter: "div",
      actions: "div",
      aside: "div",
      // Casting here to a union between checkbox and radio
      selector: selectionMode === "multiselect" ? Checkbox : Radio
    },
    buttonContextValue: {
      size: "small"
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      ...props,
      // FIXME:
      // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`
      // but since it would be a breaking change to fix it, we are casting ref to it's proper type
      ref: useMergedRefs(ref, layoutRef)
    }), {
      elementType: "div"
    }),
    iconBefore: slot_exports.optional(iconBefore, {
      elementType: "div"
    }),
    main: slot_exports.always(main, {
      elementType: "div"
    }),
    iconAfter: slot_exports.optional(iconAfter, {
      elementType: "div"
    }),
    aside: !isActionsVisible ? slot_exports.optional(props.aside, {
      elementType: "div"
    }) : void 0,
    actions,
    expandIcon,
    selector: slot_exports.optional(props.selector, {
      renderByDefault: selectionMode !== "none",
      defaultProps: {
        checked,
        tabIndex: -1,
        "aria-hidden": true,
        ref: selectionRef
      },
      elementType: selectionMode === "multiselect" ? Checkbox : Radio
    })
  };
};
function assertIsRefObject(ref) {
  if (true) {
    if (typeof ref !== "object" || ref === null || !("current" in ref)) {
      throw new Error(`
        @fluentui/react-tree [${useTreeItemLayout_unstable.name}]:
        Internal Error: contextual ref is not a RefObject! Please report this bug immediately, as contextual refs should be RefObjects.
      `);
    }
  }
}

// node_modules/@fluentui/react-tree/lib/components/TreeItemLayout/renderTreeItemLayout.js
var renderTreeItemLayout_unstable = (state) => {
  assertSlots(state);
  return jsxs(state.root, {
    children: [
      state.expandIcon && jsx(state.expandIcon, {}),
      state.selector && jsx(state.selector, {}),
      state.iconBefore && jsx(state.iconBefore, {}),
      jsx(state.main, {
        children: state.root.children
      }),
      state.iconAfter && jsx(state.iconAfter, {}),
      jsxs(ButtonContextProvider, {
        value: state.buttonContextValue,
        children: [
          state.actions && jsx(state.actions, {}),
          state.aside && jsx(state.aside, {})
        ]
      })
    ]
  });
};

// node_modules/@fluentui/react-tree/lib/components/TreeItemLayout/TreeItemLayout.js
var TreeItemLayout = React394.forwardRef((props, ref) => {
  const state = useTreeItemLayout_unstable(props, ref);
  useTreeItemLayoutStyles_unstable(state);
  return renderTreeItemLayout_unstable(state);
});
TreeItemLayout.displayName = "TreeItemLayout";

// node_modules/@fluentui/react-tree/lib/components/TreeItemPersonaLayout/TreeItemPersonaLayout.js
var React397 = __toESM(require_react());

// node_modules/@fluentui/react-tree/lib/components/TreeItemPersonaLayout/useTreeItemPersonaLayout.js
var React395 = __toESM(require_react());
var useTreeItemPersonaLayout_unstable = (props, ref) => {
  const { media, children: children2, main, description } = props;
  const treeItemLayoutState = useTreeItemLayout_unstable({
    ...props,
    iconBefore: null,
    iconAfter: null
  }, ref);
  const size = useTreeContext_unstable((ctx) => ctx.size);
  const selectionMode = useTreeContext_unstable((ctx) => ctx.selectionMode);
  return {
    ...treeItemLayoutState,
    components: {
      expandIcon: "div",
      main: "div",
      description: "div",
      root: "div",
      media: "div",
      aside: "div",
      actions: "div",
      // Casting here to a union between checkbox and radio
      selector: selectionMode === "multiselect" ? Checkbox : Radio
    },
    avatarSize: treeAvatarSize[size],
    main: slot_exports.always(main, {
      defaultProps: {
        children: children2
      },
      elementType: "div"
    }),
    media: slot_exports.always(media, {
      elementType: "div"
    }),
    description: slot_exports.optional(description, {
      elementType: "div"
    })
  };
};

// node_modules/@fluentui/react-tree/lib/components/TreeItemPersonaLayout/renderTreeItemPersonaLayout.js
var renderTreeItemPersonaLayout_unstable = (state, contextValues) => {
  assertSlots(state);
  return jsxs(state.root, {
    children: [
      state.expandIcon && jsx(state.expandIcon, {}),
      state.selector && jsx(state.selector, {}),
      jsx(AvatarContextProvider, {
        value: contextValues.avatar,
        children: jsx(state.media, {})
      }),
      jsx(state.main, {}),
      state.description && jsx(state.description, {}),
      jsxs(ButtonContextProvider, {
        value: state.buttonContextValue,
        children: [
          state.actions && jsx(state.actions, {}),
          state.aside && jsx(state.aside, {})
        ]
      })
    ]
  });
};

// node_modules/@fluentui/react-tree/lib/components/TreeItemPersonaLayout/useTreeItemPersonaLayoutContextValues.js
var React396 = __toESM(require_react());
function useTreeItemPersonaLayoutContextValues_unstable(state) {
  const { avatarSize } = state;
  const avatar = React396.useMemo(() => ({
    size: avatarSize
  }), [
    avatarSize
  ]);
  return {
    avatar
  };
}

// node_modules/@fluentui/react-tree/lib/components/TreeItemPersonaLayout/TreeItemPersonaLayout.js
var TreeItemPersonaLayout = React397.forwardRef((props, ref) => {
  const state = useTreeItemPersonaLayout_unstable(props, ref);
  useTreeItemPersonaLayoutStyles_unstable(state);
  const contextValues = useTreeItemPersonaLayoutContextValues_unstable(state);
  return renderTreeItemPersonaLayout_unstable(state, contextValues);
});
TreeItemPersonaLayout.displayName = "TreeItemPersonaLayout";

// node_modules/@fluentui/react-tree/lib/utils/flattenTree.js
function flattenTreeRecursive(items, parent, level = 1) {
  return items.reduce((acc, { subtree, ...item }, index) => {
    const flatTreeItem = {
      "aria-level": level,
      "aria-posinset": index + 1,
      "aria-setsize": items.length,
      parentValue: parent === null || parent === void 0 ? void 0 : parent.value,
      ...item
    };
    acc.push(flatTreeItem);
    if (subtree !== void 0) {
      acc.push(...flattenTreeRecursive(subtree, flatTreeItem, level + 1));
    }
    return acc;
  }, []);
}
var flattenTree_unstable = (items) => flattenTreeRecursive(items);

// node_modules/@fluentui/react-tags/lib/components/Tag/Tag.js
var React402 = __toESM(require_react());

// node_modules/@fluentui/react-tags/lib/components/Tag/useTag.js
var React399 = __toESM(require_react());

// node_modules/@fluentui/react-tags/lib/contexts/tagGroupContext.js
var React398 = __toESM(require_react());
var TagGroupContext = React398.createContext(void 0);
var tagGroupContextDefaultValue = {
  handleTagDismiss: () => ({}),
  size: "medium",
  role: "toolbar"
};
var TagGroupContextProvider = TagGroupContext.Provider;
var useTagGroupContext_unstable = () => {
  var _React_useContext;
  return (_React_useContext = React398.useContext(TagGroupContext)) !== null && _React_useContext !== void 0 ? _React_useContext : tagGroupContextDefaultValue;
};

// node_modules/@fluentui/react-tags/lib/components/Tag/useTag.js
var tagAvatarSizeMap = {
  medium: 28,
  small: 20,
  "extra-small": 16
};
var tagAvatarShapeMap = {
  rounded: "square",
  circular: "circular"
};
var useTag_unstable = (props, ref) => {
  const { handleTagDismiss, size: contextSize, disabled: contextDisabled, appearance: contextAppearance, dismissible: contextDismissible, role: tagGroupRole } = useTagGroupContext_unstable();
  const id = useId("fui-Tag", props.id);
  const { appearance = contextAppearance !== null && contextAppearance !== void 0 ? contextAppearance : "filled", disabled = false, dismissible = contextDismissible !== null && contextDismissible !== void 0 ? contextDismissible : false, shape = "rounded", size = contextSize, value = id } = props;
  const dismissOnClick = useEventCallback((ev) => {
    var _props_onClick;
    (_props_onClick = props.onClick) === null || _props_onClick === void 0 ? void 0 : _props_onClick.call(props, ev);
    if (!ev.defaultPrevented) {
      handleTagDismiss === null || handleTagDismiss === void 0 ? void 0 : handleTagDismiss(ev, {
        value
      });
    }
  });
  const dismissOnKeyDown = useEventCallback((ev) => {
    var _props_onKeyDown;
    props === null || props === void 0 ? void 0 : (_props_onKeyDown = props.onKeyDown) === null || _props_onKeyDown === void 0 ? void 0 : _props_onKeyDown.call(props, ev);
    if (!ev.defaultPrevented && (ev.key === Delete || ev.key === Backspace)) {
      handleTagDismiss === null || handleTagDismiss === void 0 ? void 0 : handleTagDismiss(ev, {
        value
      });
    }
  });
  const elementType = dismissible ? "button" : "span";
  return {
    appearance,
    avatarShape: tagAvatarShapeMap[shape],
    avatarSize: tagAvatarSizeMap[size],
    disabled: contextDisabled ? true : disabled,
    dismissible,
    shape,
    size,
    components: {
      root: elementType,
      media: "span",
      icon: "span",
      primaryText: "span",
      secondaryText: "span",
      dismissIcon: "span"
    },
    root: slot_exports.always(getIntrinsicElementProps(elementType, {
      ref,
      role: tagGroupRole === "listbox" ? "option" : void 0,
      ...props,
      disabled: contextDisabled ? true : disabled,
      id,
      ...dismissible && {
        onClick: dismissOnClick,
        onKeyDown: dismissOnKeyDown
      }
    }), {
      elementType
    }),
    media: slot_exports.optional(props.media, {
      elementType: "span"
    }),
    icon: slot_exports.optional(props.icon, {
      elementType: "span"
    }),
    primaryText: slot_exports.optional(props.primaryText, {
      renderByDefault: true,
      defaultProps: {
        children: props.children
      },
      elementType: "span"
    }),
    secondaryText: slot_exports.optional(props.secondaryText, {
      elementType: "span"
    }),
    dismissIcon: slot_exports.optional(props.dismissIcon, {
      renderByDefault: dismissible,
      defaultProps: {
        children: React399.createElement(DismissRegular, null)
      },
      elementType: "span"
    })
  };
};

// node_modules/@fluentui/react-tags/lib/components/Tag/renderTag.js
var renderTag_unstable = (state, contextValues) => {
  assertSlots(state);
  return jsxs(state.root, {
    children: [
      state.media && jsx(AvatarContextProvider, {
        value: contextValues.avatar,
        children: jsx(state.media, {})
      }),
      state.icon && jsx(state.icon, {}),
      state.primaryText && jsx(state.primaryText, {}),
      state.secondaryText && jsx(state.secondaryText, {}),
      state.dismissIcon && state.dismissible && jsx(state.dismissIcon, {})
    ]
  });
};

// node_modules/@fluentui/react-tags/lib/components/Tag/useTagStyles.styles.js
var tagClassNames = {
  root: "fui-Tag",
  media: "fui-Tag__media",
  icon: "fui-Tag__icon",
  primaryText: "fui-Tag__primaryText",
  secondaryText: "fui-Tag__secondaryText",
  dismissIcon: "fui-Tag__dismissIcon"
};
var baseStyles = {
  // reset default button style:
  fontFamily: "inherit",
  padding: "0px",
  appearance: "button",
  textAlign: "unset",
  display: "inline-grid",
  alignItems: "center",
  gridTemplateAreas: `
  "media primary   dismissIcon"
  "media secondary dismissIcon"
  `,
  boxSizing: "border-box",
  width: "fit-content",
  border: `${tokens.strokeWidthThin} solid ${tokens.colorTransparentStroke}`
};
var useRootRoundedBaseClassName = __resetStyles("r1wstn2o", "r7a32g8", {
  r: ['.r1wstn2o{font-family:inherit;padding:0px;-webkit-appearance:button;-moz-appearance:button;appearance:button;text-align:unset;display:inline-grid;align-items:center;grid-template-areas:"media primary   dismissIcon" "media secondary dismissIcon";box-sizing:border-box;width:fit-content;border:var(--strokeWidthThin) solid var(--colorTransparentStroke);border-radius:var(--borderRadiusMedium);}', ".r1wstn2o[data-fui-focus-visible]{border-radius:var(--borderRadiusMedium);outline:var(--strokeWidthThick) solid var(--colorStrokeFocus2);}", '.r7a32g8{font-family:inherit;padding:0px;-webkit-appearance:button;-moz-appearance:button;appearance:button;text-align:unset;display:inline-grid;align-items:center;grid-template-areas:"media primary   dismissIcon" "media secondary dismissIcon";box-sizing:border-box;width:fit-content;border:var(--strokeWidthThin) solid var(--colorTransparentStroke);border-radius:var(--borderRadiusMedium);}', ".r7a32g8[data-fui-focus-visible]{border-radius:var(--borderRadiusMedium);outline:var(--strokeWidthThick) solid var(--colorStrokeFocus2);}"],
  s: ['@media (forced-colors: active){.r1wstn2o{position:relative;}.r1wstn2o::before{content:"";border-top:var(--strokeWidthThin) solid;position:absolute;top:-1px;left:-1px;right:-1px;bottom:-1px;border-top-left-radius:var(--borderRadiusMedium);border-top-right-radius:var(--borderRadiusMedium);}}', '@media (forced-colors: active){.r7a32g8{position:relative;}.r7a32g8::before{content:"";border-top:var(--strokeWidthThin) solid;position:absolute;top:-1px;right:-1px;left:-1px;bottom:-1px;border-top-right-radius:var(--borderRadiusMedium);border-top-left-radius:var(--borderRadiusMedium);}}']
});
var useRootCircularBaseClassName = __resetStyles("rlv0lsa", "r18mdwmi", {
  r: ['.rlv0lsa{font-family:inherit;padding:0px;-webkit-appearance:button;-moz-appearance:button;appearance:button;text-align:unset;display:inline-grid;align-items:center;grid-template-areas:"media primary   dismissIcon" "media secondary dismissIcon";box-sizing:border-box;width:fit-content;border:var(--strokeWidthThin) solid var(--colorTransparentStroke);border-radius:var(--borderRadiusCircular);}', ".rlv0lsa[data-fui-focus-visible]{border-radius:var(--borderRadiusCircular);outline:var(--strokeWidthThick) solid var(--colorStrokeFocus2);}", '.r18mdwmi{font-family:inherit;padding:0px;-webkit-appearance:button;-moz-appearance:button;appearance:button;text-align:unset;display:inline-grid;align-items:center;grid-template-areas:"media primary   dismissIcon" "media secondary dismissIcon";box-sizing:border-box;width:fit-content;border:var(--strokeWidthThin) solid var(--colorTransparentStroke);border-radius:var(--borderRadiusCircular);}', ".r18mdwmi[data-fui-focus-visible]{border-radius:var(--borderRadiusCircular);outline:var(--strokeWidthThick) solid var(--colorStrokeFocus2);}"],
  s: ['@media (forced-colors: active){.rlv0lsa{position:relative;}.rlv0lsa::before{content:"";border-top:var(--strokeWidthThin) solid;border-left:var(--strokeWidthThin) solid;border-right:var(--strokeWidthThin) solid;position:absolute;top:-1px;left:-1px;right:-1px;bottom:-1px;border-radius:var(--borderRadiusCircular);}}', '@media (forced-colors: active){.r18mdwmi{position:relative;}.r18mdwmi::before{content:"";border-top:var(--strokeWidthThin) solid;border-right:var(--strokeWidthThin) solid;border-left:var(--strokeWidthThin) solid;position:absolute;top:-1px;right:-1px;left:-1px;bottom:-1px;border-radius:var(--borderRadiusCircular);}}']
});
var useRootStyles18 = __styles2({
  filled: {
    De3pzq: "f16xq7d1",
    sj55zd: "fkfq4zb"
  },
  outline: {
    De3pzq: "fhovq9v",
    sj55zd: "fkfq4zb",
    g2u3we: "fj3muxo",
    h3c5rm: ["f1akhkt", "f1lxtadh"],
    B9xav0g: "f1aperda",
    zhjwy3: ["f1lxtadh", "f1akhkt"]
  },
  brand: {
    De3pzq: "f16xkysk",
    sj55zd: "faj9fo0"
  },
  medium: {
    Bqenvij: "f1d2rq10"
  },
  small: {
    Bqenvij: "frvgh55"
  },
  "extra-small": {
    Bqenvij: "fjamq6b"
  }
}, {
  d: [".f16xq7d1{background-color:var(--colorNeutralBackground3);}", ".fkfq4zb{color:var(--colorNeutralForeground2);}", ".fhovq9v{background-color:var(--colorSubtleBackground);}", ".fj3muxo{border-top-color:var(--colorNeutralStroke1);}", ".f1akhkt{border-right-color:var(--colorNeutralStroke1);}", ".f1lxtadh{border-left-color:var(--colorNeutralStroke1);}", ".f1aperda{border-bottom-color:var(--colorNeutralStroke1);}", ".f16xkysk{background-color:var(--colorBrandBackground2);}", ".faj9fo0{color:var(--colorBrandForeground2);}", ".f1d2rq10{height:32px;}", ".frvgh55{height:24px;}", ".fjamq6b{height:20px;}"]
});
var useRootDisabledStyles3 = __styles2({
  filled: {
    Bceei9c: "fdrzuqr",
    De3pzq: "f1bg9a2p",
    sj55zd: "f1s2aq7o",
    g2u3we: "fgig46g",
    h3c5rm: ["f1mxt3zg", "fziff3p"],
    B9xav0g: "f250w3l",
    zhjwy3: ["fziff3p", "f1mxt3zg"]
  },
  outline: {
    Bceei9c: "fdrzuqr",
    De3pzq: "fhovq9v",
    sj55zd: "f1s2aq7o",
    g2u3we: "f1jj8ep1",
    h3c5rm: ["f15xbau", "fy0fskl"],
    B9xav0g: "f4ikngz",
    zhjwy3: ["fy0fskl", "f15xbau"]
  },
  brand: {
    Bceei9c: "fdrzuqr",
    De3pzq: "f1bg9a2p",
    sj55zd: "f1s2aq7o",
    g2u3we: "fgig46g",
    h3c5rm: ["f1mxt3zg", "fziff3p"],
    B9xav0g: "f250w3l",
    zhjwy3: ["fziff3p", "f1mxt3zg"]
  }
}, {
  d: [".fdrzuqr{cursor:not-allowed;}", ".f1bg9a2p{background-color:var(--colorNeutralBackgroundDisabled);}", ".f1s2aq7o{color:var(--colorNeutralForegroundDisabled);}", ".fgig46g{border-top-color:var(--colorTransparentStrokeDisabled);}", ".f1mxt3zg{border-right-color:var(--colorTransparentStrokeDisabled);}", ".fziff3p{border-left-color:var(--colorTransparentStrokeDisabled);}", ".f250w3l{border-bottom-color:var(--colorTransparentStrokeDisabled);}", ".fhovq9v{background-color:var(--colorSubtleBackground);}", ".f1jj8ep1{border-top-color:var(--colorNeutralStrokeDisabled);}", ".f15xbau{border-right-color:var(--colorNeutralStrokeDisabled);}", ".fy0fskl{border-left-color:var(--colorNeutralStrokeDisabled);}", ".f4ikngz{border-bottom-color:var(--colorNeutralStrokeDisabled);}"]
});
var useRootWithoutMediaStyles = __styles2({
  medium: {
    uwmqm3: ["f1rtp3s9", "f18k1jr3"]
  },
  small: {
    uwmqm3: ["f15vdbe4", "fwiuce9"]
  },
  "extra-small": {
    uwmqm3: ["f15vdbe4", "fwiuce9"]
  }
}, {
  d: [".f1rtp3s9{padding-left:7px;}", ".f18k1jr3{padding-right:7px;}", ".f15vdbe4{padding-left:5px;}", ".fwiuce9{padding-right:5px;}"]
});
var useRootWithoutDismissStyles = __styles2({
  medium: {
    z189sj: ["f18k1jr3", "f1rtp3s9"]
  },
  small: {
    z189sj: ["fwiuce9", "f15vdbe4"]
  },
  "extra-small": {
    z189sj: ["fwiuce9", "f15vdbe4"]
  }
}, {
  d: [".f18k1jr3{padding-right:7px;}", ".f1rtp3s9{padding-left:7px;}", ".fwiuce9{padding-right:5px;}", ".f15vdbe4{padding-left:5px;}"]
});
var useIconStyles8 = __styles2({
  base: {
    Bw0ie65: 0,
    Br312pm: 0,
    nk6f5a: 0,
    Ijaq50: 0,
    Bq1tomu: "fujjg13",
    mc9l5x: "f22iagw"
  },
  medium: {
    uwmqm3: ["f1rtp3s9", "f18k1jr3"],
    z189sj: ["f7x41pl", "fruq291"],
    a9b677: "f64fuq3",
    Be2twd7: "fe5j1ua"
  },
  small: {
    uwmqm3: ["f15vdbe4", "fwiuce9"],
    z189sj: ["ffczdla", "fgiv446"],
    a9b677: "fjw5fx7",
    Be2twd7: "f4ybsrx"
  },
  "extra-small": {
    uwmqm3: ["f15vdbe4", "fwiuce9"],
    z189sj: ["ffczdla", "fgiv446"],
    a9b677: "frx94fk",
    Be2twd7: "f1ugzwwg"
  }
}, {
  d: [[".fujjg13{grid-area:media;}", {
    p: -1
  }], ".f22iagw{display:flex;}", ".f1rtp3s9{padding-left:7px;}", ".f18k1jr3{padding-right:7px;}", ".f7x41pl{padding-right:var(--spacingHorizontalXS);}", ".fruq291{padding-left:var(--spacingHorizontalXS);}", ".f64fuq3{width:20px;}", ".fe5j1ua{font-size:20px;}", ".f15vdbe4{padding-left:5px;}", ".fwiuce9{padding-right:5px;}", ".ffczdla{padding-right:var(--spacingHorizontalXXS);}", ".fgiv446{padding-left:var(--spacingHorizontalXXS);}", ".fjw5fx7{width:16px;}", ".f4ybsrx{font-size:16px;}", ".frx94fk{width:12px;}", ".f1ugzwwg{font-size:12px;}"]
});
var useMediaStyles = __styles2({
  base: {
    Bw0ie65: 0,
    Br312pm: 0,
    nk6f5a: 0,
    Ijaq50: 0,
    Bq1tomu: "fujjg13",
    mc9l5x: "f22iagw",
    uwmqm3: ["f10xn8zz", "f136y8j8"]
  },
  medium: {
    z189sj: ["f1vdfbxk", "f1f5gg8d"]
  },
  small: {
    z189sj: ["fdw0yi8", "fk8j09s"]
  },
  "extra-small": {
    z189sj: ["fdw0yi8", "fk8j09s"]
  }
}, {
  d: [[".fujjg13{grid-area:media;}", {
    p: -1
  }], ".f22iagw{display:flex;}", ".f10xn8zz{padding-left:1px;}", ".f136y8j8{padding-right:1px;}", ".f1vdfbxk{padding-right:var(--spacingHorizontalS);}", ".f1f5gg8d{padding-left:var(--spacingHorizontalS);}", ".fdw0yi8{padding-right:var(--spacingHorizontalSNudge);}", ".fk8j09s{padding-left:var(--spacingHorizontalSNudge);}"]
});
var useDismissIconStyles = __styles2({
  base: {
    Bw0ie65: 0,
    Br312pm: 0,
    nk6f5a: 0,
    Ijaq50: 0,
    Bq1tomu: "f1k1gsvr",
    mc9l5x: "f22iagw",
    ze5xyy: "f4xjyn1",
    oy3o9n: "f1xtr1b3"
  },
  medium: {
    uwmqm3: ["fruq291", "f7x41pl"],
    z189sj: ["f18k1jr3", "f1rtp3s9"],
    Be2twd7: "fe5j1ua"
  },
  small: {
    uwmqm3: ["fgiv446", "ffczdla"],
    z189sj: ["fwiuce9", "f15vdbe4"],
    Be2twd7: "f4ybsrx"
  },
  "extra-small": {
    uwmqm3: ["fgiv446", "ffczdla"],
    z189sj: ["fwiuce9", "f15vdbe4"],
    Be2twd7: "f1ugzwwg"
  },
  filled: {
    eoavqd: "f8491dx",
    Bi91k9c: "f3ymbdj",
    lj723h: "fryz5bw"
  },
  outline: {
    eoavqd: "f8491dx",
    Bi91k9c: "f3ymbdj",
    lj723h: "fryz5bw"
  },
  brand: {
    eoavqd: "f8491dx",
    Bi91k9c: "f3ymbdj",
    lj723h: "fryz5bw"
  }
}, {
  d: [[".f1k1gsvr{grid-area:dismissIcon;}", {
    p: -1
  }], ".f22iagw{display:flex;}", ".fruq291{padding-left:var(--spacingHorizontalXS);}", ".f7x41pl{padding-right:var(--spacingHorizontalXS);}", ".f18k1jr3{padding-right:7px;}", ".f1rtp3s9{padding-left:7px;}", ".fe5j1ua{font-size:20px;}", ".fgiv446{padding-left:var(--spacingHorizontalXXS);}", ".ffczdla{padding-right:var(--spacingHorizontalXXS);}", ".fwiuce9{padding-right:5px;}", ".f15vdbe4{padding-left:5px;}", ".f4ybsrx{font-size:16px;}", ".f1ugzwwg{font-size:12px;}"],
  m: [["@media (forced-colors: active){.f4xjyn1:hover{color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1xtr1b3:active{color:Highlight;}}", {
    m: "(forced-colors: active)"
  }]],
  h: [".f8491dx:hover{cursor:pointer;}", ".f3ymbdj:hover{color:var(--colorCompoundBrandForeground1Hover);}"],
  a: [".fryz5bw:active{color:var(--colorCompoundBrandForeground1Pressed);}"]
});
var usePrimaryTextStyles = __styles2({
  base: {
    Huce71: "fz5stix",
    uwmqm3: ["fgiv446", "ffczdla"],
    z189sj: ["ffczdla", "fgiv446"]
  },
  medium: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "figsok6",
    Bg96gwp: "f1i3iumi"
  },
  small: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fy9rknc",
    Bhrd7zp: "figsok6",
    Bg96gwp: "fwrc4pm"
  },
  "extra-small": {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fy9rknc",
    Bhrd7zp: "figsok6",
    Bg96gwp: "fwrc4pm"
  },
  withoutSecondaryText: {
    Br312pm: "faqcfhe",
    Ijaq50: "f1q3ipgb",
    nk6f5a: "fc0ab3q",
    Byoj8tv: "f1g03r3y"
  },
  withSecondaryText: {
    Bw0ie65: 0,
    Br312pm: 0,
    nk6f5a: 0,
    Ijaq50: 0,
    Bq1tomu: "f1ebragv",
    Bahqtrf: "fk6fouc",
    Be2twd7: "fy9rknc",
    Bhrd7zp: "figsok6",
    Bg96gwp: "fwrc4pm",
    B6of3ja: "f1ryq6si"
  }
}, {
  d: [".fz5stix{white-space:nowrap;}", ".fgiv446{padding-left:var(--spacingHorizontalXXS);}", ".ffczdla{padding-right:var(--spacingHorizontalXXS);}", ".fk6fouc{font-family:var(--fontFamilyBase);}", ".fkhj508{font-size:var(--fontSizeBase300);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}", ".fy9rknc{font-size:var(--fontSizeBase200);}", ".fwrc4pm{line-height:var(--lineHeightBase200);}", ".faqcfhe{grid-column-start:primary;}", ".f1q3ipgb{grid-row-start:primary;}", ".fc0ab3q{grid-row-end:secondary;}", ".f1g03r3y{padding-bottom:var(--spacingHorizontalXXS);}", [".f1ebragv{grid-area:primary;}", {
    p: -1
  }], ".f1ryq6si{margin-top:-2px;}"]
});
var useSecondaryTextBaseClassName = __resetStyles("r7hv1ps", "rnrslm9", [".r7hv1ps{grid-area:secondary;padding-left:var(--spacingHorizontalXXS);padding-right:var(--spacingHorizontalXXS);font-family:var(--fontFamilyBase);font-size:var(--fontSizeBase100);font-weight:var(--fontWeightRegular);line-height:var(--lineHeightBase100);white-space:nowrap;}", ".rnrslm9{grid-area:secondary;padding-right:var(--spacingHorizontalXXS);padding-left:var(--spacingHorizontalXXS);font-family:var(--fontFamilyBase);font-size:var(--fontSizeBase100);font-weight:var(--fontWeightRegular);line-height:var(--lineHeightBase100);white-space:nowrap;}"]);
var useTagStyles_unstable = (state) => {
  "use no memo";
  const rootRoundedBaseClassName = useRootRoundedBaseClassName();
  const rootCircularBaseClassName = useRootCircularBaseClassName();
  const rootStyles = useRootStyles18();
  const rootDisabledStyles = useRootDisabledStyles3();
  const rootWithoutMediaStyles = useRootWithoutMediaStyles();
  const rootWithoutDismissStyles = useRootWithoutDismissStyles();
  const iconStyles = useIconStyles8();
  const mediaStyles = useMediaStyles();
  const dismissIconStyles = useDismissIconStyles();
  const primaryTextStyles = usePrimaryTextStyles();
  const secondaryTextBaseClassName = useSecondaryTextBaseClassName();
  const {
    shape,
    size,
    appearance
  } = state;
  state.root.className = mergeClasses(tagClassNames.root, shape === "rounded" ? rootRoundedBaseClassName : rootCircularBaseClassName, state.disabled ? rootDisabledStyles[appearance] : rootStyles[appearance], rootStyles[size], !state.media && !state.icon && rootWithoutMediaStyles[size], !state.dismissIcon && rootWithoutDismissStyles[size], state.root.className);
  if (state.media) {
    state.media.className = mergeClasses(tagClassNames.media, mediaStyles.base, mediaStyles[size], state.media.className);
  }
  if (state.icon) {
    state.icon.className = mergeClasses(tagClassNames.icon, iconStyles.base, iconStyles[size], state.icon.className);
  }
  if (state.primaryText) {
    state.primaryText.className = mergeClasses(tagClassNames.primaryText, primaryTextStyles.base, primaryTextStyles[size], state.secondaryText ? primaryTextStyles.withSecondaryText : primaryTextStyles.withoutSecondaryText, state.primaryText.className);
  }
  if (state.secondaryText) {
    state.secondaryText.className = mergeClasses(tagClassNames.secondaryText, secondaryTextBaseClassName, state.secondaryText.className);
  }
  if (state.dismissIcon) {
    state.dismissIcon.className = mergeClasses(tagClassNames.dismissIcon, dismissIconStyles.base, dismissIconStyles[size], !state.disabled && dismissIconStyles[appearance], state.dismissIcon.className);
  }
  return state;
};

// node_modules/@fluentui/react-tags/lib/utils/types.js
var React400 = __toESM(require_react());

// node_modules/@fluentui/react-tags/lib/utils/useTagAvatarContextValues.js
var React401 = __toESM(require_react());
function useTagAvatarContextValues_unstable(state) {
  const { avatarSize, avatarShape } = state;
  const avatar = React401.useMemo(() => ({
    size: avatarSize,
    shape: avatarShape
  }), [
    avatarShape,
    avatarSize
  ]);
  return {
    avatar
  };
}

// node_modules/@fluentui/react-tags/lib/components/Tag/Tag.js
var Tag = React402.forwardRef((props, ref) => {
  const state = useTag_unstable(props, ref);
  useTagStyles_unstable(state);
  useCustomStyleHook("useTagStyles_unstable")(state);
  return renderTag_unstable(state, useTagAvatarContextValues_unstable(state));
});
Tag.displayName = "Tag";

// node_modules/@fluentui/react-tags/lib/components/InteractionTag/InteractionTag.js
var React406 = __toESM(require_react());

// node_modules/@fluentui/react-tags/lib/components/InteractionTag/useInteractionTag.js
var React403 = __toESM(require_react());
var useInteractionTag_unstable = (props, ref) => {
  const { handleTagDismiss, size: contextSize, disabled: contextDisabled, appearance: contextAppearance } = useTagGroupContext_unstable();
  const id = useId("fui-InteractionTag-", props.id);
  const interactionTagPrimaryId = useId("fui-InteractionTagPrimary-");
  const { appearance = contextAppearance !== null && contextAppearance !== void 0 ? contextAppearance : "filled", disabled = false, shape = "rounded", size = contextSize, value = id } = props;
  return {
    appearance,
    disabled: contextDisabled ? true : disabled,
    handleTagDismiss,
    interactionTagPrimaryId,
    shape,
    size,
    value,
    components: {
      root: "div"
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      ref,
      ...props,
      disabled: contextDisabled ? true : disabled,
      id
    }), {
      elementType: "div"
    })
  };
};

// node_modules/@fluentui/react-tags/lib/contexts/interactionTagContext.js
var React404 = __toESM(require_react());
var InteractionTagContext = React404.createContext(void 0);
var interactionTagContextDefaultValue = {
  appearance: "filled",
  disabled: false,
  handleTagDismiss: () => ({}),
  interactionTagPrimaryId: "",
  shape: "rounded",
  size: "medium",
  value: ""
};
var InteractionTagContextProvider = InteractionTagContext.Provider;
var useInteractionTagContext_unstable = () => {
  var _React_useContext;
  return (_React_useContext = React404.useContext(InteractionTagContext)) !== null && _React_useContext !== void 0 ? _React_useContext : interactionTagContextDefaultValue;
};

// node_modules/@fluentui/react-tags/lib/components/InteractionTag/renderInteractionTag.js
var renderInteractionTag_unstable = (state, contextValues) => {
  assertSlots(state);
  return jsx(InteractionTagContextProvider, {
    value: contextValues.interactionTag,
    children: jsx(state.root, {})
  });
};

// node_modules/@fluentui/react-tags/lib/components/InteractionTag/useInteractionTagStyles.styles.js
var interactionTagClassNames = {
  root: "fui-InteractionTag"
};
var useRootBaseClassName12 = __resetStyles("r1y684pp", null, [".r1y684pp{display:inline-flex;align-items:center;box-sizing:border-box;width:fit-content;}"]);
var useRootStyles19 = __styles2({
  rounded: {
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "ft85np5"
  },
  circular: {
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "f44lkw9"
  },
  medium: {
    Bqenvij: "f1d2rq10"
  },
  small: {
    Bqenvij: "frvgh55"
  },
  "extra-small": {
    Bqenvij: "fjamq6b"
  }
}, {
  d: [[".ft85np5{border-radius:var(--borderRadiusMedium);}", {
    p: -1
  }], [".f44lkw9{border-radius:var(--borderRadiusCircular);}", {
    p: -1
  }], ".f1d2rq10{height:32px;}", ".frvgh55{height:24px;}", ".fjamq6b{height:20px;}"]
});
var useInteractionTagStyles_unstable = (state) => {
  "use no memo";
  const rootBaseClassName = useRootBaseClassName12();
  const rootStyles = useRootStyles19();
  const {
    shape,
    size
  } = state;
  state.root.className = mergeClasses(interactionTagClassNames.root, rootBaseClassName, rootStyles[shape], rootStyles[size], state.root.className);
  return state;
};

// node_modules/@fluentui/react-tags/lib/components/InteractionTag/useInteractionTagContextValues.js
var React405 = __toESM(require_react());
function useInteractionTagContextValues_unstable(state) {
  const { appearance, disabled, handleTagDismiss, interactionTagPrimaryId, shape, size, value } = state;
  return {
    interactionTag: React405.useMemo(() => ({
      appearance,
      disabled,
      handleTagDismiss,
      interactionTagPrimaryId,
      shape,
      size,
      value
    }), [
      appearance,
      disabled,
      handleTagDismiss,
      interactionTagPrimaryId,
      shape,
      size,
      value
    ])
  };
}

// node_modules/@fluentui/react-tags/lib/components/InteractionTag/InteractionTag.js
var InteractionTag = React406.forwardRef((props, ref) => {
  const state = useInteractionTag_unstable(props, ref);
  useInteractionTagStyles_unstable(state);
  useCustomStyleHook("useInteractionTagStyles_unstable")(state);
  return renderInteractionTag_unstable(state, useInteractionTagContextValues_unstable(state));
});
InteractionTag.displayName = "InteractionTag";

// node_modules/@fluentui/react-tags/lib/components/InteractionTagPrimary/InteractionTagPrimary.js
var React408 = __toESM(require_react());

// node_modules/@fluentui/react-tags/lib/components/InteractionTagPrimary/useInteractionTagPrimary.js
var React407 = __toESM(require_react());
var avatarSizeMap = {
  medium: 28,
  small: 20,
  "extra-small": 16
};
var avatarShapeMap = {
  rounded: "square",
  circular: "circular"
};
var useInteractionTagPrimary_unstable = (props, ref) => {
  const { appearance, disabled, interactionTagPrimaryId, shape, size } = useInteractionTagContext_unstable();
  const { hasSecondaryAction = false } = props;
  return {
    appearance,
    avatarShape: avatarShapeMap[shape],
    avatarSize: avatarSizeMap[size],
    disabled,
    hasSecondaryAction,
    shape,
    size,
    components: {
      root: "button",
      media: "span",
      icon: "span",
      primaryText: "span",
      secondaryText: "span"
    },
    root: slot_exports.always(getIntrinsicElementProps("button", {
      ref,
      disabled,
      id: interactionTagPrimaryId,
      ...props
    }), {
      elementType: "button"
    }),
    media: slot_exports.optional(props.media, {
      elementType: "span"
    }),
    icon: slot_exports.optional(props.icon, {
      elementType: "span"
    }),
    primaryText: slot_exports.optional(props.primaryText, {
      renderByDefault: true,
      defaultProps: {
        children: props.children
      },
      elementType: "span"
    }),
    secondaryText: slot_exports.optional(props.secondaryText, {
      elementType: "span"
    })
  };
};

// node_modules/@fluentui/react-tags/lib/components/InteractionTagPrimary/renderInteractionTagPrimary.js
var renderInteractionTagPrimary_unstable = (state, contextValues) => {
  assertSlots(state);
  return jsxs(state.root, {
    children: [
      state.media && jsx(AvatarContextProvider, {
        value: contextValues.avatar,
        children: jsx(state.media, {})
      }),
      state.icon && jsx(state.icon, {}),
      state.primaryText && jsx(state.primaryText, {}),
      state.secondaryText && jsx(state.secondaryText, {})
    ]
  });
};

// node_modules/@fluentui/react-tags/lib/components/InteractionTagPrimary/useInteractionTagPrimaryStyles.styles.js
var interactionTagPrimaryClassNames = {
  root: "fui-InteractionTagPrimary",
  media: "fui-InteractionTagPrimary__media",
  icon: "fui-InteractionTagPrimary__icon",
  primaryText: "fui-InteractionTagPrimary__primaryText",
  secondaryText: "fui-InteractionTagPrimary__secondaryText"
};
var baseStyles2 = {
  // reset default button style:
  color: "inherit",
  fontFamily: "inherit",
  padding: "0px",
  borderStyle: "none",
  appearance: "button",
  textAlign: "unset",
  backgroundColor: "transparent",
  display: "inline-grid",
  height: "100%",
  alignItems: "center",
  gridTemplateAreas: `
  "media primary  "
  "media secondary"
  `,
  border: `${tokens.strokeWidthThin} solid ${tokens.colorTransparentStroke}`,
  ...createCustomFocusIndicatorStyle({
    outline: `${tokens.strokeWidthThick} solid ${tokens.colorStrokeFocus2}`,
    zIndex: 1
  })
};
var useRootRoundedBaseClassName2 = __resetStyles("r1tlgozh", "r80ltmz", {
  r: ['.r1tlgozh{color:inherit;font-family:inherit;padding:0px;border-style:none;-webkit-appearance:button;-moz-appearance:button;appearance:button;text-align:unset;background-color:transparent;display:inline-grid;height:100%;align-items:center;grid-template-areas:"media primary  " "media secondary";border:var(--strokeWidthThin) solid var(--colorTransparentStroke);border-radius:var(--borderRadiusMedium);}', ".r1tlgozh[data-fui-focus-visible]{outline:var(--strokeWidthThick) solid var(--colorStrokeFocus2);z-index:1;}", '.r80ltmz{color:inherit;font-family:inherit;padding:0px;border-style:none;-webkit-appearance:button;-moz-appearance:button;appearance:button;text-align:unset;background-color:transparent;display:inline-grid;height:100%;align-items:center;grid-template-areas:"media primary  " "media secondary";border:var(--strokeWidthThin) solid var(--colorTransparentStroke);border-radius:var(--borderRadiusMedium);}', ".r80ltmz[data-fui-focus-visible]{outline:var(--strokeWidthThick) solid var(--colorStrokeFocus2);z-index:1;}"],
  s: ['@media (forced-colors: active){.r1tlgozh{position:relative;}.r1tlgozh::before{content:"";border-top:var(--strokeWidthThin) solid;position:absolute;top:-1px;left:-1px;right:-1px;bottom:-1px;border-top-left-radius:var(--borderRadiusMedium);border-top-right-radius:var(--borderRadiusMedium);}}', '@media (forced-colors: active){.r80ltmz{position:relative;}.r80ltmz::before{content:"";border-top:var(--strokeWidthThin) solid;position:absolute;top:-1px;right:-1px;left:-1px;bottom:-1px;border-top-right-radius:var(--borderRadiusMedium);border-top-left-radius:var(--borderRadiusMedium);}}']
});
var useRootCircularBaseClassName2 = __resetStyles("r1cz4vob", "r1awuv7b", {
  r: ['.r1cz4vob{color:inherit;font-family:inherit;padding:0px;border-style:none;-webkit-appearance:button;-moz-appearance:button;appearance:button;text-align:unset;background-color:transparent;display:inline-grid;height:100%;align-items:center;grid-template-areas:"media primary  " "media secondary";border:var(--strokeWidthThin) solid var(--colorTransparentStroke);border-radius:var(--borderRadiusCircular);}', ".r1cz4vob[data-fui-focus-visible]{outline:var(--strokeWidthThick) solid var(--colorStrokeFocus2);z-index:1;}", '.r1awuv7b{color:inherit;font-family:inherit;padding:0px;border-style:none;-webkit-appearance:button;-moz-appearance:button;appearance:button;text-align:unset;background-color:transparent;display:inline-grid;height:100%;align-items:center;grid-template-areas:"media primary  " "media secondary";border:var(--strokeWidthThin) solid var(--colorTransparentStroke);border-radius:var(--borderRadiusCircular);}', ".r1awuv7b[data-fui-focus-visible]{outline:var(--strokeWidthThick) solid var(--colorStrokeFocus2);z-index:1;}"],
  s: ['@media (forced-colors: active){.r1cz4vob{position:relative;}.r1cz4vob::before{content:"";border-top:var(--strokeWidthThin) solid;border-left:var(--strokeWidthThin) solid;position:absolute;top:-1px;left:-1px;right:-1px;bottom:-1px;border-top-left-radius:var(--borderRadiusCircular);border-bottom-left-radius:var(--borderRadiusCircular);}}', '@media (forced-colors: active){.r1awuv7b{position:relative;}.r1awuv7b::before{content:"";border-top:var(--strokeWidthThin) solid;border-right:var(--strokeWidthThin) solid;position:absolute;top:-1px;right:-1px;left:-1px;bottom:-1px;border-top-right-radius:var(--borderRadiusCircular);border-bottom-right-radius:var(--borderRadiusCircular);}}']
});
var useRootCircularContrastStyles = __styles2({
  withoutSecondaryAction: {
    Bglfifq: "ff3fe07",
    hxi8he: 0,
    B33s42s: 0,
    G4pote: 0,
    gw1m2h: ["f19rnj73", "f1jjg5yc"],
    w20ur: ["f6k8nl2", "f1ik0cvg"],
    Byczuf6: ["f10f1qdh", "fmb7qm7"]
  }
}, {
  m: [["@media (forced-colors: active){.ff3fe07{position:relative;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f19rnj73::before{border-right:var(--strokeWidthThin) solid transparent;}.f1jjg5yc::before{border-left:var(--strokeWidthThin) solid transparent;}}", {
    p: -1,
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1ik0cvg::before{border-top-left-radius:var(--borderRadiusCircular);}.f6k8nl2::before{border-top-right-radius:var(--borderRadiusCircular);}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f10f1qdh::before{border-bottom-right-radius:var(--borderRadiusCircular);}.fmb7qm7::before{border-bottom-left-radius:var(--borderRadiusCircular);}}", {
    m: "(forced-colors: active)"
  }]]
});
var useRootStyles20 = __styles2({
  filled: {
    De3pzq: "f16xq7d1",
    sj55zd: "fkfq4zb",
    eoavqd: "f8491dx",
    Jwef8y: "f1h648pw",
    Bi91k9c: "fnwyq0v",
    ecr2s2: "fwdzr64",
    lj723h: "flvvhsy",
    Bqrx1nm: "fq7113v",
    kx9iu6: "fp3oj7s"
  },
  outline: {
    De3pzq: "fhovq9v",
    sj55zd: "fkfq4zb",
    g2u3we: "fj3muxo",
    h3c5rm: ["f1akhkt", "f1lxtadh"],
    B9xav0g: "f1aperda",
    zhjwy3: ["f1lxtadh", "f1akhkt"],
    eoavqd: "f8491dx",
    Jwef8y: "f1t94bn6",
    Bi91k9c: "fnwyq0v",
    Bk3fhr4: "ft1hn21",
    I6i3kg: "fqbfmpb",
    Bmfj8id: "fuxngvv",
    ecr2s2: "f1wfn5kd",
    lj723h: "flvvhsy",
    Bnrwwps: "fvpl5sy",
    weioyw: "f1xblose",
    Bpre390: "f8upcvr",
    Bqrx1nm: "fq7113v",
    kx9iu6: "fp3oj7s"
  },
  brand: {
    De3pzq: "f16xkysk",
    sj55zd: "faj9fo0",
    eoavqd: "f8491dx",
    Jwef8y: "f1yj72w4",
    Bi91k9c: "f3ymbdj",
    ecr2s2: "fy3sl2y",
    lj723h: "fryz5bw",
    Bqrx1nm: "fq7113v",
    kx9iu6: "fp3oj7s"
  },
  medium: {
    z189sj: ["f18k1jr3", "f1rtp3s9"]
  },
  small: {
    z189sj: ["fwiuce9", "f15vdbe4"]
  },
  "extra-small": {
    z189sj: ["fwiuce9", "f15vdbe4"]
  }
}, {
  d: [".f16xq7d1{background-color:var(--colorNeutralBackground3);}", ".fkfq4zb{color:var(--colorNeutralForeground2);}", ".fhovq9v{background-color:var(--colorSubtleBackground);}", ".fj3muxo{border-top-color:var(--colorNeutralStroke1);}", ".f1akhkt{border-right-color:var(--colorNeutralStroke1);}", ".f1lxtadh{border-left-color:var(--colorNeutralStroke1);}", ".f1aperda{border-bottom-color:var(--colorNeutralStroke1);}", ".f16xkysk{background-color:var(--colorBrandBackground2);}", ".faj9fo0{color:var(--colorBrandForeground2);}", ".f18k1jr3{padding-right:7px;}", ".f1rtp3s9{padding-left:7px;}", ".fwiuce9{padding-right:5px;}", ".f15vdbe4{padding-left:5px;}"],
  h: [".f8491dx:hover{cursor:pointer;}", ".f1h648pw:hover{background-color:var(--colorNeutralBackground3Hover);}", ".fnwyq0v:hover{color:var(--colorNeutralForeground2Hover);}", ".f1t94bn6:hover{background-color:var(--colorSubtleBackgroundHover);}", ".ft1hn21:hover .fui-Icon-filled{display:inline;}", ".fqbfmpb:hover .fui-Icon-filled{color:var(--colorNeutralForeground2BrandHover);}", ".fuxngvv:hover .fui-Icon-regular{display:none;}", ".f1yj72w4:hover{background-color:var(--colorBrandBackground2Hover);}", ".f3ymbdj:hover{color:var(--colorCompoundBrandForeground1Hover);}"],
  a: [".fwdzr64:active{background-color:var(--colorNeutralBackground3Pressed);}", ".flvvhsy:active{color:var(--colorNeutralForeground2Pressed);}", ".f1wfn5kd:active{background-color:var(--colorSubtleBackgroundPressed);}", ".fvpl5sy:active .fui-Icon-filled{display:inline;}", ".f1xblose:active .fui-Icon-filled{color:var(--colorNeutralForeground2BrandPressed);}", ".f8upcvr:active .fui-Icon-regular{display:none;}", ".fy3sl2y:active{background-color:var(--colorBrandBackground2Pressed);}", ".fryz5bw:active{color:var(--colorCompoundBrandForeground1Pressed);}"],
  m: [["@media (forced-colors: active){.fq7113v:hover{background-color:HighlightText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fp3oj7s:active{background-color:HighlightText;}}", {
    m: "(forced-colors: active)"
  }]]
});
var useRootDisabledAppearances = __styles2({
  filled: {
    Bceei9c: "fdrzuqr",
    De3pzq: "f1bg9a2p",
    sj55zd: "f1s2aq7o",
    g2u3we: "fgig46g",
    h3c5rm: ["f1mxt3zg", "fziff3p"],
    B9xav0g: "f250w3l",
    zhjwy3: ["fziff3p", "f1mxt3zg"]
  },
  outline: {
    Bceei9c: "fdrzuqr",
    De3pzq: "fhovq9v",
    sj55zd: "f1s2aq7o",
    g2u3we: "f1jj8ep1",
    h3c5rm: ["f15xbau", "fy0fskl"],
    B9xav0g: "f4ikngz",
    zhjwy3: ["fy0fskl", "f15xbau"]
  },
  brand: {
    Bceei9c: "fdrzuqr",
    De3pzq: "f1bg9a2p",
    sj55zd: "f1s2aq7o",
    g2u3we: "fgig46g",
    h3c5rm: ["f1mxt3zg", "fziff3p"],
    B9xav0g: "f250w3l",
    zhjwy3: ["fziff3p", "f1mxt3zg"]
  }
}, {
  d: [".fdrzuqr{cursor:not-allowed;}", ".f1bg9a2p{background-color:var(--colorNeutralBackgroundDisabled);}", ".f1s2aq7o{color:var(--colorNeutralForegroundDisabled);}", ".fgig46g{border-top-color:var(--colorTransparentStrokeDisabled);}", ".f1mxt3zg{border-right-color:var(--colorTransparentStrokeDisabled);}", ".fziff3p{border-left-color:var(--colorTransparentStrokeDisabled);}", ".f250w3l{border-bottom-color:var(--colorTransparentStrokeDisabled);}", ".fhovq9v{background-color:var(--colorSubtleBackground);}", ".f1jj8ep1{border-top-color:var(--colorNeutralStrokeDisabled);}", ".f15xbau{border-right-color:var(--colorNeutralStrokeDisabled);}", ".fy0fskl{border-left-color:var(--colorNeutralStrokeDisabled);}", ".f4ikngz{border-bottom-color:var(--colorNeutralStrokeDisabled);}"]
});
var useRootWithoutMediaStyles2 = __styles2({
  medium: {
    uwmqm3: ["f1rtp3s9", "f18k1jr3"]
  },
  small: {
    uwmqm3: ["f15vdbe4", "fwiuce9"]
  },
  "extra-small": {
    uwmqm3: ["f15vdbe4", "fwiuce9"]
  }
}, {
  d: [".f1rtp3s9{padding-left:7px;}", ".f18k1jr3{padding-right:7px;}", ".f15vdbe4{padding-left:5px;}", ".fwiuce9{padding-right:5px;}"]
});
var useRootWithSecondaryActionStyles = __styles2({
  base: {
    B7oj6ja: ["f3fg2lr", "f13av6d4"],
    Bbmb7ep: ["fzi6hpg", "fyowgf4"],
    vrafjx: ["f1n71otn", "f1deefiw"],
    B6xbmo0: ["f146y5a9", "f1k2ftg"],
    kdpuga: ["f1ndz5i7", "f1co4qro"]
  },
  medium: {
    z189sj: ["f1vdfbxk", "f1f5gg8d"]
  },
  small: {
    z189sj: ["fdw0yi8", "fk8j09s"]
  },
  "extra-small": {
    z189sj: ["fdw0yi8", "fk8j09s"]
  }
}, {
  d: [".f3fg2lr{border-top-right-radius:var(--borderRadiusNone);}", ".f13av6d4{border-top-left-radius:var(--borderRadiusNone);}", ".fzi6hpg{border-bottom-right-radius:var(--borderRadiusNone);}", ".fyowgf4{border-bottom-left-radius:var(--borderRadiusNone);}", ".f1n71otn{border-right-style:none;}", ".f1deefiw{border-left-style:none;}", ".f146y5a9[data-fui-focus-visible]{border-top-right-radius:var(--borderRadiusNone);}", ".f1k2ftg[data-fui-focus-visible]{border-top-left-radius:var(--borderRadiusNone);}", ".f1ndz5i7[data-fui-focus-visible]{border-bottom-right-radius:var(--borderRadiusNone);}", ".f1co4qro[data-fui-focus-visible]{border-bottom-left-radius:var(--borderRadiusNone);}", ".f1vdfbxk{padding-right:var(--spacingHorizontalS);}", ".f1f5gg8d{padding-left:var(--spacingHorizontalS);}", ".fdw0yi8{padding-right:var(--spacingHorizontalSNudge);}", ".fk8j09s{padding-left:var(--spacingHorizontalSNudge);}"]
});
var useInteractionTagPrimaryStyles_unstable = (state) => {
  "use no memo";
  const rootRoundedBaseClassName = useRootRoundedBaseClassName2();
  const rootCircularBaseClassName = useRootCircularBaseClassName2();
  const rootStyles = useRootStyles20();
  const rootDisabledAppearances = useRootDisabledAppearances();
  const rootWithoutMediaStyles = useRootWithoutMediaStyles2();
  const rootWithSecondaryActionStyles = useRootWithSecondaryActionStyles();
  const iconStyles = useIconStyles8();
  const mediaStyles = useMediaStyles();
  const primaryTextStyles = usePrimaryTextStyles();
  const secondaryTextBaseClassName = useSecondaryTextBaseClassName();
  const rootCircularContrastStyles = useRootCircularContrastStyles();
  const {
    shape,
    size,
    appearance
  } = state;
  state.root.className = mergeClasses(interactionTagPrimaryClassNames.root, shape === "rounded" ? rootRoundedBaseClassName : rootCircularBaseClassName, shape === "circular" && !state.hasSecondaryAction && rootCircularContrastStyles.withoutSecondaryAction, state.disabled ? rootDisabledAppearances[appearance] : rootStyles[appearance], rootStyles[size], !state.media && !state.icon && rootWithoutMediaStyles[size], state.hasSecondaryAction && rootWithSecondaryActionStyles.base, state.hasSecondaryAction && rootWithSecondaryActionStyles[size], state.root.className);
  if (state.media) {
    state.media.className = mergeClasses(interactionTagPrimaryClassNames.media, mediaStyles.base, mediaStyles[size], state.media.className);
  }
  if (state.icon) {
    state.icon.className = mergeClasses(interactionTagPrimaryClassNames.icon, iconStyles.base, iconStyles[size], state.icon.className);
  }
  if (state.primaryText) {
    state.primaryText.className = mergeClasses(interactionTagPrimaryClassNames.primaryText, primaryTextStyles.base, primaryTextStyles[size], state.secondaryText ? primaryTextStyles.withSecondaryText : primaryTextStyles.withoutSecondaryText, state.primaryText.className);
  }
  if (state.secondaryText) {
    state.secondaryText.className = mergeClasses(interactionTagPrimaryClassNames.secondaryText, secondaryTextBaseClassName, state.secondaryText.className);
  }
  return state;
};

// node_modules/@fluentui/react-tags/lib/components/InteractionTagPrimary/InteractionTagPrimary.js
var InteractionTagPrimary = React408.forwardRef((props, ref) => {
  const state = useInteractionTagPrimary_unstable(props, ref);
  useInteractionTagPrimaryStyles_unstable(state);
  useCustomStyleHook("useInteractionTagPrimaryStyles_unstable")(state);
  return renderInteractionTagPrimary_unstable(state, useTagAvatarContextValues_unstable(state));
});
InteractionTagPrimary.displayName = "InteractionTagPrimary";

// node_modules/@fluentui/react-tags/lib/components/InteractionTagSecondary/InteractionTagSecondary.js
var React410 = __toESM(require_react());

// node_modules/@fluentui/react-tags/lib/components/InteractionTagSecondary/useInteractionTagSecondary.js
var React409 = __toESM(require_react());
var useInteractionTagSecondary_unstable = (props, ref) => {
  const { appearance, disabled, handleTagDismiss, interactionTagPrimaryId, shape, size, value } = useInteractionTagContext_unstable();
  const id = useId("fui-InteractionTagSecondary-", props.id);
  const onClick = useEventCallback((ev) => {
    var _props_onClick;
    props === null || props === void 0 ? void 0 : (_props_onClick = props.onClick) === null || _props_onClick === void 0 ? void 0 : _props_onClick.call(props, ev);
    if (!ev.defaultPrevented) {
      handleTagDismiss === null || handleTagDismiss === void 0 ? void 0 : handleTagDismiss(ev, {
        value
      });
    }
  });
  const onKeyDown = useEventCallback((ev) => {
    var _props_onKeyDown;
    props === null || props === void 0 ? void 0 : (_props_onKeyDown = props.onKeyDown) === null || _props_onKeyDown === void 0 ? void 0 : _props_onKeyDown.call(props, ev);
    if (!ev.defaultPrevented && (ev.key === Delete || ev.key === Backspace)) {
      handleTagDismiss === null || handleTagDismiss === void 0 ? void 0 : handleTagDismiss(ev, {
        value
      });
    }
  });
  return {
    appearance,
    disabled,
    shape,
    size,
    components: {
      root: "button"
    },
    root: slot_exports.always(getIntrinsicElementProps("button", {
      children: React409.createElement(DismissRegular, null),
      type: "button",
      disabled,
      ref,
      "aria-labelledby": `${interactionTagPrimaryId} ${id}`,
      ...props,
      id,
      onClick,
      onKeyDown
    }), {
      elementType: "button"
    })
  };
};

// node_modules/@fluentui/react-tags/lib/components/InteractionTagSecondary/renderInteractionTagSecondary.js
var renderInteractionTagSecondary_unstable = (state) => {
  assertSlots(state);
  return jsx(state.root, {});
};

// node_modules/@fluentui/react-tags/lib/components/InteractionTagSecondary/useInteractionTagSecondaryStyles.styles.js
var interactionTagSecondaryClassNames = {
  root: "fui-InteractionTagSecondary"
};
var useRootBaseClassName13 = __resetStyles("rxqbxwz", "rdjx360", [".rxqbxwz{color:inherit;font-family:inherit;padding:0px;border-style:none;-webkit-appearance:button;-moz-appearance:button;appearance:button;text-align:unset;background-color:transparent;display:flex;height:100%;align-items:center;border:var(--strokeWidthThin) solid var(--colorTransparentStroke);border-left-color:var(--colorNeutralStroke1);border-top-left-radius:var(--borderRadiusNone);border-bottom-left-radius:var(--borderRadiusNone);}", ".rxqbxwz[data-fui-focus-visible]{outline:var(--strokeWidthThick) solid var(--colorStrokeFocus2);}", ".rdjx360{color:inherit;font-family:inherit;padding:0px;border-style:none;-webkit-appearance:button;-moz-appearance:button;appearance:button;text-align:unset;background-color:transparent;display:flex;height:100%;align-items:center;border:var(--strokeWidthThin) solid var(--colorTransparentStroke);border-right-color:var(--colorNeutralStroke1);border-top-right-radius:var(--borderRadiusNone);border-bottom-right-radius:var(--borderRadiusNone);}", ".rdjx360[data-fui-focus-visible]{outline:var(--strokeWidthThick) solid var(--colorStrokeFocus2);}"]);
var useRootStyles21 = __styles2({
  filled: {
    De3pzq: "f16xq7d1",
    sj55zd: "fkfq4zb",
    eoavqd: "f8491dx",
    Jwef8y: "f1h648pw",
    Bi91k9c: "f139oj5f",
    ecr2s2: "fwdzr64",
    lj723h: "f19au66r",
    Bqrx1nm: "fq7113v",
    kx9iu6: "fp3oj7s"
  },
  outline: {
    De3pzq: "fhovq9v",
    sj55zd: "fkfq4zb",
    g2u3we: "fj3muxo",
    h3c5rm: ["f1akhkt", "f1lxtadh"],
    B9xav0g: "f1aperda",
    zhjwy3: ["f1lxtadh", "f1akhkt"],
    eoavqd: "f8491dx",
    Jwef8y: "f1t94bn6",
    Bi91k9c: "f139oj5f",
    ecr2s2: "f1wfn5kd",
    lj723h: "f19au66r",
    Bqrx1nm: "fq7113v",
    kx9iu6: "fp3oj7s"
  },
  brand: {
    De3pzq: "f16xkysk",
    sj55zd: "faj9fo0",
    zhjwy3: ["f1sl6hi9", "f1c8dzaj"],
    eoavqd: "f8491dx",
    Jwef8y: "f1yj72w4",
    Bi91k9c: "f3ymbdj",
    ecr2s2: "fy3sl2y",
    lj723h: "fryz5bw",
    Bqrx1nm: "fq7113v",
    kx9iu6: "fp3oj7s"
  },
  rounded: {
    B7oj6ja: ["f1jar5jt", "fyu767a"],
    Bbmb7ep: ["f1aa9q02", "f16jpd5f"]
  },
  circular: {
    B7oj6ja: ["f1djnp8u", "f1s8kh49"],
    Bbmb7ep: ["f8fbkgy", "f1nfllo7"]
  },
  medium: {
    Be2twd7: "fe5j1ua",
    uwmqm3: ["f15vdbe4", "fwiuce9"],
    z189sj: ["fwiuce9", "f15vdbe4"]
  },
  small: {
    Be2twd7: "f4ybsrx",
    uwmqm3: ["f2lugmd", "f6zblan"],
    z189sj: ["f6zblan", "f2lugmd"]
  },
  "extra-small": {
    Be2twd7: "f1ugzwwg",
    uwmqm3: ["f15vdbe4", "fwiuce9"],
    z189sj: ["fwiuce9", "f15vdbe4"]
  }
}, {
  d: [".f16xq7d1{background-color:var(--colorNeutralBackground3);}", ".fkfq4zb{color:var(--colorNeutralForeground2);}", ".fhovq9v{background-color:var(--colorSubtleBackground);}", ".fj3muxo{border-top-color:var(--colorNeutralStroke1);}", ".f1akhkt{border-right-color:var(--colorNeutralStroke1);}", ".f1lxtadh{border-left-color:var(--colorNeutralStroke1);}", ".f1aperda{border-bottom-color:var(--colorNeutralStroke1);}", ".f16xkysk{background-color:var(--colorBrandBackground2);}", ".faj9fo0{color:var(--colorBrandForeground2);}", ".f1sl6hi9{border-left-color:var(--colorBrandStroke2);}", ".f1c8dzaj{border-right-color:var(--colorBrandStroke2);}", ".f1jar5jt{border-top-right-radius:var(--borderRadiusMedium);}", ".fyu767a{border-top-left-radius:var(--borderRadiusMedium);}", ".f1aa9q02{border-bottom-right-radius:var(--borderRadiusMedium);}", ".f16jpd5f{border-bottom-left-radius:var(--borderRadiusMedium);}", ".f1djnp8u{border-top-right-radius:var(--borderRadiusCircular);}", ".f1s8kh49{border-top-left-radius:var(--borderRadiusCircular);}", ".f8fbkgy{border-bottom-right-radius:var(--borderRadiusCircular);}", ".f1nfllo7{border-bottom-left-radius:var(--borderRadiusCircular);}", ".fe5j1ua{font-size:20px;}", ".f15vdbe4{padding-left:5px;}", ".fwiuce9{padding-right:5px;}", ".f4ybsrx{font-size:16px;}", ".f2lugmd{padding-left:3px;}", ".f6zblan{padding-right:3px;}", ".f1ugzwwg{font-size:12px;}"],
  h: [".f8491dx:hover{cursor:pointer;}", ".f1h648pw:hover{background-color:var(--colorNeutralBackground3Hover);}", ".f139oj5f:hover{color:var(--colorNeutralForeground2BrandHover);}", ".f1t94bn6:hover{background-color:var(--colorSubtleBackgroundHover);}", ".f1yj72w4:hover{background-color:var(--colorBrandBackground2Hover);}", ".f3ymbdj:hover{color:var(--colorCompoundBrandForeground1Hover);}"],
  a: [".fwdzr64:active{background-color:var(--colorNeutralBackground3Pressed);}", ".f19au66r:active{color:var(--colorNeutralForeground2BrandPressed);}", ".f1wfn5kd:active{background-color:var(--colorSubtleBackgroundPressed);}", ".fy3sl2y:active{background-color:var(--colorBrandBackground2Pressed);}", ".fryz5bw:active{color:var(--colorCompoundBrandForeground1Pressed);}"],
  m: [["@media (forced-colors: active){.fq7113v:hover{background-color:HighlightText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fp3oj7s:active{background-color:HighlightText;}}", {
    m: "(forced-colors: active)"
  }]]
});
var useRootDisabledStyles4 = __styles2({
  filled: {
    Bceei9c: "fdrzuqr",
    De3pzq: "f1bg9a2p",
    sj55zd: "f1s2aq7o",
    g2u3we: "fgig46g",
    h3c5rm: ["f1mxt3zg", "fziff3p"],
    B9xav0g: "f250w3l",
    zhjwy3: ["fy0fskl", "f15xbau"]
  },
  outline: {
    Bceei9c: "fdrzuqr",
    De3pzq: "fhovq9v",
    sj55zd: "f1s2aq7o",
    g2u3we: "f1jj8ep1",
    h3c5rm: ["f15xbau", "fy0fskl"],
    B9xav0g: "f4ikngz",
    zhjwy3: ["fy0fskl", "f15xbau"]
  },
  brand: {
    Bceei9c: "fdrzuqr",
    De3pzq: "f1bg9a2p",
    sj55zd: "f1s2aq7o",
    g2u3we: "fgig46g",
    h3c5rm: ["f1mxt3zg", "fziff3p"],
    B9xav0g: "f250w3l",
    zhjwy3: ["fy0fskl", "f15xbau"]
  }
}, {
  d: [".fdrzuqr{cursor:not-allowed;}", ".f1bg9a2p{background-color:var(--colorNeutralBackgroundDisabled);}", ".f1s2aq7o{color:var(--colorNeutralForegroundDisabled);}", ".fgig46g{border-top-color:var(--colorTransparentStrokeDisabled);}", ".f1mxt3zg{border-right-color:var(--colorTransparentStrokeDisabled);}", ".fziff3p{border-left-color:var(--colorTransparentStrokeDisabled);}", ".f250w3l{border-bottom-color:var(--colorTransparentStrokeDisabled);}", ".fy0fskl{border-left-color:var(--colorNeutralStrokeDisabled);}", ".f15xbau{border-right-color:var(--colorNeutralStrokeDisabled);}", ".fhovq9v{background-color:var(--colorSubtleBackground);}", ".f1jj8ep1{border-top-color:var(--colorNeutralStrokeDisabled);}", ".f4ikngz{border-bottom-color:var(--colorNeutralStrokeDisabled);}"]
});
var useInteractionTagSecondaryStyles_unstable = (state) => {
  "use no memo";
  const rootBaseClassName = useRootBaseClassName13();
  const rootStyles = useRootStyles21();
  const rootDisabledStyles = useRootDisabledStyles4();
  const {
    shape,
    size,
    appearance
  } = state;
  state.root.className = mergeClasses(interactionTagSecondaryClassNames.root, rootBaseClassName, state.disabled ? rootDisabledStyles[appearance] : rootStyles[appearance], rootStyles[shape], rootStyles[size], state.root.className);
  return state;
};

// node_modules/@fluentui/react-tags/lib/components/InteractionTagSecondary/InteractionTagSecondary.js
var InteractionTagSecondary = React410.forwardRef((props, ref) => {
  const state = useInteractionTagSecondary_unstable(props, ref);
  useInteractionTagSecondaryStyles_unstable(state);
  useCustomStyleHook("useInteractionTagSecondaryStyles_unstable")(state);
  return renderInteractionTagSecondary_unstable(state);
});
InteractionTagSecondary.displayName = "InteractionTagSecondary";

// node_modules/@fluentui/react-tags/lib/components/TagGroup/TagGroup.js
var React413 = __toESM(require_react());

// node_modules/@fluentui/react-tags/lib/components/TagGroup/useTagGroup.js
var React411 = __toESM(require_react());
var useTagGroup_unstable = (props, ref) => {
  const { onDismiss, disabled = false, size = "medium", appearance = "filled", dismissible = false, role = "toolbar" } = props;
  const innerRef = React411.useRef();
  const { targetDocument } = useFluent();
  const { findNextFocusable, findPrevFocusable } = useFocusFinders();
  const handleTagDismiss = useEventCallback((e, data) => {
    var _innerRef_current;
    onDismiss === null || onDismiss === void 0 ? void 0 : onDismiss(e, data);
    const activeElement = targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.activeElement;
    if ((_innerRef_current = innerRef.current) === null || _innerRef_current === void 0 ? void 0 : _innerRef_current.contains(activeElement)) {
      const next = findNextFocusable(activeElement, {
        container: innerRef.current
      });
      if (next) {
        next.focus();
        return;
      }
      if (activeElement === null || activeElement === void 0 ? void 0 : activeElement.className.includes(interactionTagSecondaryClassNames.root)) {
        const prev = findPrevFocusable(activeElement.parentElement, {
          container: innerRef.current
        });
        prev === null || prev === void 0 ? void 0 : prev.focus();
      } else {
        const prev = findPrevFocusable(activeElement, {
          container: innerRef.current
        });
        prev === null || prev === void 0 ? void 0 : prev.focus();
      }
    }
  });
  const arrowNavigationProps = useArrowNavigationGroup({
    circular: true,
    axis: "both",
    memorizeCurrent: true
  });
  return {
    handleTagDismiss,
    role,
    size,
    disabled,
    appearance,
    dismissible,
    components: {
      root: "div"
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      // FIXME:
      // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`
      // but since it would be a breaking change to fix it, we are casting ref to it's proper type
      ref: useMergedRefs(ref, innerRef),
      role,
      "aria-disabled": disabled,
      ...arrowNavigationProps,
      ...props
    }), {
      elementType: "div"
    })
  };
};

// node_modules/@fluentui/react-tags/lib/components/TagGroup/renderTagGroup.js
var renderTagGroup_unstable = (state, contextValue) => {
  assertSlots(state);
  return jsx(TagGroupContextProvider, {
    value: contextValue.tagGroup,
    children: jsx(state.root, {})
  });
};

// node_modules/@fluentui/react-tags/lib/components/TagGroup/useTagGroupStyles.styles.js
var tagGroupClassNames = {
  root: "fui-TagGroup"
};
var useRootStyles22 = __styles2({
  base: {
    mc9l5x: "ftuwxu6"
  },
  medium: {
    i8kkvl: "fsnqrgy"
  },
  small: {
    i8kkvl: "f1rjii52"
  },
  "extra-small": {
    i8kkvl: "f1ufnopg"
  }
}, {
  d: [".ftuwxu6{display:inline-flex;}", ".fsnqrgy{column-gap:var(--spacingHorizontalS);}", ".f1rjii52{column-gap:var(--spacingHorizontalSNudge);}", ".f1ufnopg{column-gap:var(--spacingHorizontalXS);}"]
});
var useTagGroupStyles_unstable = (state) => {
  "use no memo";
  const styles = useRootStyles22();
  const {
    size
  } = state;
  state.root.className = mergeClasses(tagGroupClassNames.root, styles.base, styles[size], state.root.className);
  return state;
};

// node_modules/@fluentui/react-tags/lib/components/TagGroup/useTagGroupContextValues.js
var React412 = __toESM(require_react());
function useTagGroupContextValues_unstable(state) {
  const { handleTagDismiss, size, disabled, appearance, dismissible, role } = state;
  return {
    tagGroup: React412.useMemo(() => ({
      handleTagDismiss,
      size,
      disabled,
      appearance,
      dismissible,
      role
    }), [
      handleTagDismiss,
      size,
      disabled,
      appearance,
      dismissible,
      role
    ])
  };
}

// node_modules/@fluentui/react-tags/lib/components/TagGroup/TagGroup.js
var TagGroup = React413.forwardRef((props, ref) => {
  const state = useTagGroup_unstable(props, ref);
  useTagGroupStyles_unstable(state);
  useCustomStyleHook("useTagGroupStyles_unstable")(state);
  return renderTagGroup_unstable(state, useTagGroupContextValues_unstable(state));
});
TagGroup.displayName = "TagGroup";

// node_modules/@fluentui/react-tags/lib/components/TagGroup/TagGroup.types.js
var React414 = __toESM(require_react());

// node_modules/@fluentui/react-message-bar/lib/components/MessageBar/MessageBar.js
var React421 = __toESM(require_react());

// node_modules/@fluentui/react-message-bar/lib/components/MessageBar/useMessageBar.js
var React418 = __toESM(require_react());

// node_modules/@fluentui/react-message-bar/lib/components/MessageBar/getIntentIcon.js
var React415 = __toESM(require_react());
function getIntentIcon(intent) {
  switch (intent) {
    case "info":
      return React415.createElement(InfoFilled, null);
    case "warning":
      return React415.createElement(WarningFilled, null);
    case "error":
      return React415.createElement(DismissCircleFilled, null);
    case "success":
      return React415.createElement(CheckmarkCircleFilled, null);
    default:
      return null;
  }
}

// node_modules/@fluentui/react-message-bar/lib/components/MessageBar/useMessageBarReflow.js
var React416 = __toESM(require_react());
function useMessageBarReflow(enabled = false) {
  const { targetDocument } = useFluent();
  const forceUpdate = React416.useReducer(() => ({}), {})[1];
  const reflowingRef = React416.useRef(false);
  const resizeObserverRef = React416.useRef(null);
  const prevInlineSizeRef = React416.useRef(-1);
  const handleResize = React416.useCallback((entries) => {
    var _entry_borderBoxSize_, _entry_borderBoxSize;
    if (entries.length > 1) {
      console.error([
        "useMessageBarReflow: Resize observer should only have one entry. ",
        "If multiple entries are observed, the first entry will be used.",
        "This is a bug, please report it to the Fluent UI team."
      ].join(" "));
    }
    const entry = entries[0];
    var _entry_borderBoxSize__inlineSize;
    const inlineSize = (_entry_borderBoxSize__inlineSize = entry === null || entry === void 0 ? void 0 : (_entry_borderBoxSize = entry.borderBoxSize) === null || _entry_borderBoxSize === void 0 ? void 0 : (_entry_borderBoxSize_ = _entry_borderBoxSize[0]) === null || _entry_borderBoxSize_ === void 0 ? void 0 : _entry_borderBoxSize_.inlineSize) !== null && _entry_borderBoxSize__inlineSize !== void 0 ? _entry_borderBoxSize__inlineSize : entry === null || entry === void 0 ? void 0 : entry.target.getBoundingClientRect().width;
    if (inlineSize === void 0 || !entry) {
      return;
    }
    const { target } = entry;
    if (!isHTMLElement(target)) {
      return;
    }
    let nextReflowing;
    if (reflowingRef.current) {
      if (prevInlineSizeRef.current < inlineSize) {
        nextReflowing = false;
      }
    } else {
      const scrollWidth = target.scrollWidth;
      if (inlineSize < scrollWidth) {
        nextReflowing = true;
      }
    }
    prevInlineSizeRef.current = inlineSize;
    if (typeof nextReflowing !== "undefined" && reflowingRef.current !== nextReflowing) {
      reflowingRef.current = nextReflowing;
      forceUpdate();
    }
  }, [
    forceUpdate
  ]);
  const ref = React416.useCallback((el) => {
    var _resizeObserverRef_current;
    if (!enabled || !el || !(targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.defaultView)) {
      return;
    }
    (_resizeObserverRef_current = resizeObserverRef.current) === null || _resizeObserverRef_current === void 0 ? void 0 : _resizeObserverRef_current.disconnect();
    const win = targetDocument.defaultView;
    const resizeObserver = new win.ResizeObserver(handleResize);
    resizeObserverRef.current = resizeObserver;
    resizeObserver.observe(el, {
      box: "border-box"
    });
  }, [
    targetDocument,
    handleResize,
    enabled
  ]);
  React416.useEffect(() => {
    return () => {
      var _resizeObserverRef_current;
      (_resizeObserverRef_current = resizeObserverRef.current) === null || _resizeObserverRef_current === void 0 ? void 0 : _resizeObserverRef_current.disconnect();
    };
  }, []);
  return {
    ref,
    reflowing: reflowingRef.current
  };
}

// node_modules/@fluentui/react-message-bar/lib/contexts/messageBarTransitionContext.js
var React417 = __toESM(require_react());
var messageBarTransitionContext = React417.createContext(void 0);
var messageBarTransitionContextDefaultValue = {
  className: "",
  nodeRef: React417.createRef()
};
var MessageBarTransitionContextProvider = messageBarTransitionContext.Provider;
var useMessageBarTransitionContext = () => {
  var _React_useContext;
  return (_React_useContext = React417.useContext(messageBarTransitionContext)) !== null && _React_useContext !== void 0 ? _React_useContext : messageBarTransitionContextDefaultValue;
};

// node_modules/@fluentui/react-message-bar/lib/components/MessageBar/useMessageBar.js
var useMessageBar_unstable = (props, ref) => {
  const { layout = "auto", intent = "info", politeness, shape = "rounded" } = props;
  const computedPoliteness = (politeness !== null && politeness !== void 0 ? politeness : intent === "info") ? "polite" : "assertive";
  const autoReflow = layout === "auto";
  const { ref: reflowRef, reflowing } = useMessageBarReflow(autoReflow);
  const computedLayout = autoReflow ? reflowing ? "multiline" : "singleline" : layout;
  const { className: transitionClassName, nodeRef } = useMessageBarTransitionContext();
  const actionsRef = React418.useRef(null);
  const bodyRef = React418.useRef(null);
  const { announce } = useAnnounce();
  const titleId = useId();
  React418.useEffect(() => {
    var _bodyRef_current, _actionsRef_current;
    const bodyMessage = (_bodyRef_current = bodyRef.current) === null || _bodyRef_current === void 0 ? void 0 : _bodyRef_current.textContent;
    const actionsMessage = (_actionsRef_current = actionsRef.current) === null || _actionsRef_current === void 0 ? void 0 : _actionsRef_current.textContent;
    const message = [
      bodyMessage,
      actionsMessage
    ].filter(Boolean).join(",");
    announce(message, {
      polite: computedPoliteness === "polite",
      alert: computedPoliteness === "assertive"
    });
  }, [
    bodyRef,
    actionsRef,
    announce,
    computedPoliteness
  ]);
  return {
    components: {
      root: "div",
      icon: "div",
      bottomReflowSpacer: "div"
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      ref: useMergedRefs(ref, reflowRef, nodeRef),
      role: "group",
      "aria-labelledby": titleId,
      ...props
    }), {
      elementType: "div"
    }),
    icon: slot_exports.optional(props.icon, {
      renderByDefault: true,
      elementType: "div",
      defaultProps: {
        children: getIntentIcon(intent)
      }
    }),
    bottomReflowSpacer: slot_exports.optional(props.bottomReflowSpacer, {
      renderByDefault: computedLayout === "multiline",
      elementType: "div"
    }),
    layout: computedLayout,
    intent,
    transitionClassName,
    actionsRef,
    bodyRef,
    titleId,
    shape
  };
};

// node_modules/@fluentui/react-message-bar/lib/contexts/messageBarContext.js
var React419 = __toESM(require_react());
var messageBarContext = React419.createContext(void 0);
var messageBarContextDefaultValue = {
  titleId: "",
  layout: "singleline",
  actionsRef: React419.createRef(),
  bodyRef: React419.createRef()
};
var MessageBarContextProvider = messageBarContext.Provider;
var useMessageBarContext = () => {
  var _React_useContext;
  return (_React_useContext = React419.useContext(messageBarContext)) !== null && _React_useContext !== void 0 ? _React_useContext : messageBarContextDefaultValue;
};

// node_modules/@fluentui/react-message-bar/lib/components/MessageBar/renderMessageBar.js
var renderMessageBar_unstable = (state, contexts) => {
  assertSlots(state);
  return jsx(MessageBarContextProvider, {
    value: contexts.messageBar,
    children: jsxs(state.root, {
      children: [
        state.icon && jsx(state.icon, {}),
        state.root.children,
        state.bottomReflowSpacer && jsx(state.bottomReflowSpacer, {})
      ]
    })
  });
};

// node_modules/@fluentui/react-message-bar/lib/components/MessageBar/useMessageBarStyles.styles.js
var messageBarClassNames = {
  root: "fui-MessageBar",
  icon: "fui-MessageBar__icon",
  bottomReflowSpacer: "fui-MessageBar__bottomReflowSpacer"
};
var useRootBaseStyles4 = __resetStyles("r2oyxsj", "r1wuyrhw", ['.r2oyxsj{white-space:nowrap;display:grid;grid-template-columns:auto 1fr auto auto;grid-template-rows:1fr;grid-template-areas:"icon body secondaryActions actions";padding-left:var(--spacingHorizontalM);border:var(--strokeWidthThin) solid var(--colorNeutralStroke1);border-radius:var(--borderRadiusMedium);align-items:center;min-height:36px;box-sizing:border-box;background-color:var(--colorNeutralBackground3);}', '.r1wuyrhw{white-space:nowrap;display:grid;grid-template-columns:auto 1fr auto auto;grid-template-rows:1fr;grid-template-areas:"icon body secondaryActions actions";padding-right:var(--spacingHorizontalM);border:var(--strokeWidthThin) solid var(--colorNeutralStroke1);border-radius:var(--borderRadiusMedium);align-items:center;min-height:36px;box-sizing:border-box;background-color:var(--colorNeutralBackground3);}']);
var useIconBaseStyles3 = __resetStyles("r1df1z33", "rivnfjc", [".r1df1z33{grid-area:icon;font-size:var(--fontSizeBase500);margin-right:var(--spacingHorizontalS);color:var(--colorNeutralForeground3);display:flex;align-items:center;}", ".rivnfjc{grid-area:icon;font-size:var(--fontSizeBase500);margin-left:var(--spacingHorizontalS);color:var(--colorNeutralForeground3);display:flex;align-items:center;}"]);
var useReflowSpacerBaseStyles = __resetStyles("r1vx593n", null, [".r1vx593n{margin-bottom:var(--spacingVerticalS);grid-area:secondaryActions;}"]);
var useStyles48 = __styles2({
  rootMultiline: {
    Huce71: "f6juhto",
    Bt984gj: "f1s2louj",
    z8tnut: "f1ngh7ph",
    Budl1dq: "f17g0uqy",
    zoa1oz: "f1w7oly7"
  },
  secondaryActionsMultiline: {
    Brf1p80: "f1e8xxv9",
    B6of3ja: "f1gaxbfw",
    jrapky: "fqcjy3b",
    t21cq0: ["fibjyge", "f9yszdx"]
  },
  square: {
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "fokr779"
  }
}, {
  d: [".f6juhto{white-space:normal;}", ".f1s2louj{align-items:start;}", ".f1ngh7ph{padding-top:var(--spacingVerticalMNudge);}", ".f17g0uqy{grid-template-columns:auto 1fr auto;}", '.f1w7oly7{grid-template-areas:"icon body actions" "secondaryActions secondaryActions secondaryActions";}', ".f1e8xxv9{justify-content:end;}", ".f1gaxbfw{margin-top:var(--spacingVerticalMNudge);}", ".fqcjy3b{margin-bottom:var(--spacingVerticalS);}", ".fibjyge{margin-right:0px;}", ".f9yszdx{margin-left:0px;}", [".fokr779{border-radius:0;}", {
    p: -1
  }]]
});
var useIconIntentStyles = __styles2({
  info: {},
  error: {
    sj55zd: "f1ca9wz"
  },
  warning: {
    sj55zd: "f14a4cve"
  },
  success: {
    sj55zd: "f36rra6"
  }
}, {
  d: [".f1ca9wz{color:var(--colorStatusDangerForeground1);}", ".f14a4cve{color:var(--colorStatusWarningForeground3);}", ".f36rra6{color:var(--colorStatusSuccessForeground1);}"]
});
var useRootIntentStyles = __styles2({
  info: {},
  error: {
    De3pzq: "f1eon7jj",
    g2u3we: "f1f8dvr7",
    h3c5rm: ["f1g1ijmo", "f1nxacbt"],
    B9xav0g: "fo25q1j",
    zhjwy3: ["f1nxacbt", "f1g1ijmo"]
  },
  warning: {
    De3pzq: "f13ftzij",
    g2u3we: "frd1ypx",
    h3c5rm: ["f1gyjrma", "f18qd5xz"],
    B9xav0g: "fqyqtrt",
    zhjwy3: ["f18qd5xz", "f1gyjrma"]
  },
  success: {
    De3pzq: "f64thcm",
    g2u3we: "f1b4u7v",
    h3c5rm: ["f1nyd2b1", "f70v3om"],
    B9xav0g: "fk173vo",
    zhjwy3: ["f70v3om", "f1nyd2b1"]
  }
}, {
  d: [".f1eon7jj{background-color:var(--colorStatusDangerBackground1);}", ".f1f8dvr7{border-top-color:var(--colorStatusDangerBorder1);}", ".f1g1ijmo{border-right-color:var(--colorStatusDangerBorder1);}", ".f1nxacbt{border-left-color:var(--colorStatusDangerBorder1);}", ".fo25q1j{border-bottom-color:var(--colorStatusDangerBorder1);}", ".f13ftzij{background-color:var(--colorStatusWarningBackground1);}", ".frd1ypx{border-top-color:var(--colorStatusWarningBorder1);}", ".f1gyjrma{border-right-color:var(--colorStatusWarningBorder1);}", ".f18qd5xz{border-left-color:var(--colorStatusWarningBorder1);}", ".fqyqtrt{border-bottom-color:var(--colorStatusWarningBorder1);}", ".f64thcm{background-color:var(--colorStatusSuccessBackground1);}", ".f1b4u7v{border-top-color:var(--colorStatusSuccessBorder1);}", ".f1nyd2b1{border-right-color:var(--colorStatusSuccessBorder1);}", ".f70v3om{border-left-color:var(--colorStatusSuccessBorder1);}", ".fk173vo{border-bottom-color:var(--colorStatusSuccessBorder1);}"]
});
var useMessageBarStyles_unstable = (state) => {
  "use no memo";
  const rootBaseStyles = useRootBaseStyles4();
  const iconBaseStyles = useIconBaseStyles3();
  const iconIntentStyles = useIconIntentStyles();
  const rootIntentStyles = useRootIntentStyles();
  const reflowSpacerStyles = useReflowSpacerBaseStyles();
  const styles = useStyles48();
  state.root.className = mergeClasses(messageBarClassNames.root, rootBaseStyles, state.layout === "multiline" && styles.rootMultiline, state.shape === "square" && styles.square, rootIntentStyles[state.intent], state.transitionClassName, state.root.className);
  if (state.icon) {
    state.icon.className = mergeClasses(messageBarClassNames.icon, iconBaseStyles, iconIntentStyles[state.intent], state.icon.className);
  }
  if (state.bottomReflowSpacer) {
    state.bottomReflowSpacer.className = mergeClasses(messageBarClassNames.bottomReflowSpacer, reflowSpacerStyles);
  }
  return state;
};

// node_modules/@fluentui/react-message-bar/lib/components/MessageBar/useMessageBarContextValues.js
var React420 = __toESM(require_react());
function useMessageBarContextValue_unstable(state) {
  const { layout, actionsRef, bodyRef, titleId } = state;
  const messageBarContext2 = React420.useMemo(() => ({
    layout,
    actionsRef,
    bodyRef,
    titleId
  }), [
    layout,
    actionsRef,
    bodyRef,
    titleId
  ]);
  return {
    messageBar: messageBarContext2
  };
}

// node_modules/@fluentui/react-message-bar/lib/components/MessageBar/MessageBar.js
var MessageBar = React421.forwardRef((props, ref) => {
  const state = useMessageBar_unstable(props, ref);
  useMessageBarStyles_unstable(state);
  useCustomStyleHook("useMessageBarStyles_unstable")(state);
  return renderMessageBar_unstable(state, useMessageBarContextValue_unstable(state));
});
MessageBar.displayName = "MessageBar";

// node_modules/@fluentui/react-message-bar/lib/components/MessageBarTitle/MessageBarTitle.js
var React423 = __toESM(require_react());

// node_modules/@fluentui/react-message-bar/lib/components/MessageBarTitle/useMessageBarTitle.js
var React422 = __toESM(require_react());
var useMessageBarTitle_unstable = (props, ref) => {
  const { titleId } = useMessageBarContext();
  return {
    components: {
      root: "span"
    },
    root: slot_exports.always(getIntrinsicElementProps("span", {
      ref,
      id: titleId,
      ...props
    }), {
      elementType: "span"
    })
  };
};

// node_modules/@fluentui/react-message-bar/lib/components/MessageBarTitle/renderMessageBarTitle.js
var renderMessageBarTitle_unstable = (state) => {
  assertSlots(state);
  return jsx(state.root, {});
};

// node_modules/@fluentui/react-message-bar/lib/components/MessageBarTitle/useMessageBarTitleStyles.styles.js
var messageBarTitleClassNames = {
  root: "fui-MessageBarTitle"
};
var useRootBaseStyles5 = __resetStyles("r168xkm9", null, [".r168xkm9{font-family:var(--fontFamilyBase);font-size:var(--fontSizeBase300);font-weight:var(--fontWeightSemibold);line-height:var(--lineHeightBase300);}", '.r168xkm9::after{content:" ";}']);
var useMessageBarTitleStyles_unstable = (state) => {
  "use no memo";
  const rootBaseStyles = useRootBaseStyles5();
  state.root.className = mergeClasses(messageBarTitleClassNames.root, rootBaseStyles, state.root.className);
  return state;
};

// node_modules/@fluentui/react-message-bar/lib/components/MessageBarTitle/MessageBarTitle.js
var MessageBarTitle = React423.forwardRef((props, ref) => {
  const state = useMessageBarTitle_unstable(props, ref);
  useMessageBarTitleStyles_unstable(state);
  useCustomStyleHook("useMessageBarTitleStyles_unstable")(state);
  return renderMessageBarTitle_unstable(state);
});
MessageBarTitle.displayName = "MessageBarTitle";

// node_modules/@fluentui/react-message-bar/lib/components/MessageBarActions/MessageBarActions.js
var React426 = __toESM(require_react());

// node_modules/@fluentui/react-message-bar/lib/components/MessageBarActions/useMessageBarActions.js
var React424 = __toESM(require_react());
var useMessageBarActions_unstable = (props, ref) => {
  const { layout = "singleline", actionsRef } = useMessageBarContext();
  return {
    components: {
      root: "div",
      containerAction: "div"
    },
    containerAction: slot_exports.optional(props.containerAction, {
      renderByDefault: false,
      elementType: "div"
    }),
    root: slot_exports.always(getIntrinsicElementProps("div", {
      ref: useMergedRefs(ref, actionsRef),
      ...props
    }), {
      elementType: "div"
    }),
    layout,
    hasActions: !!props.children
  };
};

// node_modules/@fluentui/react-message-bar/lib/components/MessageBarActions/renderMessageBarActions.js
var renderMessageBarActions_unstable = (state, contexts) => {
  assertSlots(state);
  if (state.layout === "multiline") {
    return jsxs(ButtonContextProvider, {
      value: contexts.button,
      children: [
        state.containerAction && jsx(state.containerAction, {}),
        jsx(state.root, {})
      ]
    });
  }
  return jsxs(ButtonContextProvider, {
    value: contexts.button,
    children: [
      jsx(state.root, {}),
      state.containerAction && jsx(state.containerAction, {})
    ]
  });
};

// node_modules/@fluentui/react-message-bar/lib/components/MessageBarActions/useMessageBarActionsStyles.styles.js
var messageBarActionsClassNames = {
  root: "fui-MessageBarActions",
  containerAction: "fui-MessageBarActions__containerAction"
};
var useRootBaseStyles6 = __resetStyles("r1t4x98y", "r15utzv5", [".r1t4x98y{grid-area:secondaryActions;display:flex;column-gap:var(--spacingHorizontalM);padding-right:var(--spacingHorizontalM);}", ".r15utzv5{grid-area:secondaryActions;display:flex;column-gap:var(--spacingHorizontalM);padding-left:var(--spacingHorizontalM);}"]);
var useContainerActionBaseStyles = __resetStyles("rgzw8nq", "r13ur29z", [".rgzw8nq{grid-area:actions;padding-right:var(--spacingHorizontalM);}", ".r13ur29z{grid-area:actions;padding-left:var(--spacingHorizontalM);}"]);
var useMultilineStyles = __styles2({
  root: {
    Brf1p80: "f1e8xxv9",
    B6of3ja: "f1gaxbfw",
    jrapky: "fqcjy3b",
    t21cq0: ["fibjyge", "f9yszdx"],
    z189sj: ["f1p3vkop", "f8cewkv"]
  },
  noActions: {
    mc9l5x: "fjseox"
  }
}, {
  d: [".f1e8xxv9{justify-content:end;}", ".f1gaxbfw{margin-top:var(--spacingVerticalMNudge);}", ".fqcjy3b{margin-bottom:var(--spacingVerticalS);}", ".fibjyge{margin-right:0px;}", ".f9yszdx{margin-left:0px;}", ".f1p3vkop{padding-right:var(--spacingVerticalM);}", ".f8cewkv{padding-left:var(--spacingVerticalM);}", ".fjseox{display:none;}"]
});
var useMessageBarActionsStyles_unstable = (state) => {
  "use no memo";
  const rootBaseStyles = useRootBaseStyles6();
  const containerActionBaseStyles = useContainerActionBaseStyles();
  const multilineStyles = useMultilineStyles();
  state.root.className = mergeClasses(messageBarActionsClassNames.root, rootBaseStyles, state.layout === "multiline" && multilineStyles.root, !state.hasActions && multilineStyles.noActions, state.root.className);
  if (state.containerAction) {
    state.containerAction.className = mergeClasses(messageBarActionsClassNames.containerAction, containerActionBaseStyles, state.containerAction.className);
  }
  return state;
};

// node_modules/@fluentui/react-message-bar/lib/components/MessageBarActions/useMessageBarActionsContextValues.js
var React425 = __toESM(require_react());
function useMessageBarActionsContextValue_unstable() {
  const buttonContext2 = React425.useMemo(() => ({
    size: "small"
  }), []);
  return {
    button: buttonContext2
  };
}

// node_modules/@fluentui/react-message-bar/lib/components/MessageBarActions/MessageBarActions.js
var MessageBarActions = React426.forwardRef((props, ref) => {
  const state = useMessageBarActions_unstable(props, ref);
  useMessageBarActionsStyles_unstable(state);
  useCustomStyleHook("useMessageBarActionsStyles_unstable")(state);
  return renderMessageBarActions_unstable(state, useMessageBarActionsContextValue_unstable());
});
MessageBarActions.displayName = "MessageBarActions";

// node_modules/@fluentui/react-message-bar/lib/components/MessageBarBody/MessageBarBody.js
var React429 = __toESM(require_react());

// node_modules/@fluentui/react-message-bar/lib/components/MessageBarBody/useMessageBarBody.js
var React427 = __toESM(require_react());
var useMessageBarBody_unstable = (props, ref) => {
  const { bodyRef } = useMessageBarContext();
  return {
    components: {
      root: "div"
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      ref: useMergedRefs(ref, bodyRef),
      ...props
    }), {
      elementType: "div"
    })
  };
};

// node_modules/@fluentui/react-message-bar/lib/components/MessageBarBody/renderMessageBarBody.js
var renderMessageBarBody_unstable = (state, contextValues) => {
  assertSlots(state);
  return jsx(LinkContextProvider, {
    value: contextValues.link,
    children: jsx(state.root, {})
  });
};

// node_modules/@fluentui/react-message-bar/lib/components/MessageBarBody/useMessageBarBodyStyles.styles.js
var messageBarBodyClassNames = {
  root: "fui-MessageBarBody"
};
var useRootBaseStyles7 = __resetStyles("rtatq2b", "re2rary", [".rtatq2b{font-family:var(--fontFamilyBase);font-size:var(--fontSizeBase300);font-weight:var(--fontWeightRegular);line-height:var(--lineHeightBase300);grid-area:body;padding-right:var(--spacingHorizontalM);}", ".re2rary{font-family:var(--fontFamilyBase);font-size:var(--fontSizeBase300);font-weight:var(--fontWeightRegular);line-height:var(--lineHeightBase300);grid-area:body;padding-left:var(--spacingHorizontalM);}"]);
var useMessageBarBodyStyles_unstable = (state) => {
  "use no memo";
  const rootBaseStyles = useRootBaseStyles7();
  state.root.className = mergeClasses(messageBarBodyClassNames.root, rootBaseStyles, state.root.className);
  return state;
};

// node_modules/@fluentui/react-message-bar/lib/components/MessageBarBody/useMessageBarBodyContextValues.js
var React428 = __toESM(require_react());
function useMessageBarBodyContextValues_unstable(state) {
  const link = React428.useMemo(() => ({
    inline: true
  }), []);
  return {
    link
  };
}

// node_modules/@fluentui/react-message-bar/lib/components/MessageBarBody/MessageBarBody.js
var MessageBarBody = React429.forwardRef((props, ref) => {
  const state = useMessageBarBody_unstable(props, ref);
  const ctx = useMessageBarBodyContextValues_unstable(state);
  useMessageBarBodyStyles_unstable(state);
  useCustomStyleHook("useMessageBarBodyStyles_unstable")(state);
  return renderMessageBarBody_unstable(state, ctx);
});
MessageBarBody.displayName = "MessageBarBody";

// node_modules/@fluentui/react-message-bar/lib/components/MessageBarGroup/MessageBarGroup.js
var React438 = __toESM(require_react());

// node_modules/@fluentui/react-message-bar/lib/components/MessageBarGroup/useMessageBarGroup.js
var React430 = __toESM(require_react());
var useMessageBarGroup_unstable = (props, ref) => {
  if (true) {
    React430.Children.forEach(props.children, (c) => {
      if (!React430.isValidElement(c) || c.type === React430.Fragment) {
        throw new Error("MessageBarGroup: children must be valid MessageBar components. Please ensure you're not using fragments. ");
      }
    });
  }
  var _props_children;
  const children2 = React430.Children.map((_props_children = props.children) !== null && _props_children !== void 0 ? _props_children : [], (c) => React430.isValidElement(c) && c.type !== React430.Fragment ? c : null).filter(Boolean);
  var _props_animate;
  return {
    components: {
      root: "div"
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      ref,
      ...props
    }), {
      elementType: "div"
    }),
    children: children2,
    animate: (_props_animate = props.animate) !== null && _props_animate !== void 0 ? _props_animate : "exit-only",
    enterStyles: "",
    exitStyles: ""
  };
};

// node_modules/@babel/runtime/helpers/esm/extends.js
function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function(n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}

// node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
function _objectWithoutPropertiesLoose(r, e) {
  if (null == r) return {};
  var t = {};
  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {
    if (e.includes(n)) continue;
    t[n] = r[n];
  }
  return t;
}

// node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js
function _setPrototypeOf(t, e) {
  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t2, e2) {
    return t2.__proto__ = e2, t2;
  }, _setPrototypeOf(t, e);
}

// node_modules/@babel/runtime/helpers/esm/inheritsLoose.js
function _inheritsLoose(t, o) {
  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, _setPrototypeOf(t, o);
}

// node_modules/react-transition-group/esm/CSSTransition.js
var import_prop_types3 = __toESM(require_prop_types());

// node_modules/dom-helpers/esm/hasClass.js
function hasClass(element, className) {
  if (element.classList) return !!className && element.classList.contains(className);
  return (" " + (element.className.baseVal || element.className) + " ").indexOf(" " + className + " ") !== -1;
}

// node_modules/dom-helpers/esm/addClass.js
function addClass(element, className) {
  if (element.classList) element.classList.add(className);
  else if (!hasClass(element, className)) if (typeof element.className === "string") element.className = element.className + " " + className;
  else element.setAttribute("class", (element.className && element.className.baseVal || "") + " " + className);
}

// node_modules/dom-helpers/esm/removeClass.js
function replaceClassName(origClass, classToRemove) {
  return origClass.replace(new RegExp("(^|\\s)" + classToRemove + "(?:\\s|$)", "g"), "$1").replace(/\s+/g, " ").replace(/^\s*|\s*$/g, "");
}
function removeClass(element, className) {
  if (element.classList) {
    element.classList.remove(className);
  } else if (typeof element.className === "string") {
    element.className = replaceClassName(element.className, className);
  } else {
    element.setAttribute("class", replaceClassName(element.className && element.className.baseVal || "", className));
  }
}

// node_modules/react-transition-group/esm/CSSTransition.js
var import_react140 = __toESM(require_react());

// node_modules/react-transition-group/esm/Transition.js
var import_prop_types2 = __toESM(require_prop_types());
var import_react139 = __toESM(require_react());
var import_react_dom = __toESM(require_react_dom());

// node_modules/react-transition-group/esm/config.js
var config_default = {
  disabled: false
};

// node_modules/react-transition-group/esm/utils/PropTypes.js
var import_prop_types = __toESM(require_prop_types());
var timeoutsShape = true ? import_prop_types.default.oneOfType([import_prop_types.default.number, import_prop_types.default.shape({
  enter: import_prop_types.default.number,
  exit: import_prop_types.default.number,
  appear: import_prop_types.default.number
}).isRequired]) : null;
var classNamesShape = true ? import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.shape({
  enter: import_prop_types.default.string,
  exit: import_prop_types.default.string,
  active: import_prop_types.default.string
}), import_prop_types.default.shape({
  enter: import_prop_types.default.string,
  enterDone: import_prop_types.default.string,
  enterActive: import_prop_types.default.string,
  exit: import_prop_types.default.string,
  exitDone: import_prop_types.default.string,
  exitActive: import_prop_types.default.string
})]) : null;

// node_modules/react-transition-group/esm/TransitionGroupContext.js
var import_react138 = __toESM(require_react());
var TransitionGroupContext_default = import_react138.default.createContext(null);

// node_modules/react-transition-group/esm/utils/reflow.js
var forceReflow = function forceReflow2(node) {
  return node.scrollTop;
};

// node_modules/react-transition-group/esm/Transition.js
var UNMOUNTED = "unmounted";
var EXITED = "exited";
var ENTERING = "entering";
var ENTERED = "entered";
var EXITING = "exiting";
var Transition = function(_React$Component) {
  _inheritsLoose(Transition2, _React$Component);
  function Transition2(props, context) {
    var _this;
    _this = _React$Component.call(this, props, context) || this;
    var parentGroup = context;
    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;
    var initialStatus;
    _this.appearStatus = null;
    if (props.in) {
      if (appear) {
        initialStatus = EXITED;
        _this.appearStatus = ENTERING;
      } else {
        initialStatus = ENTERED;
      }
    } else {
      if (props.unmountOnExit || props.mountOnEnter) {
        initialStatus = UNMOUNTED;
      } else {
        initialStatus = EXITED;
      }
    }
    _this.state = {
      status: initialStatus
    };
    _this.nextCallback = null;
    return _this;
  }
  Transition2.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {
    var nextIn = _ref.in;
    if (nextIn && prevState.status === UNMOUNTED) {
      return {
        status: EXITED
      };
    }
    return null;
  };
  var _proto = Transition2.prototype;
  _proto.componentDidMount = function componentDidMount() {
    this.updateStatus(true, this.appearStatus);
  };
  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    var nextStatus = null;
    if (prevProps !== this.props) {
      var status = this.state.status;
      if (this.props.in) {
        if (status !== ENTERING && status !== ENTERED) {
          nextStatus = ENTERING;
        }
      } else {
        if (status === ENTERING || status === ENTERED) {
          nextStatus = EXITING;
        }
      }
    }
    this.updateStatus(false, nextStatus);
  };
  _proto.componentWillUnmount = function componentWillUnmount() {
    this.cancelNextCallback();
  };
  _proto.getTimeouts = function getTimeouts() {
    var timeout2 = this.props.timeout;
    var exit, enter, appear;
    exit = enter = appear = timeout2;
    if (timeout2 != null && typeof timeout2 !== "number") {
      exit = timeout2.exit;
      enter = timeout2.enter;
      appear = timeout2.appear !== void 0 ? timeout2.appear : enter;
    }
    return {
      exit,
      enter,
      appear
    };
  };
  _proto.updateStatus = function updateStatus(mounting, nextStatus) {
    if (mounting === void 0) {
      mounting = false;
    }
    if (nextStatus !== null) {
      this.cancelNextCallback();
      if (nextStatus === ENTERING) {
        if (this.props.unmountOnExit || this.props.mountOnEnter) {
          var node = this.props.nodeRef ? this.props.nodeRef.current : import_react_dom.default.findDOMNode(this);
          if (node) forceReflow(node);
        }
        this.performEnter(mounting);
      } else {
        this.performExit();
      }
    } else if (this.props.unmountOnExit && this.state.status === EXITED) {
      this.setState({
        status: UNMOUNTED
      });
    }
  };
  _proto.performEnter = function performEnter(mounting) {
    var _this2 = this;
    var enter = this.props.enter;
    var appearing = this.context ? this.context.isMounting : mounting;
    var _ref2 = this.props.nodeRef ? [appearing] : [import_react_dom.default.findDOMNode(this), appearing], maybeNode = _ref2[0], maybeAppearing = _ref2[1];
    var timeouts = this.getTimeouts();
    var enterTimeout = appearing ? timeouts.appear : timeouts.enter;
    if (!mounting && !enter || config_default.disabled) {
      this.safeSetState({
        status: ENTERED
      }, function() {
        _this2.props.onEntered(maybeNode);
      });
      return;
    }
    this.props.onEnter(maybeNode, maybeAppearing);
    this.safeSetState({
      status: ENTERING
    }, function() {
      _this2.props.onEntering(maybeNode, maybeAppearing);
      _this2.onTransitionEnd(enterTimeout, function() {
        _this2.safeSetState({
          status: ENTERED
        }, function() {
          _this2.props.onEntered(maybeNode, maybeAppearing);
        });
      });
    });
  };
  _proto.performExit = function performExit() {
    var _this3 = this;
    var exit = this.props.exit;
    var timeouts = this.getTimeouts();
    var maybeNode = this.props.nodeRef ? void 0 : import_react_dom.default.findDOMNode(this);
    if (!exit || config_default.disabled) {
      this.safeSetState({
        status: EXITED
      }, function() {
        _this3.props.onExited(maybeNode);
      });
      return;
    }
    this.props.onExit(maybeNode);
    this.safeSetState({
      status: EXITING
    }, function() {
      _this3.props.onExiting(maybeNode);
      _this3.onTransitionEnd(timeouts.exit, function() {
        _this3.safeSetState({
          status: EXITED
        }, function() {
          _this3.props.onExited(maybeNode);
        });
      });
    });
  };
  _proto.cancelNextCallback = function cancelNextCallback() {
    if (this.nextCallback !== null) {
      this.nextCallback.cancel();
      this.nextCallback = null;
    }
  };
  _proto.safeSetState = function safeSetState(nextState, callback) {
    callback = this.setNextCallback(callback);
    this.setState(nextState, callback);
  };
  _proto.setNextCallback = function setNextCallback(callback) {
    var _this4 = this;
    var active = true;
    this.nextCallback = function(event) {
      if (active) {
        active = false;
        _this4.nextCallback = null;
        callback(event);
      }
    };
    this.nextCallback.cancel = function() {
      active = false;
    };
    return this.nextCallback;
  };
  _proto.onTransitionEnd = function onTransitionEnd(timeout2, handler) {
    this.setNextCallback(handler);
    var node = this.props.nodeRef ? this.props.nodeRef.current : import_react_dom.default.findDOMNode(this);
    var doesNotHaveTimeoutOrListener = timeout2 == null && !this.props.addEndListener;
    if (!node || doesNotHaveTimeoutOrListener) {
      setTimeout(this.nextCallback, 0);
      return;
    }
    if (this.props.addEndListener) {
      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback], maybeNode = _ref3[0], maybeNextCallback = _ref3[1];
      this.props.addEndListener(maybeNode, maybeNextCallback);
    }
    if (timeout2 != null) {
      setTimeout(this.nextCallback, timeout2);
    }
  };
  _proto.render = function render() {
    var status = this.state.status;
    if (status === UNMOUNTED) {
      return null;
    }
    var _this$props = this.props, children2 = _this$props.children, _in = _this$props.in, _mountOnEnter = _this$props.mountOnEnter, _unmountOnExit = _this$props.unmountOnExit, _appear = _this$props.appear, _enter = _this$props.enter, _exit = _this$props.exit, _timeout = _this$props.timeout, _addEndListener = _this$props.addEndListener, _onEnter = _this$props.onEnter, _onEntering = _this$props.onEntering, _onEntered = _this$props.onEntered, _onExit = _this$props.onExit, _onExiting = _this$props.onExiting, _onExited = _this$props.onExited, _nodeRef = _this$props.nodeRef, childProps = _objectWithoutPropertiesLoose(_this$props, ["children", "in", "mountOnEnter", "unmountOnExit", "appear", "enter", "exit", "timeout", "addEndListener", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "nodeRef"]);
    return (
      // allows for nested Transitions
      import_react139.default.createElement(TransitionGroupContext_default.Provider, {
        value: null
      }, typeof children2 === "function" ? children2(status, childProps) : import_react139.default.cloneElement(import_react139.default.Children.only(children2), childProps))
    );
  };
  return Transition2;
}(import_react139.default.Component);
Transition.contextType = TransitionGroupContext_default;
Transition.propTypes = true ? {
  /**
   * A React reference to DOM element that need to transition:
   * https://stackoverflow.com/a/51127130/4671932
   *
   *   - When `nodeRef` prop is used, `node` is not passed to callback functions
   *      (e.g. `onEnter`) because user already has direct access to the node.
   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new
   *     `nodeRef` need to be provided to `Transition` with changed `key` prop
   *     (see
   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).
   */
  nodeRef: import_prop_types2.default.shape({
    current: typeof Element === "undefined" ? import_prop_types2.default.any : function(propValue, key, componentName, location, propFullName, secret) {
      var value = propValue[key];
      return import_prop_types2.default.instanceOf(value && "ownerDocument" in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);
    }
  }),
  /**
   * A `function` child can be used instead of a React element. This function is
   * called with the current transition status (`'entering'`, `'entered'`,
   * `'exiting'`, `'exited'`), which can be used to apply context
   * specific props to a component.
   *
   * ```jsx
   * <Transition in={this.state.in} timeout={150}>
   *   {state => (
   *     <MyComponent className={`fade fade-${state}`} />
   *   )}
   * </Transition>
   * ```
   */
  children: import_prop_types2.default.oneOfType([import_prop_types2.default.func.isRequired, import_prop_types2.default.element.isRequired]).isRequired,
  /**
   * Show the component; triggers the enter or exit states
   */
  in: import_prop_types2.default.bool,
  /**
   * By default the child component is mounted immediately along with
   * the parent `Transition` component. If you want to "lazy mount" the component on the
   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
   * mounted, even on "exited", unless you also specify `unmountOnExit`.
   */
  mountOnEnter: import_prop_types2.default.bool,
  /**
   * By default the child component stays mounted after it reaches the `'exited'` state.
   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
   */
  unmountOnExit: import_prop_types2.default.bool,
  /**
   * By default the child component does not perform the enter transition when
   * it first mounts, regardless of the value of `in`. If you want this
   * behavior, set both `appear` and `in` to `true`.
   *
   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop
   * > only adds an additional enter transition. However, in the
   * > `<CSSTransition>` component that first enter transition does result in
   * > additional `.appear-*` classes, that way you can choose to style it
   * > differently.
   */
  appear: import_prop_types2.default.bool,
  /**
   * Enable or disable enter transitions.
   */
  enter: import_prop_types2.default.bool,
  /**
   * Enable or disable exit transitions.
   */
  exit: import_prop_types2.default.bool,
  /**
   * The duration of the transition, in milliseconds.
   * Required unless `addEndListener` is provided.
   *
   * You may specify a single timeout for all transitions:
   *
   * ```jsx
   * timeout={500}
   * ```
   *
   * or individually:
   *
   * ```jsx
   * timeout={{
   *  appear: 500,
   *  enter: 300,
   *  exit: 500,
   * }}
   * ```
   *
   * - `appear` defaults to the value of `enter`
   * - `enter` defaults to `0`
   * - `exit` defaults to `0`
   *
   * @type {number | { enter?: number, exit?: number, appear?: number }}
   */
  timeout: function timeout(props) {
    var pt = timeoutsShape;
    if (!props.addEndListener) pt = pt.isRequired;
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }
    return pt.apply(void 0, [props].concat(args));
  },
  /**
   * Add a custom transition end trigger. Called with the transitioning
   * DOM node and a `done` callback. Allows for more fine grained transition end
   * logic. Timeouts are still used as a fallback if provided.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * ```jsx
   * addEndListener={(node, done) => {
   *   // use the css transitionend event to mark the finish of a transition
   *   node.addEventListener('transitionend', done, false);
   * }}
   * ```
   */
  addEndListener: import_prop_types2.default.func,
  /**
   * Callback fired before the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEnter: import_prop_types2.default.func,
  /**
   * Callback fired after the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: import_prop_types2.default.func,
  /**
   * Callback fired after the "entered" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEntered: import_prop_types2.default.func,
  /**
   * Callback fired before the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExit: import_prop_types2.default.func,
  /**
   * Callback fired after the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExiting: import_prop_types2.default.func,
  /**
   * Callback fired after the "exited" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExited: import_prop_types2.default.func
} : {};
function noop10() {
}
Transition.defaultProps = {
  in: false,
  mountOnEnter: false,
  unmountOnExit: false,
  appear: false,
  enter: true,
  exit: true,
  onEnter: noop10,
  onEntering: noop10,
  onEntered: noop10,
  onExit: noop10,
  onExiting: noop10,
  onExited: noop10
};
Transition.UNMOUNTED = UNMOUNTED;
Transition.EXITED = EXITED;
Transition.ENTERING = ENTERING;
Transition.ENTERED = ENTERED;
Transition.EXITING = EXITING;
var Transition_default = Transition;

// node_modules/react-transition-group/esm/CSSTransition.js
var _addClass = function addClass2(node, classes) {
  return node && classes && classes.split(" ").forEach(function(c) {
    return addClass(node, c);
  });
};
var removeClass2 = function removeClass3(node, classes) {
  return node && classes && classes.split(" ").forEach(function(c) {
    return removeClass(node, c);
  });
};
var CSSTransition = function(_React$Component) {
  _inheritsLoose(CSSTransition2, _React$Component);
  function CSSTransition2() {
    var _this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.appliedClasses = {
      appear: {},
      enter: {},
      exit: {}
    };
    _this.onEnter = function(maybeNode, maybeAppearing) {
      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing), node = _this$resolveArgument[0], appearing = _this$resolveArgument[1];
      _this.removeClasses(node, "exit");
      _this.addClass(node, appearing ? "appear" : "enter", "base");
      if (_this.props.onEnter) {
        _this.props.onEnter(maybeNode, maybeAppearing);
      }
    };
    _this.onEntering = function(maybeNode, maybeAppearing) {
      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing), node = _this$resolveArgument2[0], appearing = _this$resolveArgument2[1];
      var type = appearing ? "appear" : "enter";
      _this.addClass(node, type, "active");
      if (_this.props.onEntering) {
        _this.props.onEntering(maybeNode, maybeAppearing);
      }
    };
    _this.onEntered = function(maybeNode, maybeAppearing) {
      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing), node = _this$resolveArgument3[0], appearing = _this$resolveArgument3[1];
      var type = appearing ? "appear" : "enter";
      _this.removeClasses(node, type);
      _this.addClass(node, type, "done");
      if (_this.props.onEntered) {
        _this.props.onEntered(maybeNode, maybeAppearing);
      }
    };
    _this.onExit = function(maybeNode) {
      var _this$resolveArgument4 = _this.resolveArguments(maybeNode), node = _this$resolveArgument4[0];
      _this.removeClasses(node, "appear");
      _this.removeClasses(node, "enter");
      _this.addClass(node, "exit", "base");
      if (_this.props.onExit) {
        _this.props.onExit(maybeNode);
      }
    };
    _this.onExiting = function(maybeNode) {
      var _this$resolveArgument5 = _this.resolveArguments(maybeNode), node = _this$resolveArgument5[0];
      _this.addClass(node, "exit", "active");
      if (_this.props.onExiting) {
        _this.props.onExiting(maybeNode);
      }
    };
    _this.onExited = function(maybeNode) {
      var _this$resolveArgument6 = _this.resolveArguments(maybeNode), node = _this$resolveArgument6[0];
      _this.removeClasses(node, "exit");
      _this.addClass(node, "exit", "done");
      if (_this.props.onExited) {
        _this.props.onExited(maybeNode);
      }
    };
    _this.resolveArguments = function(maybeNode, maybeAppearing) {
      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] : [maybeNode, maybeAppearing];
    };
    _this.getClassNames = function(type) {
      var classNames = _this.props.classNames;
      var isStringClassNames = typeof classNames === "string";
      var prefix = isStringClassNames && classNames ? classNames + "-" : "";
      var baseClassName = isStringClassNames ? "" + prefix + type : classNames[type];
      var activeClassName = isStringClassNames ? baseClassName + "-active" : classNames[type + "Active"];
      var doneClassName = isStringClassNames ? baseClassName + "-done" : classNames[type + "Done"];
      return {
        baseClassName,
        activeClassName,
        doneClassName
      };
    };
    return _this;
  }
  var _proto = CSSTransition2.prototype;
  _proto.addClass = function addClass3(node, type, phase) {
    var className = this.getClassNames(type)[phase + "ClassName"];
    var _this$getClassNames = this.getClassNames("enter"), doneClassName = _this$getClassNames.doneClassName;
    if (type === "appear" && phase === "done" && doneClassName) {
      className += " " + doneClassName;
    }
    if (phase === "active") {
      if (node) forceReflow(node);
    }
    if (className) {
      this.appliedClasses[type][phase] = className;
      _addClass(node, className);
    }
  };
  _proto.removeClasses = function removeClasses(node, type) {
    var _this$appliedClasses$ = this.appliedClasses[type], baseClassName = _this$appliedClasses$.base, activeClassName = _this$appliedClasses$.active, doneClassName = _this$appliedClasses$.done;
    this.appliedClasses[type] = {};
    if (baseClassName) {
      removeClass2(node, baseClassName);
    }
    if (activeClassName) {
      removeClass2(node, activeClassName);
    }
    if (doneClassName) {
      removeClass2(node, doneClassName);
    }
  };
  _proto.render = function render() {
    var _this$props = this.props, _ = _this$props.classNames, props = _objectWithoutPropertiesLoose(_this$props, ["classNames"]);
    return import_react140.default.createElement(Transition_default, _extends({}, props, {
      onEnter: this.onEnter,
      onEntered: this.onEntered,
      onEntering: this.onEntering,
      onExit: this.onExit,
      onExiting: this.onExiting,
      onExited: this.onExited
    }));
  };
  return CSSTransition2;
}(import_react140.default.Component);
CSSTransition.defaultProps = {
  classNames: ""
};
CSSTransition.propTypes = true ? _extends({}, Transition_default.propTypes, {
  /**
   * The animation classNames applied to the component as it appears, enters,
   * exits or has finished the transition. A single name can be provided, which
   * will be suffixed for each stage, e.g. `classNames="fade"` applies:
   *
   * - `fade-appear`, `fade-appear-active`, `fade-appear-done`
   * - `fade-enter`, `fade-enter-active`, `fade-enter-done`
   * - `fade-exit`, `fade-exit-active`, `fade-exit-done`
   *
   * A few details to note about how these classes are applied:
   *
   * 1. They are _joined_ with the ones that are already defined on the child
   *    component, so if you want to add some base styles, you can use
   *    `className` without worrying that it will be overridden.
   *
   * 2. If the transition component mounts with `in={false}`, no classes are
   *    applied yet. You might be expecting `*-exit-done`, but if you think
   *    about it, a component cannot finish exiting if it hasn't entered yet.
   *
   * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This
   *    allows you to define different behavior for when appearing is done and
   *    when regular entering is done, using selectors like
   *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply
   *    an epic entrance animation when element first appears in the DOM using
   *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can
   *    simply use `fade-enter-done` for defining both cases.
   *
   * Each individual classNames can also be specified independently like:
   *
   * ```js
   * classNames={{
   *  appear: 'my-appear',
   *  appearActive: 'my-active-appear',
   *  appearDone: 'my-done-appear',
   *  enter: 'my-enter',
   *  enterActive: 'my-active-enter',
   *  enterDone: 'my-done-enter',
   *  exit: 'my-exit',
   *  exitActive: 'my-active-exit',
   *  exitDone: 'my-done-exit',
   * }}
   * ```
   *
   * If you want to set these classes using CSS Modules:
   *
   * ```js
   * import styles from './styles.css';
   * ```
   *
   * you might want to use camelCase in your CSS file, that way could simply
   * spread them instead of listing them one by one:
   *
   * ```js
   * classNames={{ ...styles }}
   * ```
   *
   * @type {string | {
   *  appear?: string,
   *  appearActive?: string,
   *  appearDone?: string,
   *  enter?: string,
   *  enterActive?: string,
   *  enterDone?: string,
   *  exit?: string,
   *  exitActive?: string,
   *  exitDone?: string,
   * }}
   */
  classNames: classNamesShape,
  /**
   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is
   * applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEnter: import_prop_types3.default.func,
  /**
   * A `<Transition>` callback fired immediately after the 'enter-active' or
   * 'appear-active' class is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: import_prop_types3.default.func,
  /**
   * A `<Transition>` callback fired immediately after the 'enter' or
   * 'appear' classes are **removed** and the `done` class is added to the DOM node.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntered: import_prop_types3.default.func,
  /**
   * A `<Transition>` callback fired immediately after the 'exit' class is
   * applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement)
   */
  onExit: import_prop_types3.default.func,
  /**
   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement)
   */
  onExiting: import_prop_types3.default.func,
  /**
   * A `<Transition>` callback fired immediately after the 'exit' classes
   * are **removed** and the `exit-done` class is added to the DOM node.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement)
   */
  onExited: import_prop_types3.default.func
}) : {};

// node_modules/react-transition-group/esm/ReplaceTransition.js
var import_prop_types5 = __toESM(require_prop_types());
var import_react143 = __toESM(require_react());
var import_react_dom2 = __toESM(require_react_dom());

// node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js
function _assertThisInitialized(e) {
  if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return e;
}

// node_modules/react-transition-group/esm/TransitionGroup.js
var import_prop_types4 = __toESM(require_prop_types());
var import_react142 = __toESM(require_react());

// node_modules/react-transition-group/esm/utils/ChildMapping.js
var import_react141 = __toESM(require_react());
function getChildMapping2(children2, mapFn) {
  var mapper = function mapper2(child) {
    return mapFn && (0, import_react141.isValidElement)(child) ? mapFn(child) : child;
  };
  var result = /* @__PURE__ */ Object.create(null);
  if (children2) import_react141.Children.map(children2, function(c) {
    return c;
  }).forEach(function(child) {
    result[child.key] = mapper(child);
  });
  return result;
}
function mergeChildMappings2(prev, next) {
  prev = prev || {};
  next = next || {};
  function getValueForKey(key) {
    return key in next ? next[key] : prev[key];
  }
  var nextKeysPending = /* @__PURE__ */ Object.create(null);
  var pendingKeys = [];
  for (var prevKey in prev) {
    if (prevKey in next) {
      if (pendingKeys.length) {
        nextKeysPending[prevKey] = pendingKeys;
        pendingKeys = [];
      }
    } else {
      pendingKeys.push(prevKey);
    }
  }
  var i;
  var childMapping = {};
  for (var nextKey in next) {
    if (nextKeysPending[nextKey]) {
      for (i = 0; i < nextKeysPending[nextKey].length; i++) {
        var pendingNextKey = nextKeysPending[nextKey][i];
        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
      }
    }
    childMapping[nextKey] = getValueForKey(nextKey);
  }
  for (i = 0; i < pendingKeys.length; i++) {
    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
  }
  return childMapping;
}
function getProp(child, prop, props) {
  return props[prop] != null ? props[prop] : child.props[prop];
}
function getInitialChildMapping(props, onExited) {
  return getChildMapping2(props.children, function(child) {
    return (0, import_react141.cloneElement)(child, {
      onExited: onExited.bind(null, child),
      in: true,
      appear: getProp(child, "appear", props),
      enter: getProp(child, "enter", props),
      exit: getProp(child, "exit", props)
    });
  });
}
function getNextChildMapping2(nextProps, prevChildMapping, onExited) {
  var nextChildMapping = getChildMapping2(nextProps.children);
  var children2 = mergeChildMappings2(prevChildMapping, nextChildMapping);
  Object.keys(children2).forEach(function(key) {
    var child = children2[key];
    if (!(0, import_react141.isValidElement)(child)) return;
    var hasPrev = key in prevChildMapping;
    var hasNext = key in nextChildMapping;
    var prevChild = prevChildMapping[key];
    var isLeaving = (0, import_react141.isValidElement)(prevChild) && !prevChild.props.in;
    if (hasNext && (!hasPrev || isLeaving)) {
      children2[key] = (0, import_react141.cloneElement)(child, {
        onExited: onExited.bind(null, child),
        in: true,
        exit: getProp(child, "exit", nextProps),
        enter: getProp(child, "enter", nextProps)
      });
    } else if (!hasNext && hasPrev && !isLeaving) {
      children2[key] = (0, import_react141.cloneElement)(child, {
        in: false
      });
    } else if (hasNext && hasPrev && (0, import_react141.isValidElement)(prevChild)) {
      children2[key] = (0, import_react141.cloneElement)(child, {
        onExited: onExited.bind(null, child),
        in: prevChild.props.in,
        exit: getProp(child, "exit", nextProps),
        enter: getProp(child, "enter", nextProps)
      });
    }
  });
  return children2;
}

// node_modules/react-transition-group/esm/TransitionGroup.js
var values = Object.values || function(obj) {
  return Object.keys(obj).map(function(k) {
    return obj[k];
  });
};
var defaultProps = {
  component: "div",
  childFactory: function childFactory(child) {
    return child;
  }
};
var TransitionGroup = function(_React$Component) {
  _inheritsLoose(TransitionGroup2, _React$Component);
  function TransitionGroup2(props, context) {
    var _this;
    _this = _React$Component.call(this, props, context) || this;
    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this));
    _this.state = {
      contextValue: {
        isMounting: true
      },
      handleExited,
      firstRender: true
    };
    return _this;
  }
  var _proto = TransitionGroup2.prototype;
  _proto.componentDidMount = function componentDidMount() {
    this.mounted = true;
    this.setState({
      contextValue: {
        isMounting: false
      }
    });
  };
  _proto.componentWillUnmount = function componentWillUnmount() {
    this.mounted = false;
  };
  TransitionGroup2.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {
    var prevChildMapping = _ref.children, handleExited = _ref.handleExited, firstRender = _ref.firstRender;
    return {
      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping2(nextProps, prevChildMapping, handleExited),
      firstRender: false
    };
  };
  _proto.handleExited = function handleExited(child, node) {
    var currentChildMapping = getChildMapping2(this.props.children);
    if (child.key in currentChildMapping) return;
    if (child.props.onExited) {
      child.props.onExited(node);
    }
    if (this.mounted) {
      this.setState(function(state) {
        var children2 = _extends({}, state.children);
        delete children2[child.key];
        return {
          children: children2
        };
      });
    }
  };
  _proto.render = function render() {
    var _this$props = this.props, Component2 = _this$props.component, childFactory2 = _this$props.childFactory, props = _objectWithoutPropertiesLoose(_this$props, ["component", "childFactory"]);
    var contextValue = this.state.contextValue;
    var children2 = values(this.state.children).map(childFactory2);
    delete props.appear;
    delete props.enter;
    delete props.exit;
    if (Component2 === null) {
      return import_react142.default.createElement(TransitionGroupContext_default.Provider, {
        value: contextValue
      }, children2);
    }
    return import_react142.default.createElement(TransitionGroupContext_default.Provider, {
      value: contextValue
    }, import_react142.default.createElement(Component2, props, children2));
  };
  return TransitionGroup2;
}(import_react142.default.Component);
TransitionGroup.propTypes = true ? {
  /**
   * `<TransitionGroup>` renders a `<div>` by default. You can change this
   * behavior by providing a `component` prop.
   * If you use React v16+ and would like to avoid a wrapping `<div>` element
   * you can pass in `component={null}`. This is useful if the wrapping div
   * borks your css styles.
   */
  component: import_prop_types4.default.any,
  /**
   * A set of `<Transition>` components, that are toggled `in` and out as they
   * leave. the `<TransitionGroup>` will inject specific transition props, so
   * remember to spread them through if you are wrapping the `<Transition>` as
   * with our `<Fade>` example.
   *
   * While this component is meant for multiple `Transition` or `CSSTransition`
   * children, sometimes you may want to have a single transition child with
   * content that you want to be transitioned out and in when you change it
   * (e.g. routes, images etc.) In that case you can change the `key` prop of
   * the transition child as you change its content, this will cause
   * `TransitionGroup` to transition the child out and back in.
   */
  children: import_prop_types4.default.node,
  /**
   * A convenience prop that enables or disables appear animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  appear: import_prop_types4.default.bool,
  /**
   * A convenience prop that enables or disables enter animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  enter: import_prop_types4.default.bool,
  /**
   * A convenience prop that enables or disables exit animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  exit: import_prop_types4.default.bool,
  /**
   * You may need to apply reactive updates to a child as it is exiting.
   * This is generally done by using `cloneElement` however in the case of an exiting
   * child the element has already been removed and not accessible to the consumer.
   *
   * If you do need to update a child as it leaves you can provide a `childFactory`
   * to wrap every child, even the ones that are leaving.
   *
   * @type Function(child: ReactElement) -> ReactElement
   */
  childFactory: import_prop_types4.default.func
} : {};
TransitionGroup.defaultProps = defaultProps;
var TransitionGroup_default = TransitionGroup;

// node_modules/react-transition-group/esm/ReplaceTransition.js
var ReplaceTransition = function(_React$Component) {
  _inheritsLoose(ReplaceTransition2, _React$Component);
  function ReplaceTransition2() {
    var _this;
    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
      _args[_key] = arguments[_key];
    }
    _this = _React$Component.call.apply(_React$Component, [this].concat(_args)) || this;
    _this.handleEnter = function() {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }
      return _this.handleLifecycle("onEnter", 0, args);
    };
    _this.handleEntering = function() {
      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }
      return _this.handleLifecycle("onEntering", 0, args);
    };
    _this.handleEntered = function() {
      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        args[_key4] = arguments[_key4];
      }
      return _this.handleLifecycle("onEntered", 0, args);
    };
    _this.handleExit = function() {
      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
        args[_key5] = arguments[_key5];
      }
      return _this.handleLifecycle("onExit", 1, args);
    };
    _this.handleExiting = function() {
      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
        args[_key6] = arguments[_key6];
      }
      return _this.handleLifecycle("onExiting", 1, args);
    };
    _this.handleExited = function() {
      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
        args[_key7] = arguments[_key7];
      }
      return _this.handleLifecycle("onExited", 1, args);
    };
    return _this;
  }
  var _proto = ReplaceTransition2.prototype;
  _proto.handleLifecycle = function handleLifecycle(handler, idx, originalArgs) {
    var _child$props;
    var children2 = this.props.children;
    var child = import_react143.default.Children.toArray(children2)[idx];
    if (child.props[handler]) (_child$props = child.props)[handler].apply(_child$props, originalArgs);
    if (this.props[handler]) {
      var maybeNode = child.props.nodeRef ? void 0 : import_react_dom2.default.findDOMNode(this);
      this.props[handler](maybeNode);
    }
  };
  _proto.render = function render() {
    var _this$props = this.props, children2 = _this$props.children, inProp = _this$props.in, props = _objectWithoutPropertiesLoose(_this$props, ["children", "in"]);
    var _React$Children$toArr = import_react143.default.Children.toArray(children2), first = _React$Children$toArr[0], second = _React$Children$toArr[1];
    delete props.onEnter;
    delete props.onEntering;
    delete props.onEntered;
    delete props.onExit;
    delete props.onExiting;
    delete props.onExited;
    return import_react143.default.createElement(TransitionGroup_default, props, inProp ? import_react143.default.cloneElement(first, {
      key: "first",
      onEnter: this.handleEnter,
      onEntering: this.handleEntering,
      onEntered: this.handleEntered
    }) : import_react143.default.cloneElement(second, {
      key: "second",
      onEnter: this.handleExit,
      onEntering: this.handleExiting,
      onEntered: this.handleExited
    }));
  };
  return ReplaceTransition2;
}(import_react143.default.Component);
ReplaceTransition.propTypes = true ? {
  in: import_prop_types5.default.bool.isRequired,
  children: function children(props, propName) {
    if (import_react143.default.Children.count(props[propName]) !== 2) return new Error('"' + propName + '" must be exactly two transition components.');
    return null;
  }
} : {};

// node_modules/react-transition-group/esm/SwitchTransition.js
var import_react144 = __toESM(require_react());
var import_prop_types6 = __toESM(require_prop_types());
var _leaveRenders;
var _enterRenders;
function areChildrenDifferent(oldChildren, newChildren) {
  if (oldChildren === newChildren) return false;
  if (import_react144.default.isValidElement(oldChildren) && import_react144.default.isValidElement(newChildren) && oldChildren.key != null && oldChildren.key === newChildren.key) {
    return false;
  }
  return true;
}
var modes = {
  out: "out-in",
  in: "in-out"
};
var callHook = function callHook2(element, name, cb) {
  return function() {
    var _element$props;
    element.props[name] && (_element$props = element.props)[name].apply(_element$props, arguments);
    cb();
  };
};
var leaveRenders = (_leaveRenders = {}, _leaveRenders[modes.out] = function(_ref) {
  var current = _ref.current, changeState = _ref.changeState;
  return import_react144.default.cloneElement(current, {
    in: false,
    onExited: callHook(current, "onExited", function() {
      changeState(ENTERING, null);
    })
  });
}, _leaveRenders[modes.in] = function(_ref2) {
  var current = _ref2.current, changeState = _ref2.changeState, children2 = _ref2.children;
  return [current, import_react144.default.cloneElement(children2, {
    in: true,
    onEntered: callHook(children2, "onEntered", function() {
      changeState(ENTERING);
    })
  })];
}, _leaveRenders);
var enterRenders = (_enterRenders = {}, _enterRenders[modes.out] = function(_ref3) {
  var children2 = _ref3.children, changeState = _ref3.changeState;
  return import_react144.default.cloneElement(children2, {
    in: true,
    onEntered: callHook(children2, "onEntered", function() {
      changeState(ENTERED, import_react144.default.cloneElement(children2, {
        in: true
      }));
    })
  });
}, _enterRenders[modes.in] = function(_ref4) {
  var current = _ref4.current, children2 = _ref4.children, changeState = _ref4.changeState;
  return [import_react144.default.cloneElement(current, {
    in: false,
    onExited: callHook(current, "onExited", function() {
      changeState(ENTERED, import_react144.default.cloneElement(children2, {
        in: true
      }));
    })
  }), import_react144.default.cloneElement(children2, {
    in: true
  })];
}, _enterRenders);
var SwitchTransition = function(_React$Component) {
  _inheritsLoose(SwitchTransition2, _React$Component);
  function SwitchTransition2() {
    var _this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.state = {
      status: ENTERED,
      current: null
    };
    _this.appeared = false;
    _this.changeState = function(status, current) {
      if (current === void 0) {
        current = _this.state.current;
      }
      _this.setState({
        status,
        current
      });
    };
    return _this;
  }
  var _proto = SwitchTransition2.prototype;
  _proto.componentDidMount = function componentDidMount() {
    this.appeared = true;
  };
  SwitchTransition2.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
    if (props.children == null) {
      return {
        current: null
      };
    }
    if (state.status === ENTERING && props.mode === modes.in) {
      return {
        status: ENTERING
      };
    }
    if (state.current && areChildrenDifferent(state.current, props.children)) {
      return {
        status: EXITING
      };
    }
    return {
      current: import_react144.default.cloneElement(props.children, {
        in: true
      })
    };
  };
  _proto.render = function render() {
    var _this$props = this.props, children2 = _this$props.children, mode = _this$props.mode, _this$state = this.state, status = _this$state.status, current = _this$state.current;
    var data = {
      children: children2,
      current,
      changeState: this.changeState,
      status
    };
    var component;
    switch (status) {
      case ENTERING:
        component = enterRenders[mode](data);
        break;
      case EXITING:
        component = leaveRenders[mode](data);
        break;
      case ENTERED:
        component = current;
    }
    return import_react144.default.createElement(TransitionGroupContext_default.Provider, {
      value: {
        isMounting: !this.appeared
      }
    }, component);
  };
  return SwitchTransition2;
}(import_react144.default.Component);
SwitchTransition.propTypes = true ? {
  /**
   * Transition modes.
   * `out-in`: Current element transitions out first, then when complete, the new element transitions in.
   * `in-out`: New element transitions in first, then when complete, the current element transitions out.
   *
   * @type {'out-in'|'in-out'}
   */
  mode: import_prop_types6.default.oneOf([modes.in, modes.out]),
  /**
   * Any `Transition` or `CSSTransition` component.
   */
  children: import_prop_types6.default.oneOfType([import_prop_types6.default.element.isRequired])
} : {};
SwitchTransition.defaultProps = {
  mode: modes.out
};

// node_modules/@fluentui/react-message-bar/lib/components/MessageBarGroup/MessageBarTransition.js
var React437 = __toESM(require_react());
var getClassName = (status, enterClassName, exitClassName, animate) => {
  switch (status) {
    case "entering":
    case "entered":
      return animate === "both" ? enterClassName : "";
    case "exiting":
    case "exited":
      return exitClassName;
    default:
      return "";
  }
};
var MessageBarTransition = ({ children: children2, enterClassName, exitClassName, animate, ...rest }) => {
  const nodeRef = React437.useRef(null);
  return React437.createElement(Transition_default, {
    timeout: 250,
    nodeRef,
    ...rest
  }, (state) => React437.createElement(MessageBarTransitionInner, {
    animate,
    enterClassName,
    exitClassName,
    nodeRef,
    state
  }, children2));
};
var MessageBarTransitionInner = ({ children: children2, state, enterClassName, exitClassName, animate, nodeRef }) => {
  const className = getClassName(state, enterClassName, exitClassName, animate);
  const context = React437.useMemo(() => ({
    className,
    nodeRef
  }), [
    className,
    nodeRef
  ]);
  return React437.createElement(MessageBarTransitionContextProvider, {
    value: context
  }, children2);
};

// node_modules/@fluentui/react-message-bar/lib/components/MessageBarGroup/renderMessageBarGroup.js
var renderMessageBarGroup_unstable = (state) => {
  assertSlots(state);
  return jsx(state.root, {
    children: jsx(TransitionGroup_default, {
      component: null,
      children: state.children.map((child) => jsx(MessageBarTransition, {
        animate: state.animate,
        enterClassName: state.enterStyles,
        exitClassName: state.exitStyles,
        children: child
      }, child.key))
    })
  });
};

// node_modules/@fluentui/react-message-bar/lib/components/MessageBarGroup/useMessageBarGroupStyles.styles.js
var messageBarGroupClassNames = {
  root: "fui-MessageBarGroup"
};
var useStyles49 = __styles2({
  base: {
    Bf5fcs: "f4cll0y",
    vin17d: "fy8si0b"
  },
  enter: {
    Bv12yb3: "f1dg9w1v"
  },
  exit: {
    Bv12yb3: "fu80iee"
  }
}, {
  d: [".f4cll0y{animation-fill-mode:forwards;}", ".fy8si0b{animation-duration:var(--durationNormal);}", ".f1dg9w1v{animation-name:fngeioi;}", ".fu80iee{animation-name:fk0lfw7;}"],
  k: ["@keyframes fngeioi{from{opacity:0;transform:translateY(-100%);}to{opacity:1;transform:translateY(0);}}", "@keyframes fk0lfw7{from{opacity:1;}to{opacity:0;}}"]
});
var useMessageBarGroupStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles49();
  state.root.className = mergeClasses(messageBarGroupClassNames.root, state.root.className);
  state.enterStyles = mergeClasses(styles.base, styles.enter);
  state.exitStyles = mergeClasses(styles.base, styles.exit);
  return state;
};

// node_modules/@fluentui/react-message-bar/lib/components/MessageBarGroup/MessageBarGroup.js
var MessageBarGroup = React438.forwardRef((props, ref) => {
  const state = useMessageBarGroup_unstable(props, ref);
  useMessageBarGroupStyles_unstable(state);
  useCustomStyleHook("useMessageBarGroupStyles_unstable")(state);
  return renderMessageBarGroup_unstable(state);
});
MessageBarGroup.displayName = "MessageBarGroup";

// node_modules/@fluentui/react-message-bar/lib/components/MessageBarGroup/MessageBarGroup.types.js
var React439 = __toESM(require_react());

// node_modules/@fluentui/react-infolabel/lib/components/InfoLabel/InfoLabel.js
var React443 = __toESM(require_react());

// node_modules/@fluentui/react-infolabel/lib/components/InfoLabel/renderInfoLabel.js
var renderInfoLabel_unstable = (state) => {
  assertSlots(state);
  return jsxs(state.root, {
    children: [
      jsx(state.label, {}),
      state.infoButton && jsx(state.infoButton, {})
    ]
  });
};

// node_modules/@fluentui/react-infolabel/lib/components/InfoLabel/useInfoLabel.js
var React442 = __toESM(require_react());

// node_modules/@fluentui/react-infolabel/lib/components/InfoButton/InfoButton.js
var React441 = __toESM(require_react());

// node_modules/@fluentui/react-infolabel/lib/components/InfoButton/renderInfoButton.js
var renderInfoButton_unstable = (state) => {
  assertSlots(state);
  return jsxs(state.popover, {
    children: [
      jsx(PopoverTrigger, {
        children: jsx(state.root, {})
      }),
      jsx(state.info, {})
    ]
  });
};

// node_modules/@fluentui/react-infolabel/lib/components/InfoButton/useInfoButton.js
var React440 = __toESM(require_react());

// node_modules/@fluentui/react-infolabel/lib/components/InfoButton/DefaultInfoButtonIcons.js
var DefaultInfoButtonIcon12 = bundleIcon_default(Info12Filled, Info12Regular);
var DefaultInfoButtonIcon16 = bundleIcon_default(Info16Filled, Info16Regular);
var DefaultInfoButtonIcon20 = bundleIcon_default(Info20Filled, Info20Regular);

// node_modules/@fluentui/react-infolabel/lib/components/InfoButton/useInfoButton.js
var infoButtonIconMap = {
  small: React440.createElement(DefaultInfoButtonIcon12, null),
  medium: React440.createElement(DefaultInfoButtonIcon16, null),
  large: React440.createElement(DefaultInfoButtonIcon20, null)
};
var popoverSizeMap = {
  small: "small",
  medium: "small",
  large: "medium"
};
var useInfoButton_unstable = (props, ref) => {
  const { size = "medium", inline = true } = props;
  const rootRef = useMergedRefs(ref);
  const state = {
    inline,
    size,
    components: {
      root: "button",
      popover: Popover,
      info: PopoverSurface
    },
    root: slot_exports.always(getIntrinsicElementProps("button", {
      children: infoButtonIconMap[size],
      type: "button",
      "aria-label": "information",
      ...props,
      ref: rootRef
    }), {
      elementType: "button"
    }),
    popover: slot_exports.always(props.popover, {
      defaultProps: {
        inline,
        positioning: "above-start",
        size: popoverSizeMap[size],
        withArrow: true
      },
      elementType: Popover
    }),
    info: slot_exports.always(props.info, {
      defaultProps: {
        role: "note",
        tabIndex: -1
      },
      elementType: PopoverSurface
    })
  };
  const [popoverOpen, setPopoverOpen] = useControllableState({
    state: state.popover.open,
    defaultState: state.popover.defaultOpen,
    initialState: false
  });
  state.popover.open = popoverOpen;
  state.popover.onOpenChange = mergeCallbacks(state.popover.onOpenChange, (e, data) => setPopoverOpen(data.open));
  const infoRef = useMergedRefs(state.info.ref);
  state.info.ref = infoRef;
  const onBlurButtonOrInfo = (e) => {
    const nextFocused = e.relatedTarget;
    if (rootRef.current !== nextFocused && !elementContains(infoRef.current, nextFocused)) {
      setPopoverOpen(false);
    }
  };
  state.root.onBlur = useEventCallback(mergeCallbacks(state.root.onBlur, onBlurButtonOrInfo));
  state.info.onBlurCapture = useEventCallback(mergeCallbacks(state.info.onBlurCapture, onBlurButtonOrInfo));
  return state;
};

// node_modules/@fluentui/react-infolabel/lib/components/InfoButton/useInfoButtonStyles.styles.js
var infoButtonClassNames = {
  root: "fui-InfoButton",
  // this className won't be used, but it's needed to satisfy the type checker
  popover: "fui-InfoButton__popover",
  info: "fui-InfoButton__info"
};
var useButtonStyles2 = __styles2({
  base: {
    Bt984gj: "f122n59",
    B7ck84d: "f1ewtqcl",
    mc9l5x: "ftuwxu6",
    Brf1p80: "f4d9j23",
    w71qe1: "f1iuv45f",
    ha4doy: "fmrv4ls",
    qhf8xq: "f10pi13n",
    De3pzq: "f1c21dwh",
    sj55zd: "fkfq4zb",
    icvyot: "f1ern45e",
    vrafjx: ["f1n71otn", "f1deefiw"],
    oivjwe: "f1h8hb77",
    wvpqe5: ["f1deefiw", "f1n71otn"],
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "ft85np5",
    jrapky: 0,
    Frg6f3: 0,
    t21cq0: 0,
    B6of3ja: 0,
    B74szlk: "f1s184ao",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f16d74zd",
    D0sxk3: "f16u1re",
    t6yez3: "f1rw4040",
    Jwef8y: "fjxutwb",
    Bi91k9c: "f139oj5f",
    eoavqd: "f8491dx",
    Bk3fhr4: "f1jpd6y0",
    Bmfj8id: "fuxngvv",
    iro3zm: "fwiml72",
    B2d53fq: "f1fg1p5m"
  },
  selected: {
    De3pzq: "f1q9pm1r",
    sj55zd: "f1qj7y59",
    D0sxk3: "fgzdkf0",
    t6yez3: "f15q0o9g",
    Bsw6fvg: "f1rirnrt",
    Bbusuzp: "f1cg6951"
  },
  highContrast: {
    Bbusuzp: "fn0tkbb",
    Bs6v0vm: "f1rp3av6",
    B46dtvo: "f1u7gwqv",
    gh1jta: "fl6kagl"
  },
  focusIndicator: {
    Brovlpu: "ftqa4ok",
    B486eqv: "f2hkw1w",
    B8q5s1w: "f8hki3x",
    Bci5o5g: ["f1d2448m", "ffh67wi"],
    n8qw10: "f1bjia2o",
    Bdrgwmp: ["ffh67wi", "f1d2448m"],
    Bb7d1vk: "f226i61",
    zhwhgb: ["f13kzufm", "fsx75g8"],
    dhy2o1: "flujwa2",
    Gfyso: ["fsx75g8", "f13kzufm"],
    Bm4h7ae: "f15bsgw9",
    B7ys5i9: "f14e48fq",
    Busjfv9: "f18yb2kv",
    Bhk32uz: "fd6o370",
    f6g5ot: 0,
    Boxcth7: 0,
    Bhdgwq3: 0,
    hgwjuy: 0,
    Bshpdp8: 0,
    Bsom6fd: 0,
    Blkhhs4: 0,
    Bonggc9: 0,
    Ddfuxk: 0,
    i03rao: 0,
    kclons: 0,
    clg4pj: 0,
    Bpqj9nj: 0,
    B6dhp37: 0,
    Bf4ptjt: 0,
    Bqtpl0w: 0,
    i4rwgc: "ffwy5si",
    Dah5zi: 0,
    B1tsrr9: 0,
    qqdqy8: 0,
    Bkh64rk: 0,
    e3fwne: "f3znvyf",
    J0r882: "f57olzd",
    Bule8hv: ["f4stah7", "fs1por5"],
    Bjwuhne: "f480a47",
    Ghsupd: ["fs1por5", "f4stah7"]
  },
  large: {
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f1kx978o"
  }
}, {
  d: [".f122n59{align-items:center;}", ".f1ewtqcl{box-sizing:border-box;}", ".ftuwxu6{display:inline-flex;}", ".f4d9j23{justify-content:center;}", ".f1iuv45f{text-decoration-line:none;}", ".fmrv4ls{vertical-align:middle;}", ".f10pi13n{position:relative;}", ".f1c21dwh{background-color:var(--colorTransparentBackground);}", ".fkfq4zb{color:var(--colorNeutralForeground2);}", ".f1ern45e{border-top-style:none;}", ".f1n71otn{border-right-style:none;}", ".f1deefiw{border-left-style:none;}", ".f1h8hb77{border-bottom-style:none;}", [".ft85np5{border-radius:var(--borderRadiusMedium);}", {
    p: -1
  }], [".f1s184ao{margin:0;}", {
    p: -1
  }], [".f16d74zd{padding:var(--spacingVerticalXS) var(--spacingHorizontalXS);}", {
    p: -1
  }], ".f16u1re .fui-Icon-filled{display:none;}", ".f1rw4040 .fui-Icon-regular{display:inline-flex;}", ".f1q9pm1r{background-color:var(--colorTransparentBackgroundSelected);}", ".f1qj7y59{color:var(--colorNeutralForeground2BrandSelected);}", ".fgzdkf0 .fui-Icon-filled{display:inline-flex;}", ".f15q0o9g .fui-Icon-regular{display:none;}", ".f8hki3x[data-fui-focus-visible]{border-top-color:transparent;}", ".f1d2448m[data-fui-focus-visible]{border-right-color:transparent;}", ".ffh67wi[data-fui-focus-visible]{border-left-color:transparent;}", ".f1bjia2o[data-fui-focus-visible]{border-bottom-color:transparent;}", '.f15bsgw9[data-fui-focus-visible]::after{content:"";}', ".f14e48fq[data-fui-focus-visible]::after{position:absolute;}", ".f18yb2kv[data-fui-focus-visible]::after{pointer-events:none;}", ".fd6o370[data-fui-focus-visible]::after{z-index:1;}", [".ffwy5si[data-fui-focus-visible]::after{border:2px solid var(--colorStrokeFocus2);}", {
    p: -2
  }], [".f3znvyf[data-fui-focus-visible]::after{border-radius:var(--borderRadiusMedium);}", {
    p: -1
  }], ".f57olzd[data-fui-focus-visible]::after{top:calc(2px * -1);}", ".f4stah7[data-fui-focus-visible]::after{right:calc(2px * -1);}", ".fs1por5[data-fui-focus-visible]::after{left:calc(2px * -1);}", ".f480a47[data-fui-focus-visible]::after{bottom:calc(2px * -1);}", [".f1kx978o{padding:var(--spacingVerticalXXS) var(--spacingVerticalXXS);}", {
    p: -1
  }]],
  h: [".fjxutwb:hover{background-color:var(--colorTransparentBackgroundHover);}", ".f139oj5f:hover{color:var(--colorNeutralForeground2BrandHover);}", ".f8491dx:hover{cursor:pointer;}", ".f1jpd6y0:hover .fui-Icon-filled{display:inline-flex;}", ".fuxngvv:hover .fui-Icon-regular{display:none;}", ".fwiml72:hover:active{background-color:var(--colorTransparentBackgroundPressed);}", ".f1fg1p5m:hover:active{color:var(--colorNeutralForeground2BrandPressed);}"],
  m: [["@media (forced-colors: active){.f1rirnrt{background-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1cg6951{color:Canvas;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fn0tkbb{color:CanvasText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1rp3av6:hover,.f1rp3av6:hover:active{forced-color-adjust:none;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1u7gwqv:hover,.f1u7gwqv:hover:active{background-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fl6kagl:hover,.fl6kagl:hover:active{color:Canvas;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f226i61[data-fui-focus-visible]::after{border-top-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f13kzufm[data-fui-focus-visible]::after{border-right-color:Highlight;}.fsx75g8[data-fui-focus-visible]::after{border-left-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.flujwa2[data-fui-focus-visible]::after{border-bottom-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }]],
  f: [".ftqa4ok:focus{outline-style:none;}"],
  i: [".f2hkw1w:focus-visible{outline-style:none;}"]
});
var usePopoverSurfaceStyles2 = __styles2({
  smallMedium: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fy9rknc",
    Bhrd7zp: "figsok6",
    Bg96gwp: "fwrc4pm"
  },
  large: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "figsok6",
    Bg96gwp: "f1i3iumi"
  }
}, {
  d: [".fk6fouc{font-family:var(--fontFamilyBase);}", ".fy9rknc{font-size:var(--fontSizeBase200);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".fwrc4pm{line-height:var(--lineHeightBase200);}", ".fkhj508{font-size:var(--fontSizeBase300);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}"]
});
var useInfoButtonStyles_unstable = (state) => {
  "use no memo";
  const {
    size
  } = state;
  const {
    open
  } = state.popover;
  const buttonStyles = useButtonStyles2();
  const popoverSurfaceStyles = usePopoverSurfaceStyles2();
  state.info.className = mergeClasses(infoButtonClassNames.info, size === "large" ? popoverSurfaceStyles.large : popoverSurfaceStyles.smallMedium, state.info.className);
  state.root.className = mergeClasses(infoButtonClassNames.root, buttonStyles.base, buttonStyles.highContrast, buttonStyles.focusIndicator, open && buttonStyles.selected, size === "large" && buttonStyles.large, state.root.className);
  return state;
};

// node_modules/@fluentui/react-infolabel/lib/components/InfoButton/InfoButton.js
var InfoButton = React441.forwardRef((props, ref) => {
  const state = useInfoButton_unstable(props, ref);
  useInfoButtonStyles_unstable(state);
  return renderInfoButton_unstable(state);
});
InfoButton.displayName = "InfoButton";

// node_modules/@fluentui/react-infolabel/lib/components/InfoLabel/useInfoLabel.js
var useInfoLabel_unstable = (props, ref) => {
  const { root: rootShorthand, label: labelShorthand, infoButton: infoButtonShorthand, info, size, className, style, ...labelProps } = props;
  const baseId = useId("infolabel-");
  const [open, setOpen] = React442.useState(false);
  const root = slot_exports.always(rootShorthand, {
    defaultProps: {
      className,
      style
    },
    elementType: "span"
  });
  const label = slot_exports.always(labelShorthand, {
    defaultProps: {
      id: baseId + "__label",
      ref,
      size,
      ...labelProps
    },
    elementType: Label
  });
  const infoButton = slot_exports.optional(infoButtonShorthand, {
    renderByDefault: !!info,
    defaultProps: {
      id: baseId + "__infoButton",
      size,
      info
    },
    elementType: InfoButton
  });
  const infoButtonPopover = slot_exports.always(infoButton === null || infoButton === void 0 ? void 0 : infoButton.popover, {
    elementType: "div"
  });
  infoButtonPopover.onOpenChange = useEventCallback(mergeCallbacks(infoButtonPopover.onOpenChange, (e, data) => {
    setOpen(data.open);
  }));
  if (infoButton) {
    var _infoButton, _arialabelledby;
    infoButton.popover = infoButtonPopover;
    const infoPopupId = baseId + "__info";
    infoButton.info = slot_exports.optional(infoButton === null || infoButton === void 0 ? void 0 : infoButton.info, {
      defaultProps: {
        id: infoPopupId,
        "aria-labelledby": infoPopupId
      },
      elementType: "div"
    });
    var _;
    (_ = (_infoButton = infoButton)[_arialabelledby = "aria-labelledby"]) !== null && _ !== void 0 ? _ : _infoButton[_arialabelledby] = `${label.id} ${infoButton.id}`;
    if (open) {
      var _infoButton_info;
      var _root, _ariaowns;
      var _1;
      (_1 = (_root = root)[_ariaowns = "aria-owns"]) !== null && _1 !== void 0 ? _1 : _root[_ariaowns] = (_infoButton_info = infoButton.info) === null || _infoButton_info === void 0 ? void 0 : _infoButton_info.id;
    }
  }
  return {
    size,
    components: {
      root: "span",
      label: Label,
      infoButton: InfoButton
    },
    root,
    label,
    infoButton
  };
};

// node_modules/@fluentui/react-infolabel/lib/components/InfoLabel/useInfoLabelStyles.styles.js
var infoLabelClassNames = {
  root: "fui-InfoLabel",
  label: "fui-InfoLabel__label",
  infoButton: "fui-InfoLabel__infoButton"
};
var useLabelStyles5 = __styles2({
  base: {
    ha4doy: "f12kltsn",
    Bceei9c: "fpo1scq",
    sj55zd: "f1ym3bx4"
  }
}, {
  d: [".f12kltsn{vertical-align:top;}", ".fpo1scq{cursor:inherit;}", ".f1ym3bx4{color:inherit;}"]
});
var useInfoButtonStyles = __styles2({
  base: {
    ha4doy: "f12kltsn",
    B6of3ja: "f1bmzb36",
    jrapky: "f1nyzk09"
  },
  large: {
    B6of3ja: "fkrn0sh",
    jrapky: "fmxx68s"
  }
}, {
  d: [".f12kltsn{vertical-align:top;}", ".f1bmzb36{margin-top:calc(0px - var(--spacingVerticalXXS));}", ".f1nyzk09{margin-bottom:calc(0px - var(--spacingVerticalXXS));}", ".fkrn0sh{margin-top:-1px;}", ".fmxx68s{margin-bottom:-1px;}"]
});
var useInfoLabelStyles_unstable = (state) => {
  "use no memo";
  state.root.className = mergeClasses(infoLabelClassNames.root, state.root.className);
  const labelStyles = useLabelStyles5();
  state.label.className = mergeClasses(infoLabelClassNames.label, labelStyles.base, state.label.className);
  const infoButtonStyles = useInfoButtonStyles();
  if (state.infoButton) {
    state.infoButton.className = mergeClasses(infoLabelClassNames.infoButton, infoButtonStyles.base, state.size === "large" && infoButtonStyles.large, state.infoButton.className);
  }
  return state;
};

// node_modules/@fluentui/react-infolabel/lib/components/InfoLabel/InfoLabel.js
var InfoLabel = React443.forwardRef((props, ref) => {
  const state = useInfoLabel_unstable(props, ref);
  useInfoLabelStyles_unstable(state);
  return renderInfoLabel_unstable(state);
});
InfoLabel.displayName = "InfoLabel";

// node_modules/@fluentui/react-drawer/lib/contexts/drawerContext.js
var React444 = __toESM(require_react());
var defaultContextValue4 = {
  scrollState: "none",
  setScrollState: () => ({})
};
var drawerContext = React444.createContext(void 0);
var DrawerProvider = drawerContext.Provider;
var useDrawerContext_unstable = () => {
  var _React_useContext;
  return (_React_useContext = React444.useContext(drawerContext)) !== null && _React_useContext !== void 0 ? _React_useContext : defaultContextValue4;
};
var useDrawerContextValue = () => {
  const [scrollState, setScrollState] = React444.useState("none");
  return {
    setScrollState,
    scrollState
  };
};

// node_modules/@fluentui/react-drawer/lib/components/Drawer/Drawer.js
var React453 = __toESM(require_react());

// node_modules/@fluentui/react-drawer/lib/components/Drawer/useDrawer.js
var React452 = __toESM(require_react());

// node_modules/@fluentui/react-drawer/lib/components/OverlayDrawer/OverlayDrawer.js
var React449 = __toESM(require_react());

// node_modules/@fluentui/react-drawer/lib/components/OverlayDrawer/useOverlayDrawer.js
var React447 = __toESM(require_react());

// node_modules/@fluentui/react-drawer/lib/shared/useDrawerBaseStyles.styles.js
var drawerCSSVars = {
  drawerSizeVar: "--fui-Drawer--size"
};
var drawerDefaultStyles = {
  overflow: "hidden",
  width: `var(${drawerCSSVars.drawerSizeVar})`,
  maxWidth: "100vw",
  height: "auto",
  maxHeight: "100vh",
  boxSizing: "border-box",
  display: "flex",
  flexDirection: "column",
  alignItems: "flex-start",
  justifyContent: "flex-start",
  backgroundColor: tokens.colorNeutralBackground1,
  color: tokens.colorNeutralForeground1
};
var useDrawerStyles = __styles2({
  start: {
    h3c5rm: 0,
    vrafjx: 0,
    Bekrc4i: 0,
    u1mtju: ["f1xteiwb", "fsqykmd"],
    oyh7mz: ["f1vgc2s3", "f1e31b4d"],
    j35jbq: ["fvfyk4", "frppm18"]
  },
  end: {
    zhjwy3: 0,
    wvpqe5: 0,
    ibv6hh: 0,
    B4g9neb: ["fsqykmd", "f1xteiwb"],
    j35jbq: ["f1e31b4d", "f1vgc2s3"],
    oyh7mz: ["frppm18", "fvfyk4"]
  },
  bottom: {
    B5kzvoi: "f1yab3r1",
    Bhzewxz: "f198g47y"
  },
  small: {
    Bjr0ffy: "f1exhnwo"
  },
  medium: {
    Bjr0ffy: "fqofjzu"
  },
  large: {
    Bjr0ffy: "fce6y3m"
  },
  full: {
    Bjr0ffy: "fsdmzs6"
  }
}, {
  d: [[".f1xteiwb{border-right:var(--strokeWidthThin) solid var(--colorTransparentStroke);}", {
    p: -1
  }], [".fsqykmd{border-left:var(--strokeWidthThin) solid var(--colorTransparentStroke);}", {
    p: -1
  }], ".f1vgc2s3{left:0;}", ".f1e31b4d{right:0;}", ".fvfyk4{right:auto;}", ".frppm18{left:auto;}", [".fsqykmd{border-left:var(--strokeWidthThin) solid var(--colorTransparentStroke);}", {
    p: -1
  }], [".f1xteiwb{border-right:var(--strokeWidthThin) solid var(--colorTransparentStroke);}", {
    p: -1
  }], ".f1yab3r1{bottom:0;}", ".f198g47y{top:auto;}", ".f1exhnwo{--fui-Drawer--size:320px;}", ".fqofjzu{--fui-Drawer--size:592px;}", ".fce6y3m{--fui-Drawer--size:940px;}", ".fsdmzs6{--fui-Drawer--size:100vw;}"]
});
var useDrawerBottomBaseStyles = __styles2({
  small: {
    Bjr0ffy: "f1exhnwo"
  },
  medium: {
    Bjr0ffy: "fqofjzu"
  },
  large: {
    Bjr0ffy: "fce6y3m"
  },
  full: {
    Bjr0ffy: "f1rat34m"
  }
}, {
  d: [".f1exhnwo{--fui-Drawer--size:320px;}", ".fqofjzu{--fui-Drawer--size:592px;}", ".fce6y3m{--fui-Drawer--size:940px;}", ".f1rat34m{--fui-Drawer--size:100%;}"]
});
var useDrawerBaseClassNames = ({
  position,
  size
}) => {
  const baseStyles3 = useDrawerStyles();
  const bottomBaseStyles = useDrawerBottomBaseStyles();
  return mergeClasses(baseStyles3[position], position === "bottom" && bottomBaseStyles[size], position !== "bottom" && baseStyles3[size]);
};

// node_modules/@fluentui/react-drawer/lib/shared/drawerMotions.js
var durations2 = {
  small: motionTokens.durationGentle,
  medium: motionTokens.durationSlow,
  large: motionTokens.durationSlower,
  full: motionTokens.durationUltraSlow
};
function getPositionTransform(position, sizeVar, dir) {
  const leftToRightTransform = `translate3d(var(${sizeVar}), 0, 0)`;
  const rightToLeftTransform = `translate3d(calc(var(${sizeVar}) * -1), 0, 0)`;
  const bottomToTopTransform = `translate3d(0, var(${sizeVar}), 0)`;
  if (position === "start") {
    return dir === "ltr" ? rightToLeftTransform : leftToRightTransform;
  }
  if (position === "end") {
    return dir === "ltr" ? leftToRightTransform : rightToLeftTransform;
  }
  if (position === "bottom") {
    return bottomToTopTransform;
  }
  return "translate3d(0, 0, 0)";
}
var InlineDrawerMotion = createPresenceComponent(({ position, size, dir }) => {
  const keyframes3 = [
    {
      /**
      * TODO: Once the #31663 lands, we should update the RTL logic to use Motion APIs
      * The work will be done in the #32817
      */
      transform: getPositionTransform(position, drawerCSSVars.drawerSizeVar, dir),
      opacity: 0
    },
    {
      transform: "translate3d(0, 0, 0)",
      opacity: 1
    }
  ];
  const duration2 = durations2[size];
  return {
    enter: {
      keyframes: keyframes3,
      duration: duration2,
      easing: motionTokens.curveDecelerateMid
    },
    exit: {
      keyframes: [
        ...keyframes3
      ].reverse(),
      duration: duration2,
      easing: motionTokens.curveAccelerateMin
    }
  };
});
var OverlayDrawerMotion = createPresenceComponent(({ position, size, dir }) => {
  const keyframes3 = [
    {
      /**
      * TODO: Once the #31663 lands, we should update the RTL logic to use Motion APIs
      * The work will be done in the #32817
      */
      transform: getPositionTransform(position, drawerCSSVars.drawerSizeVar, dir),
      boxShadow: `0px ${tokens.colorTransparentBackground}`,
      opacity: 0
    },
    {
      transform: "translate3d(0, 0, 0)",
      boxShadow: tokens.shadow64,
      opacity: 1
    }
  ];
  const duration2 = durations2[size];
  return {
    enter: {
      keyframes: keyframes3,
      duration: duration2,
      easing: motionTokens.curveDecelerateMid
    },
    exit: {
      keyframes: [
        ...keyframes3
      ].reverse(),
      duration: duration2,
      easing: motionTokens.curveAccelerateMin
    }
  };
});
var OverlaySurfaceBackdropMotion = createPresenceComponent(({ size }) => {
  const keyframes3 = [
    {
      opacity: 0
    },
    {
      opacity: 1
    }
  ];
  const duration2 = durations2[size];
  return {
    enter: {
      keyframes: keyframes3,
      easing: motionTokens.curveLinear,
      duration: duration2
    },
    exit: {
      keyframes: [
        ...keyframes3
      ].reverse(),
      easing: motionTokens.curveLinear,
      duration: duration2
    }
  };
});

// node_modules/@fluentui/react-drawer/lib/shared/useDrawerDefaultProps.js
function useDrawerDefaultProps(props) {
  const { open = false, size = "small", position = "start" } = props;
  return {
    size,
    position,
    open
  };
}

// node_modules/@fluentui/react-drawer/lib/components/OverlayDrawer/OverlayDrawerSurface/OverlayDrawerSurface.js
var React445 = __toESM(require_react());

// node_modules/@fluentui/react-drawer/lib/components/OverlayDrawer/OverlayDrawerSurface/useOverlayDrawerSurfaceStyles.styles.js
var useBackdropResetStyles = __resetStyles("rmnljus", null, [".rmnljus{inset:0px;position:fixed;background-color:rgba(0, 0, 0, 0.4);}"]);
var useBackdropStyles2 = __styles2({
  nested: {
    De3pzq: "f1c21dwh"
  }
}, {
  d: [".f1c21dwh{background-color:var(--colorTransparentBackground);}"]
});
var useOverlayDrawerSurfaceStyles_unstable = (state) => {
  "use no memo";
  const backdropResetStyles = useBackdropResetStyles();
  const backdropStyles = useBackdropStyles2();
  if (state.backdrop) {
    state.backdrop.className = mergeClasses(backdropResetStyles, state.isNestedDialog && backdropStyles.nested, state.backdrop.className);
  }
  return state;
};

// node_modules/@fluentui/react-drawer/lib/components/OverlayDrawer/OverlayDrawerSurface/OverlayDrawerSurface.js
var OverlayDrawerSurface = React445.forwardRef((props, ref) => {
  const dialogSurfaceState = useDialogSurface_unstable({
    ...props,
    /**
    * Drawer accepts a `div` or `aside` element type, but Dialog only accepts a `div` element type.
    * We need to cast the ref to a `div` element type to not break Dialog's ref type.
    *
    * FIXME: Evaluate the possibility to remove this cast when Dialog is refactored to accept `aside` elements.
    */
    as: props.as
  }, ref);
  const dialogSurfaceContextValues = useDialogSurfaceContextValues_unstable(dialogSurfaceState);
  useOverlayDrawerSurfaceStyles_unstable(dialogSurfaceState);
  return renderDialogSurface_unstable(dialogSurfaceState, dialogSurfaceContextValues);
});
OverlayDrawerSurface.displayName = "OverlayDrawerSurface";

// node_modules/@fluentui/react-drawer/lib/shared/drawerMotionUtils.js
var React446 = __toESM(require_react());
function mergePresenceSlots(inputSlot, Component2, params) {
  if (inputSlot === null) {
    return null;
  }
  return {
    ...inputSlot,
    children: (_, props) => {
      if (inputSlot === null || inputSlot === void 0 ? void 0 : inputSlot.children) {
        return inputSlot.children(Component2, {
          ...props,
          ...params
        });
      }
      return React446.createElement(Component2, {
        ...props,
        ...params
      }, props.children);
    }
  };
}

// node_modules/@fluentui/react-drawer/lib/components/OverlayDrawer/useOverlayDrawer.js
var STATIC_MOTION = {
  active: true,
  canRender: true,
  ref: React447.createRef(),
  type: "idle"
};
var useOverlayDrawer_unstable = (props, ref) => {
  const { open, size, position } = useDrawerDefaultProps(props);
  const { backdropMotion, modalType = "modal", inertTrapFocus, onOpenChange, surfaceMotion, mountNode } = props;
  const { dir } = useFluent();
  const backdropProps = slot_exports.resolveShorthand(props.backdrop);
  const hasCustomBackdrop = modalType !== "non-modal" && backdropProps !== null;
  const root = slot_exports.always({
    ...props,
    ref,
    backdrop: hasCustomBackdrop ? {
      ...backdropProps
    } : null,
    backdropMotion: mergePresenceSlots(backdropMotion, OverlaySurfaceBackdropMotion, {
      size
    })
  }, {
    /**
    * Drawer accepts a `div` or `aside` element type, but Dialog only accepts a `div` element type.
    * We need to cast the ref to a `div` element type to not break Dialog's ref type.
    */
    elementType: OverlayDrawerSurface
  });
  const dialog = slot_exports.always({
    open,
    onOpenChange,
    inertTrapFocus,
    modalType,
    surfaceMotion: mergePresenceSlots(surfaceMotion, OverlayDrawerMotion, {
      position,
      size,
      dir
    }),
    /**
    * children is not needed here because we construct the children in the render function,
    * but it's required by DialogProps
    */
    children: null
  }, {
    elementType: Dialog
  });
  return {
    components: {
      root: OverlayDrawerSurface,
      dialog: Dialog
    },
    root,
    dialog,
    open,
    size,
    position,
    mountNode,
    motion: STATIC_MOTION
  };
};

// node_modules/@fluentui/react-drawer/lib/components/OverlayDrawer/renderOverlayDrawer.js
var renderOverlayDrawer_unstable = (state, contextValue) => {
  assertSlots(state);
  return jsx(DrawerProvider, {
    value: contextValue,
    children: jsx(state.dialog, {
      children: jsx(state.root, {})
    })
  });
};

// node_modules/@fluentui/react-drawer/lib/components/OverlayDrawer/useOverlayDrawerStyles.styles.js
var React448 = __toESM(require_react());
var overlayDrawerClassNames = {
  root: "fui-OverlayDrawer",
  backdrop: "fui-OverlayDrawer__backdrop"
};
var useDrawerResetStyles = __resetStyles("r7dfyj8", "rmx02j7", {
  r: [".r7dfyj8{overflow:hidden;width:var(--fui-Drawer--size);max-width:100vw;height:auto;max-height:100vh;box-sizing:border-box;display:flex;flex-direction:column;align-items:flex-start;justify-content:flex-start;background-color:var(--colorNeutralBackground1);color:var(--colorNeutralForeground1);position:fixed;top:0;bottom:0;}", ".r7dfyj8:focus{outline-style:none;}", ".r7dfyj8:focus-visible{outline-style:none;}", ".r7dfyj8[data-fui-focus-visible]{border-top-color:transparent;border-right-color:transparent;border-bottom-color:transparent;border-left-color:transparent;}", '.r7dfyj8[data-fui-focus-visible]::after{content:"";position:absolute;pointer-events:none;z-index:1;border:2px solid var(--colorStrokeFocus2);border-radius:var(--borderRadiusMedium);top:calc(2px * -1);right:calc(2px * -1);bottom:calc(2px * -1);left:calc(2px * -1);}', ".rmx02j7{overflow:hidden;width:var(--fui-Drawer--size);max-width:100vw;height:auto;max-height:100vh;box-sizing:border-box;display:flex;flex-direction:column;align-items:flex-start;justify-content:flex-start;background-color:var(--colorNeutralBackground1);color:var(--colorNeutralForeground1);position:fixed;top:0;bottom:0;}", ".rmx02j7:focus{outline-style:none;}", ".rmx02j7:focus-visible{outline-style:none;}", ".rmx02j7[data-fui-focus-visible]{border-top-color:transparent;border-left-color:transparent;border-bottom-color:transparent;border-right-color:transparent;}", '.rmx02j7[data-fui-focus-visible]::after{content:"";position:absolute;pointer-events:none;z-index:1;border:2px solid var(--colorStrokeFocus2);border-radius:var(--borderRadiusMedium);top:calc(2px * -1);left:calc(2px * -1);bottom:calc(2px * -1);right:calc(2px * -1);}'],
  s: ["@media (forced-colors: active){.r7dfyj8[data-fui-focus-visible]::after{border-top-color:Highlight;border-right-color:Highlight;border-bottom-color:Highlight;border-left-color:Highlight;}}", "@media (forced-colors: active){.rmx02j7[data-fui-focus-visible]::after{border-top-color:Highlight;border-left-color:Highlight;border-bottom-color:Highlight;border-right-color:Highlight;}}"]
});
var useDrawerRootStyles = __styles2({
  start: {},
  end: {},
  bottom: {
    Bhzewxz: "f198g47y",
    Bqenvij: "fub80nq",
    a9b677: "fr97h3j"
  },
  absolute: {
    qhf8xq: "f1euv43f"
  }
}, {
  d: [".f198g47y{top:auto;}", ".fub80nq{height:var(--fui-Drawer--size);}", ".fr97h3j{width:100vw;}", ".f1euv43f{position:absolute;}"]
});
var useOverlayDrawerStyles_unstable = (state) => {
  "use no memo";
  const baseClassNames = useDrawerBaseClassNames(state);
  const resetStyles = useDrawerResetStyles();
  const rootStyles = useDrawerRootStyles();
  const absoluteStyles = !!state.mountNode && rootStyles.absolute;
  const backdrop = state.root.backdrop;
  state.root.className = mergeClasses(overlayDrawerClassNames.root, baseClassNames, resetStyles, rootStyles[state.position], absoluteStyles, state.root.className);
  if (backdrop) {
    backdrop.className = mergeClasses(overlayDrawerClassNames.backdrop, absoluteStyles, backdrop.className);
  }
  return state;
};

// node_modules/@fluentui/react-drawer/lib/components/OverlayDrawer/OverlayDrawer.js
var OverlayDrawer = React449.forwardRef((props, ref) => {
  const state = useOverlayDrawer_unstable(props, ref);
  const contextValue = useDrawerContextValue();
  useOverlayDrawerStyles_unstable(state);
  useCustomStyleHook("useDrawerOverlayStyles_unstable")(state);
  useCustomStyleHook("useOverlayDrawerStyles_unstable")(state);
  return renderOverlayDrawer_unstable(state, contextValue);
});
OverlayDrawer.displayName = "OverlayDrawer";

// node_modules/@fluentui/react-drawer/lib/components/InlineDrawer/InlineDrawer.js
var React451 = __toESM(require_react());

// node_modules/@fluentui/react-drawer/lib/components/InlineDrawer/useInlineDrawer.js
var React450 = __toESM(require_react());
var STATIC_MOTION2 = {
  active: true,
  canRender: true,
  ref: React450.createRef(),
  type: "idle"
};
var useInlineDrawer_unstable = (props, ref) => {
  const { size, position, open } = useDrawerDefaultProps(props);
  const { separator = false, surfaceMotion } = props;
  const { dir } = useFluent();
  const state = {
    components: {
      root: "div",
      // casting from internal type that has required properties
      // to external type that only has optional properties
      // converting to unknown first as both Function component signatures are not compatible
      surfaceMotion: InlineDrawerMotion
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      ...props,
      ref
    }), {
      elementType: "div"
    }),
    open,
    position,
    size,
    separator,
    surfaceMotion: presenceMotionSlot(surfaceMotion, {
      elementType: InlineDrawerMotion,
      defaultProps: {
        position,
        size,
        dir,
        visible: open,
        unmountOnExit: true
      }
    }),
    // Deprecated props
    motion: STATIC_MOTION2
  };
  return state;
};

// node_modules/@fluentui/react-drawer/lib/components/InlineDrawer/renderInlineDrawer.js
var renderInlineDrawer_unstable = (state, contextValue) => {
  assertSlots(state);
  return jsx(DrawerProvider, {
    value: contextValue,
    children: jsx(state.surfaceMotion, {
      children: jsx(state.root, {})
    })
  });
};

// node_modules/@fluentui/react-drawer/lib/components/InlineDrawer/useInlineDrawerStyles.styles.js
var inlineDrawerClassNames = {
  root: "fui-InlineDrawer"
};
var useDrawerResetStyles2 = __resetStyles("rkjj3x6", null, [".rkjj3x6{overflow:hidden;width:var(--fui-Drawer--size);max-width:100vw;height:auto;max-height:100vh;box-sizing:border-box;display:flex;flex-direction:column;align-items:flex-start;justify-content:flex-start;background-color:var(--colorNeutralBackground1);color:var(--colorNeutralForeground1);position:relative;}"]);
var borderValue = `1px solid ${tokens.colorNeutralBackground3}`;
var useDrawerRootStyles2 = __styles2({
  separatorStart: {
    h3c5rm: 0,
    vrafjx: 0,
    Bekrc4i: 0,
    u1mtju: ["f1cxmi7i", "f1j970fk"]
  },
  separatorEnd: {
    zhjwy3: 0,
    wvpqe5: 0,
    ibv6hh: 0,
    B4g9neb: ["f1j970fk", "f1cxmi7i"]
  },
  separatorBottom: {
    g2u3we: 0,
    icvyot: 0,
    B4j52fo: 0,
    i8vvqc: "f1n3kblk"
  },
  start: {},
  end: {},
  bottom: {
    a9b677: "fly5x3f",
    Bqenvij: "fub80nq"
  }
}, {
  d: [[".f1cxmi7i{border-right:1px solid var(--colorNeutralBackground3);}", {
    p: -1
  }], [".f1j970fk{border-left:1px solid var(--colorNeutralBackground3);}", {
    p: -1
  }], [".f1j970fk{border-left:1px solid var(--colorNeutralBackground3);}", {
    p: -1
  }], [".f1cxmi7i{border-right:1px solid var(--colorNeutralBackground3);}", {
    p: -1
  }], [".f1n3kblk{border-top:1px solid var(--colorNeutralBackground3);}", {
    p: -1
  }], ".fly5x3f{width:100%;}", ".fub80nq{height:var(--fui-Drawer--size);}"]
});
function getSeparatorClass(state, classNames) {
  if (!state.separator) {
    return void 0;
  }
  switch (state.position) {
    case "start":
      return classNames.separatorStart;
    case "end":
      return classNames.separatorEnd;
    case "bottom":
      return classNames.separatorBottom;
    default:
      return void 0;
  }
}
var useInlineDrawerStyles_unstable = (state) => {
  "use no memo";
  const resetStyles = useDrawerResetStyles2();
  const baseClassNames = useDrawerBaseClassNames(state);
  const rootStyles = useDrawerRootStyles2();
  state.root.className = mergeClasses(inlineDrawerClassNames.root, resetStyles, baseClassNames, getSeparatorClass(state, rootStyles), rootStyles[state.position], state.root.className);
  return state;
};

// node_modules/@fluentui/react-drawer/lib/components/InlineDrawer/InlineDrawer.js
var InlineDrawer = React451.forwardRef((props, ref) => {
  const state = useInlineDrawer_unstable(props, ref);
  const contextValue = useDrawerContextValue();
  useInlineDrawerStyles_unstable(state);
  useCustomStyleHook("useDrawerInlineStyles_unstable")(state);
  useCustomStyleHook("useInlineDrawerStyles_unstable")(state);
  return renderInlineDrawer_unstable(state, contextValue);
});
InlineDrawer.displayName = "InlineDrawer";

// node_modules/@fluentui/react-drawer/lib/components/Drawer/useDrawer.js
var useDrawer_unstable = (props, ref) => {
  const elementType = props.type === "inline" ? InlineDrawer : OverlayDrawer;
  const root = slot_exports.always({
    ref,
    ...props
  }, {
    elementType
  });
  return {
    components: {
      root: elementType
    },
    root
  };
};

// node_modules/@fluentui/react-drawer/lib/components/Drawer/renderDrawer.js
var renderDrawer_unstable = (state, contextValue) => {
  assertSlots(state);
  return jsx(DrawerProvider, {
    value: contextValue,
    children: jsx(state.root, {})
  });
};

// node_modules/@fluentui/react-drawer/lib/components/Drawer/useDrawerStyles.styles.js
var drawerClassNames = {
  root: "fui-Drawer"
};
var useDrawerStyles_unstable = (state) => {
  "use no memo";
  state.root.className = mergeClasses(drawerClassNames.root, state.root.className);
  return state;
};

// node_modules/@fluentui/react-drawer/lib/components/Drawer/Drawer.js
var Drawer = React453.forwardRef((props, ref) => {
  const state = useDrawer_unstable(props, ref);
  const contextValue = useDrawerContextValue();
  useDrawerStyles_unstable(state);
  useCustomStyleHook("useDrawerStyles_unstable")(state);
  return renderDrawer_unstable(state, contextValue);
});
Drawer.displayName = "Drawer";

// node_modules/@fluentui/react-drawer/lib/components/DrawerBody/DrawerBody.js
var React455 = __toESM(require_react());

// node_modules/@fluentui/react-drawer/lib/components/DrawerBody/useDrawerBody.js
var React454 = __toESM(require_react());
var getScrollState = ({ scrollTop, scrollHeight, clientHeight }) => {
  if (scrollHeight <= clientHeight) {
    return "none";
  }
  if (scrollTop === 0) {
    return "top";
  }
  if (scrollTop + clientHeight === scrollHeight) {
    return "bottom";
  }
  return "middle";
};
var useDrawerBody_unstable = (props, ref) => {
  const { setScrollState } = useDrawerContext_unstable();
  const scrollRef = React454.useRef(null);
  const [setAnimationFrame, cancelAnimationFrame] = useAnimationFrame();
  const updateScrollState = React454.useCallback(() => {
    if (!scrollRef.current) {
      return;
    }
    setScrollState(getScrollState(scrollRef.current));
  }, [
    setScrollState
  ]);
  const onScroll = React454.useCallback(() => {
    cancelAnimationFrame();
    setAnimationFrame(() => updateScrollState());
  }, [
    cancelAnimationFrame,
    setAnimationFrame,
    updateScrollState
  ]);
  useIsomorphicLayoutEffect(() => {
    updateScrollState();
  }, [
    props.children,
    updateScrollState
  ]);
  useIsomorphicLayoutEffect(() => {
    updateScrollState();
    return () => cancelAnimationFrame();
  }, [
    cancelAnimationFrame,
    updateScrollState
  ]);
  return {
    components: {
      root: "div"
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      // FIXME:
      // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`
      // but since it would be a breaking change to fix it, we are casting ref to it's proper type
      ref: useMergedRefs(ref, scrollRef),
      ...props,
      onScroll: mergeCallbacks(props.onScroll, onScroll)
    }), {
      elementType: "div"
    })
  };
};

// node_modules/@fluentui/react-drawer/lib/components/DrawerBody/renderDrawerBody.js
var renderDrawerBody_unstable = (state) => {
  assertSlots(state);
  return jsx(state.root, {});
};

// node_modules/@fluentui/react-drawer/lib/components/DrawerBody/useDrawerBodyStyles.styles.js
var drawerBodyClassNames = {
  root: "fui-DrawerBody"
};
var useStyles50 = __resetStyles("ri6rvx7", null, [".ri6rvx7{padding:0 var(--spacingHorizontalXXL);flex:1;align-self:stretch;position:relative;z-index:1;overflow:auto;}", ".ri6rvx7:last-child{padding-bottom:calc(var(--spacingHorizontalXXL) + 1px);}", ".ri6rvx7:first-child{padding-top:calc(var(--spacingHorizontalXXL) + 1px);}"]);
var useDrawerBodyStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles50();
  state.root.className = mergeClasses(drawerBodyClassNames.root, styles, state.root.className);
  return state;
};

// node_modules/@fluentui/react-drawer/lib/components/DrawerBody/DrawerBody.js
var DrawerBody = React455.forwardRef((props, ref) => {
  const state = useDrawerBody_unstable(props, ref);
  useDrawerBodyStyles_unstable(state);
  useCustomStyleHook("useDrawerBodyStyles_unstable")(state);
  return renderDrawerBody_unstable(state);
});
DrawerBody.displayName = "DrawerBody";

// node_modules/@fluentui/react-drawer/lib/components/DrawerHeader/DrawerHeader.js
var React457 = __toESM(require_react());

// node_modules/@fluentui/react-drawer/lib/components/DrawerHeader/useDrawerHeader.js
var React456 = __toESM(require_react());
var useDrawerHeader_unstable = (props, ref) => {
  const { scrollState } = useDrawerContext_unstable();
  return {
    components: {
      root: "header"
    },
    root: slot_exports.always(getIntrinsicElementProps("header", {
      ref,
      role: "none",
      ...props
    }), {
      elementType: "header"
    }),
    scrollState
  };
};

// node_modules/@fluentui/react-drawer/lib/components/DrawerHeader/renderDrawerHeader.js
var renderDrawerHeader_unstable = (state) => {
  assertSlots(state);
  return jsx(state.root, {});
};

// node_modules/@fluentui/react-drawer/lib/shared/drawerSeparatorStyles.js
var drawerSeparatorStyles = {
  height: "1px",
  position: "absolute",
  right: 0,
  left: 0,
  opacity: 0,
  backgroundColor: tokens.colorNeutralStroke1,
  transitionDuration: tokens.durationNormal,
  transitionProperty: "opacity",
  transitionTimingFunction: tokens.curveEasyEase,
  content: '""'
};

// node_modules/@fluentui/react-drawer/lib/components/DrawerHeader/useDrawerHeaderStyles.styles.js
var drawerHeaderClassNames = {
  root: "fui-DrawerHeader"
};
var useStyles51 = __resetStyles("r3ovn4i", null, [".r3ovn4i{width:100%;max-width:100%;padding:var(--spacingVerticalXXL) var(--spacingHorizontalXXL) var(--spacingVerticalS);gap:var(--spacingHorizontalS);align-self:stretch;display:flex;flex-direction:column;box-sizing:border-box;position:relative;z-index:2;}"]);
var useDrawerHeaderStyles = __styles2({
  separator: {
    Dlnsje: "fxnjyrl",
    E3zdtr: "f1mdlcz9",
    B1piin3: ["f15yvnhg", "f1n6gb5g"],
    Eqx8gd: ["f1n6gb5g", "f15yvnhg"],
    Bp15pi3: "f1564nw5",
    Bjyk6c5: "fdlpgxj",
    F2fol1: "f15cmg8x",
    Ba2ppi3: "f3f8dgl",
    B1dyfl9: "fjvo4va",
    Bsft5z2: "f13zj6fq",
    By385i5: "fo72kxq"
  },
  separatorVisible: {
    Bp15pi3: "fjsqi2x"
  }
}, {
  d: [".fxnjyrl::after{height:1px;}", ".f1mdlcz9::after{position:absolute;}", ".f15yvnhg::after{right:0;}", ".f1n6gb5g::after{left:0;}", ".f1564nw5::after{opacity:0;}", ".fdlpgxj::after{background-color:var(--colorNeutralStroke1);}", ".f15cmg8x::after{transition-duration:var(--durationNormal);}", ".f3f8dgl::after{transition-property:opacity;}", ".fjvo4va::after{transition-timing-function:var(--curveEasyEase);}", '.f13zj6fq::after{content:"";}', ".fo72kxq::after{bottom:0;}", ".fjsqi2x::after{opacity:1;}"]
});
var useDrawerHeaderStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles51();
  const rootStyles = useDrawerHeaderStyles();
  state.root.className = mergeClasses(drawerHeaderClassNames.root, styles, state.scrollState !== "none" && rootStyles.separator, ["middle", "bottom"].includes(state.scrollState) && rootStyles.separatorVisible, state.root.className);
  return state;
};

// node_modules/@fluentui/react-drawer/lib/components/DrawerHeader/DrawerHeader.js
var DrawerHeader = React457.forwardRef((props, ref) => {
  const state = useDrawerHeader_unstable(props, ref);
  useDrawerHeaderStyles_unstable(state);
  useCustomStyleHook("useDrawerHeaderStyles_unstable")(state);
  return renderDrawerHeader_unstable(state);
});
DrawerHeader.displayName = "DrawerHeader";

// node_modules/@fluentui/react-drawer/lib/components/DrawerHeaderTitle/DrawerHeaderTitle.js
var React459 = __toESM(require_react());

// node_modules/@fluentui/react-drawer/lib/components/DrawerHeaderTitle/useDrawerHeaderTitle.js
var React458 = __toESM(require_react());
var useDrawerHeaderTitle_unstable = (props, ref) => {
  const { children: children2, heading } = props;
  const headingId = useDialogContext_unstable((ctx) => ctx.dialogTitleId);
  return {
    components: {
      root: "div",
      heading: "h2",
      action: "div"
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      ref,
      ...props
    }), {
      elementType: "div"
    }),
    heading: slot_exports.optional(heading, {
      defaultProps: {
        id: headingId,
        children: children2
      },
      renderByDefault: true,
      elementType: "h2"
    }),
    action: slot_exports.optional(props.action, {
      elementType: "div"
    })
  };
};

// node_modules/@fluentui/react-drawer/lib/components/DrawerHeaderTitle/renderDrawerHeaderTitle.js
var renderDrawerHeaderTitle_unstable = (state) => {
  assertSlots(state);
  return jsxs(state.root, {
    children: [
      state.heading && jsx(state.heading, {}),
      state.action && jsx(state.action, {})
    ]
  });
};

// node_modules/@fluentui/react-drawer/lib/components/DrawerHeaderTitle/useDrawerHeaderTitleStyles.styles.js
var drawerHeaderTitleClassNames = {
  root: "fui-DrawerHeaderTitle",
  heading: "fui-DrawerHeaderTitle__heading",
  action: "fui-DrawerHeaderTitle__action"
};
var useStyles52 = __styles2({
  root: {
    mc9l5x: "f22iagw",
    Brf1p80: "f1869bpl",
    Bt984gj: "f122n59",
    i8kkvl: "fsnqrgy"
  },
  action: {
    t21cq0: ["faqnl2i", "fd75udd"]
  }
}, {
  d: [".f22iagw{display:flex;}", ".f1869bpl{justify-content:space-between;}", ".f122n59{align-items:center;}", ".fsnqrgy{column-gap:var(--spacingHorizontalS);}", ".faqnl2i{margin-right:calc(var(--spacingHorizontalS) * -1);}", ".fd75udd{margin-left:calc(var(--spacingHorizontalS) * -1);}"]
});
var useDrawerHeaderTitleStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles52();
  const {
    heading: root = {},
    action,
    components
  } = state;
  useDialogTitleStyles_unstable({
    components: {
      root: components.heading,
      action: components.action
    },
    root,
    action
  });
  state.root.className = mergeClasses(drawerHeaderTitleClassNames.root, styles.root, state.root.className);
  if (state.heading) {
    state.heading.className = mergeClasses(drawerHeaderTitleClassNames.heading, state.heading.className);
  }
  if (state.action) {
    state.action.className = mergeClasses(drawerHeaderTitleClassNames.action, styles.action, state.action.className);
  }
  return state;
};

// node_modules/@fluentui/react-drawer/lib/components/DrawerHeaderTitle/DrawerHeaderTitle.js
var DrawerHeaderTitle = React459.forwardRef((props, ref) => {
  const state = useDrawerHeaderTitle_unstable(props, ref);
  useDrawerHeaderTitleStyles_unstable(state);
  useCustomStyleHook("useDrawerHeaderTitleStyles_unstable")(state);
  return renderDrawerHeaderTitle_unstable(state);
});
DrawerHeaderTitle.displayName = "DrawerHeaderTitle";

// node_modules/@fluentui/react-drawer/lib/components/DrawerHeaderNavigation/DrawerHeaderNavigation.js
var React461 = __toESM(require_react());

// node_modules/@fluentui/react-drawer/lib/components/DrawerHeaderNavigation/useDrawerHeaderNavigation.js
var React460 = __toESM(require_react());
var useDrawerHeaderNavigation_unstable = (props, ref) => {
  return {
    components: {
      root: "nav"
    },
    root: slot_exports.always(getIntrinsicElementProps("nav", {
      ref,
      ...props
    }), {
      elementType: "nav"
    })
  };
};

// node_modules/@fluentui/react-drawer/lib/components/DrawerHeaderNavigation/renderDrawerHeaderNavigation.js
var renderDrawerHeaderNavigation_unstable = (state) => {
  assertSlots(state);
  return jsx(state.root, {});
};

// node_modules/@fluentui/react-drawer/lib/components/DrawerHeaderNavigation/useDrawerHeaderNavigationStyles.styles.js
var drawerHeaderNavigationClassNames = {
  root: "fui-DrawerHeaderNavigation"
};
var useStyles53 = __resetStyles("r1ig4pwh", null, [".r1ig4pwh{margin:calc(var(--spacingVerticalS) * -1) calc(var(--spacingHorizontalL) * -1);}"]);
var useDrawerHeaderNavigationStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles53();
  state.root.className = mergeClasses(drawerHeaderNavigationClassNames.root, styles, state.root.className);
  return state;
};

// node_modules/@fluentui/react-drawer/lib/components/DrawerHeaderNavigation/DrawerHeaderNavigation.js
var DrawerHeaderNavigation = React461.forwardRef((props, ref) => {
  const state = useDrawerHeaderNavigation_unstable(props, ref);
  useDrawerHeaderNavigationStyles_unstable(state);
  useCustomStyleHook("useDrawerHeaderNavigationStyles_unstable")(state);
  return renderDrawerHeaderNavigation_unstable(state);
});
DrawerHeaderNavigation.displayName = "DrawerHeaderNavigation";

// node_modules/@fluentui/react-drawer/lib/components/DrawerFooter/DrawerFooter.js
var React463 = __toESM(require_react());

// node_modules/@fluentui/react-drawer/lib/components/DrawerFooter/useDrawerFooter.js
var React462 = __toESM(require_react());
var useDrawerFooter_unstable = (props, ref) => {
  const { scrollState } = useDrawerContext_unstable();
  return {
    components: {
      root: "footer"
    },
    root: slot_exports.always(getIntrinsicElementProps("footer", {
      ref,
      role: "none",
      ...props
    }), {
      elementType: "footer"
    }),
    scrollState
  };
};

// node_modules/@fluentui/react-drawer/lib/components/DrawerFooter/renderDrawerFooter.js
var renderDrawerFooter_unstable = (state) => {
  assertSlots(state);
  return jsx(state.root, {});
};

// node_modules/@fluentui/react-drawer/lib/components/DrawerFooter/useDrawerFooterStyles.styles.js
var drawerFooterClassNames = {
  root: "fui-DrawerFooter"
};
var useStyles54 = __resetStyles("r1snvl2j", null, [".r1snvl2j{width:100%;max-width:100%;padding:var(--spacingVerticalL) var(--spacingHorizontalXXL) var(--spacingVerticalXXL);display:flex;justify-content:flex-start;align-items:center;column-gap:var(--spacingHorizontalS);box-sizing:border-box;position:relative;z-index:2;}"]);
var useDrawerFooterStyles = __styles2({
  separator: {
    Baz25je: "f16b62f1",
    Brfgrao: "f1j7ml58",
    mdwyqc: ["f1f351id", "f1fzr1x6"],
    Fbdkly: ["f1fzr1x6", "f1f351id"],
    vz82u: "f1dhznln",
    cmx5o7: "f1p5zmk",
    h7gv66: "f1ljjo4k",
    B8bqphf: "ffd2d9j",
    wjn42g: "ffdt3s5",
    Ftih45: "f1wl9k8s",
    Bciustq: "ffi060y"
  },
  separatorVisible: {
    vz82u: "f1b3qyzu"
  }
}, {
  d: [".f16b62f1::before{height:1px;}", ".f1j7ml58::before{position:absolute;}", ".f1f351id::before{right:0;}", ".f1fzr1x6::before{left:0;}", ".f1dhznln::before{opacity:0;}", ".f1p5zmk::before{background-color:var(--colorNeutralStroke1);}", ".f1ljjo4k::before{transition-duration:var(--durationNormal);}", ".ffd2d9j::before{transition-property:opacity;}", ".ffdt3s5::before{transition-timing-function:var(--curveEasyEase);}", '.f1wl9k8s::before{content:"";}', ".ffi060y::before{top:0;}", ".f1b3qyzu::before{opacity:1;}"]
});
var useDrawerFooterStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles54();
  const rootStyles = useDrawerFooterStyles();
  state.root.className = mergeClasses(drawerFooterClassNames.root, styles, state.scrollState !== "none" && rootStyles.separator, ["middle", "top"].includes(state.scrollState) && rootStyles.separatorVisible, state.root.className);
  return state;
};

// node_modules/@fluentui/react-drawer/lib/components/DrawerFooter/DrawerFooter.js
var DrawerFooter = React463.forwardRef((props, ref) => {
  const state = useDrawerFooter_unstable(props, ref);
  useDrawerFooterStyles_unstable(state);
  useCustomStyleHook("useDrawerFooterStyles_unstable")(state);
  return renderDrawerFooter_unstable(state);
});
DrawerFooter.displayName = "DrawerFooter";

// node_modules/@fluentui/react-breadcrumb/lib/components/Breadcrumb/Breadcrumb.js
var React467 = __toESM(require_react());

// node_modules/@fluentui/react-breadcrumb/lib/components/Breadcrumb/useBreadcrumb.js
var React464 = __toESM(require_react());
var useBreadcrumb_unstable = (props, ref) => {
  const { focusMode = "tab", size = "medium", list, ...rest } = props;
  const focusAttributes = useArrowNavigationGroup({
    circular: true,
    axis: "horizontal",
    memorizeCurrent: true
  });
  var _props_arialabel;
  return {
    components: {
      root: "nav",
      list: "ol"
    },
    root: slot_exports.always(getIntrinsicElementProps("nav", {
      ref,
      "aria-label": (_props_arialabel = props["aria-label"]) !== null && _props_arialabel !== void 0 ? _props_arialabel : "breadcrumb",
      ...focusMode === "arrow" ? focusAttributes : {},
      ...rest
    }), {
      elementType: "nav"
    }),
    list: slot_exports.optional(list, {
      renderByDefault: true,
      defaultProps: {
        role: "list"
      },
      elementType: "ol"
    }),
    size
  };
};

// node_modules/@fluentui/react-breadcrumb/lib/components/Breadcrumb/BreadcrumbContext.js
var React465 = __toESM(require_react());
var BreadcrumbContext = React465.createContext(void 0);
var breadcrumbDefaultValue = {
  size: "medium"
};
var BreadcrumbProvider = BreadcrumbContext.Provider;
var useBreadcrumbContext_unstable = () => {
  var _React_useContext;
  return (_React_useContext = React465.useContext(BreadcrumbContext)) !== null && _React_useContext !== void 0 ? _React_useContext : breadcrumbDefaultValue;
};

// node_modules/@fluentui/react-breadcrumb/lib/components/Breadcrumb/renderBreadcrumb.js
var renderBreadcrumb_unstable = (state, contextValues) => {
  assertSlots(state);
  return jsx(state.root, {
    children: jsx(BreadcrumbProvider, {
      value: contextValues,
      children: state.list && jsx(state.list, {
        children: state.root.children
      })
    })
  });
};

// node_modules/@fluentui/react-breadcrumb/lib/components/Breadcrumb/useBreadcrumbStyles.styles.js
var breadcrumbClassNames = {
  root: "fui-Breadcrumb",
  list: "fui-Breadcrumb__list"
};
var useListClassName = __resetStyles("rc5rb6b", null, [".rc5rb6b{list-style-type:none;display:flex;align-items:center;margin:0;padding:0;}"]);
var useBreadcrumbStyles_unstable = (state) => {
  "use no memo";
  const listBaseClassName = useListClassName();
  state.root.className = mergeClasses(breadcrumbClassNames.root, state.root.className);
  if (state.list) {
    state.list.className = mergeClasses(listBaseClassName, breadcrumbClassNames.list, state.list.className);
  }
  return state;
};

// node_modules/@fluentui/react-breadcrumb/lib/components/Breadcrumb/useBreadcrumbContextValue.js
var React466 = __toESM(require_react());
function useBreadcrumbContextValues_unstable(state) {
  const { size } = state;
  return React466.useMemo(() => ({
    size
  }), [
    size
  ]);
}

// node_modules/@fluentui/react-breadcrumb/lib/components/Breadcrumb/Breadcrumb.js
var Breadcrumb = React467.forwardRef((props, ref) => {
  const state = useBreadcrumb_unstable(props, ref);
  const contextValues = useBreadcrumbContextValues_unstable(state);
  useBreadcrumbStyles_unstable(state);
  useCustomStyleHook("useBreadcrumbStyles_unstable")(state);
  return renderBreadcrumb_unstable(state, contextValues);
});
Breadcrumb.displayName = "Breadcrumb";

// node_modules/@fluentui/react-breadcrumb/lib/components/BreadcrumbDivider/BreadcrumbDivider.js
var React469 = __toESM(require_react());

// node_modules/@fluentui/react-breadcrumb/lib/components/BreadcrumbDivider/useBreadcrumbDivider.js
var React468 = __toESM(require_react());
var useBreadcrumbDivider_unstable = (props, ref) => {
  const { size } = useBreadcrumbContext_unstable();
  const { dir } = useFluent();
  const icon = getDividerIcon(dir);
  return {
    components: {
      root: "li"
    },
    root: slot_exports.always(getIntrinsicElementProps("li", {
      ref,
      "aria-hidden": true,
      children: icon,
      ...props
    }), {
      elementType: "li"
    }),
    size
  };
};
function getDividerIcon(dir) {
  return dir === "rtl" ? React468.createElement(ChevronLeftRegular, null) : React468.createElement(ChevronRightRegular, null);
}

// node_modules/@fluentui/react-breadcrumb/lib/components/BreadcrumbDivider/renderBreadcrumbDivider.js
var renderBreadcrumbDivider_unstable = (state) => {
  assertSlots(state);
  return jsx(state.root, {});
};

// node_modules/@fluentui/react-breadcrumb/lib/components/BreadcrumbDivider/useBreadcrumbDividerStyles.styles.js
var breadcrumbDividerClassNames = {
  root: "fui-BreadcrumbDivider"
};
var useStyles55 = __resetStyles("rk008qs", null, [".rk008qs{display:flex;}"]);
var useIconStyles9 = __styles2({
  small: {
    Be2twd7: "f1ugzwwg"
  },
  medium: {
    Be2twd7: "f4ybsrx"
  },
  large: {
    Be2twd7: "fe5j1ua"
  }
}, {
  d: [".f1ugzwwg{font-size:12px;}", ".f4ybsrx{font-size:16px;}", ".fe5j1ua{font-size:20px;}"]
});
var useBreadcrumbDividerStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles55();
  const iconStyles = useIconStyles9();
  const {
    size = "medium"
  } = state;
  state.root.className = mergeClasses(breadcrumbDividerClassNames.root, styles, iconStyles[size], state.root.className);
  return state;
};

// node_modules/@fluentui/react-breadcrumb/lib/components/BreadcrumbDivider/BreadcrumbDivider.js
var BreadcrumbDivider = React469.forwardRef((props, ref) => {
  const state = useBreadcrumbDivider_unstable(props, ref);
  useBreadcrumbDividerStyles_unstable(state);
  useCustomStyleHook("useBreadcrumbDividerStyles_unstable")(state);
  return renderBreadcrumbDivider_unstable(state);
});
BreadcrumbDivider.displayName = "BreadcrumbDivider";

// node_modules/@fluentui/react-breadcrumb/lib/components/BreadcrumbItem/BreadcrumbItem.js
var React471 = __toESM(require_react());

// node_modules/@fluentui/react-breadcrumb/lib/components/BreadcrumbItem/useBreadcrumbItem.js
var React470 = __toESM(require_react());
var useBreadcrumbItem_unstable = (props, ref) => {
  const { size } = useBreadcrumbContext_unstable();
  return {
    components: {
      root: "li"
    },
    root: slot_exports.always(getIntrinsicElementProps("li", {
      ref,
      ...props
    }), {
      elementType: "li"
    }),
    size
  };
};

// node_modules/@fluentui/react-breadcrumb/lib/components/BreadcrumbItem/renderBreadcrumbItem.js
var renderBreadcrumbItem_unstable = (state) => {
  assertSlots(state);
  return jsx(state.root, {
    children: state.root.children
  });
};

// node_modules/@fluentui/react-breadcrumb/lib/components/BreadcrumbItem/useBreadcrumbItemStyles.styles.js
var breadcrumbItemClassNames = {
  root: "fui-BreadcrumbItem"
};
var useBreadcrumbItemResetStyles = __resetStyles("r1tl60rs", null, [".r1tl60rs{display:flex;align-items:center;color:var(--colorNeutralForeground2);box-sizing:border-box;text-wrap:nowrap;}"]);
var useBreadcrumbItemStyles_unstable = (state) => {
  "use no memo";
  const resetStyles = useBreadcrumbItemResetStyles();
  state.root.className = mergeClasses(breadcrumbItemClassNames.root, resetStyles, state.root.className);
  return state;
};

// node_modules/@fluentui/react-breadcrumb/lib/components/BreadcrumbItem/BreadcrumbItem.js
var BreadcrumbItem = React471.forwardRef((props, ref) => {
  const state = useBreadcrumbItem_unstable(props, ref);
  useBreadcrumbItemStyles_unstable(state);
  useCustomStyleHook("useBreadcrumbItemStyles_unstable")(state);
  return renderBreadcrumbItem_unstable(state);
});
BreadcrumbItem.displayName = "BreadcrumbItem";

// node_modules/@fluentui/react-breadcrumb/lib/utils/partitionBreadcrumbItems.js
var DEFAULT_OVERFLOW_INDEX = 1;
var DEFAULT_MAX_DISPLAYED_ITEMS = 6;
var partitionBreadcrumbItems = (options) => {
  let startDisplayedItems;
  let overflowItems;
  let endDisplayedItems;
  const { items = [] } = options;
  const itemsCount = items.length;
  const maxDisplayedItems = getMaxDisplayedItems(options.maxDisplayedItems);
  var _options_overflowIndex;
  let overflowIndex = (_options_overflowIndex = options.overflowIndex) !== null && _options_overflowIndex !== void 0 ? _options_overflowIndex : DEFAULT_OVERFLOW_INDEX;
  startDisplayedItems = items.slice(0, overflowIndex);
  const numberItemsToHide = itemsCount - maxDisplayedItems;
  if (numberItemsToHide > 0) {
    overflowIndex = overflowIndex >= maxDisplayedItems ? maxDisplayedItems - 1 : overflowIndex;
    const menuLastItemIdx = overflowIndex + numberItemsToHide;
    startDisplayedItems = startDisplayedItems.slice(0, overflowIndex);
    overflowItems = items.slice(overflowIndex, menuLastItemIdx);
    if (menuLastItemIdx < itemsCount) {
      endDisplayedItems = items.slice(menuLastItemIdx, itemsCount);
    }
  } else if (overflowIndex < itemsCount) {
    endDisplayedItems = items.slice(overflowIndex, itemsCount);
  }
  return {
    startDisplayedItems,
    overflowItems,
    endDisplayedItems
  };
};
function getMaxDisplayedItems(maxDisplayedItems) {
  return maxDisplayedItems && maxDisplayedItems >= 0 ? maxDisplayedItems : DEFAULT_MAX_DISPLAYED_ITEMS;
}

// node_modules/@fluentui/react-breadcrumb/lib/utils/truncateBreadcrumb.js
var MAX_NAME_LENGTH = 30;
var MAX_TOOLTIP_LENGTH = 80;
var truncateBreadcrumb = (content, maxLength) => {
  return isTruncatableBreadcrumbContent(content, maxLength) ? content.trim().slice(0, maxLength).concat("...") : content;
};
var isTruncatableBreadcrumbContent = (content, maxLength) => {
  return content.length > maxLength;
};
var truncateBreadcrumbLongName = (content, maxLength) => {
  const truncateLength = maxLength || MAX_NAME_LENGTH;
  return truncateBreadcrumb(content, truncateLength);
};
var truncateBreadcrumLongTooltip = (content, maxLength) => {
  const truncateLength = maxLength || MAX_TOOLTIP_LENGTH;
  return truncateBreadcrumb(content, truncateLength);
};

// node_modules/@fluentui/react-breadcrumb/lib/components/BreadcrumbButton/BreadcrumbButton.js
var React473 = __toESM(require_react());

// node_modules/@fluentui/react-breadcrumb/lib/components/BreadcrumbButton/useBreadcrumbButton.js
var React472 = __toESM(require_react());
var useBreadcrumbButton_unstable = (props, ref) => {
  const { size } = useBreadcrumbContext_unstable();
  const { current = false, as, ...rest } = props;
  const controlType = (as !== null && as !== void 0 ? as : props.href) ? "a" : "button";
  var _props_ariacurrent, _props_ariadisabled;
  return {
    ...useButton_unstable({
      appearance: "subtle",
      role: void 0,
      type: void 0,
      as: controlType,
      iconPosition: "before",
      "aria-current": current ? (_props_ariacurrent = props["aria-current"]) !== null && _props_ariacurrent !== void 0 ? _props_ariacurrent : "page" : void 0,
      "aria-disabled": current ? (_props_ariadisabled = props["aria-disabled"]) !== null && _props_ariadisabled !== void 0 ? _props_ariadisabled : true : void 0,
      ...rest
    }, ref),
    current,
    size
  };
};

// node_modules/@fluentui/react-breadcrumb/lib/components/BreadcrumbButton/renderBreadcrumbButton.js
var renderBreadcrumbButton_unstable = (state) => {
  return renderButton_unstable(state);
};

// node_modules/@fluentui/react-breadcrumb/lib/components/BreadcrumbButton/useBreadcrumbButtonStyles.styles.js
var breadcrumbButtonClassNames = {
  root: "fui-BreadcrumbButton",
  icon: "fui-BreadcrumbButton__icon"
};
var useIconStyles10 = __styles2({
  base: {
    Be2twd7: "fsj74e5",
    Bqenvij: "f1qfv4wv",
    Bg96gwp: "f15xapk4",
    a9b677: "f17j33op",
    t21cq0: ["fm0x6gh", "fbyavb5"]
  },
  small: {
    u3h8gg: "f1qfi7kw",
    Biu6dll: "f1876atl"
  },
  medium: {
    u3h8gg: "f1h9446d",
    Biu6dll: "f10xfswh"
  },
  large: {
    u3h8gg: "f5hcofs",
    Biu6dll: "f1a6v6zl"
  }
}, {
  d: [".fsj74e5{font-size:var(--fui-Breadcrumb--icon-size);}", ".f1qfv4wv{height:var(--fui-Breadcrumb--icon-size);}", ".f15xapk4{line-height:var(--fui-Breadcrumb--icon-line-height);}", ".f17j33op{width:var(--fui-Breadcrumb--icon-size);}", ".fm0x6gh{margin-right:var(--spacingHorizontalXS);}", ".fbyavb5{margin-left:var(--spacingHorizontalXS);}", ".f1qfi7kw{--fui-Breadcrumb--icon-size:12px;}", ".f1876atl{--fui-Breadcrumb--icon-line-height:var(--lineHeightBase200);}", ".f1h9446d{--fui-Breadcrumb--icon-size:16px;}", ".f10xfswh{--fui-Breadcrumb--icon-line-height:var(--lineHeightBase400);}", ".f5hcofs{--fui-Breadcrumb--icon-size:20px;}", ".f1a6v6zl{--fui-Breadcrumb--icon-line-height:var(--lineHeightBase600);}"]
});
var defaultButtonStyles = {
  backgroundColor: tokens.colorTransparentBackground,
  color: tokens.colorNeutralForeground2,
  cursor: "auto"
};
var currentIconStyles = {
  ...defaultButtonStyles,
  [`& .${buttonClassNames.icon}`]: {
    color: "unset"
  },
  [`& .${iconFilledClassName}`]: {
    display: "none"
  },
  [`& .${iconRegularClassName}`]: {
    display: "inline"
  }
};
var useStyles56 = __styles2({
  root: {
    Bf4jedk: "f18p0k4z",
    j4b8c3: "fv6wr3j"
  },
  small: {
    Bqenvij: "frvgh55",
    Bahqtrf: "fk6fouc",
    Be2twd7: "fy9rknc",
    Bhrd7zp: "figsok6",
    Bg96gwp: "fwrc4pm",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f1r1wyb6"
  },
  medium: {
    Bqenvij: "f1d2rq10",
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "figsok6",
    Bg96gwp: "f1i3iumi",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f1r1wyb6"
  },
  large: {
    Bqenvij: "fbhnoac",
    Bahqtrf: "fk6fouc",
    Be2twd7: "fod5ikn",
    Bhrd7zp: "figsok6",
    Bg96gwp: "faaz57k",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f1bnz8pu"
  },
  current: {
    Jwef8y: "f9ql6rf",
    Bi91k9c: "f3p8bqa",
    eoavqd: "f14w7a5u",
    Bbdnnc7: "f1irjp3o",
    Bk3fhr4: "f19vpps7",
    Bmfj8id: "fv5swzo",
    iro3zm: "f3h1zc4",
    B2d53fq: "f1xkgyln",
    c3iz72: "f17wbbfx",
    x3br3k: "fofxw0a",
    em6i61: "f1ol4fw6",
    vm6p8p: "f1q1lw4e",
    Bszkowt: "ff24m",
    Dyrjrp: "ft5r8e9",
    ezr58z: "f1cbpfqp",
    nhk3du: "f1motppv",
    Bfrek18: "fi9vkhg",
    G209fr: "f1fg3nnv"
  },
  currentSmall: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fy9rknc",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "fwrc4pm"
  },
  currentMedium: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "f1i3iumi"
  },
  currentLarge: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fod5ikn",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "faaz57k"
  }
}, {
  d: [".f18p0k4z{min-width:unset;}", ".fv6wr3j{text-wrap:nowrap;}", ".frvgh55{height:24px;}", ".fk6fouc{font-family:var(--fontFamilyBase);}", ".fy9rknc{font-size:var(--fontSizeBase200);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".fwrc4pm{line-height:var(--lineHeightBase200);}", [".f1r1wyb6{padding:var(--spacingHorizontalSNudge);}", {
    p: -1
  }], ".f1d2rq10{height:32px;}", ".fkhj508{font-size:var(--fontSizeBase300);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}", [".f1r1wyb6{padding:var(--spacingHorizontalSNudge);}", {
    p: -1
  }], ".fbhnoac{height:40px;}", ".fod5ikn{font-size:var(--fontSizeBase400);}", ".faaz57k{line-height:var(--lineHeightBase400);}", [".f1bnz8pu{padding:var(--spacingHorizontalS);}", {
    p: -1
  }], ".ff24m:disabled{background-color:var(--colorTransparentBackground);}", ".ft5r8e9:disabled{color:var(--colorNeutralForeground2);}", ".f1cbpfqp:disabled{cursor:auto;}", ".f1motppv:disabled .fui-Button__icon{color:unset;}", ".fi9vkhg:disabled .fui-Icon-filled{display:none;}", ".f1fg3nnv:disabled .fui-Icon-regular{display:inline;}", ".fl43uef{font-weight:var(--fontWeightSemibold);}"],
  h: [".f9ql6rf:hover{background-color:var(--colorTransparentBackground);}", ".f3p8bqa:hover{color:var(--colorNeutralForeground2);}", ".f14w7a5u:hover{cursor:auto;}", ".f1irjp3o:hover .fui-Button__icon{color:unset;}", ".f19vpps7:hover .fui-Icon-filled{display:none;}", ".fv5swzo:hover .fui-Icon-regular{display:inline;}", ".f3h1zc4:hover:active{background-color:var(--colorTransparentBackground);}", ".f1xkgyln:hover:active{color:var(--colorNeutralForeground2);}", ".f17wbbfx:hover:active{cursor:auto;}", ".fofxw0a:hover:active .fui-Button__icon{color:unset;}", ".f1ol4fw6:hover:active .fui-Icon-filled{display:none;}", ".f1q1lw4e:hover:active .fui-Icon-regular{display:inline;}"]
});
var useBreadcrumbButtonStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles56();
  const iconStyles = useIconStyles10();
  const currentSizeMap = {
    small: styles.currentSmall,
    medium: styles.currentMedium,
    large: styles.currentLarge
  };
  state.root.className = mergeClasses(breadcrumbButtonClassNames.root, styles[state.size], styles.root, state.current && currentSizeMap[state.size], state.current && styles.current, state.root.className);
  if (state.icon) {
    state.icon.className = mergeClasses(iconStyles.base, iconStyles[state.size], state.icon.className);
  }
  useButtonStyles_unstable(state);
  return state;
};

// node_modules/@fluentui/react-breadcrumb/lib/components/BreadcrumbButton/BreadcrumbButton.js
var BreadcrumbButton = React473.forwardRef((props, ref) => {
  const state = useBreadcrumbButton_unstable(props, ref);
  useBreadcrumbButtonStyles_unstable(state);
  useCustomStyleHook("useBreadcrumbButtonStyles_unstable")(state);
  return renderBreadcrumbButton_unstable(state);
});
BreadcrumbButton.displayName = "BreadcrumbButton";

// node_modules/@fluentui/react-rating/lib/components/Rating/Rating.js
var React479 = __toESM(require_react());

// node_modules/@fluentui/react-rating/lib/components/Rating/useRating.js
var React477 = __toESM(require_react());

// node_modules/@fluentui/react-rating/lib/components/RatingItem/RatingItem.js
var React476 = __toESM(require_react());

// node_modules/@fluentui/react-rating/lib/components/RatingItem/useRatingItem.js
var React475 = __toESM(require_react());

// node_modules/@fluentui/react-rating/lib/contexts/RatingItemContext.js
var React474 = __toESM(require_react());
var RatingItemContext = React474.createContext(void 0);
var ratingItemContextDefaultValue = {
  color: "neutral",
  iconFilled: StarFilled,
  iconOutline: StarRegular,
  step: 1,
  size: "medium"
};
var RatingItemProvider = RatingItemContext.Provider;
var useRatingItemContextValue_unstable = () => React474.useContext(RatingItemContext) || ratingItemContextDefaultValue;

// node_modules/@fluentui/react-rating/lib/components/RatingItem/useRatingItem.js
var defaultItemLabel = (num) => num + "";
var useRatingItem_unstable = (props, ref) => {
  const context = useRatingItemContextValue_unstable();
  const { value = 0 } = props;
  const { itemLabel = defaultItemLabel, iconFilled: IconFilled, iconOutline: IconOutline } = context;
  const ratingValue = Math.round((context.value || 0) * 2) / 2;
  var _context_hoveredValue;
  const displayedRatingValue = (_context_hoveredValue = context.hoveredValue) !== null && _context_hoveredValue !== void 0 ? _context_hoveredValue : ratingValue;
  const appearance = context.interactive ? "outline" : "filled";
  let iconFillWidth;
  if (context.compact || displayedRatingValue >= value) {
    iconFillWidth = 1;
  } else if (displayedRatingValue >= value - 0.5) {
    iconFillWidth = 0.5;
  } else {
    iconFillWidth = 0;
  }
  const root = slot_exports.always(getIntrinsicElementProps("span", {
    ref: useMergedRefs(useFocusWithin(), ref),
    ...props
  }), {
    elementType: "span"
  });
  let unselectedIcon;
  if (iconFillWidth < 1) {
    unselectedIcon = slot_exports.always(props.unselectedIcon, {
      defaultProps: {
        children: appearance === "filled" ? React475.createElement(IconFilled, null) : React475.createElement(IconOutline, null),
        "aria-hidden": true
      },
      elementType: "div"
    });
  }
  let selectedIcon;
  if (iconFillWidth > 0) {
    selectedIcon = slot_exports.always(props.selectedIcon, {
      defaultProps: {
        children: React475.createElement(IconFilled, null),
        "aria-hidden": true
      },
      elementType: "div"
    });
  }
  let halfValueInput;
  if (context.interactive && context.step === 0.5) {
    halfValueInput = slot_exports.always(props.halfValueInput, {
      defaultProps: {
        type: "radio",
        name: context.name,
        value: value - 0.5,
        checked: ratingValue === value - 0.5,
        "aria-label": itemLabel(value - 0.5),
        onChange: () => {
        }
      },
      elementType: "input"
    });
  }
  let fullValueInput;
  if (context.interactive) {
    fullValueInput = slot_exports.always(props.fullValueInput, {
      defaultProps: {
        type: "radio",
        name: context.name,
        value,
        checked: ratingValue === value,
        "aria-label": itemLabel(value),
        onChange: () => {
        }
      },
      elementType: "input"
    });
  }
  const state = {
    appearance,
    color: context.color,
    step: context.step,
    size: context.size,
    iconFillWidth,
    value,
    components: {
      root: "span",
      selectedIcon: "div",
      unselectedIcon: "div",
      halfValueInput: "input",
      fullValueInput: "input"
    },
    root,
    selectedIcon,
    unselectedIcon,
    halfValueInput,
    fullValueInput
  };
  return state;
};

// node_modules/@fluentui/react-rating/lib/components/RatingItem/renderRatingItem.js
var renderRatingItem_unstable = (state) => {
  assertSlots(state);
  return jsxs(state.root, {
    children: [
      state.halfValueInput && jsx(state.halfValueInput, {}),
      state.fullValueInput && jsx(state.fullValueInput, {}),
      state.unselectedIcon && jsx(state.unselectedIcon, {}),
      state.selectedIcon && jsx(state.selectedIcon, {})
    ]
  });
};

// node_modules/@fluentui/react-rating/lib/components/RatingItem/useRatingItemStyles.styles.js
var ratingItemClassNames = {
  root: "fui-RatingItem",
  selectedIcon: "fui-RatingItem__selectedIcon",
  unselectedIcon: "fui-RatingItem__unselectedIcon",
  halfValueInput: "fui-RatingItem__halfValueInput",
  fullValueInput: "fui-RatingItem__fullValueInput"
};
var useStyles57 = __styles2({
  root: {
    qhf8xq: "f10pi13n",
    Brovlpu: "ftqa4ok",
    B486eqv: "f2hkw1w",
    Bssx7fj: "f1b1k54r",
    uh7if5: ["f4ne723", "fqqcjud"],
    clntm0: "fh7aioi",
    Dlk2r6: ["fqqcjud", "f4ne723"],
    Bm3wd5j: "f1k55ka9",
    Bbrhkcr: ["fgclinu", "f16pcs8n"],
    f1oku: "fycbxed",
    aywvf2: ["f16pcs8n", "fgclinu"],
    B2j2mmj: "ffht0p2",
    wigs8: "f1p0ul1q",
    pbfy6t: "f1c901ms",
    B0v4ure: "f1alokd7",
    Byrf0fs: 0,
    Bsiemmq: 0,
    Bwckmig: 0,
    skfxo0: 0,
    Iidy0u: 0,
    B98u21t: 0,
    Bvwlmkc: 0,
    jo1ztg: 0,
    Ba1iezr: 0,
    Blmvk6g: 0,
    B24cy0v: 0,
    Bil7v7r: 0,
    Br3gin4: 0,
    nr063g: 0,
    ghq09: 0,
    Bbgo44z: 0,
    Bseh09z: "fmj8fco",
    az1dzo: 0,
    Ba3ybja: 0,
    B6352mv: 0,
    vppk2z: 0,
    Biaj6j7: "f1iwowo3",
    B2pnrqr: "f1spmvte",
    B29w5g4: ["fgp7k2s", "f13pb23"],
    Bhhzhcn: "f1ihbrwi",
    Bec0n69: ["f13pb23", "fgp7k2s"]
  },
  small: {
    Be2twd7: "f1ugzwwg",
    a9b677: "frx94fk",
    Bqenvij: "fvblgha"
  },
  medium: {
    Be2twd7: "f4ybsrx",
    a9b677: "fjw5fx7",
    Bqenvij: "fd461yt"
  },
  large: {
    Be2twd7: "fe5j1ua",
    a9b677: "f64fuq3",
    Bqenvij: "fjamq6b"
  },
  "extra-large": {
    Be2twd7: "f24l1pt",
    a9b677: "f1w9dchk",
    Bqenvij: "fxldao9"
  }
}, {
  d: [".f10pi13n{position:relative;}", ".f1b1k54r[data-fui-focus-within]:focus-within{border-top-color:transparent;}", ".f4ne723[data-fui-focus-within]:focus-within{border-right-color:transparent;}", ".fqqcjud[data-fui-focus-within]:focus-within{border-left-color:transparent;}", ".fh7aioi[data-fui-focus-within]:focus-within{border-bottom-color:transparent;}", '.ffht0p2[data-fui-focus-within]:focus-within::after{content:"";}', ".f1p0ul1q[data-fui-focus-within]:focus-within::after{position:absolute;}", ".f1c901ms[data-fui-focus-within]:focus-within::after{pointer-events:none;}", ".f1alokd7[data-fui-focus-within]:focus-within::after{z-index:1;}", [".fmj8fco[data-fui-focus-within]:focus-within::after{border:2px solid var(--colorStrokeFocus2);}", {
    p: -2
  }], [".f1iwowo3[data-fui-focus-within]:focus-within::after{border-radius:var(--borderRadiusMedium);}", {
    p: -1
  }], ".f1spmvte[data-fui-focus-within]:focus-within::after{top:calc(2px * -1);}", ".fgp7k2s[data-fui-focus-within]:focus-within::after{right:calc(2px * -1);}", ".f13pb23[data-fui-focus-within]:focus-within::after{left:calc(2px * -1);}", ".f1ihbrwi[data-fui-focus-within]:focus-within::after{bottom:calc(2px * -1);}", ".f1ugzwwg{font-size:12px;}", ".frx94fk{width:12px;}", ".fvblgha{height:12px;}", ".f4ybsrx{font-size:16px;}", ".fjw5fx7{width:16px;}", ".fd461yt{height:16px;}", ".fe5j1ua{font-size:20px;}", ".f64fuq3{width:20px;}", ".fjamq6b{height:20px;}", ".f24l1pt{font-size:28px;}", ".f1w9dchk{width:28px;}", ".fxldao9{height:28px;}"],
  f: [".ftqa4ok:focus{outline-style:none;}"],
  i: [".f2hkw1w:focus-visible{outline-style:none;}"],
  m: [["@media (forced-colors: active){.f1k55ka9[data-fui-focus-within]:focus-within::after{border-top-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f16pcs8n[data-fui-focus-within]:focus-within::after{border-left-color:Highlight;}.fgclinu[data-fui-focus-within]:focus-within::after{border-right-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fycbxed[data-fui-focus-within]:focus-within::after{border-bottom-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }]]
});
var useInputBaseClassName4 = __resetStyles("r1qfsv1p", "rh8pzaz", [".r1qfsv1p{position:absolute;left:0;top:0;right:0;bottom:0;box-sizing:border-box;margin:0;opacity:0;cursor:pointer;height:100%;}", ".rh8pzaz{position:absolute;right:0;top:0;left:0;bottom:0;box-sizing:border-box;margin:0;opacity:0;cursor:pointer;height:100%;}"]);
var useInputStyles7 = __styles2({
  lowerHalf: {
    j35jbq: ["ffenbu1", "f1ktbn1t"]
  },
  upperHalf: {
    oyh7mz: ["f1ktbn1t", "ffenbu1"]
  }
}, {
  d: [".ffenbu1{right:50%;}", ".f1ktbn1t{left:50%;}"]
});
var useIndicatorBaseClassName4 = __resetStyles("r1420l2m", "r1yt29v5", [".r1420l2m{display:flex;overflow:hidden;color:var(--colorNeutralForeground1);fill:currentColor;pointer-events:none;position:absolute;left:0;right:0;top:0;bottom:0;}", ".r1yt29v5{display:flex;overflow:hidden;color:var(--colorNeutralForeground1);fill:currentColor;pointer-events:none;position:absolute;right:0;left:0;top:0;bottom:0;}"]);
var useIndicatorStyles3 = __styles2({
  lowerHalf: {
    j35jbq: ["ffenbu1", "f1ktbn1t"],
    l5kjut: 0,
    uoufgc: 0,
    v39lw8: 0,
    Bbwb3tu: "f10jwh99"
  },
  upperHalf: {
    oyh7mz: ["f1ktbn1t", "ffenbu1"],
    Frg6f3: ["fbm7ezh", "f3ev47i"]
  },
  brand: {
    sj55zd: "f16muhyy"
  },
  marigold: {
    sj55zd: "f1whvut0"
  },
  filled: {
    sj55zd: "f1qaymga",
    ojy3ng: "f13qq9og",
    Bbusuzp: "f1cg6951",
    B6jmk37: "f1am6ztc"
  },
  brandFilled: {
    sj55zd: "f1kdv6iu"
  },
  marigoldFilled: {
    sj55zd: "f1ymbmfq"
  }
}, {
  d: [".ffenbu1{right:50%;}", ".f1ktbn1t{left:50%;}", [".f10jwh99>svg{flex:0 0 auto;}", {
    p: -1
  }], ".fbm7ezh{margin-left:-50%;}", ".f3ev47i{margin-right:-50%;}", ".f16muhyy{color:var(--colorBrandForeground1);}", ".f1whvut0{color:var(--colorPaletteMarigoldBorderActive);}", ".f1qaymga{color:var(--colorNeutralBackground6);}", ".f13qq9og{stroke:var(--colorTransparentStroke);}", ".f1kdv6iu{color:var(--colorBrandBackground2);}", ".f1ymbmfq{color:var(--colorPaletteMarigoldBackground2);}"],
  m: [["@media (forced-colors: active){.f1cg6951{color:Canvas;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1am6ztc{stroke:CanvasText;}}", {
    m: "(forced-colors: active)"
  }]]
});
var useRatingItemStyles_unstable = (state) => {
  "use no memo";
  const {
    color: color2,
    size,
    iconFillWidth,
    appearance
  } = state;
  const styles = useStyles57();
  const inputBaseClassName = useInputBaseClassName4();
  const inputStyles = useInputStyles7();
  const indicatorBaseClassName = useIndicatorBaseClassName4();
  const indicatorStyles = useIndicatorStyles3();
  state.root.className = mergeClasses(ratingItemClassNames.root, styles.root, styles[size], state.root.className);
  if (state.halfValueInput) {
    state.halfValueInput.className = mergeClasses(ratingItemClassNames.halfValueInput, inputBaseClassName, inputStyles.lowerHalf, state.halfValueInput.className);
  }
  if (state.fullValueInput) {
    state.fullValueInput.className = mergeClasses(ratingItemClassNames.fullValueInput, inputBaseClassName, state.halfValueInput && inputStyles.upperHalf, state.fullValueInput.className);
  }
  if (state.unselectedIcon) {
    state.unselectedIcon.className = mergeClasses(ratingItemClassNames.unselectedIcon, indicatorBaseClassName, appearance === "filled" && indicatorStyles.filled, color2 === "brand" && (appearance === "filled" ? indicatorStyles.brandFilled : indicatorStyles.brand), color2 === "marigold" && (appearance === "filled" ? indicatorStyles.marigoldFilled : indicatorStyles.marigold), iconFillWidth === 0.5 && indicatorStyles.upperHalf, state.unselectedIcon.className);
  }
  if (state.selectedIcon) {
    state.selectedIcon.className = mergeClasses(ratingItemClassNames.selectedIcon, indicatorBaseClassName, color2 === "brand" && indicatorStyles.brand, color2 === "marigold" && indicatorStyles.marigold, iconFillWidth === 0.5 && indicatorStyles.lowerHalf, state.selectedIcon.className);
  }
  return state;
};

// node_modules/@fluentui/react-rating/lib/components/RatingItem/RatingItem.js
var RatingItem = React476.forwardRef((props, ref) => {
  const state = useRatingItem_unstable(props, ref);
  useRatingItemStyles_unstable(state);
  return renderRatingItem_unstable(state);
});
RatingItem.displayName = "RatingItem";

// node_modules/@fluentui/react-rating/lib/components/Rating/useRating.js
var useRating_unstable = (props, ref) => {
  const generatedName = useId("rating-");
  const { color: color2 = "neutral", iconFilled = StarFilled, iconOutline = StarRegular, max = 5, name = generatedName, onChange, step = 1, size = "extra-large" } = props;
  const [value, setValue] = useControllableState({
    state: props.value,
    defaultState: props.defaultValue,
    initialState: 0
  });
  const isRatingRadioItem = (target) => isHTMLElement(target, {
    constructorName: "HTMLInputElement"
  }) && target.type === "radio" && target.name === name;
  const [hoveredValue, setHoveredValue] = React477.useState(void 0);
  const rootChildren = React477.useMemo(() => {
    return Array.from(Array(max), (_, i) => React477.createElement(RatingItem, {
      value: i + 1,
      key: i + 1
    }));
  }, [
    max
  ]);
  const state = {
    color: color2,
    iconFilled,
    iconOutline,
    name,
    step,
    size,
    value,
    hoveredValue,
    components: {
      root: "div"
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      ref,
      children: rootChildren,
      role: "radiogroup",
      ...props
    }, [
      "onChange"
    ]), {
      elementType: "div"
    })
  };
  state.root.onChange = (ev) => {
    if (isRatingRadioItem(ev.target)) {
      const newValue = parseFloat(ev.target.value);
      if (!isNaN(newValue)) {
        setValue(newValue);
        onChange === null || onChange === void 0 ? void 0 : onChange(ev, {
          type: "change",
          event: ev,
          value: newValue
        });
      }
    }
  };
  state.root.onMouseOver = mergeCallbacks(props.onMouseOver, (ev) => {
    if (isRatingRadioItem(ev.target)) {
      const newValue = parseFloat(ev.target.value);
      if (!isNaN(newValue)) {
        setHoveredValue(newValue);
      }
    }
  });
  state.root.onMouseLeave = mergeCallbacks(props.onMouseLeave, (ev) => {
    setHoveredValue(void 0);
  });
  return state;
};

// node_modules/@fluentui/react-rating/lib/components/Rating/renderRating.js
var renderRating_unstable = (state, contextValues) => {
  assertSlots(state);
  return jsx(RatingItemProvider, {
    value: contextValues.ratingItem,
    children: jsx(state.root, {})
  });
};

// node_modules/@fluentui/react-rating/lib/components/Rating/useRatingStyles.styles.js
var ratingClassNames = {
  root: "fui-Rating"
};
var useRootClassName6 = __resetStyles("r2imjyh", null, [".r2imjyh{display:flex;flex-wrap:wrap;}"]);
var useRatingStyles_unstable = (state) => {
  "use no memo";
  const rootClassName = useRootClassName6();
  state.root.className = mergeClasses(ratingClassNames.root, rootClassName, state.root.className);
  return state;
};

// node_modules/@fluentui/react-rating/lib/components/Rating/useRatingContextValues.js
var React478 = __toESM(require_react());
var useRatingContextValues = (ratingState) => {
  const { color: color2, hoveredValue, iconFilled, iconOutline, itemLabel, name, step, size, value } = ratingState;
  const ratingItem = React478.useMemo(() => ({
    color: color2,
    hoveredValue,
    iconFilled,
    iconOutline,
    interactive: true,
    itemLabel,
    name,
    step,
    size,
    value
  }), [
    color2,
    hoveredValue,
    iconFilled,
    iconOutline,
    itemLabel,
    name,
    step,
    size,
    value
  ]);
  return {
    ratingItem
  };
};

// node_modules/@fluentui/react-rating/lib/components/Rating/Rating.js
var Rating = React479.forwardRef((props, ref) => {
  const state = useRating_unstable(props, ref);
  const contextValues = useRatingContextValues(state);
  useRatingStyles_unstable(state);
  return renderRating_unstable(state, contextValues);
});
Rating.displayName = "Rating";

// node_modules/@fluentui/react-rating/lib/components/Rating/Rating.types.js
var React480 = __toESM(require_react());

// node_modules/@fluentui/react-rating/lib/components/RatingDisplay/RatingDisplay.js
var React483 = __toESM(require_react());

// node_modules/@fluentui/react-rating/lib/components/RatingDisplay/useRatingDisplay.js
var React481 = __toESM(require_react());
var useRatingDisplay_unstable = (props, ref) => {
  const { color: color2 = "neutral", count, compact = false, icon = StarFilled, max = 5, size = "medium", value } = props;
  const valueTextId = useId("rating-value-");
  const countTextId = useId("rating-count-");
  const rootChildren = React481.useMemo(() => {
    return compact ? React481.createElement(RatingItem, {
      value: 1,
      key: 1,
      "aria-hidden": true
    }) : Array.from(Array(max), (_, i) => React481.createElement(RatingItem, {
      value: i + 1,
      key: i + 1,
      "aria-hidden": true
    }));
  }, [
    compact,
    max
  ]);
  const state = {
    color: color2,
    compact,
    icon,
    max,
    size,
    value,
    components: {
      root: "div",
      valueText: "span",
      countText: "span"
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      ref,
      children: rootChildren,
      role: "img",
      ...props
    }), {
      elementType: "div"
    }),
    valueText: slot_exports.optional(props.valueText, {
      renderByDefault: value !== void 0,
      defaultProps: {
        children: value,
        id: valueTextId,
        "aria-hidden": true
      },
      elementType: "span"
    }),
    countText: slot_exports.optional(props.countText, {
      renderByDefault: count !== void 0,
      defaultProps: {
        children: count === null || count === void 0 ? void 0 : count.toLocaleString(),
        id: countTextId,
        "aria-hidden": true
      },
      elementType: "span"
    })
  };
  if (!state.root["aria-label"] && !state.root["aria-labelledby"]) {
    var _state_valueText, _state_countText;
    state.root["aria-labelledby"] = [
      (_state_valueText = state.valueText) === null || _state_valueText === void 0 ? void 0 : _state_valueText.id,
      (_state_countText = state.countText) === null || _state_countText === void 0 ? void 0 : _state_countText.id
    ].filter(Boolean).join(" ");
  }
  return state;
};

// node_modules/@fluentui/react-rating/lib/components/RatingDisplay/renderRatingDisplay.js
var renderRatingDisplay_unstable = (state, contextValues) => {
  assertSlots(state);
  return jsx(RatingItemProvider, {
    value: contextValues.ratingItem,
    children: jsxs(state.root, {
      children: [
        state.root.children,
        state.valueText && jsx(state.valueText, {}),
        state.countText && jsx(state.countText, {})
      ]
    })
  });
};

// node_modules/@fluentui/react-rating/lib/components/RatingDisplay/useRatingDisplayStyles.styles.js
var ratingDisplayClassNames = {
  root: "fui-RatingDisplay",
  valueText: "fui-RatingDisplay__valueText",
  countText: "fui-RatingDisplay__countText"
};
var useRootClassName7 = __resetStyles("rxxdqwu", null, [".rxxdqwu{display:flex;flex-wrap:wrap;align-items:center;}"]);
var useLabelClassName = __resetStyles("rkwnos5", "rwei36a", [".rkwnos5{color:var(--colorNeutralForeground1);margin-left:var(--spacingHorizontalXS);font-family:var(--fontFamilyBase);font-size:var(--fontSizeBase200);font-weight:var(--fontWeightRegular);line-height:var(--lineHeightBase200);}", ".rwei36a{color:var(--colorNeutralForeground1);margin-right:var(--spacingHorizontalXS);font-family:var(--fontFamilyBase);font-size:var(--fontSizeBase200);font-weight:var(--fontWeightRegular);line-height:var(--lineHeightBase200);}"]);
var useLabelStyles6 = __styles2({
  large: {
    Be2twd7: "fkhj508",
    Bg96gwp: "f1i3iumi",
    Frg6f3: ["f1t5qyk5", "f1ikr372"]
  },
  extraLarge: {
    Be2twd7: "fod5ikn",
    Bg96gwp: "faaz57k",
    Frg6f3: ["foyynoy", "f1vcna3q"]
  },
  strong: {
    Bhrd7zp: "fl43uef"
  },
  divider: {
    Ftih45: "f169p45e"
  }
}, {
  d: [".fkhj508{font-size:var(--fontSizeBase300);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}", ".f1t5qyk5{margin-left:var(--spacingHorizontalSNudge);}", ".f1ikr372{margin-right:var(--spacingHorizontalSNudge);}", ".fod5ikn{font-size:var(--fontSizeBase400);}", ".faaz57k{line-height:var(--lineHeightBase400);}", ".foyynoy{margin-left:var(--spacingHorizontalS);}", ".f1vcna3q{margin-right:var(--spacingHorizontalS);}", ".fl43uef{font-weight:var(--fontWeightSemibold);}", '.f169p45e::before{content:"· ";}']
});
var useRatingDisplayStyles_unstable = (state) => {
  "use no memo";
  const {
    size
  } = state;
  const rootClassName = useRootClassName7();
  state.root.className = mergeClasses(ratingDisplayClassNames.root, rootClassName, state.root.className);
  const labelClassName = useLabelClassName();
  const labelStyles = useLabelStyles6();
  if (state.valueText) {
    state.valueText.className = mergeClasses(ratingDisplayClassNames.valueText, labelClassName, labelStyles.strong, size === "large" && labelStyles.large, size === "extra-large" && labelStyles.extraLarge, state.valueText.className);
  }
  if (state.countText) {
    state.countText.className = mergeClasses(ratingDisplayClassNames.countText, labelClassName, size === "large" && labelStyles.large, size === "extra-large" && labelStyles.extraLarge, state.valueText && labelStyles.divider, state.countText.className);
  }
  return state;
};

// node_modules/@fluentui/react-rating/lib/components/RatingDisplay/useRatingDisplayContextValues.js
var React482 = __toESM(require_react());
var useRatingDisplayContextValues = (state) => {
  const { color: color2, compact, icon, size, value } = state;
  const ratingItem = React482.useMemo(() => ({
    color: color2,
    compact,
    iconFilled: icon,
    iconOutline: icon,
    interactive: false,
    step: 0.5,
    size,
    value
  }), [
    color2,
    compact,
    icon,
    size,
    value
  ]);
  return {
    ratingItem
  };
};

// node_modules/@fluentui/react-rating/lib/components/RatingDisplay/RatingDisplay.js
var RatingDisplay = React483.forwardRef((props, ref) => {
  const state = useRatingDisplay_unstable(props, ref);
  const contextValues = useRatingDisplayContextValues(state);
  useRatingDisplayStyles_unstable(state);
  return renderRatingDisplay_unstable(state, contextValues);
});
RatingDisplay.displayName = "RatingDisplay";

// node_modules/@fluentui/react-rating/lib/components/RatingDisplay/RatingDisplay.types.js
var React484 = __toESM(require_react());

// node_modules/@fluentui/react-search/lib/components/SearchBox/SearchBox.js
var React486 = __toESM(require_react());

// node_modules/@fluentui/react-search/lib/components/SearchBox/useSearchBox.js
var React485 = __toESM(require_react());
var useSearchBox_unstable = (props, ref) => {
  const { size = "medium", disabled = false, root, contentBefore, dismiss, contentAfter, value, defaultValue, ...inputProps } = props;
  const searchBoxRootRef = React485.useRef(null);
  const searchBoxRef = React485.useRef(null);
  const [internalValue, setInternalValue] = useControllableState({
    state: value,
    defaultState: defaultValue,
    initialState: ""
  });
  const [focused, setFocused] = React485.useState(false);
  const onFocus = React485.useCallback(() => {
    setFocused(true);
  }, [
    setFocused
  ]);
  const onBlur = React485.useCallback((ev) => {
    var _searchBoxRootRef_current;
    setFocused(!!((_searchBoxRootRef_current = searchBoxRootRef.current) === null || _searchBoxRootRef_current === void 0 ? void 0 : _searchBoxRootRef_current.contains(ev.relatedTarget)));
  }, [
    setFocused
  ]);
  const rootProps = slot_exports.resolveShorthand(root);
  const handleDismissClick = useEventCallback((event) => {
    var _props_onChange;
    if (isResolvedShorthand(dismiss)) {
      var _dismiss_onClick;
      (_dismiss_onClick = dismiss.onClick) === null || _dismiss_onClick === void 0 ? void 0 : _dismiss_onClick.call(dismiss, event);
    }
    const newValue = "";
    setInternalValue(newValue);
    (_props_onChange = props.onChange) === null || _props_onChange === void 0 ? void 0 : _props_onChange.call(props, event, {
      value: newValue
    });
  });
  const inputState = useInput_unstable({
    type: "search",
    disabled,
    size,
    value: internalValue,
    root: slot_exports.always({
      ...rootProps,
      ref: useMergedRefs(rootProps === null || rootProps === void 0 ? void 0 : rootProps.ref, searchBoxRootRef),
      onFocus: mergeCallbacks(rootProps === null || rootProps === void 0 ? void 0 : rootProps.onFocus, onFocus),
      onBlur: mergeCallbacks(rootProps === null || rootProps === void 0 ? void 0 : rootProps.onBlur, onBlur)
    }, {
      elementType: "span"
    }),
    contentBefore: slot_exports.optional(contentBefore, {
      renderByDefault: true,
      defaultProps: {
        children: React485.createElement(SearchRegular, null)
      },
      elementType: "span"
    }),
    contentAfter: slot_exports.optional(contentAfter, {
      renderByDefault: true,
      elementType: "span"
    }),
    ...inputProps,
    onChange: useEventCallback((ev) => {
      var _props_onChange;
      const newValue = ev.target.value;
      (_props_onChange = props.onChange) === null || _props_onChange === void 0 ? void 0 : _props_onChange.call(props, ev, {
        value: newValue
      });
      setInternalValue(newValue);
    })
  }, useMergedRefs(searchBoxRef, ref));
  const state = {
    ...inputState,
    components: {
      ...inputState.components,
      dismiss: "span"
    },
    dismiss: slot_exports.optional(dismiss, {
      defaultProps: {
        children: React485.createElement(DismissRegular, null),
        role: "button",
        "aria-label": "clear",
        tabIndex: -1
      },
      renderByDefault: true,
      elementType: "span"
    }),
    disabled,
    focused,
    size
  };
  if (state.dismiss) {
    state.dismiss.onClick = handleDismissClick;
  }
  return state;
};

// node_modules/@fluentui/react-search/lib/components/SearchBox/renderSearchBox.js
var renderSearchBox_unstable = (state) => {
  assertSlots(state);
  return jsxs(state.root, {
    children: [
      state.contentBefore && jsx(state.contentBefore, {}),
      jsx(state.input, {}),
      state.contentAfter && jsxs(state.contentAfter, {
        children: [
          state.contentAfter.children,
          state.dismiss && jsx(state.dismiss, {})
        ]
      })
    ]
  });
};

// node_modules/@fluentui/react-search/lib/components/SearchBox/useSearchBoxStyles.styles.js
var searchBoxClassNames = {
  root: "fui-SearchBox",
  dismiss: "fui-SearchBox__dismiss",
  contentAfter: "fui-SearchBox__contentAfter",
  contentBefore: "fui-SearchBox__contentBefore",
  input: "fui-SearchBox__input"
};
var useRootStyles23 = __styles2({
  small: {
    i8kkvl: "fjuset5",
    B2u0y6b: "f1xzfw5u",
    uwmqm3: ["fk8j09s", "fdw0yi8"],
    z189sj: ["fdw0yi8", "fk8j09s"]
  },
  medium: {
    i8kkvl: "fjuset5",
    B2u0y6b: "f1xzfw5u",
    uwmqm3: ["f1f5gg8d", "f1vdfbxk"],
    z189sj: ["f1vdfbxk", "f1f5gg8d"]
  },
  large: {
    i8kkvl: "fjuset5",
    B2u0y6b: "f1xzfw5u",
    uwmqm3: ["f1ng84yb", "f11gcy0p"],
    z189sj: ["f11gcy0p", "f1ng84yb"]
  },
  input: {
    uwmqm3: ["fk8j09s", "fdw0yi8"],
    z189sj: ["fhxju0i", "f1cnd47f"],
    Boqhc8c: "f18izjht",
    B8uat0v: "fcoa6sg"
  },
  unfocusedNoContentAfter: {
    z189sj: ["fhxju0i", "f1cnd47f"]
  }
}, {
  d: [".fjuset5{column-gap:0;}", ".f1xzfw5u{max-width:468px;}", ".fk8j09s{padding-left:var(--spacingHorizontalSNudge);}", ".fdw0yi8{padding-right:var(--spacingHorizontalSNudge);}", ".f1f5gg8d{padding-left:var(--spacingHorizontalS);}", ".f1vdfbxk{padding-right:var(--spacingHorizontalS);}", ".f1ng84yb{padding-left:var(--spacingHorizontalMNudge);}", ".f11gcy0p{padding-right:var(--spacingHorizontalMNudge);}", ".fhxju0i{padding-right:0;}", ".f1cnd47f{padding-left:0;}", ".f18izjht::-webkit-search-decoration{display:none;}", ".fcoa6sg::-webkit-search-cancel-button{display:none;}"]
});
var useInputStyles8 = __styles2({
  small: {
    z189sj: ["fdw0yi8", "fk8j09s"]
  },
  medium: {
    z189sj: ["f1vdfbxk", "f1f5gg8d"]
  },
  large: {
    z189sj: ["f11gcy0p", "f1ng84yb"]
  }
}, {
  d: [".fdw0yi8{padding-right:var(--spacingHorizontalSNudge);}", ".fk8j09s{padding-left:var(--spacingHorizontalSNudge);}", ".f1vdfbxk{padding-right:var(--spacingHorizontalS);}", ".f1f5gg8d{padding-left:var(--spacingHorizontalS);}", ".f11gcy0p{padding-right:var(--spacingHorizontalMNudge);}", ".f1ng84yb{padding-left:var(--spacingHorizontalMNudge);}"]
});
var useContentAfterStyles = __styles2({
  contentAfter: {
    uwmqm3: ["f1uw59to", "fw5db7e"],
    i8kkvl: "f1ufnopg"
  },
  rest: {
    abs64n: "fk73vx1",
    Bqenvij: "fniina8",
    a9b677: "f3tsq5r",
    uwmqm3: ["f1cnd47f", "fhxju0i"]
  }
}, {
  d: [".f1uw59to{padding-left:var(--spacingHorizontalM);}", ".fw5db7e{padding-right:var(--spacingHorizontalM);}", ".f1ufnopg{column-gap:var(--spacingHorizontalXS);}", ".fk73vx1{opacity:0;}", ".fniina8{height:0;}", ".f3tsq5r{width:0;}", ".f1cnd47f{padding-left:0;}", ".fhxju0i{padding-right:0;}"]
});
var useDismissClassName = __resetStyles("r1pvzcuu", null, [".r1pvzcuu{box-sizing:border-box;color:var(--colorNeutralForeground3);display:flex;cursor:pointer;}", ".r1pvzcuu>svg{font-size:20px;}"]);
var useDismissStyles = __styles2({
  disabled: {
    sj55zd: "f1s2aq7o"
  },
  small: {
    Duoase: "f3qv9w"
  },
  medium: {},
  large: {
    Duoase: "f16u2scb"
  }
}, {
  d: [".f1s2aq7o{color:var(--colorNeutralForegroundDisabled);}", ".f3qv9w>svg{font-size:16px;}", ".f16u2scb>svg{font-size:24px;}"]
});
var useSearchBoxStyles_unstable = (state) => {
  "use no memo";
  const {
    disabled,
    focused,
    size
  } = state;
  const rootStyles = useRootStyles23();
  const inputStyles = useInputStyles8();
  const contentAfterStyles = useContentAfterStyles();
  const dismissClassName = useDismissClassName();
  const dismissStyles = useDismissStyles();
  state.root.className = mergeClasses(searchBoxClassNames.root, rootStyles[size], !focused && rootStyles.unfocusedNoContentAfter, state.root.className);
  state.input.className = mergeClasses(searchBoxClassNames.input, rootStyles.input, !focused && inputStyles[size], state.input.className);
  if (state.dismiss) {
    state.dismiss.className = mergeClasses(searchBoxClassNames.dismiss, dismissClassName, disabled && dismissStyles.disabled, dismissStyles[size], state.dismiss.className);
  }
  if (state.contentBefore) {
    state.contentBefore.className = mergeClasses(searchBoxClassNames.contentBefore, state.contentBefore.className);
  }
  if (state.contentAfter) {
    state.contentAfter.className = mergeClasses(searchBoxClassNames.contentAfter, contentAfterStyles.contentAfter, !focused && contentAfterStyles.rest, state.contentAfter.className);
  } else if (state.dismiss) {
    state.dismiss.className = mergeClasses(state.dismiss.className, contentAfterStyles.contentAfter);
  }
  useInputStyles_unstable(state);
  return state;
};

// node_modules/@fluentui/react-search/lib/components/SearchBox/SearchBox.js
var SearchBox = React486.forwardRef((props, ref) => {
  const state = useSearchBox_unstable(props, ref);
  useSearchBoxStyles_unstable(state);
  return renderSearchBox_unstable(state);
});
SearchBox.displayName = "SearchBox";

// node_modules/@fluentui/react-search/lib/components/SearchBox/SearchBox.types.js
var React487 = __toESM(require_react());

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverHeader/TeachingPopoverHeader.js
var React489 = __toESM(require_react());

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverHeader/useTeachingPopoverHeader.js
var React488 = __toESM(require_react());
var useTeachingPopoverHeader_unstable = (props, ref) => {
  const { dismissButton, icon } = props;
  const setOpen = usePopoverContext_unstable((context) => context.setOpen);
  const triggerRef = usePopoverContext_unstable((context) => context.triggerRef);
  const appearance = usePopoverContext_unstable((context) => context.appearance);
  const onDismissButtonClick = useEventCallback((ev) => {
    if (!ev.defaultPrevented) {
      setOpen(ev, false);
    }
    if (triggerRef.current) {
      triggerRef.current.focus();
    }
  });
  return {
    appearance,
    components: {
      root: "h3",
      dismissButton: "button",
      icon: "div"
    },
    root: slot_exports.always(getIntrinsicElementProps("h3", {
      ref,
      ...props
    }), {
      elementType: "h3"
    }),
    icon: slot_exports.optional(icon, {
      renderByDefault: true,
      defaultProps: {
        children: React488.createElement(Lightbulb16Regular, null),
        "aria-hidden": true
      },
      elementType: "div"
    }),
    dismissButton: slot_exports.optional(dismissButton, {
      renderByDefault: true,
      defaultProps: {
        children: React488.createElement(Dismiss12Regular, null),
        role: "button",
        "aria-label": "dismiss",
        onClick: onDismissButtonClick
      },
      elementType: "button"
    })
  };
};

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverHeader/renderTeachingPopoverHeader.js
var renderTeachingPopoverHeader_unstable = (state) => {
  assertSlots(state);
  return jsxs(state.root, {
    children: [
      state.icon && jsx(state.icon, {}),
      state.root.children,
      state.dismissButton && jsx(state.dismissButton, {})
    ]
  });
};

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverHeader/useTeachingPopoverHeaderStyles.styles.js
var teachingPopoverHeaderClassNames = {
  root: "fui-TeachingPopoverHeader",
  dismissButton: "fui-TeachingPopoverHeader__dismissButton",
  icon: "fui-TeachingPopoverHeader__icon"
};
var useStyles58 = __styles2({
  root: {
    mc9l5x: "f22iagw",
    Beiy3e4: "f1063pyq",
    sj55zd: "f11d4kpn",
    Bhrd7zp: "fl43uef",
    Be2twd7: "fy9rknc",
    Bg96gwp: "fwrc4pm",
    Byoj8tv: "f14wxoun",
    Bt984gj: "f122n59",
    B6of3ja: "f1jkagg5",
    jrapky: "fi2ljxd"
  },
  rootBrand: {
    sj55zd: "f1phragk"
  },
  dismissButton: {
    sj55zd: "fkfq4zb",
    qhf8xq: "f10pi13n",
    Bgfg5da: 0,
    B9xav0g: 0,
    oivjwe: 0,
    Bn0qgzm: 0,
    B4g9neb: 0,
    zhjwy3: 0,
    wvpqe5: 0,
    ibv6hh: 0,
    u1mtju: 0,
    h3c5rm: 0,
    vrafjx: ["f1n71otn", "f1deefiw"],
    Bekrc4i: 0,
    i8vvqc: 0,
    g2u3we: 0,
    icvyot: 0,
    B4j52fo: 0,
    irswps: "f88035w",
    mc9l5x: "f22iagw",
    Bt984gj: "f122n59",
    Bceei9c: "f1k6fduh",
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "figsok6",
    Bg96gwp: "f1i3iumi",
    De3pzq: "f1c21dwh",
    B7ck84d: "f1ewtqcl",
    B7oj6ja: ["f3fg2lr", "f13av6d4"],
    Bbmb7ep: ["fzi6hpg", "fyowgf4"],
    Jyy4pa: "f1lfeew",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f16d74zd",
    Bfpq7zp: 0,
    g9k6zt: 0,
    Bn4voq9: 0,
    giviqs: "f89hs3r",
    Bw81rd7: 0,
    kdpuga: 0,
    dm238s: 0,
    B6xbmo0: 0,
    B3whbx2: "f2krc9w",
    B8q5s1w: "f8hki3x",
    Bci5o5g: ["f1d2448m", "ffh67wi"],
    n8qw10: "f1bjia2o",
    Bdrgwmp: ["ffh67wi", "f1d2448m"]
  },
  dismissBrand: {
    sj55zd: "f1phragk"
  },
  icon: {
    Bqenvij: "fsv12xs",
    a9b677: "f19bqwv",
    Bg96gwp: "fwrc4pm",
    Be2twd7: "fy9rknc",
    Bt984gj: "f122n59",
    B7ck84d: "f1e4lqlz",
    mc9l5x: "ftuwxu6",
    Brf1p80: "f4d9j23",
    w71qe1: "f1iuv45f",
    ha4doy: "fmrv4ls",
    qhf8xq: "f10pi13n",
    De3pzq: "f1c21dwh",
    sj55zd: "fkfq4zb",
    Bokbzmb: "fpvr8q1"
  },
  iconBrand: {
    sj55zd: "f1phragk"
  }
}, {
  d: [".f22iagw{display:flex;}", ".f1063pyq{flex-direction:row;}", ".f11d4kpn{color:var(--colorNeutralForeground3);}", ".fl43uef{font-weight:var(--fontWeightSemibold);}", ".fy9rknc{font-size:var(--fontSizeBase200);}", ".fwrc4pm{line-height:var(--lineHeightBase200);}", ".f14wxoun{padding-bottom:var(--spacingVerticalXS);}", ".f122n59{align-items:center;}", ".f1jkagg5{margin-top:var(--spacingHorizontalNone);}", ".fi2ljxd{margin-bottom:var(--spacingHorizontalNone);}", ".f1phragk{color:var(--colorNeutralForegroundOnBrand);}", ".fkfq4zb{color:var(--colorNeutralForeground2);}", ".f10pi13n{position:relative;}", [".f88035w{border:var(--strokeWidthThin) solid var(--colorTransparentStroke);}", {
    p: -2
  }], ".f1k6fduh{cursor:pointer;}", ".fk6fouc{font-family:var(--fontFamilyBase);}", ".fkhj508{font-size:var(--fontSizeBase300);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}", ".f1c21dwh{background-color:var(--colorTransparentBackground);}", ".f1ewtqcl{box-sizing:border-box;}", ".f3fg2lr{border-top-right-radius:var(--borderRadiusNone);}", ".f13av6d4{border-top-left-radius:var(--borderRadiusNone);}", ".fzi6hpg{border-bottom-right-radius:var(--borderRadiusNone);}", ".fyowgf4{border-bottom-left-radius:var(--borderRadiusNone);}", ".f1n71otn{border-right-style:none;}", ".f1deefiw{border-left-style:none;}", ".f1lfeew{-webkit-margin-start:auto;margin-inline-start:auto;}", [".f16d74zd{padding:var(--spacingVerticalXS) var(--spacingHorizontalXS);}", {
    p: -1
  }], [".f89hs3r[data-fui-focus-visible]{outline:var(--strokeWidthThick) solid var(--colorStrokeFocus2);}", {
    p: -1
  }], [".f2krc9w[data-fui-focus-visible]{border-radius:var(--borderRadiusMedium);}", {
    p: -1
  }], ".f8hki3x[data-fui-focus-visible]{border-top-color:transparent;}", ".f1d2448m[data-fui-focus-visible]{border-right-color:transparent;}", ".ffh67wi[data-fui-focus-visible]{border-left-color:transparent;}", ".f1bjia2o[data-fui-focus-visible]{border-bottom-color:transparent;}", ".fsv12xs{height:var(--fontSizeBase200);}", ".f19bqwv{width:var(--fontSizeBase200);}", ".f1e4lqlz{box-sizing:content-box;}", ".ftuwxu6{display:inline-flex;}", ".f4d9j23{justify-content:center;}", ".f1iuv45f{text-decoration-line:none;}", ".fmrv4ls{vertical-align:middle;}", ".fpvr8q1{-webkit-margin-end:var(--spacingHorizontalXS);margin-inline-end:var(--spacingHorizontalXS);}"]
});
var useTeachingPopoverHeaderStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles58();
  const {
    appearance
  } = state;
  state.root.className = mergeClasses(teachingPopoverHeaderClassNames.root, styles.root, appearance === "brand" && styles.rootBrand, state.root.className);
  if (state.dismissButton) {
    state.dismissButton.className = mergeClasses(teachingPopoverHeaderClassNames.dismissButton, styles.dismissButton, appearance === "brand" ? styles.dismissBrand : void 0, state.dismissButton.className);
  }
  if (state.icon) {
    state.icon.className = mergeClasses(teachingPopoverHeaderClassNames.icon, styles.icon, appearance === "brand" ? styles.iconBrand : void 0, state.icon.className);
  }
  return state;
};

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverHeader/TeachingPopoverHeader.js
var TeachingPopoverHeader = React489.forwardRef((props, ref) => {
  const state = useTeachingPopoverHeader_unstable(props, ref);
  useTeachingPopoverHeaderStyles_unstable(state);
  useCustomStyleHook("useTeachingPopoverHeaderStyles_unstable")(state);
  return renderTeachingPopoverHeader_unstable(state);
});
TeachingPopoverHeader.displayName = "TeachingPopoverHeader";

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverBody/TeachingPopoverBody.js
var React491 = __toESM(require_react());

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverBody/useTeachingPopoverBody.js
var React490 = __toESM(require_react());
var useTeachingPopoverBody_unstable = (props, ref) => {
  const { mediaLength } = props;
  return {
    components: {
      root: "div",
      media: "span"
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      ref,
      ...props
    }), {
      elementType: "div"
    }),
    media: slot_exports.optional(props.media, {
      elementType: "span"
    }),
    mediaLength: mediaLength !== null && mediaLength !== void 0 ? mediaLength : "short"
  };
};

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverBody/renderTeachingPopoverBody.js
var renderTeachingPopoverBody_unstable = (state) => {
  assertSlots(state);
  return jsxs(state.root, {
    children: [
      state.media && jsx(state.media, {}),
      state.root.children
    ]
  });
};

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverBody/useTeachingPopoverBodyStyles.styles.js
var teachingPopoverBodyClassNames = {
  root: "fui-TeachingPopoverBody",
  media: "fui-TeachingPopoverBody__media"
};
var useMediaStyles2 = __styles2({
  base: {
    Bw0ie65: 0,
    Br312pm: 0,
    nk6f5a: 0,
    Ijaq50: 0,
    Bq1tomu: "fujjg13",
    B68tc82: 0,
    Bmxbyg5: 0,
    Bpg54ce: "f1a3p1vp",
    a9b677: "f14z66ap",
    jrapky: "f1jlhsmd",
    ha4doy: "fmrv4ls",
    Brf1p80: "f4d9j23",
    mc9l5x: "f22iagw"
  },
  short: {
    Bubjx69: "f1taewuw",
    Bmuttt3: "fs5pxn9"
  },
  medium: {
    Bubjx69: "f7da563",
    Bmuttt3: "f98prui"
  },
  tall: {
    Bubjx69: "f9ikmtg",
    Bmuttt3: "fqws08j"
  }
}, {
  d: [[".fujjg13{grid-area:media;}", {
    p: -1
  }], [".f1a3p1vp{overflow:hidden;}", {
    p: -1
  }], ".f14z66ap{width:auto;}", ".f1jlhsmd{margin-bottom:12px;}", ".fmrv4ls{vertical-align:middle;}", ".f4d9j23{justify-content:center;}", ".f22iagw{display:flex;}", ".f1taewuw{aspect-ratio:2.4615384615384617;}", ".f7da563{aspect-ratio:1.6363636363636365;}", ".f9ikmtg{aspect-ratio:1;}"],
  t: ["@supports not (aspect-ratio){.fs5pxn9{height:117px;}}", "@supports not (aspect-ratio){.f98prui{height:176px;}}", "@supports not (aspect-ratio){.fqws08j{height:288px;}}"]
});
var useStyles59 = __styles2({
  root: {
    mc9l5x: "f22iagw",
    Beiy3e4: "f1vx9l62",
    Byoj8tv: "fpe6lb7"
  }
}, {
  d: [".f22iagw{display:flex;}", ".f1vx9l62{flex-direction:column;}", ".fpe6lb7{padding-bottom:12px;}"]
});
var useTeachingPopoverBodyStyles_unstable = (state) => {
  "use no memo";
  const {
    mediaLength
  } = state;
  const styles = useStyles59();
  const mediaStyles = useMediaStyles2();
  state.root.className = mergeClasses(teachingPopoverBodyClassNames.root, styles.root, state.root.className);
  if (state.media) {
    state.media.className = mergeClasses(teachingPopoverBodyClassNames.media, mediaStyles.base, mediaStyles[mediaLength], state.media.className);
  }
  return state;
};

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverBody/TeachingPopoverBody.js
var TeachingPopoverBody = React491.forwardRef((props, ref) => {
  const state = useTeachingPopoverBody_unstable(props, ref);
  useTeachingPopoverBodyStyles_unstable(state);
  useCustomStyleHook("useTeachingPopoverBodyStyles_unstable")(state);
  return renderTeachingPopoverBody_unstable(state);
});
TeachingPopoverBody.displayName = "TeachingPopoverBody";

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarouselCard/TeachingPopoverCarouselCard.js
var React499 = __toESM(require_react());

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarouselCard/useTeachingPopoverCarouselCard.js
var React498 = __toESM(require_react());

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarousel/Carousel/CarouselItem/Carouseltem.js
var React497 = __toESM(require_react());

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarousel/Carousel/CarouselItem/useCarouselItem.js
var React496 = __toESM(require_react());

// node_modules/@fluentui/react-teaching-popover/node_modules/@fluentui/react-context-selector/lib/createContext.js
var React492 = __toESM(require_react());
var import_scheduler12 = __toESM(require_scheduler12());
var createProvider12 = (Original) => {
  const Provider2 = (props) => {
    const valueRef = React492.useRef(props.value);
    const versionRef = React492.useRef(0);
    const contextValue = React492.useRef();
    if (!contextValue.current) {
      contextValue.current = {
        value: valueRef,
        version: versionRef,
        listeners: []
      };
    }
    useIsomorphicLayoutEffect(() => {
      valueRef.current = props.value;
      versionRef.current += 1;
      (0, import_scheduler12.unstable_runWithPriority)(import_scheduler12.unstable_NormalPriority, () => {
        contextValue.current.listeners.forEach((listener) => {
          listener([
            versionRef.current,
            props.value
          ]);
        });
      });
    }, [
      props.value
    ]);
    return React492.createElement(Original, {
      value: contextValue.current
    }, props.children);
  };
  if (true) {
    Provider2.displayName = "ContextSelector.Provider";
  }
  return Provider2;
};
var createContext53 = (defaultValue) => {
  const context = React492.createContext({
    value: {
      current: defaultValue
    },
    version: {
      current: -1
    },
    listeners: []
  });
  context.Provider = createProvider12(context.Provider);
  delete context.Consumer;
  return context;
};

// node_modules/@fluentui/react-teaching-popover/node_modules/@fluentui/react-context-selector/lib/useContextSelector.js
var React493 = __toESM(require_react());
var useContextSelector12 = (context, selector) => {
  const contextValue = React493.useContext(context);
  const { value: { current: value }, version: { current: version }, listeners } = contextValue;
  const selected = selector(value);
  const [state, setState] = React493.useState([
    value,
    selected
  ]);
  const dispatch = (payload) => {
    setState((prevState) => {
      if (!payload) {
        return [
          value,
          selected
        ];
      }
      if (payload[0] <= version) {
        if (Object.is(prevState[1], selected)) {
          return prevState;
        }
        return [
          value,
          selected
        ];
      }
      try {
        if (Object.is(prevState[0], payload[1])) {
          return prevState;
        }
        const nextSelected = selector(payload[1]);
        if (Object.is(prevState[1], nextSelected)) {
          return prevState;
        }
        return [
          payload[1],
          nextSelected
        ];
      } catch (e) {
      }
      return [
        prevState[0],
        prevState[1]
      ];
    });
  };
  if (!Object.is(state[1], selected)) {
    dispatch(void 0);
  }
  const stableDispatch = useEventCallback(dispatch);
  useIsomorphicLayoutEffect(() => {
    listeners.push(stableDispatch);
    return () => {
      const index = listeners.indexOf(stableDispatch);
      listeners.splice(index, 1);
    };
  }, [
    stableDispatch,
    listeners
  ]);
  return state[1];
};

// node_modules/@fluentui/react-teaching-popover/node_modules/@fluentui/react-context-selector/lib/useHasParentContext.js
var React494 = __toESM(require_react());

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarousel/Carousel/CarouselContext.js
var React495 = __toESM(require_react());

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarousel/Carousel/createCarouselStore.js
var createCarouselStore = () => {
  let values2 = [];
  let listeners = [];
  const carouselStore = {
    clear() {
      values2 = [];
      emitChange();
    },
    addValue(value) {
      values2 = [
        ...values2,
        value
      ];
      emitChange();
    },
    insertValue(value, prev) {
      if (!prev) {
        values2 = [
          value,
          ...values2
        ];
      } else {
        const pos = values2.indexOf(prev);
        values2.splice(pos + 1, 0, value);
        values2 = [
          ...values2
        ];
      }
      emitChange();
    },
    removeValue(value) {
      const pos = values2.indexOf(value);
      values2.splice(pos, 1);
      values2 = [
        ...values2
      ];
      emitChange();
    },
    subscribe(listener) {
      listeners = [
        ...listeners,
        listener
      ];
      return () => {
        listeners = listeners.filter((l) => l !== listener);
      };
    },
    getSnapshot() {
      return values2;
    }
  };
  function emitChange() {
    for (const listener of listeners) {
      listener();
    }
  }
  return carouselStore;
};

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarousel/Carousel/CarouselContext.js
var carouselContextDefaultValue = {
  store: createCarouselStore(),
  value: null,
  selectPageByDirection: () => {
  },
  selectPageByValue: () => {
  }
};
var CarouselContext = createContext53(void 0);
var CarouselProvider = CarouselContext.Provider;
var useCarouselContext_unstable = (selector) => useContextSelector12(CarouselContext, (ctx = carouselContextDefaultValue) => selector(ctx));

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarousel/Carousel/constants.js
var CAROUSEL_ITEM = "data-carousel-item";
var CAROUSEL_ACTIVE_ITEM = "data-carousel-active-item";

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarousel/Carousel/CarouselItem/useCarouselItem.js
var useCarouselItem_unstable = (props, ref) => {
  const { value } = props;
  const visible = useCarouselContext_unstable((c) => c.value === value);
  const state = {
    value,
    visible,
    components: {
      root: "div"
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      ref,
      [CAROUSEL_ITEM]: value,
      [CAROUSEL_ACTIVE_ITEM]: visible,
      hidden: !visible,
      ...props
    }), {
      elementType: "div"
    })
  };
  if (!visible) {
    state.root.children = null;
  }
  return state;
};

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarousel/Carousel/CarouselItem/renderCarouselItem.js
var renderCarouselItem_unstable = (state) => {
  assertSlots(state);
  return jsx(state.root, {});
};

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarousel/Carousel/CarouselItem/Carouseltem.js
var CarouselItem = React497.forwardRef((props, ref) => {
  const state = useCarouselItem_unstable(props, ref);
  return renderCarouselItem_unstable(state);
});
CarouselItem.displayName = "CarouselItem";

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarouselCard/useTeachingPopoverCarouselCard.js
var useTeachingPopoverCarouselCard_unstable = (props, ref) => {
  const { value } = props;
  return {
    value,
    components: {
      root: CarouselItem
    },
    root: slot_exports.always({
      ...getIntrinsicElementProps("div", {
        ref,
        ...props
      }),
      value
    }, {
      elementType: CarouselItem
    })
  };
};

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarouselCard/renderTeachingPopoverCarouselCard.js
var renderTeachingPopoverCarouselCard_unstable = (state) => {
  assertSlots(state);
  return jsx(state.root, {});
};

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarouselCard/useTeachingPopoverCarouselCardStyles.styles.js
var teachingPopoverCarouselCardClassNames = {
  root: "fui-TeachingPopoverCarouselCard"
};
var useStyles60 = __styles2({
  root: {}
}, {});
var useTeachingPopoverCarouselCardStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles60();
  state.root.className = mergeClasses(teachingPopoverCarouselCardClassNames.root, styles.root, state.root.className);
  return state;
};

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarouselCard/TeachingPopoverCarouselCard.js
var TeachingPopoverCarouselCard = React499.forwardRef((props, ref) => {
  const state = useTeachingPopoverCarouselCard_unstable(props, ref);
  useTeachingPopoverCarouselCardStyles_unstable(state);
  return renderTeachingPopoverCarouselCard_unstable(state);
});
TeachingPopoverCarouselCard.displayName = "TeachingPopoverCarouselCard";

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarousel/TeachingPopoverCarousel.js
var React503 = __toESM(require_react());

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarousel/useTeachingPopoverCarousel.js
var React502 = __toESM(require_react());

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarousel/Carousel/Carousel.js
var React501 = __toESM(require_react());

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarousel/Carousel/useCarouselWalker.js
var React500 = __toESM(require_react());
var useCarouselWalker_unstable = () => {
  const { targetDocument } = useFluent();
  const treeWalkerRef = React500.useRef(targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.createTreeWalker(targetDocument.body));
  const htmlRef = React500.useRef(null);
  const ref = React500.useCallback((el) => {
    if (!targetDocument) {
      return;
    }
    if (!el) {
      return;
    }
    htmlRef.current = el;
    treeWalkerRef.current = targetDocument.createTreeWalker(el, NodeFilter.SHOW_ELEMENT, {
      acceptNode(node) {
        if (!isHTMLElement(node)) {
          return NodeFilter.FILTER_SKIP;
        }
        return node.hasAttribute(CAROUSEL_ITEM) ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;
      }
    });
  }, [
    targetDocument
  ]);
  return {
    ref,
    walker: React500.useMemo(() => ({
      active() {
        if (!htmlRef.current) {
          return null;
        }
        const activeEl = htmlRef.current.querySelector(`[${CAROUSEL_ACTIVE_ITEM}="true"]`);
        if (isHTMLElement(activeEl)) {
          return {
            el: activeEl,
            value: activeEl.getAttribute(CAROUSEL_ITEM)
          };
        }
        return null;
      },
      find(value) {
        var _treeWalkerRef_current;
        if (!((_treeWalkerRef_current = treeWalkerRef.current) === null || _treeWalkerRef_current === void 0 ? void 0 : _treeWalkerRef_current.currentNode) || !htmlRef.current) {
          return null;
        }
        treeWalkerRef.current.currentNode = htmlRef.current;
        let nextNode = null;
        while (nextNode = treeWalkerRef.current.nextNode()) {
          if (!isHTMLElement(nextNode)) {
            continue;
          }
          if (nextNode.getAttribute(CAROUSEL_ITEM) === value) {
            return {
              el: nextNode,
              value: nextNode.getAttribute(CAROUSEL_ITEM)
            };
          }
        }
        return null;
      },
      nextPage(value) {
        var _treeWalkerRef_current;
        const res = this.find(value);
        if (!res || !((_treeWalkerRef_current = treeWalkerRef.current) === null || _treeWalkerRef_current === void 0 ? void 0 : _treeWalkerRef_current.currentNode)) {
          return null;
        }
        treeWalkerRef.current.currentNode = res.el;
        const next = treeWalkerRef.current.nextNode();
        if (isHTMLElement(next)) {
          return {
            el: next,
            value: next.getAttribute(CAROUSEL_ITEM)
          };
        }
        return null;
      },
      prevPage(value) {
        var _treeWalkerRef_current;
        const res = this.find(value);
        if (!res || !((_treeWalkerRef_current = treeWalkerRef.current) === null || _treeWalkerRef_current === void 0 ? void 0 : _treeWalkerRef_current.currentNode)) {
          return null;
        }
        treeWalkerRef.current.currentNode = res.el;
        const next = treeWalkerRef.current.previousNode();
        if (isHTMLElement(next)) {
          return {
            el: next,
            value: next.getAttribute(CAROUSEL_ITEM)
          };
        }
        return null;
      }
    }), [])
  };
};

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarousel/Carousel/Carousel.js
function useCarousel_unstable(options) {
  "use no memo";
  const { onValueChange, onFinish } = options;
  const { targetDocument } = useFluent();
  const win = targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.defaultView;
  const { ref: carouselRef, walker: carouselWalker } = useCarouselWalker_unstable();
  const [store] = React501.useState(() => createCarouselStore());
  const [value, setValue] = useControllableState({
    defaultState: options.defaultValue,
    state: options.value,
    initialState: null
  });
  const rootRef = React501.useRef(null);
  if (true) {
    React501.useEffect(() => {
      if (value === null) {
        console.error("useCarousel: Carousel needs to have a `defaultValue` or `value` prop set. If you want to control the value, use the `value` prop.");
      }
    }, [
      value
    ]);
  }
  React501.useEffect(() => {
    var _rootRef_current;
    const allItems = (_rootRef_current = rootRef.current) === null || _rootRef_current === void 0 ? void 0 : _rootRef_current.querySelectorAll(`[${CAROUSEL_ITEM}]`);
    for (let i = 0; i < allItems.length; i++) {
      store.addValue(allItems.item(i).getAttribute(CAROUSEL_ITEM));
    }
    return () => {
      store.clear();
    };
  }, [
    store
  ]);
  React501.useEffect(() => {
    if (!win) {
      return;
    }
    const config = {
      attributes: true,
      attributeFilter: [
        CAROUSEL_ITEM
      ],
      childList: true,
      subtree: true
    };
    const callback = (mutationList) => {
      for (const mutation of mutationList) {
        for (const addedNode of Array.from(mutation.addedNodes)) {
          if (isHTMLElement(addedNode) && addedNode.hasAttribute(CAROUSEL_ITEM)) {
            const newValue = addedNode.getAttribute(CAROUSEL_ITEM);
            const newNode = carouselWalker.find(newValue);
            if (!(newNode === null || newNode === void 0 ? void 0 : newNode.value)) {
              return;
            }
            const previousNode = carouselWalker.prevPage(newNode === null || newNode === void 0 ? void 0 : newNode.value);
            var _previousNode_value;
            store.insertValue(newValue, (_previousNode_value = previousNode === null || previousNode === void 0 ? void 0 : previousNode.value) !== null && _previousNode_value !== void 0 ? _previousNode_value : null);
          }
        }
        for (const removedNode of Array.from(mutation.removedNodes)) {
          if (isHTMLElement(removedNode) && (removedNode === null || removedNode === void 0 ? void 0 : removedNode.hasAttribute(CAROUSEL_ITEM))) {
            const removedValue = removedNode.getAttribute(CAROUSEL_ITEM);
            store.removeValue(removedValue);
          }
        }
      }
    };
    const observer = new win.MutationObserver(callback);
    observer.observe(rootRef.current, config);
    return () => {
      observer.disconnect();
    };
  }, [
    carouselWalker,
    store,
    win
  ]);
  const selectPageByDirection = useEventCallback((event, direction) => {
    const active = carouselWalker.active();
    if (!(active === null || active === void 0 ? void 0 : active.value)) {
      return;
    }
    const newPage = direction === "prev" ? carouselWalker.prevPage(active.value) : carouselWalker.nextPage(active.value);
    if (newPage) {
      setValue(newPage === null || newPage === void 0 ? void 0 : newPage.value);
      onValueChange === null || onValueChange === void 0 ? void 0 : onValueChange(event, {
        event,
        type: "click",
        value: newPage === null || newPage === void 0 ? void 0 : newPage.value
      });
    } else {
      onFinish === null || onFinish === void 0 ? void 0 : onFinish(event, {
        event,
        type: "click",
        value: active === null || active === void 0 ? void 0 : active.value
      });
    }
  });
  const selectPageByValue = useEventCallback((event, _value) => {
    setValue(_value);
    onValueChange === null || onValueChange === void 0 ? void 0 : onValueChange(event, {
      event,
      type: "click",
      value: _value
    });
  });
  return {
    carouselRef: useMergedRefs(rootRef, carouselRef),
    carousel: {
      store,
      value,
      selectPageByDirection,
      selectPageByValue
    }
  };
}

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarousel/useTeachingPopoverCarousel.js
var useTeachingPopoverCarousel_unstable = (props, ref) => {
  const toggleOpen = usePopoverContext_unstable((c) => c.toggleOpen);
  const handleFinish = useEventCallback((event, data) => {
    var _props_onFinish;
    (_props_onFinish = props.onFinish) === null || _props_onFinish === void 0 ? void 0 : _props_onFinish.call(props, event, data);
    toggleOpen(event);
  });
  const { carousel, carouselRef } = useCarousel_unstable({
    defaultValue: props.defaultValue,
    value: props.value,
    onValueChange: props.onValueChange,
    onFinish: handleFinish
  });
  const appearance = usePopoverContext_unstable((context) => context.appearance);
  return {
    appearance,
    components: {
      root: "div"
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      ref: useMergedRefs(ref, carouselRef),
      ...props
    }), {
      elementType: "div"
    }),
    ...carousel
  };
};

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarousel/renderTeachingPopoverCarousel.js
var renderTeachingPopoverCarousel_unstable = (state, contextValues) => {
  assertSlots(state);
  return jsx(CarouselProvider, {
    value: contextValues.carousel,
    children: jsx(state.root, {})
  });
};

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarousel/useTeachingPopoverCarouselStyles.styles.js
var teachingPopoverCarouselClassNames = {
  root: "fui-TeachingPopoverCarousel"
};
var useStyles61 = __styles2({
  root: {}
}, {});
var useTeachingPopoverCarouselStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles61();
  state.root.className = mergeClasses(teachingPopoverCarouselClassNames.root, styles.root, state.root.className);
  return state;
};

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarousel/useTeachingPopoverCarouselContextValues.js
function useTeachingPopoverCarouselContextValues_unstable(state) {
  const { store, value, selectPageByValue, selectPageByDirection } = state;
  const carousel = {
    store,
    value,
    selectPageByDirection,
    selectPageByValue
  };
  return {
    carousel
  };
}

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarousel/TeachingPopoverCarousel.js
var TeachingPopoverCarousel = React503.forwardRef((props, ref) => {
  const state = useTeachingPopoverCarousel_unstable(props, ref);
  useTeachingPopoverCarouselStyles_unstable(state);
  useCustomStyleHook("useTeachingPopoverCarouselStyles_unstable")(state);
  const contextValues = useTeachingPopoverCarouselContextValues_unstable(state);
  return renderTeachingPopoverCarousel_unstable(state, contextValues);
});
TeachingPopoverCarousel.displayName = "TeachingPopoverCarousel";

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarouselFooter/TeachingPopoverCarouselFooter.js
var React507 = __toESM(require_react());

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarouselFooter/useTeachingPopoverCarouselFooter.js
var React506 = __toESM(require_react());

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarouselFooterButton/TeachingPopoverCarouselFooterButton.js
var React505 = __toESM(require_react());

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarouselFooterButton/useTeachingPopoverCarouselFooterButton.js
var React504 = __toESM(require_react());

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarousel/Carousel/useCarouselValues.js
var import_shim = __toESM(require_shim());
function useCarouselValues_unstable(getSnapshot) {
  const store = useCarouselContext_unstable((c) => c.store);
  return (0, import_shim.useSyncExternalStore)(store.subscribe, () => getSnapshot(store.getSnapshot()));
}

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarouselFooterButton/useTeachingPopoverCarouselFooterButton.js
var useTeachingPopoverCarouselFooterButton_unstable = (props, ref) => {
  const { navType, altText } = props;
  const popoverAppearance = usePopoverContext_unstable((context) => context.appearance);
  const selectPageByDirection = useCarouselContext_unstable((c) => c.selectPageByDirection);
  const values2 = useCarouselValues_unstable((snapshot) => snapshot);
  const activeValue = useCarouselContext_unstable((c) => c.value);
  const handleClick = (event) => {
    if (event.isDefaultPrevented()) {
      return;
    }
    selectPageByDirection(event, navType);
  };
  const handleButtonClick = useEventCallback(mergeCallbacks(handleClick, props.onClick));
  const isTrailing = React504.useMemo(() => {
    if (!activeValue) {
      return false;
    }
    if (navType === "prev") {
      return values2.indexOf(activeValue) === 0;
    }
    return values2.indexOf(activeValue) === values2.length - 1;
  }, [
    navType,
    activeValue,
    values2
  ]);
  let buttonAppearanceType;
  if (navType === "next") {
    buttonAppearanceType = popoverAppearance === "brand" ? void 0 : "primary";
  } else {
    buttonAppearanceType = popoverAppearance === "brand" ? "outline" : void 0;
  }
  let buttonChild = props.children;
  if (isTrailing) {
    buttonChild = altText;
  }
  return {
    ...useButton_unstable({
      appearance: buttonAppearanceType,
      ...props
    }, ref),
    navType,
    popoverAppearance,
    altText,
    // Override useButton root slot
    root: slot_exports.always(getIntrinsicElementProps("button", {
      ref,
      appearance: buttonAppearanceType,
      ...props,
      onClick: handleButtonClick,
      children: buttonChild
    }), {
      elementType: "button"
    })
  };
};

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarouselFooterButton/renderTeachingPopoverCarouselFooterButton.js
var renderTeachingPopoverCarouselFooterButton_unstable = (state) => {
  assertSlots(state);
  return jsx(state.root, {});
};

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarouselFooterButton/useTeachingPopoverCarouselFooterButtonStyles.styles.js
var teachingPopoverCarouselFooterButtonClassNames = {
  root: "fui-TeachingPopoverCarouselFooterButton"
};
var useStyles62 = __styles2({
  root: {
    Bf4jedk: "f14es27b"
  },
  brandNext: {
    sj55zd: "f16muhyy",
    De3pzq: "f10s6wn9",
    g2u3we: "f1iimpp0",
    h3c5rm: ["f19uhqvu", "f1nx14hx"],
    B9xav0g: "fnqa90p",
    zhjwy3: ["f1nx14hx", "f19uhqvu"],
    Bi91k9c: "f3ymbdj",
    Jwef8y: "f1rgtb95",
    B2d53fq: "f1pu27ff",
    iro3zm: "f1d5c7in"
  },
  brandPrevious: {
    sj55zd: "f1phragk",
    De3pzq: "ffp7eso",
    g2u3we: "fm1ebug",
    h3c5rm: ["f28omuz", "f1uhflii"],
    B9xav0g: "f1ixw5o4",
    zhjwy3: ["f1uhflii", "f28omuz"],
    Bi91k9c: "f1rq72xc",
    Bgoe8wy: "f1bg5g8r",
    Bwzppfd: ["f1h9bnsk", "f12x9t0k"],
    oetu4i: "f19ervry",
    gg5e9n: ["f12x9t0k", "f1h9bnsk"],
    Jwef8y: "f15wkkf3",
    B2d53fq: "f1d6v5y2",
    b661bw: "f1565b9n",
    Bk6r4ia: ["fm07gvo", "fwlsg72"],
    B9zn80p: "fzw6fmy",
    Bpld233: ["fwlsg72", "fm07gvo"],
    iro3zm: "fnp9lpt"
  }
}, {
  d: [".f14es27b{min-width:96px;}", ".f16muhyy{color:var(--colorBrandForeground1);}", ".f10s6wn9{background-color:var(--colorNeutralForegroundOnBrand);}", ".f1iimpp0{border-top-color:var(--colorTransparentBackground);}", ".f19uhqvu{border-right-color:var(--colorTransparentBackground);}", ".f1nx14hx{border-left-color:var(--colorTransparentBackground);}", ".fnqa90p{border-bottom-color:var(--colorTransparentBackground);}", ".f1phragk{color:var(--colorNeutralForegroundOnBrand);}", ".ffp7eso{background-color:var(--colorBrandBackground);}", ".fm1ebug{border-top-color:var(--colorNeutralForegroundOnBrand);}", ".f28omuz{border-right-color:var(--colorNeutralForegroundOnBrand);}", ".f1uhflii{border-left-color:var(--colorNeutralForegroundOnBrand);}", ".f1ixw5o4{border-bottom-color:var(--colorNeutralForegroundOnBrand);}"],
  h: [".f3ymbdj:hover{color:var(--colorCompoundBrandForeground1Hover);}", ".f1rgtb95:hover{background-color:var(--colorNeutralForegroundOnBrand);}", ".f1pu27ff:hover:active{color:var(--colorCompoundBrandForeground1Pressed);}", ".f1d5c7in:hover:active{background-color:var(--colorNeutralForegroundOnBrand);}", ".f1rq72xc:hover{color:var(--colorNeutralForegroundOnBrand);}", ".f1bg5g8r:hover{border-top-color:var(--colorNeutralForegroundOnBrand);}", ".f1h9bnsk:hover{border-right-color:var(--colorNeutralForegroundOnBrand);}", ".f12x9t0k:hover{border-left-color:var(--colorNeutralForegroundOnBrand);}", ".f19ervry:hover{border-bottom-color:var(--colorNeutralForegroundOnBrand);}", ".f15wkkf3:hover{background-color:var(--colorBrandBackgroundHover);}", ".f1d6v5y2:hover:active{color:var(--colorNeutralForegroundOnBrand);}", ".f1565b9n:hover:active{border-top-color:var(--colorNeutralForegroundOnBrand);}", ".fm07gvo:hover:active{border-right-color:var(--colorNeutralForegroundOnBrand);}", ".fwlsg72:hover:active{border-left-color:var(--colorNeutralForegroundOnBrand);}", ".fzw6fmy:hover:active{border-bottom-color:var(--colorNeutralForegroundOnBrand);}", ".fnp9lpt:hover:active{background-color:var(--colorBrandBackgroundPressed);}"]
});
var useTeachingPopoverCarouselFooterButtonStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles62();
  const {
    navType,
    popoverAppearance
  } = state;
  state = {
    ...state,
    ...useButtonStyles_unstable(state)
  };
  state.root.className = mergeClasses(teachingPopoverCarouselFooterButtonClassNames.root, styles.root, navType === "prev" && popoverAppearance === "brand" && styles.brandPrevious, navType === "next" && popoverAppearance === "brand" && styles.brandNext, state.root.className);
  return state;
};

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarouselFooterButton/TeachingPopoverCarouselFooterButton.js
var TeachingPopoverCarouselFooterButton = React505.forwardRef((props, ref) => {
  const state = useTeachingPopoverCarouselFooterButton_unstable(props, ref);
  useTeachingPopoverCarouselFooterButtonStyles_unstable(state);
  return renderTeachingPopoverCarouselFooterButton_unstable(state);
});
TeachingPopoverCarouselFooterButton.displayName = "TeachingPopoverCarouselFooterButton";

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarouselFooter/useTeachingPopoverCarouselFooter.js
var useTeachingPopoverCarouselFooter_unstable = (props, ref) => {
  const { layout = "centered", initialStepText, finalStepText } = props;
  const previous = slot_exports.optional(props.previous, {
    defaultProps: {
      navType: "prev",
      altText: initialStepText
    },
    renderByDefault: true,
    elementType: TeachingPopoverCarouselFooterButton
  });
  const next = slot_exports.always(props.next, {
    defaultProps: {
      navType: "next",
      altText: finalStepText
    },
    elementType: TeachingPopoverCarouselFooterButton
  });
  return {
    layout,
    components: {
      root: "div",
      next: TeachingPopoverCarouselFooterButton,
      previous: TeachingPopoverCarouselFooterButton
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      ref,
      ...props
    }), {
      elementType: "div"
    }),
    previous,
    next
  };
};

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarouselFooter/renderTeachingPopoverCarouselFooter.js
var renderTeachingPopoverCarouselFooter_unstable = (state) => {
  assertSlots(state);
  const { layout } = state;
  return jsxs(state.root, {
    children: [
      layout === "centered" && state.previous && jsx(state.previous, {}),
      state.root.children,
      layout === "offset" && state.previous && jsx(state.previous, {}),
      jsx(state.next, {})
    ]
  });
};

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarouselFooter/useTeachingPopoverCarouselFooterStyles.styles.js
var teachingPopoverCarouselFooterClassNames = {
  root: "fui-TeachingPopoverCarouselFooter",
  previous: "fui-TeachingPopoverCarouselFooter__previous",
  next: "fui-TeachingPopoverCarouselFooter__next"
};
var useStyles63 = __styles2({
  root: {
    mc9l5x: "f22iagw",
    Beiy3e4: "f1063pyq"
  },
  rootCentered: {
    Brf1p80: "f1869bpl",
    i8kkvl: 0,
    Belr9w4: 0,
    rmohyg: "f19gb1f4"
  },
  rootRightAligned: {
    i8kkvl: 0,
    Belr9w4: 0,
    rmohyg: "f19gb1f4",
    Bp34fd5: "f1y65ohq"
  }
}, {
  d: [".f22iagw{display:flex;}", ".f1063pyq{flex-direction:row;}", ".f1869bpl{justify-content:space-between;}", [".f19gb1f4{gap:8px;}", {
    p: -1
  }], [".f19gb1f4{gap:8px;}", {
    p: -1
  }], ".f1y65ohq :first-child{-webkit-margin-end:auto;margin-inline-end:auto;}"]
});
var useTeachingPopoverCarouselFooterStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles63();
  const {
    layout
  } = state;
  state.root.className = mergeClasses(teachingPopoverCarouselFooterClassNames.root, styles.root, layout === "centered" ? styles.rootCentered : styles.rootRightAligned, state.root.className);
  if (state.previous) {
    state.previous.className = mergeClasses(teachingPopoverCarouselFooterClassNames.previous, state.previous.className);
  }
  state.next.className = mergeClasses(teachingPopoverCarouselFooterClassNames.next, state.next.className);
  return state;
};

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarouselFooter/TeachingPopoverCarouselFooter.js
var TeachingPopoverCarouselFooter = React507.forwardRef((props, ref) => {
  const state = useTeachingPopoverCarouselFooter_unstable(props, ref);
  useTeachingPopoverCarouselFooterStyles_unstable(state);
  return renderTeachingPopoverCarouselFooter_unstable(state);
});
TeachingPopoverCarouselFooter.displayName = "TeachingPopoverCarouselFooter";

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarouselFooter/TeachingPopoverCarouselFooter.types.js
var React508 = __toESM(require_react());

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarouselNav/TeachingPopoverCarouselNav.js
var React511 = __toESM(require_react());

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarouselNav/useTeachingPopoverCarouselNav.js
var React509 = __toESM(require_react());
var useTeachingPopoverCarouselNav_unstable = (props, ref) => {
  const focusableGroupAttr = useArrowNavigationGroup({
    circular: false,
    axis: "horizontal",
    memorizeCurrent: false,
    // eslint-disable-next-line @typescript-eslint/naming-convention
    unstable_hasDefault: true
  });
  const values2 = useCarouselValues_unstable((snapshot) => snapshot);
  return {
    values: values2,
    renderNavButton: props.children,
    components: {
      root: "div"
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      ref,
      role: "tablist",
      tabIndex: 0,
      ...props,
      ...focusableGroupAttr,
      children: null
    }), {
      elementType: "div"
    })
  };
};

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarouselNav/valueIdContext.js
var React510 = __toESM(require_react());
var valueIdContext = React510.createContext(void 0);
var valueIdContextDefaultValue = "";
var useValueIdContext = () => {
  var _React_useContext;
  return (_React_useContext = React510.useContext(valueIdContext)) !== null && _React_useContext !== void 0 ? _React_useContext : valueIdContextDefaultValue;
};
var ValueIdContextProvider = valueIdContext.Provider;

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarouselNav/renderTeachingPopoverCarouselNav.js
var renderTeachingPopoverCarouselNav_unstable = (state) => {
  assertSlots(state);
  const { values: values2, renderNavButton } = state;
  return jsx(state.root, {
    children: values2.map((value) => jsx(ValueIdContextProvider, {
      value,
      children: renderNavButton(value)
    }, value))
  });
};

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarouselNav/useTeachingPopoverCarouselNavStyles.styles.js
var teachingPopoverCarouselNavClassNames = {
  root: "fui-TeachingPopoverCarouselNav"
};
var useStyles64 = __styles2({
  root: {
    mc9l5x: "f22iagw",
    Beiy3e4: "f1063pyq",
    i8kkvl: "f1ufnopg",
    Bt984gj: "f122n59",
    Brf1p80: "f4d9j23",
    Bfpq7zp: 0,
    g9k6zt: 0,
    Bn4voq9: 0,
    giviqs: "f89hs3r",
    Bw81rd7: 0,
    kdpuga: 0,
    dm238s: 0,
    B6xbmo0: 0,
    B3whbx2: "f2krc9w",
    B8q5s1w: "f8hki3x",
    Bci5o5g: ["f1d2448m", "ffh67wi"],
    n8qw10: "f1bjia2o",
    Bdrgwmp: ["ffh67wi", "f1d2448m"]
  }
}, {
  d: [".f22iagw{display:flex;}", ".f1063pyq{flex-direction:row;}", ".f1ufnopg{column-gap:var(--spacingHorizontalXS);}", ".f122n59{align-items:center;}", ".f4d9j23{justify-content:center;}", [".f89hs3r[data-fui-focus-visible]{outline:var(--strokeWidthThick) solid var(--colorStrokeFocus2);}", {
    p: -1
  }], [".f2krc9w[data-fui-focus-visible]{border-radius:var(--borderRadiusMedium);}", {
    p: -1
  }], ".f8hki3x[data-fui-focus-visible]{border-top-color:transparent;}", ".f1d2448m[data-fui-focus-visible]{border-right-color:transparent;}", ".ffh67wi[data-fui-focus-visible]{border-left-color:transparent;}", ".f1bjia2o[data-fui-focus-visible]{border-bottom-color:transparent;}"]
});
var useTeachingPopoverCarouselNavStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles64();
  state.root.className = mergeClasses(teachingPopoverCarouselNavClassNames.root, styles.root, state.root.className);
  return state;
};

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarouselNav/TeachingPopoverCarouselNav.js
var TeachingPopoverCarouselNav = React511.forwardRef((props, ref) => {
  const state = useTeachingPopoverCarouselNav_unstable(props, ref);
  useTeachingPopoverCarouselNavStyles_unstable(state);
  return renderTeachingPopoverCarouselNav_unstable(state);
});
TeachingPopoverCarouselNav.displayName = "TeachingPopoverCarouselNav";

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarouselNav/TeachingPopoverCarouselNav.types.js
var React512 = __toESM(require_react());

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarouselNavButton/TeachingPopoverCarouselNavButton.js
var React514 = __toESM(require_react());

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarouselNavButton/useTeachingPopoverCarouselNavButton.js
var React513 = __toESM(require_react());
var useTeachingPopoverCarouselNavButton_unstable = (props, ref) => {
  const { onClick, as = "a" } = props;
  const value = useValueIdContext();
  const appearance = usePopoverContext_unstable((context) => context.appearance);
  const selectPageByValue = useCarouselContext_unstable((c) => c.selectPageByValue);
  const isSelected = useCarouselContext_unstable((c) => c.value === value);
  const handleClick = useEventCallback((event) => {
    onClick === null || onClick === void 0 ? void 0 : onClick(event);
    if (!event.defaultPrevented && isHTMLElement(event.target)) {
      selectPageByValue(event, value);
    }
  });
  const defaultTabProps = useTabsterAttributes({
    focusable: {
      isDefault: isSelected
    }
  });
  const _carouselButton = slot_exports.always(getIntrinsicElementProps(as, useARIAButtonProps(props.as, props)), {
    elementType: "button",
    defaultProps: {
      ref,
      role: "tab",
      type: "button",
      ...defaultTabProps
    }
  });
  _carouselButton.onClick = handleClick;
  const state = {
    isSelected,
    appearance,
    components: {
      root: "button"
    },
    root: _carouselButton
  };
  return state;
};

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarouselNavButton/renderTeachingPopoverCarouselNavButton.js
var renderTeachingPopoverCarouselNavButton_unstable = (state) => {
  assertSlots(state);
  return jsx(state.root, {});
};

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarouselNavButton/useTeachingPopoverCarouselNavButtonStyles.styles.js
var teachingPopoverCarouselNavButtonClassNames = {
  root: "fui-TeachingPopoverCarouselNavButton"
};
var useStyles65 = __styles2({
  root: {
    mc9l5x: "f22iagw",
    Bceei9c: "f1k6fduh",
    B7ck84d: "f1ewtqcl",
    Bqenvij: "f1x82gua",
    a9b677: "f1o3cbw4",
    De3pzq: "ffp7eso"
  },
  rootUnselected: {
    Bgfg5da: 0,
    B9xav0g: 0,
    oivjwe: 0,
    Bn0qgzm: 0,
    B4g9neb: 0,
    zhjwy3: 0,
    wvpqe5: 0,
    ibv6hh: 0,
    u1mtju: 0,
    h3c5rm: 0,
    vrafjx: 0,
    Bekrc4i: 0,
    i8vvqc: 0,
    g2u3we: 0,
    icvyot: 0,
    B4j52fo: 0,
    irswps: "f3bhgqh",
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "f5q2cvs",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f1c5fvqg",
    Bw0xxkn: 0,
    oeaueh: 0,
    Bpd4iqm: 0,
    Befb4lg: "f71xx7",
    Bfpq7zp: 0,
    g9k6zt: 0,
    Bn4voq9: 0,
    giviqs: "f89hs3r",
    Bw81rd7: 0,
    kdpuga: 0,
    dm238s: 0,
    B6xbmo0: 0,
    B3whbx2: "f2krc9w",
    B8q5s1w: "f8hki3x",
    Bci5o5g: ["f1d2448m", "ffh67wi"],
    n8qw10: "f1bjia2o",
    Bdrgwmp: ["ffh67wi", "f1d2448m"],
    De3pzq: "frgiif3",
    Bfclv37: "f14lfud5",
    B372c46: "fngekiq"
  },
  rootSelected: {
    Bw0xxkn: 0,
    oeaueh: 0,
    Bpd4iqm: 0,
    Befb4lg: "f71xx7",
    a9b677: "fjw5fx7",
    Bgfg5da: 0,
    B9xav0g: 0,
    oivjwe: 0,
    Bn0qgzm: 0,
    B4g9neb: 0,
    zhjwy3: 0,
    wvpqe5: 0,
    ibv6hh: 0,
    u1mtju: 0,
    h3c5rm: 0,
    vrafjx: 0,
    Bekrc4i: 0,
    i8vvqc: 0,
    g2u3we: 0,
    icvyot: 0,
    B4j52fo: 0,
    irswps: "f3bhgqh",
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "ff3glw6",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f1c5fvqg",
    Bfpq7zp: 0,
    g9k6zt: 0,
    Bn4voq9: 0,
    giviqs: "f89hs3r",
    Bw81rd7: 0,
    kdpuga: 0,
    dm238s: 0,
    B6xbmo0: 0,
    B3whbx2: "f2krc9w",
    B8q5s1w: "f8hki3x",
    Bci5o5g: ["f1d2448m", "ffh67wi"],
    n8qw10: "f1bjia2o",
    Bdrgwmp: ["ffh67wi", "f1d2448m"],
    Bsw6fvg: "fe2ae1k"
  },
  rootBrand: {
    De3pzq: "f10s6wn9"
  },
  rootBrandUnselected: {
    De3pzq: "frxe7el",
    Bfclv37: "f14lfud5",
    B372c46: "fngekiq"
  }
}, {
  d: [".f22iagw{display:flex;}", ".f1k6fduh{cursor:pointer;}", ".f1ewtqcl{box-sizing:border-box;}", ".f1x82gua{height:8px;}", ".f1o3cbw4{width:8px;}", ".ffp7eso{background-color:var(--colorBrandBackground);}", [".f3bhgqh{border:none;}", {
    p: -2
  }], [".f5q2cvs{border-radius:50%;}", {
    p: -1
  }], [".f1c5fvqg{padding:0px;}", {
    p: -1
  }], [".f71xx7{outline:var(--strokeWidthThin) solid transparent;}", {
    p: -1
  }], [".f89hs3r[data-fui-focus-visible]{outline:var(--strokeWidthThick) solid var(--colorStrokeFocus2);}", {
    p: -1
  }], [".f2krc9w[data-fui-focus-visible]{border-radius:var(--borderRadiusMedium);}", {
    p: -1
  }], ".f8hki3x[data-fui-focus-visible]{border-top-color:transparent;}", ".f1d2448m[data-fui-focus-visible]{border-right-color:transparent;}", ".ffh67wi[data-fui-focus-visible]{border-left-color:transparent;}", ".f1bjia2o[data-fui-focus-visible]{border-bottom-color:transparent;}", ".frgiif3{background-color:color-mix(in srgb, var(--colorBrandBackground) 30%, transparent);}", [".f71xx7{outline:var(--strokeWidthThin) solid transparent;}", {
    p: -1
  }], ".fjw5fx7{width:16px;}", [".f3bhgqh{border:none;}", {
    p: -2
  }], [".ff3glw6{border-radius:4px;}", {
    p: -1
  }], [".f1c5fvqg{padding:0px;}", {
    p: -1
  }], [".f89hs3r[data-fui-focus-visible]{outline:var(--strokeWidthThick) solid var(--colorStrokeFocus2);}", {
    p: -1
  }], [".f2krc9w[data-fui-focus-visible]{border-radius:var(--borderRadiusMedium);}", {
    p: -1
  }], ".f10s6wn9{background-color:var(--colorNeutralForegroundOnBrand);}", ".frxe7el{background-color:color-mix(in srgb, var(--colorNeutralForegroundOnBrand) 30%, transparent);}"],
  t: ["@supports not (color: color-mix(in lch, white, black)){.f14lfud5{opacity:0.3;}}", "@supports not (color: color-mix(in lch, white, black)){.fngekiq{background-color:var(--colorBrandBackground);}}"],
  m: [["@media (forced-colors: active){.fe2ae1k{background-color:CanvasText;}}", {
    m: "(forced-colors: active)"
  }]]
});
var useTeachingPopoverCarouselNavButtonStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles65();
  const {
    appearance,
    isSelected
  } = state;
  const brandStyles = isSelected ? styles.rootBrand : styles.rootBrandUnselected;
  state.root.className = mergeClasses(teachingPopoverCarouselNavButtonClassNames.root, styles.root, isSelected ? styles.rootSelected : styles.rootUnselected, appearance === "brand" && brandStyles, state.root.className);
  return state;
};

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarouselNavButton/TeachingPopoverCarouselNavButton.js
var TeachingPopoverCarouselNavButton = React514.forwardRef((props, ref) => {
  const state = useTeachingPopoverCarouselNavButton_unstable(props, ref);
  useTeachingPopoverCarouselNavButtonStyles_unstable(state);
  return renderTeachingPopoverCarouselNavButton_unstable(state);
});
TeachingPopoverCarouselNavButton.displayName = "TeachingPopoverCarouselNavButton";

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverSurface/TeachingPopoverSurface.js
var React516 = __toESM(require_react());

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverSurface/useTeachingPopoverSurface.js
var React515 = __toESM(require_react());
var useTeachingPopoverSurface_unstable = (props, ref) => {
  const state = usePopoverSurface_unstable(props, ref);
  return state;
};

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverSurface/useTeachingPopoverSurfaceStyles.styles.js
var teachingPopoverSurfaceClassNames = {
  root: "fui-TeachingPopoverSurface"
};
var useStyles66 = __styles2({
  root: {
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f23zza1",
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "f1kijzfu",
    Bf4jedk: "f14hp5dx",
    B7ck84d: "f1ewtqcl"
  }
}, {
  d: [[".f23zza1{padding:var(--spacingVerticalL) var(--spacingVerticalL);}", {
    p: -1
  }], [".f1kijzfu{border-radius:var(--borderRadiusXLarge);}", {
    p: -1
  }], ".f14hp5dx{min-width:320px;}", ".f1ewtqcl{box-sizing:border-box;}"]
});
var useTeachingPopoverSurfaceStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles66();
  state.root.className = mergeClasses(teachingPopoverSurfaceClassNames.root, styles.root, state.root.className);
  const updatedState = usePopoverSurfaceStyles_unstable(state);
  return updatedState;
};

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverSurface/renderTeachingPopoverSurface.js
var renderTeachingPopoverSurface_unstable = (state) => {
  assertSlots(state);
  return renderPopoverSurface_unstable(state);
};

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverSurface/TeachingPopoverSurface.js
var TeachingPopoverSurface = React516.forwardRef((props, ref) => {
  const state = useTeachingPopoverSurface_unstable(props, ref);
  useTeachingPopoverSurfaceStyles_unstable(state);
  useCustomStyleHook("useTeachingPopoverSurfaceStyles_unstable")(state);
  return renderTeachingPopoverSurface_unstable(state);
});
TeachingPopoverSurface.displayName = "TeachingPopoverSurface";

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverTitle/TeachingPopoverTitle.js
var React518 = __toESM(require_react());

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverTitle/useTeachingPopoverTitle.js
var React517 = __toESM(require_react());
var DismissIcon = bundleIcon_default(DismissFilled, DismissRegular);
var useTeachingPopoverTitle_unstable = (props, ref) => {
  const { dismissButton } = props;
  const setOpen = usePopoverContext_unstable((context) => context.setOpen);
  const triggerRef = usePopoverContext_unstable((context) => context.triggerRef);
  const appearance = usePopoverContext_unstable((context) => context.appearance);
  const onDismissButtonClick = useEventCallback((ev) => {
    if (!ev.defaultPrevented) {
      setOpen(ev, false);
    }
    if (triggerRef.current) {
      triggerRef.current.focus();
    }
  });
  return {
    appearance,
    components: {
      root: "h2",
      dismissButton: "button"
    },
    root: slot_exports.always(getIntrinsicElementProps("h2", {
      ref,
      ...props
    }), {
      elementType: "h2"
    }),
    dismissButton: slot_exports.optional(dismissButton, {
      renderByDefault: false,
      defaultProps: {
        children: React517.createElement(DismissIcon, null),
        onClick: onDismissButtonClick,
        "aria-label": "dismiss",
        "aria-hidden": true
      },
      elementType: "button"
    })
  };
};

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverTitle/renderTeachingPopoverTitle.js
var renderTeachingPopoverTitle_unstable = (state) => {
  assertSlots(state);
  return jsxs(state.root, {
    children: [
      state.root.children,
      state.dismissButton && jsx(state.dismissButton, {})
    ]
  });
};

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverTitle/useTeachingPopoverTitleStyles.styles.js
var teachingPopoverTitleClassNames = {
  root: "fui-TeachingPopoverTitle",
  dismissButton: "fui-TeachingPopoverTitle__dismissButton"
};
var useStyles67 = __styles2({
  root: {
    mc9l5x: "f22iagw",
    Beiy3e4: "f1063pyq",
    Brf1p80: "f1869bpl",
    Be2twd7: "fod5ikn",
    Bhrd7zp: "fl43uef",
    sj55zd: "f19n0e5",
    Bg96gwp: "faaz57k",
    Byoj8tv: "f5b47ha",
    B6of3ja: "f1jkagg5",
    jrapky: "fi2ljxd"
  },
  rootBrand: {
    sj55zd: "f1phragk"
  },
  dismissButton: {
    qhf8xq: "f10pi13n",
    Bgfg5da: 0,
    B9xav0g: 0,
    oivjwe: 0,
    Bn0qgzm: 0,
    B4g9neb: 0,
    zhjwy3: 0,
    wvpqe5: 0,
    ibv6hh: 0,
    u1mtju: 0,
    h3c5rm: 0,
    vrafjx: ["f1n71otn", "f1deefiw"],
    Bekrc4i: 0,
    i8vvqc: 0,
    g2u3we: 0,
    icvyot: 0,
    B4j52fo: 0,
    irswps: "f88035w",
    mc9l5x: "f22iagw",
    Bt984gj: "f122n59",
    Bceei9c: "f1k6fduh",
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "figsok6",
    Bg96gwp: "f1i3iumi",
    De3pzq: "f1c21dwh",
    B7ck84d: "f1ewtqcl",
    B7oj6ja: ["f3fg2lr", "f13av6d4"],
    Bbmb7ep: ["fzi6hpg", "fyowgf4"],
    Bfpq7zp: 0,
    g9k6zt: 0,
    Bn4voq9: 0,
    giviqs: "f89hs3r",
    Bw81rd7: 0,
    kdpuga: 0,
    dm238s: 0,
    B6xbmo0: 0,
    B3whbx2: "f2krc9w",
    B8q5s1w: "f8hki3x",
    Bci5o5g: ["f1d2448m", "ffh67wi"],
    n8qw10: "f1bjia2o",
    Bdrgwmp: ["ffh67wi", "f1d2448m"],
    Jyy4pa: "f1lfeew"
  },
  dismissBrand: {
    sj55zd: "f1phragk"
  }
}, {
  d: [".f22iagw{display:flex;}", ".f1063pyq{flex-direction:row;}", ".f1869bpl{justify-content:space-between;}", ".fod5ikn{font-size:var(--fontSizeBase400);}", ".fl43uef{font-weight:var(--fontWeightSemibold);}", ".f19n0e5{color:var(--colorNeutralForeground1);}", ".faaz57k{line-height:var(--lineHeightBase400);}", ".f5b47ha{padding-bottom:var(--spacingVerticalS);}", ".f1jkagg5{margin-top:var(--spacingHorizontalNone);}", ".fi2ljxd{margin-bottom:var(--spacingHorizontalNone);}", ".f1phragk{color:var(--colorNeutralForegroundOnBrand);}", ".f10pi13n{position:relative;}", [".f88035w{border:var(--strokeWidthThin) solid var(--colorTransparentStroke);}", {
    p: -2
  }], ".f122n59{align-items:center;}", ".f1k6fduh{cursor:pointer;}", ".fk6fouc{font-family:var(--fontFamilyBase);}", ".fkhj508{font-size:var(--fontSizeBase300);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}", ".f1c21dwh{background-color:var(--colorTransparentBackground);}", ".f1ewtqcl{box-sizing:border-box;}", ".f3fg2lr{border-top-right-radius:var(--borderRadiusNone);}", ".f13av6d4{border-top-left-radius:var(--borderRadiusNone);}", ".fzi6hpg{border-bottom-right-radius:var(--borderRadiusNone);}", ".fyowgf4{border-bottom-left-radius:var(--borderRadiusNone);}", ".f1n71otn{border-right-style:none;}", ".f1deefiw{border-left-style:none;}", [".f89hs3r[data-fui-focus-visible]{outline:var(--strokeWidthThick) solid var(--colorStrokeFocus2);}", {
    p: -1
  }], [".f2krc9w[data-fui-focus-visible]{border-radius:var(--borderRadiusMedium);}", {
    p: -1
  }], ".f8hki3x[data-fui-focus-visible]{border-top-color:transparent;}", ".f1d2448m[data-fui-focus-visible]{border-right-color:transparent;}", ".ffh67wi[data-fui-focus-visible]{border-left-color:transparent;}", ".f1bjia2o[data-fui-focus-visible]{border-bottom-color:transparent;}", ".f1lfeew{-webkit-margin-start:auto;margin-inline-start:auto;}"]
});
var useTeachingPopoverTitleStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles67();
  const {
    appearance
  } = state;
  state.root.className = mergeClasses(teachingPopoverTitleClassNames.root, styles.root, appearance === "brand" && styles.rootBrand, state.root.className);
  if (state.dismissButton) {
    state.dismissButton.className = mergeClasses(teachingPopoverTitleClassNames.dismissButton, styles.dismissButton, appearance === "brand" ? styles.dismissBrand : void 0, state.dismissButton.className);
  }
  return state;
};

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverTitle/TeachingPopoverTitle.js
var TeachingPopoverTitle = React518.forwardRef((props, ref) => {
  const state = useTeachingPopoverTitle_unstable(props, ref);
  useTeachingPopoverTitleStyles_unstable(state);
  useCustomStyleHook("useTeachingPopoverTitleStyles_unstable")(state);
  return renderTeachingPopoverTitle_unstable(state);
});
TeachingPopoverTitle.displayName = "TeachingPopoverTitle";

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverTrigger/TeachingPopoverTrigger.js
var React519 = __toESM(require_react());

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverTrigger/renderTeachingPopoverTrigger.js
var renderTeachingPopoverTrigger_unstable = (state) => {
  return state.children;
};

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverTrigger/useTeachingPopoverTrigger.js
var useTeachingPopoverTrigger_unstable = (props) => {
  const state = usePopoverTrigger_unstable(props);
  return state;
};

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverTrigger/TeachingPopoverTrigger.js
var TeachingPopoverTrigger = (props) => {
  const state = useTeachingPopoverTrigger_unstable(props);
  return renderTeachingPopoverTrigger_unstable(state);
};
TeachingPopoverTrigger.displayName = "TeachingPopoverTrigger";
TeachingPopoverTrigger.isFluentTriggerComponent = true;

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopover/TeachingPopover.js
var React520 = __toESM(require_react());

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopover/useTeachingPopover.js
var useTeachingPopover_unstable = (props) => {
  const popoverState = usePopover_unstable(props);
  var _props_withArrow, _props_trapFocus;
  return {
    ...popoverState,
    withArrow: (_props_withArrow = props.withArrow) !== null && _props_withArrow !== void 0 ? _props_withArrow : true,
    // We trap focus because the default TeachingPopover view has buttons/carousel.
    trapFocus: (_props_trapFocus = props.trapFocus) !== null && _props_trapFocus !== void 0 ? _props_trapFocus : true
  };
};

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopover/renderTeachingPopover.js
var renderTeachingPopover_unstable = renderPopover_unstable;

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopover/TeachingPopover.js
var TeachingPopover = (props) => {
  const state = useTeachingPopover_unstable(props);
  return renderTeachingPopover_unstable(state);
};
TeachingPopover.displayName = "TeachingPopover";

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverFooter/TeachingPopoverFooter.js
var React522 = __toESM(require_react());

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverFooter/useTeachingPopoverFooter.js
var React521 = __toESM(require_react());
var useTeachingPopoverFooter_unstable = (props, ref) => {
  const appearance = usePopoverContext_unstable((context) => context.appearance);
  const toggleOpen = usePopoverContext_unstable((context) => context.toggleOpen);
  const handleButtonClick = useEventCallback((event) => {
    if (event.isDefaultPrevented()) {
      return;
    }
    toggleOpen(event);
  });
  const secondary = slot_exports.optional(props.secondary, {
    defaultProps: {
      appearance: appearance === "brand" ? "primary" : void 0
    },
    renderByDefault: props.secondary !== void 0,
    elementType: Button
  });
  if (secondary) {
    secondary.onClick = mergeCallbacks(handleButtonClick, secondary === null || secondary === void 0 ? void 0 : secondary.onClick);
  }
  const primary = slot_exports.always(props.primary, {
    defaultProps: {
      appearance: appearance === "brand" ? void 0 : "primary"
    },
    elementType: Button
  });
  if (!secondary) {
    primary.onClick = mergeCallbacks(handleButtonClick, primary === null || primary === void 0 ? void 0 : primary.onClick);
  }
  var _props_footerLayout;
  return {
    footerLayout: (_props_footerLayout = props.footerLayout) !== null && _props_footerLayout !== void 0 ? _props_footerLayout : "horizontal",
    appearance,
    components: {
      root: "div",
      primary: Button,
      secondary: Button
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      ref,
      ...props
    }), {
      elementType: "div"
    }),
    secondary,
    primary
  };
};

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverFooter/renderTeachingPopoverFooter.js
var renderTeachingPopoverFooter_unstable = (state) => {
  assertSlots(state);
  return jsxs(state.root, {
    children: [
      jsx(state.primary, {}),
      state.secondary && jsx(state.secondary, {})
    ]
  });
};

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverFooter/useTeachingPopoverFooterStyles.styles.js
var teachingPopoverFooterClassNames = {
  root: "fui-TeachingPopoverFooter",
  primary: "fui-TeachingPopoverFooter__primary",
  secondary: "fui-TeachingPopoverFooter__secondary"
};
var useStyles68 = __styles2({
  root: {
    mc9l5x: "f22iagw",
    i8kkvl: 0,
    Belr9w4: 0,
    rmohyg: "f19gb1f4",
    z8tnut: "f1kcqot9"
  },
  rootVertical: {
    Beiy3e4: "f1vx9l62"
  },
  rootHorizontal: {
    Beiy3e4: "f1063pyq",
    Brf1p80: "f9c4gz4"
  },
  buttonRootVertical: {
    a9b677: "f14z66ap",
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "ff3glw6"
  },
  buttonRootHorizontal: {
    Bf4jedk: "f14es27b",
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "ff3glw6"
  },
  brandSecondary: {
    g2u3we: "fm1ebug",
    h3c5rm: ["f28omuz", "f1uhflii"],
    B9xav0g: "f1ixw5o4",
    zhjwy3: ["f1uhflii", "f28omuz"]
  },
  brandPrimary: {
    sj55zd: "f16muhyy",
    De3pzq: "f10s6wn9",
    Bi91k9c: "f3ymbdj",
    Jwef8y: "f1rgtb95",
    B2d53fq: "f1pu27ff",
    iro3zm: "f1d5c7in"
  }
}, {
  d: [".f22iagw{display:flex;}", [".f19gb1f4{gap:8px;}", {
    p: -1
  }], ".f1kcqot9{padding-top:12px;}", ".f1vx9l62{flex-direction:column;}", ".f1063pyq{flex-direction:row;}", ".f9c4gz4{justify-content:flex-end;}", ".f14z66ap{width:auto;}", [".ff3glw6{border-radius:4px;}", {
    p: -1
  }], ".f14es27b{min-width:96px;}", [".ff3glw6{border-radius:4px;}", {
    p: -1
  }], ".fm1ebug{border-top-color:var(--colorNeutralForegroundOnBrand);}", ".f28omuz{border-right-color:var(--colorNeutralForegroundOnBrand);}", ".f1uhflii{border-left-color:var(--colorNeutralForegroundOnBrand);}", ".f1ixw5o4{border-bottom-color:var(--colorNeutralForegroundOnBrand);}", ".f16muhyy{color:var(--colorBrandForeground1);}", ".f10s6wn9{background-color:var(--colorNeutralForegroundOnBrand);}"],
  h: [".f3ymbdj:hover{color:var(--colorCompoundBrandForeground1Hover);}", ".f1rgtb95:hover{background-color:var(--colorNeutralForegroundOnBrand);}", ".f1pu27ff:hover:active{color:var(--colorCompoundBrandForeground1Pressed);}", ".f1d5c7in:hover:active{background-color:var(--colorNeutralForegroundOnBrand);}"]
});
var useTeachingPopoverFooterStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles68();
  const {
    appearance,
    footerLayout
  } = state;
  state.root.className = mergeClasses(teachingPopoverFooterClassNames.root, styles.root, footerLayout === "horizontal" ? styles.rootHorizontal : styles.rootVertical, state.root.className);
  if (state.secondary) {
    state.secondary.className = mergeClasses(teachingPopoverFooterClassNames.secondary, footerLayout === "horizontal" ? styles.buttonRootHorizontal : styles.buttonRootVertical, appearance === "brand" ? styles.brandSecondary : void 0, state.secondary.className);
  }
  state.primary.className = mergeClasses(teachingPopoverFooterClassNames.primary, footerLayout === "horizontal" ? styles.buttonRootHorizontal : styles.buttonRootVertical, appearance === "brand" ? styles.brandPrimary : void 0, state.primary.className);
  return state;
};

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverFooter/TeachingPopoverFooter.js
var TeachingPopoverFooter = React522.forwardRef((props, ref) => {
  const state = useTeachingPopoverFooter_unstable(props, ref);
  useTeachingPopoverFooterStyles_unstable(state);
  return renderTeachingPopoverFooter_unstable(state);
});
TeachingPopoverFooter.displayName = "TeachingPopoverFooter";

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarouselPageCount/TeachingPopoverCarouselPageCount.js
var React524 = __toESM(require_react());

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarouselPageCount/useTeachingPopoverCarouselPageCount.js
var React523 = __toESM(require_react());
var useTeachingPopoverCarouselPageCount_unstable = (props, ref) => {
  const values2 = useCarouselValues_unstable((snapshot) => snapshot);
  var _useCarouselContext_unstable;
  const selectedValue = (_useCarouselContext_unstable = useCarouselContext_unstable((c) => c.value)) !== null && _useCarouselContext_unstable !== void 0 ? _useCarouselContext_unstable : values2[0];
  const currentIndex = values2.indexOf(selectedValue);
  const totalPages = values2.length;
  return {
    currentIndex,
    totalPages,
    renderPageCount: props.children,
    components: {
      root: "div"
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      ref,
      ...props,
      children: props.children(currentIndex + 1, totalPages)
    }), {
      elementType: "div"
    })
  };
};

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarouselPageCount/renderTeachingPopoverCarouselPageCount.js
var renderTeachingPopoverCarouselPageCount_unstable = (state) => {
  assertSlots(state);
  return jsx(state.root, {});
};

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarouselPageCount/useTeachingPopoverCarouselPageCountStyles.styles.js
var teachingPopoverCarouselPageCountClassNames = {
  root: "fui-TeachingPopoverCarouselPageCount"
};
var useStyles69 = __styles2({
  root: {
    mc9l5x: "f22iagw",
    Bt984gj: "f122n59",
    Brf1p80: "f4d9j23"
  }
}, {
  d: [".f22iagw{display:flex;}", ".f122n59{align-items:center;}", ".f4d9j23{justify-content:center;}"]
});
var useTeachingPopoverCarouselPageCountStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles69();
  state.root.className = mergeClasses(teachingPopoverCarouselPageCountClassNames.root, styles.root, state.root.className);
  return state;
};

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarouselPageCount/TeachingPopoverCarouselPageCount.js
var TeachingPopoverCarouselPageCount = React524.forwardRef((props, ref) => {
  const state = useTeachingPopoverCarouselPageCount_unstable(props, ref);
  useTeachingPopoverCarouselPageCountStyles_unstable(state);
  return renderTeachingPopoverCarouselPageCount_unstable(state);
});
TeachingPopoverCarouselPageCount.displayName = "TeachingPopoverCarouselPageCount";

// node_modules/@fluentui/react-teaching-popover/lib/components/TeachingPopoverCarouselPageCount/TeachingPopoverCarouselPageCount.types.js
var React525 = __toESM(require_react());

// node_modules/@fluentui/react-tag-picker/lib/components/TagPicker/TagPicker.js
var React533 = __toESM(require_react());

// node_modules/@fluentui/react-tag-picker/lib/components/TagPicker/useTagPicker.js
var React526 = __toESM(require_react());
var fallbackPositions = [
  "above",
  "after",
  "after-top",
  "before",
  "before-top"
];
var useTagPicker_unstable = (props) => {
  const popoverId = useId("picker-listbox");
  const triggerInnerRef = React526.useRef(null);
  const secondaryActionRef = React526.useRef(null);
  const tagPickerGroupRef = React526.useRef(null);
  const { positioning, size = "medium", inline = false, noPopover = false } = props;
  const { targetRef, containerRef } = usePositioning({
    position: "below",
    align: "start",
    offset: {
      crossAxis: 0,
      mainAxis: 2
    },
    fallbackPositions,
    matchTargetSize: "width",
    ...resolvePositioningShorthand(positioning)
  });
  const { controller: activeDescendantController, activeParentRef, listboxRef } = useActiveDescendant({
    matchOption: (el) => el.classList.contains(optionClassNames.root)
  });
  const comboboxState = useComboboxBaseState({
    ...props,
    onOptionSelect: useEventCallback((event, data) => {
      var _props_onOptionSelect;
      return (_props_onOptionSelect = props.onOptionSelect) === null || _props_onOptionSelect === void 0 ? void 0 : _props_onOptionSelect.call(props, event, {
        selectedOptions: data.selectedOptions,
        value: data.optionValue,
        type: event.type,
        event
      });
    }),
    onOpenChange: useEventCallback((event, data) => {
      var _props_onOpenChange;
      return (_props_onOpenChange = props.onOpenChange) === null || _props_onOpenChange === void 0 ? void 0 : _props_onOpenChange.call(props, event, {
        ...data,
        type: event.type,
        event
      });
    }),
    activeDescendantController,
    editable: true,
    multiselect: true,
    size: "medium"
  });
  const { trigger, popover } = childrenToTriggerAndPopover(props.children, noPopover);
  return {
    activeDescendantController,
    components: {},
    trigger,
    popover: comboboxState.open || comboboxState.hasFocus ? popover : void 0,
    popoverId,
    noPopover,
    disabled: comboboxState.disabled,
    triggerRef: useMergedRefs(triggerInnerRef, activeParentRef),
    popoverRef: useMergedRefs(listboxRef, containerRef),
    secondaryActionRef,
    tagPickerGroupRef,
    targetRef,
    size,
    inline,
    open: comboboxState.open,
    mountNode: comboboxState.mountNode,
    onOptionClick: useEventCallback((event) => {
      comboboxState.onOptionClick(event);
      comboboxState.setOpen(event, false);
    }),
    appearance: comboboxState.appearance,
    clearSelection: comboboxState.clearSelection,
    getOptionById: comboboxState.getOptionById,
    getOptionsMatchingValue: comboboxState.getOptionsMatchingValue,
    registerOption: comboboxState.registerOption,
    selectedOptions: comboboxState.selectedOptions,
    selectOption: comboboxState.selectOption,
    setHasFocus: comboboxState.setHasFocus,
    setOpen: comboboxState.setOpen,
    setValue: comboboxState.setValue,
    value: comboboxState.value
  };
};
var childrenToTriggerAndPopover = (children2, noPopover) => {
  const childrenArray = React526.Children.toArray(children2);
  if (true) {
    if (childrenArray.length === 0) {
      console.warn("TagPicker must contain at least one child");
    }
    if (childrenArray.length > 2) {
      console.warn("TagPicker must contain at most two children");
    }
  }
  if (noPopover) {
    return {
      trigger: childrenArray[0]
    };
  }
  let trigger = void 0;
  let popover = void 0;
  if (childrenArray.length === 2) {
    trigger = childrenArray[0];
    popover = childrenArray[1];
  } else if (childrenArray.length === 1) {
    popover = childrenArray[0];
  }
  return {
    trigger,
    popover
  };
};

// node_modules/@fluentui/react-tag-picker/lib/components/TagPicker/renderTagPicker.js
var React531 = __toESM(require_react());

// node_modules/@fluentui/react-tag-picker/lib/contexts/TagPickerContext.js
var React530 = __toESM(require_react());

// node_modules/@fluentui/react-tag-picker/node_modules/@fluentui/react-context-selector/lib/createContext.js
var React527 = __toESM(require_react());
var import_scheduler13 = __toESM(require_scheduler13());
var createProvider13 = (Original) => {
  const Provider2 = (props) => {
    const valueRef = React527.useRef(props.value);
    const versionRef = React527.useRef(0);
    const contextValue = React527.useRef();
    if (!contextValue.current) {
      contextValue.current = {
        value: valueRef,
        version: versionRef,
        listeners: []
      };
    }
    useIsomorphicLayoutEffect(() => {
      valueRef.current = props.value;
      versionRef.current += 1;
      (0, import_scheduler13.unstable_runWithPriority)(import_scheduler13.unstable_NormalPriority, () => {
        contextValue.current.listeners.forEach((listener) => {
          listener([
            versionRef.current,
            props.value
          ]);
        });
      });
    }, [
      props.value
    ]);
    return React527.createElement(Original, {
      value: contextValue.current
    }, props.children);
  };
  if (true) {
    Provider2.displayName = "ContextSelector.Provider";
  }
  return Provider2;
};
var createContext56 = (defaultValue) => {
  const context = React527.createContext({
    value: {
      current: defaultValue
    },
    version: {
      current: -1
    },
    listeners: []
  });
  context.Provider = createProvider13(context.Provider);
  delete context.Consumer;
  return context;
};

// node_modules/@fluentui/react-tag-picker/node_modules/@fluentui/react-context-selector/lib/useContextSelector.js
var React528 = __toESM(require_react());
var useContextSelector13 = (context, selector) => {
  const contextValue = React528.useContext(context);
  const { value: { current: value }, version: { current: version }, listeners } = contextValue;
  const selected = selector(value);
  const [state, setState] = React528.useState([
    value,
    selected
  ]);
  const dispatch = (payload) => {
    setState((prevState) => {
      if (!payload) {
        return [
          value,
          selected
        ];
      }
      if (payload[0] <= version) {
        if (Object.is(prevState[1], selected)) {
          return prevState;
        }
        return [
          value,
          selected
        ];
      }
      try {
        if (Object.is(prevState[0], payload[1])) {
          return prevState;
        }
        const nextSelected = selector(payload[1]);
        if (Object.is(prevState[1], nextSelected)) {
          return prevState;
        }
        return [
          payload[1],
          nextSelected
        ];
      } catch (e) {
      }
      return [
        prevState[0],
        prevState[1]
      ];
    });
  };
  if (!Object.is(state[1], selected)) {
    dispatch(void 0);
  }
  const stableDispatch = useEventCallback(dispatch);
  useIsomorphicLayoutEffect(() => {
    listeners.push(stableDispatch);
    return () => {
      const index = listeners.indexOf(stableDispatch);
      listeners.splice(index, 1);
    };
  }, [
    stableDispatch,
    listeners
  ]);
  return state[1];
};

// node_modules/@fluentui/react-tag-picker/node_modules/@fluentui/react-context-selector/lib/useHasParentContext.js
var React529 = __toESM(require_react());

// node_modules/@fluentui/react-tag-picker/lib/contexts/TagPickerContext.js
var tagPickerContextDefaultValue = {
  triggerRef: React530.createRef(),
  popoverRef: React530.createRef(),
  targetRef: React530.createRef(),
  tagPickerGroupRef: React530.createRef(),
  secondaryActionRef: React530.createRef(),
  open: false,
  clearSelection: () => null,
  getOptionById: () => void 0,
  selectedOptions: [],
  selectOption: () => null,
  setHasFocus: () => null,
  setOpen: () => null,
  setValue: () => null,
  value: void 0,
  popoverId: "",
  size: "medium",
  appearance: "outline",
  disabled: false
};
var TagPickerContext = createContext56(void 0);
var TagPickerContextProvider = TagPickerContext.Provider;
var useTagPickerContext_unstable = (selector) => useContextSelector13(TagPickerContext, (ctx = tagPickerContextDefaultValue) => selector(ctx));

// node_modules/@fluentui/react-tag-picker/lib/components/TagPicker/renderTagPicker.js
var renderTagPicker_unstable = (state, contexts) => {
  assertSlots(state);
  return React531.createElement(TagPickerContextProvider, {
    value: contexts.picker
  }, React531.createElement(ActiveDescendantContextProvider, {
    value: contexts.activeDescendant
  }, React531.createElement(ListboxProvider, {
    value: contexts.listbox
  }, state.trigger, state.inline ? state.popover : React531.createElement(Portal, {
    mountNode: state.mountNode
  }, state.popover))));
};

// node_modules/@fluentui/react-tag-picker/lib/components/TagPicker/useTagPickerContextValues.js
var React532 = __toESM(require_react());
function useTagPickerContextValues(state) {
  const { onOptionClick, registerOption, selectedOptions, selectOption, value, triggerRef, secondaryActionRef, tagPickerGroupRef, targetRef, size, setValue, setOpen, setHasFocus, popoverRef, appearance, clearSelection, getOptionById, getOptionsMatchingValue, open, popoverId, disabled, noPopover } = state;
  return {
    activeDescendant: React532.useMemo(() => ({
      controller: state.activeDescendantController
    }), [
      state.activeDescendantController
    ]),
    listbox: {
      onOptionClick,
      registerOption,
      getOptionById,
      getOptionsMatchingValue,
      selectedOptions,
      selectOption,
      focusVisible: false,
      setActiveOption: noop11
    },
    picker: {
      value,
      triggerRef,
      targetRef,
      secondaryActionRef,
      tagPickerGroupRef,
      size,
      setValue,
      setOpen,
      setHasFocus,
      selectOption,
      popoverRef,
      selectedOptions,
      appearance,
      clearSelection,
      getOptionById,
      open,
      popoverId,
      disabled,
      noPopover
    }
  };
}
var noop11 = () => {
};

// node_modules/@fluentui/react-tag-picker/lib/components/TagPicker/TagPicker.js
var TagPicker = React533.memo((props) => {
  const state = useTagPicker_unstable(props);
  const contextValues = useTagPickerContextValues(state);
  return renderTagPicker_unstable(state, contextValues);
});
TagPicker.displayName = "TagPicker";

// node_modules/@fluentui/react-tag-picker/lib/components/TagPickerInput/TagPickerInput.js
var React535 = __toESM(require_react());

// node_modules/@fluentui/react-tag-picker/lib/components/TagPickerInput/useTagPickerInput.js
var React534 = __toESM(require_react());
var ReactDOM5 = __toESM(require_react_dom());

// node_modules/@fluentui/react-tag-picker/lib/utils/tokens.js
var tagPickerInputCSSRules = {
  width: "--fluent-TagPickerInput__width"
};
var tagPickerInputTokens = {
  width: `var(${tagPickerInputCSSRules.width}, 0)`
};

// node_modules/@fluentui/react-tag-picker/lib/components/TagPickerInput/useTagPickerInput.js
var useTagPickerInput_unstable = (propsArg, ref) => {
  const props = useFieldControlProps_unstable(propsArg, {
    supportsLabelFor: true,
    supportsRequired: true,
    supportsSize: true
  });
  const { controller: activeDescendantController } = useActiveDescendantContext();
  const size = useTagPickerContext_unstable((ctx) => ctx.size);
  const contextDisabled = useTagPickerContext_unstable((ctx) => ctx.disabled);
  const tagPickerGroupRef = useTagPickerContext_unstable((ctx) => ctx.tagPickerGroupRef);
  const triggerRef = useTagPickerContext_unstable((ctx) => ctx.triggerRef);
  const selectedOptions = useTagPickerContext_unstable((ctx) => ctx.selectedOptions);
  const setValue = useTagPickerContext_unstable((ctx) => ctx.setValue);
  const setOpen = useTagPickerContext_unstable((ctx) => ctx.setOpen);
  const setHasFocus = useTagPickerContext_unstable((ctx) => ctx.setHasFocus);
  const clearSelection = useTagPickerContext_unstable((ctx) => ctx.clearSelection);
  const open = useTagPickerContext_unstable((ctx) => ctx.open);
  const popoverId = useTagPickerContext_unstable((ctx) => ctx.noPopover ? void 0 : ctx.popoverId);
  const selectOption = useTagPickerContext_unstable((ctx) => ctx.selectOption);
  const getOptionById = useTagPickerContext_unstable((ctx) => ctx.getOptionById);
  const contextValue = useTagPickerContext_unstable((ctx) => ctx.value);
  useIsomorphicLayoutEffect(() => {
    if (!triggerRef.current) {
      return;
    }
    setTagPickerInputStretchStyle(triggerRef.current);
  }, [
    selectedOptions,
    triggerRef
  ]);
  useIsomorphicLayoutEffect(() => {
    if (triggerRef.current) {
      const input = triggerRef.current;
      const cb = () => setTagPickerInputStretchStyle(input);
      input.addEventListener("input", cb);
      return () => {
        input.removeEventListener("input", cb);
      };
    }
  }, [
    triggerRef
  ]);
  const { value = contextValue, disabled = contextDisabled } = props;
  const { findLastFocusable } = useFocusFinders();
  const isTypingRef = React534.useRef(false);
  const root = useInputTriggerSlot({
    type: "text",
    value: value !== null && value !== void 0 ? value : "",
    "aria-controls": open ? popoverId : void 0,
    disabled,
    ...getIntrinsicElementProps("input", props),
    onKeyDown: useEventCallback((event) => {
      var _props_onKeyDown;
      (_props_onKeyDown = props.onKeyDown) === null || _props_onKeyDown === void 0 ? void 0 : _props_onKeyDown.call(props, event);
      if ((event.key === ArrowLeft || event.key === Backspace) && event.currentTarget.selectionStart === 0 && event.currentTarget.selectionEnd === 0 && tagPickerGroupRef.current) {
        var _findLastFocusable;
        (_findLastFocusable = findLastFocusable(tagPickerGroupRef.current)) === null || _findLastFocusable === void 0 ? void 0 : _findLastFocusable.focus();
      } else if (event.key === Space) {
        if (open && !isTypingRef.current) {
          setOpen(event, false);
        }
      } else if (event.key === Enter) {
        if (open) {
          ReactDOM5.unstable_batchedUpdates(() => {
            setValue(void 0);
            setOpen(event, false);
          });
        } else {
          setOpen(event, true);
        }
      }
      isTypingRef.current = event.key.length === 1 && event.code !== Space && !event.altKey && !event.ctrlKey && !event.metaKey;
    })
  }, useMergedRefs(triggerRef, ref), {
    activeDescendantController,
    freeform: false,
    state: {
      clearSelection,
      getOptionById,
      open,
      selectedOptions,
      selectOption,
      setHasFocus,
      setOpen,
      setValue,
      multiselect: true,
      value: props.value
    }
  });
  const state = {
    components: {
      root: "input"
    },
    root,
    disabled,
    size
  };
  return state;
};
var setTagPickerInputStretchStyle = (input) => {
  input.style.removeProperty(tagPickerInputCSSRules.width);
  if (input.scrollWidth > input.offsetWidth + 1) {
    input.style.setProperty(tagPickerInputCSSRules.width, "100%");
  } else {
    input.style.removeProperty(tagPickerInputCSSRules.width);
  }
};

// node_modules/@fluentui/react-tag-picker/lib/components/TagPickerInput/renderTagPickerInput.js
var renderTagPickerInput_unstable = (state) => {
  assertSlots(state);
  return jsx(state.root, {});
};

// node_modules/@fluentui/react-tag-picker/lib/components/TagPickerInput/useTagPickerInputStyles.styles.js
var tagPickerInputClassNames = {
  root: "fui-TagPickerInput"
};
var useBaseStyle = __resetStyles("r1hdk6fw", null, [".r1hdk6fw{background-color:var(--colorTransparentBackground);color:var(--colorNeutralForeground1);font-family:var(--fontFamilyBase);box-sizing:border-box;border:none;min-width:24px;max-width:100%;width:var(--fluent-TagPickerInput__width, 0);flex-grow:1;}", ".r1hdk6fw:focus{outline-style:none;}", ".r1hdk6fw::-webkit-input-placeholder{color:var(--colorNeutralForeground4);opacity:1;}", ".r1hdk6fw::-moz-placeholder{color:var(--colorNeutralForeground4);opacity:1;}", ".r1hdk6fw::placeholder{color:var(--colorNeutralForeground4);opacity:1;}", ".r1hdk6fw::after{visibility:hidden;white-space:pre-wrap;}"]);
var useStyles70 = __styles2({
  medium: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "figsok6",
    Bg96gwp: "f1i3iumi",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "fa2pw7h"
  },
  large: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "figsok6",
    Bg96gwp: "f1i3iumi",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "ft37c3"
  },
  "extra-large": {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "figsok6",
    Bg96gwp: "f1i3iumi",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f3abo53"
  },
  disabled: {
    sj55zd: "f1s2aq7o",
    De3pzq: "f1c21dwh",
    Bceei9c: "fdrzuqr",
    yvdlaj: "fahhnxm"
  }
}, {
  d: [".fk6fouc{font-family:var(--fontFamilyBase);}", ".fkhj508{font-size:var(--fontSizeBase300);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}", [".fa2pw7h{padding:var(--spacingVerticalSNudge) 0 var(--spacingVerticalSNudge) 0;}", {
    p: -1
  }], [".ft37c3{padding:var(--spacingVerticalMNudge) 0 var(--spacingVerticalMNudge) 0;}", {
    p: -1
  }], [".f3abo53{padding:var(--spacingVerticalM) 0 var(--spacingVerticalM) 0;}", {
    p: -1
  }], ".f1s2aq7o{color:var(--colorNeutralForegroundDisabled);}", ".f1c21dwh{background-color:var(--colorTransparentBackground);}", ".fdrzuqr{cursor:not-allowed;}", ".fahhnxm::-webkit-input-placeholder{color:var(--colorNeutralForegroundDisabled);}", ".fahhnxm::-moz-placeholder{color:var(--colorNeutralForegroundDisabled);}"]
});
var useTagPickerInputStyles_unstable = (state) => {
  "use no memo";
  const baseStyle = useBaseStyle();
  const styles = useStyles70();
  state.root.className = mergeClasses(tagPickerInputClassNames.root, baseStyle, styles[state.size], state.disabled && styles.disabled, state.root.className);
  return state;
};

// node_modules/@fluentui/react-tag-picker/lib/components/TagPickerInput/TagPickerInput.js
var TagPickerInput = React535.forwardRef((props, ref) => {
  const state = useTagPickerInput_unstable(props, ref);
  useTagPickerInputStyles_unstable(state);
  useCustomStyleHook("useTagPickerInputStyles_unstable")(state);
  return renderTagPickerInput_unstable(state);
});
TagPickerInput.displayName = "TagPickerInput";

// node_modules/@fluentui/react-tag-picker/lib/components/TagPickerList/TagPickerList.js
var React537 = __toESM(require_react());

// node_modules/@fluentui/react-tag-picker/lib/components/TagPickerList/useTagPickerList.js
var React536 = __toESM(require_react());
var useTagPickerList_unstable = (props, ref) => {
  const triggerRef = useTagPickerContext_unstable((ctx) => ctx.triggerRef);
  const popoverRef = useTagPickerContext_unstable((ctx) => ctx.popoverRef);
  const popoverId = useTagPickerContext_unstable((ctx) => ctx.popoverId);
  const open = useTagPickerContext_unstable((ctx) => ctx.open);
  return {
    open,
    components: {
      root: Listbox
    },
    root: slot_exports.always({
      ...useListboxSlot(props, useMergedRefs(popoverRef, ref), {
        state: {
          multiselect: true
        },
        triggerRef,
        defaultProps: {
          id: popoverId
        }
      }),
      role: "listbox"
    }, {
      elementType: Listbox
    })
  };
};

// node_modules/@fluentui/react-tag-picker/lib/components/TagPickerList/renderTagPickerList.js
var renderTagPickerList_unstable = (state) => {
  assertSlots(state);
  return jsx(state.root, {});
};

// node_modules/@fluentui/react-tag-picker/lib/components/TagPickerList/useTagPickerListStyles.styles.js
var tagPickerListClassNames = {
  root: "fui-TagPickerList"
};
var useStyles71 = __styles2({
  root: {
    E5pizo: "f1hg901r",
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "ft85np5",
    Bxyxcbc: "fmmk62d",
    B7ck84d: "f1ewtqcl"
  },
  collapsed: {
    mc9l5x: "fjseox"
  }
}, {
  d: [".f1hg901r{box-shadow:var(--shadow16);}", [".ft85np5{border-radius:var(--borderRadiusMedium);}", {
    p: -1
  }], ".fmmk62d{max-height:80vh;}", ".f1ewtqcl{box-sizing:border-box;}", ".fjseox{display:none;}"]
});
var useTagPickerListStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles71();
  state.root.className = mergeClasses(tagPickerListClassNames.root, styles.root, !state.open && styles.collapsed, state.root.className);
  return state;
};

// node_modules/@fluentui/react-tag-picker/lib/components/TagPickerList/TagPickerList.js
var TagPickerList = React537.forwardRef((props, ref) => {
  const state = useTagPickerList_unstable(props, ref);
  useTagPickerListStyles_unstable(state);
  useCustomStyleHook("useTagPickerListStyles_unstable")(state);
  return renderTagPickerList_unstable(state);
});
TagPickerList.displayName = "TagPickerList";

// node_modules/@fluentui/react-tag-picker/lib/components/TagPickerButton/TagPickerButton.js
var React539 = __toESM(require_react());

// node_modules/@fluentui/react-tag-picker/lib/components/TagPickerButton/useTagPickerButton.js
var React538 = __toESM(require_react());
var useTagPickerButton_unstable = (props, ref) => {
  const { controller: activeDescendantController } = useActiveDescendantContext();
  const triggerRef = useTagPickerContext_unstable((ctx) => ctx.triggerRef);
  const open = useTagPickerContext_unstable((ctx) => ctx.open);
  const value = useTagPickerContext_unstable((ctx) => ctx.value);
  const hasSelectedOption = useTagPickerContext_unstable((ctx) => ctx.selectedOptions.length > 0);
  const popoverId = useTagPickerContext_unstable((ctx) => ctx.popoverId);
  const getOptionById = useTagPickerContext_unstable((ctx) => ctx.getOptionById);
  const selectOption = useTagPickerContext_unstable((ctx) => ctx.selectOption);
  const setHasFocus = useTagPickerContext_unstable((ctx) => ctx.setHasFocus);
  const setOpen = useTagPickerContext_unstable((ctx) => ctx.setOpen);
  const root = useButtonTriggerSlot(props, triggerRef, {
    activeDescendantController,
    defaultProps: {
      type: "button",
      tabIndex: 0,
      children: value || props.placeholder,
      "aria-controls": open ? popoverId : void 0,
      ref
    },
    state: {
      getOptionById,
      open,
      selectOption,
      setHasFocus,
      setOpen,
      multiselect: true
    }
  });
  const size = useTagPickerContext_unstable((ctx) => ctx.size);
  const state = {
    components: {
      root: "button"
    },
    root,
    size,
    hasSelectedOption
  };
  return state;
};

// node_modules/@fluentui/react-tag-picker/lib/components/TagPickerButton/renderTagPickerButton.js
var renderTagPickerButton_unstable = (state) => {
  assertSlots(state);
  return jsx(state.root, {});
};

// node_modules/@fluentui/react-tag-picker/lib/components/TagPickerButton/useTagPickerButtonStyles.styles.js
var tagPickerButtonClassNames = {
  root: "fui-TagPickerButton"
};
var useStyles72 = __styles2({
  button: {
    Bt984gj: "f122n59",
    sshi5w: "f1nxs5xn",
    De3pzq: "f1c21dwh",
    Bgfg5da: 0,
    B9xav0g: 0,
    oivjwe: 0,
    Bn0qgzm: 0,
    B4g9neb: 0,
    zhjwy3: 0,
    wvpqe5: 0,
    ibv6hh: 0,
    u1mtju: 0,
    h3c5rm: 0,
    vrafjx: 0,
    Bekrc4i: 0,
    i8vvqc: 0,
    g2u3we: 0,
    icvyot: 0,
    B4j52fo: 0,
    irswps: "f3bhgqh",
    B7ck84d: "f1ewtqcl",
    sj55zd: "f19n0e5",
    i8kkvl: "f14mj54c",
    Bceei9c: "f1k6fduh",
    Bahqtrf: "fk6fouc",
    fsow6f: ["f1o700av", "fes3tcz"],
    Bh6795r: "fqerorx",
    Brovlpu: "ftqa4ok"
  },
  placeholder: {
    sj55zd: "fxc4j92"
  },
  medium: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fy9rknc",
    Bhrd7zp: "figsok6",
    Bg96gwp: "fwrc4pm",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: ["fye6m5k", "f3cq2dl"]
  },
  large: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "figsok6",
    Bg96gwp: "f1i3iumi",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: ["f14ev680", "f58uxzw"]
  },
  "extra-large": {
    i8kkvl: "f1rjii52",
    Bahqtrf: "fk6fouc",
    Be2twd7: "fod5ikn",
    Bhrd7zp: "figsok6",
    Bg96gwp: "faaz57k",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: ["f139mn7i", "f1v3q0m"]
  },
  outline: {
    De3pzq: "fxugw4r",
    Bgfg5da: 0,
    B9xav0g: "f1c1zstj",
    oivjwe: 0,
    Bn0qgzm: 0,
    B4g9neb: 0,
    zhjwy3: 0,
    wvpqe5: 0,
    ibv6hh: 0,
    u1mtju: 0,
    h3c5rm: 0,
    vrafjx: 0,
    Bekrc4i: 0,
    i8vvqc: 0,
    g2u3we: 0,
    icvyot: 0,
    B4j52fo: 0,
    irswps: "fhz96rm"
  },
  outlineInteractive: {
    Bgoe8wy: "fvcxoqz",
    Bwzppfd: ["f1ub3y4t", "f1m52nbi"],
    oetu4i: "flmw63s",
    gg5e9n: ["f1m52nbi", "f1ub3y4t"],
    B6oc9vd: "fvs00aa",
    ak43y8: ["f1assf6x", "f4ruux4"],
    wmxk5l: "fqhmt4z",
    B50zh58: ["f4ruux4", "f1assf6x"]
  },
  underline: {
    De3pzq: "f1c21dwh",
    B9xav0g: 0,
    oivjwe: 0,
    Bn0qgzm: 0,
    Bgfg5da: "f9ez7ne",
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "fokr779"
  },
  "filled-lighter": {
    De3pzq: "fxugw4r",
    Bgfg5da: 0,
    B9xav0g: 0,
    oivjwe: 0,
    Bn0qgzm: 0,
    B4g9neb: 0,
    zhjwy3: 0,
    wvpqe5: 0,
    ibv6hh: 0,
    u1mtju: 0,
    h3c5rm: 0,
    vrafjx: 0,
    Bekrc4i: 0,
    i8vvqc: 0,
    g2u3we: 0,
    icvyot: 0,
    B4j52fo: 0,
    irswps: "fs2rfia"
  },
  "filled-darker": {
    De3pzq: "f16xq7d1",
    Bgfg5da: 0,
    B9xav0g: 0,
    oivjwe: 0,
    Bn0qgzm: 0,
    B4g9neb: 0,
    zhjwy3: 0,
    wvpqe5: 0,
    ibv6hh: 0,
    u1mtju: 0,
    h3c5rm: 0,
    vrafjx: 0,
    Bekrc4i: 0,
    i8vvqc: 0,
    g2u3we: 0,
    icvyot: 0,
    B4j52fo: 0,
    irswps: "fs2rfia"
  },
  invalid: {
    tvckwq: "fs4k3qj",
    gk2u95: ["fcee079", "fmyw78r"],
    hhx65j: "f1fgmyf4",
    Bxowmz0: ["fmyw78r", "fcee079"]
  },
  invalidUnderline: {
    hhx65j: "f1fgmyf4"
  },
  disabled: {
    Bceei9c: "fdrzuqr",
    De3pzq: "f1c21dwh",
    g2u3we: "f1jj8ep1",
    h3c5rm: ["f15xbau", "fy0fskl"],
    B9xav0g: "f4ikngz",
    zhjwy3: ["fy0fskl", "f15xbau"],
    Bjwas2f: "fg455y9",
    Bn1d65q: ["f1rvyvqg", "f14g86mu"],
    Bxeuatn: "f1cwzwz",
    n51gp8: ["f14g86mu", "f1rvyvqg"]
  },
  disabledText: {
    sj55zd: "f1s2aq7o",
    Bceei9c: "fdrzuqr"
  },
  hidden: {
    mc9l5x: "fjseox"
  },
  visuallyHidden: {
    Bh84pgu: "f1ekcaio",
    Bqenvij: "f1mpe4l3",
    jrapky: 0,
    Frg6f3: 0,
    t21cq0: 0,
    B6of3ja: 0,
    B74szlk: "f1jlpb2r",
    B68tc82: 0,
    Bmxbyg5: 0,
    Bpg54ce: "f1a3p1vp",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f1c5fvqg",
    a9b677: "frkrog8",
    qhf8xq: "f1euv43f"
  }
}, {
  d: [".f122n59{align-items:center;}", ".f1nxs5xn{min-height:32px;}", ".f1c21dwh{background-color:var(--colorTransparentBackground);}", [".f3bhgqh{border:none;}", {
    p: -2
  }], ".f1ewtqcl{box-sizing:border-box;}", ".f19n0e5{color:var(--colorNeutralForeground1);}", ".f14mj54c{column-gap:var(--spacingHorizontalXXS);}", ".f1k6fduh{cursor:pointer;}", ".fk6fouc{font-family:var(--fontFamilyBase);}", ".f1o700av{text-align:left;}", ".fes3tcz{text-align:right;}", ".fqerorx{flex-grow:1;}", ".fxc4j92{color:var(--colorNeutralForeground4);}", ".fy9rknc{font-size:var(--fontSizeBase200);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".fwrc4pm{line-height:var(--lineHeightBase200);}", [".fye6m5k{padding:3px var(--spacingHorizontalSNudge) 3px calc(var(--spacingHorizontalSNudge) + var(--spacingHorizontalXXS));}", {
    p: -1
  }], [".f3cq2dl{padding:3px calc(var(--spacingHorizontalSNudge) + var(--spacingHorizontalXXS)) 3px var(--spacingHorizontalSNudge);}", {
    p: -1
  }], ".fkhj508{font-size:var(--fontSizeBase300);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}", [".f14ev680{padding:5px var(--spacingHorizontalMNudge) 5px calc(var(--spacingHorizontalMNudge) + var(--spacingHorizontalXXS));}", {
    p: -1
  }], [".f58uxzw{padding:5px calc(var(--spacingHorizontalMNudge) + var(--spacingHorizontalXXS)) 5px var(--spacingHorizontalMNudge);}", {
    p: -1
  }], ".f1rjii52{column-gap:var(--spacingHorizontalSNudge);}", ".fod5ikn{font-size:var(--fontSizeBase400);}", ".faaz57k{line-height:var(--lineHeightBase400);}", [".f139mn7i{padding:7px var(--spacingHorizontalM) 7px calc(var(--spacingHorizontalM) + var(--spacingHorizontalSNudge));}", {
    p: -1
  }], [".f1v3q0m{padding:7px calc(var(--spacingHorizontalM) + var(--spacingHorizontalSNudge)) 7px var(--spacingHorizontalM);}", {
    p: -1
  }], ".fxugw4r{background-color:var(--colorNeutralBackground1);}", [".fhz96rm{border:var(--strokeWidthThin) solid var(--colorNeutralStroke1);}", {
    p: -2
  }], ".f1c1zstj{border-bottom-color:var(--colorNeutralStrokeAccessible);}", [".f9ez7ne{border-bottom:var(--strokeWidthThin) solid var(--colorNeutralStrokeAccessible);}", {
    p: -1
  }], [".fokr779{border-radius:0;}", {
    p: -1
  }], [".fs2rfia{border:var(--strokeWidthThin) solid transparent;}", {
    p: -2
  }], ".f16xq7d1{background-color:var(--colorNeutralBackground3);}", [".fs2rfia{border:var(--strokeWidthThin) solid transparent;}", {
    p: -2
  }], ".fs4k3qj:not(:focus-within),.fs4k3qj:hover:not(:focus-within){border-top-color:var(--colorPaletteRedBorder2);}", ".fcee079:not(:focus-within),.fcee079:hover:not(:focus-within){border-right-color:var(--colorPaletteRedBorder2);}", ".fmyw78r:not(:focus-within),.fmyw78r:hover:not(:focus-within){border-left-color:var(--colorPaletteRedBorder2);}", ".f1fgmyf4:not(:focus-within),.f1fgmyf4:hover:not(:focus-within){border-bottom-color:var(--colorPaletteRedBorder2);}", ".fdrzuqr{cursor:not-allowed;}", ".f1jj8ep1{border-top-color:var(--colorNeutralStrokeDisabled);}", ".f15xbau{border-right-color:var(--colorNeutralStrokeDisabled);}", ".fy0fskl{border-left-color:var(--colorNeutralStrokeDisabled);}", ".f4ikngz{border-bottom-color:var(--colorNeutralStrokeDisabled);}", ".f1s2aq7o{color:var(--colorNeutralForegroundDisabled);}", ".fjseox{display:none;}", ".f1ekcaio{clip:rect(0px, 0px, 0px, 0px);}", ".f1mpe4l3{height:1px;}", [".f1jlpb2r{margin:-1px;}", {
    p: -1
  }], [".f1a3p1vp{overflow:hidden;}", {
    p: -1
  }], [".f1c5fvqg{padding:0px;}", {
    p: -1
  }], ".frkrog8{width:1px;}", ".f1euv43f{position:absolute;}"],
  f: [".ftqa4ok:focus{outline-style:none;}"],
  h: [".fvcxoqz:hover{border-top-color:var(--colorNeutralStroke1Hover);}", ".f1ub3y4t:hover{border-right-color:var(--colorNeutralStroke1Hover);}", ".f1m52nbi:hover{border-left-color:var(--colorNeutralStroke1Hover);}", ".flmw63s:hover{border-bottom-color:var(--colorNeutralStrokeAccessible);}"],
  a: [".fvs00aa:active{border-top-color:var(--colorNeutralStroke1Pressed);}", ".f1assf6x:active{border-right-color:var(--colorNeutralStroke1Pressed);}", ".f4ruux4:active{border-left-color:var(--colorNeutralStroke1Pressed);}", ".fqhmt4z:active{border-bottom-color:var(--colorNeutralStrokeAccessible);}"],
  m: [["@media (forced-colors: active){.fg455y9{border-top-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f14g86mu{border-left-color:GrayText;}.f1rvyvqg{border-right-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1cwzwz{border-bottom-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }]]
});
var useTagPickerButtonStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles72();
  state.root.className = mergeClasses(tagPickerButtonClassNames.root, styles.button, styles[state.size], state.hasSelectedOption && styles.visuallyHidden, state.root.className);
  return state;
};

// node_modules/@fluentui/react-tag-picker/lib/components/TagPickerButton/TagPickerButton.js
var TagPickerButton = React539.forwardRef((props, ref) => {
  const state = useTagPickerButton_unstable(props, ref);
  useTagPickerButtonStyles_unstable(state);
  useCustomStyleHook("useTagPickerButtonStyles_unstable")(state);
  return renderTagPickerButton_unstable(state);
});
TagPickerButton.displayName = "TagPickerButton";

// node_modules/@fluentui/react-tag-picker/lib/components/TagPickerControl/TagPickerControl.js
var React543 = __toESM(require_react());

// node_modules/@fluentui/react-tag-picker/lib/components/TagPickerControl/useTagPickerControl.js
var React542 = __toESM(require_react());

// node_modules/@fluentui/react-tag-picker/lib/utils/useResizeObserverRef.js
var React540 = __toESM(require_react());
var useResizeObserverRef = (callback) => {
  const { targetDocument } = useFluent();
  const [observer] = React540.useState(() => {
    var _targetDocument_defaultView;
    const ResizeObserverConstructor = targetDocument === null || targetDocument === void 0 ? void 0 : (_targetDocument_defaultView = targetDocument.defaultView) === null || _targetDocument_defaultView === void 0 ? void 0 : _targetDocument_defaultView.ResizeObserver;
    if (ResizeObserverConstructor) {
      return new ResizeObserverConstructor(callback);
    }
  });
  const ref = React540.useCallback((element) => {
    if (element) {
      observer === null || observer === void 0 ? void 0 : observer.observe(element);
    } else {
      observer === null || observer === void 0 ? void 0 : observer.disconnect();
    }
  }, [
    observer
  ]);
  return ref;
};

// node_modules/@fluentui/react-tag-picker/lib/components/TagPickerControl/useTagPickerControlStyles.styles.js
var tagPickerControlClassNames = {
  root: "fui-TagPickerControl",
  expandIcon: "fui-TagPickerControl__expandIcon",
  secondaryAction: "fui-TagPickerControl__secondaryAction",
  aside: "fui-TagPickerControl__aside"
};
var tagPickerControlAsideWidthToken = "--fui-TagPickerControl-aside-width";
var useStyles73 = __styles2({
  root: {
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "ft85np5",
    z189sj: ["f1d8q41i", "f8lqu5g"],
    uwmqm3: ["f1uw59to", "fw5db7e"],
    Bt984gj: "f122n59",
    i8kkvl: "f14mj54c",
    B7ck84d: "f1ewtqcl",
    mc9l5x: "f22iagw",
    Bf4jedk: "f1exfvgq",
    qhf8xq: "f10pi13n",
    Eh141a: "fni485r",
    Bbr2w1p: "f14a1fxs",
    Bduesf4: "f3e99gv",
    Bpq79vn: "fhljsf7",
    li1rpt: "f1gw3sf2",
    Bsft5z2: "f13zj6fq",
    E3zdtr: "f1mdlcz9",
    Eqx8gd: ["f1a7op3", "f1cjjd47"],
    By385i5: "f1gboi2j",
    B1piin3: ["f1cjjd47", "f1a7op3"],
    Dlnsje: "f145g4dw",
    d9w3h3: ["f1kp91vd", "f1ibwz09"],
    B3778ie: ["f1ibwz09", "f1kp91vd"],
    B1q35kw: 0,
    Bw17bha: 0,
    Bcgy8vk: 0,
    Bjuhk93: "f1mnjydx",
    Gjdm7m: "f13evtba",
    b1kco5: "f1yk9hq",
    Ba2ppi3: "fhwpy7i",
    F2fol1: "f14ee0xe",
    lck23g: "f1xhbsuh",
    df92cz: "fv8e3ye",
    I188md: "ftb5wc6",
    umuwi5: "fjw5xc1",
    Blcqepd: "f1xdyd5c",
    nplu4u: "fatpbeo",
    Bioka5o: "fb7uyps",
    H713fs: "f1cmft4k",
    B9ooomg: "f1x58t8o",
    Bercvud: "f1ibeo51"
  },
  listbox: {
    E5pizo: "f1hg901r",
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "ft85np5",
    Bxyxcbc: "fmmk62d",
    B7ck84d: "f1ewtqcl"
  },
  listboxCollapsed: {
    mc9l5x: "fjseox"
  },
  medium: {
    sshi5w: "f1nxs5xn"
  },
  large: {
    sshi5w: "f1w5jphr"
  },
  "extra-large": {
    sshi5w: "f5pgtk9"
  },
  outline: {
    De3pzq: "fxugw4r",
    Bgfg5da: 0,
    B9xav0g: "f1c1zstj",
    oivjwe: 0,
    Bn0qgzm: 0,
    B4g9neb: 0,
    zhjwy3: 0,
    wvpqe5: 0,
    ibv6hh: 0,
    u1mtju: 0,
    h3c5rm: 0,
    vrafjx: 0,
    Bekrc4i: 0,
    i8vvqc: 0,
    g2u3we: 0,
    icvyot: 0,
    B4j52fo: 0,
    irswps: "fhz96rm"
  },
  outlineInteractive: {
    Bgoe8wy: "fvcxoqz",
    Bwzppfd: ["f1ub3y4t", "f1m52nbi"],
    oetu4i: "flmw63s",
    gg5e9n: ["f1m52nbi", "f1ub3y4t"],
    B6oc9vd: "fvs00aa",
    ak43y8: ["f1assf6x", "f4ruux4"],
    wmxk5l: "fqhmt4z",
    B50zh58: ["f4ruux4", "f1assf6x"]
  },
  underline: {
    De3pzq: "f1c21dwh",
    B9xav0g: 0,
    oivjwe: 0,
    Bn0qgzm: 0,
    Bgfg5da: "f9ez7ne",
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "fokr779"
  },
  "filled-lighter": {
    De3pzq: "fxugw4r",
    Bgfg5da: 0,
    B9xav0g: 0,
    oivjwe: 0,
    Bn0qgzm: 0,
    B4g9neb: 0,
    zhjwy3: 0,
    wvpqe5: 0,
    ibv6hh: 0,
    u1mtju: 0,
    h3c5rm: 0,
    vrafjx: 0,
    Bekrc4i: 0,
    i8vvqc: 0,
    g2u3we: 0,
    icvyot: 0,
    B4j52fo: 0,
    irswps: "f88035w"
  },
  "filled-darker": {
    De3pzq: "f16xq7d1",
    Bgfg5da: 0,
    B9xav0g: 0,
    oivjwe: 0,
    Bn0qgzm: 0,
    B4g9neb: 0,
    zhjwy3: 0,
    wvpqe5: 0,
    ibv6hh: 0,
    u1mtju: 0,
    h3c5rm: 0,
    vrafjx: 0,
    Bekrc4i: 0,
    i8vvqc: 0,
    g2u3we: 0,
    icvyot: 0,
    B4j52fo: 0,
    irswps: "f88035w"
  },
  invalid: {
    tvckwq: "fs4k3qj",
    gk2u95: ["fcee079", "fmyw78r"],
    hhx65j: "f1fgmyf4",
    Bxowmz0: ["fmyw78r", "fcee079"]
  },
  invalidUnderline: {
    hhx65j: "f1fgmyf4"
  },
  disabled: {
    Bceei9c: "fdrzuqr",
    De3pzq: "f1c21dwh",
    g2u3we: "f1jj8ep1",
    h3c5rm: ["f15xbau", "fy0fskl"],
    B9xav0g: "f4ikngz",
    zhjwy3: ["fy0fskl", "f15xbau"],
    Bjwas2f: "fg455y9",
    Bn1d65q: ["f1rvyvqg", "f14g86mu"],
    Bxeuatn: "f1cwzwz",
    n51gp8: ["f14g86mu", "f1rvyvqg"]
  }
}, {
  d: [[".ft85np5{border-radius:var(--borderRadiusMedium);}", {
    p: -1
  }], ".f1d8q41i{padding-right:calc(var(--spacingHorizontalM) + var(--fui-TagPickerControl-aside-width, 0px));}", ".f8lqu5g{padding-left:calc(var(--spacingHorizontalM) + var(--fui-TagPickerControl-aside-width, 0px));}", ".f1uw59to{padding-left:var(--spacingHorizontalM);}", ".fw5db7e{padding-right:var(--spacingHorizontalM);}", ".f122n59{align-items:center;}", ".f14mj54c{column-gap:var(--spacingHorizontalXXS);}", ".f1ewtqcl{box-sizing:border-box;}", ".f22iagw{display:flex;}", ".f1exfvgq{min-width:250px;}", ".f10pi13n{position:relative;}", ".fni485r{flex-wrap:wrap;}", ".f1gw3sf2::after{box-sizing:border-box;}", '.f13zj6fq::after{content:"";}', ".f1mdlcz9::after{position:absolute;}", ".f1a7op3::after{left:-1px;}", ".f1cjjd47::after{right:-1px;}", ".f1gboi2j::after{bottom:-1px;}", ".f145g4dw::after{height:max(2px, var(--borderRadiusMedium));}", ".f1kp91vd::after{border-bottom-left-radius:var(--borderRadiusMedium);}", ".f1ibwz09::after{border-bottom-right-radius:var(--borderRadiusMedium);}", [".f1mnjydx::after{border-bottom:var(--strokeWidthThick) solid var(--colorCompoundBrandStroke);}", {
    p: -1
  }], ".f13evtba::after{clip-path:inset(calc(100% - 2px) 0 0 0);}", ".f1yk9hq::after{transform:scaleX(0);}", ".fhwpy7i::after{transition-property:transform;}", ".f14ee0xe::after{transition-duration:var(--durationUltraFast);}", ".f1xhbsuh::after{transition-delay:var(--curveAccelerateMid);}", ".f1hg901r{box-shadow:var(--shadow16);}", [".ft85np5{border-radius:var(--borderRadiusMedium);}", {
    p: -1
  }], ".fmmk62d{max-height:80vh;}", ".fjseox{display:none;}", ".f1nxs5xn{min-height:32px;}", ".f1w5jphr{min-height:40px;}", ".f5pgtk9{min-height:44px;}", ".fxugw4r{background-color:var(--colorNeutralBackground1);}", [".fhz96rm{border:var(--strokeWidthThin) solid var(--colorNeutralStroke1);}", {
    p: -2
  }], ".f1c1zstj{border-bottom-color:var(--colorNeutralStrokeAccessible);}", ".f1c21dwh{background-color:var(--colorTransparentBackground);}", [".f9ez7ne{border-bottom:var(--strokeWidthThin) solid var(--colorNeutralStrokeAccessible);}", {
    p: -1
  }], [".fokr779{border-radius:0;}", {
    p: -1
  }], [".f88035w{border:var(--strokeWidthThin) solid var(--colorTransparentStroke);}", {
    p: -2
  }], ".f16xq7d1{background-color:var(--colorNeutralBackground3);}", [".f88035w{border:var(--strokeWidthThin) solid var(--colorTransparentStroke);}", {
    p: -2
  }], ".fs4k3qj:not(:focus-within),.fs4k3qj:hover:not(:focus-within){border-top-color:var(--colorPaletteRedBorder2);}", ".fcee079:not(:focus-within),.fcee079:hover:not(:focus-within){border-right-color:var(--colorPaletteRedBorder2);}", ".fmyw78r:not(:focus-within),.fmyw78r:hover:not(:focus-within){border-left-color:var(--colorPaletteRedBorder2);}", ".f1fgmyf4:not(:focus-within),.f1fgmyf4:hover:not(:focus-within){border-bottom-color:var(--colorPaletteRedBorder2);}", ".fdrzuqr{cursor:not-allowed;}", ".f1jj8ep1{border-top-color:var(--colorNeutralStrokeDisabled);}", ".f15xbau{border-right-color:var(--colorNeutralStrokeDisabled);}", ".fy0fskl{border-left-color:var(--colorNeutralStrokeDisabled);}", ".f4ikngz{border-bottom-color:var(--colorNeutralStrokeDisabled);}"],
  w: [".f14a1fxs:focus-within{outline-width:2px;}", ".f3e99gv:focus-within{outline-style:solid;}", ".fhljsf7:focus-within{outline-color:transparent;}", ".fjw5xc1:focus-within::after{transform:scaleX(1);}", ".f1xdyd5c:focus-within::after{transition-property:transform;}", ".fatpbeo:focus-within::after{transition-duration:var(--durationNormal);}", ".fb7uyps:focus-within::after{transition-delay:var(--curveDecelerateMid);}", ".f1ibeo51:focus-within:active::after{border-bottom-color:var(--colorCompoundBrandStrokePressed);}"],
  m: [["@media screen and (prefers-reduced-motion: reduce){.fv8e3ye::after{transition-duration:0.01ms;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }], ["@media screen and (prefers-reduced-motion: reduce){.ftb5wc6::after{transition-delay:0.01ms;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }], ["@media screen and (prefers-reduced-motion: reduce){.f1cmft4k:focus-within::after{transition-duration:0.01ms;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }], ["@media screen and (prefers-reduced-motion: reduce){.f1x58t8o:focus-within::after{transition-delay:0.01ms;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }], ["@media (forced-colors: active){.fg455y9{border-top-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f14g86mu{border-left-color:GrayText;}.f1rvyvqg{border-right-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1cwzwz{border-bottom-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }]],
  h: [".fvcxoqz:hover{border-top-color:var(--colorNeutralStroke1Hover);}", ".f1ub3y4t:hover{border-right-color:var(--colorNeutralStroke1Hover);}", ".f1m52nbi:hover{border-left-color:var(--colorNeutralStroke1Hover);}", ".flmw63s:hover{border-bottom-color:var(--colorNeutralStrokeAccessible);}"],
  a: [".fvs00aa:active{border-top-color:var(--colorNeutralStroke1Pressed);}", ".f1assf6x:active{border-right-color:var(--colorNeutralStroke1Pressed);}", ".f4ruux4:active{border-left-color:var(--colorNeutralStroke1Pressed);}", ".fqhmt4z:active{border-bottom-color:var(--colorNeutralStrokeAccessible);}"]
});
var useAsideStyles = __styles2({
  root: {
    mc9l5x: "f13qh94s",
    Bt984gj: "f122n59",
    qhf8xq: "f1euv43f",
    Bhzewxz: "f15twtuk",
    j35jbq: ["f8b87gs", "fedtrts"],
    Budl1dq: "f13p5kfd",
    wkccdc: "fjg31ve",
    Bqenvij: "f1l02sjl",
    Bceei9c: "f113hnb5"
  },
  medium: {
    sshi5w: "f1nxs5xn"
  },
  large: {
    sshi5w: "f1w5jphr"
  },
  "extra-large": {
    sshi5w: "f5pgtk9"
  }
}, {
  d: [".f13qh94s{display:grid;}", ".f122n59{align-items:center;}", ".f1euv43f{position:absolute;}", ".f15twtuk{top:0;}", ".f8b87gs{right:var(--spacingHorizontalM);}", ".fedtrts{left:var(--spacingHorizontalM);}", ".f13p5kfd{grid-template-columns:repeat(2, auto);}", ".fjg31ve{grid-template-rows:minmax(32px, auto) 1fr;}", ".f1l02sjl{height:100%;}", ".f113hnb5{cursor:text;}", ".f1nxs5xn{min-height:32px;}", ".f1w5jphr{min-height:40px;}", ".f5pgtk9{min-height:44px;}"]
});
var useIconStyles11 = __styles2({
  icon: {
    B7ck84d: "f1ewtqcl",
    sj55zd: "fxkbij4",
    Bceei9c: "f1k6fduh",
    mc9l5x: "ftgm304",
    Be2twd7: "f1pp30po",
    Bo70h7d: "fvc9v3g"
  },
  medium: {
    Be2twd7: "f4ybsrx",
    Frg6f3: ["f1h9en5y", "f1xk557c"]
  },
  large: {
    Be2twd7: "fe5j1ua",
    Frg6f3: ["f1h9en5y", "f1xk557c"]
  },
  "extra-large": {
    Be2twd7: "f1rt2boy",
    Frg6f3: ["f1t5qyk5", "f1ikr372"]
  },
  disabled: {
    sj55zd: "f1s2aq7o",
    Bceei9c: "fdrzuqr"
  }
}, {
  d: [".f1ewtqcl{box-sizing:border-box;}", ".fxkbij4{color:var(--colorNeutralStrokeAccessible);}", ".f1k6fduh{cursor:pointer;}", ".ftgm304{display:block;}", ".f1pp30po{font-size:var(--fontSizeBase500);}", ".fvc9v3g svg{display:block;}", ".f4ybsrx{font-size:16px;}", ".f1h9en5y{margin-left:var(--spacingHorizontalXXS);}", ".f1xk557c{margin-right:var(--spacingHorizontalXXS);}", ".fe5j1ua{font-size:20px;}", ".f1rt2boy{font-size:24px;}", ".f1t5qyk5{margin-left:var(--spacingHorizontalSNudge);}", ".f1ikr372{margin-right:var(--spacingHorizontalSNudge);}", ".f1s2aq7o{color:var(--colorNeutralForegroundDisabled);}", ".fdrzuqr{cursor:not-allowed;}"]
});
var useTagPickerControlStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles73();
  const iconStyles = useIconStyles11();
  const asideStyles = useAsideStyles();
  state.root.className = mergeClasses(tagPickerControlClassNames.root, styles.root, styles[state.size], styles[state.appearance], !state.disabled && state.appearance === "outline" && styles.outlineInteractive, state.invalid && state.appearance !== "underline" && styles.invalid, state.invalid && state.appearance === "underline" && styles.invalidUnderline, state.disabled && styles.disabled, state.root.className);
  if (state.aside) {
    state.aside.className = mergeClasses(tagPickerControlClassNames.aside, asideStyles.root, asideStyles[state.size], state.aside.className);
  }
  if (state.expandIcon) {
    state.expandIcon.className = mergeClasses(tagPickerControlClassNames.expandIcon, iconStyles.icon, iconStyles[state.size], state.disabled && iconStyles.disabled, state.expandIcon.className);
  }
  if (state.secondaryAction) {
    state.secondaryAction.className = mergeClasses(tagPickerControlClassNames.secondaryAction, state.secondaryAction.className);
  }
  return state;
};

// node_modules/@fluentui/react-tag-picker/lib/utils/useExpandLabel.js
var React541 = __toESM(require_react());
function useExpandLabel(options) {
  const { tagPickerId, state } = options;
  const { targetDocument } = useFluent();
  const triggerRef = useTagPickerContext_unstable((ctx) => ctx.triggerRef);
  const expandIconRef = React541.useRef(null);
  const hasExpandIcon = !!state.expandIcon;
  const { "aria-label": expandIconAriaLabel, "aria-labelledby": expandIconAriaLabelledby, id: expandIconId } = state.expandIcon || {};
  const getExpandLabel = React541.useCallback((ariaLabel, ariaLabelledBy) => {
    let expandAriaLabel = void 0;
    let expandAriaLabelledBy = void 0;
    let expandId = void 0;
    if (hasExpandIcon) {
      const hasExpandLabel = expandIconAriaLabel || expandIconAriaLabelledby;
      const defaultOpenString = "Open";
      if (!hasExpandLabel) {
        if (ariaLabelledBy) {
          expandAriaLabel = defaultOpenString;
          expandId = expandIconId !== null && expandIconId !== void 0 ? expandIconId : `${tagPickerId}-chevron`;
          expandAriaLabelledBy = `${expandId} ${ariaLabelledBy}`;
        } else if (ariaLabel) {
          expandAriaLabel = `${defaultOpenString} ${ariaLabel}`;
        } else {
          expandAriaLabel = defaultOpenString;
        }
      }
    }
    return {
      expandAriaLabel,
      expandAriaLabelledBy,
      expandId
    };
  }, [
    expandIconAriaLabel,
    expandIconAriaLabelledby,
    expandIconId,
    hasExpandIcon,
    tagPickerId
  ]);
  const setExpandLabel = React541.useCallback(() => {
    var _triggerRef_current, _triggerRef_current1;
    const inputAriaLabel = (_triggerRef_current = triggerRef.current) === null || _triggerRef_current === void 0 ? void 0 : _triggerRef_current.getAttribute("aria-label");
    const inputAriaLabelledBy = (_triggerRef_current1 = triggerRef.current) === null || _triggerRef_current1 === void 0 ? void 0 : _triggerRef_current1.getAttribute("aria-labelledby");
    const { expandAriaLabel, expandAriaLabelledBy, expandId } = getExpandLabel(inputAriaLabel, inputAriaLabelledBy);
    if (expandAriaLabelledBy) {
      var _expandIconRef_current;
      (_expandIconRef_current = expandIconRef.current) === null || _expandIconRef_current === void 0 ? void 0 : _expandIconRef_current.setAttribute("aria-labelledby", expandAriaLabelledBy);
    }
    if (expandAriaLabel) {
      var _expandIconRef_current1;
      (_expandIconRef_current1 = expandIconRef.current) === null || _expandIconRef_current1 === void 0 ? void 0 : _expandIconRef_current1.setAttribute("aria-label", expandAriaLabel);
    }
    if (expandId) {
      var _expandIconRef_current2;
      (_expandIconRef_current2 = expandIconRef.current) === null || _expandIconRef_current2 === void 0 ? void 0 : _expandIconRef_current2.setAttribute("id", expandId);
    }
  }, [
    getExpandLabel,
    triggerRef
  ]);
  React541.useEffect(() => {
    const hasExpandLabel = expandIconAriaLabel || expandIconAriaLabelledby;
    if (!(targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.defaultView) || !triggerRef.current || !hasExpandIcon || hasExpandLabel) {
      return;
    }
    const win = targetDocument.defaultView;
    setExpandLabel();
    const observer = new win.MutationObserver(setExpandLabel);
    observer.observe(triggerRef.current, {
      attributes: true,
      attributeFilter: [
        "aria-label",
        "aria-labelledby"
      ]
    });
    return () => observer.disconnect();
  }, [
    getExpandLabel,
    setExpandLabel,
    expandIconAriaLabel,
    expandIconAriaLabelledby,
    hasExpandIcon,
    tagPickerId,
    triggerRef,
    targetDocument
  ]);
  return expandIconRef;
}

// node_modules/@fluentui/react-tag-picker/lib/components/TagPickerControl/useTagPickerControl.js
var useTagPickerControl_unstable = (props, ref) => {
  var _useFieldContext_unstable;
  const targetRef = useTagPickerContext_unstable((ctx) => ctx.targetRef);
  const triggerRef = useTagPickerContext_unstable((ctx) => ctx.triggerRef);
  const tagPickerGroupRef = useTagPickerContext_unstable((ctx) => ctx.tagPickerGroupRef);
  const open = useTagPickerContext_unstable((ctx) => ctx.open);
  const popoverId = useTagPickerContext_unstable((ctx) => ctx.popoverId);
  const setOpen = useTagPickerContext_unstable((ctx) => ctx.setOpen);
  const secondaryInnerActionRef = useTagPickerContext_unstable((ctx) => ctx.secondaryActionRef);
  const size = useTagPickerContext_unstable((ctx) => ctx.size);
  const appearance = useTagPickerContext_unstable((ctx) => ctx.appearance);
  const disabled = useTagPickerContext_unstable((ctx) => ctx.disabled);
  const invalid = ((_useFieldContext_unstable = useFieldContext_unstable()) === null || _useFieldContext_unstable === void 0 ? void 0 : _useFieldContext_unstable.validationState) === "error";
  const noPopover = useTagPickerContext_unstable((ctx) => {
    var _ctx_noPopover;
    return (_ctx_noPopover = ctx.noPopover) !== null && _ctx_noPopover !== void 0 ? _ctx_noPopover : false;
  });
  const tagPickerId = useId("tagPicker-");
  const innerRef = React542.useRef(null);
  const expandIconRef = React542.useRef(null);
  const asideRef = React542.useRef(null);
  const secondaryAction = slot_exports.optional(props.secondaryAction, {
    elementType: "span"
  });
  const secondaryActionRef = useMergedRefs(secondaryInnerActionRef, secondaryAction === null || secondaryAction === void 0 ? void 0 : secondaryAction.ref);
  if (secondaryAction) {
    secondaryAction.ref = secondaryActionRef;
  }
  const expandIcon = slot_exports.optional(props.expandIcon, {
    renderByDefault: !noPopover,
    defaultProps: {
      "aria-expanded": open,
      children: React542.createElement(ChevronDownRegular, null),
      role: "button"
    },
    elementType: "span"
  });
  const expandIconMergeRef = useMergedRefs(expandIcon === null || expandIcon === void 0 ? void 0 : expandIcon.ref, expandIconRef);
  if (expandIcon) {
    expandIcon.ref = expandIconMergeRef;
  }
  const observerRef = useResizeObserverRef(([entry]) => {
    var _innerRef_current;
    (_innerRef_current = innerRef.current) === null || _innerRef_current === void 0 ? void 0 : _innerRef_current.style.setProperty(tagPickerControlAsideWidthToken, `${entry.contentRect.width}px`);
  });
  const aside = slot_exports.optional(void 0, {
    elementType: "span",
    renderByDefault: Boolean(secondaryAction || expandIcon),
    defaultProps: {
      ref: observerRef
    }
  });
  const mergedAsideRefs = useMergedRefs(asideRef, aside === null || aside === void 0 ? void 0 : aside.ref);
  if (aside) {
    aside.ref = mergedAsideRefs;
  }
  const handleMouseDown = useEventCallback((event) => {
    if (event.isDefaultPrevented()) {
      return;
    }
    if (elementContains(expandIconRef.current, event.target) || event.target === innerRef.current || event.target === tagPickerGroupRef.current || event.target === asideRef.current) {
      var _triggerRef_current;
      event.preventDefault();
      setOpen(event, !open);
      (_triggerRef_current = triggerRef.current) === null || _triggerRef_current === void 0 ? void 0 : _triggerRef_current.focus();
    }
  });
  const state = {
    components: {
      root: "div",
      expandIcon: "span",
      secondaryAction: "span",
      aside: "span"
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      ref: useMergedRefs(ref, targetRef, innerRef),
      "aria-owns": open && !noPopover ? popoverId : void 0,
      ...props,
      onMouseDown: handleMouseDown
    }), {
      elementType: "div"
    }),
    aside,
    expandIcon,
    secondaryAction,
    size,
    appearance,
    disabled,
    invalid
  };
  const expandIconLabelRef = useExpandLabel({
    tagPickerId,
    state
  });
  const expandIconLabelMergeRef = useMergedRefs(expandIcon === null || expandIcon === void 0 ? void 0 : expandIcon.ref, expandIconLabelRef);
  if (state.expandIcon) {
    state.expandIcon.ref = expandIconLabelMergeRef;
  }
  return state;
};

// node_modules/@fluentui/react-tag-picker/lib/components/TagPickerControl/renderTagPickerControl.js
var renderTagPickerControl_unstable = (state) => {
  assertSlots(state);
  return jsxs(state.root, {
    children: [
      state.root.children,
      state.aside && jsxs(state.aside, {
        children: [
          state.secondaryAction && jsx(state.secondaryAction, {}),
          state.expandIcon && jsx(state.expandIcon, {})
        ]
      })
    ]
  });
};

// node_modules/@fluentui/react-tag-picker/lib/components/TagPickerControl/TagPickerControl.js
var TagPickerControl = React543.forwardRef((props, ref) => {
  const state = useTagPickerControl_unstable(props, ref);
  useTagPickerControlStyles_unstable(state);
  useCustomStyleHook("useTagPickerControlStyles_unstable")(state);
  return renderTagPickerControl_unstable(state);
});
TagPickerControl.displayName = "TagPickerControl";

// node_modules/@fluentui/react-tag-picker/lib/components/TagPickerControl/TagPickerControl.types.js
var React544 = __toESM(require_react());

// node_modules/@fluentui/react-tag-picker/lib/components/TagPickerOption/TagPickerOption.js
var React546 = __toESM(require_react());

// node_modules/@fluentui/react-tag-picker/lib/components/TagPickerOption/useTagPickerOption.js
var React545 = __toESM(require_react());
var useTagPickerOption_unstable = (props, ref) => {
  const optionState = useOption_unstable(props, ref);
  const state = {
    components: {
      ...optionState.components,
      media: "div",
      secondaryContent: "span"
    },
    media: slot_exports.optional(props.media, {
      elementType: "div"
    }),
    secondaryContent: slot_exports.optional(props.secondaryContent, {
      elementType: "span"
    }),
    root: slot_exports.always({
      ...optionState.root,
      role: "option",
      "aria-checked": props["aria-checked"]
    }, {
      elementType: "div"
    })
  };
  return state;
};

// node_modules/@fluentui/react-tag-picker/lib/components/TagPickerOption/renderTagPickerOption.js
var renderTagPickerOption_unstable = (state) => {
  assertSlots(state);
  return jsxs(state.root, {
    children: [
      state.media && jsx(state.media, {}),
      state.root.children,
      state.secondaryContent && jsx(state.secondaryContent, {})
    ]
  });
};

// node_modules/@fluentui/react-tag-picker/lib/components/TagPickerOption/useTagPickerOptionStyles.styles.js
var tagPickerOptionClassNames = {
  root: "fui-TagPickerOption",
  media: "fui-TagPickerOption__media",
  secondaryContent: "fui-TagPickerOption__secondaryContent"
};
var useStyles74 = __styles2({
  root: {
    mc9l5x: "f13qh94s",
    Budl1dq: "fjxzuw",
    Bt984gj: "f122n59"
  },
  secondaryContent: {
    Br312pm: "fd46tj4",
    Ijaq50: "faunodf"
  },
  media: {
    Ijaq50: "fldnz9j"
  }
}, {
  d: [".f13qh94s{display:grid;}", ".fjxzuw{grid-template-columns:auto 1fr;}", ".f122n59{align-items:center;}", ".fd46tj4{grid-column-start:2;}", ".faunodf{grid-row-start:2;}", ".fldnz9j{grid-row-start:span 2;}"]
});
var useTagPickerOptionStyles_unstable = (state) => {
  "use no memo";
  useOptionStyles_unstable({
    ...state,
    active: false,
    disabled: false,
    focusVisible: false,
    checkIcon: void 0,
    selected: false
  });
  const styles = useStyles74();
  state.root.className = mergeClasses(tagPickerOptionClassNames.root, styles.root, state.root.className);
  if (state.media) {
    state.media.className = mergeClasses(tagPickerOptionClassNames.media, styles.media, state.media.className);
  }
  if (state.secondaryContent) {
    state.secondaryContent.className = mergeClasses(tagPickerOptionClassNames.secondaryContent, styles.secondaryContent, state.secondaryContent.className);
  }
  return state;
};

// node_modules/@fluentui/react-tag-picker/lib/components/TagPickerOption/TagPickerOption.js
var TagPickerOption = React546.forwardRef((props, ref) => {
  const state = useTagPickerOption_unstable(props, ref);
  useTagPickerOptionStyles_unstable(state);
  useCustomStyleHook("useTagPickerOptionStyles_unstable")(state);
  return renderTagPickerOption_unstable(state);
});
TagPickerOption.displayName = "TagPickerOption";

// node_modules/@fluentui/react-tag-picker/lib/components/TagPickerOption/TagPickerOption.types.js
var React547 = __toESM(require_react());

// node_modules/@fluentui/react-tag-picker/lib/components/TagPickerGroup/TagPickerGroup.js
var React549 = __toESM(require_react());

// node_modules/@fluentui/react-tag-picker/lib/components/TagPickerGroup/useTagPickerGroup.js
var React548 = __toESM(require_react());

// node_modules/@fluentui/react-tag-picker/lib/utils/tagPicker2Tag.js
function tagPickerSizeToTagSize(size) {
  switch (size) {
    case "medium":
      return "extra-small";
    case "large":
      return "small";
    case "extra-large":
      return "medium";
    default:
      return "extra-small";
  }
}
function tagSizeToTagPickerSize(size) {
  switch (size) {
    case "extra-small":
      return "medium";
    case "small":
      return "large";
    case "medium":
      return "extra-large";
    default:
      return "medium";
  }
}
function tagPickerAppearanceToTagAppearance(appearance) {
  switch (appearance) {
    case "filled-darker":
      return "outline";
    default:
      return "filled";
  }
}

// node_modules/@fluentui/react-tag-picker/lib/components/TagPickerGroup/useTagPickerGroup.js
var useTagPickerGroup_unstable = (props, ref) => {
  const hasSelectedOptions = useTagPickerContext_unstable((ctx) => ctx.selectedOptions.length > 0);
  const hasOneSelectedOption = useTagPickerContext_unstable((ctx) => ctx.selectedOptions.length === 1);
  const triggerRef = useTagPickerContext_unstable((ctx) => ctx.triggerRef);
  const tagPickerGroupRef = useTagPickerContext_unstable((ctx) => ctx.tagPickerGroupRef);
  const selectOption = useTagPickerContext_unstable((ctx) => ctx.selectOption);
  const size = useTagPickerContext_unstable((ctx) => tagPickerSizeToTagSize(ctx.size));
  const appearance = useTagPickerContext_unstable((ctx) => ctx.appearance);
  const disabled = useTagPickerContext_unstable((ctx) => ctx.disabled);
  const arrowNavigationProps = useArrowNavigationGroup({
    circular: false,
    axis: "both",
    memorizeCurrent: true
  });
  const state = useTagGroup_unstable({
    role: "listbox",
    disabled,
    ...props,
    ...arrowNavigationProps,
    size,
    appearance: tagPickerAppearanceToTagAppearance(appearance),
    dismissible: true,
    onKeyDown: useEventCallback((event) => {
      var _props_onKeyDown;
      (_props_onKeyDown = props.onKeyDown) === null || _props_onKeyDown === void 0 ? void 0 : _props_onKeyDown.call(props, event);
      if (isHTMLElement(event.target) && event.key === ArrowRight) {
        var _triggerRef_current;
        (_triggerRef_current = triggerRef.current) === null || _triggerRef_current === void 0 ? void 0 : _triggerRef_current.focus();
      }
    }),
    onDismiss: useEventCallback((event, data) => {
      selectOption(event, {
        value: data.value,
        // These values no longer exist because the option has unregistered itself
        // for the purposes of selection - these values aren't actually used
        id: "ERROR_DO_NOT_USE",
        text: "ERROR_DO_NOT_USE"
      });
      if (hasOneSelectedOption && !event.isDefaultPrevented()) {
        var _triggerRef_current;
        (_triggerRef_current = triggerRef.current) === null || _triggerRef_current === void 0 ? void 0 : _triggerRef_current.focus();
      }
    })
  }, useMergedRefs(ref, tagPickerGroupRef));
  return {
    ...state,
    hasSelectedOptions
  };
};

// node_modules/@fluentui/react-tag-picker/lib/components/TagPickerGroup/renderTagPickerGroup.js
function renderTagPickerGroup_unstable(state, contexts) {
  if (!state.hasSelectedOptions) {
    return null;
  }
  return renderTagGroup_unstable(state, contexts);
}

// node_modules/@fluentui/react-tag-picker/lib/components/TagPickerGroup/useTagPickerGroupStyles.styles.js
var tagPickerGroupClassNames = {
  root: "fui-TagPickerGroup"
};
var useStyles75 = __styles2({
  root: {
    Eh141a: "fni485r",
    B7ck84d: "f1ewtqcl",
    Bceei9c: "f113hnb5"
  },
  medium: {
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "fa2pw7h",
    i8kkvl: 0,
    Belr9w4: 0,
    rmohyg: "fkln5zr"
  },
  large: {
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "fc0zr7g",
    i8kkvl: 0,
    Belr9w4: 0,
    rmohyg: "f1eyhf9v"
  },
  "extra-large": {
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "fc0zr7g",
    i8kkvl: 0,
    Belr9w4: 0,
    rmohyg: "f1eyhf9v"
  }
}, {
  d: [".fni485r{flex-wrap:wrap;}", ".f1ewtqcl{box-sizing:border-box;}", ".f113hnb5{cursor:text;}", [".fa2pw7h{padding:var(--spacingVerticalSNudge) 0 var(--spacingVerticalSNudge) 0;}", {
    p: -1
  }], [".fkln5zr{gap:var(--spacingHorizontalXS);}", {
    p: -1
  }], [".fc0zr7g{padding:var(--spacingVerticalS) 0 var(--spacingVerticalS) 0;}", {
    p: -1
  }], [".f1eyhf9v{gap:var(--spacingHorizontalSNudge);}", {
    p: -1
  }], [".fc0zr7g{padding:var(--spacingVerticalS) 0 var(--spacingVerticalS) 0;}", {
    p: -1
  }], [".f1eyhf9v{gap:var(--spacingHorizontalSNudge);}", {
    p: -1
  }]]
});
var useTagPickerGroupStyles_unstable = (state) => {
  "use no memo";
  useTagGroupStyles_unstable(state);
  const styles = useStyles75();
  state.root.className = mergeClasses(tagPickerGroupClassNames.root, styles[tagSizeToTagPickerSize(state.size)], styles.root, state.root.className);
  return state;
};

// node_modules/@fluentui/react-tag-picker/lib/components/TagPickerGroup/TagPickerGroup.js
var TagPickerGroup = React549.forwardRef((props, ref) => {
  const state = useTagPickerGroup_unstable(props, ref);
  useTagPickerGroupStyles_unstable(state);
  useCustomStyleHook("useTagPickerGroupStyles_unstable")(state);
  return renderTagPickerGroup_unstable(state, useTagGroupContextValues_unstable(state));
});
TagPickerGroup.displayName = "TagPickerGroup";

// node_modules/@fluentui/react-tag-picker/lib/components/TagPickerOptionGroup/TagPickerOptionGroup.js
var React551 = __toESM(require_react());

// node_modules/@fluentui/react-tag-picker/lib/components/TagPickerOptionGroup/useTagPickerOptionGroup.js
var React550 = __toESM(require_react());
var useTagPickerOptionGroup = useOptionGroup_unstable;

// node_modules/@fluentui/react-tag-picker/lib/components/TagPickerOptionGroup/renderTagPickerOptionGroup.js
var renderTagPickerOptionGroup = renderOptionGroup_unstable;

// node_modules/@fluentui/react-tag-picker/lib/components/TagPickerOptionGroup/useTagPickerOptionGroupStyles.styles.js
var tagPickerOptionGroupClassNames = {
  root: "fui-TagPickerOptionGroup",
  label: "fui-TagPickerOptionGroup__label"
};
var useTagPickerOptionGroupStyles = (state) => {
  "use no memo";
  useOptionGroupStyles_unstable(state);
  state.root.className = mergeClasses(tagPickerOptionGroupClassNames.root, state.root.className);
  if (state.label) {
    state.label.className = mergeClasses(tagPickerOptionGroupClassNames.label, state.label.className);
  }
  return state;
};

// node_modules/@fluentui/react-tag-picker/lib/components/TagPickerOptionGroup/TagPickerOptionGroup.js
var TagPickerOptionGroup = React551.forwardRef((props, ref) => {
  const state = useTagPickerOptionGroup(props, ref);
  useTagPickerOptionGroupStyles(state);
  useCustomStyleHook("useTagPickerOptionGroupStyles_unstable")(state);
  return renderTagPickerOptionGroup(state);
});
TagPickerOptionGroup.displayName = "TagPickerOptionGroup";

// node_modules/@fluentui/react-tag-picker/lib/utils/useTagPickerFilter.js
var React552 = __toESM(require_react());
function defaultRenderOption(option) {
  return React552.createElement(TagPickerOption, {
    value: option,
    key: option
  }, option);
}
function useTagPickerFilter({ filter: filterOverride, noOptionsElement, renderOption = defaultRenderOption, query, options }) {
  const defaultFilter2 = React552.useCallback((option) => {
    const trimmedQuery = query.trim();
    if (trimmedQuery === "") {
      return true;
    }
    return option.toLowerCase().includes(trimmedQuery.toLowerCase());
  }, [
    query
  ]);
  const filter = filterOverride !== null && filterOverride !== void 0 ? filterOverride : defaultFilter2;
  const filteredOptions = React552.useMemo(() => options.reduce((accumulator, option, index) => {
    if (filter(option, index)) {
      accumulator.push(renderOption(option));
    }
    return accumulator;
  }, []), [
    options,
    renderOption,
    filter
  ]);
  return filteredOptions.length === 0 ? [
    noOptionsElement.key ? noOptionsElement : React552.cloneElement(noOptionsElement, {
      key: "no-options"
    })
  ] : filteredOptions;
}

// node_modules/@fluentui/react-swatch-picker/lib/components/SwatchPicker/SwatchPicker.js
var React558 = __toESM(require_react());

// node_modules/@fluentui/react-swatch-picker/lib/components/SwatchPicker/useSwatchPicker.js
var React553 = __toESM(require_react());
var useSwatchPicker_unstable = (props, ref) => {
  const { layout, onSelectionChange, size = "medium", shape, spacing = "medium", style, ...rest } = props;
  const isGrid = layout === "grid";
  const focusAttributes = useArrowNavigationGroup({
    circular: true,
    axis: isGrid ? "grid-linear" : "both",
    memorizeCurrent: true
  });
  const role = isGrid ? "grid" : "radiogroup";
  const [selectedValue, setSelectedValue] = useControllableState({
    state: props.selectedValue,
    defaultState: props.defaultSelectedValue,
    initialState: ""
  });
  const requestSelectionChange = useEventCallback((event, data) => {
    onSelectionChange === null || onSelectionChange === void 0 ? void 0 : onSelectionChange(event, {
      type: "click",
      event,
      selectedValue: data.selectedValue,
      selectedSwatch: data.selectedSwatch
    });
    setSelectedValue(data.selectedValue);
  });
  return {
    components: {
      root: "div"
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      ref,
      role,
      ...focusAttributes,
      ...rest
    }), {
      elementType: "div"
    }),
    isGrid,
    requestSelectionChange,
    selectedValue,
    size,
    shape,
    spacing
  };
};

// node_modules/@fluentui/react-swatch-picker/lib/contexts/swatchPicker.js
var React557 = __toESM(require_react());

// node_modules/@fluentui/react-swatch-picker/node_modules/@fluentui/react-context-selector/lib/createContext.js
var React554 = __toESM(require_react());
var import_scheduler14 = __toESM(require_scheduler14());
var createProvider14 = (Original) => {
  const Provider2 = (props) => {
    const valueRef = React554.useRef(props.value);
    const versionRef = React554.useRef(0);
    const contextValue = React554.useRef();
    if (!contextValue.current) {
      contextValue.current = {
        value: valueRef,
        version: versionRef,
        listeners: []
      };
    }
    useIsomorphicLayoutEffect(() => {
      valueRef.current = props.value;
      versionRef.current += 1;
      (0, import_scheduler14.unstable_runWithPriority)(import_scheduler14.unstable_NormalPriority, () => {
        contextValue.current.listeners.forEach((listener) => {
          listener([
            versionRef.current,
            props.value
          ]);
        });
      });
    }, [
      props.value
    ]);
    return React554.createElement(Original, {
      value: contextValue.current
    }, props.children);
  };
  if (true) {
    Provider2.displayName = "ContextSelector.Provider";
  }
  return Provider2;
};
var createContext58 = (defaultValue) => {
  const context = React554.createContext({
    value: {
      current: defaultValue
    },
    version: {
      current: -1
    },
    listeners: []
  });
  context.Provider = createProvider14(context.Provider);
  delete context.Consumer;
  return context;
};

// node_modules/@fluentui/react-swatch-picker/node_modules/@fluentui/react-context-selector/lib/useContextSelector.js
var React555 = __toESM(require_react());
var useContextSelector14 = (context, selector) => {
  const contextValue = React555.useContext(context);
  const { value: { current: value }, version: { current: version }, listeners } = contextValue;
  const selected = selector(value);
  const [state, setState] = React555.useState([
    value,
    selected
  ]);
  const dispatch = (payload) => {
    setState((prevState) => {
      if (!payload) {
        return [
          value,
          selected
        ];
      }
      if (payload[0] <= version) {
        if (Object.is(prevState[1], selected)) {
          return prevState;
        }
        return [
          value,
          selected
        ];
      }
      try {
        if (Object.is(prevState[0], payload[1])) {
          return prevState;
        }
        const nextSelected = selector(payload[1]);
        if (Object.is(prevState[1], nextSelected)) {
          return prevState;
        }
        return [
          payload[1],
          nextSelected
        ];
      } catch (e) {
      }
      return [
        prevState[0],
        prevState[1]
      ];
    });
  };
  if (!Object.is(state[1], selected)) {
    dispatch(void 0);
  }
  const stableDispatch = useEventCallback(dispatch);
  useIsomorphicLayoutEffect(() => {
    listeners.push(stableDispatch);
    return () => {
      const index = listeners.indexOf(stableDispatch);
      listeners.splice(index, 1);
    };
  }, [
    stableDispatch,
    listeners
  ]);
  return state[1];
};

// node_modules/@fluentui/react-swatch-picker/node_modules/@fluentui/react-context-selector/lib/useHasParentContext.js
var React556 = __toESM(require_react());

// node_modules/@fluentui/react-swatch-picker/lib/contexts/swatchPicker.js
var useSwatchPickerContextValues = (state) => {
  const { isGrid, size, shape, spacing, requestSelectionChange, selectedValue } = state;
  const swatchPicker = {
    isGrid,
    size,
    shape,
    spacing,
    selectedValue,
    requestSelectionChange
  };
  return {
    swatchPicker
  };
};
var swatchPickerContextDefaultValue = {
  requestSelectionChange: () => {
  },
  isGrid: false,
  size: "medium",
  shape: "square",
  spacing: "medium",
  selectedValue: void 0
};
var SwatchPickerContext = createContext58(void 0);
var SwatchPickerProvider = SwatchPickerContext.Provider;
var useSwatchPickerContextValue_unstable = (selector) => useContextSelector14(SwatchPickerContext, (ctx = swatchPickerContextDefaultValue) => selector(ctx));

// node_modules/@fluentui/react-swatch-picker/lib/components/SwatchPicker/renderSwatchPicker.js
var renderSwatchPicker_unstable = (state, contextValues) => {
  assertSlots(state);
  return jsx(SwatchPickerProvider, {
    value: contextValues.swatchPicker,
    children: jsx(state.root, {
      children: state.root.children
    })
  });
};

// node_modules/@fluentui/react-swatch-picker/lib/components/SwatchPicker/useSwatchPickerStyles.styles.js
var swatchPickerClassNames = {
  root: "fui-SwatchPicker"
};
var useStyles76 = __styles2({
  root: {
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f14ufcw5",
    mc9l5x: "f22iagw"
  },
  row: {
    Beiy3e4: "f1063pyq"
  },
  grid: {
    Beiy3e4: "f1vx9l62"
  },
  spacingSmall: {
    i8kkvl: 0,
    Belr9w4: 0,
    rmohyg: "f1t6b6ee"
  },
  spacingMedium: {
    i8kkvl: 0,
    Belr9w4: 0,
    rmohyg: "f4xv25i"
  }
}, {
  d: [[".f14ufcw5{padding:var(--spacingHorizontalNone) var(--spacingVerticalNone);}", {
    p: -1
  }], ".f22iagw{display:flex;}", ".f1063pyq{flex-direction:row;}", ".f1vx9l62{flex-direction:column;}", [".f1t6b6ee{gap:2px;}", {
    p: -1
  }], [".f4xv25i{gap:4px;}", {
    p: -1
  }]]
});
var useSwatchPickerStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles76();
  const layoutStyle = state.isGrid ? styles.grid : styles.row;
  const spacingStyle = state.spacing === "small" ? styles.spacingSmall : styles.spacingMedium;
  state.root.className = mergeClasses(swatchPickerClassNames.root, styles.root, layoutStyle, spacingStyle, state.root.className);
  return state;
};

// node_modules/@fluentui/react-swatch-picker/lib/components/SwatchPicker/SwatchPicker.js
var SwatchPicker = React558.forwardRef((props, ref) => {
  const state = useSwatchPicker_unstable(props, ref);
  const contextValues = useSwatchPickerContextValues(state);
  useSwatchPickerStyles_unstable(state);
  useCustomStyleHook("useSwatchPickerStyles_unstable")(state);
  return renderSwatchPicker_unstable(state, contextValues);
});
SwatchPicker.displayName = "SwatchPicker";

// node_modules/@fluentui/react-swatch-picker/lib/components/SwatchPicker/SwatchPicker.types.js
var React559 = __toESM(require_react());

// node_modules/@fluentui/react-swatch-picker/lib/components/ColorSwatch/ColorSwatch.js
var React561 = __toESM(require_react());

// node_modules/@fluentui/react-swatch-picker/lib/components/ColorSwatch/useColorSwatch.js
var React560 = __toESM(require_react());

// node_modules/@fluentui/react-swatch-picker/lib/components/ColorSwatch/useColorSwatchStyles.styles.js
var colorSwatchClassNames = {
  root: "fui-ColorSwatch",
  icon: "fui-ColorSwatch__icon",
  disabledIcon: "fui-ColorSwatch__disabledIcon"
};
var swatchCSSVars = {
  color: `--fui-SwatchPicker--color`,
  borderColor: `--fui-SwatchPicker--borderColor`
};
var {
  color,
  borderColor
} = swatchCSSVars;
var useResetStyles4 = __resetStyles("ryw27oi", null, {
  r: [".ryw27oi{display:inline-flex;flex-shrink:0;align-items:center;justify-content:center;box-sizing:border-box;border:1px solid var(--fui-SwatchPicker--borderColor);background:var(--fui-SwatchPicker--color);overflow:hidden;padding:0;}", ".ryw27oi:hover{cursor:pointer;border:none;box-shadow:inset 0 0 0 var(--strokeWidthThick) var(--colorBrandStroke1),inset 0 0 0 var(--strokeWidthThicker) var(--colorStrokeFocus1);}", ".ryw27oi:hover:active{border:none;box-shadow:inset 0 0 0 var(--strokeWidthThicker) var(--colorCompoundBrandStrokePressed),inset 0 0 0 var(--strokeWidthThickest) var(--colorStrokeFocus1);}", ".ryw27oi:focus{outline:none;}", ".ryw27oi:focus-visible{outline:none;}", ".ryw27oi[data-fui-focus-visible]{border:none;outline:none;box-shadow:inset 0 0 0 var(--strokeWidthThick) var(--colorStrokeFocus2),inset 0 0 0 var(--strokeWidthThicker) var(--colorStrokeFocus1);}"],
  s: ["@media (forced-colors: active){.ryw27oi{forced-color-adjust:none;}.ryw27oi:hover{box-shadow:inset 0 0 0 var(--strokeWidthThick) var(--colorBrandStroke2Hover),inset 0 0 0 var(--strokeWidthThicker) var(--colorStrokeFocus1);}.ryw27oi:hover:active{box-shadow:inset 0 0 0 var(--strokeWidthThicker) var(--colorBrandStroke2Pressed),inset 0 0 0 var(--strokeWidthThickest) var(--colorStrokeFocus1);}}"]
});
var useStyles77 = __styles2({
  disabled: {
    eoavqd: "fphbwmw",
    Bvxd0ez: "f1q3txrk",
    Bs5ihcz: "f1hjbkfk"
  },
  selected: {
    Bgfg5da: 0,
    B9xav0g: 0,
    oivjwe: 0,
    Bn0qgzm: 0,
    B4g9neb: 0,
    zhjwy3: 0,
    wvpqe5: 0,
    ibv6hh: 0,
    u1mtju: 0,
    h3c5rm: 0,
    vrafjx: 0,
    Bekrc4i: 0,
    i8vvqc: 0,
    g2u3we: 0,
    icvyot: 0,
    B4j52fo: 0,
    irswps: "f3bhgqh",
    E5pizo: "f8ps3yo",
    Bvxd0ez: "f106r15f",
    vajtyg: "ft0nc49",
    j6ew2k: "f16jq8vy",
    Bspt33j: "f18nq7tj"
  }
}, {
  h: [".fphbwmw:hover{cursor:not-allowed;}", ".f1q3txrk:hover{box-shadow:none;}", ".f106r15f:hover{box-shadow:inset 0 0 0 var(--strokeWidthThickest) var(--colorCompoundBrandStrokeHover),inset 0 0 0 6px var(--colorStrokeFocus1);}", ".ft0nc49:hover:active{box-shadow:inset 0 0 0 var(--strokeWidthThickest) var(--colorCompoundBrandStrokePressed),inset 0 0 0 7px var(--colorStrokeFocus1);}"],
  m: [["@media (forced-colors: active){.f1hjbkfk:hover{box-shadow:none;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f18nq7tj{box-shadow:inset 0 0 0 var(--strokeWidthThicker) var(--colorBrandStroke2Pressed),inset 0 0 0 5px var(--colorStrokeFocus1);}}", {
    m: "(forced-colors: active)"
  }]],
  d: [[".f3bhgqh{border:none;}", {
    p: -2
  }], ".f8ps3yo{box-shadow:inset 0 0 0 var(--strokeWidthThicker) var(--colorBrandStroke1),inset 0 0 0 5px var(--colorStrokeFocus1);}", ".f16jq8vy[data-fui-focus-visible]{box-shadow:inset 0 0 0 var(--strokeWidthThicker) var(--colorStrokeFocus2),inset 0 0 0 5px var(--colorStrokeFocus1);}"]
});
var useSizeStyles3 = __styles2({
  "extra-small": {
    a9b677: "f64fuq3",
    Bqenvij: "fjamq6b"
  },
  small: {
    a9b677: "fq4mcun",
    Bqenvij: "frvgh55"
  },
  medium: {
    a9b677: "f1w9dchk",
    Bqenvij: "fxldao9"
  },
  large: {
    a9b677: "f1szoe96",
    Bqenvij: "f1d2rq10"
  }
}, {
  d: [".f64fuq3{width:20px;}", ".fjamq6b{height:20px;}", ".fq4mcun{width:24px;}", ".frvgh55{height:24px;}", ".f1w9dchk{width:28px;}", ".fxldao9{height:28px;}", ".f1szoe96{width:32px;}", ".f1d2rq10{height:32px;}"]
});
var useShapeStyles = __styles2({
  rounded: {
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "ft85np5",
    Bw81rd7: 0,
    kdpuga: 0,
    dm238s: 0,
    B6xbmo0: 0,
    B3whbx2: "f2krc9w"
  },
  circular: {
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "f44lkw9",
    Bw81rd7: 0,
    kdpuga: 0,
    dm238s: 0,
    B6xbmo0: 0,
    B3whbx2: "f1062rbf"
  },
  square: {
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "f1fabniw",
    Bw81rd7: 0,
    kdpuga: 0,
    dm238s: 0,
    B6xbmo0: 0,
    B3whbx2: "fj0ryk1"
  }
}, {
  d: [[".ft85np5{border-radius:var(--borderRadiusMedium);}", {
    p: -1
  }], [".f2krc9w[data-fui-focus-visible]{border-radius:var(--borderRadiusMedium);}", {
    p: -1
  }], [".f44lkw9{border-radius:var(--borderRadiusCircular);}", {
    p: -1
  }], [".f1062rbf[data-fui-focus-visible]{border-radius:var(--borderRadiusCircular);}", {
    p: -1
  }], [".f1fabniw{border-radius:var(--borderRadiusNone);}", {
    p: -1
  }], [".fj0ryk1[data-fui-focus-visible]{border-radius:var(--borderRadiusNone);}", {
    p: -1
  }]]
});
var useIconStyles12 = __styles2({
  disabledIcon: {
    sj55zd: "fqpbvvt",
    Bhu2qc9: "f14y0k3d"
  },
  icon: {
    qhf8xq: "f1euv43f",
    mc9l5x: "f22iagw",
    qb2dma: "f7nlbp4"
  },
  "extra-small": {
    Be2twd7: "f4ybsrx"
  },
  small: {
    Be2twd7: "f4ybsrx"
  },
  medium: {
    Be2twd7: "fe5j1ua"
  },
  large: {
    Be2twd7: "f1rt2boy"
  }
}, {
  d: [".fqpbvvt{color:var(--colorNeutralForegroundInverted);}", ".f14y0k3d{filter:drop-shadow(0 1px 1px rgb(0 0 0 / 1));}", ".f1euv43f{position:absolute;}", ".f22iagw{display:flex;}", ".f7nlbp4{align-self:center;}", ".f4ybsrx{font-size:16px;}", ".fe5j1ua{font-size:20px;}", ".f1rt2boy{font-size:24px;}"]
});
var useColorSwatchStyles_unstable = (state) => {
  "use no memo";
  const resetStyles = useResetStyles4();
  const styles = useStyles77();
  const sizeStyles = useSizeStyles3();
  const shapeStyles = useShapeStyles();
  const iconStyles = useIconStyles12();
  const {
    size = "medium",
    shape = "square"
  } = state;
  state.root.className = mergeClasses(colorSwatchClassNames.root, resetStyles, sizeStyles[size], shapeStyles[shape], state.selected && styles.selected, state.disabled && styles.disabled, state.root.className);
  if (state.disabled && state.disabledIcon) {
    state.disabledIcon.className = mergeClasses(iconStyles.icon, iconStyles[size], iconStyles.disabledIcon, state.disabledIcon.className);
  }
  if (state.icon) {
    state.icon.className = mergeClasses(iconStyles.icon, iconStyles[size], state.icon.className);
  }
  return state;
};

// node_modules/@fluentui/react-swatch-picker/lib/components/ColorSwatch/useColorSwatch.js
var useColorSwatch_unstable = (props, ref) => {
  const { borderColor: borderColor2, color: color2, disabled, disabledIcon, icon, value, onClick, size, shape, style, ...rest } = props;
  const _size = useSwatchPickerContextValue_unstable((ctx) => ctx.size);
  const _shape = useSwatchPickerContextValue_unstable((ctx) => ctx.shape);
  const isGrid = useSwatchPickerContextValue_unstable((ctx) => ctx.isGrid);
  const requestSelectionChange = useSwatchPickerContextValue_unstable((ctx) => ctx.requestSelectionChange);
  const selected = useSwatchPickerContextValue_unstable((ctx) => ctx.selectedValue === value);
  const onColorSwatchClick = useEventCallback(mergeCallbacks(onClick, (event) => requestSelectionChange(event, {
    selectedValue: value,
    selectedSwatch: color2
  })));
  const rootVariables = {
    [swatchCSSVars.color]: color2,
    [swatchCSSVars.borderColor]: borderColor2 !== null && borderColor2 !== void 0 ? borderColor2 : tokens.colorTransparentStroke
  };
  const role = isGrid ? "gridcell" : "radio";
  const ariaSelected = isGrid ? {
    "aria-selected": selected
  } : {
    "aria-checked": selected
  };
  const iconShorthand = slot_exports.optional(icon, {
    elementType: "span"
  });
  const disabledIconShorthand = slot_exports.optional(disabledIcon, {
    defaultProps: {
      children: React560.createElement(ProhibitedFilled, null)
    },
    renderByDefault: true,
    elementType: "span"
  });
  return {
    components: {
      root: "button",
      icon: "span",
      disabledIcon: "span"
    },
    root: slot_exports.always(getIntrinsicElementProps("button", {
      ref,
      role,
      ...ariaSelected,
      onClick: onColorSwatchClick,
      type: "button",
      disabled,
      ...rest,
      style: {
        ...rootVariables,
        ...style
      }
    }), {
      elementType: "button"
    }),
    icon: iconShorthand,
    disabledIcon: disabledIconShorthand,
    disabled,
    size: size !== null && size !== void 0 ? size : _size,
    shape: shape !== null && shape !== void 0 ? shape : _shape,
    selected,
    color: color2,
    value
  };
};

// node_modules/@fluentui/react-swatch-picker/lib/components/ColorSwatch/renderColorSwatch.js
var renderColorSwatch_unstable = (state) => {
  assertSlots(state);
  return jsxs(state.root, {
    children: [
      state.root.children,
      state.icon && jsx(state.icon, {}),
      state.disabled && state.disabledIcon && jsx(state.disabledIcon, {})
    ]
  });
};

// node_modules/@fluentui/react-swatch-picker/lib/components/ColorSwatch/ColorSwatch.js
var ColorSwatch = React561.forwardRef((props, ref) => {
  const state = useColorSwatch_unstable(props, ref);
  useColorSwatchStyles_unstable(state);
  useCustomStyleHook("useColorSwatchStyles_unstable")(state);
  return renderColorSwatch_unstable(state);
});
ColorSwatch.displayName = "ColorSwatch";

// node_modules/@fluentui/react-swatch-picker/lib/components/ImageSwatch/ImageSwatch.js
var React563 = __toESM(require_react());

// node_modules/@fluentui/react-swatch-picker/lib/components/ImageSwatch/useImageSwatch.js
var React562 = __toESM(require_react());
var useImageSwatch_unstable = (props, ref) => {
  const { src, value, onClick, style, ...rest } = props;
  const size = useSwatchPickerContextValue_unstable((ctx) => ctx.size);
  const shape = useSwatchPickerContextValue_unstable((ctx) => ctx.shape);
  const isGrid = useSwatchPickerContextValue_unstable((ctx) => ctx.isGrid);
  const requestSelectionChange = useSwatchPickerContextValue_unstable((ctx) => ctx.requestSelectionChange);
  const selected = useSwatchPickerContextValue_unstable((ctx) => ctx.selectedValue === value);
  const role = isGrid ? "gridcell" : "radio";
  const ariaSelected = isGrid ? {
    "aria-selected": selected
  } : {
    "aria-checked": selected
  };
  const onImageSwatchClick = useEventCallback(mergeCallbacks(onClick, (event) => requestSelectionChange(event, {
    selectedValue: value,
    selectedSwatch: src
  })));
  return {
    components: {
      root: "button"
    },
    root: slot_exports.always(getIntrinsicElementProps("button", {
      ref,
      role,
      ...ariaSelected,
      onClick: onImageSwatchClick,
      ...rest,
      style: {
        backgroundImage: `url(${src})`,
        ...style
      }
    }), {
      elementType: "button"
    }),
    value,
    selected,
    size,
    shape
  };
};

// node_modules/@fluentui/react-swatch-picker/lib/components/ImageSwatch/renderImageSwatch.js
var renderImageSwatch_unstable = (state) => {
  assertSlots(state);
  return jsx(state.root, {});
};

// node_modules/@fluentui/react-swatch-picker/lib/components/ImageSwatch/useImageSwatchStyles.styles.js
var imageSwatchClassNames = {
  root: "fui-ImageSwatch"
};
var useStyles78 = __resetStyles("r18b5q7m", null, {
  r: [".r18b5q7m{display:inline-flex;box-sizing:border-box;border:1px solid var(--colorTransparentStroke);background-size:cover;background-repeat:no-repeat;padding:0;}", ".r18b5q7m:hover{cursor:pointer;border:none;box-shadow:inset 0 0 0 var(--strokeWidthThick) var(--colorBrandStroke1),inset 0 0 0 var(--strokeWidthThicker) var(--colorStrokeFocus1);}", ".r18b5q7m:hover:active{border:none;box-shadow:inset 0 0 0 var(--strokeWidthThicker) var(--colorCompoundBrandStrokePressed),inset 0 0 0 var(--strokeWidthThickest) var(--colorStrokeFocus1);}", ".r18b5q7m:focus{outline:none;}", ".r18b5q7m:focus-visible{outline:none;}", ".r18b5q7m[data-fui-focus-visible]{border:none;outline:none;box-shadow:inset 0 0 0 var(--strokeWidthThick) var(--colorStrokeFocus2),inset 0 0 0 var(--strokeWidthThicker) var(--colorStrokeFocus1);}"],
  s: ["@media (forced-colors: active){.r18b5q7m{forced-color-adjust:none;}.r18b5q7m:hover{box-shadow:inset 0 0 0 var(--strokeWidthThick) var(--colorBrandStroke2Hover),inset 0 0 0 var(--strokeWidthThicker) var(--colorStrokeFocus1);}.r18b5q7m:hover:active{box-shadow:inset 0 0 0 var(--strokeWidthThicker) var(--colorBrandStroke2Pressed),inset 0 0 0 var(--strokeWidthThickest) var(--colorStrokeFocus1);}}"]
});
var useStylesSelected = __styles2({
  selected: {
    Bgfg5da: 0,
    B9xav0g: 0,
    oivjwe: 0,
    Bn0qgzm: 0,
    B4g9neb: 0,
    zhjwy3: 0,
    wvpqe5: 0,
    ibv6hh: 0,
    u1mtju: 0,
    h3c5rm: 0,
    vrafjx: 0,
    Bekrc4i: 0,
    i8vvqc: 0,
    g2u3we: 0,
    icvyot: 0,
    B4j52fo: 0,
    irswps: "f3bhgqh",
    E5pizo: "f8ps3yo",
    Bvxd0ez: "f106r15f",
    vajtyg: "ft0nc49",
    j6ew2k: "f16jq8vy",
    Bspt33j: "f18nq7tj"
  }
}, {
  d: [[".f3bhgqh{border:none;}", {
    p: -2
  }], ".f8ps3yo{box-shadow:inset 0 0 0 var(--strokeWidthThicker) var(--colorBrandStroke1),inset 0 0 0 5px var(--colorStrokeFocus1);}", ".f16jq8vy[data-fui-focus-visible]{box-shadow:inset 0 0 0 var(--strokeWidthThicker) var(--colorStrokeFocus2),inset 0 0 0 5px var(--colorStrokeFocus1);}"],
  h: [".f106r15f:hover{box-shadow:inset 0 0 0 var(--strokeWidthThickest) var(--colorCompoundBrandStrokeHover),inset 0 0 0 6px var(--colorStrokeFocus1);}", ".ft0nc49:hover:active{box-shadow:inset 0 0 0 var(--strokeWidthThickest) var(--colorCompoundBrandStrokePressed),inset 0 0 0 7px var(--colorStrokeFocus1);}"],
  m: [["@media (forced-colors: active){.f18nq7tj{box-shadow:inset 0 0 0 var(--strokeWidthThicker) var(--colorBrandStroke2Pressed),inset 0 0 0 5px var(--colorStrokeFocus1);}}", {
    m: "(forced-colors: active)"
  }]]
});
var useSizeStyles4 = __styles2({
  "extra-small": {
    a9b677: "f64fuq3",
    Bqenvij: "fjamq6b"
  },
  small: {
    a9b677: "fq4mcun",
    Bqenvij: "frvgh55"
  },
  medium: {
    a9b677: "f1w9dchk",
    Bqenvij: "fxldao9"
  },
  large: {
    a9b677: "f1szoe96",
    Bqenvij: "f1d2rq10"
  }
}, {
  d: [".f64fuq3{width:20px;}", ".fjamq6b{height:20px;}", ".fq4mcun{width:24px;}", ".frvgh55{height:24px;}", ".f1w9dchk{width:28px;}", ".fxldao9{height:28px;}", ".f1szoe96{width:32px;}", ".f1d2rq10{height:32px;}"]
});
var useShapeStyles2 = __styles2({
  rounded: {
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "ft85np5",
    Bw81rd7: 0,
    kdpuga: 0,
    dm238s: 0,
    B6xbmo0: 0,
    B3whbx2: "f2krc9w"
  },
  circular: {
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "f44lkw9",
    Bw81rd7: 0,
    kdpuga: 0,
    dm238s: 0,
    B6xbmo0: 0,
    B3whbx2: "f1062rbf"
  },
  square: {
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "f1fabniw",
    Bw81rd7: 0,
    kdpuga: 0,
    dm238s: 0,
    B6xbmo0: 0,
    B3whbx2: "fj0ryk1"
  }
}, {
  d: [[".ft85np5{border-radius:var(--borderRadiusMedium);}", {
    p: -1
  }], [".f2krc9w[data-fui-focus-visible]{border-radius:var(--borderRadiusMedium);}", {
    p: -1
  }], [".f44lkw9{border-radius:var(--borderRadiusCircular);}", {
    p: -1
  }], [".f1062rbf[data-fui-focus-visible]{border-radius:var(--borderRadiusCircular);}", {
    p: -1
  }], [".f1fabniw{border-radius:var(--borderRadiusNone);}", {
    p: -1
  }], [".fj0ryk1[data-fui-focus-visible]{border-radius:var(--borderRadiusNone);}", {
    p: -1
  }]]
});
var useImageSwatchStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles78();
  const selectedStyles = useStylesSelected();
  const sizeStyles = useSizeStyles4();
  const shapeStyles = useShapeStyles2();
  const {
    size = "medium",
    shape = "square"
  } = state;
  state.root.className = mergeClasses(imageSwatchClassNames.root, styles, sizeStyles[size], shapeStyles[shape], state.selected && selectedStyles.selected, state.root.className);
  return state;
};

// node_modules/@fluentui/react-swatch-picker/lib/components/ImageSwatch/ImageSwatch.js
var ImageSwatch = React563.forwardRef((props, ref) => {
  const state = useImageSwatch_unstable(props, ref);
  useImageSwatchStyles_unstable(state);
  useCustomStyleHook("useImageSwatchStyles_unstable")(state);
  return renderImageSwatch_unstable(state);
});
ImageSwatch.displayName = "ImageSwatch";

// node_modules/@fluentui/react-swatch-picker/lib/components/SwatchPickerRow/SwatchPickerRow.js
var React565 = __toESM(require_react());

// node_modules/@fluentui/react-swatch-picker/lib/components/SwatchPickerRow/useSwatchPickerRow.js
var React564 = __toESM(require_react());
var useSwatchPickerRow_unstable = (props, ref) => {
  const { style, ...rest } = props;
  const spacing = useSwatchPickerContextValue_unstable((ctx) => ctx.spacing);
  return {
    components: {
      root: "div"
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      ref,
      role: "row",
      ...rest
    }), {
      elementType: "div"
    }),
    spacing
  };
};

// node_modules/@fluentui/react-swatch-picker/lib/components/SwatchPickerRow/renderSwatchPickerRow.js
var renderSwatchPickerRow_unstable = (state) => {
  assertSlots(state);
  return jsx(state.root, {});
};

// node_modules/@fluentui/react-swatch-picker/lib/components/SwatchPickerRow/useSwatchPickerRowStyles.styles.js
var swatchPickerRowClassNames = {
  root: "fui-SwatchPickerRow"
};
var useResetStyles5 = __resetStyles("r1xhj18k", null, [".r1xhj18k{display:flex;flex-direction:row;}"]);
var useStyles79 = __styles2({
  spacingSmall: {
    i8kkvl: "f16mnhsx"
  },
  spacingMedium: {
    i8kkvl: "f1q8lukm"
  }
}, {
  d: [".f16mnhsx{column-gap:2px;}", ".f1q8lukm{column-gap:4px;}"]
});
var useSwatchPickerRowStyles_unstable = (state) => {
  "use no memo";
  const resetStyles = useResetStyles5();
  const styles = useStyles79();
  const spacingStyle = state.spacing === "small" ? styles.spacingSmall : styles.spacingMedium;
  state.root.className = mergeClasses(swatchPickerRowClassNames.root, resetStyles, spacingStyle, state.root.className);
  return state;
};

// node_modules/@fluentui/react-swatch-picker/lib/components/SwatchPickerRow/SwatchPickerRow.js
var SwatchPickerRow = React565.forwardRef((props, ref) => {
  const state = useSwatchPickerRow_unstable(props, ref);
  useSwatchPickerRowStyles_unstable(state);
  useCustomStyleHook("useSwatchPickerRowStyles_unstable")(state);
  return renderSwatchPickerRow_unstable(state);
});
SwatchPickerRow.displayName = "SwatchPickerRow";

// node_modules/@fluentui/react-swatch-picker/lib/utils/renderUtils.js
var React566 = __toESM(require_react());
var renderSwatchPickerGrid = (props) => {
  const { items, columnCount, renderRow, renderSwatch } = props;
  const _renderRow = renderRow || (({ children: children2, rowId }) => React566.createElement(SwatchPickerRow, {
    key: rowId
  }, children2));
  const _renderSwatch = renderSwatch || ((item) => {
    var _item_src;
    return item.src ? React566.createElement(ImageSwatch, {
      key: item.value,
      src: (_item_src = item.src) !== null && _item_src !== void 0 ? _item_src : "",
      ...item
    }) : React566.createElement(ColorSwatch, {
      key: item.value,
      color: item.color || "",
      ...item
    });
  });
  const rowCount = Math.ceil(items.length / columnCount);
  const rows = Array.from({
    length: rowCount
  }, (_, i) => {
    const start = i * columnCount;
    const end = start + columnCount;
    return items.slice(start, end);
  });
  return rows.map((row, index) => _renderRow({
    children: row.map(_renderSwatch),
    rowId: index
  }));
};

// node_modules/@fluentui/react-swatch-picker/lib/components/EmptySwatch/EmptySwatch.js
var React568 = __toESM(require_react());

// node_modules/@fluentui/react-swatch-picker/lib/components/EmptySwatch/useEmptySwatch.js
var React567 = __toESM(require_react());
var useEmptySwatch_unstable = (props, ref) => {
  const { size, shape, ...rest } = props;
  const _size = useSwatchPickerContextValue_unstable((ctx) => ctx.size);
  const _shape = useSwatchPickerContextValue_unstable((ctx) => ctx.shape);
  const isGrid = useSwatchPickerContextValue_unstable((ctx) => ctx.isGrid);
  const role = isGrid ? "gridcell" : "radio";
  const a11yProps = isGrid ? {} : {
    "aria-checked": false
  };
  return {
    components: {
      root: "button"
    },
    root: slot_exports.always(getIntrinsicElementProps("button", {
      ref,
      role,
      ...a11yProps,
      ...rest
    }), {
      elementType: "button"
    }),
    size: size !== null && size !== void 0 ? size : _size,
    shape: shape !== null && shape !== void 0 ? shape : _shape
  };
};

// node_modules/@fluentui/react-swatch-picker/lib/components/EmptySwatch/renderEmptySwatch.js
var renderEmptySwatch_unstable = (state) => {
  assertSlots(state);
  return jsx(state.root, {});
};

// node_modules/@fluentui/react-swatch-picker/lib/components/EmptySwatch/useEmptySwatchStyles.styles.js
var emptySwatchClassNames = {
  root: "fui-EmptySwatch"
};
var useStyles80 = __resetStyles("r1top892", null, [".r1top892{background-color:var(--colorTransparentBackground);border:1px dashed var(--colorNeutralForeground4);}"]);
var useSizeStyles5 = __styles2({
  "extra-small": {
    a9b677: "f64fuq3",
    Bqenvij: "fjamq6b"
  },
  small: {
    a9b677: "fq4mcun",
    Bqenvij: "frvgh55"
  },
  medium: {
    a9b677: "f1w9dchk",
    Bqenvij: "fxldao9"
  },
  large: {
    a9b677: "f1szoe96",
    Bqenvij: "f1d2rq10"
  }
}, {
  d: [".f64fuq3{width:20px;}", ".fjamq6b{height:20px;}", ".fq4mcun{width:24px;}", ".frvgh55{height:24px;}", ".f1w9dchk{width:28px;}", ".fxldao9{height:28px;}", ".f1szoe96{width:32px;}", ".f1d2rq10{height:32px;}"]
});
var useShapeStyles3 = __styles2({
  rounded: {
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "ft85np5",
    Bw81rd7: 0,
    kdpuga: 0,
    dm238s: 0,
    B6xbmo0: 0,
    B3whbx2: "f2krc9w"
  },
  circular: {
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "f44lkw9",
    Bw81rd7: 0,
    kdpuga: 0,
    dm238s: 0,
    B6xbmo0: 0,
    B3whbx2: "f1062rbf"
  },
  square: {
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "f1fabniw",
    Bw81rd7: 0,
    kdpuga: 0,
    dm238s: 0,
    B6xbmo0: 0,
    B3whbx2: "fj0ryk1"
  }
}, {
  d: [[".ft85np5{border-radius:var(--borderRadiusMedium);}", {
    p: -1
  }], [".f2krc9w[data-fui-focus-visible]{border-radius:var(--borderRadiusMedium);}", {
    p: -1
  }], [".f44lkw9{border-radius:var(--borderRadiusCircular);}", {
    p: -1
  }], [".f1062rbf[data-fui-focus-visible]{border-radius:var(--borderRadiusCircular);}", {
    p: -1
  }], [".f1fabniw{border-radius:var(--borderRadiusNone);}", {
    p: -1
  }], [".fj0ryk1[data-fui-focus-visible]{border-radius:var(--borderRadiusNone);}", {
    p: -1
  }]]
});
var useEmptySwatchStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles80();
  const sizeStyles = useSizeStyles5();
  const shapeStyles = useShapeStyles3();
  var _state_size;
  const size = (_state_size = state.size) !== null && _state_size !== void 0 ? _state_size : "medium";
  var _state_shape;
  state.root.className = mergeClasses(emptySwatchClassNames.root, styles, sizeStyles[size], shapeStyles[(_state_shape = state.shape) !== null && _state_shape !== void 0 ? _state_shape : "square"], state.root.className);
  return state;
};

// node_modules/@fluentui/react-swatch-picker/lib/components/EmptySwatch/EmptySwatch.js
var EmptySwatch = React568.forwardRef((props, ref) => {
  const state = useEmptySwatch_unstable(props, ref);
  useEmptySwatchStyles_unstable(state);
  useCustomStyleHook("useEmptySwatchStyles_unstable")(state);
  return renderEmptySwatch_unstable(state);
});
EmptySwatch.displayName = "EmptySwatch";

// node_modules/@fluentui/react-carousel/lib/components/CarouselButton/CarouselButton.js
var React573 = __toESM(require_react());

// node_modules/@fluentui/react-carousel/lib/components/CarouselButton/useCarouselButton.js
var React572 = __toESM(require_react());

// node_modules/@fluentui/react-carousel/node_modules/@fluentui/react-context-selector/lib/createContext.js
var React569 = __toESM(require_react());
var import_scheduler15 = __toESM(require_scheduler15());
var createProvider15 = (Original) => {
  const Provider2 = (props) => {
    const valueRef = React569.useRef(props.value);
    const versionRef = React569.useRef(0);
    const contextValue = React569.useRef();
    if (!contextValue.current) {
      contextValue.current = {
        value: valueRef,
        version: versionRef,
        listeners: []
      };
    }
    useIsomorphicLayoutEffect(() => {
      valueRef.current = props.value;
      versionRef.current += 1;
      (0, import_scheduler15.unstable_runWithPriority)(import_scheduler15.unstable_NormalPriority, () => {
        contextValue.current.listeners.forEach((listener) => {
          listener([
            versionRef.current,
            props.value
          ]);
        });
      });
    }, [
      props.value
    ]);
    return React569.createElement(Original, {
      value: contextValue.current
    }, props.children);
  };
  if (true) {
    Provider2.displayName = "ContextSelector.Provider";
  }
  return Provider2;
};
var createContext60 = (defaultValue) => {
  const context = React569.createContext({
    value: {
      current: defaultValue
    },
    version: {
      current: -1
    },
    listeners: []
  });
  context.Provider = createProvider15(context.Provider);
  delete context.Consumer;
  return context;
};

// node_modules/@fluentui/react-carousel/node_modules/@fluentui/react-context-selector/lib/useContextSelector.js
var React570 = __toESM(require_react());
var useContextSelector15 = (context, selector) => {
  const contextValue = React570.useContext(context);
  const { value: { current: value }, version: { current: version }, listeners } = contextValue;
  const selected = selector(value);
  const [state, setState] = React570.useState([
    value,
    selected
  ]);
  const dispatch = (payload) => {
    setState((prevState) => {
      if (!payload) {
        return [
          value,
          selected
        ];
      }
      if (payload[0] <= version) {
        if (Object.is(prevState[1], selected)) {
          return prevState;
        }
        return [
          value,
          selected
        ];
      }
      try {
        if (Object.is(prevState[0], payload[1])) {
          return prevState;
        }
        const nextSelected = selector(payload[1]);
        if (Object.is(prevState[1], nextSelected)) {
          return prevState;
        }
        return [
          payload[1],
          nextSelected
        ];
      } catch (e) {
      }
      return [
        prevState[0],
        prevState[1]
      ];
    });
  };
  if (!Object.is(state[1], selected)) {
    dispatch(void 0);
  }
  const stableDispatch = useEventCallback(dispatch);
  useIsomorphicLayoutEffect(() => {
    listeners.push(stableDispatch);
    return () => {
      const index = listeners.indexOf(stableDispatch);
      listeners.splice(index, 1);
    };
  }, [
    stableDispatch,
    listeners
  ]);
  return state[1];
};

// node_modules/@fluentui/react-carousel/node_modules/@fluentui/react-context-selector/lib/useHasParentContext.js
var React571 = __toESM(require_react());

// node_modules/@fluentui/react-carousel/lib/components/CarouselContext.js
var carouselContextDefaultValue2 = {
  activeIndex: 0,
  selectPageByElement: () => {
    return 0;
  },
  selectPageByDirection: () => {
    return 0;
  },
  selectPageByIndex: () => {
  },
  subscribeForValues: () => () => {
  },
  enableAutoplay: () => {
  },
  resetAutoplay: () => {
  },
  circular: false,
  containerRef: void 0
};
var CarouselContext2 = createContext60(void 0);
var CarouselProvider2 = CarouselContext2.Provider;
var useCarouselContext_unstable2 = (selector) => useContextSelector15(CarouselContext2, (ctx = carouselContextDefaultValue2) => selector(ctx));

// node_modules/@fluentui/react-carousel/lib/components/CarouselButton/useCarouselButtonStyles.styles.js
var carouselButtonClassNames = {
  root: "fui-CarouselButton",
  icon: "fui-CarouselButton__icon"
};
var useStyles81 = __styles2({
  root: {
    B6of3ja: "fgr6219",
    jrapky: "f10jk5vf",
    sj55zd: "fkfq4zb",
    De3pzq: "fkfdr9r",
    Bkecrkj: "fc5wo7j",
    eoavqd: "f8491dx"
  }
}, {
  d: [".fgr6219{margin-top:auto;}", ".f10jk5vf{margin-bottom:auto;}", ".fkfq4zb{color:var(--colorNeutralForeground2);}", ".fkfdr9r{background-color:var(--colorNeutralBackgroundAlpha);}", ".fc5wo7j{pointer-events:all;}"],
  h: [".f8491dx:hover{cursor:pointer;}"]
});
var useCarouselButtonStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles81();
  state = {
    ...state,
    ...useButtonStyles_unstable(state)
  };
  state.root.className = mergeClasses(carouselButtonClassNames.root, styles.root, state.root.className);
  if (state.icon) {
    state.icon.className = mergeClasses(carouselButtonClassNames.icon, state.icon.className);
  }
  return state;
};

// node_modules/@fluentui/react-carousel/lib/components/CarouselButton/useCarouselButton.js
var import_react191 = __toESM(require_react());
var useCarouselButton_unstable = (props, ref) => {
  const { navType = "next" } = props;
  const [totalSlides, setTotalSlides] = React572.useState(0);
  const { dir } = useFluent();
  const buttonRef = (0, import_react191.useRef)();
  const circular = useCarouselContext_unstable2((ctx) => ctx.circular);
  const containerRef = useCarouselContext_unstable2((ctx) => ctx.containerRef);
  const selectPageByDirection = useCarouselContext_unstable2((ctx) => ctx.selectPageByDirection);
  const subscribeForValues = useCarouselContext_unstable2((ctx) => ctx.subscribeForValues);
  const resetAutoplay = useCarouselContext_unstable2((ctx) => ctx.resetAutoplay);
  const isTrailing = useCarouselContext_unstable2((ctx) => {
    if (circular) {
      return false;
    }
    if (navType === "prev") {
      return ctx.activeIndex === 0;
    }
    return ctx.activeIndex === totalSlides - 1;
  });
  const handleClick = (event) => {
    if (event.isDefaultPrevented()) {
      return;
    }
    const nextIndex = selectPageByDirection(event, navType);
    let _trailing = false;
    if (navType === "prev") {
      _trailing = nextIndex === 0;
    } else {
      _trailing = nextIndex === totalSlides - 1;
    }
    if (!circular && _trailing && (containerRef === null || containerRef === void 0 ? void 0 : containerRef.current)) {
      const buttonRefs = containerRef.current.querySelectorAll(`.${carouselButtonClassNames.root}`);
      buttonRefs.forEach((_buttonRef) => {
        if (_buttonRef !== buttonRef.current) {
          _buttonRef.focus();
        }
      });
    }
    resetAutoplay();
  };
  useIsomorphicLayoutEffect(() => {
    return subscribeForValues((data) => {
      setTotalSlides(data.navItemsCount);
    });
  }, [
    subscribeForValues
  ]);
  const nextArrowIcon = dir === "ltr" ? React572.createElement(ChevronRightRegular, null) : React572.createElement(ChevronLeftRegular, null);
  const prevArrowIcon = dir === "ltr" ? React572.createElement(ChevronLeftRegular, null) : React572.createElement(ChevronRightRegular, null);
  return {
    navType,
    // We lean on react-button class to handle styling and icon enhancements
    ...useButton_unstable({
      icon: slot_exports.optional(props.icon, {
        defaultProps: {
          children: navType === "next" ? nextArrowIcon : prevArrowIcon
        },
        renderByDefault: true,
        elementType: "span"
      }),
      disabled: isTrailing,
      tabIndex: isTrailing ? -1 : 0,
      "aria-disabled": isTrailing,
      appearance: "subtle",
      ...props,
      onClick: useEventCallback(mergeCallbacks(handleClick, props.onClick))
    }, useMergedRefs(ref, buttonRef))
  };
};

// node_modules/@fluentui/react-carousel/lib/components/CarouselButton/renderCarouselButton.js
var renderCarouselButton_unstable = (state) => {
  assertSlots(state);
  return renderButton_unstable(state);
};

// node_modules/@fluentui/react-carousel/lib/components/CarouselButton/CarouselButton.js
var CarouselButton = React573.forwardRef((props, ref) => {
  const state = useCarouselButton_unstable(props, ref);
  useCarouselButtonStyles_unstable(state);
  return renderCarouselButton_unstable(state);
});
CarouselButton.displayName = "CarouselButton";

// node_modules/@fluentui/react-carousel/lib/components/CarouselNav/CarouselNav.js
var React577 = __toESM(require_react());

// node_modules/@fluentui/react-carousel/lib/components/CarouselNav/CarouselNavContext.js
var React574 = __toESM(require_react());
var carouselNavContext = React574.createContext(void 0);
var carouselNavContextDefaultValue = {
  appearance: void 0
};
var useCarouselNavContext = () => {
  var _React_useContext;
  return (_React_useContext = React574.useContext(carouselNavContext)) !== null && _React_useContext !== void 0 ? _React_useContext : carouselNavContextDefaultValue;
};
var CarouselNavContextProvider = carouselNavContext.Provider;
function useCarouselNavContextValues_unstable(state) {
  const { appearance } = state;
  const carouselNav = React574.useMemo(() => ({
    appearance
  }), [
    appearance
  ]);
  return {
    carouselNav
  };
}

// node_modules/@fluentui/react-carousel/lib/components/CarouselNav/CarouselNavIndexContext.js
var React575 = __toESM(require_react());
var carouselNavIndexContext = React575.createContext(void 0);
var carouselNavIndexContextDefaultValue = 0;
var useCarouselNavIndexContext = () => {
  var _React_useContext;
  return (_React_useContext = React575.useContext(carouselNavIndexContext)) !== null && _React_useContext !== void 0 ? _React_useContext : carouselNavIndexContextDefaultValue;
};
var CarouselNavIndexContextProvider = carouselNavIndexContext.Provider;

// node_modules/@fluentui/react-carousel/lib/components/CarouselNav/renderCarouselNav.js
var renderCarouselNav_unstable = (state, contextValues) => {
  assertSlots(state);
  const { totalSlides, renderNavButton } = state;
  return jsx(state.root, {
    children: jsx(CarouselNavContextProvider, {
      value: contextValues.carouselNav,
      children: new Array(totalSlides).fill(null).map((_, index) => jsx(CarouselNavIndexContextProvider, {
        value: index,
        children: renderNavButton(index)
      }, index))
    })
  });
};

// node_modules/@fluentui/react-carousel/lib/components/CarouselNav/useCarouselNav.js
var React576 = __toESM(require_react());
var useCarouselNav_unstable = (props, ref) => {
  const { appearance } = props;
  const focusableGroupAttr = useArrowNavigationGroup({
    circular: false,
    axis: "horizontal",
    memorizeCurrent: false,
    // eslint-disable-next-line @typescript-eslint/naming-convention
    unstable_hasDefault: true
  });
  var _props_totalSlides;
  const [totalSlides, setTotalSlides] = React576.useState((_props_totalSlides = props.totalSlides) !== null && _props_totalSlides !== void 0 ? _props_totalSlides : 0);
  const subscribeForValues = useCarouselContext_unstable2((ctx) => ctx.subscribeForValues);
  useIsomorphicLayoutEffect(() => {
    return subscribeForValues((data) => {
      setTotalSlides(data.navItemsCount);
    });
  }, [
    subscribeForValues
  ]);
  return {
    totalSlides,
    appearance,
    renderNavButton: props.children,
    components: {
      root: "div"
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      ref,
      role: "tablist",
      ...props,
      ...focusableGroupAttr,
      children: null
    }), {
      elementType: "div"
    })
  };
};

// node_modules/@fluentui/react-carousel/lib/components/CarouselNav/useCarouselNavStyles.styles.js
var carouselNavClassNames = {
  root: "fui-CarouselNav"
};
var useStyles82 = __styles2({
  root: {
    mc9l5x: "f22iagw",
    Beiy3e4: "f1063pyq",
    Bt984gj: "f122n59",
    Brf1p80: "f4d9j23",
    Bkecrkj: "fc5wo7j",
    Bfpq7zp: 0,
    g9k6zt: 0,
    Bn4voq9: 0,
    giviqs: "f89hs3r",
    Bw81rd7: 0,
    kdpuga: 0,
    dm238s: 0,
    B6xbmo0: 0,
    B3whbx2: "f2krc9w",
    B8q5s1w: "f8hki3x",
    Bci5o5g: ["f1d2448m", "ffh67wi"],
    n8qw10: "f1bjia2o",
    Bdrgwmp: ["ffh67wi", "f1d2448m"],
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "f1kijzfu",
    jrapky: 0,
    Frg6f3: 0,
    t21cq0: 0,
    B6of3ja: 0,
    B74szlk: "fkb7v5e",
    De3pzq: "fkfdr9r"
  }
}, {
  d: [".f22iagw{display:flex;}", ".f1063pyq{flex-direction:row;}", ".f122n59{align-items:center;}", ".f4d9j23{justify-content:center;}", ".fc5wo7j{pointer-events:all;}", [".f89hs3r[data-fui-focus-visible]{outline:var(--strokeWidthThick) solid var(--colorStrokeFocus2);}", {
    p: -1
  }], [".f2krc9w[data-fui-focus-visible]{border-radius:var(--borderRadiusMedium);}", {
    p: -1
  }], ".f8hki3x[data-fui-focus-visible]{border-top-color:transparent;}", ".f1d2448m[data-fui-focus-visible]{border-right-color:transparent;}", ".ffh67wi[data-fui-focus-visible]{border-left-color:transparent;}", ".f1bjia2o[data-fui-focus-visible]{border-bottom-color:transparent;}", [".f1kijzfu{border-radius:var(--borderRadiusXLarge);}", {
    p: -1
  }], [".fkb7v5e{margin:auto var(--spacingHorizontalS);}", {
    p: -1
  }], ".fkfdr9r{background-color:var(--colorNeutralBackgroundAlpha);}"]
});
var useCarouselNavStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles82();
  state.root.className = mergeClasses(carouselNavClassNames.root, styles.root, state.root.className);
  return state;
};

// node_modules/@fluentui/react-carousel/lib/components/CarouselNav/CarouselNav.js
var CarouselNav = React577.forwardRef((props, ref) => {
  const state = useCarouselNav_unstable(props, ref);
  const contextValues = useCarouselNavContextValues_unstable(state);
  useCarouselNavStyles_unstable(state);
  return renderCarouselNav_unstable(state, contextValues);
});
CarouselNav.displayName = "CarouselNav";

// node_modules/@fluentui/react-carousel/lib/components/CarouselNav/CarouselNav.types.js
var React578 = __toESM(require_react());

// node_modules/@fluentui/react-carousel/lib/components/CarouselNavButton/CarouselNavButton.js
var React580 = __toESM(require_react());

// node_modules/@fluentui/react-carousel/lib/components/CarouselNavButton/useCarouselNavButton.js
var React579 = __toESM(require_react());
var useCarouselNavButton_unstable = (props, ref) => {
  const { onClick, as = "button" } = props;
  const { appearance } = useCarouselNavContext();
  const index = useCarouselNavIndexContext();
  const selectPageByIndex = useCarouselContext_unstable2((ctx) => ctx.selectPageByIndex);
  const selected = useCarouselContext_unstable2((ctx) => ctx.activeIndex === index);
  const subscribeForValues = useCarouselContext_unstable2((ctx) => ctx.subscribeForValues);
  const resetAutoplay = useCarouselContext_unstable2((ctx) => ctx.resetAutoplay);
  const handleClick = useEventCallback((event) => {
    onClick === null || onClick === void 0 ? void 0 : onClick(event);
    if (!event.defaultPrevented && isHTMLElement(event.target)) {
      selectPageByIndex(event, index);
    }
    resetAutoplay();
  });
  const defaultTabProps = useTabsterAttributes({
    focusable: {
      isDefault: selected
    }
  });
  const buttonRef = React579.useRef();
  const _carouselButton = slot_exports.always(getIntrinsicElementProps(as, useARIAButtonProps(props.as, props)), {
    elementType: "button",
    defaultProps: {
      ref: useMergedRefs(ref, buttonRef),
      role: "tab",
      type: "button",
      "aria-selected": selected,
      ...defaultTabProps
    }
  });
  useIsomorphicLayoutEffect(() => {
    return subscribeForValues((data) => {
      const controlList = data.groupIndexList[index];
      const _controlledSlideIds = controlList.map((slideIndex) => {
        return data.slideNodes[slideIndex].id;
      }).join(" ");
      if (buttonRef.current) {
        buttonRef.current.setAttribute("aria-controls", _controlledSlideIds);
      }
    });
  }, [
    index,
    subscribeForValues
  ]);
  _carouselButton.onClick = handleClick;
  const state = {
    selected,
    appearance,
    components: {
      root: "button"
    },
    root: _carouselButton
  };
  return state;
};

// node_modules/@fluentui/react-carousel/lib/components/CarouselNavButton/renderCarouselNavButton.js
var renderCarouselNavButton_unstable = (state) => {
  assertSlots(state);
  return jsx(state.root, {});
};

// node_modules/@fluentui/react-carousel/lib/components/CarouselNavButton/useCarouselNavButtonStyles.styles.js
var carouselNavButtonClassNames = {
  root: "fui-CarouselNavButton"
};
var useStyles83 = __styles2({
  root: {
    Bceei9c: "f1k6fduh",
    Bkecrkj: "fc5wo7j",
    a9b677: "f1van5z7",
    Bqenvij: "f1fkmctz",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f1f5q0n8",
    B7ck84d: "f1e4lqlz",
    De3pzq: "f1c21dwh",
    B4j52fo: "fre7gi1",
    Bekrc4i: ["f1358rze", "f1rvrf73"],
    Bn0qgzm: "fqdk4by",
    ibv6hh: ["f1rvrf73", "f1358rze"],
    Bsft5z2: "f13zj6fq",
    ap17g6: "f2gz7yw",
    li1rpt: "f1gw3sf2",
    d9w3h3: 0,
    B3778ie: 0,
    B4j8arr: 0,
    Bl18szs: 0,
    Blrzh8d: "f1x820d0",
    Bjuhk93: 0,
    B1q35kw: 0,
    Bw17bha: 0,
    Bcgy8vk: 0,
    Du69r6: 0,
    Gp14am: 0,
    vfts7: 0,
    Bhxzhr1: 0,
    G63luc: 0,
    s924m2: 0,
    Barhvk9: 0,
    Ihftqj: 0,
    wywymt: 0,
    B0n5ga8: 0,
    Bm2nyyq: 0,
    xrcqlc: 0,
    e1d83w: "fnwf5yv",
    Dlnsje: "foue38v",
    a2br6o: "fi4ui2s",
    Bjyk6c5: "f1w4p7kh",
    go7t6h: "fo5b2b9"
  },
  rootUnselected: {
    Bw0xxkn: 0,
    oeaueh: 0,
    Bpd4iqm: 0,
    Befb4lg: "f71xx7",
    Byu6kyc: 0,
    n8qw10: 0,
    Bbjhlyh: 0,
    i2cumq: 0,
    Bunx835: 0,
    Bdrgwmp: 0,
    mqozju: 0,
    lbo84a: 0,
    Bksnhdo: 0,
    Bci5o5g: 0,
    u5e7qz: 0,
    Bn40d3w: 0,
    B7b6zxw: 0,
    B8q5s1w: 0,
    B5gfjzb: 0,
    Bbcte9g: 0,
    Bqz3imu: "f1j9b7x8",
    Bj9ihqo: 0,
    Bl51kww: 0,
    B3bvztg: 0,
    Btyt4dx: 0,
    Brhw1f9: "f1tdm9ui",
    Bw81rd7: 0,
    kdpuga: 0,
    dm238s: 0,
    B6xbmo0: 0,
    B3whbx2: "f2krc9w",
    Bp15pi3: "f4qmjcr",
    Bay5ve9: "f1ry2q4s",
    Bni0232: "f1e9f9ku"
  },
  rootSelected: {
    a9b677: "f1eh74fx",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "fwku66v",
    Bw0xxkn: 0,
    oeaueh: 0,
    Bpd4iqm: 0,
    Befb4lg: "f71xx7",
    Byu6kyc: 0,
    n8qw10: 0,
    Bbjhlyh: 0,
    i2cumq: 0,
    Bunx835: 0,
    Bdrgwmp: 0,
    mqozju: 0,
    lbo84a: 0,
    Bksnhdo: 0,
    Bci5o5g: 0,
    u5e7qz: 0,
    Bn40d3w: 0,
    B7b6zxw: 0,
    B8q5s1w: 0,
    B5gfjzb: 0,
    Bbcte9g: 0,
    Bqz3imu: "f1j9b7x8",
    Bj9ihqo: 0,
    Bl51kww: 0,
    B3bvztg: 0,
    Btyt4dx: 0,
    Brhw1f9: "f1tdm9ui",
    Bw81rd7: 0,
    kdpuga: 0,
    dm238s: 0,
    B6xbmo0: 0,
    B3whbx2: "f2krc9w",
    a2br6o: "f1v6lwa2",
    d9w3h3: 0,
    B3778ie: 0,
    B4j8arr: 0,
    Bl18szs: 0,
    Blrzh8d: "fgm6wgx",
    Bay5ve9: "f1ry2q4s",
    Bni0232: "f1gxfet"
  },
  brand: {
    Bjyk6c5: "fwgxjcu",
    Bp15pi3: "fjsqi2x",
    Glksuk: "f1dsn91x",
    Bay5ve9: "f9atwx8",
    Blzl0y7: "fduhhxw",
    Bni0232: "f1e9f9ku"
  },
  unselectedBrand: {
    Bp15pi3: "f7x02et"
  }
}, {
  d: [".f1k6fduh{cursor:pointer;}", ".fc5wo7j{pointer-events:all;}", ".f1van5z7{width:var(--spacingHorizontalS);}", ".f1fkmctz{height:var(--spacingVerticalS);}", [".f1f5q0n8{padding:var(--spacingVerticalS) var(--spacingHorizontalS);}", {
    p: -1
  }], ".f1e4lqlz{box-sizing:content-box;}", ".f1c21dwh{background-color:var(--colorTransparentBackground);}", ".fre7gi1{border-top-width:0;}", ".f1358rze{border-right-width:0;}", ".f1rvrf73{border-left-width:0;}", ".fqdk4by{border-bottom-width:0;}", '.f13zj6fq::after{content:"";}', ".f2gz7yw::after{display:block;}", ".f1gw3sf2::after{box-sizing:border-box;}", [".f1x820d0::after{border-radius:50%;}", {
    p: -1
  }], [".fnwf5yv::after{border:none;}", {
    p: -2
  }], ".foue38v::after{height:var(--spacingVerticalS);}", ".fi4ui2s::after{width:var(--spacingHorizontalS);}", ".f1w4p7kh::after{background-color:var(--colorNeutralForeground1);}", ".fo5b2b9::after{color:var(--colorNeutralForeground1);}", [".f71xx7{outline:var(--strokeWidthThin) solid transparent;}", {
    p: -1
  }], [".f1j9b7x8[data-fui-focus-visible]{border:var(--strokeWidthThick) solid var(--colorStrokeFocus2);}", {
    p: -2
  }], [".f1tdm9ui[data-fui-focus-visible]{margin:calc(-1 * var(--strokeWidthThick));}", {
    p: -1
  }], [".f2krc9w[data-fui-focus-visible]{border-radius:var(--borderRadiusMedium);}", {
    p: -1
  }], ".f4qmjcr::after{opacity:0.65;}", ".f1eh74fx{width:var(--spacingHorizontalL);}", [".fwku66v{padding:var(--spacingVerticalS) var(--spacingHorizontalXS);}", {
    p: -1
  }], [".f71xx7{outline:var(--strokeWidthThin) solid transparent;}", {
    p: -1
  }], [".f1j9b7x8[data-fui-focus-visible]{border:var(--strokeWidthThick) solid var(--colorStrokeFocus2);}", {
    p: -2
  }], [".f1tdm9ui[data-fui-focus-visible]{margin:calc(-1 * var(--strokeWidthThick));}", {
    p: -1
  }], [".f2krc9w[data-fui-focus-visible]{border-radius:var(--borderRadiusMedium);}", {
    p: -1
  }], ".f1v6lwa2::after{width:var(--spacingHorizontalL);}", [".fgm6wgx::after{border-radius:4px;}", {
    p: -1
  }], ".fwgxjcu::after{background-color:var(--colorBrandBackground);}", ".fjsqi2x::after{opacity:1;}", ".f7x02et::after{opacity:0.6;}"],
  h: [".f1ry2q4s:hover::after{opacity:0.75;}", ".f1dsn91x:hover::after{background-color:var(--colorBrandBackgroundHover);}", ".f9atwx8:hover::after{opacity:1;}"],
  a: [".f1e9f9ku:active::after{opacity:1;}", ".f1gxfet:active::after{opacity:0.65;}", ".fduhhxw:active::after{background-color:var(--colorBrandBackgroundPressed);}"]
});
var useCarouselNavButtonStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles83();
  const {
    selected,
    appearance
  } = state;
  state.root.className = mergeClasses(carouselNavButtonClassNames.root, styles.root, selected ? styles.rootSelected : styles.rootUnselected, appearance === "brand" && styles.brand, !selected && appearance === "brand" && styles.unselectedBrand, state.root.className);
  return state;
};

// node_modules/@fluentui/react-carousel/lib/components/CarouselNavButton/CarouselNavButton.js
var CarouselNavButton = React580.forwardRef((props, ref) => {
  const state = useCarouselNavButton_unstable(props, ref);
  useCarouselNavButtonStyles_unstable(state);
  return renderCarouselNavButton_unstable(state);
});
CarouselNavButton.displayName = "CarouselNavButton";

// node_modules/@fluentui/react-carousel/lib/components/Carousel/Carousel.js
var React584 = __toESM(require_react());

// node_modules/@fluentui/react-carousel/lib/components/Carousel/useCarousel.js
var React582 = __toESM(require_react());

// node_modules/embla-carousel/esm/embla-carousel.esm.js
function isNumber(subject) {
  return typeof subject === "number";
}
function isString(subject) {
  return typeof subject === "string";
}
function isBoolean(subject) {
  return typeof subject === "boolean";
}
function isObject(subject) {
  return Object.prototype.toString.call(subject) === "[object Object]";
}
function mathAbs(n) {
  return Math.abs(n);
}
function mathSign(n) {
  return Math.sign(n);
}
function deltaAbs(valueB, valueA) {
  return mathAbs(valueB - valueA);
}
function factorAbs(valueB, valueA) {
  if (valueB === 0 || valueA === 0) return 0;
  if (mathAbs(valueB) <= mathAbs(valueA)) return 0;
  const diff = deltaAbs(mathAbs(valueB), mathAbs(valueA));
  return mathAbs(diff / valueB);
}
function arrayKeys(array) {
  return objectKeys(array).map(Number);
}
function arrayLast(array) {
  return array[arrayLastIndex(array)];
}
function arrayLastIndex(array) {
  return Math.max(0, array.length - 1);
}
function arrayIsLastIndex(array, index) {
  return index === arrayLastIndex(array);
}
function arrayFromNumber(n, startAt = 0) {
  return Array.from(Array(n), (_, i) => startAt + i);
}
function objectKeys(object) {
  return Object.keys(object);
}
function objectsMergeDeep(objectA, objectB) {
  return [objectA, objectB].reduce((mergedObjects, currentObject) => {
    objectKeys(currentObject).forEach((key) => {
      const valueA = mergedObjects[key];
      const valueB = currentObject[key];
      const areObjects = isObject(valueA) && isObject(valueB);
      mergedObjects[key] = areObjects ? objectsMergeDeep(valueA, valueB) : valueB;
    });
    return mergedObjects;
  }, {});
}
function isMouseEvent2(evt, ownerWindow) {
  return typeof ownerWindow.MouseEvent !== "undefined" && evt instanceof ownerWindow.MouseEvent;
}
function Alignment(align, viewSize) {
  const predefined = {
    start,
    center,
    end
  };
  function start() {
    return 0;
  }
  function center(n) {
    return end(n) / 2;
  }
  function end(n) {
    return viewSize - n;
  }
  function measure(n, index) {
    if (isString(align)) return predefined[align](n);
    return align(viewSize, n, index);
  }
  const self = {
    measure
  };
  return self;
}
function EventStore() {
  let listeners = [];
  function add(node, type, handler, options = {
    passive: true
  }) {
    let removeListener;
    if ("addEventListener" in node) {
      node.addEventListener(type, handler, options);
      removeListener = () => node.removeEventListener(type, handler, options);
    } else {
      const legacyMediaQueryList = node;
      legacyMediaQueryList.addListener(handler);
      removeListener = () => legacyMediaQueryList.removeListener(handler);
    }
    listeners.push(removeListener);
    return self;
  }
  function clear() {
    listeners = listeners.filter((remove) => remove());
  }
  const self = {
    add,
    clear
  };
  return self;
}
function Animations(ownerDocument, ownerWindow, update, render) {
  const documentVisibleHandler = EventStore();
  const timeStep = 1e3 / 60;
  let lastTimeStamp = null;
  let lag = 0;
  let animationFrame = 0;
  function init() {
    documentVisibleHandler.add(ownerDocument, "visibilitychange", () => {
      if (ownerDocument.hidden) reset();
    });
  }
  function destroy() {
    stop();
    documentVisibleHandler.clear();
  }
  function animate(timeStamp) {
    if (!animationFrame) return;
    if (!lastTimeStamp) lastTimeStamp = timeStamp;
    const elapsed = timeStamp - lastTimeStamp;
    lastTimeStamp = timeStamp;
    lag += elapsed;
    while (lag >= timeStep) {
      update(timeStep);
      lag -= timeStep;
    }
    const lagOffset = lag / timeStep;
    render(lagOffset);
    if (animationFrame) ownerWindow.requestAnimationFrame(animate);
  }
  function start() {
    if (animationFrame) return;
    animationFrame = ownerWindow.requestAnimationFrame(animate);
  }
  function stop() {
    ownerWindow.cancelAnimationFrame(animationFrame);
    lastTimeStamp = null;
    lag = 0;
    animationFrame = 0;
  }
  function reset() {
    lastTimeStamp = null;
    lag = 0;
  }
  const self = {
    init,
    destroy,
    start,
    stop,
    update: () => update(timeStep),
    render
  };
  return self;
}
function Axis(axis, contentDirection) {
  const isRightToLeft = contentDirection === "rtl";
  const isVertical = axis === "y";
  const scroll = isVertical ? "y" : "x";
  const cross = isVertical ? "x" : "y";
  const sign = !isVertical && isRightToLeft ? -1 : 1;
  const startEdge = getStartEdge();
  const endEdge = getEndEdge();
  function measureSize(nodeRect) {
    const {
      height,
      width
    } = nodeRect;
    return isVertical ? height : width;
  }
  function getStartEdge() {
    if (isVertical) return "top";
    return isRightToLeft ? "right" : "left";
  }
  function getEndEdge() {
    if (isVertical) return "bottom";
    return isRightToLeft ? "left" : "right";
  }
  function direction(n) {
    return n * sign;
  }
  const self = {
    scroll,
    cross,
    startEdge,
    endEdge,
    measureSize,
    direction
  };
  return self;
}
function Limit(min = 0, max = 0) {
  const length = mathAbs(min - max);
  function reachedMin(n) {
    return n < min;
  }
  function reachedMax(n) {
    return n > max;
  }
  function reachedAny(n) {
    return reachedMin(n) || reachedMax(n);
  }
  function constrain(n) {
    if (!reachedAny(n)) return n;
    return reachedMin(n) ? min : max;
  }
  function removeOffset(n) {
    if (!length) return n;
    return n - length * Math.ceil((n - max) / length);
  }
  const self = {
    length,
    max,
    min,
    constrain,
    reachedAny,
    reachedMax,
    reachedMin,
    removeOffset
  };
  return self;
}
function Counter(max, start, loop) {
  const {
    constrain
  } = Limit(0, max);
  const loopEnd = max + 1;
  let counter3 = withinLimit(start);
  function withinLimit(n) {
    return !loop ? constrain(n) : mathAbs((loopEnd + n) % loopEnd);
  }
  function get() {
    return counter3;
  }
  function set(n) {
    counter3 = withinLimit(n);
    return self;
  }
  function add(n) {
    return clone().set(get() + n);
  }
  function clone() {
    return Counter(max, get(), loop);
  }
  const self = {
    get,
    set,
    add,
    clone
  };
  return self;
}
function DragHandler(axis, rootNode, ownerDocument, ownerWindow, target, dragTracker, location, animation, scrollTo, scrollBody, scrollTarget, index, eventHandler, percentOfView, dragFree, dragThreshold, skipSnaps, baseFriction, watchDrag) {
  const {
    cross: crossAxis,
    direction
  } = axis;
  const focusNodes = ["INPUT", "SELECT", "TEXTAREA"];
  const nonPassiveEvent = {
    passive: false
  };
  const initEvents = EventStore();
  const dragEvents = EventStore();
  const goToNextThreshold = Limit(50, 225).constrain(percentOfView.measure(20));
  const snapForceBoost = {
    mouse: 300,
    touch: 400
  };
  const freeForceBoost = {
    mouse: 500,
    touch: 600
  };
  const baseSpeed = dragFree ? 43 : 25;
  let isMoving = false;
  let startScroll = 0;
  let startCross = 0;
  let pointerIsDown = false;
  let preventScroll = false;
  let preventClick = false;
  let isMouse = false;
  function init(emblaApi) {
    if (!watchDrag) return;
    function downIfAllowed(evt) {
      if (isBoolean(watchDrag) || watchDrag(emblaApi, evt)) down(evt);
    }
    const node = rootNode;
    initEvents.add(node, "dragstart", (evt) => evt.preventDefault(), nonPassiveEvent).add(node, "touchmove", () => void 0, nonPassiveEvent).add(node, "touchend", () => void 0).add(node, "touchstart", downIfAllowed).add(node, "mousedown", downIfAllowed).add(node, "touchcancel", up).add(node, "contextmenu", up).add(node, "click", click, true);
  }
  function destroy() {
    initEvents.clear();
    dragEvents.clear();
  }
  function addDragEvents() {
    const node = isMouse ? ownerDocument : rootNode;
    dragEvents.add(node, "touchmove", move, nonPassiveEvent).add(node, "touchend", up).add(node, "mousemove", move, nonPassiveEvent).add(node, "mouseup", up);
  }
  function isFocusNode(node) {
    const nodeName = node.nodeName || "";
    return focusNodes.includes(nodeName);
  }
  function forceBoost() {
    const boost = dragFree ? freeForceBoost : snapForceBoost;
    const type = isMouse ? "mouse" : "touch";
    return boost[type];
  }
  function allowedForce(force, targetChanged) {
    const next = index.add(mathSign(force) * -1);
    const baseForce = scrollTarget.byDistance(force, !dragFree).distance;
    if (dragFree || mathAbs(force) < goToNextThreshold) return baseForce;
    if (skipSnaps && targetChanged) return baseForce * 0.5;
    return scrollTarget.byIndex(next.get(), 0).distance;
  }
  function down(evt) {
    const isMouseEvt = isMouseEvent2(evt, ownerWindow);
    isMouse = isMouseEvt;
    preventClick = dragFree && isMouseEvt && !evt.buttons && isMoving;
    isMoving = deltaAbs(target.get(), location.get()) >= 2;
    if (isMouseEvt && evt.button !== 0) return;
    if (isFocusNode(evt.target)) return;
    pointerIsDown = true;
    dragTracker.pointerDown(evt);
    scrollBody.useFriction(0).useDuration(0);
    target.set(location);
    addDragEvents();
    startScroll = dragTracker.readPoint(evt);
    startCross = dragTracker.readPoint(evt, crossAxis);
    eventHandler.emit("pointerDown");
  }
  function move(evt) {
    const isTouchEvt = !isMouseEvent2(evt, ownerWindow);
    if (isTouchEvt && evt.touches.length >= 2) return up(evt);
    const lastScroll = dragTracker.readPoint(evt);
    const lastCross = dragTracker.readPoint(evt, crossAxis);
    const diffScroll = deltaAbs(lastScroll, startScroll);
    const diffCross = deltaAbs(lastCross, startCross);
    if (!preventScroll && !isMouse) {
      if (!evt.cancelable) return up(evt);
      preventScroll = diffScroll > diffCross;
      if (!preventScroll) return up(evt);
    }
    const diff = dragTracker.pointerMove(evt);
    if (diffScroll > dragThreshold) preventClick = true;
    scrollBody.useFriction(0.3).useDuration(0.75);
    animation.start();
    target.add(direction(diff));
    evt.preventDefault();
  }
  function up(evt) {
    const currentLocation = scrollTarget.byDistance(0, false);
    const targetChanged = currentLocation.index !== index.get();
    const rawForce = dragTracker.pointerUp(evt) * forceBoost();
    const force = allowedForce(direction(rawForce), targetChanged);
    const forceFactor = factorAbs(rawForce, force);
    const speed = baseSpeed - 10 * forceFactor;
    const friction = baseFriction + forceFactor / 50;
    preventScroll = false;
    pointerIsDown = false;
    dragEvents.clear();
    scrollBody.useDuration(speed).useFriction(friction);
    scrollTo.distance(force, !dragFree);
    isMouse = false;
    eventHandler.emit("pointerUp");
  }
  function click(evt) {
    if (preventClick) {
      evt.stopPropagation();
      evt.preventDefault();
      preventClick = false;
    }
  }
  function pointerDown() {
    return pointerIsDown;
  }
  const self = {
    init,
    destroy,
    pointerDown
  };
  return self;
}
function DragTracker(axis, ownerWindow) {
  const logInterval = 170;
  let startEvent;
  let lastEvent;
  function readTime(evt) {
    return evt.timeStamp;
  }
  function readPoint(evt, evtAxis) {
    const property = evtAxis || axis.scroll;
    const coord = `client${property === "x" ? "X" : "Y"}`;
    return (isMouseEvent2(evt, ownerWindow) ? evt : evt.touches[0])[coord];
  }
  function pointerDown(evt) {
    startEvent = evt;
    lastEvent = evt;
    return readPoint(evt);
  }
  function pointerMove(evt) {
    const diff = readPoint(evt) - readPoint(lastEvent);
    const expired = readTime(evt) - readTime(startEvent) > logInterval;
    lastEvent = evt;
    if (expired) startEvent = evt;
    return diff;
  }
  function pointerUp(evt) {
    if (!startEvent || !lastEvent) return 0;
    const diffDrag = readPoint(lastEvent) - readPoint(startEvent);
    const diffTime = readTime(evt) - readTime(startEvent);
    const expired = readTime(evt) - readTime(lastEvent) > logInterval;
    const force = diffDrag / diffTime;
    const isFlick = diffTime && !expired && mathAbs(force) > 0.1;
    return isFlick ? force : 0;
  }
  const self = {
    pointerDown,
    pointerMove,
    pointerUp,
    readPoint
  };
  return self;
}
function NodeRects() {
  function measure(node) {
    const {
      offsetTop,
      offsetLeft,
      offsetWidth,
      offsetHeight
    } = node;
    const offset = {
      top: offsetTop,
      right: offsetLeft + offsetWidth,
      bottom: offsetTop + offsetHeight,
      left: offsetLeft,
      width: offsetWidth,
      height: offsetHeight
    };
    return offset;
  }
  const self = {
    measure
  };
  return self;
}
function PercentOfView(viewSize) {
  function measure(n) {
    return viewSize * (n / 100);
  }
  const self = {
    measure
  };
  return self;
}
function ResizeHandler(container, eventHandler, ownerWindow, slides, axis, watchResize, nodeRects) {
  const observeNodes = [container].concat(slides);
  let resizeObserver;
  let containerSize;
  let slideSizes = [];
  let destroyed = false;
  function readSize(node) {
    return axis.measureSize(nodeRects.measure(node));
  }
  function init(emblaApi) {
    if (!watchResize) return;
    containerSize = readSize(container);
    slideSizes = slides.map(readSize);
    function defaultCallback(entries) {
      for (const entry of entries) {
        if (destroyed) return;
        const isContainer = entry.target === container;
        const slideIndex = slides.indexOf(entry.target);
        const lastSize = isContainer ? containerSize : slideSizes[slideIndex];
        const newSize = readSize(isContainer ? container : slides[slideIndex]);
        const diffSize = mathAbs(newSize - lastSize);
        if (diffSize >= 0.5) {
          emblaApi.reInit();
          eventHandler.emit("resize");
          break;
        }
      }
    }
    resizeObserver = new ResizeObserver((entries) => {
      if (isBoolean(watchResize) || watchResize(emblaApi, entries)) {
        defaultCallback(entries);
      }
    });
    ownerWindow.requestAnimationFrame(() => {
      observeNodes.forEach((node) => resizeObserver.observe(node));
    });
  }
  function destroy() {
    destroyed = true;
    if (resizeObserver) resizeObserver.disconnect();
  }
  const self = {
    init,
    destroy
  };
  return self;
}
function ScrollBody(location, offsetLocation, previousLocation, target, baseDuration, baseFriction) {
  let bodyVelocity = 0;
  let scrollDirection = 0;
  let scrollDuration = baseDuration;
  let scrollFriction = baseFriction;
  let rawLocation = location.get();
  let rawLocationPrevious = 0;
  function seek(timeStep) {
    const fixedDeltaTimeSeconds = timeStep / 1e3;
    const duration3 = scrollDuration * fixedDeltaTimeSeconds;
    const diff = target.get() - location.get();
    const isInstant = !scrollDuration;
    let directionDiff = 0;
    if (isInstant) {
      bodyVelocity = 0;
      previousLocation.set(target);
      location.set(target);
      directionDiff = diff;
    } else {
      previousLocation.set(location);
      bodyVelocity += diff / duration3;
      bodyVelocity *= scrollFriction;
      rawLocation += bodyVelocity;
      location.add(bodyVelocity * fixedDeltaTimeSeconds);
      directionDiff = rawLocation - rawLocationPrevious;
    }
    scrollDirection = mathSign(directionDiff);
    rawLocationPrevious = rawLocation;
    return self;
  }
  function settled() {
    const diff = target.get() - offsetLocation.get();
    return mathAbs(diff) < 1e-3;
  }
  function duration2() {
    return scrollDuration;
  }
  function direction() {
    return scrollDirection;
  }
  function velocity() {
    return bodyVelocity;
  }
  function useBaseDuration() {
    return useDuration(baseDuration);
  }
  function useBaseFriction() {
    return useFriction(baseFriction);
  }
  function useDuration(n) {
    scrollDuration = n;
    return self;
  }
  function useFriction(n) {
    scrollFriction = n;
    return self;
  }
  const self = {
    direction,
    duration: duration2,
    velocity,
    seek,
    settled,
    useBaseFriction,
    useBaseDuration,
    useFriction,
    useDuration
  };
  return self;
}
function ScrollBounds(limit, location, target, scrollBody, percentOfView) {
  const pullBackThreshold = percentOfView.measure(10);
  const edgeOffsetTolerance = percentOfView.measure(50);
  const frictionLimit = Limit(0.1, 0.99);
  let disabled = false;
  function shouldConstrain() {
    if (disabled) return false;
    if (!limit.reachedAny(target.get())) return false;
    if (!limit.reachedAny(location.get())) return false;
    return true;
  }
  function constrain(pointerDown) {
    if (!shouldConstrain()) return;
    const edge = limit.reachedMin(location.get()) ? "min" : "max";
    const diffToEdge = mathAbs(limit[edge] - location.get());
    const diffToTarget = target.get() - location.get();
    const friction = frictionLimit.constrain(diffToEdge / edgeOffsetTolerance);
    target.subtract(diffToTarget * friction);
    if (!pointerDown && mathAbs(diffToTarget) < pullBackThreshold) {
      target.set(limit.constrain(target.get()));
      scrollBody.useDuration(25).useBaseFriction();
    }
  }
  function toggleActive(active) {
    disabled = !active;
  }
  const self = {
    shouldConstrain,
    constrain,
    toggleActive
  };
  return self;
}
function ScrollContain(viewSize, contentSize, snapsAligned, containScroll, pixelTolerance) {
  const scrollBounds = Limit(-contentSize + viewSize, 0);
  const snapsBounded = measureBounded();
  const scrollContainLimit = findScrollContainLimit();
  const snapsContained = measureContained();
  function usePixelTolerance(bound, snap) {
    return deltaAbs(bound, snap) < 1;
  }
  function findScrollContainLimit() {
    const startSnap = snapsBounded[0];
    const endSnap = arrayLast(snapsBounded);
    const min = snapsBounded.lastIndexOf(startSnap);
    const max = snapsBounded.indexOf(endSnap) + 1;
    return Limit(min, max);
  }
  function measureBounded() {
    return snapsAligned.map((snapAligned, index) => {
      const {
        min,
        max
      } = scrollBounds;
      const snap = scrollBounds.constrain(snapAligned);
      const isFirst = !index;
      const isLast = arrayIsLastIndex(snapsAligned, index);
      if (isFirst) return max;
      if (isLast) return min;
      if (usePixelTolerance(min, snap)) return min;
      if (usePixelTolerance(max, snap)) return max;
      return snap;
    }).map((scrollBound) => parseFloat(scrollBound.toFixed(3)));
  }
  function measureContained() {
    if (contentSize <= viewSize + pixelTolerance) return [scrollBounds.max];
    if (containScroll === "keepSnaps") return snapsBounded;
    const {
      min,
      max
    } = scrollContainLimit;
    return snapsBounded.slice(min, max);
  }
  const self = {
    snapsContained,
    scrollContainLimit
  };
  return self;
}
function ScrollLimit(contentSize, scrollSnaps, loop) {
  const max = scrollSnaps[0];
  const min = loop ? max - contentSize : arrayLast(scrollSnaps);
  const limit = Limit(min, max);
  const self = {
    limit
  };
  return self;
}
function ScrollLooper(contentSize, limit, location, vectors) {
  const jointSafety = 0.1;
  const min = limit.min + jointSafety;
  const max = limit.max + jointSafety;
  const {
    reachedMin,
    reachedMax
  } = Limit(min, max);
  function shouldLoop(direction) {
    if (direction === 1) return reachedMax(location.get());
    if (direction === -1) return reachedMin(location.get());
    return false;
  }
  function loop(direction) {
    if (!shouldLoop(direction)) return;
    const loopDistance = contentSize * (direction * -1);
    vectors.forEach((v) => v.add(loopDistance));
  }
  const self = {
    loop
  };
  return self;
}
function ScrollProgress(limit) {
  const {
    max,
    length
  } = limit;
  function get(n) {
    const currentLocation = n - max;
    return length ? currentLocation / -length : 0;
  }
  const self = {
    get
  };
  return self;
}
function ScrollSnaps(axis, alignment, containerRect, slideRects, slidesToScroll) {
  const {
    startEdge,
    endEdge
  } = axis;
  const {
    groupSlides
  } = slidesToScroll;
  const alignments = measureSizes().map(alignment.measure);
  const snaps = measureUnaligned();
  const snapsAligned = measureAligned();
  function measureSizes() {
    return groupSlides(slideRects).map((rects) => arrayLast(rects)[endEdge] - rects[0][startEdge]).map(mathAbs);
  }
  function measureUnaligned() {
    return slideRects.map((rect) => containerRect[startEdge] - rect[startEdge]).map((snap) => -mathAbs(snap));
  }
  function measureAligned() {
    return groupSlides(snaps).map((g) => g[0]).map((snap, index) => snap + alignments[index]);
  }
  const self = {
    snaps,
    snapsAligned
  };
  return self;
}
function SlideRegistry(containSnaps, containScroll, scrollSnaps, scrollContainLimit, slidesToScroll, slideIndexes) {
  const {
    groupSlides
  } = slidesToScroll;
  const {
    min,
    max
  } = scrollContainLimit;
  const slideRegistry = createSlideRegistry();
  function createSlideRegistry() {
    const groupedSlideIndexes = groupSlides(slideIndexes);
    const doNotContain = !containSnaps || containScroll === "keepSnaps";
    if (scrollSnaps.length === 1) return [slideIndexes];
    if (doNotContain) return groupedSlideIndexes;
    return groupedSlideIndexes.slice(min, max).map((group, index, groups) => {
      const isFirst = !index;
      const isLast = arrayIsLastIndex(groups, index);
      if (isFirst) {
        const range = arrayLast(groups[0]) + 1;
        return arrayFromNumber(range);
      }
      if (isLast) {
        const range = arrayLastIndex(slideIndexes) - arrayLast(groups)[0] + 1;
        return arrayFromNumber(range, arrayLast(groups)[0]);
      }
      return group;
    });
  }
  const self = {
    slideRegistry
  };
  return self;
}
function ScrollTarget(loop, scrollSnaps, contentSize, limit, targetVector) {
  const {
    reachedAny,
    removeOffset,
    constrain
  } = limit;
  function minDistance(distances) {
    return distances.concat().sort((a, b) => mathAbs(a) - mathAbs(b))[0];
  }
  function findTargetSnap(target) {
    const distance = loop ? removeOffset(target) : constrain(target);
    const ascDiffsToSnaps = scrollSnaps.map((snap, index2) => ({
      diff: shortcut(snap - distance, 0),
      index: index2
    })).sort((d1, d2) => mathAbs(d1.diff) - mathAbs(d2.diff));
    const {
      index
    } = ascDiffsToSnaps[0];
    return {
      index,
      distance
    };
  }
  function shortcut(target, direction) {
    const targets = [target, target + contentSize, target - contentSize];
    if (!loop) return target;
    if (!direction) return minDistance(targets);
    const matchingTargets = targets.filter((t) => mathSign(t) === direction);
    if (matchingTargets.length) return minDistance(matchingTargets);
    return arrayLast(targets) - contentSize;
  }
  function byIndex(index, direction) {
    const diffToSnap = scrollSnaps[index] - targetVector.get();
    const distance = shortcut(diffToSnap, direction);
    return {
      index,
      distance
    };
  }
  function byDistance(distance, snap) {
    const target = targetVector.get() + distance;
    const {
      index,
      distance: targetSnapDistance
    } = findTargetSnap(target);
    const reachedBound = !loop && reachedAny(target);
    if (!snap || reachedBound) return {
      index,
      distance
    };
    const diffToSnap = scrollSnaps[index] - targetSnapDistance;
    const snapDistance = distance + shortcut(diffToSnap, 0);
    return {
      index,
      distance: snapDistance
    };
  }
  const self = {
    byDistance,
    byIndex,
    shortcut
  };
  return self;
}
function ScrollTo(animation, indexCurrent, indexPrevious, scrollBody, scrollTarget, targetVector, eventHandler) {
  function scrollTo(target) {
    const distanceDiff = target.distance;
    const indexDiff = target.index !== indexCurrent.get();
    targetVector.add(distanceDiff);
    if (distanceDiff) {
      if (scrollBody.duration()) {
        animation.start();
      } else {
        animation.update();
        animation.render(1);
        animation.update();
      }
    }
    if (indexDiff) {
      indexPrevious.set(indexCurrent.get());
      indexCurrent.set(target.index);
      eventHandler.emit("select");
    }
  }
  function distance(n, snap) {
    const target = scrollTarget.byDistance(n, snap);
    scrollTo(target);
  }
  function index(n, direction) {
    const targetIndex = indexCurrent.clone().set(n);
    const target = scrollTarget.byIndex(targetIndex.get(), direction);
    scrollTo(target);
  }
  const self = {
    distance,
    index
  };
  return self;
}
function SlideFocus(root, slides, slideRegistry, scrollTo, scrollBody, eventStore, eventHandler, watchFocus) {
  const focusListenerOptions = {
    passive: true,
    capture: true
  };
  let lastTabPressTime = 0;
  function init(emblaApi) {
    if (!watchFocus) return;
    function defaultCallback(index) {
      const nowTime = (/* @__PURE__ */ new Date()).getTime();
      const diffTime = nowTime - lastTabPressTime;
      if (diffTime > 10) return;
      eventHandler.emit("slideFocusStart");
      root.scrollLeft = 0;
      const group = slideRegistry.findIndex((group2) => group2.includes(index));
      if (!isNumber(group)) return;
      scrollBody.useDuration(0);
      scrollTo.index(group, 0);
      eventHandler.emit("slideFocus");
    }
    eventStore.add(document, "keydown", registerTabPress, false);
    slides.forEach((slide, slideIndex) => {
      eventStore.add(slide, "focus", (evt) => {
        if (isBoolean(watchFocus) || watchFocus(emblaApi, evt)) {
          defaultCallback(slideIndex);
        }
      }, focusListenerOptions);
    });
  }
  function registerTabPress(event) {
    if (event.code === "Tab") lastTabPressTime = (/* @__PURE__ */ new Date()).getTime();
  }
  const self = {
    init
  };
  return self;
}
function Vector1D(initialValue) {
  let value = initialValue;
  function get() {
    return value;
  }
  function set(n) {
    value = normalizeInput(n);
  }
  function add(n) {
    value += normalizeInput(n);
  }
  function subtract(n) {
    value -= normalizeInput(n);
  }
  function normalizeInput(n) {
    return isNumber(n) ? n : n.get();
  }
  const self = {
    get,
    set,
    add,
    subtract
  };
  return self;
}
function Translate(axis, container) {
  const translate = axis.scroll === "x" ? x : y;
  const containerStyle = container.style;
  let disabled = false;
  function x(n) {
    return `translate3d(${n}px,0px,0px)`;
  }
  function y(n) {
    return `translate3d(0px,${n}px,0px)`;
  }
  function to(target) {
    if (disabled) return;
    containerStyle.transform = translate(axis.direction(target));
  }
  function toggleActive(active) {
    disabled = !active;
  }
  function clear() {
    if (disabled) return;
    containerStyle.transform = "";
    if (!container.getAttribute("style")) container.removeAttribute("style");
  }
  const self = {
    clear,
    to,
    toggleActive
  };
  return self;
}
function SlideLooper(axis, viewSize, contentSize, slideSizes, slideSizesWithGaps, snaps, scrollSnaps, location, slides) {
  const roundingSafety = 0.5;
  const ascItems = arrayKeys(slideSizesWithGaps);
  const descItems = arrayKeys(slideSizesWithGaps).reverse();
  const loopPoints = startPoints().concat(endPoints());
  function removeSlideSizes(indexes, from) {
    return indexes.reduce((a, i) => {
      return a - slideSizesWithGaps[i];
    }, from);
  }
  function slidesInGap(indexes, gap) {
    return indexes.reduce((a, i) => {
      const remainingGap = removeSlideSizes(a, gap);
      return remainingGap > 0 ? a.concat([i]) : a;
    }, []);
  }
  function findSlideBounds(offset) {
    return snaps.map((snap, index) => ({
      start: snap - slideSizes[index] + roundingSafety + offset,
      end: snap + viewSize - roundingSafety + offset
    }));
  }
  function findLoopPoints(indexes, offset, isEndEdge) {
    const slideBounds = findSlideBounds(offset);
    return indexes.map((index) => {
      const initial = isEndEdge ? 0 : -contentSize;
      const altered = isEndEdge ? contentSize : 0;
      const boundEdge = isEndEdge ? "end" : "start";
      const loopPoint = slideBounds[index][boundEdge];
      return {
        index,
        loopPoint,
        slideLocation: Vector1D(-1),
        translate: Translate(axis, slides[index]),
        target: () => location.get() > loopPoint ? initial : altered
      };
    });
  }
  function startPoints() {
    const gap = scrollSnaps[0];
    const indexes = slidesInGap(descItems, gap);
    return findLoopPoints(indexes, contentSize, false);
  }
  function endPoints() {
    const gap = viewSize - scrollSnaps[0] - 1;
    const indexes = slidesInGap(ascItems, gap);
    return findLoopPoints(indexes, -contentSize, true);
  }
  function canLoop() {
    return loopPoints.every(({
      index
    }) => {
      const otherIndexes = ascItems.filter((i) => i !== index);
      return removeSlideSizes(otherIndexes, viewSize) <= 0.1;
    });
  }
  function loop() {
    loopPoints.forEach((loopPoint) => {
      const {
        target,
        translate,
        slideLocation
      } = loopPoint;
      const shiftLocation = target();
      if (shiftLocation === slideLocation.get()) return;
      translate.to(shiftLocation);
      slideLocation.set(shiftLocation);
    });
  }
  function clear() {
    loopPoints.forEach((loopPoint) => loopPoint.translate.clear());
  }
  const self = {
    canLoop,
    clear,
    loop,
    loopPoints
  };
  return self;
}
function SlidesHandler(container, eventHandler, watchSlides) {
  let mutationObserver;
  let destroyed = false;
  function init(emblaApi) {
    if (!watchSlides) return;
    function defaultCallback(mutations) {
      for (const mutation of mutations) {
        if (mutation.type === "childList") {
          emblaApi.reInit();
          eventHandler.emit("slidesChanged");
          break;
        }
      }
    }
    mutationObserver = new MutationObserver((mutations) => {
      if (destroyed) return;
      if (isBoolean(watchSlides) || watchSlides(emblaApi, mutations)) {
        defaultCallback(mutations);
      }
    });
    mutationObserver.observe(container, {
      childList: true
    });
  }
  function destroy() {
    if (mutationObserver) mutationObserver.disconnect();
    destroyed = true;
  }
  const self = {
    init,
    destroy
  };
  return self;
}
function SlidesInView(container, slides, eventHandler, threshold) {
  const intersectionEntryMap = {};
  let inViewCache = null;
  let notInViewCache = null;
  let intersectionObserver;
  let destroyed = false;
  function init() {
    intersectionObserver = new IntersectionObserver((entries) => {
      if (destroyed) return;
      entries.forEach((entry) => {
        const index = slides.indexOf(entry.target);
        intersectionEntryMap[index] = entry;
      });
      inViewCache = null;
      notInViewCache = null;
      eventHandler.emit("slidesInView");
    }, {
      root: container.parentElement,
      threshold
    });
    slides.forEach((slide) => intersectionObserver.observe(slide));
  }
  function destroy() {
    if (intersectionObserver) intersectionObserver.disconnect();
    destroyed = true;
  }
  function createInViewList(inView) {
    return objectKeys(intersectionEntryMap).reduce((list, slideIndex) => {
      const index = parseInt(slideIndex);
      const {
        isIntersecting
      } = intersectionEntryMap[index];
      const inViewMatch = inView && isIntersecting;
      const notInViewMatch = !inView && !isIntersecting;
      if (inViewMatch || notInViewMatch) list.push(index);
      return list;
    }, []);
  }
  function get(inView = true) {
    if (inView && inViewCache) return inViewCache;
    if (!inView && notInViewCache) return notInViewCache;
    const slideIndexes = createInViewList(inView);
    if (inView) inViewCache = slideIndexes;
    if (!inView) notInViewCache = slideIndexes;
    return slideIndexes;
  }
  const self = {
    init,
    destroy,
    get
  };
  return self;
}
function SlideSizes(axis, containerRect, slideRects, slides, readEdgeGap, ownerWindow) {
  const {
    measureSize,
    startEdge,
    endEdge
  } = axis;
  const withEdgeGap = slideRects[0] && readEdgeGap;
  const startGap = measureStartGap();
  const endGap = measureEndGap();
  const slideSizes = slideRects.map(measureSize);
  const slideSizesWithGaps = measureWithGaps();
  function measureStartGap() {
    if (!withEdgeGap) return 0;
    const slideRect = slideRects[0];
    return mathAbs(containerRect[startEdge] - slideRect[startEdge]);
  }
  function measureEndGap() {
    if (!withEdgeGap) return 0;
    const style = ownerWindow.getComputedStyle(arrayLast(slides));
    return parseFloat(style.getPropertyValue(`margin-${endEdge}`));
  }
  function measureWithGaps() {
    return slideRects.map((rect, index, rects) => {
      const isFirst = !index;
      const isLast = arrayIsLastIndex(rects, index);
      if (isFirst) return slideSizes[index] + startGap;
      if (isLast) return slideSizes[index] + endGap;
      return rects[index + 1][startEdge] - rect[startEdge];
    }).map(mathAbs);
  }
  const self = {
    slideSizes,
    slideSizesWithGaps,
    startGap,
    endGap
  };
  return self;
}
function SlidesToScroll(axis, viewSize, slidesToScroll, loop, containerRect, slideRects, startGap, endGap, pixelTolerance) {
  const {
    startEdge,
    endEdge,
    direction
  } = axis;
  const groupByNumber = isNumber(slidesToScroll);
  function byNumber(array, groupSize) {
    return arrayKeys(array).filter((i) => i % groupSize === 0).map((i) => array.slice(i, i + groupSize));
  }
  function bySize(array) {
    if (!array.length) return [];
    return arrayKeys(array).reduce((groups, rectB, index) => {
      const rectA = arrayLast(groups) || 0;
      const isFirst = rectA === 0;
      const isLast = rectB === arrayLastIndex(array);
      const edgeA = containerRect[startEdge] - slideRects[rectA][startEdge];
      const edgeB = containerRect[startEdge] - slideRects[rectB][endEdge];
      const gapA = !loop && isFirst ? direction(startGap) : 0;
      const gapB = !loop && isLast ? direction(endGap) : 0;
      const chunkSize = mathAbs(edgeB - gapB - (edgeA + gapA));
      if (index && chunkSize > viewSize + pixelTolerance) groups.push(rectB);
      if (isLast) groups.push(array.length);
      return groups;
    }, []).map((currentSize, index, groups) => {
      const previousSize = Math.max(groups[index - 1] || 0);
      return array.slice(previousSize, currentSize);
    });
  }
  function groupSlides(array) {
    return groupByNumber ? byNumber(array, slidesToScroll) : bySize(array);
  }
  const self = {
    groupSlides
  };
  return self;
}
function Engine(root, container, slides, ownerDocument, ownerWindow, options, eventHandler) {
  const {
    align,
    axis: scrollAxis,
    direction,
    startIndex,
    loop,
    duration: duration2,
    dragFree,
    dragThreshold,
    inViewThreshold,
    slidesToScroll: groupSlides,
    skipSnaps,
    containScroll,
    watchResize,
    watchSlides,
    watchDrag,
    watchFocus
  } = options;
  const pixelTolerance = 2;
  const nodeRects = NodeRects();
  const containerRect = nodeRects.measure(container);
  const slideRects = slides.map(nodeRects.measure);
  const axis = Axis(scrollAxis, direction);
  const viewSize = axis.measureSize(containerRect);
  const percentOfView = PercentOfView(viewSize);
  const alignment = Alignment(align, viewSize);
  const containSnaps = !loop && !!containScroll;
  const readEdgeGap = loop || !!containScroll;
  const {
    slideSizes,
    slideSizesWithGaps,
    startGap,
    endGap
  } = SlideSizes(axis, containerRect, slideRects, slides, readEdgeGap, ownerWindow);
  const slidesToScroll = SlidesToScroll(axis, viewSize, groupSlides, loop, containerRect, slideRects, startGap, endGap, pixelTolerance);
  const {
    snaps,
    snapsAligned
  } = ScrollSnaps(axis, alignment, containerRect, slideRects, slidesToScroll);
  const contentSize = -arrayLast(snaps) + arrayLast(slideSizesWithGaps);
  const {
    snapsContained,
    scrollContainLimit
  } = ScrollContain(viewSize, contentSize, snapsAligned, containScroll, pixelTolerance);
  const scrollSnaps = containSnaps ? snapsContained : snapsAligned;
  const {
    limit
  } = ScrollLimit(contentSize, scrollSnaps, loop);
  const index = Counter(arrayLastIndex(scrollSnaps), startIndex, loop);
  const indexPrevious = index.clone();
  const slideIndexes = arrayKeys(slides);
  const update = ({
    dragHandler,
    scrollBody: scrollBody2,
    scrollBounds,
    options: {
      loop: loop2
    }
  }, timeStep) => {
    if (!loop2) scrollBounds.constrain(dragHandler.pointerDown());
    scrollBody2.seek(timeStep);
  };
  const render = ({
    scrollBody: scrollBody2,
    translate,
    location: location2,
    offsetLocation: offsetLocation2,
    scrollLooper,
    slideLooper,
    dragHandler,
    animation: animation2,
    eventHandler: eventHandler2,
    scrollBounds,
    options: {
      loop: loop2
    }
  }, lagOffset) => {
    const shouldSettle = scrollBody2.settled();
    const withinBounds = !scrollBounds.shouldConstrain();
    const hasSettled = loop2 ? shouldSettle : shouldSettle && withinBounds;
    if (hasSettled && !dragHandler.pointerDown()) {
      animation2.stop();
      eventHandler2.emit("settle");
    }
    if (!hasSettled) eventHandler2.emit("scroll");
    const interpolatedLocation = location2.get() * lagOffset + previousLocation.get() * (1 - lagOffset);
    offsetLocation2.set(interpolatedLocation);
    if (loop2) {
      scrollLooper.loop(scrollBody2.direction());
      slideLooper.loop();
    }
    translate.to(offsetLocation2.get());
  };
  const animation = Animations(ownerDocument, ownerWindow, (timeStep) => update(engine, timeStep), (lagOffset) => render(engine, lagOffset));
  const friction = 0.68;
  const startLocation = scrollSnaps[index.get()];
  const location = Vector1D(startLocation);
  const previousLocation = Vector1D(startLocation);
  const offsetLocation = Vector1D(startLocation);
  const target = Vector1D(startLocation);
  const scrollBody = ScrollBody(location, offsetLocation, previousLocation, target, duration2, friction);
  const scrollTarget = ScrollTarget(loop, scrollSnaps, contentSize, limit, target);
  const scrollTo = ScrollTo(animation, index, indexPrevious, scrollBody, scrollTarget, target, eventHandler);
  const scrollProgress = ScrollProgress(limit);
  const eventStore = EventStore();
  const slidesInView = SlidesInView(container, slides, eventHandler, inViewThreshold);
  const {
    slideRegistry
  } = SlideRegistry(containSnaps, containScroll, scrollSnaps, scrollContainLimit, slidesToScroll, slideIndexes);
  const slideFocus = SlideFocus(root, slides, slideRegistry, scrollTo, scrollBody, eventStore, eventHandler, watchFocus);
  const engine = {
    ownerDocument,
    ownerWindow,
    eventHandler,
    containerRect,
    slideRects,
    animation,
    axis,
    dragHandler: DragHandler(axis, root, ownerDocument, ownerWindow, target, DragTracker(axis, ownerWindow), location, animation, scrollTo, scrollBody, scrollTarget, index, eventHandler, percentOfView, dragFree, dragThreshold, skipSnaps, friction, watchDrag),
    eventStore,
    percentOfView,
    index,
    indexPrevious,
    limit,
    location,
    offsetLocation,
    previousLocation,
    options,
    resizeHandler: ResizeHandler(container, eventHandler, ownerWindow, slides, axis, watchResize, nodeRects),
    scrollBody,
    scrollBounds: ScrollBounds(limit, offsetLocation, target, scrollBody, percentOfView),
    scrollLooper: ScrollLooper(contentSize, limit, offsetLocation, [location, offsetLocation, previousLocation, target]),
    scrollProgress,
    scrollSnapList: scrollSnaps.map(scrollProgress.get),
    scrollSnaps,
    scrollTarget,
    scrollTo,
    slideLooper: SlideLooper(axis, viewSize, contentSize, slideSizes, slideSizesWithGaps, snaps, scrollSnaps, offsetLocation, slides),
    slideFocus,
    slidesHandler: SlidesHandler(container, eventHandler, watchSlides),
    slidesInView,
    slideIndexes,
    slideRegistry,
    slidesToScroll,
    target,
    translate: Translate(axis, container)
  };
  return engine;
}
function EventHandler() {
  let listeners = {};
  let api;
  function init(emblaApi) {
    api = emblaApi;
  }
  function getListeners(evt) {
    return listeners[evt] || [];
  }
  function emit(evt) {
    getListeners(evt).forEach((e) => e(api, evt));
    return self;
  }
  function on(evt, cb) {
    listeners[evt] = getListeners(evt).concat([cb]);
    return self;
  }
  function off(evt, cb) {
    listeners[evt] = getListeners(evt).filter((e) => e !== cb);
    return self;
  }
  function clear() {
    listeners = {};
  }
  const self = {
    init,
    emit,
    off,
    on,
    clear
  };
  return self;
}
var defaultOptions = {
  align: "center",
  axis: "x",
  container: null,
  slides: null,
  containScroll: "trimSnaps",
  direction: "ltr",
  slidesToScroll: 1,
  inViewThreshold: 0,
  breakpoints: {},
  dragFree: false,
  dragThreshold: 10,
  loop: false,
  skipSnaps: false,
  duration: 25,
  startIndex: 0,
  active: true,
  watchDrag: true,
  watchResize: true,
  watchSlides: true,
  watchFocus: true
};
function OptionsHandler(ownerWindow) {
  function mergeOptions(optionsA, optionsB) {
    return objectsMergeDeep(optionsA, optionsB || {});
  }
  function optionsAtMedia(options) {
    const optionsAtMedia2 = options.breakpoints || {};
    const matchedMediaOptions = objectKeys(optionsAtMedia2).filter((media) => ownerWindow.matchMedia(media).matches).map((media) => optionsAtMedia2[media]).reduce((a, mediaOption) => mergeOptions(a, mediaOption), {});
    return mergeOptions(options, matchedMediaOptions);
  }
  function optionsMediaQueries(optionsList) {
    return optionsList.map((options) => objectKeys(options.breakpoints || {})).reduce((acc, mediaQueries) => acc.concat(mediaQueries), []).map(ownerWindow.matchMedia);
  }
  const self = {
    mergeOptions,
    optionsAtMedia,
    optionsMediaQueries
  };
  return self;
}
function PluginsHandler(optionsHandler) {
  let activePlugins = [];
  function init(emblaApi, plugins) {
    activePlugins = plugins.filter(({
      options
    }) => optionsHandler.optionsAtMedia(options).active !== false);
    activePlugins.forEach((plugin) => plugin.init(emblaApi, optionsHandler));
    return plugins.reduce((map, plugin) => Object.assign(map, {
      [plugin.name]: plugin
    }), {});
  }
  function destroy() {
    activePlugins = activePlugins.filter((plugin) => plugin.destroy());
  }
  const self = {
    init,
    destroy
  };
  return self;
}
function EmblaCarousel(root, userOptions, userPlugins) {
  const ownerDocument = root.ownerDocument;
  const ownerWindow = ownerDocument.defaultView;
  const optionsHandler = OptionsHandler(ownerWindow);
  const pluginsHandler = PluginsHandler(optionsHandler);
  const mediaHandlers = EventStore();
  const eventHandler = EventHandler();
  const {
    mergeOptions,
    optionsAtMedia,
    optionsMediaQueries
  } = optionsHandler;
  const {
    on,
    off,
    emit
  } = eventHandler;
  const reInit = reActivate;
  let destroyed = false;
  let engine;
  let optionsBase = mergeOptions(defaultOptions, EmblaCarousel.globalOptions);
  let options = mergeOptions(optionsBase);
  let pluginList = [];
  let pluginApis;
  let container;
  let slides;
  function storeElements() {
    const {
      container: userContainer,
      slides: userSlides
    } = options;
    const customContainer = isString(userContainer) ? root.querySelector(userContainer) : userContainer;
    container = customContainer || root.children[0];
    const customSlides = isString(userSlides) ? container.querySelectorAll(userSlides) : userSlides;
    slides = [].slice.call(customSlides || container.children);
  }
  function createEngine(options2) {
    const engine2 = Engine(root, container, slides, ownerDocument, ownerWindow, options2, eventHandler);
    if (options2.loop && !engine2.slideLooper.canLoop()) {
      const optionsWithoutLoop = Object.assign({}, options2, {
        loop: false
      });
      return createEngine(optionsWithoutLoop);
    }
    return engine2;
  }
  function activate(withOptions, withPlugins) {
    if (destroyed) return;
    optionsBase = mergeOptions(optionsBase, withOptions);
    options = optionsAtMedia(optionsBase);
    pluginList = withPlugins || pluginList;
    storeElements();
    engine = createEngine(options);
    optionsMediaQueries([optionsBase, ...pluginList.map(({
      options: options2
    }) => options2)]).forEach((query) => mediaHandlers.add(query, "change", reActivate));
    if (!options.active) return;
    engine.translate.to(engine.location.get());
    engine.animation.init();
    engine.slidesInView.init();
    engine.slideFocus.init(self);
    engine.eventHandler.init(self);
    engine.resizeHandler.init(self);
    engine.slidesHandler.init(self);
    if (engine.options.loop) engine.slideLooper.loop();
    if (container.offsetParent && slides.length) engine.dragHandler.init(self);
    pluginApis = pluginsHandler.init(self, pluginList);
  }
  function reActivate(withOptions, withPlugins) {
    const startIndex = selectedScrollSnap();
    deActivate();
    activate(mergeOptions({
      startIndex
    }, withOptions), withPlugins);
    eventHandler.emit("reInit");
  }
  function deActivate() {
    engine.dragHandler.destroy();
    engine.eventStore.clear();
    engine.translate.clear();
    engine.slideLooper.clear();
    engine.resizeHandler.destroy();
    engine.slidesHandler.destroy();
    engine.slidesInView.destroy();
    engine.animation.destroy();
    pluginsHandler.destroy();
    mediaHandlers.clear();
  }
  function destroy() {
    if (destroyed) return;
    destroyed = true;
    mediaHandlers.clear();
    deActivate();
    eventHandler.emit("destroy");
    eventHandler.clear();
  }
  function scrollTo(index, jump, direction) {
    if (!options.active || destroyed) return;
    engine.scrollBody.useBaseFriction().useDuration(jump === true ? 0 : options.duration);
    engine.scrollTo.index(index, direction || 0);
  }
  function scrollNext(jump) {
    const next = engine.index.add(1).get();
    scrollTo(next, jump, -1);
  }
  function scrollPrev(jump) {
    const prev = engine.index.add(-1).get();
    scrollTo(prev, jump, 1);
  }
  function canScrollNext() {
    const next = engine.index.add(1).get();
    return next !== selectedScrollSnap();
  }
  function canScrollPrev() {
    const prev = engine.index.add(-1).get();
    return prev !== selectedScrollSnap();
  }
  function scrollSnapList() {
    return engine.scrollSnapList;
  }
  function scrollProgress() {
    return engine.scrollProgress.get(engine.location.get());
  }
  function selectedScrollSnap() {
    return engine.index.get();
  }
  function previousScrollSnap() {
    return engine.indexPrevious.get();
  }
  function slidesInView() {
    return engine.slidesInView.get();
  }
  function slidesNotInView() {
    return engine.slidesInView.get(false);
  }
  function plugins() {
    return pluginApis;
  }
  function internalEngine() {
    return engine;
  }
  function rootNode() {
    return root;
  }
  function containerNode() {
    return container;
  }
  function slideNodes() {
    return slides;
  }
  const self = {
    canScrollNext,
    canScrollPrev,
    containerNode,
    internalEngine,
    destroy,
    off,
    on,
    emit,
    plugins,
    previousScrollSnap,
    reInit,
    rootNode,
    scrollNext,
    scrollPrev,
    scrollProgress,
    scrollSnapList,
    scrollTo,
    selectedScrollSnap,
    slideNodes,
    slidesInView,
    slidesNotInView
  };
  activate(userOptions, userPlugins);
  setTimeout(() => eventHandler.emit("init"), 0);
  return self;
}
EmblaCarousel.globalOptions = void 0;

// node_modules/@fluentui/react-carousel/lib/components/useEmblaCarousel.js
var React581 = __toESM(require_react());

// node_modules/@fluentui/react-carousel/lib/components/CarouselCard/useCarouselCardStyles.styles.js
var carouselCardClassNames = {
  root: "fui-CarouselCard"
};
var useStyles84 = __styles2({
  root: {
    xawz: 0,
    Bh6795r: 0,
    Bnnss6s: 0,
    fkmc3a: "fg68ejw",
    B2u0y6b: "f6dzj5z"
  },
  autoSize: {
    xawz: 0,
    Bh6795r: 0,
    Bnnss6s: 0,
    fkmc3a: "fd9q35j",
    Bf4jedk: "fy77jfu",
    a9b677: "f14z66ap",
    B2u0y6b: "f6dzj5z"
  }
}, {
  d: [[".fg68ejw{flex:0 0 100%;}", {
    p: -1
  }], ".f6dzj5z{max-width:100%;}", [".fd9q35j{flex:0 0 auto;}", {
    p: -1
  }], ".fy77jfu{min-width:0;}", ".f14z66ap{width:auto;}"]
});
var useCarouselCardStyles_unstable = (state) => {
  "use no memo";
  const {
    autoSize
  } = state;
  const styles = useStyles84();
  state.root.className = mergeClasses(carouselCardClassNames.root, styles.root, autoSize && styles.autoSize, state.root.className);
  return state;
};

// node_modules/@fluentui/react-carousel/lib/components/CarouselSlider/useCarouselSliderStyles.styles.js
var carouselSliderClassNames = {
  root: "fui-CarouselSlider"
};
var useStyles85 = __styles2({
  root: {
    mc9l5x: "f22iagw",
    Eiaeu8: "f1115ve7"
  }
}, {
  d: [".f22iagw{display:flex;}", ".f1115ve7{overflow-anchor:none;}"]
});
var useCarouselSliderStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles85();
  state.root.className = mergeClasses(carouselSliderClassNames.root, styles.root, state.root.className);
  return state;
};

// node_modules/embla-carousel-autoplay/esm/embla-carousel-autoplay.esm.js
var defaultOptions2 = {
  active: true,
  breakpoints: {},
  delay: 4e3,
  jump: false,
  playOnInit: true,
  stopOnFocusIn: true,
  stopOnInteraction: true,
  stopOnMouseEnter: false,
  stopOnLastSnap: false,
  rootNode: null
};
function Autoplay(userOptions = {}) {
  let options;
  let emblaApi;
  let destroyed;
  let playing = false;
  let resume = true;
  let jump = false;
  let timer = 0;
  function init(emblaApiInstance, optionsHandler) {
    emblaApi = emblaApiInstance;
    const {
      mergeOptions,
      optionsAtMedia
    } = optionsHandler;
    const optionsBase = mergeOptions(defaultOptions2, Autoplay.globalOptions);
    const allOptions = mergeOptions(optionsBase, userOptions);
    options = optionsAtMedia(allOptions);
    if (emblaApi.scrollSnapList().length <= 1) return;
    jump = options.jump;
    destroyed = false;
    const {
      eventStore,
      ownerDocument
    } = emblaApi.internalEngine();
    const emblaRoot = emblaApi.rootNode();
    const root = options.rootNode && options.rootNode(emblaRoot) || emblaRoot;
    const container = emblaApi.containerNode();
    emblaApi.on("pointerDown", stopTimer);
    if (!options.stopOnInteraction) {
      emblaApi.on("pointerUp", startTimer);
    }
    if (options.stopOnMouseEnter) {
      eventStore.add(root, "mouseenter", () => {
        resume = false;
        stopTimer();
      });
      if (!options.stopOnInteraction) {
        eventStore.add(root, "mouseleave", () => {
          resume = true;
          startTimer();
        });
      }
    }
    if (options.stopOnFocusIn) {
      emblaApi.on("slideFocusStart", stopTimer);
      if (!options.stopOnInteraction) {
        eventStore.add(container, "focusout", startTimer);
      }
    }
    eventStore.add(ownerDocument, "visibilitychange", visibilityChange);
    if (options.playOnInit && !documentIsHidden()) startTimer();
  }
  function destroy() {
    emblaApi.off("pointerDown", stopTimer).off("pointerUp", startTimer).off("slideFocusStart", stopTimer);
    stopTimer();
    destroyed = true;
    playing = false;
  }
  function startTimer() {
    if (destroyed) return;
    if (!resume) return;
    if (!playing) emblaApi.emit("autoplay:play");
    const {
      ownerWindow
    } = emblaApi.internalEngine();
    ownerWindow.clearInterval(timer);
    timer = ownerWindow.setInterval(next, options.delay);
    playing = true;
  }
  function stopTimer() {
    if (destroyed) return;
    if (playing) emblaApi.emit("autoplay:stop");
    const {
      ownerWindow
    } = emblaApi.internalEngine();
    ownerWindow.clearInterval(timer);
    timer = 0;
    playing = false;
  }
  function visibilityChange() {
    if (documentIsHidden()) {
      resume = playing;
      return stopTimer();
    }
    if (resume) startTimer();
  }
  function documentIsHidden() {
    const {
      ownerDocument
    } = emblaApi.internalEngine();
    return ownerDocument.visibilityState === "hidden";
  }
  function play(jumpOverride) {
    if (typeof jumpOverride !== "undefined") jump = jumpOverride;
    resume = true;
    startTimer();
  }
  function stop() {
    if (playing) stopTimer();
  }
  function reset() {
    if (playing) play();
  }
  function isPlaying() {
    return playing;
  }
  function next() {
    const {
      index
    } = emblaApi.internalEngine();
    const nextIndex = index.clone().add(1).get();
    const lastIndex = emblaApi.scrollSnapList().length - 1;
    const kill = options.stopOnLastSnap && nextIndex === lastIndex;
    if (kill) stopTimer();
    if (emblaApi.canScrollNext()) {
      emblaApi.scrollNext(jump);
    } else {
      emblaApi.scrollTo(0, jump);
    }
  }
  const self = {
    name: "autoplay",
    options: userOptions,
    init,
    destroy,
    play,
    stop,
    reset,
    isPlaying
  };
  return self;
}
Autoplay.globalOptions = void 0;

// node_modules/embla-carousel-fade/esm/embla-carousel-fade.esm.js
function clampNumber(number, min, max) {
  return Math.min(Math.max(number, min), max);
}
function isNumber2(value) {
  return typeof value === "number" && !isNaN(value);
}
function Fade2(userOptions = {}) {
  const fullOpacity = 1;
  const noOpacity = 0;
  const fadeFriction = 0.68;
  const timeStep = 1e3 / 60;
  let emblaApi;
  let opacities = [];
  let fadeToNextDistance;
  let distanceFromPointerDown = 0;
  let fadeVelocity = 0;
  let progress = 0;
  let shouldFadePair = false;
  let defaultSettledBehaviour;
  let defaultProgressBehaviour;
  function init(emblaApiInstance) {
    emblaApi = emblaApiInstance;
    const selectedSnap = emblaApi.selectedScrollSnap();
    const {
      scrollBody,
      containerRect,
      axis
    } = emblaApi.internalEngine();
    const containerSize = axis.measureSize(containerRect);
    fadeToNextDistance = clampNumber(containerSize * 0.75, 200, 500);
    shouldFadePair = false;
    opacities = emblaApi.scrollSnapList().map((_, index) => index === selectedSnap ? fullOpacity : noOpacity);
    defaultSettledBehaviour = scrollBody.settled;
    defaultProgressBehaviour = emblaApi.scrollProgress;
    scrollBody.settled = settled;
    emblaApi.scrollProgress = scrollProgress;
    emblaApi.on("select", select).on("slideFocus", fadeToSelectedSnapInstantly).on("pointerDown", pointerDown).on("pointerUp", pointerUp);
    disableScroll();
    fadeToSelectedSnapInstantly();
  }
  function destroy() {
    const {
      scrollBody
    } = emblaApi.internalEngine();
    scrollBody.settled = defaultSettledBehaviour;
    emblaApi.scrollProgress = defaultProgressBehaviour;
    emblaApi.off("select", select).off("slideFocus", fadeToSelectedSnapInstantly).off("pointerDown", pointerDown).off("pointerUp", pointerUp);
    emblaApi.slideNodes().forEach((slideNode) => {
      const slideStyle = slideNode.style;
      slideStyle.opacity = "";
      slideStyle.transform = "";
      slideStyle.pointerEvents = "";
      if (!slideNode.getAttribute("style")) slideNode.removeAttribute("style");
    });
  }
  function fadeToSelectedSnapInstantly() {
    const selectedSnap = emblaApi.selectedScrollSnap();
    setOpacities(selectedSnap, fullOpacity);
  }
  function pointerUp() {
    shouldFadePair = false;
  }
  function pointerDown() {
    shouldFadePair = false;
    distanceFromPointerDown = 0;
    fadeVelocity = 0;
  }
  function select() {
    const duration2 = emblaApi.internalEngine().scrollBody.duration();
    fadeVelocity = duration2 ? 0 : fullOpacity;
    shouldFadePair = true;
    if (!duration2) fadeToSelectedSnapInstantly();
  }
  function getSlideTransform(position) {
    const {
      axis
    } = emblaApi.internalEngine();
    const translateAxis = axis.scroll.toUpperCase();
    return `translate${translateAxis}(${axis.direction(position)}px)`;
  }
  function disableScroll() {
    const {
      translate,
      slideLooper
    } = emblaApi.internalEngine();
    translate.clear();
    translate.toggleActive(false);
    slideLooper.loopPoints.forEach(({
      translate: translate2
    }) => {
      translate2.clear();
      translate2.toggleActive(false);
    });
  }
  function lockExcessiveScroll(fadeIndex) {
    const {
      scrollSnaps,
      location,
      target
    } = emblaApi.internalEngine();
    if (!isNumber2(fadeIndex) || opacities[fadeIndex] < 0.5) return;
    location.set(scrollSnaps[fadeIndex]);
    target.set(location);
  }
  function setOpacities(fadeIndex, velocity) {
    const scrollSnaps = emblaApi.scrollSnapList();
    scrollSnaps.forEach((_, indexA) => {
      const absVelocity = Math.abs(velocity);
      const currentOpacity = opacities[indexA];
      const isFadeIndex = indexA === fadeIndex;
      const nextOpacity = isFadeIndex ? currentOpacity + absVelocity : currentOpacity - absVelocity;
      const clampedOpacity = clampNumber(nextOpacity, noOpacity, fullOpacity);
      opacities[indexA] = clampedOpacity;
      const fadePair = isFadeIndex && shouldFadePair;
      const indexB = emblaApi.previousScrollSnap();
      if (fadePair) opacities[indexB] = 1 - clampedOpacity;
      if (isFadeIndex) setProgress(fadeIndex, clampedOpacity);
      setOpacity(indexA);
    });
  }
  function setOpacity(index) {
    const slidesInSnap = emblaApi.internalEngine().slideRegistry[index];
    const {
      scrollSnaps,
      containerRect
    } = emblaApi.internalEngine();
    const opacity = opacities[index];
    slidesInSnap.forEach((slideIndex) => {
      const slideStyle = emblaApi.slideNodes()[slideIndex].style;
      const roundedOpacity = parseFloat(opacity.toFixed(2));
      const hasOpacity = roundedOpacity > noOpacity;
      const position = hasOpacity ? scrollSnaps[index] : containerRect.width + 2;
      const transform = getSlideTransform(position);
      if (hasOpacity) slideStyle.transform = transform;
      slideStyle.opacity = roundedOpacity.toString();
      slideStyle.pointerEvents = opacity > 0.5 ? "auto" : "none";
      if (!hasOpacity) slideStyle.transform = transform;
    });
  }
  function setProgress(fadeIndex, opacity) {
    const {
      index,
      dragHandler,
      scrollSnaps
    } = emblaApi.internalEngine();
    const pointerDown2 = dragHandler.pointerDown();
    const snapFraction = 1 / (scrollSnaps.length - 1);
    let indexA = fadeIndex;
    let indexB = pointerDown2 ? emblaApi.selectedScrollSnap() : emblaApi.previousScrollSnap();
    if (pointerDown2 && indexA === indexB) {
      const reverseSign = Math.sign(distanceFromPointerDown) * -1;
      indexA = indexB;
      indexB = index.clone().set(indexB).add(reverseSign).get();
    }
    const currentPosition = indexB * snapFraction;
    const diffPosition = (indexA - indexB) * snapFraction;
    progress = currentPosition + diffPosition * opacity;
  }
  function getFadeIndex() {
    const {
      dragHandler,
      index,
      scrollBody
    } = emblaApi.internalEngine();
    const selectedSnap = emblaApi.selectedScrollSnap();
    if (!dragHandler.pointerDown()) return selectedSnap;
    const directionSign = Math.sign(scrollBody.velocity());
    const distanceSign = Math.sign(distanceFromPointerDown);
    const nextSnap = index.clone().set(selectedSnap).add(directionSign * -1).get();
    if (!directionSign || !distanceSign) return null;
    return distanceSign === directionSign ? nextSnap : selectedSnap;
  }
  function fade(emblaApi2) {
    const {
      dragHandler,
      scrollBody
    } = emblaApi2.internalEngine();
    const fixedDeltaTimeSeconds = timeStep / 1e3;
    const pointerDown2 = dragHandler.pointerDown();
    const velocity = scrollBody.velocity() * fixedDeltaTimeSeconds;
    const duration2 = scrollBody.duration();
    const fadeIndex = getFadeIndex();
    const noFadeIndex = !isNumber2(fadeIndex);
    if (pointerDown2) {
      if (!velocity) return;
      distanceFromPointerDown += velocity;
      fadeVelocity = Math.abs(velocity / fadeToNextDistance);
      lockExcessiveScroll(fadeIndex);
    }
    if (!pointerDown2) {
      if (!duration2 || noFadeIndex) return;
      fadeVelocity += (fullOpacity - opacities[fadeIndex]) / duration2;
      fadeVelocity *= fadeFriction;
    }
    if (noFadeIndex) return;
    setOpacities(fadeIndex, fadeVelocity);
  }
  function settled() {
    const {
      target,
      location
    } = emblaApi.internalEngine();
    const diffToTarget = target.get() - location.get();
    const notReachedTarget = Math.abs(diffToTarget) >= 1;
    const fadeIndex = getFadeIndex();
    const noFadeIndex = !isNumber2(fadeIndex);
    fade(emblaApi);
    if (noFadeIndex || notReachedTarget) return false;
    return opacities[fadeIndex] > 0.999;
  }
  function scrollProgress() {
    return progress;
  }
  const self = {
    name: "fade",
    options: userOptions,
    init,
    destroy
  };
  return self;
}
Fade2.globalOptions = void 0;

// node_modules/@fluentui/react-carousel/lib/components/useEmblaCarousel.js
var sliderClassname = `.${carouselSliderClassNames.root}`;
var DEFAULT_EMBLA_OPTIONS = {
  containScroll: "trimSnaps",
  inViewThreshold: 0.99,
  watchDrag: false,
  skipSnaps: true,
  container: sliderClassname,
  slides: `.${carouselCardClassNames.root}`
};
var EMBLA_VISIBILITY_EVENT = "embla:visibilitychange";
function setTabsterDefault(element, isDefault) {
  const tabsterAttr = element.getAttribute("data-tabster");
  if (tabsterAttr) {
    const tabsterAttributes = JSON.parse(tabsterAttr);
    if (tabsterAttributes.focusable) {
      tabsterAttributes.focusable.isDefault = isDefault;
      element.setAttribute("data-tabster", JSON.stringify(tabsterAttributes));
    }
  }
}
function useEmblaCarousel(options) {
  const { align, direction, loop, slidesToScroll, watchDrag, containScroll, motion } = options;
  const [activeIndex, setActiveIndex] = useControllableState({
    defaultState: options.defaultActiveIndex,
    state: options.activeIndex,
    initialState: 0
  });
  const emblaOptions = React581.useRef({
    align,
    direction,
    loop,
    slidesToScroll,
    startIndex: activeIndex,
    watchDrag,
    containScroll
  });
  const emblaApi = React581.useRef(null);
  const autoplayRef = React581.useRef(false);
  const resetAutoplay = React581.useCallback(() => {
    var _emblaApi_current;
    (_emblaApi_current = emblaApi.current) === null || _emblaApi_current === void 0 ? void 0 : _emblaApi_current.plugins().autoplay.reset();
  }, []);
  const enableAutoplay = React581.useCallback((autoplay) => {
    autoplayRef.current = autoplay;
    if (autoplay) {
      var _emblaApi_current;
      (_emblaApi_current = emblaApi.current) === null || _emblaApi_current === void 0 ? void 0 : _emblaApi_current.plugins().autoplay.play();
      resetAutoplay();
    } else {
      var _emblaApi_current1;
      (_emblaApi_current1 = emblaApi.current) === null || _emblaApi_current1 === void 0 ? void 0 : _emblaApi_current1.plugins().autoplay.stop();
    }
  }, [
    resetAutoplay
  ]);
  const getPlugins = React581.useCallback(() => {
    const plugins = [
      Autoplay({
        playOnInit: autoplayRef.current,
        stopOnInteraction: !autoplayRef.current,
        stopOnMouseEnter: true,
        stopOnFocusIn: true,
        rootNode: (emblaRoot) => {
          var _emblaRoot_querySelector;
          return (_emblaRoot_querySelector = emblaRoot.querySelector(sliderClassname)) !== null && _emblaRoot_querySelector !== void 0 ? _emblaRoot_querySelector : emblaRoot;
        }
      })
    ];
    if (motion === "fade") {
      plugins.push(Fade2());
    }
    return plugins;
  }, [
    motion
  ]);
  const listeners = React581.useRef(/* @__PURE__ */ new Set());
  const subscribeForValues = React581.useCallback((listener) => {
    listeners.current.add(listener);
    return () => {
      listeners.current.delete(listener);
    };
  }, []);
  const containerRef = React581.useMemo(() => {
    let currentElement = null;
    const handleIndexChange = () => {
      var _emblaApi_current, _emblaApi_current1, _emblaApi_current2;
      var _emblaApi_current_selectedScrollSnap;
      const newIndex = (_emblaApi_current_selectedScrollSnap = (_emblaApi_current = emblaApi.current) === null || _emblaApi_current === void 0 ? void 0 : _emblaApi_current.selectedScrollSnap()) !== null && _emblaApi_current_selectedScrollSnap !== void 0 ? _emblaApi_current_selectedScrollSnap : 0;
      const slides = (_emblaApi_current1 = emblaApi.current) === null || _emblaApi_current1 === void 0 ? void 0 : _emblaApi_current1.slideNodes();
      var _emblaApi_current_internalEngine_slideRegistry_newIndex_;
      const actualIndex = (_emblaApi_current_internalEngine_slideRegistry_newIndex_ = (_emblaApi_current2 = emblaApi.current) === null || _emblaApi_current2 === void 0 ? void 0 : _emblaApi_current2.internalEngine().slideRegistry[newIndex][0]) !== null && _emblaApi_current_internalEngine_slideRegistry_newIndex_ !== void 0 ? _emblaApi_current_internalEngine_slideRegistry_newIndex_ : 0;
      slides === null || slides === void 0 ? void 0 : slides.forEach((slide, slideIndex) => {
        setTabsterDefault(slide, slideIndex === actualIndex);
      });
      setActiveIndex(newIndex);
    };
    const handleReinit = () => {
      var _emblaApi_current, _emblaApi_current1, _emblaApi_current2;
      var _emblaApi_current_slideNodes;
      const nodes = (_emblaApi_current_slideNodes = (_emblaApi_current = emblaApi.current) === null || _emblaApi_current === void 0 ? void 0 : _emblaApi_current.slideNodes()) !== null && _emblaApi_current_slideNodes !== void 0 ? _emblaApi_current_slideNodes : [];
      var _emblaApi_current_internalEngine_slideRegistry;
      const groupIndexList = (_emblaApi_current_internalEngine_slideRegistry = (_emblaApi_current1 = emblaApi.current) === null || _emblaApi_current1 === void 0 ? void 0 : _emblaApi_current1.internalEngine().slideRegistry) !== null && _emblaApi_current_internalEngine_slideRegistry !== void 0 ? _emblaApi_current_internalEngine_slideRegistry : [];
      const navItemsCount = groupIndexList.length > 0 ? groupIndexList.length : nodes.length;
      var _emblaApi_current_selectedScrollSnap;
      const data = {
        navItemsCount,
        activeIndex: (_emblaApi_current_selectedScrollSnap = (_emblaApi_current2 = emblaApi.current) === null || _emblaApi_current2 === void 0 ? void 0 : _emblaApi_current2.selectedScrollSnap()) !== null && _emblaApi_current_selectedScrollSnap !== void 0 ? _emblaApi_current_selectedScrollSnap : 0,
        groupIndexList,
        slideNodes: nodes
      };
      for (const listener of listeners.current) {
        listener(data);
      }
    };
    const handleVisibilityChange = () => {
      var _emblaApi_current, _emblaApi_current1;
      const cardElements = (_emblaApi_current = emblaApi.current) === null || _emblaApi_current === void 0 ? void 0 : _emblaApi_current.slideNodes();
      var _emblaApi_current_slidesInView;
      const visibleIndexes = (_emblaApi_current_slidesInView = (_emblaApi_current1 = emblaApi.current) === null || _emblaApi_current1 === void 0 ? void 0 : _emblaApi_current1.slidesInView()) !== null && _emblaApi_current_slidesInView !== void 0 ? _emblaApi_current_slidesInView : [];
      cardElements === null || cardElements === void 0 ? void 0 : cardElements.forEach((cardElement, index) => {
        cardElement.dispatchEvent(new CustomEvent(EMBLA_VISIBILITY_EVENT, {
          bubbles: false,
          detail: {
            isVisible: visibleIndexes.includes(index)
          }
        }));
      });
    };
    const plugins = getPlugins();
    return {
      set current(newElement) {
        if (currentElement) {
          var _emblaApi_current, _emblaApi_current1, _emblaApi_current2, _emblaApi_current3;
          (_emblaApi_current = emblaApi.current) === null || _emblaApi_current === void 0 ? void 0 : _emblaApi_current.off("slidesInView", handleVisibilityChange);
          (_emblaApi_current1 = emblaApi.current) === null || _emblaApi_current1 === void 0 ? void 0 : _emblaApi_current1.off("select", handleIndexChange);
          (_emblaApi_current2 = emblaApi.current) === null || _emblaApi_current2 === void 0 ? void 0 : _emblaApi_current2.off("reInit", handleReinit);
          (_emblaApi_current3 = emblaApi.current) === null || _emblaApi_current3 === void 0 ? void 0 : _emblaApi_current3.destroy();
        }
        if (newElement) {
          var _emblaApi_current4, _emblaApi_current5, _emblaApi_current6;
          currentElement = newElement;
          emblaApi.current = EmblaCarousel(newElement, {
            ...DEFAULT_EMBLA_OPTIONS,
            ...emblaOptions.current
          }, plugins);
          (_emblaApi_current4 = emblaApi.current) === null || _emblaApi_current4 === void 0 ? void 0 : _emblaApi_current4.on("reInit", handleReinit);
          (_emblaApi_current5 = emblaApi.current) === null || _emblaApi_current5 === void 0 ? void 0 : _emblaApi_current5.on("slidesInView", handleVisibilityChange);
          (_emblaApi_current6 = emblaApi.current) === null || _emblaApi_current6 === void 0 ? void 0 : _emblaApi_current6.on("select", handleIndexChange);
        }
      }
    };
  }, [
    getPlugins,
    setActiveIndex
  ]);
  const carouselApi = React581.useMemo(() => ({
    scrollToElement: (element, jump) => {
      var _emblaApi_current, _emblaApi_current1, _emblaApi_current2;
      const cardElements = (_emblaApi_current = emblaApi.current) === null || _emblaApi_current === void 0 ? void 0 : _emblaApi_current.slideNodes();
      var _emblaApi_current_internalEngine_slideRegistry;
      const groupIndexList = (_emblaApi_current_internalEngine_slideRegistry = (_emblaApi_current1 = emblaApi.current) === null || _emblaApi_current1 === void 0 ? void 0 : _emblaApi_current1.internalEngine().slideRegistry) !== null && _emblaApi_current_internalEngine_slideRegistry !== void 0 ? _emblaApi_current_internalEngine_slideRegistry : [];
      var _cardElements_indexOf;
      const cardIndex = (_cardElements_indexOf = cardElements === null || cardElements === void 0 ? void 0 : cardElements.indexOf(element)) !== null && _cardElements_indexOf !== void 0 ? _cardElements_indexOf : 0;
      const groupIndex = groupIndexList.findIndex((group) => {
        return group.includes(cardIndex);
      });
      const indexFocus = groupIndex !== null && groupIndex !== void 0 ? groupIndex : cardIndex;
      (_emblaApi_current2 = emblaApi.current) === null || _emblaApi_current2 === void 0 ? void 0 : _emblaApi_current2.scrollTo(indexFocus, jump);
      return indexFocus;
    },
    scrollToIndex: (index, jump) => {
      var _emblaApi_current;
      (_emblaApi_current = emblaApi.current) === null || _emblaApi_current === void 0 ? void 0 : _emblaApi_current.scrollTo(index, jump);
    },
    scrollInDirection: (dir) => {
      var _emblaApi_current;
      if (dir === "prev") {
        var _emblaApi_current1;
        (_emblaApi_current1 = emblaApi.current) === null || _emblaApi_current1 === void 0 ? void 0 : _emblaApi_current1.scrollPrev();
      } else {
        var _emblaApi_current2;
        (_emblaApi_current2 = emblaApi.current) === null || _emblaApi_current2 === void 0 ? void 0 : _emblaApi_current2.scrollNext();
      }
      var _emblaApi_current_selectedScrollSnap;
      return (_emblaApi_current_selectedScrollSnap = (_emblaApi_current = emblaApi.current) === null || _emblaApi_current === void 0 ? void 0 : _emblaApi_current.selectedScrollSnap()) !== null && _emblaApi_current_selectedScrollSnap !== void 0 ? _emblaApi_current_selectedScrollSnap : 0;
    }
  }), []);
  React581.useEffect(() => {
    var _emblaApi_current;
    var _emblaApi_current_selectedScrollSnap;
    const currentActiveIndex = (_emblaApi_current_selectedScrollSnap = (_emblaApi_current = emblaApi.current) === null || _emblaApi_current === void 0 ? void 0 : _emblaApi_current.selectedScrollSnap()) !== null && _emblaApi_current_selectedScrollSnap !== void 0 ? _emblaApi_current_selectedScrollSnap : 0;
    if (activeIndex !== currentActiveIndex) {
      var _emblaApi_current1;
      (_emblaApi_current1 = emblaApi.current) === null || _emblaApi_current1 === void 0 ? void 0 : _emblaApi_current1.scrollTo(activeIndex);
    }
  }, [
    activeIndex
  ]);
  React581.useEffect(() => {
    var _emblaApi_current;
    const plugins = getPlugins();
    emblaOptions.current = {
      align,
      direction,
      loop,
      slidesToScroll,
      watchDrag,
      containScroll
    };
    (_emblaApi_current = emblaApi.current) === null || _emblaApi_current === void 0 ? void 0 : _emblaApi_current.reInit({
      ...DEFAULT_EMBLA_OPTIONS,
      ...emblaOptions.current
    }, plugins);
  }, [
    align,
    direction,
    loop,
    slidesToScroll,
    watchDrag,
    containScroll,
    getPlugins
  ]);
  return {
    activeIndex,
    carouselApi,
    containerRef,
    subscribeForValues,
    enableAutoplay,
    resetAutoplay
  };
}

// node_modules/@fluentui/react-carousel/lib/components/Carousel/useCarousel.js
function useCarousel_unstable2(props, ref) {
  "use no memo";
  const { align = "center", circular = false, onActiveIndexChange, groupSize = "auto", draggable = false, whitespace = false, announcement, motion = "slide" } = props;
  const { dir } = useFluent();
  const { activeIndex, carouselApi, containerRef, subscribeForValues, enableAutoplay, resetAutoplay } = useEmblaCarousel({
    align,
    direction: dir,
    loop: circular,
    slidesToScroll: groupSize,
    defaultActiveIndex: props.defaultActiveIndex,
    activeIndex: props.activeIndex,
    watchDrag: draggable,
    containScroll: whitespace ? false : "keepSnaps",
    motion
  });
  const selectPageByElement = useEventCallback((event, element, jump) => {
    const foundIndex = carouselApi.scrollToElement(element, jump);
    onActiveIndexChange === null || onActiveIndexChange === void 0 ? void 0 : onActiveIndexChange(event, {
      event,
      type: "focus",
      index: foundIndex
    });
    return foundIndex;
  });
  const selectPageByIndex = useEventCallback((event, index, jump) => {
    carouselApi.scrollToIndex(index, jump);
    onActiveIndexChange === null || onActiveIndexChange === void 0 ? void 0 : onActiveIndexChange(event, {
      event,
      type: "click",
      index
    });
  });
  const selectPageByDirection = useEventCallback((event, direction) => {
    const nextPageIndex = carouselApi.scrollInDirection(direction);
    onActiveIndexChange === null || onActiveIndexChange === void 0 ? void 0 : onActiveIndexChange(event, {
      event,
      type: "click",
      index: nextPageIndex
    });
    return nextPageIndex;
  });
  const mergedRefs = useMergedRefs(ref, containerRef);
  const announcementTextRef = React582.useRef("");
  const totalNavLength = React582.useRef(0);
  const navGroupRef = React582.useRef([]);
  const { announce } = useAnnounce();
  const updateAnnouncement = useEventCallback(() => {
    if (totalNavLength.current <= 0 || !announcement) {
      return;
    }
    const announcementText = announcement(activeIndex, totalNavLength.current, navGroupRef.current);
    if (announcementText !== announcementTextRef.current) {
      announcementTextRef.current = announcementText;
      announce(announcementText, {
        polite: true
      });
    }
  });
  useIsomorphicLayoutEffect(() => {
    return subscribeForValues((data) => {
      if (totalNavLength.current <= 0 && data.navItemsCount > 0 && announcement) {
        const announcementText = announcement(data.activeIndex, data.navItemsCount, data.groupIndexList);
        announcementTextRef.current = announcementText;
      }
      totalNavLength.current = data.navItemsCount;
      navGroupRef.current = data.groupIndexList;
      updateAnnouncement();
    });
  }, [
    subscribeForValues,
    updateAnnouncement,
    announcement
  ]);
  useIsomorphicLayoutEffect(() => {
    updateAnnouncement();
  }, [
    activeIndex,
    updateAnnouncement
  ]);
  return {
    components: {
      root: "div"
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      ref: mergedRefs,
      role: "region",
      ...props
    }), {
      elementType: "div"
    }),
    activeIndex,
    circular,
    containerRef: mergedRefs,
    selectPageByElement,
    selectPageByDirection,
    selectPageByIndex,
    subscribeForValues,
    enableAutoplay,
    resetAutoplay
  };
}

// node_modules/@fluentui/react-carousel/lib/components/Carousel/renderCarousel.js
var renderCarousel_unstable = (state, contextValues) => {
  assertSlots(state);
  return jsx(CarouselProvider2, {
    value: contextValues.carousel,
    children: jsx(state.root, {})
  });
};

// node_modules/@fluentui/react-carousel/lib/components/Carousel/useCarouselStyles.styles.js
var carouselClassNames = {
  root: "fui-Carousel"
};
var useStyles86 = __styles2({
  root: {
    z8tnut: "fr4fn7s",
    B68tc82: 0,
    Bmxbyg5: 0,
    Bpg54ce: "f1a3p1vp",
    Eiaeu8: "f1115ve7",
    qhf8xq: "f10pi13n"
  }
}, {
  d: [".fr4fn7s{padding-top:var(--strokeWidthThick);}", [".f1a3p1vp{overflow:hidden;}", {
    p: -1
  }], ".f1115ve7{overflow-anchor:none;}", ".f10pi13n{position:relative;}"]
});
var useCarouselStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles86();
  state.root.className = mergeClasses(carouselClassNames.root, styles.root, state.root.className);
  return state;
};

// node_modules/@fluentui/react-carousel/lib/components/Carousel/useCarouselContextValues.js
var React583 = __toESM(require_react());
function useCarouselContextValues_unstable(state) {
  const { activeIndex, selectPageByElement, selectPageByDirection, selectPageByIndex, subscribeForValues, enableAutoplay, resetAutoplay, circular, containerRef } = state;
  const carousel = React583.useMemo(() => ({
    activeIndex,
    selectPageByElement,
    selectPageByDirection,
    selectPageByIndex,
    subscribeForValues,
    enableAutoplay,
    resetAutoplay,
    circular,
    containerRef
  }), [
    activeIndex,
    selectPageByElement,
    selectPageByDirection,
    selectPageByIndex,
    subscribeForValues,
    enableAutoplay,
    resetAutoplay,
    circular,
    containerRef
  ]);
  return {
    carousel
  };
}

// node_modules/@fluentui/react-carousel/lib/components/Carousel/Carousel.js
var Carousel = React584.forwardRef((props, ref) => {
  const state = useCarousel_unstable2(props, ref);
  useCarouselStyles_unstable(state);
  const contextValues = useCarouselContextValues_unstable(state);
  return renderCarousel_unstable(state, contextValues);
});
Carousel.displayName = "Carousel";

// node_modules/@fluentui/react-carousel/lib/components/CarouselCard/CarouselCard.js
var React587 = __toESM(require_react());

// node_modules/@fluentui/react-carousel/lib/components/CarouselCard/useCarouselCard.js
var React586 = __toESM(require_react());

// node_modules/@fluentui/react-carousel/lib/components/CarouselSlider/CarouselSliderContext.js
var React585 = __toESM(require_react());
var carouselSliderContext = React585.createContext(void 0);
var carouselSliderContextDefaultValue = {
  cardFocus: false
};
var useCarouselSliderContext = () => {
  var _React_useContext;
  return (_React_useContext = React585.useContext(carouselSliderContext)) !== null && _React_useContext !== void 0 ? _React_useContext : carouselSliderContextDefaultValue;
};
var CarouselSliderContextProvider = carouselSliderContext.Provider;
function useCarouselSliderContextValues_unstable(state) {
  const { cardFocus } = state;
  const carouselSlider = React585.useMemo(() => ({
    cardFocus
  }), [
    cardFocus
  ]);
  return {
    carouselSlider
  };
}

// node_modules/@fluentui/react-carousel/lib/components/CarouselCard/useCarouselCard.js
var useCarouselCard_unstable = (props, ref) => {
  const { autoSize } = props;
  const elementRef = React586.useRef(null);
  const isMouseEvent3 = React586.useRef(false);
  const selectPageByElement = useCarouselContext_unstable2((ctx) => ctx.selectPageByElement);
  const containerRef = useCarouselContext_unstable2((ctx) => ctx.containerRef);
  const { cardFocus } = useCarouselSliderContext();
  const focusAttr = useFocusableGroup({
    tabBehavior: "limited"
  });
  const focusAttrProps = cardFocus ? {
    ...focusAttr,
    tabIndex: 0
  } : {};
  const id = useId(carouselCardClassNames.root, props.id);
  React586.useEffect(() => {
    const element = elementRef.current;
    if (element) {
      const listener = (_e) => {
        const event = _e;
        if (!cardFocus) {
          const hidden = !event.detail.isVisible;
          element.ariaHidden = hidden.toString();
          element.inert = hidden;
        }
      };
      element.addEventListener(EMBLA_VISIBILITY_EVENT, listener);
      return () => {
        element.removeEventListener(EMBLA_VISIBILITY_EVENT, listener);
      };
    }
  }, [
    cardFocus
  ]);
  const handleFocusCapture = React586.useCallback((e) => {
    if (!e.defaultPrevented && isHTMLElement(e.currentTarget) && !isMouseEvent3.current) {
      var _containerRef_current;
      containerRef === null || containerRef === void 0 ? void 0 : (_containerRef_current = containerRef.current) === null || _containerRef_current === void 0 ? void 0 : _containerRef_current.scrollTo(0, 0);
      selectPageByElement(e, e.currentTarget, false);
    }
  }, [
    selectPageByElement,
    containerRef
  ]);
  const handleMouseDown = (e) => {
    if (!e.defaultPrevented) {
      isMouseEvent3.current = true;
    }
  };
  const handleMouseUp = (e) => {
    if (!e.defaultPrevented) {
      isMouseEvent3.current = false;
    }
  };
  const onFocusCapture = mergeCallbacks(props.onFocusCapture, handleFocusCapture);
  const onMouseUp = mergeCallbacks(props.onMouseUp, handleMouseUp);
  const onMouseDown = mergeCallbacks(props.onMouseDown, handleMouseDown);
  const state = {
    autoSize,
    components: {
      root: "div"
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      ref: useMergedRefs(elementRef, ref),
      role: "tabpanel",
      tabIndex: cardFocus ? 0 : void 0,
      ...props,
      id,
      onFocusCapture,
      onMouseDown,
      onMouseUp,
      ...focusAttrProps
    }), {
      elementType: "div"
    })
  };
  return state;
};

// node_modules/@fluentui/react-carousel/lib/components/CarouselCard/renderCarouselCard.js
var renderCarouselCard_unstable = (state) => {
  assertSlots(state);
  return jsx(state.root, {});
};

// node_modules/@fluentui/react-carousel/lib/components/CarouselCard/CarouselCard.js
var CarouselCard = React587.forwardRef((props, ref) => {
  const state = useCarouselCard_unstable(props, ref);
  useCarouselCardStyles_unstable(state);
  return renderCarouselCard_unstable(state);
});
CarouselCard.displayName = "CarouselCard";

// node_modules/@fluentui/react-carousel/lib/components/CarouselAutoplayButton/CarouselAutoplayButton.js
var React589 = __toESM(require_react());

// node_modules/@fluentui/react-carousel/lib/components/CarouselAutoplayButton/useCarouselAutoplayButton.js
var React588 = __toESM(require_react());
var useCarouselAutoplayButton_unstable = (props, ref) => {
  const { onCheckedChange, checked, defaultChecked } = props;
  const [autoplay, setAutoplay] = useControllableState({
    state: checked,
    defaultState: defaultChecked,
    initialState: false
  });
  const enableAutoplay = useCarouselContext_unstable2((ctx) => ctx.enableAutoplay);
  React588.useEffect(() => {
    return () => {
      enableAutoplay(false);
    };
  }, [
    enableAutoplay
  ]);
  useIsomorphicLayoutEffect(() => {
    enableAutoplay(autoplay);
  }, [
    autoplay,
    enableAutoplay
  ]);
  const handleClick = (event) => {
    if (event.isDefaultPrevented()) {
      return;
    }
    const newValue = !autoplay;
    setAutoplay(newValue);
    onCheckedChange === null || onCheckedChange === void 0 ? void 0 : onCheckedChange(event, {
      event,
      type: "click",
      checked: newValue
    });
  };
  return {
    // We lean on react-button class to handle styling and icon enhancements
    ...useToggleButton_unstable({
      icon: slot_exports.optional(props.icon, {
        defaultProps: {
          children: autoplay ? React588.createElement(PauseCircleRegular, null) : React588.createElement(PlayCircleRegular, null)
        },
        renderByDefault: true,
        elementType: "span"
      }),
      ...props,
      checked: autoplay,
      onClick: useEventCallback(mergeCallbacks(handleClick, props.onClick))
    }, ref)
  };
};

// node_modules/@fluentui/react-carousel/lib/components/CarouselAutoplayButton/renderCarouselAutoplayButton.js
var renderCarouselAutoplayButton_unstable = (state) => {
  assertSlots(state);
  return renderButton_unstable(state);
};

// node_modules/@fluentui/react-carousel/lib/components/CarouselAutoplayButton/useCarouselAutoplayButtonStyles.styles.js
var carouselAutoplayButtonClassNames = {
  root: "fui-CarouselAutoplayButton",
  icon: "fui-CarouselAutoplayButton__icon"
};
var useStyles87 = __styles2({
  root: {
    Bkecrkj: "fc5wo7j",
    B6of3ja: "fgr6219",
    jrapky: "f10jk5vf",
    g2u3we: "fghlq4f",
    h3c5rm: ["f1gn591s", "fjscplz"],
    B9xav0g: "fb073pr",
    zhjwy3: ["fjscplz", "f1gn591s"],
    sj55zd: "fkfq4zb",
    De3pzq: "fkfdr9r",
    eoavqd: "f8491dx"
  }
}, {
  d: [".fc5wo7j{pointer-events:all;}", ".fgr6219{margin-top:auto;}", ".f10jk5vf{margin-bottom:auto;}", ".fghlq4f{border-top-color:var(--colorTransparentStroke);}", ".f1gn591s{border-right-color:var(--colorTransparentStroke);}", ".fjscplz{border-left-color:var(--colorTransparentStroke);}", ".fb073pr{border-bottom-color:var(--colorTransparentStroke);}", ".fkfq4zb{color:var(--colorNeutralForeground2);}", ".fkfdr9r{background-color:var(--colorNeutralBackgroundAlpha);}"],
  h: [".f8491dx:hover{cursor:pointer;}"]
});
var useCarouselAutoplayButtonStyles_unstable = (state) => {
  "use no memo";
  const styles = useStyles87();
  useToggleButtonStyles_unstable(state);
  state.root.className = mergeClasses(carouselAutoplayButtonClassNames.root, styles.root, state.root.className);
  if (state.icon) {
    state.icon.className = mergeClasses(carouselAutoplayButtonClassNames.icon, state.icon.className);
  }
  return state;
};

// node_modules/@fluentui/react-carousel/lib/components/CarouselAutoplayButton/CarouselAutoplayButton.js
var CarouselAutoplayButton = React589.forwardRef((props, ref) => {
  const state = useCarouselAutoplayButton_unstable(props, ref);
  useCarouselAutoplayButtonStyles_unstable(state);
  return renderCarouselAutoplayButton_unstable(state);
});
CarouselAutoplayButton.displayName = "CarouselAutoplayButton";

// node_modules/@fluentui/react-carousel/lib/components/CarouselAutoplayButton/CarouselAutoplayButton.types.js
var React590 = __toESM(require_react());

// node_modules/@fluentui/react-carousel/lib/components/CarouselNavImageButton/CarouselNavImageButton.js
var React592 = __toESM(require_react());

// node_modules/@fluentui/react-carousel/lib/components/CarouselNavImageButton/useCarouselNavImageButton.js
var React591 = __toESM(require_react());
var useCarouselNavImageButton_unstable = (props, ref) => {
  const { onClick, as = "button" } = props;
  const index = useCarouselNavIndexContext();
  const selectPageByIndex = useCarouselContext_unstable2((ctx) => ctx.selectPageByIndex);
  const selected = useCarouselContext_unstable2((ctx) => ctx.activeIndex === index);
  const subscribeForValues = useCarouselContext_unstable2((ctx) => ctx.subscribeForValues);
  const handleClick = useEventCallback((event) => {
    onClick === null || onClick === void 0 ? void 0 : onClick(event);
    if (!event.defaultPrevented && isHTMLElement(event.target)) {
      selectPageByIndex(event, index);
    }
  });
  const defaultTabProps = useTabsterAttributes({
    focusable: {
      isDefault: selected
    }
  });
  const buttonRef = React591.useRef();
  const _carouselButton = slot_exports.always(getIntrinsicElementProps(as, useARIAButtonProps(props.as, props)), {
    elementType: "button",
    defaultProps: {
      ref: useMergedRefs(ref, buttonRef),
      role: "tab",
      type: "button",
      "aria-selected": selected,
      ...defaultTabProps
    }
  });
  useIsomorphicLayoutEffect(() => {
    return subscribeForValues((data) => {
      const controlList = data.groupIndexList[index];
      const _controlledSlideIds = controlList.map((slideIndex) => {
        return data.slideNodes[slideIndex].id;
      }).join(" ");
      if (buttonRef.current) {
        buttonRef.current.setAttribute("aria-controls", _controlledSlideIds);
      }
    });
  }, [
    subscribeForValues,
    index
  ]);
  _carouselButton.onClick = handleClick;
  const image = slot_exports.always(getIntrinsicElementProps("img", {
    "aria-hidden": true,
    alt: "",
    role: "presentation",
    ...props.image
  }), {
    elementType: "img"
  });
  return {
    components: {
      root: "button",
      image: "img"
    },
    root: _carouselButton,
    image,
    selected
  };
};

// node_modules/@fluentui/react-carousel/lib/components/CarouselNavImageButton/renderCarouselNavImageButton.js
var renderCarouselNavImageButton_unstable = (state) => {
  assertSlots(state);
  return jsx(state.root, {
    children: jsx(state.image, {})
  });
};

// node_modules/@fluentui/react-carousel/lib/components/CarouselNavImageButton/useCarouselNavImageButtonStyles.styles.js
var carouselNavImageButtonClassNames = {
  root: "fui-CarouselNavImageButton",
  image: "fui-CarouselNavImageButton__image"
};
var useStyles88 = __styles2({
  root: {
    B7ck84d: "f1e4lqlz",
    Byoj8tv: 0,
    uwmqm3: 0,
    z189sj: 0,
    z8tnut: 0,
    B0ocmuz: "f1c5fvqg",
    jrapky: 0,
    Frg6f3: 0,
    t21cq0: 0,
    B6of3ja: 0,
    B74szlk: "f186qr3g",
    g2u3we: "fghlq4f",
    h3c5rm: ["f1gn591s", "fjscplz"],
    B9xav0g: "fb073pr",
    zhjwy3: ["fjscplz", "f1gn591s"],
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "fq9zq91",
    a9b677: "feqmc2u",
    Bqenvij: "fbhnoac",
    B68tc82: 0,
    Bmxbyg5: 0,
    Bpg54ce: "f1a3p1vp",
    eoavqd: "f8491dx"
  },
  image: {
    a9b677: "feqmc2u",
    Bqenvij: "fbhnoac",
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "fq9zq91"
  },
  selected: {
    a9b677: "f124akge",
    Bqenvij: "ff2sm71"
  }
}, {
  d: [".f1e4lqlz{box-sizing:content-box;}", [".f1c5fvqg{padding:0px;}", {
    p: -1
  }], [".f186qr3g{margin:0 var(--spacingHorizontalXS);}", {
    p: -1
  }], ".fghlq4f{border-top-color:var(--colorTransparentStroke);}", ".f1gn591s{border-right-color:var(--colorTransparentStroke);}", ".fjscplz{border-left-color:var(--colorTransparentStroke);}", ".fb073pr{border-bottom-color:var(--colorTransparentStroke);}", [".fq9zq91{border-radius:var(--borderRadiusSmall);}", {
    p: -1
  }], ".feqmc2u{width:40px;}", ".fbhnoac{height:40px;}", [".f1a3p1vp{overflow:hidden;}", {
    p: -1
  }], [".fq9zq91{border-radius:var(--borderRadiusSmall);}", {
    p: -1
  }], ".f124akge{width:48px;}", ".ff2sm71{height:48px;}"],
  h: [".f8491dx:hover{cursor:pointer;}"]
});
var useCarouselNavImageButtonStyles_unstable = (state) => {
  "use no memo";
  const {
    selected
  } = state;
  const styles = useStyles88();
  state.root.className = mergeClasses(carouselNavImageButtonClassNames.root, styles.root, selected && styles.selected, state.root.className);
  if (state.image) {
    var _state_image;
    state.image.className = mergeClasses(carouselNavImageButtonClassNames.image, styles.image, selected && styles.selected, (_state_image = state.image) === null || _state_image === void 0 ? void 0 : _state_image.className);
  }
  return state;
};

// node_modules/@fluentui/react-carousel/lib/components/CarouselNavImageButton/CarouselNavImageButton.js
var CarouselNavImageButton = React592.forwardRef((props, ref) => {
  const state = useCarouselNavImageButton_unstable(props, ref);
  useCarouselNavImageButtonStyles_unstable(state);
  return renderCarouselNavImageButton_unstable(state);
});
CarouselNavImageButton.displayName = "CarouselNavImageButton";

// node_modules/@fluentui/react-carousel/lib/components/CarouselSlider/CarouselSlider.js
var React594 = __toESM(require_react());

// node_modules/@fluentui/react-carousel/lib/components/CarouselSlider/useCarouselSlider.js
var React593 = __toESM(require_react());
var useCarouselSlider_unstable = (props, ref) => {
  const { cardFocus = false } = props;
  const circular = useCarouselContext_unstable2((ctx) => ctx.circular);
  const focusableGroupAttr = useArrowNavigationGroup({
    circular,
    axis: "horizontal",
    memorizeCurrent: false,
    // eslint-disable-next-line @typescript-eslint/naming-convention
    unstable_hasDefault: true
  });
  const focusProps = cardFocus ? focusableGroupAttr : {};
  return {
    cardFocus,
    components: {
      root: "div"
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      ref,
      role: "group",
      ...props,
      ...focusProps
    }), {
      elementType: "div"
    })
  };
};

// node_modules/@fluentui/react-carousel/lib/components/CarouselSlider/renderCarouselSlider.js
var renderCarouselSlider_unstable = (state, contextValues) => {
  assertSlots(state);
  return jsx(CarouselSliderContextProvider, {
    value: contextValues.carouselSlider,
    children: jsx(state.root, {})
  });
};

// node_modules/@fluentui/react-carousel/lib/components/CarouselSlider/CarouselSlider.js
var CarouselSlider = React594.forwardRef((props, ref) => {
  const state = useCarouselSlider_unstable(props, ref);
  useCarouselSliderStyles_unstable(state);
  const context = useCarouselSliderContextValues_unstable(state);
  return renderCarouselSlider_unstable(state, context);
});
CarouselSlider.displayName = "CarouselSlider";

// node_modules/@fluentui/react-carousel/lib/components/CarouselNavContainer/CarouselNavContainer.js
var React596 = __toESM(require_react());

// node_modules/@fluentui/react-carousel/lib/components/CarouselNavContainer/useCarouselNavContainer.js
var React595 = __toESM(require_react());
var useCarouselNavContainer_unstable = (props, ref) => {
  const { layout } = props;
  const next = slot_exports.optional(props.next, {
    defaultProps: {
      navType: "next"
    },
    elementType: CarouselButton,
    renderByDefault: true
  });
  const prev = slot_exports.optional(props.prev, {
    defaultProps: {
      navType: "prev"
    },
    elementType: CarouselButton,
    renderByDefault: true
  });
  const autoplay = slot_exports.optional(props.autoplay, {
    renderByDefault: false,
    elementType: CarouselAutoplayButton
  });
  return {
    layout,
    components: {
      root: "div",
      next: CarouselButton,
      prev: CarouselButton,
      autoplay: CarouselAutoplayButton
    },
    root: slot_exports.always(getIntrinsicElementProps("div", {
      ref,
      ...props
    }), {
      elementType: "div"
    }),
    next,
    prev,
    autoplay
  };
};

// node_modules/@fluentui/react-carousel/lib/components/CarouselNavContainer/renderCarouselNavContainer.js
var renderCarouselNavContainer_unstable = (state) => {
  assertSlots(state);
  return jsxs(state.root, {
    children: [
      state.autoplay && jsx(state.autoplay, {}),
      state.prev && jsx(state.prev, {}),
      state.root.children,
      state.next && jsx(state.next, {})
    ]
  });
};

// node_modules/@fluentui/react-carousel/lib/components/CarouselNavContainer/useCarouselNavContainerStyles.styles.js
var carouselNavContainerClassNames = {
  root: "fui-CarouselNavContainer",
  next: "fui-CarouselNavContainer__next",
  prev: "fui-CarouselNavContainer__prev",
  autoplay: "fui-CarouselNavContainer__autoplay"
};
var useStyles89 = __styles2({
  root: {
    mc9l5x: "f22iagw",
    Beiy3e4: "f1063pyq",
    Brf1p80: "f4d9j23",
    a9b677: "fly5x3f",
    Bkecrkj: "f1aehjj5"
  },
  next: {},
  prev: {},
  autoplay: {},
  inline: {
    B6of3ja: "f1mevb6"
  },
  overlay: {
    qhf8xq: "f1euv43f",
    B5kzvoi: "f1bu4tuc",
    B7ck84d: "f1ewtqcl"
  },
  overlayWide: {
    B5kzvoi: "f1bu4tuc"
  },
  nextWide: {
    Frg6f3: ["fcgxt0o", "f1ujusj6"]
  },
  prevWide: {
    t21cq0: ["f1ujusj6", "fcgxt0o"]
  },
  nextOverlayWide: {
    t21cq0: ["fkujibs", "f199hnxi"]
  },
  prevOverlayWide: {
    Frg6f3: ["f199hnxi", "fkujibs"]
  },
  autoplayOverlayWide: {
    Frg6f3: ["f199hnxi", "fkujibs"]
  },
  expanded: {
    a9b677: "fly5x3f",
    Bqenvij: "f1l02sjl",
    Bt984gj: "fgs5rwf",
    Brf1p80: "f4d9j23",
    B5kzvoi: "f1yab3r1",
    c7y7m3: "f1ok8cdc",
    yx0ijg: "fcq6x80",
    v4amzz: "f1gy9d85"
  },
  nextOverlayExpanded: {
    qhf8xq: "f1euv43f",
    j35jbq: ["f8b87gs", "fedtrts"],
    Bhzewxz: "f1i1t8d1",
    Bz10aip: "f188r07x"
  },
  prevOverlayExpanded: {
    qhf8xq: "f1euv43f",
    oyh7mz: ["fedtrts", "f8b87gs"],
    Bhzewxz: "f1i1t8d1",
    Bz10aip: "f188r07x"
  },
  autoplayExpanded: {
    qhf8xq: "f1euv43f",
    B5kzvoi: "f49tsn4",
    oyh7mz: ["fedtrts", "f8b87gs"],
    jrapky: "f18zxyen"
  }
}, {
  d: [".f22iagw{display:flex;}", ".f1063pyq{flex-direction:row;}", ".f4d9j23{justify-content:center;}", ".fly5x3f{width:100%;}", ".f1aehjj5{pointer-events:none;}", ".f1mevb6{margin-top:var(--spacingVerticalM);}", ".f1euv43f{position:absolute;}", ".f1bu4tuc{bottom:var(--spacingVerticalM);}", ".f1ewtqcl{box-sizing:border-box;}", ".fcgxt0o{margin-left:auto;}", ".f1ujusj6{margin-right:auto;}", ".fkujibs{margin-right:var(--spacingHorizontalM);}", ".f199hnxi{margin-left:var(--spacingHorizontalM);}", ".f1l02sjl{height:100%;}", ".fgs5rwf{align-items:flex-end;}", ".f1yab3r1{bottom:0;}", ".f1ok8cdc>div{position:relative;}", ".fcq6x80>div{bottom:var(--spacingVerticalL);}", ".f1gy9d85>div{margin-bottom:0;}", ".f8b87gs{right:var(--spacingHorizontalM);}", ".fedtrts{left:var(--spacingHorizontalM);}", ".f1i1t8d1{top:50%;}", ".f188r07x{transform:translateY(-50%);}", ".f49tsn4{bottom:-var(--spacingHorizontalXS);}", ".f18zxyen{margin-bottom:var(--spacingVerticalM);}"]
});
var useCarouselNavContainerStyles_unstable = (state) => {
  "use no memo";
  const {
    layout
  } = state;
  const isOverlay = layout === "overlay" || layout === "overlay-wide" || layout === "overlay-expanded";
  const isWide = layout === "inline-wide" || layout === "overlay-wide";
  const styles = useStyles89();
  state.root.className = mergeClasses(carouselNavContainerClassNames.root, styles.root, isOverlay ? styles.overlay : styles.inline, isOverlay && isWide && styles.overlayWide, layout === "overlay-expanded" && styles.expanded, state.root.className);
  if (state.next) {
    state.next.className = mergeClasses(carouselNavContainerClassNames.next, styles.next, isWide && styles.nextWide, isWide && isOverlay && styles.nextOverlayWide, layout === "overlay-expanded" && styles.nextOverlayExpanded, state.next.className);
  }
  if (state.prev) {
    state.prev.className = mergeClasses(carouselNavContainerClassNames.prev, styles.prev, isWide && styles.prevWide, !state.autoplay && isWide && isOverlay && styles.prevOverlayWide, layout === "overlay-expanded" && styles.prevOverlayExpanded, state.prev.className);
  }
  if (state.autoplay) {
    state.autoplay.className = mergeClasses(carouselNavContainerClassNames.autoplay, styles.autoplay, layout === "overlay-expanded" && styles.autoplayExpanded, isWide && isOverlay && styles.autoplayOverlayWide, state.autoplay.className);
  }
  return state;
};

// node_modules/@fluentui/react-carousel/lib/components/CarouselNavContainer/CarouselNavContainer.js
var CarouselNavContainer = React596.forwardRef((props, ref) => {
  const state = useCarouselNavContainer_unstable(props, ref);
  useCarouselNavContainerStyles_unstable(state);
  return renderCarouselNavContainer_unstable(state);
});
CarouselNavContainer.displayName = "CarouselNavContainer";

// node_modules/@fluentui/react-carousel/lib/components/CarouselContext.types.js
var React597 = __toESM(require_react());
export {
  Accordion,
  AccordionHeader,
  AccordionItem,
  AccordionItemProvider,
  AccordionPanel,
  AccordionProvider,
  AnnounceProvider,
  AriaLiveAnnouncer,
  Avatar,
  AvatarGroup,
  AvatarGroupItem,
  AvatarGroupPopover,
  AvatarGroupProvider,
  Badge,
  Body1,
  Body1Strong,
  Body1Stronger,
  Body2,
  Breadcrumb,
  BreadcrumbButton,
  BreadcrumbDivider,
  BreadcrumbItem,
  BreadcrumbProvider,
  Button,
  Caption1,
  Caption1Strong,
  Caption1Stronger,
  Caption2,
  Caption2Strong,
  Card,
  CardFooter,
  CardHeader,
  CardPreview,
  Carousel,
  CarouselAutoplayButton,
  CarouselButton,
  CarouselCard,
  CarouselNav,
  CarouselNavButton,
  CarouselNavContainer,
  CarouselNavImageButton,
  CarouselProvider2 as CarouselProvider,
  CarouselSlider,
  Checkbox,
  ColorSwatch,
  ColumnIdContextProvider,
  Combobox,
  ComboboxProvider,
  CompoundButton,
  CounterBadge,
  DATA_OVERFLOWING2 as DATA_OVERFLOWING,
  DATA_OVERFLOW_DIVIDER,
  DATA_OVERFLOW_ITEM,
  DATA_OVERFLOW_MENU,
  DataGrid,
  DataGridBody,
  DataGridCell,
  DataGridContextProvider,
  DataGridHeader,
  DataGridHeaderCell,
  DataGridRow,
  DataGridSelectionCell,
  Dialog,
  DialogActions,
  DialogBody,
  DialogContent,
  DialogProvider,
  DialogSurface,
  DialogTitle,
  DialogTrigger,
  Display,
  Divider,
  Drawer,
  DrawerBody,
  DrawerFooter,
  DrawerHeader,
  DrawerHeaderNavigation,
  DrawerHeaderTitle,
  DrawerProvider,
  Dropdown,
  EmptySwatch,
  Field,
  FieldContextProvider,
  FlatTree,
  FlatTreeItem,
  FluentProvider,
  IdPrefixProvider,
  Image,
  ImageSwatch,
  InfoLabel,
  InlineDrawer,
  Input,
  InteractionTag,
  InteractionTagPrimary,
  InteractionTagSecondary,
  Label,
  LargeTitle,
  Link,
  Listbox,
  ListboxProvider,
  Menu,
  MenuButton,
  MenuDivider,
  MenuGroup,
  MenuGroupContextProvider,
  MenuGroupHeader,
  MenuItem,
  MenuItemCheckbox,
  MenuItemLink,
  MenuItemRadio,
  MenuItemSwitch,
  MenuList,
  MenuListProvider,
  MenuPopover,
  MenuProvider,
  MenuSplitGroup,
  MenuTrigger,
  MenuTriggerContextProvider,
  MessageBar,
  MessageBarActions,
  MessageBarBody,
  MessageBarContextProvider,
  MessageBarGroup,
  MessageBarTitle,
  Option,
  OptionGroup,
  Overflow,
  OverflowDivider,
  OverflowItem,
  OverlayDrawer,
  Persona,
  Popover,
  PopoverProvider,
  PopoverSurface,
  PopoverTrigger,
  Portal,
  PortalMountNodeProvider,
  PresenceBadge,
  PresenceGroup,
  ProgressBar,
  Radio,
  RadioGroup,
  RadioGroupProvider,
  Rating,
  RatingDisplay,
  RatingItem,
  RatingItemProvider,
  RendererProvider,
  SSRProvider,
  SearchBox,
  Select,
  Skeleton,
  SkeletonContextProvider,
  SkeletonItem,
  Slider,
  SpinButton,
  Spinner,
  SplitButton,
  Subtitle1,
  Subtitle2,
  Subtitle2Stronger,
  SwatchPicker,
  SwatchPickerProvider,
  SwatchPickerRow,
  Switch,
  Tab2 as Tab,
  TabList,
  TabListProvider,
  Table,
  TableBody,
  TableCell,
  TableCellActions,
  TableCellLayout,
  TableContextProvider,
  TableHeader,
  TableHeaderCell,
  TableHeaderContextProvider,
  TableResizeHandle,
  TableRow,
  TableRowIdContextProvider,
  TableSelectionCell,
  Tag,
  TagGroup,
  TagPicker,
  TagPickerButton,
  TagPickerControl,
  TagPickerGroup,
  TagPickerInput,
  TagPickerList,
  TagPickerOption,
  TagPickerOptionGroup,
  TeachingPopover,
  TeachingPopoverBody,
  TeachingPopoverCarousel,
  TeachingPopoverCarouselCard,
  TeachingPopoverCarouselFooter,
  TeachingPopoverCarouselNav,
  TeachingPopoverCarouselNavButton,
  TeachingPopoverCarouselPageCount,
  TeachingPopoverFooter,
  TeachingPopoverHeader,
  TeachingPopoverSurface,
  TeachingPopoverTitle,
  TeachingPopoverTrigger,
  Text,
  Textarea,
  Title1,
  Title2,
  Title3,
  Toast,
  ToastBody,
  ToastFooter,
  ToastTitle,
  ToastTrigger,
  Toaster,
  ToggleButton,
  Toolbar,
  ToolbarButton,
  ToolbarDivider,
  ToolbarGroup,
  ToolbarRadioButton,
  ToolbarRadioGroup,
  ToolbarToggleButton,
  Tooltip,
  Tree,
  TreeItem,
  TreeItemLayout,
  TreeItemPersonaLayout,
  TreeItemProvider,
  TreeProvider,
  __css,
  __resetCSS,
  __resetStyles,
  __styles2 as __styles,
  accordionClassNames,
  accordionHeaderClassNames,
  accordionItemClassNames,
  accordionPanelClassNames,
  arrowHeights,
  assertSlots,
  avatarClassNames,
  avatarGroupClassNames,
  avatarGroupItemClassNames,
  avatarGroupPopoverClassNames,
  badgeClassNames,
  body1ClassNames,
  body1StrongClassNames,
  body1StrongerClassNames,
  body2ClassNames,
  breadcrumbButtonClassNames,
  breadcrumbClassNames,
  breadcrumbDividerClassNames,
  breadcrumbItemClassNames,
  buttonClassNames,
  caption1ClassNames,
  caption1StrongClassNames,
  caption1StrongerClassNames,
  caption2ClassNames,
  caption2StrongClassNames,
  cardCSSVars,
  cardClassNames,
  cardFooterClassNames,
  cardHeaderCSSVars,
  cardHeaderClassNames,
  cardPreviewClassNames,
  carouselAutoplayButtonClassNames,
  carouselButtonClassNames,
  carouselCardClassNames,
  carouselClassNames,
  carouselContextDefaultValue2 as carouselContextDefaultValue,
  carouselNavButtonClassNames,
  carouselNavClassNames,
  carouselNavContainerClassNames,
  carouselNavImageButtonClassNames,
  carouselSliderClassNames,
  checkboxClassNames,
  colorSwatchClassNames,
  comboboxClassNames,
  compoundButtonClassNames,
  counterBadgeClassNames,
  createCSSRuleFromTheme,
  createCustomFocusIndicatorStyle,
  createDOMRenderer,
  createDarkTheme,
  createFocusOutlineStyle,
  createHighContrastTheme,
  createLightTheme,
  createMotionComponent,
  createPresenceComponent,
  createPresenceComponentVariant,
  createTableColumn,
  createTeamsDarkTheme,
  dataGridBodyClassNames,
  dataGridCellClassNames,
  dataGridClassNames,
  dataGridHeaderCellClassNames,
  dataGridHeaderClassNames,
  dataGridRowClassNames,
  dataGridSelectionCellClassNames,
  dialogActionsClassNames,
  dialogBodyClassNames,
  dialogContentClassNames,
  dialogSurfaceClassNames,
  dialogTitleClassNames,
  displayClassNames,
  dividerClassNames,
  drawerBodyClassNames,
  drawerFooterClassNames,
  drawerHeaderClassNames,
  drawerHeaderNavigationClassNames,
  drawerHeaderTitleClassNames,
  dropdownClassNames,
  emptySwatchClassNames,
  fieldClassNames,
  flatTreeClassNames,
  flattenTree_unstable,
  fluentProviderClassNames,
  getIntrinsicElementProps,
  getNativeElementProps,
  getPartitionedNativeProps,
  getSlots,
  imageClassNames,
  imageSwatchClassNames,
  infoLabelClassNames,
  inlineDrawerClassNames,
  inputClassNames,
  interactionTagClassNames,
  interactionTagPrimaryClassNames,
  interactionTagSecondaryClassNames,
  isTruncatableBreadcrumbContent,
  labelClassNames,
  largeTitleClassNames,
  linkClassNames,
  listboxClassNames,
  makeResetStyles,
  makeStaticStyles,
  makeStyles,
  menuButtonClassNames,
  menuDividerClassNames,
  menuGroupClassNames,
  menuGroupHeaderClassNames,
  menuItemCheckboxClassNames,
  menuItemClassNames,
  menuItemLinkClassNames,
  menuItemRadioClassNames,
  menuItemSwitchClassNames,
  menuListClassNames,
  menuPopoverClassNames,
  menuSplitGroupClassNames,
  mergeCallbacks,
  mergeClasses,
  messageBarActionsClassNames,
  messageBarBodyClassNames,
  messageBarClassNames,
  messageBarGroupClassNames,
  messageBarTitleClassNames,
  motionTokens,
  optionClassNames,
  optionGroupClassNames,
  overlayDrawerClassNames,
  partitionAvatarGroupItems,
  partitionBreadcrumbItems,
  personaClassNames,
  popoverSurfaceClassNames,
  presenceAvailableFilled,
  presenceAvailableRegular,
  presenceAwayFilled,
  presenceAwayRegular,
  presenceBadgeClassNames,
  presenceBlockedRegular,
  presenceBusyFilled,
  presenceDndFilled,
  presenceDndRegular,
  presenceOfflineRegular,
  presenceOofRegular,
  presenceUnknownRegular,
  progressBarClassNames,
  radioClassNames,
  radioGroupClassNames,
  ratingClassNames,
  ratingDisplayClassNames,
  ratingItemClassNames,
  renderAccordionHeader_unstable,
  renderAccordionItem_unstable,
  renderAccordionPanel_unstable,
  renderAccordion_unstable,
  renderAriaLiveAnnouncer_unstable,
  renderAvatarGroupItem_unstable,
  renderAvatarGroupPopover_unstable,
  renderAvatarGroup_unstable,
  renderAvatar_unstable,
  renderBadge_unstable,
  renderBreadcrumbButton_unstable,
  renderBreadcrumbDivider_unstable,
  renderBreadcrumbItem_unstable,
  renderBreadcrumb_unstable,
  renderButton_unstable,
  renderCardFooter_unstable,
  renderCardHeader_unstable,
  renderCardPreview_unstable,
  renderCard_unstable,
  renderCarouselAutoplayButton_unstable,
  renderCarouselButton_unstable,
  renderCarouselCard_unstable,
  renderCarouselNavButton_unstable,
  renderCarouselNavContainer_unstable,
  renderCarouselNavImageButton_unstable,
  renderCarouselNav_unstable,
  renderCarouselSlider_unstable,
  renderCarousel_unstable,
  renderCheckbox_unstable,
  renderColorSwatch_unstable,
  renderCombobox_unstable,
  renderCompoundButton_unstable,
  renderDataGridBody_unstable,
  renderDataGridCell_unstable,
  renderDataGridHeaderCell_unstable,
  renderDataGridHeader_unstable,
  renderDataGridRow_unstable,
  renderDataGridSelectionCell_unstable,
  renderDataGrid_unstable,
  renderDialogActions_unstable,
  renderDialogBody_unstable,
  renderDialogContent_unstable,
  renderDialogSurface_unstable,
  renderDialogTitle_unstable,
  renderDialogTrigger_unstable,
  renderDialog_unstable,
  renderDivider_unstable,
  renderDrawerBody_unstable,
  renderDrawerFooter_unstable,
  renderDrawerHeaderNavigation_unstable,
  renderDrawerHeaderTitle_unstable,
  renderDrawerHeader_unstable,
  renderDrawer_unstable,
  renderDropdown_unstable,
  renderEmptySwatch_unstable,
  renderField_unstable,
  renderFlatTree_unstable,
  renderFluentProvider_unstable,
  renderImageSwatch_unstable,
  renderImage_unstable,
  renderInfoLabel_unstable,
  renderInlineDrawer_unstable,
  renderInput_unstable,
  renderInteractionTagPrimary_unstable,
  renderInteractionTagSecondary_unstable,
  renderInteractionTag_unstable,
  renderLabel_unstable,
  renderLink_unstable,
  renderListbox_unstable,
  renderMenuButton_unstable,
  renderMenuDivider_unstable,
  renderMenuGroupHeader_unstable,
  renderMenuGroup_unstable,
  renderMenuItemCheckbox_unstable,
  renderMenuItemLink_unstable,
  renderMenuItemRadio_unstable,
  renderMenuItemSwitch_unstable,
  renderMenuItem_unstable,
  renderMenuList_unstable,
  renderMenuPopover_unstable,
  renderMenuSplitGroup_unstable,
  renderMenuTrigger_unstable,
  renderMenu_unstable,
  renderMessageBarActions_unstable,
  renderMessageBarBody_unstable,
  renderMessageBarGroup_unstable,
  renderMessageBarTitle_unstable,
  renderMessageBar_unstable,
  renderOptionGroup_unstable,
  renderOption_unstable,
  renderOverlayDrawer_unstable,
  renderPersona_unstable,
  renderPopoverSurface_unstable,
  renderPopoverTrigger_unstable,
  renderPopover_unstable,
  renderPortal_unstable,
  renderProgressBar_unstable,
  renderRadioGroup_unstable,
  renderRadio_unstable,
  renderRatingDisplay_unstable,
  renderRatingItem_unstable,
  renderRating_unstable,
  renderSearchBox_unstable,
  renderSelect_unstable,
  renderSkeletonItem_unstable,
  renderSkeleton_unstable,
  renderSlider_unstable,
  renderSpinButton_unstable,
  renderSpinner_unstable,
  renderSplitButton_unstable,
  renderSwatchPickerGrid,
  renderSwatchPickerRow_unstable,
  renderSwatchPicker_unstable,
  renderSwitch_unstable,
  renderTabList_unstable,
  renderTab_unstable,
  renderTableBody_unstable,
  renderTableCellActions_unstable,
  renderTableCellLayout_unstable,
  renderTableCell_unstable,
  renderTableHeaderCell_unstable,
  renderTableHeader_unstable,
  renderTableResizeHandle_unstable,
  renderTableRow_unstable,
  renderTableSelectionCell_unstable,
  renderTable_unstable,
  renderTagGroup_unstable,
  renderTagPickerButton_unstable,
  renderTagPickerControl_unstable,
  renderTagPickerGroup_unstable,
  renderTagPickerInput_unstable,
  renderTagPickerList_unstable,
  renderTagPickerOptionGroup,
  renderTagPickerOption_unstable,
  renderTagPicker_unstable,
  renderTag_unstable,
  renderTeachingPopoverBody_unstable,
  renderTeachingPopoverCarouselCard_unstable,
  renderTeachingPopoverCarouselFooter_unstable,
  renderTeachingPopoverCarouselNavButton_unstable,
  renderTeachingPopoverCarouselNav_unstable,
  renderTeachingPopoverCarouselPageCount_unstable,
  renderTeachingPopoverCarousel_unstable,
  renderTeachingPopoverFooter_unstable,
  renderTeachingPopoverHeader_unstable,
  renderTeachingPopoverSurface_unstable,
  renderTeachingPopoverTitle_unstable,
  renderTeachingPopoverTrigger_unstable,
  renderTeachingPopover_unstable,
  renderText_unstable,
  renderTextarea_unstable,
  renderToStyleElements,
  renderToastBody_unstable,
  renderToastFooter_unstable,
  renderToastTitle_unstable,
  renderToastTrigger_unstable,
  renderToast_unstable,
  renderToaster_unstable,
  renderButton_unstable as renderToggleButton_unstable,
  renderToolbarGroup_unstable,
  renderToolbar_unstable,
  renderTooltip_unstable,
  renderTreeItemLayout_unstable,
  renderTreeItemPersonaLayout_unstable,
  renderTreeItem_unstable,
  renderTree_unstable,
  resetIdsForTests,
  resolvePositioningShorthand,
  resolveShorthand,
  searchBoxClassNames,
  selectClassNames,
  shorthands,
  skeletonClassNames,
  skeletonItemClassNames,
  sliderCSSVars,
  sliderClassNames,
  slot_exports as slot,
  spinButtonClassNames,
  spinnerClassNames,
  splitButtonClassNames,
  subtitle1ClassNames,
  subtitle2ClassNames,
  subtitle2StrongerClassNames,
  swatchCSSVars,
  swatchPickerClassNames,
  swatchPickerContextDefaultValue,
  swatchPickerRowClassNames,
  switchClassNames,
  tabClassNames,
  tabListClassNames,
  tableBodyClassName,
  tableBodyClassNames,
  tableCellActionsClassNames,
  tableCellClassName,
  tableCellClassNames,
  tableCellLayoutClassNames,
  tableClassName,
  tableClassNames,
  tableHeaderCellClassName,
  tableHeaderCellClassNames,
  tableHeaderClassName,
  tableHeaderClassNames,
  tableResizeHandleClassNames,
  tableRowClassName,
  tableRowClassNames,
  tableSelectionCellClassNames,
  tagClassNames,
  tagGroupClassNames,
  tagPickerButtonClassNames,
  tagPickerControlClassNames,
  tagPickerGroupClassNames,
  tagPickerInputClassNames,
  tagPickerListClassNames,
  tagPickerOptionClassNames,
  tagPickerOptionGroupClassNames,
  teachingPopoverBodyClassNames,
  teachingPopoverCarouselCardClassNames,
  teachingPopoverCarouselClassNames,
  teachingPopoverCarouselFooterClassNames,
  teachingPopoverCarouselNavButtonClassNames,
  teachingPopoverCarouselNavClassNames,
  teachingPopoverCarouselPageCountClassNames,
  teachingPopoverFooterClassNames,
  teachingPopoverHeaderClassNames,
  teachingPopoverSurfaceClassNames,
  teachingPopoverTitleClassNames,
  teamsDarkTheme,
  teamsHighContrastTheme,
  teamsLightTheme,
  textClassNames,
  textareaClassNames,
  themeToTokensObject,
  title1ClassNames,
  title2ClassNames,
  title3ClassNames,
  toMountNodeProps,
  toastBodyClassNames,
  toastFooterClassNames,
  toastTitleClassNames,
  toasterClassNames,
  toggleButtonClassNames,
  tokens,
  toolbarClassNames,
  toolbarGroupClassNames,
  tooltipClassNames,
  treeClassNames,
  treeItemClassNames,
  treeItemLayoutClassNames,
  treeItemLevelToken,
  treeItemPersonaLayoutClassNames,
  truncateBreadcrumLongTooltip,
  truncateBreadcrumbLongName,
  typographyStyles,
  useAccordionContextValues_unstable,
  useAccordionContext_unstable,
  useAccordionHeaderContextValues_unstable,
  useAccordionHeaderStyles_unstable,
  useAccordionHeader_unstable,
  useAccordionItemContextValues_unstable,
  useAccordionItemContext_unstable,
  useAccordionItemStyles_unstable,
  useAccordionItem_unstable,
  useAccordionPanelStyles_unstable,
  useAccordionPanel_unstable,
  useAccordionStyles_unstable,
  useAccordion_unstable,
  useAnimationFrame,
  useAnnounce,
  useAriaLiveAnnouncerContextValues_unstable,
  useAriaLiveAnnouncer_unstable,
  useArrowNavigationGroup,
  useAvatarGroupContextValues,
  useAvatarGroupContext_unstable,
  useAvatarGroupItemStyles_unstable,
  useAvatarGroupItem_unstable,
  useAvatarGroupPopoverContextValues_unstable,
  useAvatarGroupPopoverStyles_unstable,
  useAvatarGroupPopover_unstable,
  useAvatarGroupStyles_unstable,
  useAvatarGroup_unstable,
  useAvatarStyles_unstable,
  useAvatar_unstable,
  useBadgeStyles_unstable,
  useBadge_unstable,
  useBreadcrumbButtonStyles_unstable,
  useBreadcrumbButton_unstable,
  useBreadcrumbContext_unstable,
  useBreadcrumbDividerStyles_unstable,
  useBreadcrumbDivider_unstable,
  useBreadcrumbItemStyles_unstable,
  useBreadcrumbItem_unstable,
  useBreadcrumbStyles_unstable,
  useBreadcrumb_unstable,
  useButtonStyles_unstable,
  useButton_unstable,
  useCardFooterStyles_unstable,
  useCardFooter_unstable,
  useCardHeaderStyles_unstable,
  useCardHeader_unstable,
  useCardPreviewStyles_unstable,
  useCardPreview_unstable,
  useCardStyles_unstable,
  useCard_unstable,
  useCarouselAutoplayButtonStyles_unstable,
  useCarouselAutoplayButton_unstable,
  useCarouselButtonStyles_unstable,
  useCarouselButton_unstable,
  useCarouselCardStyles_unstable,
  useCarouselCard_unstable,
  useCarouselContext_unstable2 as useCarouselContext_unstable,
  useCarouselNavButtonStyles_unstable,
  useCarouselNavButton_unstable,
  useCarouselNavContainerStyles_unstable,
  useCarouselNavContainer_unstable,
  useCarouselNavImageButtonStyles_unstable,
  useCarouselNavImageButton_unstable,
  useCarouselNavStyles_unstable,
  useCarouselNav_unstable,
  useCarouselSliderStyles_unstable,
  useCarouselSlider_unstable,
  useCarouselStyles_unstable,
  useCarousel_unstable2 as useCarousel_unstable,
  useCheckboxStyles_unstable,
  useCheckbox_unstable,
  useCheckmarkStyles_unstable,
  useColorSwatchStyles_unstable,
  useColorSwatch_unstable,
  useColumnIdContext,
  useComboboxContextValues,
  useComboboxFilter,
  useComboboxStyles_unstable,
  useCombobox_unstable,
  useCompoundButtonStyles_unstable,
  useCompoundButton_unstable,
  useCounterBadgeStyles_unstable,
  useCounterBadge_unstable,
  useDataGridBodyStyles_unstable,
  useDataGridBody_unstable,
  useDataGridCellStyles_unstable,
  useDataGridCell_unstable,
  useDataGridContextValues_unstable,
  useDataGridContext_unstable,
  useDataGridHeaderCellStyles_unstable,
  useDataGridHeaderCell_unstable,
  useDataGridHeaderStyles_unstable,
  useDataGridHeader_unstable,
  useDataGridRowStyles_unstable,
  useDataGridRow_unstable,
  useDataGridSelectionCellStyles_unstable,
  useDataGridSelectionCell_unstable,
  useDataGridStyles_unstable,
  useDataGrid_unstable,
  useDialogActionsStyles_unstable,
  useDialogActions_unstable,
  useDialogBodyStyles_unstable,
  useDialogBody_unstable,
  useDialogContentStyles_unstable,
  useDialogContent_unstable,
  useDialogContext_unstable,
  useDialogSurfaceContextValues_unstable,
  useDialogSurfaceContext_unstable,
  useDialogSurfaceStyles_unstable,
  useDialogSurface_unstable,
  useDialogTitleStyles_unstable,
  useDialogTitle_unstable,
  useDialogTrigger_unstable,
  useDialog_unstable,
  useDividerStyles_unstable,
  useDivider_unstable,
  useDrawerBodyStyles_unstable,
  useDrawerBody_unstable,
  useDrawerContextValue,
  useDrawerContext_unstable,
  useDrawerFooterStyles_unstable,
  useDrawerFooter_unstable,
  useDrawerHeaderNavigationStyles_unstable,
  useDrawerHeaderNavigation_unstable,
  useDrawerHeaderStyles_unstable,
  useDrawerHeaderTitleStyles_unstable,
  useDrawerHeaderTitle_unstable,
  useDrawerHeader_unstable,
  useDrawerStyles_unstable,
  useDrawer_unstable,
  useDropdownStyles_unstable,
  useDropdown_unstable,
  useEmptySwatchStyles_unstable,
  useEmptySwatch_unstable,
  useEventCallback,
  useFieldContextValues_unstable,
  useFieldContext_unstable,
  useFieldControlProps_unstable,
  useFieldStyles_unstable,
  useField_unstable,
  useFlatTreeContextValues_unstable,
  useFlatTreeStyles_unstable,
  useFlatTree_unstable,
  useFluent,
  useFluentProviderContextValues_unstable,
  useFluentProviderStyles_unstable,
  useFluentProviderThemeStyleTag,
  useFluentProvider_unstable,
  useFocusFinders,
  useFocusObserved,
  useFocusVisible,
  useFocusWithin,
  useFocusableGroup,
  useHeadlessFlatTree_unstable,
  useId,
  useImageStyles_unstable,
  useImageSwatchStyles_unstable,
  useImageSwatch_unstable,
  useImage_unstable,
  useInfoLabelStyles_unstable,
  useInfoLabel_unstable,
  useInlineDrawerStyles_unstable,
  useInlineDrawer_unstable,
  useInputStyles_unstable,
  useInput_unstable,
  useInteractionTagContextValues_unstable,
  useInteractionTagPrimaryStyles_unstable,
  useInteractionTagPrimary_unstable,
  useInteractionTagSecondaryStyles_unstable,
  useInteractionTagSecondary_unstable,
  useInteractionTagStyles_unstable,
  useInteractionTag_unstable,
  useIsInTableHeader,
  useIsOverflowGroupVisible,
  useIsOverflowItemVisible,
  useIsSSR,
  useIsomorphicLayoutEffect,
  useKeyboardNavAttribute,
  useLabelStyles_unstable,
  useLabel_unstable,
  useLinkState_unstable,
  useLinkStyles_unstable,
  useLink_unstable,
  useListboxContextValues,
  useListboxStyles_unstable,
  useListbox_unstable,
  useMenuButtonStyles_unstable,
  useMenuButton_unstable,
  useMenuContextValues_unstable,
  useMenuContext_unstable,
  useMenuDividerStyles_unstable,
  useMenuDivider_unstable,
  useMenuGroupContextValues_unstable,
  useMenuGroupContext_unstable,
  useMenuGroupHeaderStyles_unstable,
  useMenuGroupHeader_unstable,
  useMenuGroupStyles_unstable,
  useMenuGroup_unstable,
  useMenuItemCheckboxStyles_unstable,
  useMenuItemCheckbox_unstable,
  useMenuItemLinkStyles_unstable,
  useMenuItemLink_unstable,
  useMenuItemRadioStyles_unstable,
  useMenuItemRadio_unstable,
  useMenuItemStyles_unstable,
  useMenuItemSwitchStyles_unstable,
  useMenuItemSwitch_unstable,
  useMenuItem_unstable,
  useMenuListContextValues_unstable,
  useMenuListContext_unstable,
  useMenuListStyles_unstable,
  useMenuList_unstable,
  useMenuPopoverStyles_unstable,
  useMenuPopover_unstable,
  useMenuSplitGroupStyles_unstable,
  useMenuSplitGroup_unstable,
  useMenuTriggerContext_unstable,
  useMenuTrigger_unstable,
  useMenu_unstable,
  useMergedRefs,
  useMessageBarActionsContextValue_unstable,
  useMessageBarActionsStyles_unstable,
  useMessageBarActions_unstable,
  useMessageBarBodyStyles_unstable,
  useMessageBarBody_unstable,
  useMessageBarContext,
  useMessageBarContextValue_unstable,
  useMessageBarGroupStyles_unstable,
  useMessageBarGroup_unstable,
  useMessageBarStyles_unstable,
  useMessageBarTitleStyles_unstable,
  useMessageBarTitle_unstable,
  useMessageBar_unstable,
  useModalAttributes,
  useObservedElement,
  useOptionGroupStyles_unstable,
  useOptionGroup_unstable,
  useOptionStyles_unstable,
  useOption_unstable,
  useOverflowCount,
  useOverflowMenu,
  useOverflowVisibility,
  useOverlayDrawerStyles_unstable,
  useOverlayDrawer_unstable,
  usePersonaStyles_unstable,
  usePersona_unstable,
  usePopoverContext_unstable,
  usePopoverSurfaceStyles_unstable,
  usePopoverSurface_unstable,
  usePopoverTrigger_unstable,
  usePopover_unstable,
  usePortalMountNode,
  usePortal_unstable,
  usePresenceBadgeStyles_unstable,
  usePresenceBadge_unstable,
  useProgressBarStyles_unstable,
  useProgressBar_unstable,
  useRadioGroupContextValue_unstable,
  useRadioGroupContextValues,
  useRadioGroupContext_unstable,
  useRadioGroupStyles_unstable,
  useRadioGroup_unstable,
  useRadioStyles_unstable,
  useRadio_unstable,
  useRatingContextValues,
  useRatingDisplayContextValues,
  useRatingDisplayStyles_unstable,
  useRatingDisplay_unstable,
  useRatingItemContextValue_unstable,
  useRatingItemStyles_unstable,
  useRatingItem_unstable,
  useRatingStyles_unstable,
  useRating_unstable,
  useRestoreFocusSource,
  useRestoreFocusTarget,
  useScrollbarWidth,
  useSearchBoxStyles_unstable,
  useSearchBox_unstable,
  useSelectStyles_unstable,
  useSelect_unstable,
  useSelection,
  useSkeletonContext,
  useSkeletonItemStyles_unstable,
  useSkeletonItem_unstable,
  useSkeletonStyles_unstable,
  useSkeleton_unstable,
  useSliderState_unstable,
  useSliderStyles_unstable,
  useSlider_unstable,
  useSpinButtonStyles_unstable,
  useSpinButton_unstable,
  useSpinnerStyles_unstable,
  useSpinner_unstable,
  useSplitButtonStyles_unstable,
  useSplitButton_unstable,
  useSubtreeContext_unstable,
  useSwatchPickerContextValue_unstable,
  useSwatchPickerContextValues,
  useSwatchPickerRowStyles_unstable,
  useSwatchPickerRow_unstable,
  useSwatchPickerStyles_unstable,
  useSwatchPicker_unstable,
  useSwitchStyles_unstable,
  useSwitch_unstable,
  useTabListContextValues_unstable,
  useTabListContext_unstable,
  useTabListStyles_unstable,
  useTabList_unstable,
  useTabStyles_unstable,
  useTab_unstable,
  useTableBodyStyles_unstable,
  useTableBody_unstable,
  useTableCellActionsStyles_unstable,
  useTableCellActions_unstable,
  useTableCellLayoutStyles_unstable,
  useTableCellLayout_unstable,
  useTableCellStyles_unstable,
  useTableCell_unstable,
  useTableColumnSizing_unstable,
  useTableCompositeNavigation,
  useTableContext,
  useTableFeatures,
  useTableHeaderCellStyles_unstable,
  useTableHeaderCell_unstable,
  useTableHeaderStyles_unstable,
  useTableHeader_unstable,
  useTableResizeHandleStyles_unstable,
  useTableResizeHandle_unstable,
  useTableRowIdContext,
  useTableRowStyles_unstable,
  useTableRow_unstable,
  useTableSelection,
  useTableSelectionCellStyles_unstable,
  useTableSelectionCell_unstable,
  useTableSort,
  useTableStyles_unstable,
  useTable_unstable,
  useTagAvatarContextValues_unstable,
  useTagGroupContextValues_unstable,
  useTagGroupStyles_unstable,
  useTagGroup_unstable,
  useTagPickerButtonStyles_unstable,
  useTagPickerButton_unstable,
  useTagPickerControlStyles_unstable,
  useTagPickerControl_unstable,
  useTagPickerFilter,
  useTagPickerGroupStyles_unstable,
  useTagPickerGroup_unstable,
  useTagPickerInputStyles_unstable,
  useTagPickerInput_unstable,
  useTagPickerListStyles_unstable,
  useTagPickerList_unstable,
  useTagPickerOptionGroup,
  useTagPickerOptionGroupStyles,
  useTagPickerOptionStyles_unstable,
  useTagPickerOption_unstable,
  useTagPicker_unstable,
  useTagStyles_unstable,
  useTag_unstable,
  useTeachingPopoverBodyStyles_unstable,
  useTeachingPopoverBody_unstable,
  useTeachingPopoverCarouselCardStyles_unstable,
  useTeachingPopoverCarouselCard_unstable,
  useTeachingPopoverCarouselContextValues_unstable,
  useTeachingPopoverCarouselFooterStyles_unstable,
  useTeachingPopoverCarouselFooter_unstable,
  useTeachingPopoverCarouselNavButtonStyles_unstable,
  useTeachingPopoverCarouselNavButton_unstable,
  useTeachingPopoverCarouselNavStyles_unstable,
  useTeachingPopoverCarouselNav_unstable,
  useTeachingPopoverCarouselPageCountStyles_unstable,
  useTeachingPopoverCarouselPageCount_unstable,
  useTeachingPopoverCarouselStyles_unstable,
  useTeachingPopoverCarousel_unstable,
  useTeachingPopoverFooter_unstable,
  useTeachingPopoverHeaderStyles_unstable,
  useTeachingPopoverHeader_unstable,
  useTeachingPopoverSurfaceStyles_unstable,
  useTeachingPopoverSurface_unstable,
  useTeachingPopoverTitleStyles_unstable,
  useTeachingPopoverTitle_unstable,
  useTeachingPopoverTrigger_unstable,
  useTeachingPopover_unstable,
  useTextStyles_unstable,
  useText_unstable,
  useTextareaStyles_unstable,
  useTextarea_unstable,
  useThemeClassName,
  useTimeout,
  useToastBodyStyles_unstable,
  useToastBody_unstable,
  useToastController,
  useToastFooterStyles_unstable,
  useToastFooter_unstable,
  useToastStyles_unstable,
  useToastTitleStyles_unstable,
  useToastTitle_unstable,
  useToastTrigger_unstable,
  useToast_unstable,
  useToasterStyles_unstable,
  useToaster_unstable,
  useToggleButtonStyles_unstable,
  useToggleButton_unstable,
  useToggleState,
  useToolbarButtonStyles_unstable,
  useToolbarButton_unstable,
  useToolbarDividerStyles_unstable,
  useToolbarDivider_unstable,
  useToolbarGroupStyles_unstable,
  useToolbarGroup_unstable,
  useToolbarRadioButtonStyles_unstable,
  useToolbarRadioButton_unstable,
  useToolbarStyles_unstable,
  useToolbarToggleButtonStyles_unstable,
  useToolbarToggleButton_unstable,
  useToolbar_unstable,
  useTooltipStyles_unstable,
  useTooltipVisibility,
  useTooltip_unstable,
  useTreeContextValues_unstable,
  useTreeContext_unstable,
  useTreeItemContextValues_unstable,
  useTreeItemContext_unstable,
  useTreeItemLayoutStyles_unstable,
  useTreeItemLayout_unstable,
  useTreeItemPersonaLayoutStyles_unstable,
  useTreeItemPersonaLayout_unstable,
  useTreeItemStyles_unstable,
  useTreeItem_unstable,
  useTreeStyles_unstable,
  useTree_unstable,
  useUncontrolledFocus,
  webDarkTheme,
  webLightTheme
};
/*! Bundled license information:

scheduler/cjs/scheduler.development.js:
  (**
   * @license React
   * scheduler.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react-is/cjs/react-is.development.js:
  (** @license React v17.0.2
   * react-is.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

scheduler/cjs/scheduler.development.js:
  (**
   * @license React
   * scheduler.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

scheduler/cjs/scheduler.development.js:
  (**
   * @license React
   * scheduler.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

scheduler/cjs/scheduler.development.js:
  (**
   * @license React
   * scheduler.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

scheduler/cjs/scheduler.development.js:
  (**
   * @license React
   * scheduler.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

scheduler/cjs/scheduler.development.js:
  (**
   * @license React
   * scheduler.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

scheduler/cjs/scheduler.development.js:
  (**
   * @license React
   * scheduler.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

scheduler/cjs/scheduler.development.js:
  (**
   * @license React
   * scheduler.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

scheduler/cjs/scheduler.development.js:
  (**
   * @license React
   * scheduler.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

scheduler/cjs/scheduler.development.js:
  (**
   * @license React
   * scheduler.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

scheduler/cjs/scheduler.development.js:
  (**
   * @license React
   * scheduler.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react-is/cjs/react-is.development.js:
  (** @license React v16.13.1
   * react-is.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

object-assign/index.js:
  (*
  object-assign
  (c) Sindre Sorhus
  @license MIT
  *)

scheduler/cjs/scheduler.development.js:
  (**
   * @license React
   * scheduler.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

use-sync-external-store/cjs/use-sync-external-store-shim.development.js:
  (**
   * @license React
   * use-sync-external-store-shim.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

scheduler/cjs/scheduler.development.js:
  (**
   * @license React
   * scheduler.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

scheduler/cjs/scheduler.development.js:
  (**
   * @license React
   * scheduler.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

scheduler/cjs/scheduler.development.js:
  (**
   * @license React
   * scheduler.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)
*/
//# sourceMappingURL=@fluentui_react-components.js.map
