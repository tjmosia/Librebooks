{
  "version": 3,
  "sources": ["../../@fluentui/react-jsx-runtime/node_modules/react-is/cjs/react-is.development.js", "../../@fluentui/react-jsx-runtime/node_modules/react-is/index.js", "../../@fluentui/react-utilities/lib/compose/slot.js", "../../@fluentui/react-utilities/lib/compose/constants.js", "../../@fluentui/react-utilities/lib/compose/assertSlots.js", "../../@fluentui/react-utilities/lib/compose/isSlot.js", "../../@fluentui/react-utilities/lib/utils/getNativeElementProps.js", "../../@fluentui/react-utilities/lib/utils/properties.js", "../../@fluentui/react-utilities/lib/compose/getIntrinsicElementProps.js", "../../@fluentui/react-utilities/lib/compose/deprecated/getSlots.js", "../../@fluentui/react-utilities/lib/utils/omit.js", "../../@fluentui/react-utilities/lib/compose/deprecated/resolveShorthand.js", "../../@fluentui/react-utilities/lib/compose/types.js", "../../@fluentui/react-utilities/lib/compose/isResolvedShorthand.js", "../../@fluentui/react-utilities/lib/compose/deprecated/getSlotsNext.js", "../../@fluentui/react-shared-contexts/lib/ThemeClassNameContext/ThemeClassNameContext.js", "../../@fluentui/react-shared-contexts/lib/TooltipVisibilityContext/TooltipContext.js", "../../@fluentui/react-shared-contexts/lib/ProviderContext/ProviderContext.js", "../../@fluentui/react-shared-contexts/lib/PortalMountNodeContext.js", "../../@fluentui/react-shared-contexts/lib/AnnounceContext/AnnounceContext.js", "../../@fluentui/react-shared-contexts/lib/ThemeContext/ThemeContext.js", "../../@fluentui/react-shared-contexts/lib/OverridesContext/OverridesContext.js", "../../@fluentui/react-shared-contexts/lib/CustomStyleHooksContext/CustomStyleHooksContext.js", "../../@fluentui/react-shared-contexts/lib/BackgroundAppearanceContext/BackgroundAppearanceContext.js", "../../@fluentui/react-utilities/lib/hooks/useBrowserTimer.js", "../../@fluentui/react-utilities/lib/hooks/useAnimationFrame.js", "../../@fluentui/react-utilities/lib/ssr/SSRContext.js", "../../@fluentui/react-utilities/lib/ssr/canUseDOM.js", "../../@fluentui/react-utilities/lib/hooks/useIsomorphicLayoutEffect.js", "../../@fluentui/react-utilities/lib/hooks/useEventCallback.js", "../../@fluentui/react-utilities/lib/hooks/useId.js", "../../@fluentui/react-utilities/lib/hooks/useMergedRefs.js", "../../@fluentui/react-utilities/lib/hooks/useScrollbarWidth.js", "../../@fluentui/react-utilities/lib/hooks/useTimeout.js", "../../@fluentui/react-utilities/lib/utils/mergeCallbacks.js", "../../@fluentui/react-utilities/lib/selection/useSelection.js", "../../@fluentui/react-utilities/lib/hooks/useControllableState.js", "../../@fluentui/react-utilities/lib/utils/createSetFromIterable.js", "../../@fluentui/react-utilities/lib/hooks/useFirstMount.js", "../../@fluentui/react-utilities/lib/hooks/useForceUpdate.js", "../../@fluentui/react-utilities/lib/hooks/useOnClickOutside.js", "../../@fluentui/react-utilities/lib/hooks/useOnScrollOutside.js", "../../@fluentui/react-utilities/lib/hooks/usePrevious.js", "../../@fluentui/react-utilities/lib/utils/clamp.js", "../../@fluentui/react-utilities/lib/utils/getRTLSafeKey.js", "../../@fluentui/react-utilities/lib/utils/isHTMLElement.js", "../../@fluentui/react-utilities/lib/utils/isInteractiveHTMLElement.js", "../../@fluentui/react-utilities/lib/utils/priorityQueue.js", "../../@fluentui/react-utilities/lib/trigger/applyTriggerPropsToChildren.js", "../../@fluentui/react-utilities/lib/trigger/isFluentTrigger.js", "../../@fluentui/react-utilities/lib/trigger/getTriggerChild.js", "../../@fluentui/react-utilities/lib/trigger/types.js", "../../@fluentui/react-utilities/lib/events/mouseTouchHelpers.js", "../../@fluentui/react-utilities/lib/selection/types.js", "../../@fluentui/react-utilities/lib/virtualParent/isVirtualElement.js", "../../@fluentui/react-utilities/lib/virtualParent/getParent.js", "../../@fluentui/react-utilities/lib/virtualParent/elementContains.js", "../../@fluentui/react-utilities/lib/virtualParent/setVirtualParent.js", "../../keyborg/src/WeakRefInstance.ts", "../../keyborg/src/FocusEvent.ts", "../../keyborg/src/Keyborg.ts", "../../keyborg/src/index.ts", "../../tabster/src/Consts.ts", "../../tabster/src/Instance.ts", "../../tabster/src/Events.ts", "../../tabster/src/DOMAPI.ts", "../../tabster/src/Utils.ts", "../../tabster/src/AttributeHelpers.ts", "../../tabster/src/Root.ts", "../../tabster/src/Deloser.ts", "../../tabster/src/State/Subscribable.ts", "../../tabster/src/CrossOrigin.ts", "../../tabster/src/Focusable.ts", "../../tabster/src/Keys.ts", "../../tabster/src/State/FocusedElement.ts", "../../tabster/src/Groupper.ts", "../../tabster/src/State/KeyboardNavigation.ts", "../../tabster/src/Modalizer.ts", "../../tabster/src/Mover.ts", "../../tabster/src/MutationEvent.ts", "../../tabster/src/State/ObservedElement.ts", "../../tabster/src/Outline.ts", "../../tabster/src/Uncontrolled.ts", "../../tabster/src/Restorer.ts", "../../tabster/src/Shadowdomize/DOMFunctions.ts", "../../tabster/src/Shadowdomize/ShadowTreeWalker.ts", "../../tabster/src/Shadowdomize/ShadowMutationObserver.ts", "../../tabster/src/Shadowdomize/querySelector.ts", "../../tabster/src/Shadowdomize/index.ts", "../../tabster/src/Tabster.ts", "../../tabster/src/Types.ts", "../../tabster/src/EventsTypes.ts", "../../tabster/src/Deprecated.ts", "../../@fluentui/react-tabster/lib/hooks/useTabster.js", "../../@fluentui/react-tabster/lib/hooks/useTabsterAttributes.js", "../../@fluentui/react-tabster/lib/hooks/useArrowNavigationGroup.js", "../../@fluentui/react-tabster/lib/hooks/useFocusableGroup.js", "../../@fluentui/react-tabster/lib/hooks/useFocusFinders.js", "../../@fluentui/react-tabster/lib/hooks/useFocusVisible.js", "../../@fluentui/react-tabster/lib/focus/constants.js", "../../@fluentui/react-tabster/lib/focus/focusVisiblePolyfill.js", "../../@fluentui/react-tabster/lib/hooks/useFocusWithin.js", "../../@fluentui/react-tabster/lib/focus/focusWithinPolyfill.js", "../../@fluentui/react-tabster/lib/hooks/useKeyboardNavAttribute.js", "../../@fluentui/react-tabster/lib/hooks/useModalAttributes.js", "../../@fluentui/react-tabster/lib/hooks/useObservedElement.js", "../../@fluentui/react-tabster/lib/hooks/useFocusObserved.js", "../../@fluentui/react-tabster/lib/hooks/useRestoreFocus.js", "../../@fluentui/react-tabster/lib/hooks/useUncontrolledFocus.js", "../../@fluentui/react-tabster/lib/focus/createCustomFocusIndicatorStyle.js", "../../@fluentui/tokens/lib/tokens.js", "../../@fluentui/tokens/lib/global/typographyStyles.js", "../../@fluentui/tokens/lib/global/colors.js", "../../@fluentui/tokens/lib/global/colorPalette.js", "../../@fluentui/tokens/lib/sharedColorNames.js", "../../@fluentui/tokens/lib/statusColorMapping.js", "../../@fluentui/tokens/lib/alias/lightColorPalette.js", "../../@fluentui/tokens/lib/alias/lightColor.js", "../../@fluentui/tokens/lib/global/borderRadius.js", "../../@fluentui/tokens/lib/global/curves.js", "../../@fluentui/tokens/lib/global/durations.js", "../../@fluentui/tokens/lib/global/fonts.js", "../../@fluentui/tokens/lib/global/spacings.js", "../../@fluentui/tokens/lib/global/strokeWidths.js", "../../@fluentui/tokens/lib/utils/shadows.js", "../../@fluentui/tokens/lib/utils/createLightTheme.js", "../../@fluentui/tokens/lib/global/brandColors.js", "../../@fluentui/tokens/lib/themes/teams/lightTheme.js", "../../@fluentui/tokens/lib/alias/darkColorPalette.js", "../../@fluentui/tokens/lib/alias/teamsDarkColor.js", "../../@fluentui/tokens/lib/utils/createTeamsDarkTheme.js", "../../@fluentui/tokens/lib/themes/teams/darkTheme.js", "../../@fluentui/tokens/lib/alias/highContrastColorPalette.js", "../../@fluentui/tokens/lib/alias/highContrastColor.js", "../../@fluentui/tokens/lib/utils/createHighContrastTheme.js", "../../@fluentui/tokens/lib/themes/teams/highContrastTheme.js", "../../@fluentui/tokens/lib/themes/web/lightTheme.js", "../../@fluentui/tokens/lib/alias/darkColor.js", "../../@fluentui/tokens/lib/utils/createDarkTheme.js", "../../@fluentui/tokens/lib/themes/web/darkTheme.js", "../../@fluentui/tokens/lib/themeToTokensObject.js", "../../@fluentui/react-tabster/lib/focus/createFocusOutlineStyle.js", "../../@fluentui/react-tabster/lib/hooks/useOnKeyboardNavigationChange.js", "../../@fluentui/react-tabster/lib/hooks/useKeyborgRef.js", "../../@fluentui/react-tabster/lib/hooks/useMergeTabsterAttributes.js", "../../@fluentui/react-tabster/lib/hooks/useSetKeyboardNavigation.js", "../../@fluentui/react-tabster/lib/hooks/useFocusedElementChange.js", "../../@fluentui/react-tabster/lib/tabster-types-6.0.1-do-not-use.js", "../../@fluentui/react-positioning/lib/utils/resolvePositioningShorthand.js", "../../@fluentui/react-positioning/lib/createVirtualElementFromClick.js", "../../@fluentui/react-positioning/lib/constants.js", "../../@floating-ui/utils/dist/floating-ui.utils.mjs", "../../@floating-ui/core/dist/floating-ui.core.mjs", "../../@floating-ui/utils/dist/floating-ui.utils.dom.mjs", "../../@floating-ui/dom/dist/floating-ui.dom.mjs", "../../@fluentui/react-positioning/lib/usePositioning.js", "../../@fluentui/react-positioning/lib/utils/parseFloatingUIPlacement.js", "../../@fluentui/react-positioning/lib/utils/getScrollParent.js", "../../@fluentui/react-positioning/lib/utils/getBoundary.js", "../../@fluentui/react-positioning/lib/utils/getReactFiberFromNode.js", "../../@fluentui/react-positioning/lib/utils/mergeArrowOffset.js", "../../@fluentui/react-positioning/lib/utils/toFloatingUIPadding.js", "../../@fluentui/react-positioning/lib/utils/toFloatingUIPlacement.js", "../../@fluentui/react-positioning/lib/utils/fromFloatingUIPlacement.js", "../../@fluentui/react-positioning/lib/utils/useCallbackRef.js", "../../@fluentui/react-positioning/lib/utils/debounce.js", "../../@fluentui/react-positioning/lib/utils/hasAutoFocusFilter.js", "../../@fluentui/react-positioning/lib/utils/writeArrowUpdates.js", "../../@fluentui/react-positioning/lib/utils/writeContainerupdates.js", "../../@fluentui/react-positioning/lib/utils/normalizeAutoSize.js", "../../@fluentui/react-positioning/lib/middleware/coverTarget.js", "../../@fluentui/react-positioning/lib/middleware/flip.js", "../../@fluentui/react-positioning/lib/middleware/intersecting.js", "../../@fluentui/react-positioning/lib/middleware/maxSize.js", "../../@fluentui/react-positioning/lib/utils/getFloatingUIOffset.js", "../../@fluentui/react-positioning/lib/middleware/offset.js", "../../@fluentui/react-positioning/lib/middleware/shift.js", "../../@fluentui/react-positioning/lib/middleware/matchTargetSize.js", "../../@fluentui/react-positioning/lib/utils/listScrollParents.js", "../../@fluentui/react-positioning/lib/utils/createResizeObserver.js", "../../@fluentui/react-positioning/lib/createPositionManager.js", "../../@floating-ui/devtools/dist/floating-ui.devtools.mjs", "../../@fluentui/react-positioning/lib/utils/devtools.js", "../../@fluentui/react-positioning/lib/usePositioningMouseTarget.js", "../../@fluentui/react-portal/lib/utils/toMountNodeProps.js", "../../@fluentui/react-portal/lib/components/Portal/usePortal.js", "../../@fluentui/react-portal/lib/components/Portal/usePortalMountNode.js", "../../use-disposable/src/useIsStrictMode.ts", "../../use-disposable/src/useDisposable.ts", "../../use-disposable/src/useStrictEffect.ts", "../../use-disposable/src/useStrictMemo.ts", "../../@fluentui/react-portal/lib/components/Portal/usePortalMountNodeStyles.styles.js", "../../@fluentui/react-portal/lib/components/Portal/renderPortal.js", "../../@fluentui/react-portal/lib/components/Portal/Portal.js", "../../@fluentui/react-portal/lib/components/Portal/Portal.types.js", "../../@fluentui/react-field/lib/contexts/FieldContext.js", "../../@fluentui/react-field/lib/contexts/useFieldContextValues.js", "../../@fluentui/react-field/lib/contexts/useFieldControlProps.js", "../../@fluentui/react-jsx-runtime/lib/jsx/createJSX.js", "../../@fluentui/react-jsx-runtime/lib/utils/createCompatSlotComponent.js", "../../@fluentui/react-jsx-runtime/lib/utils/warnIfElementTypeIsInvalid.js", "../../@fluentui/react-jsx-runtime/lib/jsx/jsxSlot.js", "../../@fluentui/react-jsx-runtime/lib/utils/getMetadataFromSlotComponent.js", "../../@fluentui/react-jsx-runtime/lib/utils/Runtime.js", "../../@fluentui/react-jsx-runtime/lib/jsx/jsxsSlot.js", "../../@fluentui/react-jsx-runtime/lib/jsx-runtime.js", "../../@fluentui/react-field/lib/components/Field/renderField.js", "../../@fluentui/react-label/lib/components/Label/useLabel.js", "../../@fluentui/react-label/lib/components/Label/renderLabel.js", "../../@fluentui/react-label/lib/components/Label/useLabelStyles.styles.js", "../../@fluentui/react-label/lib/components/Label/Label.js", "../../@fluentui/react-field/lib/components/Field/useField.js", "../../@fluentui/react-field/lib/components/Field/useFieldStyles.styles.js", "../../@fluentui/react-field/lib/components/Field/Field.js", "../../@fluentui/react-field/lib/components/Field/Field.types.js", "../../@fluentui/react-input/lib/components/Input/useInput.js", "../../@fluentui/react-input/lib/components/Input/renderInput.js", "../../@fluentui/react-input/lib/components/Input/useInputStyles.styles.js", "../../@fluentui/react-input/lib/components/Input/Input.js", "../../@fluentui/react-input/lib/components/Input/Input.types.js", "../../@fluentui/keyboard-keys/lib/keys.js"],
  "sourcesContent": ["/** @license React v17.0.2\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar REACT_ELEMENT_TYPE = 0xeac7;\nvar REACT_PORTAL_TYPE = 0xeaca;\nvar REACT_FRAGMENT_TYPE = 0xeacb;\nvar REACT_STRICT_MODE_TYPE = 0xeacc;\nvar REACT_PROFILER_TYPE = 0xead2;\nvar REACT_PROVIDER_TYPE = 0xeacd;\nvar REACT_CONTEXT_TYPE = 0xeace;\nvar REACT_FORWARD_REF_TYPE = 0xead0;\nvar REACT_SUSPENSE_TYPE = 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = 0xead8;\nvar REACT_MEMO_TYPE = 0xead3;\nvar REACT_LAZY_TYPE = 0xead4;\nvar REACT_BLOCK_TYPE = 0xead9;\nvar REACT_SERVER_BLOCK_TYPE = 0xeada;\nvar REACT_FUNDAMENTAL_TYPE = 0xead5;\nvar REACT_SCOPE_TYPE = 0xead7;\nvar REACT_OPAQUE_ID_TYPE = 0xeae0;\nvar REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;\nvar REACT_OFFSCREEN_TYPE = 0xeae2;\nvar REACT_LEGACY_HIDDEN_TYPE = 0xeae3;\n\nif (typeof Symbol === 'function' && Symbol.for) {\n  var symbolFor = Symbol.for;\n  REACT_ELEMENT_TYPE = symbolFor('react.element');\n  REACT_PORTAL_TYPE = symbolFor('react.portal');\n  REACT_FRAGMENT_TYPE = symbolFor('react.fragment');\n  REACT_STRICT_MODE_TYPE = symbolFor('react.strict_mode');\n  REACT_PROFILER_TYPE = symbolFor('react.profiler');\n  REACT_PROVIDER_TYPE = symbolFor('react.provider');\n  REACT_CONTEXT_TYPE = symbolFor('react.context');\n  REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');\n  REACT_SUSPENSE_TYPE = symbolFor('react.suspense');\n  REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');\n  REACT_MEMO_TYPE = symbolFor('react.memo');\n  REACT_LAZY_TYPE = symbolFor('react.lazy');\n  REACT_BLOCK_TYPE = symbolFor('react.block');\n  REACT_SERVER_BLOCK_TYPE = symbolFor('react.server.block');\n  REACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');\n  REACT_SCOPE_TYPE = symbolFor('react.scope');\n  REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');\n  REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');\n  REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');\n  REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');\n}\n\n// Filter certain DOM attributes (e.g. src, href) if their values are empty strings.\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || type === REACT_DEBUG_TRACING_MODE_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_LEGACY_HIDDEN_TYPE || enableScopeAPI ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_BLOCK_TYPE || type[0] === REACT_SERVER_BLOCK_TYPE) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n          case REACT_SUSPENSE_LIST_TYPE:\n            return type;\n\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n\n              default:\n                return $$typeof;\n            }\n\n        }\n\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n}\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\nvar hasWarnedAboutDeprecatedIsAsyncMode = false;\nvar hasWarnedAboutDeprecatedIsConcurrentMode = false; // AsyncMode should be deprecated\n\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 18+.');\n    }\n  }\n\n  return false;\n}\nfunction isConcurrentMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsConcurrentMode) {\n      hasWarnedAboutDeprecatedIsConcurrentMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isConcurrentMode() alias has been deprecated, ' + 'and will be removed in React 18+.');\n    }\n  }\n\n  return false;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\n\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\nexports.isValidElementType = isValidElementType;\nexports.typeOf = typeOf;\n  })();\n}\n", "'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n", "import * as React from 'react';\nimport { SLOT_ELEMENT_TYPE_SYMBOL, SLOT_RENDER_FUNCTION_SYMBOL } from './constants';\n/**\n * Creates a slot from a slot shorthand or properties (`props.SLOT_NAME` or `props` itself)\n * @param value - the value of the slot, it can be a slot shorthand, a slot component or a slot properties\n * @param options - values you can pass to alter the signature of a slot, those values are:\n *\n * * `elementType` - the base element type of a slot, defaults to `'div'`\n * * `defaultProps` - similar to a React component declaration, you can provide a slot default properties to be merged with the shorthand/properties provided.\n */ export function always(value, options) {\n    const { defaultProps, elementType } = options;\n    const props = resolveShorthand(value);\n    /**\n   * Casting is required here as SlotComponentType is a function, not an object.\n   * Although SlotComponentType has a function signature, it is still just an object.\n   * This is required to make a slot callable (JSX compatible), this is the exact same approach\n   * that is used on `@types/react` components\n   */ const propsWithMetadata = {\n        ...defaultProps,\n        ...props,\n        [SLOT_ELEMENT_TYPE_SYMBOL]: elementType\n    };\n    if (props && typeof props.children === 'function') {\n        propsWithMetadata[SLOT_RENDER_FUNCTION_SYMBOL] = props.children;\n        propsWithMetadata.children = defaultProps === null || defaultProps === void 0 ? void 0 : defaultProps.children;\n    }\n    return propsWithMetadata;\n}\n/**\n * Creates a slot from a slot shorthand or properties (`props.SLOT_NAME` or `props` itself)\n * @param value - the value of the slot, it can be a slot shorthand, a slot component or a slot properties\n * @param options - values you can pass to alter the signature of a slot, those values are:\n *\n * * `elementType` - the base element type of a slot, defaults to `'div'`\n * * `defaultProps` - similar to a React component declaration, you can provide a slot default properties to be merged with the shorthand/properties provided\n * * `renderByDefault` - a boolean that indicates if a slot will be rendered even if it's base value is `undefined`.\n * By default if `props.SLOT_NAME` is `undefined` then `state.SLOT_NAME` becomes `undefined`\n * and nothing will be rendered, but if `renderByDefault = true` then `state.SLOT_NAME` becomes an object\n * with the values provided by `options.defaultProps` (or `{}`). This is useful for cases such as providing a default content\n * in case no shorthand is provided, like the case of the `expandIcon` slot for the `AccordionHeader`\n */ export function optional(value, options) {\n    if (value === null || value === undefined && !options.renderByDefault) {\n        return undefined;\n    }\n    return always(value, options);\n}\n/**\n * Helper function that converts a slot shorthand or properties to a slot properties object\n * The main difference between this function and `slot` is that this function does not return the metadata required for a slot to be considered a properly renderable slot, it only converts the value to a slot properties object\n * @param value - the value of the slot, it can be a slot shorthand or a slot properties object\n */ export function resolveShorthand(value) {\n    if (typeof value === 'string' || typeof value === 'number' || Array.isArray(value) || // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    React.isValidElement(value)) {\n        return {\n            children: value\n        };\n    }\n    if (value && typeof value !== 'object' && process.env.NODE_ENV !== 'production') {\n        // TODO: would be nice to have a link to slot documentation in this error message\n        // eslint-disable-next-line no-console\n        console.error(`@fluentui/react-utilities [slot.${resolveShorthand.name}]:\nA slot got an invalid value \"${value}\" (${typeof value}).\nA valid value for a slot is a slot shorthand or slot properties object.\nSlot shorthands can be strings, numbers, arrays or JSX elements`);\n    }\n    return value;\n}\n", "/**\n * @internal\n * Internal reference for the render function\n */ export const SLOT_RENDER_FUNCTION_SYMBOL = Symbol.for('fui.slotRenderFunction');\n/**\n * @internal\n * Internal reference for the render function\n */ export const SLOT_ELEMENT_TYPE_SYMBOL = Symbol.for('fui.slotElementType');\n", "import * as React from 'react';\nimport { SLOT_ELEMENT_TYPE_SYMBOL } from './constants';\nimport { isSlot } from './isSlot';\nimport * as slot from './slot';\n/**\n * @internal\n * Assertion method to ensure state slots properties are properly declared.\n * A properly declared slot must be declared by using the `slot` method.\n *\n * @example\n * ```tsx\n * export const renderInput_unstable = (state: InputState) => {\n    assertSlots<InputSlots>(state);\n    return (\n      <state.root>\n        {state.contentBefore && <state.contentBefore />}\n        <state.input />\n        {state.contentAfter && <state.contentAfter />}\n      </state.root>\n    );\n  };\n * ```\n */ export function assertSlots(state) {\n    /**\n   * This verification is not necessary in production\n   * as we're verifying static properties that will not change between environments\n   */ if (process.env.NODE_ENV !== 'production') {\n        const typedState = state;\n        for (const slotName of Object.keys(typedState.components)){\n            const slotElement = typedState[slotName];\n            if (slotElement === undefined) {\n                continue;\n            }\n            // this means a slot is being declared without using, slot.always or slot.optional or even resolveShorthand on the state hook,\n            // but the render method is using the new `assertSlots` method. That scenario can be solved by simply updating the slot element with the proper element type\n            // FIXME: this slot will still fail to support child render function scenario\n            if (!isSlot(slotElement)) {\n                typedState[slotName] = slot.always(slotElement, {\n                    elementType: typedState.components[slotName]\n                });\n                // eslint-disable-next-line no-console\n                console.warn(`@fluentui/react-utilities [${assertSlots.name}]:\n\"state.${slotName}\" is not a slot!\nBe sure to create slots properly by using \"slot.always\" or \"slot.optional\".`);\n            } else {\n                // This means a slot is being declared by using resolveShorthand on the state hook,\n                // but the render method is using the new `assertSlots` method. That scenario can be solved by simply updating the slot element with the proper element type\n                const { [SLOT_ELEMENT_TYPE_SYMBOL]: elementType } = slotElement;\n                if (elementType !== typedState.components[slotName]) {\n                    slotElement[SLOT_ELEMENT_TYPE_SYMBOL] = typedState.components[slotName];\n                    // eslint-disable-next-line no-console\n                    console.warn(`@fluentui/react-utilities [${assertSlots.name}]:\n\"state.${slotName}\" element type differs from \"state.components.${slotName}\",\n${elementType} !== ${typedState.components[slotName]}.\nBe sure to create slots properly by using \"slot.always\" or \"slot.optional\" with the correct elementType.`);\n                }\n            }\n        }\n    }\n}\n", "import { SLOT_ELEMENT_TYPE_SYMBOL } from './constants';\n/**\n * Guard method to ensure a given element is a slot.\n * This is mainly used internally to ensure a slot is being used as a component.\n */ export function isSlot(element) {\n    return Boolean(element === null || element === void 0 ? void 0 : element.hasOwnProperty(SLOT_ELEMENT_TYPE_SYMBOL));\n}\n", "import * as React from 'react';\nimport { labelProperties, audioProperties, videoProperties, olProperties, liProperties, anchorProperties, buttonProperties, inputProperties, textAreaProperties, selectProperties, optionProperties, tableProperties, trProperties, thProperties, tdProperties, colGroupProperties, colProperties, fieldsetProperties, formProperties, iframeProperties, imgProperties, htmlElementProperties, getNativeProps, timeProperties, dialogProperties } from './properties';\nconst nativeElementMap = {\n    label: labelProperties,\n    audio: audioProperties,\n    video: videoProperties,\n    ol: olProperties,\n    li: liProperties,\n    a: anchorProperties,\n    button: buttonProperties,\n    input: inputProperties,\n    textarea: textAreaProperties,\n    select: selectProperties,\n    option: optionProperties,\n    table: tableProperties,\n    tr: trProperties,\n    th: thProperties,\n    td: tdProperties,\n    colGroup: colGroupProperties,\n    col: colProperties,\n    fieldset: fieldsetProperties,\n    form: formProperties,\n    iframe: iframeProperties,\n    img: imgProperties,\n    time: timeProperties,\n    dialog: dialogProperties\n};\n/**\n * Given an element tagname and user props, filters the props to only allowed props for the given\n * element type.\n * @param tagName - Tag name (e.g. \"div\")\n * @param props - Props object\n * @param excludedPropNames - List of props to disallow\n *\n * @deprecated use getIntrinsicElementProps instead, it is a type-safe version of this method\n */ // eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getNativeElementProps(tagName, props, excludedPropNames) {\n    const allowedPropNames = tagName && nativeElementMap[tagName] || htmlElementProperties;\n    allowedPropNames.as = 1;\n    return getNativeProps(props, allowedPropNames, excludedPropNames);\n}\n/**\n * Splits the native props into ones that go to the `root` slot, and ones that go to the primary slot.\n *\n * This function is only for use with components that have a primary slot other than `root`.\n * Most components should use {@link getNativeElementProps} for their root slot if it is the primary slot.\n *\n * @returns An object containing the native props for the `root` and primary slots.\n */ export const getPartitionedNativeProps = ({ primarySlotTagName, props, excludedPropNames })=>{\n    return {\n        root: {\n            style: props.style,\n            className: props.className\n        },\n        // eslint-disable-next-line deprecation/deprecation\n        primary: getNativeElementProps(primarySlotTagName, props, [\n            ...excludedPropNames || [],\n            'style',\n            'className'\n        ])\n    };\n};\n", "const toObjectMap = (...items)=>{\n    const result = {};\n    for (const item of items){\n        const keys = Array.isArray(item) ? item : Object.keys(item);\n        for (const key of keys){\n            result[key] = 1;\n        }\n    }\n    return result;\n};\n/**\n * An array of events that are allowed on every html element type.\n *\n * @public\n */ export const baseElementEvents = toObjectMap([\n    'onAuxClick',\n    'onAnimationEnd',\n    'onAnimationStart',\n    'onCopy',\n    'onCut',\n    'onPaste',\n    'onCompositionEnd',\n    'onCompositionStart',\n    'onCompositionUpdate',\n    'onFocus',\n    'onFocusCapture',\n    'onBlur',\n    'onBlurCapture',\n    'onChange',\n    'onInput',\n    'onSubmit',\n    'onLoad',\n    'onError',\n    'onKeyDown',\n    'onKeyDownCapture',\n    'onKeyPress',\n    'onKeyUp',\n    'onAbort',\n    'onCanPlay',\n    'onCanPlayThrough',\n    'onDurationChange',\n    'onEmptied',\n    'onEncrypted',\n    'onEnded',\n    'onLoadedData',\n    'onLoadedMetadata',\n    'onLoadStart',\n    'onPause',\n    'onPlay',\n    'onPlaying',\n    'onProgress',\n    'onRateChange',\n    'onSeeked',\n    'onSeeking',\n    'onStalled',\n    'onSuspend',\n    'onTimeUpdate',\n    'onVolumeChange',\n    'onWaiting',\n    'onClick',\n    'onClickCapture',\n    'onContextMenu',\n    'onDoubleClick',\n    'onDrag',\n    'onDragEnd',\n    'onDragEnter',\n    'onDragExit',\n    'onDragLeave',\n    'onDragOver',\n    'onDragStart',\n    'onDrop',\n    'onMouseDown',\n    'onMouseDownCapture',\n    'onMouseEnter',\n    'onMouseLeave',\n    'onMouseMove',\n    'onMouseOut',\n    'onMouseOver',\n    'onMouseUp',\n    'onMouseUpCapture',\n    'onSelect',\n    'onTouchCancel',\n    'onTouchEnd',\n    'onTouchMove',\n    'onTouchStart',\n    'onScroll',\n    'onWheel',\n    'onPointerCancel',\n    'onPointerDown',\n    'onPointerEnter',\n    'onPointerLeave',\n    'onPointerMove',\n    'onPointerOut',\n    'onPointerOver',\n    'onPointerUp',\n    'onGotPointerCapture',\n    'onLostPointerCapture'\n]);\n/**\n * An array of element attributes which are allowed on every html element type.\n *\n * @public\n */ export const baseElementProperties = toObjectMap([\n    'accessKey',\n    'children',\n    'className',\n    'contentEditable',\n    'dir',\n    'draggable',\n    'hidden',\n    'htmlFor',\n    'id',\n    'lang',\n    'ref',\n    'role',\n    'style',\n    'tabIndex',\n    'title',\n    'translate',\n    'spellCheck',\n    'name'\n]);\n/**\n * An array of microdata attributes that are allowed on every html element type.\n *\n * @public\n */ export const microdataProperties = toObjectMap([\n    'itemID',\n    'itemProp',\n    'itemRef',\n    'itemScope',\n    'itemType'\n]);\n/**\n * An array of HTML element properties and events.\n *\n * @public\n */ export const htmlElementProperties = toObjectMap(baseElementProperties, baseElementEvents, microdataProperties);\n/**\n * An array of LABEL tag properties and events.\n *\n * @public\n */ export const labelProperties = toObjectMap(htmlElementProperties, [\n    'form'\n]);\n/**\n * An array of AUDIO tag properties and events.\n\n * @public\n */ export const audioProperties = toObjectMap(htmlElementProperties, [\n    'height',\n    'loop',\n    'muted',\n    'preload',\n    'src',\n    'width'\n]);\n/**\n * An array of VIDEO tag properties and events.\n *\n * @public\n */ export const videoProperties = toObjectMap(audioProperties, [\n    'poster'\n]);\n/**\n * An array of OL tag properties and events.\n *\n * @public\n */ export const olProperties = toObjectMap(htmlElementProperties, [\n    'start'\n]);\n/**\n * An array of LI tag properties and events.\n *\n * @public\n */ export const liProperties = toObjectMap(htmlElementProperties, [\n    'value'\n]);\n/**\n * An array of A tag properties and events.\n *\n * @public\n */ export const anchorProperties = toObjectMap(htmlElementProperties, [\n    'download',\n    'href',\n    'hrefLang',\n    'media',\n    'rel',\n    'target',\n    'type'\n]);\n/**\n * An array of TIME tag properties and events.\n *\n * @public\n */ export const timeProperties = toObjectMap(htmlElementProperties, [\n    'dateTime'\n]);\n/**\n * An array of BUTTON tag properties and events.\n *\n * @public\n */ export const buttonProperties = toObjectMap(htmlElementProperties, [\n    'autoFocus',\n    'disabled',\n    'form',\n    'formAction',\n    'formEncType',\n    'formMethod',\n    'formNoValidate',\n    'formTarget',\n    'type',\n    'value'\n]);\n/**\n * An array of INPUT tag properties and events.\n *\n * @public\n */ export const inputProperties = toObjectMap(buttonProperties, [\n    'accept',\n    'alt',\n    'autoCapitalize',\n    'autoComplete',\n    'checked',\n    'dirname',\n    'form',\n    'height',\n    'inputMode',\n    'list',\n    'max',\n    'maxLength',\n    'min',\n    'multiple',\n    'pattern',\n    'placeholder',\n    'readOnly',\n    'required',\n    'src',\n    'step',\n    'size',\n    'type',\n    'value',\n    'width'\n]);\n/**\n * An array of TEXTAREA tag properties and events.\n *\n * @public\n */ export const textAreaProperties = toObjectMap(buttonProperties, [\n    'autoCapitalize',\n    'cols',\n    'dirname',\n    'form',\n    'maxLength',\n    'placeholder',\n    'readOnly',\n    'required',\n    'rows',\n    'wrap'\n]);\n/**\n * An array of SELECT tag properties and events.\n *\n * @public\n */ export const selectProperties = toObjectMap(buttonProperties, [\n    'form',\n    'multiple',\n    'required'\n]);\nexport const optionProperties = toObjectMap(htmlElementProperties, [\n    'selected',\n    'value'\n]);\n/**\n * An array of TABLE tag properties and events.\n *\n * @public\n */ export const tableProperties = toObjectMap(htmlElementProperties, [\n    'cellPadding',\n    'cellSpacing'\n]);\n/**\n * An array of TR tag properties and events.\n *\n * @public\n */ export const trProperties = htmlElementProperties;\n/**\n * An array of TH tag properties and events.\n *\n * @public\n */ export const thProperties = toObjectMap(htmlElementProperties, [\n    'colSpan',\n    'rowSpan',\n    'scope'\n]);\n/**\n * An array of TD tag properties and events.\n *\n * @public\n */ export const tdProperties = toObjectMap(htmlElementProperties, [\n    'colSpan',\n    'headers',\n    'rowSpan',\n    'scope'\n]);\nexport const colGroupProperties = toObjectMap(htmlElementProperties, [\n    'span'\n]);\nexport const colProperties = toObjectMap(htmlElementProperties, [\n    'span'\n]);\n/**\n * An array of FIELDSET tag properties and events.\n *\n * @public\n */ export const fieldsetProperties = toObjectMap(htmlElementProperties, [\n    'disabled',\n    'form'\n]);\n/**\n * An array of FORM tag properties and events.\n *\n * @public\n */ export const formProperties = toObjectMap(htmlElementProperties, [\n    'acceptCharset',\n    'action',\n    'encType',\n    'encType',\n    'method',\n    'noValidate',\n    'target'\n]);\n/**\n * An array of IFRAME tag properties and events.\n *\n * @public\n */ export const iframeProperties = toObjectMap(htmlElementProperties, [\n    'allow',\n    'allowFullScreen',\n    'allowPaymentRequest',\n    'allowTransparency',\n    'csp',\n    'height',\n    'importance',\n    'referrerPolicy',\n    'sandbox',\n    'src',\n    'srcDoc',\n    'width'\n]);\n/**\n * An array of IMAGE tag properties and events.\n *\n * @public\n */ export const imgProperties = toObjectMap(htmlElementProperties, [\n    'alt',\n    'crossOrigin',\n    'height',\n    'src',\n    'srcSet',\n    'useMap',\n    'width'\n]);\n/**\n * An array of DIALOG tag properties and events.\n *\n * @public\n */ export const dialogProperties = toObjectMap(htmlElementProperties, [\n    'open',\n    'onCancel',\n    'onClose'\n]);\n/**\n * An array of DIV tag properties and events.\n *\n * @public\n */ export const divProperties = htmlElementProperties;\n/**\n * Gets native supported props for an html element provided the allowance set. Use one of the property\n * sets defined (divProperties, buttonPropertes, etc) to filter out supported properties from a given\n * props set. Note that all data- and aria- prefixed attributes will be allowed.\n * NOTE: getNativeProps should always be applied first when adding props to a react component. The\n * non-native props should be applied second. This will prevent getNativeProps from overriding your custom props.\n * For example, if props passed to getNativeProps has an onClick function and getNativeProps is added to\n * the component after an onClick function is added, then the getNativeProps onClick will override it.\n *\n * @public\n * @param props - The unfiltered input props\n * @param allowedPropNames - The array or record of allowed prop names.\n * @param excludedPropNames\n * @returns The filtered props\n */ // eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getNativeProps(// eslint-disable-next-line @typescript-eslint/no-explicit-any\nprops, allowedPropNames, excludedPropNames) {\n    // It'd be great to properly type this while allowing 'aria-` and 'data-' attributes like TypeScript does for\n    // JSX attributes, but that ability is hardcoded into the TS compiler with no analog in TypeScript typings.\n    // Then we'd be able to enforce props extends native props (including aria- and data- attributes), and then\n    // return native props.\n    // We should be able to do this once this PR is merged: https://github.com/microsoft/TypeScript/pull/26797\n    const isArray = Array.isArray(allowedPropNames);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const result = {};\n    const keys = Object.keys(props);\n    for (const key of keys){\n        const isNativeProp = !isArray && allowedPropNames[key] || isArray && allowedPropNames.indexOf(key) >= 0 || key.indexOf('data-') === 0 || key.indexOf('aria-') === 0;\n        if (isNativeProp && (!excludedPropNames || (excludedPropNames === null || excludedPropNames === void 0 ? void 0 : excludedPropNames.indexOf(key)) === -1)) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            result[key] = props[key];\n        }\n    }\n    return result;\n}\n", "import * as React from 'react';\nimport { getNativeElementProps } from '../utils/getNativeElementProps';\n/**\n * Given an element tagname and user props, filters the props to only allowed props for the given\n * element type.\n *\n * Equivalent to {@link getNativeElementProps}, but more type-safe.\n */ export const getIntrinsicElementProps = (/** The slot's default element type (e.g. 'div') */ tagName, /** The component's props object */ props, /** List of native props to exclude from the returned value */ excludedPropNames)=>{\n    var _props_as;\n    // eslint-disable-next-line deprecation/deprecation\n    return getNativeElementProps((_props_as = props.as) !== null && _props_as !== void 0 ? _props_as : tagName, props, excludedPropNames);\n};\n", "import * as React from 'react';\nimport { omit } from '../../utils/omit';\nimport { isSlot } from '../isSlot';\nimport { SLOT_RENDER_FUNCTION_SYMBOL } from '../constants';\n/**\n * Given the state and an array of slot names, will break out `slots` and `slotProps`\n * collections.\n *\n * The root is derived from a mix of `components` props and `as` prop.\n *\n * Slots will render as null if they are rendered as primitives with undefined children.\n *\n * The slotProps will always omit the `as` prop within them, and for slots that are string\n * primitives, the props will be filtered according to the slot type by the type system.\n * For example, if the slot is rendered `as: 'a'`, the props will be filtered for acceptable\n * anchor props. Note that this is only enforced at build time by Typescript -- there is no\n * runtime code filtering props in this function.\n *\n * @deprecated use slot.always or slot.optional combined with assertSlots instead\n *\n * @param state - State including slot definitions\n * @returns An object containing the `slots` map and `slotProps` map.\n */ export function getSlots(state) {\n    // eslint-disable-next-line deprecation/deprecation\n    const slots = {};\n    const slotProps = {};\n    const slotNames = Object.keys(state.components);\n    for (const slotName of slotNames){\n        const [slot, props] = getSlot(state, slotName);\n        // eslint-disable-next-line deprecation/deprecation\n        slots[slotName] = slot;\n        slotProps[slotName] = props;\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    return {\n        slots,\n        slotProps: slotProps\n    };\n}\nfunction getSlot(state, slotName) {\n    var _state_components, _state_components1;\n    const props = state[slotName];\n    if (props === undefined) {\n        return [\n            null,\n            undefined\n        ];\n    }\n    // TS Error: Property 'as' does not exist on type 'UnknownSlotProps | undefined'.ts(2339)\n    const { as: asProp, children, ...rest } = props;\n    const renderFunction = isSlot(props) ? props[SLOT_RENDER_FUNCTION_SYMBOL] : undefined;\n    const slot = ((_state_components = state.components) === null || _state_components === void 0 ? void 0 : _state_components[slotName]) === undefined || typeof state.components[slotName] === 'string' ? asProp || ((_state_components1 = state.components) === null || _state_components1 === void 0 ? void 0 : _state_components1[slotName]) || 'div' : state.components[slotName];\n    if (renderFunction || typeof children === 'function') {\n        const render = renderFunction || children;\n        return [\n            React.Fragment,\n            {\n                children: render(slot, rest)\n            }\n        ];\n    }\n    const shouldOmitAsProp = typeof slot === 'string' && asProp;\n    const slotProps = shouldOmitAsProp ? omit(props, [\n        'as'\n    ]) : props;\n    return [\n        slot,\n        slotProps\n    ];\n}\n", "/**\n * Tiny helper to do the minimal amount of work in duplicating an object but omitting some\n * props. This ends up faster than using object ...rest or reduce to filter.\n *\n * This behaves very much like filteredAssign, but does not merge many objects together,\n * uses an exclusion object map, and avoids spreads all for optimal performance.\n *\n * See perf test for background:\n * https://jsperf.com/omit-vs-rest-vs-reduce/1\n *\n * @param obj - The object to clone\n * @param exclusions - The array of keys to exclude\n */ // eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function omit(obj, exclusions) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const result = {};\n    for(const key in obj){\n        if (exclusions.indexOf(key) === -1 && obj.hasOwnProperty(key)) {\n            result[key] = obj[key];\n        }\n    }\n    return result;\n}\n", "import * as slot from '../slot';\n/**\n *\n * Resolves shorthands into slot props, to ensure normalization of the signature\n * being passed down to getSlots method\n * @param value - the base shorthand props\n * @param options - options to resolve shorthand props\n *\n * @deprecated use slot.always or slot.optional combined with assertSlots instead\n */ // eslint-disable-next-line deprecation/deprecation\nexport const resolveShorthand = (value, options)=>slot.optional(value, {\n        ...options,\n        renderByDefault: options === null || options === void 0 ? void 0 : options.required,\n        // elementType as undefined is the way to identify between a slot and a resolveShorthand call\n        // in the case elementType is undefined assertSlots will fail, ensuring it'll only work with slot method.\n        elementType: undefined\n    });\n", "import * as React from 'react';\n", "import { isValidElement } from 'react';\n/**\n * Guard method that validates if a shorthand is a slot\n * can be used to extends properties provided by a slot\n *\n * @example\n * ```\n * const backdropSlot = resolveShorthand(backdrop, {\n *  defaultProps: {\n *    onClick: useEventCallback(event => {\n *     if (isResolvedShorthand(backdrop)) {\n *        backdrop.onClick?.(event)\n *      }\n *      // do something after passing click down the line\n *    }),\n *  },\n * })\n * ```\n * @example\n * ```\n * const handleBackDropClick = (event) => {\n *  // do your thing\n * }\n * const backdropSlot = resolveShorthand(backdrop, {\n *  defaultProps: {\n *    onClick: useEventCallback(\n *      mergeCallbacks(isResolvedShorthand(backdrop) ? backdrop.onClick : undefined, handleBackdropClick)\n *    )\n * })\n * ```\n */ export function isResolvedShorthand(shorthand) {\n    return shorthand !== null && typeof shorthand === 'object' && !Array.isArray(shorthand) && !isValidElement(shorthand);\n}\n", "import * as React from 'react';\n/**\n * Similar to `getSlots`, main difference is that it's compatible with new custom jsx pragma\n *\n * @internal\n * This is an internal temporary method, this method will cease to exist eventually!\n *\n * * ❗️❗️ **DO NOT USE IT EXTERNALLY** ❗️❗️\n *\n * @deprecated use slot.always or slot.optional combined with assertSlots instead\n */ export function getSlotsNext(state) {\n    // eslint-disable-next-line deprecation/deprecation\n    const slots = {};\n    const slotProps = {};\n    const slotNames = Object.keys(state.components);\n    for (const slotName of slotNames){\n        // eslint-disable-next-line deprecation/deprecation\n        const [slot, props] = getSlotNext(state, slotName);\n        // eslint-disable-next-line deprecation/deprecation\n        slots[slotName] = slot;\n        slotProps[slotName] = props;\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    return {\n        slots,\n        slotProps: slotProps\n    };\n}\n/**\n * @deprecated use slot.always or slot.optional combined with assertSlots instead\n */ function getSlotNext(state, slotName) {\n    var _state_components, _state_components1;\n    const props = state[slotName];\n    if (props === undefined) {\n        return [\n            null,\n            undefined\n        ];\n    }\n    // TS Error: Property 'as' does not exist on type 'UnknownSlotProps | undefined'.ts(2339)\n    const { as: asProp, ...propsWithoutAs } = props;\n    const slot = ((_state_components = state.components) === null || _state_components === void 0 ? void 0 : _state_components[slotName]) === undefined || typeof state.components[slotName] === 'string' ? asProp || ((_state_components1 = state.components) === null || _state_components1 === void 0 ? void 0 : _state_components1[slotName]) || 'div' : state.components[slotName];\n    const shouldOmitAsProp = typeof slot === 'string' && asProp;\n    const slotProps = shouldOmitAsProp ? propsWithoutAs : props;\n    return [\n        slot,\n        slotProps\n    ];\n}\n", "import * as React from 'react';\n/**\n * @internal\n * Used to provide a CSS class that applies theme css variables\n *\n * Useful for elements in the React tree (can read context) but not in the DOM Tree. E.g. Portals\n */ const ThemeClassNameContext = React.createContext(undefined);\nconst themeClassNameContextDefaultVaue = '';\nexport const ThemeClassNameProvider = ThemeClassNameContext.Provider;\n/**\n * @returns CSS class that applies css variables\n */ export function useThemeClassName() {\n    var _React_useContext;\n    return (_React_useContext = React.useContext(ThemeClassNameContext)) !== null && _React_useContext !== void 0 ? _React_useContext : themeClassNameContextDefaultVaue;\n}\n", "import * as React from 'react';\n/**\n * @internal\n * Context shared by all of the tooltips in the app\n */ const TooltipVisibilityContext = React.createContext(undefined);\nconst tooltipVisibilityContextDefaultValue = {};\n/**\n * @internal\n */ export const TooltipVisibilityProvider = TooltipVisibilityContext.Provider;\nexport function useTooltipVisibility() {\n    var _React_useContext;\n    return (_React_useContext = React.useContext(TooltipVisibilityContext)) !== null && _React_useContext !== void 0 ? _React_useContext : tooltipVisibilityContextDefaultValue;\n}\n", "import * as React from 'react';\n/**\n * @internal\n */ const ProviderContext = React.createContext(undefined);\nconst providerContextDefaultValue = {\n    // eslint-disable-next-line @nx/workspace-no-restricted-globals -- expected ignore ( SSR friendly acquisition of globals )\n    targetDocument: typeof document === 'object' ? document : undefined,\n    dir: 'ltr'\n};\n/**\n * @internal\n */ export const Provider = ProviderContext.Provider;\nexport function useFluent() {\n    var _React_useContext;\n    return (_React_useContext = React.useContext(ProviderContext)) !== null && _React_useContext !== void 0 ? _React_useContext : providerContextDefaultValue;\n}\n", "import * as React from 'react';\n/**\n * Provides a mount node for portals to render into.\n *\n * @internal\n */ const PortalMountNodeContext = React.createContext(undefined);\n/**\n * @internal\n */ export const PortalMountNodeProvider = PortalMountNodeContext.Provider;\nexport function usePortalMountNode() {\n    return React.useContext(PortalMountNodeContext);\n}\n", "import * as React from 'react';\n/**\n * @internal\n */ const AnnounceContext = React.createContext(undefined);\nexport const AnnounceProvider = AnnounceContext.Provider;\n/**\n * Returns a function that can be used to announce messages to screen readers.\n */ export function useAnnounce() {\n    var _React_useContext;\n    return (_React_useContext = React.useContext(AnnounceContext)) !== null && _React_useContext !== void 0 ? _React_useContext : {\n        announce: ()=>undefined\n    };\n}\n", "import * as React from 'react';\n/**\n * @internal\n */ export const ThemeContext = React.createContext(undefined);\n/**\n * @internal\n */ export const ThemeProvider = ThemeContext.Provider;\n", "import * as React from 'react';\n/**\n * @internal\n */ export const OverridesContext = React.createContext(undefined);\n/**\n * @internal\n */ export const OverridesProvider = OverridesContext.Provider;\nexport function useOverrides() {\n    var _React_useContext;\n    return (_React_useContext = React.useContext(OverridesContext)) !== null && _React_useContext !== void 0 ? _React_useContext : {};\n}\n", "/* eslint-disable */ import * as React from 'react';\n/**\n * @internal\n */ export const CustomStyleHooksContext = React.createContext(undefined);\nconst noop = ()=>{};\n/**\n * @internal\n */ export const CustomStyleHooksProvider = CustomStyleHooksContext.Provider;\n/**\n * Gets a custom style hook\n * @param hook - One of the hook properties in CustomStyleHooksContextValue\n * @returns The corresponding hook when defined, otherwise a no-op function.\n */ export const useCustomStyleHook = (hook)=>{\n    var _React_useContext;\n    var _React_useContext_hook;\n    return (_React_useContext_hook = (_React_useContext = React.useContext(CustomStyleHooksContext)) === null || _React_useContext === void 0 ? void 0 : _React_useContext[hook]) !== null && _React_useContext_hook !== void 0 ? _React_useContext_hook : noop;\n};\n", "import * as React from 'react';\n/**\n * @internal\n */ export const BackgroundAppearanceContext = React.createContext(undefined);\n/**\n * @internal\n */ export const BackgroundAppearanceProvider = BackgroundAppearanceContext.Provider;\nexport function useBackgroundAppearance() {\n    return React.useContext(BackgroundAppearanceContext);\n}\n", "import * as React from 'react';\n/**\n * @internal\n * Helper to manage a browser timer.\n * Ensures that the timer isn't set multiple times at once,\n * and is cleaned up when the component is unloaded.\n *\n * @param setTimer - The timer setter function\n * @param cancelTimer - The timer cancel function\n * @returns A pair of [setTimer, cancelTimer] that are stable between renders.\n *\n * @example\n * const [setTimer, cancelTimer] = useBrowserTimer(setTimeout, cancelTimeout);\n *\n * setTimer(() => console.log('Hello world!'), 1000);\n * cancelTimer();\n */ export function useBrowserTimer(setTimer, cancelTimer) {\n    const id = React.useRef(undefined);\n    const set = React.useCallback((fn, delay)=>{\n        if (id.current !== undefined) {\n            cancelTimer(id.current);\n        }\n        id.current = setTimer(fn, delay);\n        return id.current;\n    }, [\n        cancelTimer,\n        setTimer\n    ]);\n    const cancel = React.useCallback(()=>{\n        if (id.current !== undefined) {\n            cancelTimer(id.current);\n            id.current = undefined;\n        }\n    }, [\n        cancelTimer\n    ]);\n    // Clean up the timeout when the component is unloaded\n    React.useEffect(()=>cancel, [\n        cancel\n    ]);\n    return [\n        set,\n        cancel\n    ];\n}\n", "import { useBrowserTimer } from './useBrowserTimer';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\nconst setAnimationFrameNoop = (callback)=>{\n    callback(0);\n    return 0;\n};\nconst cancelAnimationFrameNoop = (handle)=>handle;\n/**\n * @internal\n * Helper to manage a browser requestAnimationFrame.\n * Ensures that the requestAnimationFrame isn't set multiple times at once and is cleaned up\n * when the component is unloaded.\n *\n * @returns A pair of [requestAnimationFrame, cancelAnimationFrame] that are stable between renders.\n */ export function useAnimationFrame() {\n    const { targetDocument } = useFluent();\n    const win = targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.defaultView;\n    const setAnimationFrame = win ? win.requestAnimationFrame : setAnimationFrameNoop;\n    const clearAnimationFrame = win ? win.cancelAnimationFrame : cancelAnimationFrameNoop;\n    return useBrowserTimer(setAnimationFrame, clearAnimationFrame);\n}\n", "import * as React from 'react';\nimport { canUseDOM } from './canUseDOM';\n/**\n * Default context value to use in case there is no SSRProvider. This is fine for client-only apps.\n *\n * @internal\n */ export const defaultSSRContextValue = {\n    current: 0\n};\nexport const SSRContext = /*#__PURE__*/ React.createContext(undefined);\n/**\n * @internal\n */ export function useSSRContext() {\n    var _React_useContext;\n    return (_React_useContext = React.useContext(SSRContext)) !== null && _React_useContext !== void 0 ? _React_useContext : defaultSSRContextValue;\n}\n/**\n * When using SSR with Fluent UI, applications must be wrapped in an SSRProvider. This ensures that auto generated ids\n * are consistent between the client and server.\n *\n * @public\n */ export const SSRProvider = (props)=>{\n    const [value] = React.useState(()=>({\n            current: 0\n        }));\n    return /*#__PURE__*/ React.createElement(SSRContext.Provider, {\n        value: value\n    }, props.children);\n};\n/**\n * Returns whether the component is currently being server side rendered or hydrated on the client. Can be used to delay\n * browser-specific rendering until after hydration. May cause re-renders on a client when is used within SSRProvider.\n */ export function useIsSSR() {\n    const isInSSRContext = useSSRContext() !== defaultSSRContextValue;\n    const [isSSR, setIsSSR] = React.useState(isInSSRContext);\n    // If we are rendering in a non-DOM environment, and there's no SSRProvider, provide a warning to hint to the\n    // developer to add one.\n    if (process.env.NODE_ENV !== 'production') {\n        if (!isInSSRContext && !canUseDOM()) {\n            // eslint-disable-next-line no-console\n            console.error(`@fluentui/react-components [${useIsSSR.name}]:\nWhen server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server.\n\n\nCheck documentation at https://aka.ms/fluentui-ssr.`);\n        }\n    }\n    // If on the client, and the component was initially server rendered, then schedule a layout effect to update the\n    // component after hydration.\n    if (canUseDOM() && isInSSRContext) {\n        // This if statement technically breaks the rules of hooks, but is safe because the condition never changes after\n        // mounting.\n        // eslint-disable-next-line\n        React.useLayoutEffect(()=>{\n            setIsSSR(false);\n        }, []);\n    }\n    return isSSR;\n}\n", "/**\n * Verifies if an application can use DOM.\n */ export function canUseDOM() {\n    return /* eslint-disable @nx/workspace-no-restricted-globals -- expected ignore ( SSR friendly acquisition of globals )*/ typeof window !== 'undefined' && !!(window.document && // eslint-disable-next-line deprecation/deprecation\n    window.document.createElement);\n}\n", "import * as React from 'react';\nimport { canUseDOM } from '../ssr/index';\n/**\n * React currently throws a warning when using useLayoutEffect on the server. To get around it, we can conditionally\n * useEffect on the server (no-op) and useLayoutEffect in the browser. We occasionally need useLayoutEffect to\n * ensure we don't get a render flash for certain operations, but we may also need affected components to render on\n * the server.\n *\n * https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\n * https://github.com/reduxjs/react-redux/blob/master/src/utils/useIsomorphicLayoutEffect.js\n */ // eslint-disable-next-line no-restricted-properties\nexport const useIsomorphicLayoutEffect = canUseDOM() ? React.useLayoutEffect : React.useEffect;\n", "import * as React from 'react';\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect';\n/**\n * @internal\n * https://reactjs.org/docs/hooks-faq.html#how-to-read-an-often-changing-value-from-usecallback\n *\n * Modified `useCallback` that can be used when dependencies change too frequently. Can occur when\n * e.g. user props are dependencies which could change on every render\n * e.g. volatile values (i.e. useState/useDispatch) are dependencies which could change frequently\n *\n * This should not be used often, but can be a useful re-render optimization since the callback is a ref and\n * will not be invalidated between re-renders\n *\n * @param fn - The callback function that will be used\n */ export const useEventCallback = (fn)=>{\n    const callbackRef = React.useRef(()=>{\n        throw new Error('Cannot call an event handler while rendering');\n    });\n    useIsomorphicLayoutEffect(()=>{\n        callbackRef.current = fn;\n    }, [\n        fn\n    ]);\n    return React.useCallback((...args)=>{\n        const callback = callbackRef.current;\n        return callback(...args);\n    }, [\n        callbackRef\n    ]);\n};\n", "import * as React from 'react';\nimport { defaultSSRContextValue, useSSRContext } from '../ssr/index';\nconst IdPrefixContext = React.createContext(undefined);\n/**\n * Allows to define a prefix that will be used for all IDs generated by useId() hook. It's useful to avoid collisions\n * between different bundles.\n */ export const IdPrefixProvider = IdPrefixContext.Provider;\nfunction useIdPrefix() {\n    return React.useContext(IdPrefixContext) || '';\n}\n/**\n * Resets generated IDs, should be used only in tests.\n */ export function resetIdsForTests() {\n    defaultSSRContextValue.current = 0;\n}\n/**\n * Hook to generate a unique ID.\n *\n * @param prefix - Optional prefix for the ID. Defaults to 'fui-'.\n * @param providedId - Optional id provided by a parent component. Defaults to the provided value if present,\n *  without conditioning the hook call\n * @returns The ID\n */ export function useId(prefix = 'fui-', providedId) {\n    'use no memo';\n    const contextValue = useSSRContext();\n    const idPrefix = useIdPrefix();\n    // Checking if useId is available on React, if it is, we use it to generate the id. String concatenation is used to\n    // prevent bundlers from complaining with older versions of React.\n    const _useId = React['use' + 'Id'];\n    if (_useId) {\n        const generatedId = _useId();\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const escapedId = React.useMemo(()=>generatedId.replace(/:/g, ''), [\n            generatedId\n        ]);\n        return providedId || `${idPrefix}${prefix}${escapedId}`;\n    }\n    // Hooks appear to be running conditionally, but they will always run in the same order since it's based on\n    // the version of React being used. This is safe to ignore.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    return React.useMemo(()=>{\n        if (providedId) {\n            return providedId;\n        }\n        return `${idPrefix}${prefix}${++contextValue.current}`;\n    }, [\n        idPrefix,\n        prefix,\n        providedId,\n        contextValue\n    ]);\n}\n", "import * as React from 'react';\n/**\n * React hook to merge multiple React refs (either MutableRefObjects or ref callbacks) into a single ref callback that\n * updates all provided refs\n * @param refs - Refs to collectively update with one ref value.\n * @returns A function with an attached \"current\" prop, so that it can be treated like a RefObject.\n */ export function useMergedRefs(...refs) {\n    'use no memo';\n    const mergedCallback = React.useCallback((value)=>{\n        // Update the \"current\" prop hanging on the function.\n        mergedCallback.current = value;\n        for (const ref of refs){\n            if (typeof ref === 'function') {\n                ref(value);\n            } else if (ref) {\n                // work around the immutability of the React.Ref type\n                ref.current = value;\n            }\n        }\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps -- already exhaustive\n    [\n        ...refs\n    ]);\n    return mergedCallback;\n}\n", "import * as React from 'react';\nconst cache = new WeakMap();\n/**\n * @returns The width in pixels of the scrollbar in the user agent\n */ export function useScrollbarWidth(options) {\n    const { targetDocument, force } = options;\n    return React.useMemo(()=>{\n        if (!targetDocument) {\n            return 0;\n        }\n        if (!force && cache.has(targetDocument)) {\n            return cache.get(targetDocument);\n        }\n        const outer = targetDocument.createElement('div');\n        outer.style.visibility = 'hidden';\n        outer.style.overflow = 'scroll';\n        const inner = targetDocument.createElement('div');\n        outer.appendChild(inner);\n        targetDocument.body.appendChild(outer);\n        const scrollbarWidth = outer.offsetWidth - inner.offsetWidth;\n        outer.remove();\n        cache.set(targetDocument, scrollbarWidth);\n        return scrollbarWidth;\n    }, [\n        targetDocument,\n        force\n    ]);\n}\n", "import { useBrowserTimer } from './useBrowserTimer';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\nconst setTimeoutNoop = (_callback)=>-1;\nconst clearTimeoutNoop = (_handle)=>undefined;\n/**\n * @internal\n * Helper to manage a browser timeout.\n * Ensures that the timeout isn't set multiple times at once and is cleaned up\n * when the component is unloaded.\n *\n * @returns A pair of [setTimeout, clearTimeout] that are stable between renders.\n */ export function useTimeout() {\n    const { targetDocument } = useFluent();\n    const win = targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.defaultView;\n    const setTimerFn = win ? win.setTimeout : setTimeoutNoop;\n    const clearTimerFn = win ? win.clearTimeout : clearTimeoutNoop;\n    return useBrowserTimer(setTimerFn, clearTimerFn);\n}\n", "/**\n * @internal\n * Combine two event callbacks into a single callback function that calls each one in order.\n *\n * Usage example:\n * ```ts\n * state.slot.onChange = mergeCallbacks(state.slot.onChange, ev => {\n *   // Handle onChange\n * });\n * ```\n *\n * The primary use is to avoid the need to capture an existing callback (`state.slot.onChange` in the example) to a\n * local variable before replacing with a new listener that calls the existing one. This helps avoid bugs like:\n * * Infinite recursion by calling the re-assigned state.slot.onChange if it's not captured to a local variable.\n * * Missing a call to the original onChange due to an early return or other conditional.\n *\n * If you need a callback that is stable between renders, wrap the result in {@link useEventCallback}.\n *\n * @param callback1 - The first callback to be called, or undefined\n * @param callback2 - The second callback to be called, or undefined\n *\n * @returns A function that that calls the provided functions in order\n */ export function mergeCallbacks(callback1, callback2) {\n    return (...args)=>{\n        callback1 === null || callback1 === void 0 ? void 0 : callback1(...args);\n        callback2 === null || callback2 === void 0 ? void 0 : callback2(...args);\n    };\n}\n", "import * as React from 'react';\nimport { useControllableState } from '../hooks/useControllableState';\nimport { createSetFromIterable } from '../utils/createSetFromIterable';\nfunction useSelectionState(params) {\n    const [selected, setSelected] = useControllableState({\n        initialState: new Set(),\n        defaultState: React.useMemo(()=>params.defaultSelectedItems && createSetFromIterable(params.defaultSelectedItems), [\n            params.defaultSelectedItems\n        ]),\n        state: React.useMemo(()=>params.selectedItems && createSetFromIterable(params.selectedItems), [\n            params.selectedItems\n        ])\n    });\n    const changeSelection = (event, nextSelectedItems)=>{\n        var _params_onSelectionChange;\n        (_params_onSelectionChange = params.onSelectionChange) === null || _params_onSelectionChange === void 0 ? void 0 : _params_onSelectionChange.call(params, event, {\n            selectedItems: nextSelectedItems\n        });\n        setSelected(nextSelectedItems);\n    };\n    return [\n        selected,\n        changeSelection\n    ];\n}\nfunction useSingleSelection(params) {\n    const [selected, changeSelection] = useSelectionState(params);\n    const methods = {\n        deselectItem: (event)=>changeSelection(event, new Set()),\n        selectItem: (event, itemId)=>changeSelection(event, new Set([\n                itemId\n            ])),\n        toggleAllItems: ()=>{\n            if (process.env.NODE_ENV !== 'production') {\n                throw new Error('[react-utilities]: `toggleAllItems` should not be used in single selection mode');\n            }\n        },\n        toggleItem: (event, itemId)=>changeSelection(event, new Set([\n                itemId\n            ])),\n        clearItems: (event)=>changeSelection(event, new Set()),\n        isSelected: (itemId)=>{\n            var _selected_has;\n            return (_selected_has = selected.has(itemId)) !== null && _selected_has !== void 0 ? _selected_has : false;\n        }\n    };\n    return [\n        selected,\n        methods\n    ];\n}\nfunction useMultipleSelection(params) {\n    const [selected, changeSelection] = useSelectionState(params);\n    const methods = {\n        toggleItem: (event, itemId)=>{\n            const nextSelectedItems = new Set(selected);\n            if (selected.has(itemId)) {\n                nextSelectedItems.delete(itemId);\n            } else {\n                nextSelectedItems.add(itemId);\n            }\n            changeSelection(event, nextSelectedItems);\n        },\n        selectItem: (event, itemId)=>{\n            const nextSelectedItems = new Set(selected);\n            nextSelectedItems.add(itemId);\n            changeSelection(event, nextSelectedItems);\n        },\n        deselectItem: (event, itemId)=>{\n            const nextSelectedItems = new Set(selected);\n            nextSelectedItems.delete(itemId);\n            changeSelection(event, nextSelectedItems);\n        },\n        clearItems: (event)=>{\n            changeSelection(event, new Set());\n        },\n        isSelected: (itemId)=>selected.has(itemId),\n        toggleAllItems: (event, itemIds)=>{\n            const allItemsSelected = itemIds.every((itemId)=>selected.has(itemId));\n            const nextSelectedItems = new Set(selected);\n            if (allItemsSelected) {\n                nextSelectedItems.clear();\n            } else {\n                itemIds.forEach((itemId)=>nextSelectedItems.add(itemId));\n            }\n            changeSelection(event, nextSelectedItems);\n        }\n    };\n    return [\n        selected,\n        methods\n    ];\n}\nexport function useSelection(params) {\n    'use no memo';\n    if (params.selectionMode === 'multiselect') {\n        // selectionMode is a static value, so we can safely ignore rules-of-hooks\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        return useMultipleSelection(params);\n    }\n    // selectionMode is a static value, so we can safely ignore rules-of-hooks\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    return useSingleSelection(params);\n}\n", "import * as React from 'react';\nfunction isFactoryDispatch(newState) {\n    return typeof newState === 'function';\n}\n/**\n * @internal\n *\n * A [`useState`](https://reactjs.org/docs/hooks-reference.html#usestate)-like hook\n * to manage a value that could be either `controlled` or `uncontrolled`,\n * such as a checked state or text input string.\n *\n * @see https://react.dev/learn/sharing-state-between-components#controlled-and-uncontrolled-components for more details on `controlled`/`uncontrolled`\n *\n * @returns an array of the current value and an updater (dispatcher) function.\n * The updater function is referentially stable (won't change during the component's lifecycle).\n * It can take either a new value, or a function which is passed the previous value and returns the new value.\n *\n * ❗️❗️ Calls to the dispatcher will only modify the state if the state is `uncontrolled`.\n * Meaning that if a state is `controlled`, calls to the dispatcher do not modify the state.\n *\n */ export const useControllableState = (options)=>{\n    'use no memo';\n    if (process.env.NODE_ENV !== 'production') {\n        if (options.state !== undefined && options.defaultState !== undefined) {\n            // eslint-disable-next-line no-console\n            console.error(`@fluentui/react-utilities [useControllableState]:\nA component must be either controlled or uncontrolled (specify either the state or the defaultState, but not both).\nDecide between using a controlled or uncontrolled component and remove one of this props.\nMore info: https://reactjs.org/link/controlled-components\n${new Error().stack}`);\n        }\n    }\n    const [internalState, setInternalState] = React.useState(()=>{\n        if (options.defaultState === undefined) {\n            return options.initialState;\n        }\n        return isInitializer(options.defaultState) ? options.defaultState() : options.defaultState;\n    });\n    // Heads up!\n    // This part is specific for controlled mode and mocks behavior of React dispatcher function.\n    const stateValueRef = React.useRef(options.state);\n    React.useEffect(()=>{\n        stateValueRef.current = options.state;\n    }, [\n        options.state\n    ]);\n    const setControlledState = React.useCallback((newState)=>{\n        if (isFactoryDispatch(newState)) {\n            newState(stateValueRef.current);\n        }\n    }, []);\n    return useIsControlled(options.state) ? [\n        options.state,\n        setControlledState\n    ] : [\n        internalState,\n        setInternalState\n    ];\n};\nfunction isInitializer(value) {\n    return typeof value === 'function';\n}\n/**\n * Helper hook to handle previous comparison of controlled/uncontrolled\n * Prints an error when isControlled value switches between subsequent renders\n * @returns - whether the value is controlled\n */ const useIsControlled = (controlledValue)=>{\n    'use no memo';\n    const [isControlled] = React.useState(()=>controlledValue !== undefined);\n    if (process.env.NODE_ENV !== 'production') {\n        // We don't want these warnings in production even though it is against native behaviour\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        React.useEffect(()=>{\n            if (isControlled !== (controlledValue !== undefined)) {\n                const error = new Error();\n                const controlWarning = isControlled ? 'a controlled value to be uncontrolled' : 'an uncontrolled value to be controlled';\n                const undefinedWarning = isControlled ? 'defined to an undefined' : 'undefined to a defined';\n                // eslint-disable-next-line no-console\n                console.error(`@fluentui/react-utilities [useControllableState]:\nA component is changing ${controlWarning}. This is likely caused by the value changing from ${undefinedWarning} value, which should not happen.\nDecide between using a controlled or uncontrolled input element for the lifetime of the component.\nMore info: https://reactjs.org/link/controlled-components\n${error.stack}`);\n            }\n        }, [\n            isControlled,\n            controlledValue\n        ]);\n    }\n    return isControlled;\n};\n", "/**\n * Creates a set from a given iterable, in case the iterable is a set itself, returns the given set instead.\n */ export function createSetFromIterable(iterable) {\n    return iterable instanceof Set ? iterable : new Set(iterable);\n}\n", "import * as React from 'react';\n/**\n * @internal\n * Checks if components was mounted the first time.\n * Since concurrent mode will be released in the future this needs to be verified\n * Currently (React 17) will always render the initial mount once\n * https://codesandbox.io/s/heuristic-brook-s4w0q?file=/src/App.jsx\n * https://codesandbox.io/s/holy-grass-8nieu?file=/src/App.jsx\n *\n * @example\n * const isFirstMount = useFirstMount();\n */ export function useFirstMount() {\n    const isFirst = React.useRef(true);\n    if (isFirst.current) {\n        isFirst.current = false;\n        return true;\n    }\n    return isFirst.current;\n}\n", "import { useReducer } from 'react';\n/**\n * @internal\n * Forces a re-render, similar to `forceUpdate` in class components.\n */ export function useForceUpdate() {\n    return useReducer((x)=>x + 1, 0)[1];\n}\n", "import * as React from 'react';\nimport { useEventCallback } from './useEventCallback';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\nconst DEFAULT_CONTAINS = (parent, child)=>!!(parent === null || parent === void 0 ? void 0 : parent.contains(child));\n/**\n * @internal\n * Utility to perform checks where a click/touch event was made outside a component\n */ export const useOnClickOutside = (options)=>{\n    const { targetDocument } = useFluent();\n    const win = targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.defaultView;\n    const { refs, callback, element, disabled, disabledFocusOnIframe, contains = DEFAULT_CONTAINS } = options;\n    const timeoutId = React.useRef(undefined);\n    useIFrameFocus({\n        element,\n        disabled: disabledFocusOnIframe || disabled,\n        callback,\n        refs,\n        contains\n    });\n    const isMouseDownInsideRef = React.useRef(false);\n    const listener = useEventCallback((ev)=>{\n        if (isMouseDownInsideRef.current) {\n            isMouseDownInsideRef.current = false;\n            return;\n        }\n        const target = ev.composedPath()[0];\n        const isOutside = refs.every((ref)=>!contains(ref.current || null, target));\n        if (isOutside && !disabled) {\n            callback(ev);\n        }\n    });\n    const handleMouseDown = useEventCallback((ev)=>{\n        // Selecting text from inside to outside will rigger click event.\n        // In this case click event target is outside but mouse down event target is inside.\n        // And this click event should be considered as inside click.\n        isMouseDownInsideRef.current = refs.some((ref)=>contains(ref.current || null, ev.target));\n    });\n    React.useEffect(()=>{\n        if (disabled) {\n            return;\n        }\n        // Store the current event to avoid triggering handlers immediately\n        // Note this depends on a deprecated but extremely well supported quirk of the web platform\n        // https://github.com/facebook/react/issues/20074\n        let currentEvent = getWindowEvent(win);\n        const conditionalHandler = (event)=>{\n            // Skip if this event is the same as the one running when we added the handlers\n            if (event === currentEvent) {\n                currentEvent = undefined;\n                return;\n            }\n            listener(event);\n        };\n        // use capture phase because React can update DOM before the event bubbles to the document\n        element === null || element === void 0 ? void 0 : element.addEventListener('click', conditionalHandler, true);\n        element === null || element === void 0 ? void 0 : element.addEventListener('touchstart', conditionalHandler, true);\n        element === null || element === void 0 ? void 0 : element.addEventListener('contextmenu', conditionalHandler, true);\n        element === null || element === void 0 ? void 0 : element.addEventListener('mousedown', handleMouseDown, true);\n        // Garbage collect this event after it's no longer useful to avoid memory leaks\n        timeoutId.current = win === null || win === void 0 ? void 0 : win.setTimeout(()=>{\n            currentEvent = undefined;\n        }, 1);\n        return ()=>{\n            element === null || element === void 0 ? void 0 : element.removeEventListener('click', conditionalHandler, true);\n            element === null || element === void 0 ? void 0 : element.removeEventListener('touchstart', conditionalHandler, true);\n            element === null || element === void 0 ? void 0 : element.removeEventListener('contextmenu', conditionalHandler, true);\n            element === null || element === void 0 ? void 0 : element.removeEventListener('mousedown', handleMouseDown, true);\n            win === null || win === void 0 ? void 0 : win.clearTimeout(timeoutId.current);\n            currentEvent = undefined;\n        };\n    }, [\n        listener,\n        element,\n        disabled,\n        handleMouseDown,\n        win\n    ]);\n};\nconst getWindowEvent = (target)=>{\n    if (target) {\n        var _target_ownerDocument_defaultView, _target_ownerDocument;\n        if (typeof target.window === 'object' && target.window === target) {\n            // eslint-disable-next-line deprecation/deprecation\n            return target.event;\n        }\n        var _target_ownerDocument_defaultView_event;\n        // eslint-disable-next-line deprecation/deprecation\n        return (_target_ownerDocument_defaultView_event = (_target_ownerDocument = target.ownerDocument) === null || _target_ownerDocument === void 0 ? void 0 : (_target_ownerDocument_defaultView = _target_ownerDocument.defaultView) === null || _target_ownerDocument_defaultView === void 0 ? void 0 : _target_ownerDocument_defaultView.event) !== null && _target_ownerDocument_defaultView_event !== void 0 ? _target_ownerDocument_defaultView_event : undefined;\n    }\n    return undefined;\n};\nconst FUI_FRAME_EVENT = 'fuiframefocus';\n/**\n * Since click events do not propagate past iframes, we use focus to detect if a\n * click has happened inside an iframe, since the only ways of focusing inside an\n * iframe are:\n *   - clicking inside\n *   - tabbing inside\n *\n * Polls the value of `document.activeElement`. If it is an iframe, then dispatch\n * a custom DOM event. When the custom event is received call the provided callback\n */ const useIFrameFocus = (options)=>{\n    const { disabled, element: targetDocument, callback, contains = DEFAULT_CONTAINS, pollDuration = 1000, refs } = options;\n    const timeoutRef = React.useRef();\n    const listener = useEventCallback((e)=>{\n        const isOutside = refs.every((ref)=>!contains(ref.current || null, e.target));\n        if (isOutside && !disabled) {\n            callback(e);\n        }\n    });\n    // Adds listener to the custom iframe focus event\n    React.useEffect(()=>{\n        if (disabled) {\n            return;\n        }\n        targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.addEventListener(FUI_FRAME_EVENT, listener, true);\n        return ()=>{\n            targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.removeEventListener(FUI_FRAME_EVENT, listener, true);\n        };\n    }, [\n        targetDocument,\n        disabled,\n        listener\n    ]);\n    // Starts polling for the active element\n    React.useEffect(()=>{\n        var _targetDocument_defaultView;\n        if (disabled) {\n            return;\n        }\n        timeoutRef.current = targetDocument === null || targetDocument === void 0 ? void 0 : (_targetDocument_defaultView = targetDocument.defaultView) === null || _targetDocument_defaultView === void 0 ? void 0 : _targetDocument_defaultView.setInterval(()=>{\n            const activeElement = targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.activeElement;\n            if ((activeElement === null || activeElement === void 0 ? void 0 : activeElement.tagName) === 'IFRAME' || (activeElement === null || activeElement === void 0 ? void 0 : activeElement.tagName) === 'WEBVIEW') {\n                const event = new CustomEvent(FUI_FRAME_EVENT, {\n                    bubbles: true\n                });\n                activeElement.dispatchEvent(event);\n            }\n        }, pollDuration);\n        return ()=>{\n            var _targetDocument_defaultView;\n            targetDocument === null || targetDocument === void 0 ? void 0 : (_targetDocument_defaultView = targetDocument.defaultView) === null || _targetDocument_defaultView === void 0 ? void 0 : _targetDocument_defaultView.clearTimeout(timeoutRef.current);\n        };\n    }, [\n        targetDocument,\n        disabled,\n        pollDuration\n    ]);\n};\n", "import * as React from 'react';\nimport { useEventCallback } from './useEventCallback';\n/**\n * @internal\n * Utility to perform checks where a click/touch event was made outside a component\n */ export const useOnScrollOutside = (options)=>{\n    const { refs, callback, element, disabled, contains: containsProp } = options;\n    const listener = useEventCallback((ev)=>{\n        const contains = containsProp || ((parent, child)=>!!(parent === null || parent === void 0 ? void 0 : parent.contains(child)));\n        const target = ev.composedPath()[0];\n        const isOutside = refs.every((ref)=>!contains(ref.current || null, target));\n        if (isOutside && !disabled) {\n            callback(ev);\n        }\n    });\n    React.useEffect(()=>{\n        if (disabled) {\n            return;\n        }\n        element === null || element === void 0 ? void 0 : element.addEventListener('wheel', listener);\n        element === null || element === void 0 ? void 0 : element.addEventListener('touchmove', listener);\n        return ()=>{\n            element === null || element === void 0 ? void 0 : element.removeEventListener('wheel', listener);\n            element === null || element === void 0 ? void 0 : element.removeEventListener('touchmove', listener);\n        };\n    }, [\n        listener,\n        element,\n        disabled\n    ]);\n};\n", "import * as React from 'react';\n/**\n * @internal\n */ export const usePrevious = (value)=>{\n    const ref = React.useRef(null);\n    React.useEffect(()=>{\n        ref.current = value;\n    }, [\n        value\n    ]);\n    return ref.current;\n};\n", "/**\n * @internal\n * Clamps `value` to a number between the min and max.\n *\n * @param value - the value to be clamped\n * @param min - the lowest valid value\n * @param max - the highest valid value\n */ export const clamp = (value, min, max)=>Math.max(min, Math.min(max, value || 0));\n", "/**\n * @internal\n * Finds and swaps a provided key for it's right to left format.\n */ export const getRTLSafeKey = (key, dir)=>{\n    if (dir === 'rtl') {\n        switch(key){\n            case 'ArrowLeft':\n                {\n                    return 'ArrowRight';\n                }\n            case 'ArrowRight':\n                {\n                    return 'ArrowLeft';\n                }\n        }\n    }\n    return key;\n};\n", "/**\n * Verifies if a given node is an HTMLElement,\n * this method works seamlessly with frames and elements from different documents\n *\n * This is preferred over simply using `instanceof`.\n * Since `instanceof` might be problematic while operating with [multiple realms](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/instanceof#instanceof_and_multiple_realms)\n *\n * @example\n * ```ts\n * isHTMLElement(event.target) && event.target.focus()\n * isHTMLElement(event.target, {constructorName: 'HTMLInputElement'}) && event.target.value // some value\n * ```\n *\n */ export function isHTMLElement(element, options) {\n    var _typedElement_ownerDocument;\n    const typedElement = element;\n    var _options_constructorName;\n    return Boolean((typedElement === null || typedElement === void 0 ? void 0 : (_typedElement_ownerDocument = typedElement.ownerDocument) === null || _typedElement_ownerDocument === void 0 ? void 0 : _typedElement_ownerDocument.defaultView) && typedElement instanceof typedElement.ownerDocument.defaultView[(_options_constructorName = options === null || options === void 0 ? void 0 : options.constructorName) !== null && _options_constructorName !== void 0 ? _options_constructorName : 'HTMLElement']);\n}\n", "import { isHTMLElement } from './isHTMLElement';\n/**\n * @internal\n * Checks that the element has default behaviour from user input on click or 'Enter'/'Space' keys\n */ export function isInteractiveHTMLElement(element) {\n    if (!isHTMLElement(element)) {\n        return false;\n    }\n    const { tagName } = element;\n    switch(tagName){\n        case 'BUTTON':\n        case 'A':\n        case 'INPUT':\n        case 'TEXTAREA':\n            return true;\n    }\n    return element.isContentEditable;\n}\n", "/**\n * @internal\n */ /**\n * @internal\n * @param compare - comparison function for items\n * @returns Priority queue implemented with a min heap\n */ export function createPriorityQueue(compare) {\n    const arr = [];\n    let size = 0;\n    const swap = (a, b)=>{\n        const tmp = arr[a];\n        arr[a] = arr[b];\n        arr[b] = tmp;\n    };\n    const heapify = (i)=>{\n        let smallest = i;\n        const l = left(i);\n        const r = right(i);\n        if (l < size && compare(arr[l], arr[smallest]) < 0) {\n            smallest = l;\n        }\n        if (r < size && compare(arr[r], arr[smallest]) < 0) {\n            smallest = r;\n        }\n        if (smallest !== i) {\n            swap(smallest, i);\n            heapify(smallest);\n        }\n    };\n    const dequeue = ()=>{\n        if (size === 0) {\n            throw new Error('Priority queue empty');\n        }\n        const res = arr[0];\n        arr[0] = arr[--size];\n        heapify(0);\n        return res;\n    };\n    const peek = ()=>{\n        if (size === 0) {\n            return null;\n        }\n        return arr[0];\n    };\n    const enqueue = (item)=>{\n        arr[size++] = item;\n        let i = size - 1;\n        let p = parent(i);\n        while(i > 0 && compare(arr[p], arr[i]) > 0){\n            swap(p, i);\n            i = p;\n            p = parent(i);\n        }\n    };\n    const contains = (item)=>{\n        const index = arr.indexOf(item);\n        return index >= 0 && index < size;\n    };\n    const remove = (item)=>{\n        const i = arr.indexOf(item);\n        if (i === -1 || i >= size) {\n            return;\n        }\n        arr[i] = arr[--size];\n        heapify(i);\n    };\n    const clear = ()=>{\n        size = 0;\n    };\n    const all = ()=>{\n        return arr.slice(0, size);\n    };\n    return {\n        all,\n        clear,\n        contains,\n        dequeue,\n        enqueue,\n        peek,\n        remove,\n        size: ()=>size\n    };\n}\nconst left = (i)=>{\n    return 2 * i + 1;\n};\nconst right = (i)=>{\n    return 2 * i + 2;\n};\nconst parent = (i)=>{\n    return Math.floor((i - 1) / 2);\n};\n", "import * as React from 'react';\nimport { isFluentTrigger } from './isFluentTrigger';\n/**\n * @internal\n * resolve the trigger props to the children, either by calling the render function, or cloning with the new props.\n */ export function applyTriggerPropsToChildren(children, triggerChildProps) {\n    if (typeof children === 'function') {\n        return children(triggerChildProps);\n    } else if (children) {\n        return cloneTriggerTree(children, triggerChildProps);\n    }\n    // Components in React should return either JSX elements or \"null\", otherwise React will throw:\n    //   Nothing was returned from render.\n    //   This usually means a return statement is missing. Or, to render nothing, return null.\n    return children || null;\n}\n/**\n * Clones a React element tree, and applies the given props to the first grandchild that is not\n * a FluentTriggerComponent or React Fragment (the same element returned by {@link getTriggerChild}).\n */ function cloneTriggerTree(child, triggerProps) {\n    if (!React.isValidElement(child) || child.type === React.Fragment) {\n        throw new Error('A trigger element must be a single element for this component. ' + \"Please ensure that you're not using React Fragments.\");\n    }\n    if (isFluentTrigger(child)) {\n        const grandchild = cloneTriggerTree(child.props.children, triggerProps);\n        return React.cloneElement(child, undefined, grandchild);\n    } else {\n        return React.cloneElement(child, triggerProps);\n    }\n}\n", "import * as React from 'react';\n/**\n * @internal\n * Checks if a given element is a FluentUI trigger (e.g. `MenuTrigger` or `Tooltip`).\n * See the {@link FluentTriggerComponent} type for more info.\n */ export function isFluentTrigger(element) {\n    return Boolean(element.type.isFluentTriggerComponent);\n}\n", "import * as React from 'react';\nimport { isFluentTrigger } from './isFluentTrigger';\n/**\n * @internal\n * Gets the trigger element of a FluentTriggerComponent (such as Tooltip or MenuTrigger).\n *\n * In the case where the immediate child is itself a FluentTriggerComponent and/or React Fragment,\n * it returns the first descendant that is _not_ a FluentTriggerComponent or Fragment.\n * This allows multiple triggers to be stacked, and still apply their props to the actual trigger element.\n *\n * For example, the following returns `<div id=\"child\" />`:\n * ```jsx\n * getTriggerChild(\n *   <Tooltip>\n *     <MenuTrigger>\n *       <div id=\"child\" />\n *     </MenuTrigger>\n *   </Tooltip>\n * );\n * ```\n *\n * In the case where the immediate child is not a valid element,\n * null is returned\n */ export function getTriggerChild(children) {\n    if (!React.isValidElement(children)) {\n        return null;\n    }\n    return isFluentTrigger(children) ? getTriggerChild(// FIXME: This casting should be unnecessary as isFluentTrigger is a guard type method,\n    // but for some reason it's failing on build\n    children.props.children) : children;\n}\n", "import * as React from 'react';\n", "import * as React from 'react';\n/**\n * Returns true if event is a touch event. Useful when sharing logic between touch and mouse interactions.\n */ export function isTouchEvent(event) {\n    return event.type.startsWith('touch');\n}\n/**\n * Returns true if event is a mouse event. Useful when sharing logic between touch and mouse interactions.\n */ export function isMouseEvent(event) {\n    return event.type.startsWith('mouse') || [\n        'click',\n        'contextmenu',\n        'dblclick'\n    ].indexOf(event.type) > -1;\n}\n/**\n * Returns an object with clientX, clientY for TouchOrMouseEvent.\n * Returns zeros in case the event is not a mouse or a touch event.\n */ export function getEventClientCoords(event) {\n    if (isMouseEvent(event)) {\n        return {\n            clientX: event.clientX,\n            clientY: event.clientY\n        };\n    } else if (isTouchEvent(event)) {\n        return {\n            clientX: event.touches[0].clientX,\n            clientY: event.touches[0].clientY\n        };\n    } else {\n        if (process.env.NODE_ENV !== 'production') {\n            throw new Error('@fluentui/react-utilities]: Unable to get clientX. Unknown event type.');\n        }\n        return {\n            clientX: 0,\n            clientY: 0\n        };\n    }\n}\n", "import * as React from 'react';\n", "/**\n * Determines whether or not an element has the virtual hierarchy extension.\n * @internal\n */ export function isVirtualElement(element) {\n    return element && !!element._virtual;\n}\n", "import { isVirtualElement } from './isVirtualElement';\n/**\n * Gets the virtual parent given the child element, if it exists.\n * @internal\n */ function getVirtualParent(child) {\n    return isVirtualElement(child) ? child._virtual.parent || null : null;\n}\n/**\n * Gets the element which is the parent of a given element.\n * This method prefers the virtual parent over real DOM parent when present.\n * @internal\n */ export function getParent(child, options = {}) {\n    if (!child) {\n        return null;\n    }\n    if (!options.skipVirtual) {\n        const virtualParent = getVirtualParent(child);\n        if (virtualParent) {\n            return virtualParent;\n        }\n    }\n    const parent = child.parentNode;\n    if (parent && parent.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n        return parent.host;\n    }\n    return parent;\n}\n", "import { getParent } from './getParent';\n/**\n * Similar functionality to `element.contains` DOM API for use without of order DOM elements that\n * checks the virtual parent hierarchy. If a virtual parents exists, it is chosen over the actual parent\n *\n * @internal\n * @returns true if the child can find the parent in its virtual hierarchy\n */ export function elementContains(parent, child) {\n    if (!parent || !child) {\n        return false;\n    }\n    if (parent === child) {\n        return true;\n    } else {\n        // Tracks references of nodes that have been visited to prevent infinite loops\n        const set = new WeakSet();\n        while(child){\n            const nextParent = getParent(child, {\n                skipVirtual: set.has(child)\n            });\n            set.add(child);\n            if (nextParent === parent) {\n                return true;\n            }\n            child = nextParent;\n        }\n    }\n    return false;\n}\n", "/**\n * Sets the virtual parent of an element.\n *\n * @internal\n * @param child - Theme element to set the virtual parent\n * @param parent - The virtual parent, use `undefined` to remove a virtual parent relationship\n */ export function setVirtualParent(child, parent) {\n    if (!child) {\n        return;\n    }\n    const virtualChild = child;\n    if (!virtualChild._virtual) {\n        virtualChild._virtual = {};\n    }\n    virtualChild._virtual.parent = parent;\n}\n", "/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n// IE11 compat, checks if WeakRef is supported\nexport const _canUseWeakRef = typeof WeakRef !== \"undefined\";\n\n/**\n * Allows disposable instances to be used\n */\nexport interface Disposable {\n  isDisposed?(): boolean;\n}\n\n/**\n * WeakRef wrapper around a HTMLElement that also supports IE11\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakRef}\n * @internal\n */\nexport class WeakRefInstance<T extends Disposable | object> {\n  private _weakRef?: WeakRef<T>;\n  private _instance?: T;\n\n  constructor(instance: T) {\n    if (_canUseWeakRef && typeof instance === \"object\") {\n      this._weakRef = new WeakRef(instance);\n    } else {\n      this._instance = instance;\n    }\n  }\n\n  /**\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakRef/deref}\n   */\n  deref(): T | undefined {\n    let instance: T | undefined;\n\n    if (this._weakRef) {\n      instance = this._weakRef?.deref();\n\n      if (!instance) {\n        delete this._weakRef;\n      }\n    } else {\n      instance = this._instance;\n      if ((instance as Disposable)?.isDisposed?.()) {\n        delete this._instance;\n      }\n    }\n\n    return instance;\n  }\n}\n", "/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { WeakRefInstance } from \"./WeakRefInstance\";\n\nexport const KEYBORG_FOCUSIN = \"keyborg:focusin\";\nexport const KEYBORG_FOCUSOUT = \"keyborg:focusout\";\n\ninterface KeyborgFocus {\n  /**\n   * This is the native `focus` function that is retained so that it can be restored when keyborg is disposed\n   */\n  __keyborgNativeFocus?: (options?: FocusOptions | undefined) => void;\n}\n\ninterface KeyborgFocusEventData {\n  focusInHandler: (e: FocusEvent) => void;\n  focusOutHandler: (e: FocusEvent) => void;\n  lastFocusedProgrammatically?: WeakRefInstance<HTMLElement>;\n  shadowTargets: Set<WeakRefInstance<ShadowRoot>>;\n}\n\n/**\n * Extends the global window with keyborg focus event data\n */\ninterface WindowWithKeyborgFocusEvent extends Window {\n  HTMLElement: typeof HTMLElement;\n  __keyborgData?: KeyborgFocusEventData;\n}\n\nfunction canOverrideNativeFocus(win: Window): boolean {\n  const HTMLElement = (win as WindowWithKeyborgFocusEvent).HTMLElement;\n  const origFocus = HTMLElement.prototype.focus;\n\n  let isCustomFocusCalled = false;\n\n  HTMLElement.prototype.focus = function focus(): void {\n    isCustomFocusCalled = true;\n  };\n\n  const btn = win.document.createElement(\"button\");\n\n  btn.focus();\n\n  HTMLElement.prototype.focus = origFocus;\n\n  return isCustomFocusCalled;\n}\n\nlet _canOverrideNativeFocus = false;\n\nexport interface KeyborgFocusInEventDetails {\n  relatedTarget?: HTMLElement;\n  isFocusedProgrammatically?: boolean;\n  originalEvent?: FocusEvent;\n}\n\nexport interface KeyborgFocusInEvent\n  extends CustomEvent<KeyborgFocusInEventDetails> {\n  /**\n   * @deprecated - used `event.detail`\n   */\n  details?: KeyborgFocusInEventDetails;\n}\n\nexport interface KeyborgFocusOutEventDetails {\n  originalEvent: FocusEvent;\n}\n\nexport type KeyborgFocusOutEvent = CustomEvent<KeyborgFocusOutEventDetails>;\n\n/**\n * Guarantees that the native `focus` will be used\n */\nexport function nativeFocus(element: HTMLElement): void {\n  const focus = element.focus as KeyborgFocus;\n\n  if (focus.__keyborgNativeFocus) {\n    focus.__keyborgNativeFocus.call(element);\n  } else {\n    element.focus();\n  }\n}\n\n/**\n * Overrides the native `focus` and setups the keyborg focus event\n */\nexport function setupFocusEvent(win: Window): void {\n  const kwin = win as WindowWithKeyborgFocusEvent;\n\n  if (!_canOverrideNativeFocus) {\n    _canOverrideNativeFocus = canOverrideNativeFocus(kwin);\n  }\n\n  const origFocus = kwin.HTMLElement.prototype.focus;\n\n  if ((origFocus as KeyborgFocus).__keyborgNativeFocus) {\n    // Already set up.\n    return;\n  }\n\n  kwin.HTMLElement.prototype.focus = focus;\n\n  const shadowTargets: Set<WeakRefInstance<ShadowRoot>> = new Set();\n\n  const focusOutHandler = (e: FocusEvent) => {\n    const target = e.target as HTMLElement;\n\n    if (!target) {\n      return;\n    }\n\n    const event: KeyborgFocusOutEvent = new CustomEvent(KEYBORG_FOCUSOUT, {\n      cancelable: true,\n      bubbles: true,\n      // Allows the event to bubble past an open shadow root\n      composed: true,\n      detail: {\n        originalEvent: e,\n      },\n    });\n\n    target.dispatchEvent(event);\n  };\n\n  const focusInHandler = (e: FocusEvent) => {\n    const target = e.target as HTMLElement;\n\n    if (!target) {\n      return;\n    }\n\n    let node: Node | null | undefined = e.composedPath()[0] as\n      | Node\n      | null\n      | undefined;\n\n    const currentShadows: Set<ShadowRoot> = new Set();\n\n    while (node) {\n      if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n        currentShadows.add(node as ShadowRoot);\n        node = (node as ShadowRoot).host;\n      } else {\n        node = node.parentNode;\n      }\n    }\n\n    for (const shadowRootWeakRef of shadowTargets) {\n      const shadowRoot = shadowRootWeakRef.deref();\n\n      if (!shadowRoot || !currentShadows.has(shadowRoot)) {\n        shadowTargets.delete(shadowRootWeakRef);\n\n        if (shadowRoot) {\n          shadowRoot.removeEventListener(\"focusin\", focusInHandler, true);\n          shadowRoot.removeEventListener(\"focusout\", focusOutHandler, true);\n        }\n      }\n    }\n\n    onFocusIn(target, (e.relatedTarget as HTMLElement | null) || undefined);\n  };\n\n  const onFocusIn = (\n    target: Element,\n    relatedTarget?: HTMLElement,\n    originalEvent?: FocusEvent,\n  ) => {\n    const shadowRoot = target.shadowRoot;\n\n    if (shadowRoot) {\n      /**\n       * https://bugs.chromium.org/p/chromium/issues/detail?id=1512028\n       * focusin events don't bubble up through an open shadow root once focus is inside\n       * once focus moves into a shadow root - we drop the same focusin handler there\n       * keyborg's custom event will still bubble up since it is composed\n       * event handlers should be cleaned up once focus leaves the shadow root.\n       *\n       * When a focusin event is dispatched from a shadow root, its target is the shadow root parent.\n       * Each shadow root encounter requires a new capture listener.\n       * Why capture? - we want to follow the focus event in order or descending nested shadow roots\n       * When there are no more shadow root targets - dispatch the keyborg:focusin event\n       *\n       * 1. no focus event\n       * > document - capture listener ✅\n       *   > shadow root 1\n       *     > shadow root 2\n       *       > shadow root 3\n       *         > focused element\n       *\n       * 2. focus event received by document listener\n       * > document - capture listener ✅ (focus event here)\n       *   > shadow root 1 - capture listener ✅\n       *     > shadow root 2\n       *       > shadow root 3\n       *         > focused element\n\n       * 3. focus event received by root l1 listener\n       * > document - capture listener ✅\n       *   > shadow root 1 - capture listener ✅ (focus event here)\n       *     > shadow root 2 - capture listener ✅\n       *       > shadow root 3\n       *         > focused element\n       *\n       * 4. focus event received by root l2 listener\n       * > document - capture listener ✅\n       *   > shadow root 1 - capture listener ✅\n       *     > shadow root 2 - capture listener ✅ (focus event here)\n       *       > shadow root 3 - capture listener ✅\n       *         > focused element\n       *\n       * 5. focus event received by root l3 listener, no more shadow root targets\n       * > document - capture listener ✅\n       *   > shadow root 1 - capture listener ✅\n       *     > shadow root 2 - capture listener ✅\n       *       > shadow root 3 - capture listener ✅ (focus event here)\n       *         > focused element ✅ (no shadow root - dispatch keyborg event)\n       */\n\n      for (const shadowRootWeakRef of shadowTargets) {\n        if (shadowRootWeakRef.deref() === shadowRoot) {\n          return;\n        }\n      }\n\n      shadowRoot.addEventListener(\"focusin\", focusInHandler, true);\n      shadowRoot.addEventListener(\"focusout\", focusOutHandler, true);\n\n      shadowTargets.add(new WeakRefInstance(shadowRoot));\n\n      return;\n    }\n\n    const details: KeyborgFocusInEventDetails = {\n      relatedTarget,\n      originalEvent,\n    };\n\n    const event: KeyborgFocusInEvent = new CustomEvent(KEYBORG_FOCUSIN, {\n      cancelable: true,\n      bubbles: true,\n      // Allows the event to bubble past an open shadow root\n      composed: true,\n      detail: details,\n    });\n\n    // Tabster (and other users) can still use the legacy details field - keeping for backwards compat\n    event.details = details;\n\n    if (_canOverrideNativeFocus || data.lastFocusedProgrammatically) {\n      details.isFocusedProgrammatically =\n        target === data.lastFocusedProgrammatically?.deref();\n\n      data.lastFocusedProgrammatically = undefined;\n    }\n\n    target.dispatchEvent(event);\n  };\n\n  const data: KeyborgFocusEventData = (kwin.__keyborgData = {\n    focusInHandler,\n    focusOutHandler,\n    shadowTargets,\n  });\n\n  kwin.document.addEventListener(\n    \"focusin\",\n    kwin.__keyborgData.focusInHandler,\n    true,\n  );\n\n  kwin.document.addEventListener(\n    \"focusout\",\n    kwin.__keyborgData.focusOutHandler,\n    true,\n  );\n\n  function focus(this: HTMLElement) {\n    const keyborgNativeFocusEvent = (kwin as WindowWithKeyborgFocusEvent)\n      .__keyborgData;\n\n    if (keyborgNativeFocusEvent) {\n      keyborgNativeFocusEvent.lastFocusedProgrammatically = new WeakRefInstance(\n        this,\n      );\n    }\n\n    // eslint-disable-next-line prefer-rest-params\n    return origFocus.apply(this, arguments);\n  }\n\n  let activeElement = kwin.document.activeElement as Element | null;\n\n  // If keyborg is created with the focus inside shadow root, we need\n  // to go through the shadows up to make sure all relevant shadows\n  // have focus handlers attached.\n  while (activeElement && activeElement.shadowRoot) {\n    onFocusIn(activeElement);\n    activeElement = activeElement.shadowRoot.activeElement;\n  }\n\n  (focus as KeyborgFocus).__keyborgNativeFocus = origFocus;\n}\n\n/**\n * Removes keyborg event listeners and custom focus override\n * @param win The window that stores keyborg focus events\n */\nexport function disposeFocusEvent(win: Window): void {\n  const kwin = win as WindowWithKeyborgFocusEvent;\n  const proto = kwin.HTMLElement.prototype;\n  const origFocus = (proto.focus as KeyborgFocus).__keyborgNativeFocus;\n  const keyborgNativeFocusEvent = kwin.__keyborgData;\n\n  if (keyborgNativeFocusEvent) {\n    kwin.document.removeEventListener(\n      \"focusin\",\n      keyborgNativeFocusEvent.focusInHandler,\n      true,\n    );\n\n    kwin.document.removeEventListener(\n      \"focusout\",\n      keyborgNativeFocusEvent.focusOutHandler,\n      true,\n    );\n\n    for (const shadowRootWeakRef of keyborgNativeFocusEvent.shadowTargets) {\n      const shadowRoot = shadowRootWeakRef.deref();\n\n      if (shadowRoot) {\n        shadowRoot.removeEventListener(\n          \"focusin\",\n          keyborgNativeFocusEvent.focusInHandler,\n          true,\n        );\n        shadowRoot.removeEventListener(\n          \"focusout\",\n          keyborgNativeFocusEvent.focusOutHandler,\n          true,\n        );\n      }\n    }\n\n    keyborgNativeFocusEvent.shadowTargets.clear();\n\n    delete kwin.__keyborgData;\n  }\n\n  if (origFocus) {\n    proto.focus = origFocus;\n  }\n}\n\n/**\n * @param win The window that stores keyborg focus events\n * @returns The last element focused with element.focus()\n */\nexport function getLastFocusedProgrammatically(\n  win: Window,\n): HTMLElement | null | undefined {\n  const keyborgNativeFocusEvent = (win as WindowWithKeyborgFocusEvent)\n    .__keyborgData;\n\n  return keyborgNativeFocusEvent\n    ? keyborgNativeFocusEvent.lastFocusedProgrammatically?.deref() || null\n    : undefined;\n}\n", "/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n  disposeFocusEvent,\n  KeyborgFocusInEvent,\n  KEYBORG_FOCUSIN,\n  setupFocusEvent,\n} from \"./FocusEvent\";\nimport { Disposable } from \"./WeakRefInstance\";\n\ninterface WindowWithKeyborg extends Window {\n  __keyborg?: {\n    core: KeyborgCore;\n    refs: { [id: string]: Keyborg };\n  };\n}\n\nconst _dismissTimeout = 500; // When a key from dismissKeys is pressed and the focus is not moved\n// during _dismissTimeout time, dismiss the keyboard navigation mode.\n\nlet _lastId = 0;\n\nexport interface KeyborgProps {\n  // Keys to be used to trigger keyboard navigation mode. By default, any key will trigger\n  // it. Could be limited to, for example, just Tab (or Tab and arrow keys).\n  triggerKeys?: number[];\n  // Keys to be used to dismiss keyboard navigation mode using keyboard (in addition to\n  // mouse clicks which dismiss it). For example, Esc could be used to dismiss.\n  dismissKeys?: number[];\n}\n\nexport type KeyborgCallback = (isNavigatingWithKeyboard: boolean) => void;\n\n/**\n * Manages a collection of Keyborg instances in a window/document and updates keyborg state\n */\nclass KeyborgCore implements Disposable {\n  readonly id: string;\n\n  private _win?: WindowWithKeyborg;\n  private _isMouseOrTouchUsedTimer: number | undefined;\n  private _dismissTimer: number | undefined;\n  private _triggerKeys?: Set<number>;\n  private _dismissKeys?: Set<number>;\n  private _isNavigatingWithKeyboard_DO_NOT_USE = false;\n\n  constructor(win: WindowWithKeyborg, props?: KeyborgProps) {\n    this.id = \"c\" + ++_lastId;\n    this._win = win;\n    const doc = win.document;\n\n    if (props) {\n      const triggerKeys = props.triggerKeys;\n      const dismissKeys = props.dismissKeys;\n\n      if (triggerKeys?.length) {\n        this._triggerKeys = new Set(triggerKeys);\n      }\n\n      if (dismissKeys?.length) {\n        this._dismissKeys = new Set(dismissKeys);\n      }\n    }\n\n    doc.addEventListener(KEYBORG_FOCUSIN, this._onFocusIn, true); // Capture!\n    doc.addEventListener(\"mousedown\", this._onMouseDown, true); // Capture!\n    win.addEventListener(\"keydown\", this._onKeyDown, true); // Capture!\n\n    doc.addEventListener(\"touchstart\", this._onMouseOrTouch, true); // Capture!\n    doc.addEventListener(\"touchend\", this._onMouseOrTouch, true); // Capture!\n    doc.addEventListener(\"touchcancel\", this._onMouseOrTouch, true); // Capture!\n\n    setupFocusEvent(win);\n  }\n\n  get isNavigatingWithKeyboard() {\n    return this._isNavigatingWithKeyboard_DO_NOT_USE;\n  }\n\n  set isNavigatingWithKeyboard(val: boolean) {\n    if (this._isNavigatingWithKeyboard_DO_NOT_USE !== val) {\n      this._isNavigatingWithKeyboard_DO_NOT_USE = val;\n      this.update();\n    }\n  }\n\n  dispose(): void {\n    const win = this._win;\n\n    if (win) {\n      if (this._isMouseOrTouchUsedTimer) {\n        win.clearTimeout(this._isMouseOrTouchUsedTimer);\n        this._isMouseOrTouchUsedTimer = undefined;\n      }\n\n      if (this._dismissTimer) {\n        win.clearTimeout(this._dismissTimer);\n        this._dismissTimer = undefined;\n      }\n\n      disposeFocusEvent(win);\n\n      const doc = win.document;\n\n      doc.removeEventListener(KEYBORG_FOCUSIN, this._onFocusIn, true); // Capture!\n      doc.removeEventListener(\"mousedown\", this._onMouseDown, true); // Capture!\n      win.removeEventListener(\"keydown\", this._onKeyDown, true); // Capture!\n\n      doc.removeEventListener(\"touchstart\", this._onMouseOrTouch, true); // Capture!\n      doc.removeEventListener(\"touchend\", this._onMouseOrTouch, true); // Capture!\n      doc.removeEventListener(\"touchcancel\", this._onMouseOrTouch, true); // Capture!\n\n      delete this._win;\n    }\n  }\n\n  isDisposed(): boolean {\n    return !!this._win;\n  }\n\n  /**\n   * Updates all keyborg instances with the keyboard navigation state\n   */\n  update(): void {\n    const keyborgs = this._win?.__keyborg?.refs;\n\n    if (keyborgs) {\n      for (const id of Object.keys(keyborgs)) {\n        Keyborg.update(keyborgs[id], this.isNavigatingWithKeyboard);\n      }\n    }\n  }\n\n  private _onFocusIn = (e: KeyborgFocusInEvent) => {\n    // When the focus is moved not programmatically and without keydown events,\n    // it is likely that the focus is moved by screen reader (as it might swallow\n    // the events when the screen reader shortcuts are used). The screen reader\n    // usage is keyboard navigation.\n\n    if (this._isMouseOrTouchUsedTimer) {\n      // There was a mouse or touch event recently.\n      return;\n    }\n\n    if (this.isNavigatingWithKeyboard) {\n      return;\n    }\n\n    const details = e.detail;\n\n    if (!details.relatedTarget) {\n      return;\n    }\n\n    if (\n      details.isFocusedProgrammatically ||\n      details.isFocusedProgrammatically === undefined\n    ) {\n      // The element is focused programmatically, or the programmatic focus detection\n      // is not working.\n      return;\n    }\n\n    this.isNavigatingWithKeyboard = true;\n  };\n\n  private _onMouseDown = (e: MouseEvent): void => {\n    if (\n      e.buttons === 0 ||\n      (e.clientX === 0 && e.clientY === 0 && e.screenX === 0 && e.screenY === 0)\n    ) {\n      // This is most likely an event triggered by the screen reader to perform\n      // an action on an element, do not dismiss the keyboard navigation mode.\n      return;\n    }\n\n    this._onMouseOrTouch();\n  };\n\n  private _onMouseOrTouch = (): void => {\n    const win = this._win;\n\n    if (win) {\n      if (this._isMouseOrTouchUsedTimer) {\n        win.clearTimeout(this._isMouseOrTouchUsedTimer);\n      }\n\n      this._isMouseOrTouchUsedTimer = win.setTimeout(() => {\n        delete this._isMouseOrTouchUsedTimer;\n      }, 1000); // Keeping the indication of mouse or touch usage for some time.\n    }\n\n    this.isNavigatingWithKeyboard = false;\n  };\n\n  private _onKeyDown = (e: KeyboardEvent): void => {\n    const isNavigatingWithKeyboard = this.isNavigatingWithKeyboard;\n\n    if (isNavigatingWithKeyboard) {\n      if (this._shouldDismissKeyboardNavigation(e)) {\n        this._scheduleDismiss();\n      }\n    } else {\n      if (this._shouldTriggerKeyboardNavigation(e)) {\n        this.isNavigatingWithKeyboard = true;\n      }\n    }\n  };\n\n  /**\n   * @returns whether the keyboard event should trigger keyboard navigation mode\n   */\n  private _shouldTriggerKeyboardNavigation(e: KeyboardEvent) {\n    // TODO Some rich text fields can allow Tab key for indentation so it doesn't\n    // need to be a navigation key. If there is a bug regarding that we should revisit\n    if (e.key === \"Tab\") {\n      return true;\n    }\n\n    const activeElement = this._win?.document\n      .activeElement as HTMLElement | null;\n    const isTriggerKey = !this._triggerKeys || this._triggerKeys.has(e.keyCode);\n\n    const isEditable =\n      activeElement &&\n      (activeElement.tagName === \"INPUT\" ||\n        activeElement.tagName === \"TEXTAREA\" ||\n        activeElement.isContentEditable);\n\n    return isTriggerKey && !isEditable;\n  }\n\n  /**\n   * @returns whether the keyboard event should dismiss keyboard navigation mode\n   */\n  private _shouldDismissKeyboardNavigation(e: KeyboardEvent) {\n    return this._dismissKeys?.has(e.keyCode);\n  }\n\n  private _scheduleDismiss(): void {\n    const win = this._win;\n\n    if (win) {\n      if (this._dismissTimer) {\n        win.clearTimeout(this._dismissTimer);\n        this._dismissTimer = undefined;\n      }\n\n      const was = win.document.activeElement;\n\n      this._dismissTimer = win.setTimeout(() => {\n        this._dismissTimer = undefined;\n\n        const cur = win.document.activeElement;\n\n        if (was && cur && was === cur) {\n          // Esc was pressed, currently focused element hasn't changed.\n          // Just dismiss the keyboard navigation mode.\n          this.isNavigatingWithKeyboard = false;\n        }\n      }, _dismissTimeout);\n    }\n  }\n}\n\n/**\n * Used to determine the keyboard navigation state\n */\nexport class Keyborg {\n  private _id: string;\n  private _win?: WindowWithKeyborg;\n  private _core?: KeyborgCore;\n  private _cb: KeyborgCallback[] = [];\n\n  static create(win: WindowWithKeyborg, props?: KeyborgProps): Keyborg {\n    return new Keyborg(win, props);\n  }\n\n  static dispose(instance: Keyborg): void {\n    instance.dispose();\n  }\n\n  /**\n   * Updates all subscribed callbacks with the keyboard navigation state\n   */\n  static update(instance: Keyborg, isNavigatingWithKeyboard: boolean): void {\n    instance._cb.forEach((callback) => callback(isNavigatingWithKeyboard));\n  }\n\n  private constructor(win: WindowWithKeyborg, props?: KeyborgProps) {\n    this._id = \"k\" + ++_lastId;\n    this._win = win;\n\n    const current = win.__keyborg;\n\n    if (current) {\n      this._core = current.core;\n      current.refs[this._id] = this;\n    } else {\n      this._core = new KeyborgCore(win, props);\n      win.__keyborg = {\n        core: this._core,\n        refs: { [this._id]: this },\n      };\n    }\n  }\n\n  private dispose(): void {\n    const current = this._win?.__keyborg;\n\n    if (current?.refs[this._id]) {\n      delete current.refs[this._id];\n\n      if (Object.keys(current.refs).length === 0) {\n        current.core.dispose();\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        delete this._win!.__keyborg;\n      }\n    } else if (process.env.NODE_ENV !== \"production\") {\n      console.error(\n        `Keyborg instance ${this._id} is being disposed incorrectly.`,\n      );\n    }\n\n    this._cb = [];\n    delete this._core;\n    delete this._win;\n  }\n\n  /**\n   * @returns Whether the user is navigating with keyboard\n   */\n  isNavigatingWithKeyboard(): boolean {\n    return !!this._core?.isNavigatingWithKeyboard;\n  }\n\n  /**\n   * @param callback - Called when the keyboard navigation state changes\n   */\n  subscribe(callback: KeyborgCallback): void {\n    this._cb.push(callback);\n  }\n\n  /**\n   * @param callback - Registered with subscribe\n   */\n  unsubscribe(callback: KeyborgCallback): void {\n    const index = this._cb.indexOf(callback);\n\n    if (index >= 0) {\n      this._cb.splice(index, 1);\n    }\n  }\n\n  /**\n   * Manually set the keyboard navigtion state\n   */\n  setVal(isNavigatingWithKeyboard: boolean): void {\n    if (this._core) {\n      this._core.isNavigatingWithKeyboard = isNavigatingWithKeyboard;\n    }\n  }\n}\n\nexport function createKeyborg(win: Window, props?: KeyborgProps): Keyborg {\n  return Keyborg.create(win, props);\n}\n\nexport function disposeKeyborg(instance: Keyborg) {\n  Keyborg.dispose(instance);\n}\n", "/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport type { Keyborg, KeyborgCallback } from \"./Keyborg\";\nexport { createKeyborg, disposeKeyborg } from \"./Keyborg\";\n\nexport type {\n  KeyborgFocusInEvent,\n  KeyborgFocusInEventDetails,\n  KeyborgFocusOutEvent,\n  KeyborgFocusOutEventDetails,\n} from \"./FocusEvent\";\nexport {\n  getLastFocusedProgrammatically,\n  nativeFocus,\n  KEYBORG_FOCUSIN,\n  KEYBORG_FOCUSOUT,\n} from \"./FocusEvent\";\n\nexport const version = process.env.PKG_VERSION;\n", "/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const TABSTER_ATTRIBUTE_NAME = \"data-tabster\" as const;\nexport const TABSTER_DUMMY_INPUT_ATTRIBUTE_NAME = \"data-tabster-dummy\" as const;\n\nexport const FOCUSABLE_SELECTOR = [\n    \"a[href]\",\n    \"button:not([disabled])\",\n    \"input:not([disabled])\",\n    \"select:not([disabled])\",\n    \"textarea:not([disabled])\",\n    \"*[tabindex]\",\n    \"*[contenteditable]\",\n    \"details > summary\",\n    \"audio[controls]\",\n    \"video[controls]\",\n].join(\", \");\n\nexport const AsyncFocusSources = {\n    EscapeGroupper: 1,\n    Restorer: 2,\n    Deloser: 3,\n} as const;\n\nexport const ObservedElementAccessibilities = {\n    Any: 0,\n    Accessible: 1,\n    Focusable: 2,\n} as const;\n\nexport const RestoreFocusOrders = {\n    History: 0,\n    DeloserDefault: 1,\n    RootDefault: 2,\n    DeloserFirst: 3,\n    RootFirst: 4,\n} as const;\n\nexport const DeloserStrategies = {\n    /**\n     * If the focus is lost, the focus will be restored automatically using all available focus history.\n     * This is the default strategy.\n     */\n    Auto: 0,\n    /**\n     * If the focus is lost from this Deloser instance, the focus will not be restored automatically.\n     * The application might listen to the event and restore the focus manually.\n     * But if it is lost from another Deloser instance, the history of this Deloser could be used finding\n     * the element to focus.\n     */\n    Manual: 1,\n} as const;\n\nexport const Visibilities = {\n    Invisible: 0,\n    PartiallyVisible: 1,\n    Visible: 2,\n} as const;\n\nexport const RestorerTypes = {\n    Source: 0,\n    Target: 1,\n} as const;\n\nexport const MoverDirections = {\n    Both: 0, // Default, both left/up keys move to the previous, right/down move to the next.\n    Vertical: 1, // Only up/down arrows move to the next/previous.\n    Horizontal: 2, // Only left/right arrows move to the next/previous.\n    Grid: 3, // Two-dimentional movement depending on the visual placement.\n    GridLinear: 4, // Two-dimentional movement depending on the visual placement. Allows linear movement.\n} as const;\n\nexport const MoverKeys = {\n    ArrowUp: 1,\n    ArrowDown: 2,\n    ArrowLeft: 3,\n    ArrowRight: 4,\n    PageUp: 5,\n    PageDown: 6,\n    Home: 7,\n    End: 8,\n} as const;\n\nexport const GroupperTabbabilities = {\n    Unlimited: 0,\n    Limited: 1, // The tabbability is limited to the container and explicit Enter is needed to go inside.\n    LimitedTrapFocus: 2, // The focus is limited as above, plus trapped when inside.\n} as const;\n\nexport const GroupperMoveFocusActions = {\n    Enter: 1,\n    Escape: 2,\n} as const;\n\nexport const SysDummyInputsPositions = {\n    Auto: 0, // Tabster will place dummy inputs depending on the container tag name and on the default behaviour.\n    Inside: 1, // Tabster will always place dummy inputs inside the container.\n    Outside: 2, // Tabster will always place dummy inputs outside of the container.\n} as const;\n", "/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as Types from \"./Types\";\nimport { TABSTER_ATTRIBUTE_NAME } from \"./Consts\";\n\nexport function getTabsterOnElement(\n    tabster: Types.TabsterCore,\n    element: HTMLElement\n): Types.TabsterOnElement | undefined {\n    return tabster.storageEntry(element)?.tabster;\n}\n\nexport function updateTabsterByAttribute(\n    tabster: Types.TabsterCore,\n    element: HTMLElement,\n    dispose?: boolean\n): void {\n    const newAttrValue =\n        dispose || tabster._noop\n            ? undefined\n            : element.getAttribute(TABSTER_ATTRIBUTE_NAME);\n\n    let entry = tabster.storageEntry(element);\n    let newAttr: Types.TabsterAttributeOnElement | undefined;\n\n    if (newAttrValue) {\n        if (newAttrValue !== entry?.attr?.string) {\n            try {\n                const newValue = JSON.parse(\n                    newAttrValue\n                ) as Types.TabsterAttributeProps;\n\n                if (typeof newValue !== \"object\") {\n                    throw new Error(\n                        `Value is not a JSON object, got '${newAttrValue}'.`\n                    );\n                }\n\n                newAttr = {\n                    string: newAttrValue,\n                    object: newValue,\n                };\n            } catch (e) {\n                if (__DEV__) {\n                    console.error(\n                        `data-tabster attribute error: ${e}`,\n                        element\n                    );\n                }\n            }\n        } else {\n            return;\n        }\n    } else if (!entry) {\n        return;\n    }\n\n    if (!entry) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        entry = tabster.storageEntry(element, true)!;\n    }\n\n    if (!entry.tabster) {\n        entry.tabster = {};\n    }\n\n    const tabsterOnElement = entry.tabster || {};\n    const oldTabsterProps = entry.attr?.object || {};\n    const newTabsterProps = newAttr?.object || {};\n\n    for (const key of Object.keys(\n        oldTabsterProps\n    ) as (keyof Types.TabsterAttributeProps)[]) {\n        if (!newTabsterProps[key]) {\n            if (key === \"root\") {\n                const root = tabsterOnElement[key];\n\n                if (root) {\n                    tabster.root.onRoot(root, true);\n                }\n            }\n\n            switch (key) {\n                case \"deloser\":\n                case \"root\":\n                case \"groupper\":\n                case \"modalizer\":\n                case \"restorer\":\n                case \"mover\":\n                    // eslint-disable-next-line no-case-declarations\n                    const part = tabsterOnElement[key];\n                    if (part) {\n                        part.dispose();\n                        delete tabsterOnElement[key];\n                    }\n                    break;\n\n                case \"observed\":\n                    delete tabsterOnElement[key];\n                    if (tabster.observedElement) {\n                        tabster.observedElement.onObservedElementUpdate(\n                            element\n                        );\n                    }\n                    break;\n\n                case \"focusable\":\n                case \"outline\":\n                case \"uncontrolled\":\n                case \"sys\":\n                    delete tabsterOnElement[key];\n                    break;\n            }\n        }\n    }\n\n    for (const key of Object.keys(\n        newTabsterProps\n    ) as (keyof Types.TabsterAttributeProps)[]) {\n        const sys = newTabsterProps.sys;\n\n        switch (key) {\n            case \"deloser\":\n                if (tabsterOnElement.deloser) {\n                    tabsterOnElement.deloser.setProps(\n                        newTabsterProps.deloser as Types.DeloserProps\n                    );\n                } else {\n                    if (tabster.deloser) {\n                        tabsterOnElement.deloser =\n                            tabster.deloser.createDeloser(\n                                element,\n                                newTabsterProps.deloser as Types.DeloserProps\n                            );\n                    } else if (__DEV__) {\n                        console.error(\n                            \"Deloser API used before initialization, please call `getDeloser()`\"\n                        );\n                    }\n                }\n                break;\n\n            case \"root\":\n                if (tabsterOnElement.root) {\n                    tabsterOnElement.root.setProps(\n                        newTabsterProps.root as Types.RootProps\n                    );\n                } else {\n                    tabsterOnElement.root = tabster.root.createRoot(\n                        element,\n                        newTabsterProps.root as Types.RootProps,\n                        sys\n                    );\n                }\n                tabster.root.onRoot(tabsterOnElement.root);\n                break;\n\n            case \"modalizer\":\n                if (tabsterOnElement.modalizer) {\n                    tabsterOnElement.modalizer.setProps(\n                        newTabsterProps.modalizer as Types.ModalizerProps\n                    );\n                } else {\n                    if (tabster.modalizer) {\n                        tabsterOnElement.modalizer =\n                            tabster.modalizer.createModalizer(\n                                element,\n                                newTabsterProps.modalizer as Types.ModalizerProps,\n                                sys\n                            );\n                    } else if (__DEV__) {\n                        console.error(\n                            \"Modalizer API used before initialization, please call `getModalizer()`\"\n                        );\n                    }\n                }\n                break;\n\n            case \"restorer\":\n                if (tabsterOnElement.restorer) {\n                    tabsterOnElement.restorer.setProps(\n                        newTabsterProps.restorer as Types.RestorerProps\n                    );\n                } else {\n                    if (tabster.restorer) {\n                        if (newTabsterProps.restorer) {\n                            tabsterOnElement.restorer =\n                                tabster.restorer.createRestorer(\n                                    element,\n                                    newTabsterProps.restorer\n                                );\n                        }\n                    } else if (__DEV__) {\n                        console.error(\n                            \"Restorer API used before initialization, please call `getRestorer()`\"\n                        );\n                    }\n                }\n\n                break;\n\n            case \"focusable\":\n                tabsterOnElement.focusable = newTabsterProps.focusable;\n                break;\n\n            case \"groupper\":\n                if (tabsterOnElement.groupper) {\n                    tabsterOnElement.groupper.setProps(\n                        newTabsterProps.groupper as Types.GroupperProps\n                    );\n                } else {\n                    if (tabster.groupper) {\n                        tabsterOnElement.groupper =\n                            tabster.groupper.createGroupper(\n                                element,\n                                newTabsterProps.groupper as Types.GroupperProps,\n                                sys\n                            );\n                    } else if (__DEV__) {\n                        console.error(\n                            \"Groupper API used before initialization, please call `getGroupper()`\"\n                        );\n                    }\n                }\n                break;\n\n            case \"mover\":\n                if (tabsterOnElement.mover) {\n                    tabsterOnElement.mover.setProps(\n                        newTabsterProps.mover as Types.MoverProps\n                    );\n                } else {\n                    if (tabster.mover) {\n                        tabsterOnElement.mover = tabster.mover.createMover(\n                            element,\n                            newTabsterProps.mover as Types.MoverProps,\n                            sys\n                        );\n                    } else if (__DEV__) {\n                        console.error(\n                            \"Mover API used before initialization, please call `getMover()`\"\n                        );\n                    }\n                }\n                break;\n\n            case \"observed\":\n                if (tabster.observedElement) {\n                    tabsterOnElement.observed = newTabsterProps.observed;\n                    tabster.observedElement.onObservedElementUpdate(element);\n                } else if (__DEV__) {\n                    console.error(\n                        \"ObservedElement API used before initialization, please call `getObservedElement()`\"\n                    );\n                }\n                break;\n\n            case \"uncontrolled\":\n                tabsterOnElement.uncontrolled = newTabsterProps.uncontrolled;\n                break;\n\n            case \"outline\":\n                if (tabster.outline) {\n                    tabsterOnElement.outline = newTabsterProps.outline;\n                } else if (__DEV__) {\n                    console.error(\n                        \"Outline API used before initialization, please call `getOutline()`\"\n                    );\n                }\n                break;\n\n            case \"sys\":\n                tabsterOnElement.sys = newTabsterProps.sys;\n                break;\n\n            default:\n                console.error(\n                    `Unknown key '${key}' in data-tabster attribute value.`\n                );\n        }\n    }\n\n    if (newAttr) {\n        entry.attr = newAttr;\n    } else {\n        if (Object.keys(tabsterOnElement).length === 0) {\n            delete entry.tabster;\n            delete entry.attr;\n        }\n        tabster.storageEntry(element, false);\n    }\n}\n", "/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as Types from \"./Types\";\nimport * as EventsTypes from \"./EventsTypes\";\n\n/**\n * Events sent by Tabster.\n */\n\nexport const TabsterFocusInEventName = \"tabster:focusin\";\nexport const TabsterFocusOutEventName = \"tabster:focusout\";\n\n// Event is dispatched when Tabster wants to move focus as the result of\n// handling keyboard event. This allows to preventDefault() if you want to have\n// some custom logic.\nexport const TabsterMoveFocusEventName = \"tabster:movefocus\";\n\n/**\n * Events sent by Deloser.\n */\n\nexport const DeloserFocusLostEventName = \"tabster:deloser:focus-lost\";\n\n/**\n * Events to be sent to Deloser by the application.\n */\n\nexport const DeloserRestoreFocusEventName = \"tabster:deloser:restore-focus\";\n\n/**\n * Events sent by Modalizer.\n */\nexport const ModalizerActiveEventName = \"tabster:modalizer:active\";\nexport const ModalizerInactiveEventName = \"tabster:modalizer:inactive\";\nexport const ModalizerFocusInEventName = \"tabster:modalizer:focusin\";\nexport const ModalizerFocusOutEventName = \"tabster:modalizer:focusout\";\n\n/**\n * Events sent by Mover.\n */\nexport const MoverStateEventName = \"tabster:mover:state\";\n\n/**\n * Events to be sent to Mover by the application.\n */\n\n// Event that can be dispatched by the application to programmatically move\n// focus inside Mover.\nexport const MoverMoveFocusEventName = \"tabster:mover:movefocus\";\n// Event that can be dispatched by the application to forget or modify\n// memorized element in Mover with memorizeCurrent property.\nexport const MoverMemorizedElementEventName = \"tabster:mover:memorized-element\";\n\n/**\n * Events sent by Groupper.\n */\n\n/**\n * Events to be sent to Groupper by the application.\n */\n\n// Event that can be dispatched by the application to programmatically enter\n// or escape Groupper.\nexport const GroupperMoveFocusEventName = \"tabster:groupper:movefocus\";\n\n/**\n * Events sent by Restorer.\n */\n\nexport const RestorerRestoreFocusEventName = \"tabster:restorer:restore-focus\";\n\n/**\n * Events sent by Root.\n */\nexport const RootFocusEventName = \"tabster:root:focus\";\nexport const RootBlurEventName = \"tabster:root:blur\";\n\n// Node.js environments do not have CustomEvent and it is needed for the events to be\n// evaluated. It doesn't matter if it works or not in Node.js environment.\n// So, we just need to make sure that it doesn't throw undefined reference.\nconst CustomEvent_ =\n    typeof CustomEvent !== \"undefined\"\n        ? CustomEvent\n        : (function () {\n              /* no-op */\n          } as typeof CustomEvent);\n\nexport abstract class TabsterCustomEvent<D> extends CustomEvent_<D> {\n    /**\n     * @deprecated use `detail`.\n     */\n    details?: D;\n\n    constructor(type: string, detail?: D) {\n        super(type, {\n            bubbles: true,\n            cancelable: true,\n            composed: true,\n            detail,\n        });\n\n        this.details = detail;\n    }\n}\n\nexport class TabsterFocusInEvent extends TabsterCustomEvent<Types.FocusedElementDetail> {\n    constructor(detail: Types.FocusedElementDetail) {\n        super(TabsterFocusInEventName, detail);\n    }\n}\n\nexport class TabsterFocusOutEvent extends TabsterCustomEvent<Types.FocusedElementDetail> {\n    constructor(detail: Types.FocusedElementDetail) {\n        super(TabsterFocusOutEventName, detail);\n    }\n}\n\nexport class TabsterMoveFocusEvent extends TabsterCustomEvent<EventsTypes.TabsterMoveFocusEventDetail> {\n    constructor(detail: EventsTypes.TabsterMoveFocusEventDetail) {\n        super(TabsterMoveFocusEventName, detail);\n    }\n}\n\nexport class MoverStateEvent extends TabsterCustomEvent<Types.MoverElementState> {\n    constructor(detail: Types.MoverElementState) {\n        super(MoverStateEventName, detail);\n    }\n}\n\nexport class MoverMoveFocusEvent extends TabsterCustomEvent<EventsTypes.MoverMoveFocusEventDetail> {\n    constructor(detail: EventsTypes.MoverMoveFocusEventDetail) {\n        super(MoverMoveFocusEventName, detail);\n    }\n}\n\nexport class MoverMemorizedElementEvent extends TabsterCustomEvent<EventsTypes.MoverMemorizedElementEventDetail> {\n    constructor(detail: EventsTypes.MoverMemorizedElementEventDetail) {\n        super(MoverMemorizedElementEventName, detail);\n    }\n}\n\nexport class GroupperMoveFocusEvent extends TabsterCustomEvent<EventsTypes.GroupperMoveFocusEventDetail> {\n    constructor(detail: EventsTypes.GroupperMoveFocusEventDetail) {\n        super(GroupperMoveFocusEventName, detail);\n    }\n}\n\nexport class ModalizerActiveEvent extends TabsterCustomEvent<EventsTypes.ModalizerEventDetail> {\n    constructor(detail: EventsTypes.ModalizerEventDetail) {\n        super(ModalizerActiveEventName, detail);\n    }\n}\n\nexport class ModalizerInactiveEvent extends TabsterCustomEvent<EventsTypes.ModalizerEventDetail> {\n    constructor(detail: EventsTypes.ModalizerEventDetail) {\n        super(ModalizerInactiveEventName, detail);\n    }\n}\n\nexport class DeloserFocusLostEvent extends TabsterCustomEvent<Types.DeloserElementActions> {\n    constructor(detail: Types.DeloserElementActions) {\n        super(DeloserFocusLostEventName, detail);\n    }\n}\n\nexport class DeloserRestoreFocusEvent extends TabsterCustomEvent<undefined> {\n    constructor() {\n        super(DeloserRestoreFocusEventName);\n    }\n}\n\nexport class RestorerRestoreFocusEvent extends TabsterCustomEvent<undefined> {\n    constructor() {\n        super(RestorerRestoreFocusEventName);\n    }\n}\n\nexport class RootFocusEvent extends TabsterCustomEvent<EventsTypes.RootFocusEventDetail> {\n    constructor(detail: EventsTypes.RootFocusEventDetail) {\n        super(RootFocusEventName, detail);\n    }\n}\n\nexport class RootBlurEvent extends TabsterCustomEvent<EventsTypes.RootFocusEventDetail> {\n    constructor(detail: EventsTypes.RootFocusEventDetail) {\n        super(RootBlurEventName, detail);\n    }\n}\n\n// addEventListener() typings augmentation.\ndeclare global {\n    interface GlobalEventHandlersEventMap {\n        [TabsterFocusInEventName]: TabsterFocusInEvent;\n        [TabsterFocusOutEventName]: TabsterFocusOutEvent;\n        [TabsterMoveFocusEventName]: TabsterMoveFocusEvent;\n\n        [MoverStateEventName]: MoverStateEvent;\n        [MoverMoveFocusEventName]: MoverMoveFocusEvent;\n        [MoverMemorizedElementEventName]: MoverMemorizedElementEvent;\n\n        [GroupperMoveFocusEventName]: GroupperMoveFocusEvent;\n\n        [ModalizerActiveEventName]: ModalizerActiveEvent;\n        [ModalizerInactiveEventName]: ModalizerInactiveEvent;\n\n        [DeloserFocusLostEventName]: DeloserFocusLostEvent;\n        [DeloserRestoreFocusEventName]: DeloserRestoreFocusEvent;\n\n        [RestorerRestoreFocusEventName]: RestorerRestoreFocusEvent;\n\n        [RootFocusEventName]: RootFocusEvent;\n        [RootBlurEventName]: RootBlurEvent;\n    }\n}\n", "/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { DOMAPI } from \"./Types\";\n\nconst _createMutationObserver = (callback: MutationCallback) =>\n    new MutationObserver(callback);\nconst _createTreeWalker = (\n    doc: Document,\n    root: Node,\n    whatToShow?: number,\n    filter?: NodeFilter | null\n) => doc.createTreeWalker(root, whatToShow, filter);\nconst _getParentNode = (node: Node | null | undefined) =>\n    node ? node.parentNode : null;\nconst _getParentElement = (element: HTMLElement) =>\n    element ? element.parentElement : null;\nconst _nodeContains = (\n    parent: Node | null | undefined,\n    child: Node | null | undefined\n) => !!(child && parent?.contains(child));\nconst _getActiveElement = (doc: Document) => doc.activeElement;\nconst _querySelector = (element: Element, selector: string) =>\n    element.querySelector(selector);\nconst _querySelectorAll = (element: ParentNode, selector: string) =>\n    Array.prototype.slice.call(element.querySelectorAll(selector), 0);\nconst _getElementById = (doc: Document, id: string): HTMLElement | null =>\n    doc.getElementById(id);\nconst _getFirstChild = (node: Node | null | undefined): ChildNode | null =>\n    node?.firstChild || null;\nconst _getLastChild = (node: Node | null | undefined): ChildNode | null =>\n    node?.lastChild || null;\nconst _getNextSibling = (node: Node | null | undefined): ChildNode | null =>\n    node?.nextSibling || null;\nconst _getPreviousSibling = (node: Node | null | undefined): ChildNode | null =>\n    node?.previousSibling || null;\nconst _getFirstElementChild = (\n    element: Element | null | undefined\n): Element | null => element?.firstElementChild || null;\nconst _getLastElementChild = (\n    element: Element | null | undefined\n): Element | null => element?.lastElementChild || null;\nconst _getNextElementSibling = (\n    element: Element | null | undefined\n): Element | null => element?.nextElementSibling || null;\nconst _getPreviousElementSibling = (\n    element: Element | null | undefined\n): Element | null => element?.previousElementSibling || null;\nconst _appendChild = (parent: Node, child: Node): Node =>\n    parent.appendChild(child);\nconst _insertBefore = (\n    parent: Node,\n    child: Node,\n    referenceChild: Node | null\n): Node => parent.insertBefore(child, referenceChild);\nconst _getSelection = (ref: Node): Selection | null =>\n    ref.ownerDocument?.getSelection() || null;\nconst _getElementsByName = (referenceElement: HTMLElement, name: string) =>\n    referenceElement.ownerDocument.getElementsByName(name);\n\nexport const dom: DOMAPI = {\n    createMutationObserver: _createMutationObserver,\n    createTreeWalker: _createTreeWalker,\n    getParentNode: _getParentNode,\n    getParentElement: _getParentElement,\n    nodeContains: _nodeContains,\n    getActiveElement: _getActiveElement,\n    querySelector: _querySelector,\n    querySelectorAll: _querySelectorAll,\n    getElementById: _getElementById,\n    getFirstChild: _getFirstChild,\n    getLastChild: _getLastChild,\n    getNextSibling: _getNextSibling,\n    getPreviousSibling: _getPreviousSibling,\n    getFirstElementChild: _getFirstElementChild,\n    getLastElementChild: _getLastElementChild,\n    getNextElementSibling: _getNextElementSibling,\n    getPreviousElementSibling: _getPreviousElementSibling,\n    appendChild: _appendChild,\n    insertBefore: _insertBefore,\n    getSelection: _getSelection,\n    getElementsByName: _getElementsByName,\n};\n\nexport function setDOMAPI(domapi: Partial<DOMAPI>) {\n    for (const key of Object.keys(domapi) as (keyof DOMAPI)[]) {\n        (dom[key] as typeof domapi[typeof key]) = domapi[key];\n    }\n}\n", "/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { nativeFocus } from \"keyborg\";\n\nimport {\n    DummyInputObserver as DummyInputObserverInterface,\n    GetWindow,\n    RadioButtonGroup,\n    SysProps,\n    TabsterAttributeProps,\n    TabsterCore,\n    TabsterPart as TabsterPartInterface,\n    Visibility,\n    WeakHTMLElement as WeakHTMLElementInterface,\n} from \"./Types\";\nimport {\n    FOCUSABLE_SELECTOR,\n    SysDummyInputsPositions,\n    TABSTER_ATTRIBUTE_NAME,\n    TABSTER_DUMMY_INPUT_ATTRIBUTE_NAME,\n    Visibilities,\n} from \"./Consts\";\nimport { TabsterMoveFocusEvent } from \"./Events\";\nimport { dom } from \"./DOMAPI\";\n\ninterface HTMLElementWithBoundingRectCacheId extends HTMLElement {\n    __tabsterCacheId?: string;\n}\n\ninterface FocusedElementWithIgnoreFlag extends HTMLElement {\n    __shouldIgnoreFocus: boolean;\n}\n\nexport interface WindowWithUID extends Window {\n    __tabsterCrossOriginWindowUID?: string;\n}\n\nexport interface HTMLElementWithUID extends HTMLElement {\n    __tabsterElementUID?: string;\n}\n\ninterface HTMLElementWithDummyContainer extends HTMLElement {\n    __tabsterDummyContainer?: WeakHTMLElement;\n}\n\nexport interface TabsterDOMRect {\n    bottom: number;\n    left: number;\n    right: number;\n    top: number;\n}\n\nexport interface InstanceContext {\n    elementByUId: { [uid: string]: WeakHTMLElement<HTMLElementWithUID> };\n    basics: InternalBasics;\n    WeakRef?: WeakRefConstructor;\n    containerBoundingRectCache: {\n        [id: string]: {\n            rect: TabsterDOMRect;\n            element: HTMLElementWithBoundingRectCacheId;\n        };\n    };\n    lastContainerBoundingRectCacheId: number;\n    containerBoundingRectCacheTimer?: number;\n    fakeWeakRefs: TabsterWeakRef<unknown>[];\n    fakeWeakRefsTimer?: number;\n    fakeWeakRefsStarted: boolean;\n}\n\nlet _isBrokenIE11: boolean;\n\nconst _DOMRect =\n    typeof DOMRect !== \"undefined\"\n        ? DOMRect\n        : class {\n              readonly bottom: number;\n              readonly left: number;\n              readonly right: number;\n              readonly top: number;\n\n              constructor(\n                  x?: number,\n                  y?: number,\n                  width?: number,\n                  height?: number\n              ) {\n                  this.left = x || 0;\n                  this.top = y || 0;\n                  this.right = (x || 0) + (width || 0);\n                  this.bottom = (y || 0) + (height || 0);\n              }\n          };\n\nlet _uidCounter = 0;\n\ntry {\n    // IE11 only accepts `filter` argument as a function (not object with the `acceptNode`\n    // property as the docs define). Also `entityReferenceExpansion` argument is not\n    // optional. And it throws exception when the above arguments aren't there.\n    document.createTreeWalker(document, NodeFilter.SHOW_ELEMENT);\n    _isBrokenIE11 = false;\n} catch (e) {\n    _isBrokenIE11 = true;\n}\n\nconst _updateDummyInputsTimeout = 100;\n\ninterface WindowWithUtilsConext extends Window {\n    __tabsterInstanceContext?: InstanceContext;\n    Promise: PromiseConstructor;\n    WeakRef: WeakRefConstructor;\n}\n\nexport function getInstanceContext(getWindow: GetWindow): InstanceContext {\n    const win = getWindow() as WindowWithUtilsConext;\n\n    let ctx = win.__tabsterInstanceContext;\n\n    if (!ctx) {\n        ctx = {\n            elementByUId: {},\n            basics: {\n                Promise: win.Promise || undefined,\n                WeakRef: win.WeakRef || undefined,\n            },\n            containerBoundingRectCache: {},\n            lastContainerBoundingRectCacheId: 0,\n            fakeWeakRefs: [],\n            fakeWeakRefsStarted: false,\n        };\n\n        win.__tabsterInstanceContext = ctx;\n    }\n\n    return ctx;\n}\n\nexport function disposeInstanceContext(win: Window): void {\n    const ctx = (win as WindowWithUtilsConext).__tabsterInstanceContext;\n\n    if (ctx) {\n        ctx.elementByUId = {};\n\n        delete ctx.WeakRef;\n\n        ctx.containerBoundingRectCache = {};\n\n        if (ctx.containerBoundingRectCacheTimer) {\n            win.clearTimeout(ctx.containerBoundingRectCacheTimer);\n        }\n\n        if (ctx.fakeWeakRefsTimer) {\n            win.clearTimeout(ctx.fakeWeakRefsTimer);\n        }\n\n        ctx.fakeWeakRefs = [];\n\n        delete (win as WindowWithUtilsConext).__tabsterInstanceContext;\n    }\n}\n\nexport function createWeakMap<K extends object, V>(win: Window): WeakMap<K, V> {\n    const ctx = (win as WindowWithUtilsConext).__tabsterInstanceContext;\n    return new (ctx?.basics.WeakMap || WeakMap)();\n}\n\nexport function hasSubFocusable(element: HTMLElement): boolean {\n    return !!element.querySelector(FOCUSABLE_SELECTOR);\n}\n\ninterface TabsterWeakRef<T> {\n    deref(): T | undefined;\n}\n\nclass FakeWeakRef<T extends HTMLElement = HTMLElement>\n    implements TabsterWeakRef<T>\n{\n    private _target: T | undefined;\n\n    constructor(target: T) {\n        this._target = target;\n    }\n\n    deref(): T | undefined {\n        return this._target;\n    }\n\n    static cleanup(fwr: FakeWeakRef, forceRemove?: boolean): boolean {\n        if (!fwr._target) {\n            return true;\n        }\n\n        if (\n            forceRemove ||\n            !documentContains(fwr._target.ownerDocument, fwr._target)\n        ) {\n            delete fwr._target;\n            return true;\n        }\n\n        return false;\n    }\n}\n\nexport class WeakHTMLElement<T extends HTMLElement = HTMLElement, D = undefined>\n    implements WeakHTMLElementInterface<D>\n{\n    private _ref: TabsterWeakRef<T> | undefined;\n    private _data: D | undefined;\n\n    constructor(getWindow: GetWindow, element: T, data?: D) {\n        const context = getInstanceContext(getWindow);\n\n        let ref: TabsterWeakRef<T>;\n        if (context.WeakRef) {\n            ref = new context.WeakRef(element);\n        } else {\n            ref = new FakeWeakRef(element);\n            context.fakeWeakRefs.push(ref);\n        }\n\n        this._ref = ref;\n        this._data = data;\n    }\n\n    get(): T | undefined {\n        const ref = this._ref;\n        let element: T | undefined;\n\n        if (ref) {\n            element = ref.deref();\n\n            if (!element) {\n                delete this._ref;\n            }\n        }\n\n        return element;\n    }\n\n    getData(): D | undefined {\n        return this._data;\n    }\n}\n\nexport function cleanupFakeWeakRefs(\n    getWindow: GetWindow,\n    forceRemove?: boolean\n): void {\n    const context = getInstanceContext(getWindow);\n    context.fakeWeakRefs = context.fakeWeakRefs.filter(\n        (e) => !FakeWeakRef.cleanup(e as FakeWeakRef, forceRemove)\n    );\n}\n\nexport function startFakeWeakRefsCleanup(getWindow: GetWindow): void {\n    const context = getInstanceContext(getWindow);\n\n    if (!context.fakeWeakRefsStarted) {\n        context.fakeWeakRefsStarted = true;\n        context.WeakRef = getWeakRef(context);\n    }\n\n    if (!context.fakeWeakRefsTimer) {\n        context.fakeWeakRefsTimer = getWindow().setTimeout(() => {\n            context.fakeWeakRefsTimer = undefined;\n            cleanupFakeWeakRefs(getWindow);\n            startFakeWeakRefsCleanup(getWindow);\n        }, 2 * 60 * 1000); // 2 minutes.\n    }\n}\n\nexport function stopFakeWeakRefsCleanupAndClearStorage(\n    getWindow: GetWindow\n): void {\n    const context = getInstanceContext(getWindow);\n\n    context.fakeWeakRefsStarted = false;\n\n    if (context.fakeWeakRefsTimer) {\n        getWindow().clearTimeout(context.fakeWeakRefsTimer);\n        context.fakeWeakRefsTimer = undefined;\n        context.fakeWeakRefs = [];\n    }\n}\n\nexport function createElementTreeWalker(\n    doc: Document,\n    root: Node,\n    acceptNode: (node: Node) => number\n): TreeWalker | undefined {\n    // IE11 will throw an exception when the TreeWalker root is not an Element.\n    if (root.nodeType !== Node.ELEMENT_NODE) {\n        return undefined;\n    }\n\n    // TypeScript isn't aware of IE11 behaving badly.\n    const filter = (_isBrokenIE11\n        ? acceptNode\n        : ({ acceptNode } as NodeFilter)) as unknown as NodeFilter;\n\n    return dom.createTreeWalker(\n        doc,\n        root,\n        NodeFilter.SHOW_ELEMENT,\n        filter,\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore: We still don't want to completely break IE11, so, entityReferenceExpansion argument is not optional.\n        false /* Last argument is not optional for IE11! */\n    );\n}\n\nexport function getBoundingRect(\n    getWindow: GetWindow,\n    element: HTMLElementWithBoundingRectCacheId\n): TabsterDOMRect {\n    let cacheId = element.__tabsterCacheId;\n    const context = getInstanceContext(getWindow);\n    const cached = cacheId\n        ? context.containerBoundingRectCache[cacheId]\n        : undefined;\n\n    if (cached) {\n        return cached.rect;\n    }\n\n    const scrollingElement =\n        element.ownerDocument && element.ownerDocument.documentElement;\n\n    if (!scrollingElement) {\n        return new _DOMRect();\n    }\n\n    // A bounding rect of the top-level element contains the whole page regardless of the\n    // scrollbar. So, we improvise a little and limiting the final result...\n    let left = 0;\n    let top = 0;\n    let right = scrollingElement.clientWidth;\n    let bottom = scrollingElement.clientHeight;\n\n    if (element !== scrollingElement) {\n        const r = element.getBoundingClientRect();\n        left = Math.max(left, r.left);\n        top = Math.max(top, r.top);\n        right = Math.min(right, r.right);\n        bottom = Math.min(bottom, r.bottom);\n    }\n\n    const rect = new _DOMRect(\n        left < right ? left : -1,\n        top < bottom ? top : -1,\n        left < right ? right - left : 0,\n        top < bottom ? bottom - top : 0\n    );\n\n    if (!cacheId) {\n        cacheId = \"r-\" + ++context.lastContainerBoundingRectCacheId;\n        element.__tabsterCacheId = cacheId;\n    }\n\n    context.containerBoundingRectCache[cacheId] = {\n        rect,\n        element,\n    };\n\n    if (!context.containerBoundingRectCacheTimer) {\n        context.containerBoundingRectCacheTimer = window.setTimeout(() => {\n            context.containerBoundingRectCacheTimer = undefined;\n\n            for (const cId of Object.keys(context.containerBoundingRectCache)) {\n                delete context.containerBoundingRectCache[cId].element\n                    .__tabsterCacheId;\n            }\n\n            context.containerBoundingRectCache = {};\n        }, 50);\n    }\n\n    return rect;\n}\n\nexport function isElementVerticallyVisibleInContainer(\n    getWindow: GetWindow,\n    element: HTMLElement,\n    tolerance: number\n): boolean {\n    const container = getScrollableContainer(element);\n    if (!container) {\n        return false;\n    }\n\n    const containerRect = getBoundingRect(getWindow, container);\n    const elementRect = element.getBoundingClientRect();\n    const intersectionTolerance = elementRect.height * (1 - tolerance);\n    const topIntersection = Math.max(0, containerRect.top - elementRect.top);\n    const bottomIntersection = Math.max(\n        0,\n        elementRect.bottom - containerRect.bottom\n    );\n    const totalIntersection = topIntersection + bottomIntersection;\n\n    return (\n        totalIntersection === 0 || totalIntersection <= intersectionTolerance\n    );\n}\n\nexport function isElementVisibleInContainer(\n    getWindow: GetWindow,\n    element: HTMLElement,\n    gap = 0\n): Visibility {\n    const container = getScrollableContainer(element);\n\n    if (container) {\n        const containerRect = getBoundingRect(getWindow, container);\n        const elementRect = element.getBoundingClientRect();\n\n        if (\n            elementRect.left > containerRect.right ||\n            elementRect.top > containerRect.bottom ||\n            elementRect.bottom < containerRect.top ||\n            elementRect.right < containerRect.left\n        ) {\n            return Visibilities.Invisible;\n        }\n\n        if (\n            elementRect.top + gap >= containerRect.top &&\n            elementRect.top <= containerRect.bottom &&\n            elementRect.bottom >= containerRect.top &&\n            elementRect.bottom - gap <= containerRect.bottom &&\n            elementRect.left + gap >= containerRect.left &&\n            elementRect.left <= containerRect.right &&\n            elementRect.right >= containerRect.left &&\n            elementRect.right - gap <= containerRect.right\n        ) {\n            return Visibilities.Visible;\n        }\n\n        return Visibilities.PartiallyVisible;\n    }\n\n    return Visibilities.Invisible;\n}\n\nexport function scrollIntoView(\n    getWindow: GetWindow,\n    element: HTMLElement,\n    alignToTop: boolean\n): void {\n    // Built-in DOM's scrollIntoView() is cool, but when we have nested containers,\n    // it scrolls all of them, not just the deepest one. So, trying to work it around.\n    const container = getScrollableContainer(element);\n\n    if (container) {\n        const containerRect = getBoundingRect(getWindow, container);\n        const elementRect = element.getBoundingClientRect();\n\n        if (alignToTop) {\n            container.scrollTop += elementRect.top - containerRect.top;\n        } else {\n            container.scrollTop += elementRect.bottom - containerRect.bottom;\n        }\n    }\n}\n\nexport function getScrollableContainer(\n    element: HTMLElement\n): HTMLElement | null {\n    const doc = element.ownerDocument;\n\n    if (doc) {\n        for (\n            let el: HTMLElement | null = dom.getParentElement(element);\n            el;\n            el = dom.getParentElement(el)\n        ) {\n            if (\n                el.scrollWidth > el.clientWidth ||\n                el.scrollHeight > el.clientHeight\n            ) {\n                return el;\n            }\n        }\n\n        return doc.documentElement;\n    }\n\n    return null;\n}\n\nexport function makeFocusIgnored(element: HTMLElement): void {\n    (element as FocusedElementWithIgnoreFlag).__shouldIgnoreFocus = true;\n}\n\nexport function shouldIgnoreFocus(element: HTMLElement): boolean {\n    return !!(element as FocusedElementWithIgnoreFlag).__shouldIgnoreFocus;\n}\n\nexport function getUId(wnd: Window & { msCrypto?: Crypto }): string {\n    const rnd = new Uint32Array(4);\n\n    if (wnd.crypto && wnd.crypto.getRandomValues) {\n        wnd.crypto.getRandomValues(rnd);\n    } else if (wnd.msCrypto && wnd.msCrypto.getRandomValues) {\n        wnd.msCrypto.getRandomValues(rnd);\n    } else {\n        for (let i = 0; i < rnd.length; i++) {\n            rnd[i] = 0xffffffff * Math.random();\n        }\n    }\n\n    const srnd: string[] = [];\n\n    for (let i = 0; i < rnd.length; i++) {\n        srnd.push(rnd[i].toString(36));\n    }\n\n    srnd.push(\"|\");\n    srnd.push((++_uidCounter).toString(36));\n    srnd.push(\"|\");\n    srnd.push(Date.now().toString(36));\n\n    return srnd.join(\"\");\n}\n\nexport function getElementUId(\n    getWindow: GetWindow,\n    element: HTMLElementWithUID\n): string {\n    const context = getInstanceContext(getWindow);\n    let uid = element.__tabsterElementUID;\n\n    if (!uid) {\n        uid = element.__tabsterElementUID = getUId(getWindow());\n    }\n\n    if (\n        !context.elementByUId[uid] &&\n        documentContains(element.ownerDocument, element)\n    ) {\n        context.elementByUId[uid] = new WeakHTMLElement(getWindow, element);\n    }\n\n    return uid;\n}\n\nexport function getElementByUId(\n    context: InstanceContext,\n    uid: string\n): WeakHTMLElement<HTMLElementWithUID, undefined> | undefined {\n    return context.elementByUId[uid];\n}\n\nexport function getWindowUId(win: WindowWithUID): string {\n    let uid = win.__tabsterCrossOriginWindowUID;\n\n    if (!uid) {\n        uid = win.__tabsterCrossOriginWindowUID = getUId(win);\n    }\n\n    return uid;\n}\n\nexport function clearElementCache(\n    getWindow: GetWindow,\n    parent?: HTMLElement\n): void {\n    const context = getInstanceContext(getWindow);\n\n    for (const key of Object.keys(context.elementByUId)) {\n        const wel = context.elementByUId[key];\n        const el = wel && wel.get();\n\n        if (el && parent) {\n            if (!dom.nodeContains(parent, el)) {\n                continue;\n            }\n        }\n\n        delete context.elementByUId[key];\n    }\n}\n\n// IE11 doesn't have document.contains()...\nexport function documentContains(\n    doc: HTMLDocument | null | undefined,\n    element: HTMLElement\n): boolean {\n    return dom.nodeContains(doc?.body, element);\n}\n\nexport function matchesSelector(\n    element: HTMLElement,\n    selector: string\n): boolean {\n    interface HTMLElementWithMatches extends HTMLElement {\n        matchesSelector?: typeof HTMLElement.prototype.matches;\n        msMatchesSelector?: typeof HTMLElement.prototype.matches;\n    }\n\n    const matches =\n        element.matches ||\n        (element as HTMLElementWithMatches).matchesSelector ||\n        (element as HTMLElementWithMatches).msMatchesSelector ||\n        element.webkitMatchesSelector;\n\n    return matches && matches.call(element, selector);\n}\n\nexport function getPromise(getWindow: GetWindow): PromiseConstructor {\n    const context = getInstanceContext(getWindow);\n    if (context.basics.Promise) {\n        return context.basics.Promise;\n    }\n\n    throw new Error(\"No Promise defined.\");\n}\n\nexport function getWeakRef(\n    context: InstanceContext\n): WeakRefConstructor | undefined {\n    return context.basics.WeakRef;\n}\n\ninterface InternalBasics {\n    Promise?: PromiseConstructor;\n    WeakRef?: WeakRefConstructor;\n    WeakMap?: WeakMapConstructor;\n}\n\nexport function setBasics(win: Window, basics: InternalBasics): void {\n    const context = getInstanceContext(() => win);\n\n    let key: keyof InternalBasics;\n\n    key = \"Promise\";\n    if (key in basics) {\n        context.basics[key] = basics[key];\n    }\n\n    key = \"WeakRef\";\n    if (key in basics) {\n        context.basics[key] = basics[key];\n    }\n\n    key = \"WeakMap\";\n    if (key in basics) {\n        context.basics[key] = basics[key];\n    }\n}\n\nlet _lastTabsterPartId = 0;\n\nexport abstract class TabsterPart<P, D = undefined>\n    implements TabsterPartInterface<P>\n{\n    protected _tabster: TabsterCore;\n    protected _element: WeakHTMLElement<HTMLElement, D>;\n    protected _props: P;\n\n    readonly id: string;\n\n    constructor(tabster: TabsterCore, element: HTMLElement, props: P) {\n        const getWindow = tabster.getWindow;\n        this._tabster = tabster;\n        this._element = new WeakHTMLElement(getWindow, element);\n        this._props = { ...props };\n        this.id = \"i\" + ++_lastTabsterPartId;\n    }\n\n    getElement(): HTMLElement | undefined {\n        return this._element.get();\n    }\n\n    getProps(): P {\n        return this._props;\n    }\n\n    setProps(props: P): void {\n        this._props = { ...props };\n    }\n}\n\nexport interface DummyInputProps {\n    /** The input is created to be used only once and autoremoved when focused. */\n    isPhantom?: boolean;\n    /** Whether the input is before or after the content it is guarding.  */\n    isFirst: boolean;\n}\n\nexport type DummyInputFocusCallback = (\n    dummyInput: DummyInput,\n    isBackward: boolean,\n    relatedTarget: HTMLElement | null\n) => void;\n\n/**\n * Dummy HTML elements that are used as focus sentinels for the DOM enclosed within them\n */\nexport class DummyInput {\n    private _isPhantom: DummyInputProps[\"isPhantom\"];\n    private _fixedTarget?: WeakHTMLElement;\n    private _disposeTimer: number | undefined;\n    private _clearDisposeTimeout: (() => void) | undefined;\n\n    input: HTMLElement | undefined;\n    useDefaultAction?: boolean;\n    isFirst: DummyInputProps[\"isFirst\"];\n    isOutside: boolean;\n    /** Called when the input is focused */\n    onFocusIn?: DummyInputFocusCallback;\n    /** Called when the input is blurred */\n    onFocusOut?: DummyInputFocusCallback;\n\n    constructor(\n        getWindow: GetWindow,\n        isOutside: boolean,\n        props: DummyInputProps,\n        element?: WeakHTMLElement,\n        fixedTarget?: WeakHTMLElement\n    ) {\n        const win = getWindow();\n        const input = win.document.createElement(\"i\");\n\n        input.tabIndex = 0;\n        input.setAttribute(\"role\", \"none\");\n\n        input.setAttribute(TABSTER_DUMMY_INPUT_ATTRIBUTE_NAME, \"\");\n        input.setAttribute(\"aria-hidden\", \"true\");\n\n        const style = input.style;\n        style.position = \"fixed\";\n        style.width = style.height = \"1px\";\n        style.opacity = \"0.001\";\n        style.zIndex = \"-1\";\n        style.setProperty(\"content-visibility\", \"hidden\");\n\n        makeFocusIgnored(input);\n\n        this.input = input;\n        this.isFirst = props.isFirst;\n        this.isOutside = isOutside;\n        this._isPhantom = props.isPhantom ?? false;\n        this._fixedTarget = fixedTarget;\n\n        input.addEventListener(\"focusin\", this._focusIn);\n        input.addEventListener(\"focusout\", this._focusOut);\n\n        (input as HTMLElementWithDummyContainer).__tabsterDummyContainer =\n            element;\n\n        if (this._isPhantom) {\n            this._disposeTimer = win.setTimeout(() => {\n                delete this._disposeTimer;\n                this.dispose();\n            }, 0);\n\n            this._clearDisposeTimeout = () => {\n                if (this._disposeTimer) {\n                    win.clearTimeout(this._disposeTimer);\n                    delete this._disposeTimer;\n                }\n\n                delete this._clearDisposeTimeout;\n            };\n        }\n    }\n\n    dispose(): void {\n        if (this._clearDisposeTimeout) {\n            this._clearDisposeTimeout();\n        }\n\n        const input = this.input;\n\n        if (!input) {\n            return;\n        }\n\n        delete this._fixedTarget;\n        delete this.onFocusIn;\n        delete this.onFocusOut;\n        delete this.input;\n\n        input.removeEventListener(\"focusin\", this._focusIn);\n        input.removeEventListener(\"focusout\", this._focusOut);\n\n        delete (input as HTMLElementWithDummyContainer).__tabsterDummyContainer;\n\n        dom.getParentNode(input)?.removeChild(input);\n    }\n\n    setTopLeft(top: number, left: number): void {\n        const style = this.input?.style;\n\n        if (style) {\n            style.top = `${top}px`;\n            style.left = `${left}px`;\n        }\n    }\n\n    private _isBackward(\n        isIn: boolean,\n        current: HTMLElement,\n        previous: HTMLElement | null\n    ): boolean {\n        return isIn && !previous\n            ? !this.isFirst\n            : !!(\n                  previous &&\n                  current.compareDocumentPosition(previous) &\n                      Node.DOCUMENT_POSITION_FOLLOWING\n              );\n    }\n\n    private _focusIn = (e: FocusEvent): void => {\n        if (this._fixedTarget) {\n            const target = this._fixedTarget.get();\n\n            if (target) {\n                nativeFocus(target);\n            }\n\n            return;\n        }\n\n        const input = this.input;\n\n        if (this.onFocusIn && input) {\n            const relatedTarget = e.relatedTarget as HTMLElement | null;\n\n            this.onFocusIn(\n                this,\n                this._isBackward(true, input, relatedTarget),\n                relatedTarget\n            );\n        }\n    };\n\n    private _focusOut = (e: FocusEvent): void => {\n        if (this._fixedTarget) {\n            return;\n        }\n\n        this.useDefaultAction = false;\n\n        const input = this.input;\n\n        if (this.onFocusOut && input) {\n            const relatedTarget = e.relatedTarget as HTMLElement | null;\n\n            this.onFocusOut(\n                this,\n                this._isBackward(false, input, relatedTarget),\n                relatedTarget\n            );\n        }\n    };\n}\n\ninterface HTMLElementWithDummyInputs extends HTMLElement {\n    __tabsterDummy?: DummyInputManagerCore;\n}\n\nexport const DummyInputManagerPriorities = {\n    Root: 1,\n    Modalizer: 2,\n    Mover: 3,\n    Groupper: 4,\n} as const;\n\nexport class DummyInputManager {\n    private _instance?: DummyInputManagerCore;\n    private _onFocusIn?: DummyInputFocusCallback;\n    private _onFocusOut?: DummyInputFocusCallback;\n    protected _element: WeakHTMLElement;\n\n    constructor(\n        tabster: TabsterCore,\n        element: WeakHTMLElement,\n        priority: number,\n        sys: SysProps | undefined,\n        outsideByDefault?: boolean,\n        callForDefaultAction?: boolean\n    ) {\n        this._element = element;\n\n        this._instance = new DummyInputManagerCore(\n            tabster,\n            element,\n            this,\n            priority,\n            sys,\n            outsideByDefault,\n            callForDefaultAction\n        );\n    }\n\n    protected _setHandlers(\n        onFocusIn?: DummyInputFocusCallback,\n        onFocusOut?: DummyInputFocusCallback\n    ): void {\n        this._onFocusIn = onFocusIn;\n        this._onFocusOut = onFocusOut;\n    }\n\n    moveOut(backwards: boolean): void {\n        this._instance?.moveOut(backwards);\n    }\n\n    moveOutWithDefaultAction(\n        backwards: boolean,\n        relatedEvent: KeyboardEvent\n    ): void {\n        this._instance?.moveOutWithDefaultAction(backwards, relatedEvent);\n    }\n\n    getHandler(isIn: boolean): DummyInputFocusCallback | undefined {\n        return isIn ? this._onFocusIn : this._onFocusOut;\n    }\n\n    setTabbable(tabbable: boolean) {\n        this._instance?.setTabbable(this, tabbable);\n    }\n\n    dispose(): void {\n        if (this._instance) {\n            this._instance.dispose(this);\n            delete this._instance;\n        }\n\n        delete this._onFocusIn;\n        delete this._onFocusOut;\n    }\n\n    static moveWithPhantomDummy(\n        tabster: TabsterCore,\n        element: HTMLElement, // The target element to move to or out of.\n        moveOutOfElement: boolean, // Whether to move out of the element or into it.\n        isBackward: boolean, // Are we tabbing of shift-tabbing?\n        relatedEvent: KeyboardEvent // The event that triggered the move.\n    ): void {\n        // Phantom dummy is a hack to use browser's default action to move\n        // focus from a specific point in the application to the next/previous\n        // element. Default action is needed because next focusable element\n        // is not always available to focus directly (for example, next focusable\n        // is inside isolated iframe) or for uncontrolled areas we want to make\n        // sure that something that controls it takes care of the focusing.\n        // It works in a way that during the Tab key handling, we create a dummy\n        // input element, place it to the specific place in the DOM and focus it,\n        // then the default action of the Tab press will move focus from our dummy\n        // input. And we remove it from the DOM right after that.\n        const dummy: DummyInput = new DummyInput(tabster.getWindow, true, {\n            isPhantom: true,\n            isFirst: true,\n        });\n\n        const input = dummy.input;\n\n        if (input) {\n            let parent: HTMLElement | null;\n            let insertBefore: HTMLElement | null;\n\n            // Let's say we have a following DOM structure:\n            // <div>\n            //   <button>Button1</button>\n            //   <div id=\"uncontrolled\" data-tabster={uncontrolled: {}}>\n            //     <button>Button2</button>\n            //     <button>Button3</button>\n            //   </div>\n            //   <button>Button4</button>\n            // </div>\n            //\n            // We pass the \"uncontrolled\" div as the element to move to or out of.\n            //\n            // When we pass moveOutOfElement=true and isBackward=false,\n            // the phantom dummy input will be inserted before Button4.\n            //\n            // When we pass moveOutOfElement=true and isBackward=true, there are\n            // two cases. If the uncontrolled element is focusable (has tabindex=0),\n            // the phantom dummy input will be inserted after Button1. If the\n            // uncontrolled element is not focusable, the phantom dummy input will be\n            // inserted before Button2.\n            //\n            // When we pass moveOutOfElement=false and isBackward=false, the\n            // phantom dummy input will be inserted after Button1.\n            //\n            // When we pass moveOutOfElement=false and isBackward=true, the phantom\n            // dummy input will be inserted before Button4.\n            //\n            // And we have a corner case for <body> and we make sure that the inserted\n            // dummy is inserted properly when there are existing permanent dummies.\n\n            if (element.tagName === \"BODY\") {\n                // We cannot insert elements outside of BODY.\n                parent = element;\n                insertBefore =\n                    (moveOutOfElement && isBackward) ||\n                    (!moveOutOfElement && !isBackward)\n                        ? (dom.getFirstElementChild(\n                              element\n                          ) as HTMLElement | null)\n                        : null;\n            } else {\n                if (\n                    moveOutOfElement &&\n                    (!isBackward ||\n                        (isBackward &&\n                            !tabster.focusable.isFocusable(\n                                element,\n                                false,\n                                true,\n                                true\n                            )))\n                ) {\n                    parent = element;\n                    insertBefore = isBackward\n                        ? (element.firstElementChild as HTMLElement | null)\n                        : null;\n                } else {\n                    parent = dom.getParentElement(element);\n                    insertBefore =\n                        (moveOutOfElement && isBackward) ||\n                        (!moveOutOfElement && !isBackward)\n                            ? element\n                            : (dom.getNextElementSibling(\n                                  element\n                              ) as HTMLElement | null);\n                }\n\n                let potentialDummy: HTMLElement | null;\n                let dummyFor: HTMLElement | null;\n\n                do {\n                    // This is a safety pillow for the cases when someone, combines\n                    // groupper with uncontrolled on the same node. Which is technically\n                    // not correct, but moving into the container element via its dummy\n                    // input would produce a correct behaviour in uncontrolled mode.\n                    potentialDummy = (\n                        (moveOutOfElement && isBackward) ||\n                        (!moveOutOfElement && !isBackward)\n                            ? dom.getPreviousElementSibling(insertBefore)\n                            : insertBefore\n                    ) as HTMLElement | null;\n\n                    dummyFor = getDummyInputContainer(potentialDummy);\n\n                    if (dummyFor === element) {\n                        insertBefore =\n                            (moveOutOfElement && isBackward) ||\n                            (!moveOutOfElement && !isBackward)\n                                ? potentialDummy\n                                : (dom.getNextElementSibling(\n                                      potentialDummy\n                                  ) as HTMLElement | null);\n                    } else {\n                        dummyFor = null;\n                    }\n                } while (dummyFor);\n            }\n\n            if (\n                parent?.dispatchEvent(\n                    new TabsterMoveFocusEvent({\n                        by: \"root\",\n                        owner: parent,\n                        next: null,\n                        relatedEvent,\n                    })\n                )\n            ) {\n                dom.insertBefore(parent, input, insertBefore);\n                nativeFocus(input);\n            }\n        }\n    }\n\n    static addPhantomDummyWithTarget(\n        tabster: TabsterCore,\n        sourceElement: HTMLElement,\n        isBackward: boolean,\n        targetElement: HTMLElement\n    ): void {\n        const dummy: DummyInput = new DummyInput(\n            tabster.getWindow,\n            true,\n            {\n                isPhantom: true,\n                isFirst: true,\n            },\n            undefined,\n            new WeakHTMLElement(tabster.getWindow, targetElement)\n        );\n\n        const input = dummy.input;\n\n        if (input) {\n            let dummyParent: HTMLElement | null;\n            let insertBefore: HTMLElement | null;\n\n            if (hasSubFocusable(sourceElement) && !isBackward) {\n                dummyParent = sourceElement;\n                insertBefore = dom.getFirstElementChild(\n                    sourceElement\n                ) as HTMLElement | null;\n            } else {\n                dummyParent = dom.getParentElement(sourceElement);\n                insertBefore = isBackward\n                    ? sourceElement\n                    : (dom.getNextElementSibling(\n                          sourceElement\n                      ) as HTMLElement | null);\n            }\n\n            if (dummyParent) {\n                dom.insertBefore(dummyParent, input, insertBefore);\n            }\n        }\n    }\n}\n\ninterface DummyInputWrapper {\n    manager: DummyInputManager;\n    priority: number;\n    tabbable: boolean;\n}\n\nfunction setDummyInputDebugValue(\n    dummy: DummyInput,\n    wrappers: DummyInputWrapper[]\n): void {\n    const what: Record<number, string> = {\n        1: \"Root\",\n        2: \"Modalizer\",\n        3: \"Mover\",\n        4: \"Groupper\",\n    };\n\n    dummy.input?.setAttribute(\n        TABSTER_DUMMY_INPUT_ATTRIBUTE_NAME,\n        [\n            `isFirst=${dummy.isFirst}`,\n            `isOutside=${dummy.isOutside}`,\n            ...wrappers.map(\n                (w) => `(${what[w.priority]}, tabbable=${w.tabbable})`\n            ),\n        ].join(\", \")\n    );\n}\n\nexport class DummyInputObserver implements DummyInputObserverInterface {\n    private _win?: GetWindow;\n    private _updateQueue: Set<\n        (\n            scrollTopLeftCache: Map<\n                HTMLElement,\n                { scrollTop: number; scrollLeft: number } | null\n            >\n        ) => () => void\n    > = new Set();\n    private _updateTimer?: number;\n    private _lastUpdateQueueTime = 0;\n    private _changedParents: WeakSet<Node> = new WeakSet();\n    private _updateDummyInputsTimer?: number;\n    private _dummyElements: WeakHTMLElement<HTMLElement>[] = [];\n    private _dummyCallbacks: WeakMap<HTMLElement, () => void> = new WeakMap();\n    domChanged?(parent: HTMLElement): void;\n\n    constructor(win: GetWindow) {\n        this._win = win;\n    }\n\n    add(dummy: HTMLElement, callback: () => void): void {\n        if (!this._dummyCallbacks.has(dummy) && this._win) {\n            this._dummyElements.push(new WeakHTMLElement(this._win, dummy));\n            this._dummyCallbacks.set(dummy, callback);\n            this.domChanged = this._domChanged;\n        }\n    }\n\n    remove(dummy: HTMLElement): void {\n        this._dummyElements = this._dummyElements.filter((ref) => {\n            const element = ref.get();\n            return element && element !== dummy;\n        });\n\n        this._dummyCallbacks.delete(dummy);\n\n        if (this._dummyElements.length === 0) {\n            delete this.domChanged;\n        }\n    }\n\n    dispose(): void {\n        const win = this._win?.();\n\n        if (this._updateTimer) {\n            win?.clearTimeout(this._updateTimer);\n            delete this._updateTimer;\n        }\n\n        if (this._updateDummyInputsTimer) {\n            win?.clearTimeout(this._updateDummyInputsTimer);\n            delete this._updateDummyInputsTimer;\n        }\n\n        this._changedParents = new WeakSet();\n        this._dummyCallbacks = new WeakMap();\n        this._dummyElements = [];\n        this._updateQueue.clear();\n\n        delete this.domChanged;\n        delete this._win;\n    }\n\n    private _domChanged = (parent: HTMLElement): void => {\n        if (this._changedParents.has(parent)) {\n            return;\n        }\n\n        this._changedParents.add(parent);\n\n        if (this._updateDummyInputsTimer) {\n            return;\n        }\n\n        this._updateDummyInputsTimer = this._win?.().setTimeout(() => {\n            delete this._updateDummyInputsTimer;\n\n            for (const ref of this._dummyElements) {\n                const dummyElement = ref.get();\n\n                if (dummyElement) {\n                    const callback = this._dummyCallbacks.get(dummyElement);\n\n                    if (callback) {\n                        const dummyParent = dom.getParentNode(dummyElement);\n\n                        if (\n                            !dummyParent ||\n                            this._changedParents.has(dummyParent)\n                        ) {\n                            callback();\n                        }\n                    }\n                }\n            }\n\n            this._changedParents = new WeakSet();\n        }, _updateDummyInputsTimeout);\n    };\n\n    updatePositions(\n        compute: (\n            scrollTopLeftCache: Map<\n                HTMLElement,\n                { scrollTop: number; scrollLeft: number } | null\n            >\n        ) => () => void\n    ): void {\n        if (!this._win) {\n            // As this is a public method, we make sure that it has no effect when\n            // called after dispose().\n            return;\n        }\n\n        this._updateQueue.add(compute);\n\n        this._lastUpdateQueueTime = Date.now();\n\n        this._scheduledUpdatePositions();\n    }\n\n    private _scheduledUpdatePositions(): void {\n        if (this._updateTimer) {\n            return;\n        }\n\n        this._updateTimer = this._win?.().setTimeout(() => {\n            delete this._updateTimer;\n\n            // updatePositions() might be called quite a lot during the scrolling.\n            // So, instead of clearing the timeout and scheduling a new one, we\n            // check if enough time has passed since the last updatePositions() call\n            // and only schedule a new one if not.\n            // At maximum, we will update dummy inputs positions\n            // _updateDummyInputsTimeout * 2 after the last updatePositions() call.\n            if (\n                this._lastUpdateQueueTime + _updateDummyInputsTimeout <=\n                Date.now()\n            ) {\n                // A cache for current bulk of updates to reduce getComputedStyle() calls.\n                const scrollTopLeftCache = new Map<\n                    HTMLElement,\n                    { scrollTop: number; scrollLeft: number } | null\n                >();\n\n                const setTopLeftCallbacks: (() => void)[] = [];\n\n                for (const compute of this._updateQueue) {\n                    setTopLeftCallbacks.push(compute(scrollTopLeftCache));\n                }\n\n                this._updateQueue.clear();\n\n                // We're splitting the computation of offsets and setting them to avoid extra\n                // reflows.\n                for (const setTopLeft of setTopLeftCallbacks) {\n                    setTopLeft();\n                }\n\n                // Explicitly clear to not hold references till the next garbage collection.\n                scrollTopLeftCache.clear();\n            } else {\n                this._scheduledUpdatePositions();\n            }\n        }, _updateDummyInputsTimeout);\n    }\n}\n\n/**\n * Parent class that encapsulates the behaviour of dummy inputs (focus sentinels)\n */\nclass DummyInputManagerCore {\n    private _tabster: TabsterCore;\n    private _addTimer: number | undefined;\n    private _getWindow: GetWindow;\n    private _wrappers: DummyInputWrapper[] = [];\n    private _element: WeakHTMLElement | undefined;\n    private _isOutside = false;\n    private _firstDummy: DummyInput | undefined;\n    private _lastDummy: DummyInput | undefined;\n    private _transformElements: Set<HTMLElement> = new Set();\n    private _callForDefaultAction: boolean | undefined;\n\n    constructor(\n        tabster: TabsterCore,\n        element: WeakHTMLElement,\n        manager: DummyInputManager,\n        priority: number,\n        sys: SysProps | undefined,\n        outsideByDefault?: boolean,\n        callForDefaultAction?: boolean\n    ) {\n        const el = element.get() as HTMLElementWithDummyInputs;\n\n        if (!el) {\n            throw new Error(\"No element\");\n        }\n\n        this._tabster = tabster;\n        this._getWindow = tabster.getWindow;\n        this._callForDefaultAction = callForDefaultAction;\n\n        const instance = el.__tabsterDummy;\n\n        (instance || this)._wrappers.push({\n            manager,\n            priority,\n            tabbable: true,\n        });\n\n        if (instance) {\n            if (__DEV__) {\n                this._firstDummy &&\n                    setDummyInputDebugValue(\n                        this._firstDummy,\n                        instance._wrappers\n                    );\n                this._lastDummy &&\n                    setDummyInputDebugValue(\n                        this._lastDummy,\n                        instance._wrappers\n                    );\n            }\n\n            return instance;\n        }\n\n        el.__tabsterDummy = this;\n\n        // Some elements allow only specific types of direct descendants and we need to\n        // put our dummy inputs inside or outside of the element accordingly.\n        const forcedDummyPosition = sys?.dummyInputsPosition;\n        const tagName = el.tagName;\n        this._isOutside = !forcedDummyPosition\n            ? (outsideByDefault ||\n                  tagName === \"UL\" ||\n                  tagName === \"OL\" ||\n                  tagName === \"TABLE\") &&\n              !(tagName === \"LI\" || tagName === \"TD\" || tagName === \"TH\")\n            : forcedDummyPosition === SysDummyInputsPositions.Outside;\n\n        this._firstDummy = new DummyInput(\n            this._getWindow,\n            this._isOutside,\n            {\n                isFirst: true,\n            },\n            element\n        );\n\n        this._lastDummy = new DummyInput(\n            this._getWindow,\n            this._isOutside,\n            {\n                isFirst: false,\n            },\n            element\n        );\n\n        // We will be checking dummy input parents to see if their child list have changed.\n        // So, it is enough to have just one of the inputs observed, because\n        // both dummy inputs always have the same parent.\n        const dummyElement = this._firstDummy.input;\n        dummyElement &&\n            tabster._dummyObserver.add(dummyElement, this._addDummyInputs);\n\n        this._firstDummy.onFocusIn = this._onFocusIn;\n        this._firstDummy.onFocusOut = this._onFocusOut;\n        this._lastDummy.onFocusIn = this._onFocusIn;\n        this._lastDummy.onFocusOut = this._onFocusOut;\n\n        this._element = element;\n        this._addDummyInputs();\n    }\n\n    dispose(manager: DummyInputManager, force?: boolean): void {\n        const wrappers = (this._wrappers = this._wrappers.filter(\n            (w) => w.manager !== manager && !force\n        ));\n\n        if (__DEV__) {\n            this._firstDummy &&\n                setDummyInputDebugValue(this._firstDummy, wrappers);\n            this._lastDummy &&\n                setDummyInputDebugValue(this._lastDummy, wrappers);\n        }\n\n        if (wrappers.length === 0) {\n            delete (this._element?.get() as HTMLElementWithDummyInputs)\n                .__tabsterDummy;\n\n            for (const el of this._transformElements) {\n                el.removeEventListener(\"scroll\", this._addTransformOffsets);\n            }\n            this._transformElements.clear();\n\n            const win = this._getWindow();\n\n            if (this._addTimer) {\n                win.clearTimeout(this._addTimer);\n                delete this._addTimer;\n            }\n\n            const dummyElement = this._firstDummy?.input;\n            dummyElement && this._tabster._dummyObserver.remove(dummyElement);\n\n            this._firstDummy?.dispose();\n            this._lastDummy?.dispose();\n        }\n    }\n\n    private _onFocus(\n        isIn: boolean,\n        dummyInput: DummyInput,\n        isBackward: boolean,\n        relatedTarget: HTMLElement | null\n    ): void {\n        const wrapper = this._getCurrent();\n\n        if (\n            wrapper &&\n            (!dummyInput.useDefaultAction || this._callForDefaultAction)\n        ) {\n            wrapper.manager.getHandler(isIn)?.(\n                dummyInput,\n                isBackward,\n                relatedTarget\n            );\n        }\n    }\n\n    private _onFocusIn = (\n        dummyInput: DummyInput,\n        isBackward: boolean,\n        relatedTarget: HTMLElement | null\n    ): void => {\n        this._onFocus(true, dummyInput, isBackward, relatedTarget);\n    };\n\n    private _onFocusOut = (\n        dummyInput: DummyInput,\n        isBackward: boolean,\n        relatedTarget: HTMLElement | null\n    ): void => {\n        this._onFocus(false, dummyInput, isBackward, relatedTarget);\n    };\n\n    moveOut = (backwards: boolean): void => {\n        const first = this._firstDummy;\n        const last = this._lastDummy;\n\n        if (first && last) {\n            // For the sake of performance optimization, the dummy input\n            // position in the DOM updates asynchronously from the DOM change.\n            // Calling _ensurePosition() to make sure the position is correct.\n            this._ensurePosition();\n\n            const firstInput = first.input;\n            const lastInput = last.input;\n            const element = this._element?.get();\n\n            if (firstInput && lastInput && element) {\n                let toFocus: HTMLElement | undefined;\n\n                if (backwards) {\n                    firstInput.tabIndex = 0;\n                    toFocus = firstInput;\n                } else {\n                    lastInput.tabIndex = 0;\n                    toFocus = lastInput;\n                }\n\n                if (toFocus) {\n                    nativeFocus(toFocus);\n                }\n            }\n        }\n    };\n\n    /**\n     * Prepares to move focus out of the given element by focusing\n     * one of the dummy inputs and setting the `useDefaultAction` flag\n     * @param backwards focus moving to an element behind the given element\n     */\n    moveOutWithDefaultAction = (\n        backwards: boolean,\n        relatedEvent: KeyboardEvent\n    ): void => {\n        const first = this._firstDummy;\n        const last = this._lastDummy;\n\n        if (first && last) {\n            // For the sake of performance optimization, the dummy input\n            // position in the DOM updates asynchronously from the DOM change.\n            // Calling _ensurePosition() to make sure the position is correct.\n            this._ensurePosition();\n\n            const firstInput = first.input;\n            const lastInput = last.input;\n            const element = this._element?.get();\n\n            if (firstInput && lastInput && element) {\n                let toFocus: HTMLElement | undefined;\n\n                if (backwards) {\n                    if (\n                        !first.isOutside &&\n                        this._tabster.focusable.isFocusable(\n                            element,\n                            true,\n                            true,\n                            true\n                        )\n                    ) {\n                        toFocus = element;\n                    } else {\n                        first.useDefaultAction = true;\n                        firstInput.tabIndex = 0;\n                        toFocus = firstInput;\n                    }\n                } else {\n                    last.useDefaultAction = true;\n                    lastInput.tabIndex = 0;\n                    toFocus = lastInput;\n                }\n\n                if (\n                    toFocus &&\n                    element.dispatchEvent(\n                        new TabsterMoveFocusEvent({\n                            by: \"root\",\n                            owner: element,\n                            next: null,\n                            relatedEvent,\n                        })\n                    )\n                ) {\n                    nativeFocus(toFocus);\n                }\n            }\n        }\n    };\n\n    setTabbable = (manager: DummyInputManager, tabbable: boolean) => {\n        for (const w of this._wrappers) {\n            if (w.manager === manager) {\n                w.tabbable = tabbable;\n                break;\n            }\n        }\n\n        const wrapper = this._getCurrent();\n\n        if (wrapper) {\n            const tabIndex = wrapper.tabbable ? 0 : -1;\n\n            let input = this._firstDummy?.input;\n\n            if (input) {\n                input.tabIndex = tabIndex;\n            }\n\n            input = this._lastDummy?.input;\n\n            if (input) {\n                input.tabIndex = tabIndex;\n            }\n        }\n\n        if (__DEV__) {\n            this._firstDummy &&\n                setDummyInputDebugValue(this._firstDummy, this._wrappers);\n            this._lastDummy &&\n                setDummyInputDebugValue(this._lastDummy, this._wrappers);\n        }\n    };\n\n    private _getCurrent(): DummyInputWrapper | undefined {\n        this._wrappers.sort((a, b) => {\n            if (a.tabbable !== b.tabbable) {\n                return a.tabbable ? -1 : 1;\n            }\n\n            return a.priority - b.priority;\n        });\n\n        return this._wrappers[0];\n    }\n\n    /**\n     * Adds dummy inputs as the first and last child of the given element\n     * Called each time the children under the element is mutated\n     */\n    private _addDummyInputs = () => {\n        if (this._addTimer) {\n            return;\n        }\n\n        this._addTimer = this._getWindow().setTimeout(() => {\n            delete this._addTimer;\n\n            this._ensurePosition();\n\n            if (__DEV__) {\n                this._firstDummy &&\n                    setDummyInputDebugValue(this._firstDummy, this._wrappers);\n                this._lastDummy &&\n                    setDummyInputDebugValue(this._lastDummy, this._wrappers);\n            }\n\n            this._addTransformOffsets();\n        }, 0);\n    };\n\n    private _ensurePosition(): void {\n        const element = this._element?.get();\n        const firstDummyInput = this._firstDummy?.input;\n        const lastDummyInput = this._lastDummy?.input;\n\n        if (!element || !firstDummyInput || !lastDummyInput) {\n            return;\n        }\n\n        if (this._isOutside) {\n            const elementParent = dom.getParentNode(element);\n\n            if (elementParent) {\n                const nextSibling = dom.getNextSibling(element);\n\n                if (nextSibling !== lastDummyInput) {\n                    dom.insertBefore(\n                        elementParent,\n                        lastDummyInput,\n                        nextSibling\n                    );\n                }\n\n                if (\n                    dom.getPreviousElementSibling(element) !== firstDummyInput\n                ) {\n                    dom.insertBefore(elementParent, firstDummyInput, element);\n                }\n            }\n        } else {\n            if (dom.getLastElementChild(element) !== lastDummyInput) {\n                dom.appendChild(element, lastDummyInput);\n            }\n\n            const firstElementChild = dom.getFirstElementChild(element);\n\n            if (\n                firstElementChild &&\n                firstElementChild !== firstDummyInput &&\n                firstElementChild.parentNode\n            ) {\n                dom.insertBefore(\n                    firstElementChild.parentNode,\n                    firstDummyInput,\n                    firstElementChild\n                );\n            }\n        }\n    }\n\n    private _addTransformOffsets = (): void => {\n        this._tabster._dummyObserver.updatePositions(\n            this._computeTransformOffsets\n        );\n    };\n\n    private _computeTransformOffsets = (\n        scrollTopLeftCache: Map<\n            HTMLElement,\n            { scrollTop: number; scrollLeft: number } | null\n        >\n    ): (() => void) => {\n        const from = this._firstDummy?.input || this._lastDummy?.input;\n        const transformElements = this._transformElements;\n        const newTransformElements: typeof transformElements = new Set();\n        let scrollTop = 0;\n        let scrollLeft = 0;\n\n        const win = this._getWindow();\n\n        for (\n            let element: HTMLElement | undefined | null = from;\n            element && element.nodeType === Node.ELEMENT_NODE;\n            element = dom.getParentElement(element)\n        ) {\n            let scrollTopLeft = scrollTopLeftCache.get(element);\n\n            // getComputedStyle() and element.scrollLeft/Top() cause style recalculation,\n            // so we cache the result across all elements in the current bulk.\n            if (scrollTopLeft === undefined) {\n                const transform = win.getComputedStyle(element).transform;\n\n                if (transform && transform !== \"none\") {\n                    scrollTopLeft = {\n                        scrollTop: element.scrollTop,\n                        scrollLeft: element.scrollLeft,\n                    };\n                }\n\n                scrollTopLeftCache.set(element, scrollTopLeft || null);\n            }\n\n            if (scrollTopLeft) {\n                newTransformElements.add(element);\n\n                if (!transformElements.has(element)) {\n                    element.addEventListener(\n                        \"scroll\",\n                        this._addTransformOffsets\n                    );\n                }\n\n                scrollTop += scrollTopLeft.scrollTop;\n                scrollLeft += scrollTopLeft.scrollLeft;\n            }\n        }\n\n        for (const el of transformElements) {\n            if (!newTransformElements.has(el)) {\n                el.removeEventListener(\"scroll\", this._addTransformOffsets);\n            }\n        }\n\n        this._transformElements = newTransformElements;\n\n        return () => {\n            this._firstDummy?.setTopLeft(scrollTop, scrollLeft);\n            this._lastDummy?.setTopLeft(scrollTop, scrollLeft);\n        };\n    };\n}\n\nexport function getLastChild(container: HTMLElement): HTMLElement | undefined {\n    let lastChild: HTMLElement | null = null;\n\n    for (\n        let i = dom.getLastElementChild(container);\n        i;\n        i = dom.getLastElementChild(i)\n    ) {\n        lastChild = i as HTMLElement;\n    }\n\n    return lastChild || undefined;\n}\n\nexport function getAdjacentElement(\n    from: HTMLElement,\n    prev?: boolean\n): HTMLElement | undefined {\n    let cur: HTMLElement | null = from;\n    let adjacent: HTMLElement | null = null;\n\n    while (cur && !adjacent) {\n        adjacent = (\n            prev\n                ? dom.getPreviousElementSibling(cur)\n                : dom.getNextElementSibling(cur)\n        ) as HTMLElement | null;\n        cur = dom.getParentElement(cur);\n    }\n\n    return adjacent || undefined;\n}\n\nexport function augmentAttribute(\n    tabster: TabsterCore,\n    element: HTMLElement,\n    name: string,\n    value?: string | null // Restore original value when undefined.\n): boolean {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const entry = tabster.storageEntry(element, true)!;\n    let ret = false;\n\n    if (!entry.aug) {\n        if (value === undefined) {\n            return ret;\n        }\n\n        entry.aug = {};\n    }\n\n    if (value === undefined) {\n        if (name in entry.aug) {\n            const origVal = entry.aug[name];\n\n            delete entry.aug[name];\n\n            if (origVal === null) {\n                element.removeAttribute(name);\n            } else {\n                element.setAttribute(name, origVal);\n            }\n\n            ret = true;\n        }\n    } else {\n        let origValue: string | null | undefined;\n\n        if (!(name in entry.aug)) {\n            origValue = element.getAttribute(name);\n        }\n\n        if (origValue !== undefined && origValue !== value) {\n            entry.aug[name] = origValue;\n\n            if (value === null) {\n                element.removeAttribute(name);\n            } else {\n                element.setAttribute(name, value);\n            }\n\n            ret = true;\n        }\n    }\n\n    if (value === undefined && Object.keys(entry.aug).length === 0) {\n        delete entry.aug;\n        tabster.storageEntry(element, false);\n    }\n\n    return ret;\n}\n\nexport function getTabsterAttributeOnElement(\n    element: HTMLElement\n): TabsterAttributeProps | null {\n    if (!element.hasAttribute(TABSTER_ATTRIBUTE_NAME)) {\n        return null;\n    }\n\n    // We already checked the presence with `hasAttribute`\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const rawAttribute = element.getAttribute(TABSTER_ATTRIBUTE_NAME)!;\n    let tabsterAttribute: TabsterAttributeProps;\n    try {\n        tabsterAttribute = JSON.parse(rawAttribute);\n    } catch {\n        console.error(\"Tabster: failed to parse attribute\", rawAttribute);\n        tabsterAttribute = {};\n    }\n\n    return tabsterAttribute;\n}\n\nexport function isDisplayNone(element: HTMLElement): boolean {\n    const elementDocument = element.ownerDocument;\n    const computedStyle =\n        elementDocument.defaultView?.getComputedStyle(element);\n\n    // offsetParent is null for elements with display:none, display:fixed and for <body>.\n    if (\n        element.offsetParent === null &&\n        elementDocument.body !== element &&\n        computedStyle?.position !== \"fixed\"\n    ) {\n        return true;\n    }\n\n    // For our purposes of looking for focusable elements, visibility:hidden has the same\n    // effect as display:none.\n    if (computedStyle?.visibility === \"hidden\") {\n        return true;\n    }\n\n    // if an element has display: fixed, we need to check if it is also hidden with CSS,\n    // or within a parent hidden with CSS\n    if (computedStyle?.position === \"fixed\") {\n        if (computedStyle.display === \"none\") {\n            return true;\n        }\n\n        if (\n            element.parentElement?.offsetParent === null &&\n            elementDocument.body !== element.parentElement\n        ) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isRadio(element: HTMLElement): boolean {\n    return (\n        element.tagName === \"INPUT\" &&\n        !!(element as HTMLInputElement).name &&\n        (element as HTMLInputElement).type === \"radio\"\n    );\n}\n\nexport function getRadioButtonGroup(\n    element: HTMLElement\n): RadioButtonGroup | undefined {\n    if (!isRadio(element)) {\n        return;\n    }\n\n    const name = (element as HTMLInputElement).name;\n    let radioButtons = Array.from(dom.getElementsByName(element, name));\n    let checked: HTMLInputElement | undefined;\n\n    radioButtons = radioButtons.filter((el) => {\n        if (isRadio(el)) {\n            if ((el as HTMLInputElement).checked) {\n                checked = el as HTMLInputElement;\n            }\n            return true;\n        }\n        return false;\n    });\n\n    return {\n        name,\n        buttons: new Set(radioButtons as HTMLInputElement[]),\n        checked,\n    };\n}\n\n/**\n * If the passed element is Tabster dummy input, returns the container element this dummy input belongs to.\n * @param element Element to check for being dummy input.\n * @returns Dummy input container element (if the passed element is a dummy input) or null.\n */\nexport function getDummyInputContainer(\n    element: HTMLElement | null | undefined\n): HTMLElement | null {\n    return (\n        (\n            element as HTMLElementWithDummyContainer | null | undefined\n        )?.__tabsterDummyContainer?.get() || null\n    );\n}\n", "/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as Types from \"./Types\";\nimport { TABSTER_ATTRIBUTE_NAME } from \"./Consts\";\n\nexport function getTabsterAttribute(\n    props: Types.TabsterAttributeProps\n): Types.TabsterDOMAttribute;\nexport function getTabsterAttribute(\n    props: Types.TabsterAttributeProps,\n    plain: true\n): string;\nexport function getTabsterAttribute(\n    props: Types.TabsterAttributeProps,\n    plain?: true\n): Types.TabsterDOMAttribute | string {\n    const attr = JSON.stringify(props);\n\n    if (plain === true) {\n        return attr;\n    }\n\n    return {\n        [TABSTER_ATTRIBUTE_NAME]: attr,\n    };\n}\n\n/**\n * Updates Tabster props object with new props.\n * @param element an element to set data-tabster attribute on.\n * @param props current Tabster props to update.\n * @param newProps new Tabster props to add.\n *  When the value of a property in newProps is undefined, the property\n *  will be removed from the attribute.\n */\nexport function mergeTabsterProps(\n    props: Types.TabsterAttributeProps,\n    newProps: Types.TabsterAttributeProps\n): void {\n    for (const key of Object.keys(\n        newProps\n    ) as (keyof Types.TabsterAttributeProps)[]) {\n        const value = newProps[key];\n\n        if (value) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            props[key] = value as any;\n        } else {\n            delete props[key];\n        }\n    }\n}\n\n/**\n * Sets or updates Tabster attribute of the element.\n * @param element an element to set data-tabster attribute on.\n * @param newProps new Tabster props to set.\n * @param update if true, newProps will be merged with the existing props.\n *  When true and the value of a property in newProps is undefined, the property\n *  will be removed from the attribute.\n */\nexport function setTabsterAttribute(\n    element: HTMLElement,\n    newProps: Types.TabsterAttributeProps,\n    update?: boolean\n): void {\n    let props: Types.TabsterAttributeProps | undefined;\n\n    if (update) {\n        const attr = element.getAttribute(TABSTER_ATTRIBUTE_NAME);\n\n        if (attr) {\n            try {\n                props = JSON.parse(attr);\n            } catch (e) {\n                if (__DEV__) {\n                    console.error(\n                        `data-tabster attribute error: ${e}`,\n                        element\n                    );\n                }\n            }\n        }\n    }\n\n    if (!props) {\n        props = {};\n    }\n\n    mergeTabsterProps(props, newProps);\n\n    if (Object.keys(props).length > 0) {\n        element.setAttribute(\n            TABSTER_ATTRIBUTE_NAME,\n            getTabsterAttribute(props, true)\n        );\n    } else {\n        element.removeAttribute(TABSTER_ATTRIBUTE_NAME);\n    }\n}\n", "/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { KEYBORG_FOCUSIN, KEYBORG_FOCUSOUT, nativeFocus } from \"keyborg\";\nimport { getTabsterOnElement, updateTabsterByAttribute } from \"./Instance\";\nimport * as Types from \"./Types\";\nimport { RootFocusEvent, RootBlurEvent } from \"./Events\";\nimport {\n    DummyInput,\n    DummyInputManager,\n    DummyInputManagerPriorities,\n    getElementUId,\n    TabsterPart,\n    WeakHTMLElement,\n} from \"./Utils\";\nimport { setTabsterAttribute } from \"./AttributeHelpers\";\n\nexport interface WindowWithTabsterInstance extends Window {\n    __tabsterInstance?: Types.TabsterCore;\n}\n\nfunction _setInformativeStyle(\n    weakElement: WeakHTMLElement,\n    remove: boolean,\n    id?: string\n) {\n    if (__DEV__) {\n        const element = weakElement.get();\n\n        if (element) {\n            if (remove) {\n                element.style.removeProperty(\"--tabster-root\");\n            } else {\n                element.style.setProperty(\"--tabster-root\", id + \",\");\n            }\n        }\n    }\n}\n\nclass RootDummyManager extends DummyInputManager {\n    private _tabster: Types.TabsterCore;\n    private _setFocused: (focused: boolean) => void;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: WeakHTMLElement,\n        setFocused: (focused: boolean) => void,\n        sys: Types.SysProps | undefined\n    ) {\n        super(\n            tabster,\n            element,\n            DummyInputManagerPriorities.Root,\n            sys,\n            undefined,\n            true\n        );\n\n        this._setHandlers(this._onDummyInputFocus);\n\n        this._tabster = tabster;\n        this._setFocused = setFocused;\n    }\n\n    private _onDummyInputFocus = (dummyInput: DummyInput): void => {\n        if (dummyInput.useDefaultAction) {\n            // When we've reached the last focusable element, we want to let the browser\n            // to move the focus outside of the page. In order to do that we're synchronously\n            // calling focus() of the dummy input from the Tab key handler and allowing\n            // the default action to move the focus out.\n            this._setFocused(false);\n        } else {\n            // The only way a dummy input gets focused is during the keyboard navigation.\n            this._tabster.keyboardNavigation.setNavigatingWithKeyboard(true);\n\n            const element = this._element.get();\n\n            if (element) {\n                this._setFocused(true);\n\n                const toFocus =\n                    this._tabster.focusedElement.getFirstOrLastTabbable(\n                        dummyInput.isFirst,\n                        { container: element, ignoreAccessibility: true }\n                    );\n\n                if (toFocus) {\n                    nativeFocus(toFocus);\n                    return;\n                }\n            }\n\n            dummyInput.input?.blur();\n        }\n    };\n}\n\nexport class Root\n    extends TabsterPart<Types.RootProps, undefined>\n    implements Types.Root\n{\n    readonly uid: string;\n\n    private _dummyManager?: RootDummyManager;\n    private _sys?: Types.SysProps;\n    private _isFocused = false;\n    private _setFocusedTimer: number | undefined;\n    private _onDispose: (root: Root) => void;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        onDispose: (root: Root) => void,\n        props: Types.RootProps,\n        sys: Types.SysProps | undefined\n    ) {\n        super(tabster, element, props);\n\n        this._onDispose = onDispose;\n\n        const win = tabster.getWindow;\n        this.uid = getElementUId(win, element);\n\n        this._sys = sys;\n\n        if (tabster.controlTab || tabster.rootDummyInputs) {\n            this.addDummyInputs();\n        }\n\n        const w = win();\n        const doc = w.document;\n\n        doc.addEventListener(KEYBORG_FOCUSIN, this._onFocusIn);\n        doc.addEventListener(KEYBORG_FOCUSOUT, this._onFocusOut);\n\n        this._add();\n    }\n\n    addDummyInputs(): void {\n        if (!this._dummyManager) {\n            this._dummyManager = new RootDummyManager(\n                this._tabster,\n                this._element,\n                this._setFocused,\n                this._sys\n            );\n        }\n    }\n\n    dispose(): void {\n        this._onDispose(this);\n\n        const win = this._tabster.getWindow();\n        const doc = win.document;\n\n        doc.removeEventListener(KEYBORG_FOCUSIN, this._onFocusIn);\n        doc.removeEventListener(KEYBORG_FOCUSOUT, this._onFocusOut);\n\n        if (this._setFocusedTimer) {\n            win.clearTimeout(this._setFocusedTimer);\n            delete this._setFocusedTimer;\n        }\n\n        this._dummyManager?.dispose();\n        this._remove();\n    }\n\n    moveOutWithDefaultAction(isBackward: boolean, relatedEvent: KeyboardEvent) {\n        const dummyManager = this._dummyManager;\n\n        if (dummyManager) {\n            dummyManager.moveOutWithDefaultAction(isBackward, relatedEvent);\n        } else {\n            const el = this.getElement();\n\n            if (el) {\n                RootDummyManager.moveWithPhantomDummy(\n                    this._tabster,\n                    el,\n                    true,\n                    isBackward,\n                    relatedEvent\n                );\n            }\n        }\n    }\n\n    private _setFocused = (hasFocused: boolean): void => {\n        if (this._setFocusedTimer) {\n            this._tabster.getWindow().clearTimeout(this._setFocusedTimer);\n            delete this._setFocusedTimer;\n        }\n\n        if (this._isFocused === hasFocused) {\n            return;\n        }\n\n        const element = this._element.get();\n\n        if (element) {\n            if (hasFocused) {\n                this._isFocused = true;\n                this._dummyManager?.setTabbable(false);\n                element.dispatchEvent(new RootFocusEvent({ element }));\n            } else {\n                this._setFocusedTimer = this._tabster\n                    .getWindow()\n                    .setTimeout(() => {\n                        delete this._setFocusedTimer;\n\n                        this._isFocused = false;\n                        this._dummyManager?.setTabbable(true);\n                        element.dispatchEvent(new RootBlurEvent({ element }));\n                    }, 0);\n            }\n        }\n    };\n\n    private _onFocusIn = (event: FocusEvent) => {\n        const getParent = this._tabster.getParent;\n        const rootElement = this._element.get();\n        let curElement = event.composedPath()[0] as HTMLElement | null;\n\n        do {\n            if (curElement === rootElement) {\n                this._setFocused(true);\n                return;\n            }\n\n            curElement =\n                curElement && (getParent(curElement) as HTMLElement | null);\n        } while (curElement);\n    };\n\n    private _onFocusOut = () => {\n        this._setFocused(false);\n    };\n\n    private _add(): void {\n        if (__DEV__) {\n            _setInformativeStyle(this._element, false, this.uid);\n        }\n    }\n\n    private _remove(): void {\n        if (__DEV__) {\n            _setInformativeStyle(this._element, true);\n        }\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction validateRootProps(props: Types.RootProps): void {\n    // TODO: Implement validation.\n}\n\nexport class RootAPI implements Types.RootAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    private _autoRoot: Types.RootProps | undefined;\n    private _autoRootWaiting = false;\n    private _roots: Record<string, Types.Root> = {};\n    private _forceDummy = false;\n    rootById: { [id: string]: Types.Root } = {};\n\n    constructor(tabster: Types.TabsterCore, autoRoot?: Types.RootProps) {\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n        this._autoRoot = autoRoot;\n\n        tabster.queueInit(() => {\n            if (this._autoRoot) {\n                this._autoRootCreate();\n            }\n        });\n    }\n\n    private _autoRootCreate = (): Types.Root | undefined => {\n        const doc = this._win().document;\n        const body = doc.body;\n\n        if (body) {\n            this._autoRootUnwait(doc);\n\n            const props = this._autoRoot;\n\n            if (props) {\n                setTabsterAttribute(body, { root: props }, true);\n                updateTabsterByAttribute(this._tabster, body);\n                return getTabsterOnElement(this._tabster, body)?.root;\n            }\n        } else if (!this._autoRootWaiting) {\n            this._autoRootWaiting = true;\n            doc.addEventListener(\"readystatechange\", this._autoRootCreate);\n        }\n\n        return undefined;\n    };\n\n    private _autoRootUnwait(doc: Document): void {\n        doc.removeEventListener(\"readystatechange\", this._autoRootCreate);\n        this._autoRootWaiting = false;\n    }\n\n    dispose(): void {\n        const win = this._win();\n\n        this._autoRootUnwait(win.document);\n        delete this._autoRoot;\n\n        Object.keys(this._roots).forEach((rootId) => {\n            if (this._roots[rootId]) {\n                this._roots[rootId].dispose();\n                delete this._roots[rootId];\n            }\n        });\n\n        this.rootById = {};\n    }\n\n    createRoot(\n        element: HTMLElement,\n        props: Types.RootProps,\n        sys: Types.SysProps | undefined\n    ): Types.Root {\n        if (__DEV__) {\n            validateRootProps(props);\n        }\n\n        const newRoot = new Root(\n            this._tabster,\n            element,\n            this._onRootDispose,\n            props,\n            sys\n        ) as Types.Root;\n\n        this._roots[newRoot.id] = newRoot;\n\n        if (this._forceDummy) {\n            newRoot.addDummyInputs();\n        }\n\n        return newRoot;\n    }\n\n    addDummyInputs(): void {\n        this._forceDummy = true;\n\n        const roots = this._roots;\n\n        for (const id of Object.keys(roots)) {\n            roots[id].addDummyInputs();\n        }\n    }\n\n    static getRootByUId(\n        getWindow: Types.GetWindow,\n        id: string\n    ): Types.Root | undefined {\n        const tabster = (getWindow() as WindowWithTabsterInstance)\n            .__tabsterInstance;\n        return tabster && (tabster.root as RootAPI).rootById[id];\n    }\n\n    /**\n     * Fetches the tabster context for an element walking up its ancestors\n     *\n     * @param tabster Tabster instance\n     * @param element The element the tabster context should represent\n     * @param options Additional options\n     * @returns undefined if the element is not a child of a tabster root, otherwise all applicable tabster behaviours and configurations\n     */\n    static getTabsterContext(\n        tabster: Types.TabsterCore,\n        element: Node,\n        options: Types.GetTabsterContextOptions = {}\n    ): Types.TabsterContext | undefined {\n        if (!element.ownerDocument) {\n            return undefined;\n        }\n\n        const { checkRtl, referenceElement } = options;\n\n        const getParent = tabster.getParent;\n\n        // Normally, the initialization starts on the next tick after the tabster\n        // instance creation. However, if the application starts using it before\n        // the next tick, we need to make sure the initialization is done.\n        tabster.drainInitQueue();\n\n        let root: Types.Root | undefined;\n        let modalizer: Types.Modalizer | undefined;\n        let groupper: Types.Groupper | undefined;\n        let mover: Types.Mover | undefined;\n        let excludedFromMover = false;\n        let groupperBeforeMover: boolean | undefined;\n        let modalizerInGroupper: Types.Groupper | undefined;\n        let dirRightToLeft: boolean | undefined;\n        let uncontrolled: HTMLElement | null | undefined;\n        let curElement: Node | null = referenceElement || element;\n        const ignoreKeydown: Types.FocusableProps[\"ignoreKeydown\"] = {};\n\n        while (curElement && (!root || checkRtl)) {\n            const tabsterOnElement = getTabsterOnElement(\n                tabster,\n                curElement as HTMLElement\n            );\n\n            if (checkRtl && dirRightToLeft === undefined) {\n                const dir = (curElement as HTMLElement).dir;\n\n                if (dir) {\n                    dirRightToLeft = dir.toLowerCase() === \"rtl\";\n                }\n            }\n\n            if (!tabsterOnElement) {\n                curElement = getParent(curElement);\n                continue;\n            }\n\n            const tagName = (curElement as HTMLElement).tagName;\n\n            if (\n                tabsterOnElement.uncontrolled ||\n                tagName === \"IFRAME\" ||\n                tagName === \"WEBVIEW\"\n            ) {\n                uncontrolled = curElement as HTMLElement;\n            }\n\n            if (\n                !mover &&\n                tabsterOnElement.focusable?.excludeFromMover &&\n                !groupper\n            ) {\n                excludedFromMover = true;\n            }\n\n            const curModalizer = tabsterOnElement.modalizer;\n            const curGroupper = tabsterOnElement.groupper;\n            const curMover = tabsterOnElement.mover;\n\n            if (!modalizer && curModalizer) {\n                modalizer = curModalizer;\n            }\n\n            if (!groupper && curGroupper && (!modalizer || curModalizer)) {\n                if (modalizer) {\n                    // Modalizer dominates the groupper when they are on the same node and the groupper is active.\n                    if (\n                        !curGroupper.isActive() &&\n                        curGroupper.getProps().tabbability &&\n                        modalizer.userId !== tabster.modalizer?.activeId\n                    ) {\n                        modalizer = undefined;\n                        groupper = curGroupper;\n                    }\n\n                    modalizerInGroupper = curGroupper;\n                } else {\n                    groupper = curGroupper;\n                }\n            }\n\n            if (\n                !mover &&\n                curMover &&\n                (!modalizer || curModalizer) &&\n                (!curGroupper || curElement !== element) &&\n                curElement.contains(element) // Mover makes sense only for really inside elements, not for virutal out of the DOM order children.\n            ) {\n                mover = curMover;\n                groupperBeforeMover = !!groupper && groupper !== curGroupper;\n            }\n\n            if (tabsterOnElement.root) {\n                root = tabsterOnElement.root;\n            }\n\n            if (tabsterOnElement.focusable?.ignoreKeydown) {\n                Object.assign(\n                    ignoreKeydown,\n                    tabsterOnElement.focusable.ignoreKeydown\n                );\n            }\n\n            curElement = getParent(curElement);\n        }\n\n        // No root element could be found, try to get an auto root\n        if (!root) {\n            const rootAPI = tabster.root as RootAPI;\n            const autoRoot = rootAPI._autoRoot;\n\n            if (autoRoot) {\n                if (element.ownerDocument?.body) {\n                    root = rootAPI._autoRootCreate();\n                }\n            }\n        }\n\n        if (groupper && !mover) {\n            groupperBeforeMover = true;\n        }\n\n        if (__DEV__ && !root) {\n            if (modalizer || groupper || mover) {\n                console.error(\n                    \"Tabster Root is required for Mover, Groupper and Modalizer to work.\"\n                );\n            }\n        }\n\n        const shouldIgnoreKeydown = (event: KeyboardEvent) =>\n            !!ignoreKeydown[\n                event.key as keyof Types.FocusableProps[\"ignoreKeydown\"]\n            ];\n\n        return root\n            ? {\n                  root,\n                  modalizer,\n                  groupper,\n                  mover,\n                  groupperBeforeMover,\n                  modalizerInGroupper,\n                  rtl: checkRtl ? !!dirRightToLeft : undefined,\n                  uncontrolled,\n                  excludedFromMover,\n                  ignoreKeydown: shouldIgnoreKeydown,\n              }\n            : undefined;\n    }\n\n    static getRoot(\n        tabster: Types.TabsterCore,\n        element: HTMLElement\n    ): Types.Root | undefined {\n        const getParent = tabster.getParent;\n\n        for (\n            let el = element as HTMLElement | null;\n            el;\n            el = getParent(el) as HTMLElement | null\n        ) {\n            const root = getTabsterOnElement(tabster, el)?.root;\n\n            if (root) {\n                return root;\n            }\n        }\n\n        return undefined;\n    }\n\n    onRoot(root: Types.Root, removed?: boolean): void {\n        if (removed) {\n            delete this.rootById[root.uid];\n        } else {\n            this.rootById[root.uid] = root;\n        }\n    }\n\n    private _onRootDispose = (root: Root) => {\n        delete this._roots[root.id];\n    };\n}\n", "/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport { RootAPI } from \"./Root\";\nimport * as Types from \"./Types\";\nimport { DeloserStrategies, RestoreFocusOrders } from \"./Consts\";\nimport {\n    DeloserFocusLostEvent,\n    DeloserRestoreFocusEvent,\n    DeloserRestoreFocusEventName,\n    TabsterMoveFocusEvent,\n} from \"./Events\";\nimport {\n    documentContains,\n    getElementUId,\n    getPromise,\n    isDisplayNone,\n    TabsterPart,\n    WeakHTMLElement,\n} from \"./Utils\";\nimport { dom } from \"./DOMAPI\";\n\nconst _containerHistoryLength = 10;\n\nexport abstract class DeloserItemBase<C> {\n    abstract resetFocus(): Promise<boolean>;\n    abstract belongsTo(deloser: C): boolean;\n}\n\nexport class DeloserItem extends DeloserItemBase<Types.Deloser> {\n    readonly uid: string;\n    private _tabster: Types.TabsterCore;\n    private _deloser: Types.Deloser;\n\n    constructor(tabster: Types.TabsterCore, deloser: Types.Deloser) {\n        super();\n        this.uid = deloser.uid;\n        this._tabster = tabster;\n        this._deloser = deloser;\n    }\n\n    belongsTo(deloser: Types.Deloser): boolean {\n        return deloser === this._deloser;\n    }\n\n    unshift(element: HTMLElement): void {\n        this._deloser.unshift(element);\n    }\n\n    async focusAvailable(): Promise<boolean | null> {\n        const available = this._deloser.findAvailable();\n        const deloserElement = this._deloser.getElement();\n\n        if (available && deloserElement) {\n            if (\n                !deloserElement.dispatchEvent(\n                    new TabsterMoveFocusEvent({\n                        by: \"deloser\",\n                        owner: deloserElement,\n                        next: available,\n                    })\n                )\n            ) {\n                // Default action is prevented, don't look further.\n                return null;\n            }\n\n            return this._tabster.focusedElement.focus(available);\n        }\n\n        return false;\n    }\n\n    async resetFocus(): Promise<boolean> {\n        const getWindow = this._tabster.getWindow;\n        return getPromise(getWindow).resolve(this._deloser.resetFocus());\n    }\n}\n\nexport abstract class DeloserHistoryByRootBase<\n    I,\n    D extends DeloserItemBase<I>\n> {\n    protected _tabster: Types.TabsterCore;\n    protected _history: D[] = [];\n    readonly rootUId: string;\n\n    constructor(tabster: Types.TabsterCore, rootUId: string) {\n        this._tabster = tabster;\n        this.rootUId = rootUId;\n    }\n\n    getLength(): number {\n        return this._history.length;\n    }\n\n    removeDeloser(deloser: I): void {\n        this._history = this._history.filter((c) => !c.belongsTo(deloser));\n    }\n\n    hasDeloser(deloser: I): boolean {\n        return this._history.some((d) => d.belongsTo(deloser));\n    }\n\n    abstract focusAvailable(from: I | null): Promise<boolean | null>;\n    abstract resetFocus(from: I | null): Promise<boolean>;\n}\n\nclass DeloserHistoryByRoot extends DeloserHistoryByRootBase<\n    Types.Deloser,\n    DeloserItem\n> {\n    unshiftToDeloser(deloser: Types.Deloser, element: HTMLElement): void {\n        let item: DeloserItem | undefined;\n\n        for (let i = 0; i < this._history.length; i++) {\n            if (this._history[i].belongsTo(deloser)) {\n                item = this._history[i];\n                this._history.splice(i, 1);\n                break;\n            }\n        }\n\n        if (!item) {\n            item = new DeloserItem(this._tabster, deloser);\n        }\n\n        item.unshift(element);\n\n        this._history.unshift(item);\n\n        this._history.splice(\n            _containerHistoryLength,\n            this._history.length - _containerHistoryLength\n        );\n    }\n\n    async focusAvailable(from: Types.Deloser | null): Promise<boolean | null> {\n        let skip = !!from;\n\n        for (const i of this._history) {\n            if (from && i.belongsTo(from)) {\n                skip = false;\n            }\n\n            if (!skip) {\n                const result = await i.focusAvailable();\n\n                // Result is null when the default action is prevented by the application\n                // and we don't need to look further.\n                if (result || result === null) {\n                    return result;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    async resetFocus(from: Types.Deloser | null): Promise<boolean> {\n        let skip = !!from;\n        const resetQueue: { [id: string]: DeloserItem } = {};\n\n        for (const i of this._history) {\n            if (from && i.belongsTo(from)) {\n                skip = false;\n            }\n\n            if (!skip && !resetQueue[i.uid]) {\n                resetQueue[i.uid] = i;\n            }\n        }\n\n        // Nothing is found, at least try to reset.\n        for (const id of Object.keys(resetQueue)) {\n            if (await resetQueue[id].resetFocus()) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n\nexport class DeloserHistory {\n    private _tabster: Types.TabsterCore;\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    private _history: DeloserHistoryByRootBase<\n        unknown,\n        DeloserItemBase<unknown>\n    >[] = [];\n\n    constructor(tabster: Types.TabsterCore) {\n        this._tabster = tabster;\n    }\n\n    dispose(): void {\n        this._history = [];\n    }\n\n    process(element: HTMLElement): Types.Deloser | undefined {\n        const ctx = RootAPI.getTabsterContext(this._tabster, element);\n        const rootUId = ctx && ctx.root.uid;\n        const deloser = DeloserAPI.getDeloser(this._tabster, element);\n\n        if (!rootUId || !deloser) {\n            return undefined;\n        }\n\n        const historyByRoot = this.make(\n            rootUId,\n            () => new DeloserHistoryByRoot(this._tabster, rootUId)\n        );\n\n        if (!ctx || !ctx.modalizer || ctx.modalizer?.isActive()) {\n            historyByRoot.unshiftToDeloser(deloser, element);\n        }\n\n        return deloser;\n    }\n\n    make<\n        I,\n        D extends DeloserItemBase<I>,\n        C extends DeloserHistoryByRootBase<I, D>\n    >(rootUId: string, createInstance: () => C): C {\n        let historyByRoot: C | undefined;\n\n        for (let i = 0; i < this._history.length; i++) {\n            const hbr = this._history[i] as C;\n\n            if (hbr.rootUId === rootUId) {\n                historyByRoot = hbr;\n                this._history.splice(i, 1);\n                break;\n            }\n        }\n\n        if (!historyByRoot) {\n            historyByRoot = createInstance();\n        }\n\n        this._history.unshift(historyByRoot);\n\n        this._history.splice(\n            _containerHistoryLength,\n            this._history.length - _containerHistoryLength\n        );\n\n        return historyByRoot;\n    }\n\n    removeDeloser(deloser: Types.Deloser): void {\n        this._history.forEach((i) => {\n            i.removeDeloser(deloser);\n        });\n\n        this._history = this._history.filter((i) => i.getLength() > 0);\n    }\n\n    async focusAvailable(from: Types.Deloser | null): Promise<boolean | null> {\n        let skip = !!from;\n\n        for (const h of this._history) {\n            if (from && h.hasDeloser(from)) {\n                skip = false;\n            }\n\n            if (!skip) {\n                const result = await h.focusAvailable(from);\n\n                // Result is null when the default action is prevented by the application\n                // and we don't need to look further.\n                if (result || result === null) {\n                    return result;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    async resetFocus(from: Types.Deloser | null): Promise<boolean> {\n        let skip = !!from;\n\n        for (const h of this._history) {\n            if (from && h.hasDeloser(from)) {\n                skip = false;\n            }\n\n            if (!skip && (await h.resetFocus(from))) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n\nfunction _setInformativeStyle(\n    weakElement: WeakHTMLElement,\n    remove: boolean,\n    isActive?: boolean,\n    snapshotIndex?: number\n): void {\n    if (__DEV__) {\n        const element = weakElement.get();\n\n        if (element) {\n            if (remove) {\n                element.style.removeProperty(\"--tabster-deloser\");\n            } else {\n                element.style.setProperty(\n                    \"--tabster-deloser\",\n                    (isActive ? \"active\" : \"inactive\") +\n                        \",\" +\n                        (\"snapshot-\" + snapshotIndex)\n                );\n            }\n        }\n    }\n}\n\nfunction buildElementSelector(\n    element: HTMLElement,\n    withClass?: boolean,\n    withIndex?: boolean\n): string {\n    const selector: string[] = [];\n    const escapeRegExp = /(:|\\.|\\[|\\]|,|=|@)/g;\n    const escapeReplaceValue = \"\\\\$1\";\n\n    const elementId = element.getAttribute(\"id\");\n\n    if (elementId) {\n        selector.push(\n            \"#\" + elementId.replace(escapeRegExp, escapeReplaceValue)\n        );\n    }\n\n    if (withClass !== false && element.className) {\n        element.className.split(\" \").forEach((cls) => {\n            cls = cls.trim();\n\n            if (cls) {\n                selector.push(\n                    \".\" + cls.replace(escapeRegExp, escapeReplaceValue)\n                );\n            }\n        });\n    }\n\n    let index = 0;\n    let el: Element | null;\n\n    if (withIndex !== false && selector.length === 0) {\n        el = element;\n        while (el) {\n            index++;\n            el = el.previousElementSibling;\n        }\n        selector.unshift(\":nth-child(\" + index + \")\");\n    }\n\n    selector.unshift(element.tagName.toLowerCase());\n\n    return selector.join(\"\");\n}\n\nfunction buildSelector(element: HTMLElement): string | undefined {\n    if (!documentContains(element.ownerDocument, element)) {\n        return undefined;\n    }\n\n    const selector: string[] = [buildElementSelector(element)];\n\n    let node = dom.getParentNode(element);\n\n    while (node && node.nodeType !== Node.DOCUMENT_FRAGMENT_NODE) {\n        // Stop at the shadow root as cross shadow selectors won't work.\n        if (node.nodeType === Node.ELEMENT_NODE) {\n            const isBody = (node as HTMLElement).tagName === \"BODY\";\n\n            selector.unshift(\n                buildElementSelector(node as HTMLElement, false, !isBody)\n            );\n\n            if (isBody) {\n                break;\n            }\n        }\n\n        node = dom.getParentNode(node);\n    }\n\n    return selector.join(\" \");\n}\n\nexport class Deloser\n    extends TabsterPart<Types.DeloserProps>\n    implements Types.Deloser\n{\n    readonly uid: string;\n    readonly strategy: Types.DeloserStrategy;\n    private _isActive = false;\n    private _history: WeakHTMLElement<HTMLElement, string>[][] = [[]];\n    private _snapshotIndex = 0;\n    private _onDispose: (deloser: Deloser) => void;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        onDispose: (deloser: Deloser) => void,\n        props: Types.DeloserProps\n    ) {\n        super(tabster, element, props);\n\n        this.uid = getElementUId(tabster.getWindow, element);\n        this.strategy = props.strategy || DeloserStrategies.Auto;\n        this._onDispose = onDispose;\n\n        if (__DEV__) {\n            _setInformativeStyle(\n                this._element,\n                false,\n                this._isActive,\n                this._snapshotIndex\n            );\n        }\n    }\n\n    dispose(): void {\n        this._remove();\n\n        this._onDispose(this);\n\n        this._isActive = false;\n        this._snapshotIndex = 0;\n\n        this._props = {};\n        this._history = [];\n    }\n\n    isActive = (): boolean => {\n        return this._isActive;\n    };\n\n    setActive(active: boolean): void {\n        this._isActive = active;\n\n        if (__DEV__) {\n            _setInformativeStyle(\n                this._element,\n                false,\n                this._isActive,\n                this._snapshotIndex\n            );\n        }\n    }\n\n    getActions(): Types.DeloserElementActions {\n        return {\n            focusDefault: this.focusDefault,\n            focusFirst: this.focusFirst,\n            resetFocus: this.resetFocus,\n            clearHistory: this.clearHistory,\n            setSnapshot: this.setSnapshot,\n            isActive: this.isActive,\n        };\n    }\n\n    setSnapshot = (index: number): void => {\n        this._snapshotIndex = index;\n\n        if (this._history.length > index + 1) {\n            this._history.splice(index + 1, this._history.length - index - 1);\n        }\n\n        if (!this._history[index]) {\n            this._history[index] = [];\n        }\n\n        if (__DEV__) {\n            _setInformativeStyle(\n                this._element,\n                false,\n                this._isActive,\n                this._snapshotIndex\n            );\n        }\n    };\n\n    focusFirst = (): boolean => {\n        const e = this._element.get();\n        return !!e && this._tabster.focusedElement.focusFirst({ container: e });\n    };\n\n    unshift(element: HTMLElement): void {\n        let cur = this._history[this._snapshotIndex];\n\n        cur = this._history[this._snapshotIndex] = cur.filter((we) => {\n            const e = we.get();\n            return e && e !== element;\n        });\n\n        cur.unshift(\n            new WeakHTMLElement(\n                this._tabster.getWindow,\n                element,\n                buildSelector(element)\n            )\n        );\n\n        while (cur.length > _containerHistoryLength) {\n            cur.pop();\n        }\n    }\n\n    focusDefault = (): boolean => {\n        const e = this._element.get();\n        return !!e && this._tabster.focusedElement.focusDefault(e);\n    };\n\n    resetFocus = (): boolean => {\n        const e = this._element.get();\n        return !!e && this._tabster.focusedElement.resetFocus(e);\n    };\n\n    findAvailable(): HTMLElement | null {\n        const element = this._element.get();\n\n        if (!element || !this._tabster.focusable.isVisible(element)) {\n            return null;\n        }\n\n        let restoreFocusOrder = this._props.restoreFocusOrder;\n        let available: HTMLElement | null = null;\n\n        const ctx = RootAPI.getTabsterContext(this._tabster, element);\n\n        if (!ctx) {\n            return null;\n        }\n\n        const root = ctx.root;\n        const rootElement = root.getElement();\n\n        if (!rootElement) {\n            return null;\n        }\n\n        if (restoreFocusOrder === undefined) {\n            restoreFocusOrder = root.getProps().restoreFocusOrder;\n        }\n\n        if (restoreFocusOrder === RestoreFocusOrders.RootDefault) {\n            available = this._tabster.focusable.findDefault({\n                container: rootElement,\n            });\n        }\n\n        if (!available && restoreFocusOrder === RestoreFocusOrders.RootFirst) {\n            available = this._findFirst(rootElement);\n        }\n\n        if (available) {\n            return available;\n        }\n\n        const availableInHistory = this._findInHistory();\n\n        if (\n            availableInHistory &&\n            restoreFocusOrder === RestoreFocusOrders.History\n        ) {\n            return availableInHistory;\n        }\n\n        const availableDefault = this._tabster.focusable.findDefault({\n            container: element,\n        });\n\n        if (\n            availableDefault &&\n            restoreFocusOrder === RestoreFocusOrders.DeloserDefault\n        ) {\n            return availableDefault;\n        }\n\n        const availableFirst = this._findFirst(element);\n\n        if (\n            availableFirst &&\n            restoreFocusOrder === RestoreFocusOrders.DeloserFirst\n        ) {\n            return availableFirst;\n        }\n\n        return availableDefault || availableInHistory || availableFirst || null;\n    }\n\n    clearHistory = (preserveExisting?: boolean): void => {\n        const element = this._element.get();\n\n        if (!element) {\n            this._history[this._snapshotIndex] = [];\n\n            return;\n        }\n\n        this._history[this._snapshotIndex] = this._history[\n            this._snapshotIndex\n        ].filter((we) => {\n            const e = we.get();\n            return e && preserveExisting ? dom.nodeContains(element, e) : false;\n        });\n    };\n\n    customFocusLostHandler(element: HTMLElement): boolean {\n        return element.dispatchEvent(\n            new DeloserFocusLostEvent(this.getActions())\n        );\n    }\n\n    private _findInHistory(): HTMLElement | null {\n        const cur = this._history[this._snapshotIndex].slice(0);\n\n        this.clearHistory(true);\n\n        for (let i = 0; i < cur.length; i++) {\n            const we = cur[i];\n            const e = we.get();\n            const element = this._element.get();\n\n            if (e && element && dom.nodeContains(element, e)) {\n                if (this._tabster.focusable.isFocusable(e)) {\n                    return e;\n                }\n            } else if (!this._props.noSelectorCheck) {\n                // Element is not in the DOM, try to locate the node by it's\n                // selector. This might return not exactly the right node,\n                // but it would be easily fixable by having more detailed selectors.\n                const selector = we.getData();\n\n                if (selector && element) {\n                    let els: Element[];\n\n                    try {\n                        els = dom.querySelectorAll(\n                            element.ownerDocument,\n                            selector\n                        );\n                    } catch (e) {\n                        if (__DEV__) {\n                            // This should never happen, unless there is some bug in buildElementSelector().\n                            console.error(\n                                `Failed to querySelectorAll('${selector}')`\n                            );\n                        }\n                        continue;\n                    }\n\n                    for (let i = 0; i < els.length; i++) {\n                        const el = els[i] as HTMLElement;\n\n                        if (el && this._tabster.focusable.isFocusable(el)) {\n                            return el;\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n\n    private _findFirst(element: HTMLElement): HTMLElement | null {\n        if (this._tabster.keyboardNavigation.isNavigatingWithKeyboard()) {\n            const first = this._tabster.focusable.findFirst({\n                container: element,\n                useActiveModalizer: true,\n            });\n\n            if (first) {\n                return first;\n            }\n        }\n\n        return null;\n    }\n\n    private _remove(): void {\n        if (__DEV__) {\n            _setInformativeStyle(this._element, true);\n        }\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction validateDeloserProps(props: Types.DeloserProps): void {\n    // TODO: Implement validation.\n}\n\nexport class DeloserAPI implements Types.DeloserAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    /**\n     * Tracks if focus is inside a deloser\n     */\n    private _inDeloser = false;\n    private _curDeloser: Types.Deloser | undefined;\n    private _history: DeloserHistory;\n    private _restoreFocusTimer: number | undefined;\n    private _isRestoringFocus = false;\n    private _isPaused = false;\n    private _autoDeloser: Types.DeloserProps | undefined;\n    private _autoDeloserInstance: Deloser | undefined;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        props?: { autoDeloser: Types.DeloserProps }\n    ) {\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n        this._history = new DeloserHistory(tabster);\n\n        tabster.queueInit(() => {\n            this._tabster.focusedElement.subscribe(this._onFocus);\n            const doc = this._win().document;\n\n            doc.addEventListener(\n                DeloserRestoreFocusEventName,\n                this._onRestoreFocus\n            );\n\n            const activeElement = dom.getActiveElement(doc);\n\n            if (activeElement && activeElement !== doc.body) {\n                // Adding currently focused element to the deloser history.\n                this._onFocus(activeElement as HTMLElement);\n            }\n        });\n\n        const autoDeloser = props?.autoDeloser;\n        if (autoDeloser) {\n            this._autoDeloser = autoDeloser;\n        }\n    }\n\n    dispose(): void {\n        const win = this._win();\n\n        if (this._restoreFocusTimer) {\n            win.clearTimeout(this._restoreFocusTimer);\n            this._restoreFocusTimer = undefined;\n        }\n\n        if (this._autoDeloserInstance) {\n            this._autoDeloserInstance.dispose();\n            delete this._autoDeloserInstance;\n            delete this._autoDeloser;\n        }\n\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n\n        win.document.removeEventListener(\n            DeloserRestoreFocusEventName,\n            this._onRestoreFocus\n        );\n\n        this._history.dispose();\n\n        delete this._curDeloser;\n    }\n\n    createDeloser(\n        element: HTMLElement,\n        props: Types.DeloserProps\n    ): Types.Deloser {\n        if (__DEV__) {\n            validateDeloserProps(props);\n        }\n\n        const deloser = new Deloser(\n            this._tabster,\n            element,\n            this._onDeloserDispose,\n            props\n        );\n\n        if (\n            dom.nodeContains(\n                element,\n                this._tabster.focusedElement.getFocusedElement() ?? null\n            )\n        ) {\n            this._activate(deloser);\n        }\n\n        return deloser;\n    }\n\n    getActions(element: HTMLElement): Types.DeloserElementActions | undefined {\n        for (\n            let e: HTMLElement | null = element;\n            e;\n            e = dom.getParentElement(e)\n        ) {\n            const tabsterOnElement = getTabsterOnElement(this._tabster, e);\n\n            if (tabsterOnElement && tabsterOnElement.deloser) {\n                return tabsterOnElement.deloser.getActions();\n            }\n        }\n\n        return undefined;\n    }\n\n    pause(): void {\n        this._isPaused = true;\n\n        if (this._restoreFocusTimer) {\n            this._win().clearTimeout(this._restoreFocusTimer);\n            this._restoreFocusTimer = undefined;\n        }\n    }\n\n    resume(restore?: boolean): void {\n        this._isPaused = false;\n\n        if (restore) {\n            this._scheduleRestoreFocus();\n        }\n    }\n\n    private _onRestoreFocus = (event: DeloserRestoreFocusEvent): void => {\n        const target = event.composedPath()[0] as\n            | HTMLElement\n            | null\n            | undefined;\n\n        if (target) {\n            const available = DeloserAPI.getDeloser(\n                this._tabster,\n                target\n            )?.findAvailable();\n\n            if (available) {\n                this._tabster.focusedElement.focus(available);\n            }\n\n            event.stopImmediatePropagation();\n        }\n    };\n\n    private _onFocus = (e: HTMLElement | undefined): void => {\n        if (this._restoreFocusTimer) {\n            this._win().clearTimeout(this._restoreFocusTimer);\n            this._restoreFocusTimer = undefined;\n        }\n\n        if (!e) {\n            this._scheduleRestoreFocus();\n\n            return;\n        }\n\n        const deloser = this._history.process(e);\n\n        if (deloser) {\n            this._activate(deloser);\n        } else {\n            this._deactivate();\n        }\n    };\n\n    /**\n     * Activates and sets the current deloser\n     */\n    private _activate(deloser: Types.Deloser) {\n        const curDeloser = this._curDeloser;\n        if (curDeloser !== deloser) {\n            this._inDeloser = true;\n            curDeloser?.setActive(false);\n            deloser.setActive(true);\n            this._curDeloser = deloser;\n        }\n    }\n\n    /**\n     * Called when focus should no longer be in a deloser\n     */\n    private _deactivate() {\n        this._inDeloser = false;\n        this._curDeloser?.setActive(false);\n        this._curDeloser = undefined;\n    }\n\n    private _scheduleRestoreFocus(force?: boolean): void {\n        if (this._isPaused || this._isRestoringFocus) {\n            return;\n        }\n\n        const restoreFocus = async () => {\n            this._restoreFocusTimer = undefined;\n            const lastFocused =\n                this._tabster.focusedElement.getLastFocusedElement();\n\n            if (\n                !force &&\n                (this._isRestoringFocus ||\n                    !this._inDeloser ||\n                    (lastFocused && !isDisplayNone(lastFocused)))\n            ) {\n                return;\n            }\n\n            const curDeloser = this._curDeloser;\n            let isManual = false;\n\n            if (curDeloser) {\n                if (\n                    lastFocused &&\n                    curDeloser.customFocusLostHandler(lastFocused)\n                ) {\n                    return;\n                }\n\n                if (curDeloser.strategy === DeloserStrategies.Manual) {\n                    isManual = true;\n                } else {\n                    const curDeloserElement = curDeloser.getElement();\n                    const el = curDeloser.findAvailable();\n\n                    if (\n                        el &&\n                        (!curDeloserElement?.dispatchEvent(\n                            new TabsterMoveFocusEvent({\n                                by: \"deloser\",\n                                owner: curDeloserElement,\n                                next: el,\n                            })\n                        ) ||\n                            this._tabster.focusedElement.focus(el))\n                    ) {\n                        return;\n                    }\n                }\n            }\n\n            this._deactivate();\n\n            if (isManual) {\n                return;\n            }\n\n            this._isRestoringFocus = true;\n\n            // focusAvailable returns null when the default action is prevented by the application, false\n            // when nothing was focused and true when something was focused.\n            if ((await this._history.focusAvailable(null)) === false) {\n                await this._history.resetFocus(null);\n            }\n\n            this._isRestoringFocus = false;\n        };\n\n        if (force) {\n            restoreFocus();\n        } else {\n            this._restoreFocusTimer = this._win().setTimeout(restoreFocus, 100);\n        }\n    }\n\n    static getDeloser(\n        tabster: Types.TabsterCore,\n        element: HTMLElement\n    ): Types.Deloser | undefined {\n        let root: Types.Root | undefined;\n\n        for (\n            let e: HTMLElement | null = element;\n            e;\n            e = dom.getParentElement(e)\n        ) {\n            const tabsterOnElement = getTabsterOnElement(tabster, e);\n\n            if (tabsterOnElement) {\n                if (!root) {\n                    root = tabsterOnElement.root;\n                }\n\n                const deloser = tabsterOnElement.deloser;\n\n                if (deloser) {\n                    return deloser;\n                }\n            }\n        }\n\n        const deloserAPI = tabster.deloser && (tabster.deloser as DeloserAPI);\n\n        if (deloserAPI) {\n            if (deloserAPI._autoDeloserInstance) {\n                return deloserAPI._autoDeloserInstance;\n            }\n\n            const autoDeloserProps = deloserAPI._autoDeloser;\n\n            if (root && !deloserAPI._autoDeloserInstance && autoDeloserProps) {\n                const body = element.ownerDocument?.body;\n\n                if (body) {\n                    deloserAPI._autoDeloserInstance = new Deloser(\n                        tabster,\n                        body,\n                        (tabster.deloser as DeloserAPI)._onDeloserDispose,\n                        autoDeloserProps\n                    );\n                }\n            }\n\n            return deloserAPI._autoDeloserInstance;\n        }\n\n        return undefined;\n    }\n\n    private _onDeloserDispose = (deloser: Deloser) => {\n        this._history.removeDeloser(deloser);\n\n        if (deloser.isActive()) {\n            this._scheduleRestoreFocus();\n        }\n    };\n\n    static getHistory(instance: Types.DeloserAPI): DeloserHistory {\n        return (instance as DeloserAPI)._history;\n    }\n\n    static forceRestoreFocus(instance: Types.DeloserAPI): void {\n        (instance as DeloserAPI)._scheduleRestoreFocus(true);\n    }\n}\n", "/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as Types from \"../Types\";\n\nexport abstract class Subscribable<A, B = undefined>\n    implements Types.Subscribable<A, B>\n{\n    protected _val: A | undefined;\n    private _callbacks: Types.SubscribableCallback<A, B>[] = [];\n\n    dispose(): void {\n        this._callbacks = [];\n        delete this._val;\n    }\n\n    subscribe(callback: Types.SubscribableCallback<A, B>): void {\n        const callbacks = this._callbacks;\n        const index = callbacks.indexOf(callback);\n\n        if (index < 0) {\n            callbacks.push(callback);\n        }\n    }\n\n    subscribeFirst(callback: Types.SubscribableCallback<A, B>): void {\n        const callbacks = this._callbacks;\n        const index = callbacks.indexOf(callback);\n\n        if (index >= 0) {\n            callbacks.splice(index, 1);\n        }\n\n        callbacks.unshift(callback);\n    }\n\n    unsubscribe(callback: Types.SubscribableCallback<A, B>): void {\n        const index = this._callbacks.indexOf(callback);\n\n        if (index >= 0) {\n            this._callbacks.splice(index, 1);\n        }\n    }\n\n    protected setVal(val: A, detail: B): void {\n        if (this._val === val) {\n            return;\n        }\n\n        this._val = val;\n\n        this._callCallbacks(val, detail);\n    }\n\n    protected getVal(): A | undefined {\n        return this._val;\n    }\n\n    protected trigger(val: A, detail: B): void {\n        this._callCallbacks(val, detail);\n    }\n\n    private _callCallbacks(val: A, detail: B): void {\n        this._callbacks.forEach((callback) => callback(val, detail));\n    }\n}\n", "/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    DeloserAPI,\n    DeloserHistoryByRootBase,\n    DeloserItemBase,\n} from \"./Deloser\";\nimport { getTabsterOnElement } from \"./Instance\";\nimport { RootAPI } from \"./Root\";\nimport { Subscribable } from \"./State/Subscribable\";\nimport * as Types from \"./Types\";\nimport { ObservedElementAccessibilities } from \"./Consts\";\nimport {\n    getElementUId,\n    getInstanceContext,\n    getPromise,\n    getUId,\n    getWindowUId,\n    HTMLElementWithUID,\n} from \"./Utils\";\nimport { dom } from \"./DOMAPI\";\n\nconst _transactionTimeout = 1500;\nconst _pingTimeout = 3000;\n\nconst _targetIdUp = \"up\";\n\nconst CrossOriginTransactionTypes: Types.CrossOriginTransactionTypes = {\n    Bootstrap: 1,\n    FocusElement: 2,\n    State: 3,\n    GetElement: 4,\n    RestoreFocusInDeloser: 5,\n    Ping: 6,\n};\n\ninterface CrossOriginInstanceContext {\n    ignoreKeyboardNavigationStateUpdate: boolean;\n    focusOwner?: string;\n    focusOwnerTimestamp?: number;\n    deloserByUId: { [uid: string]: Types.Deloser };\n    origOutlineSetup?: (props?: Partial<Types.OutlineProps>) => void;\n}\n\ninterface KnownTargets {\n    [id: string]: {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        send: (payload: Types.CrossOriginTransactionData<any, any>) => void;\n        last?: number;\n    };\n}\n\nclass CrossOriginDeloserItem extends DeloserItemBase<CrossOriginDeloser> {\n    private _deloser: CrossOriginDeloser;\n    private _transactions: CrossOriginTransactions;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        deloser: CrossOriginDeloser,\n        trasactions: CrossOriginTransactions\n    ) {\n        super();\n        this._deloser = deloser;\n        this._transactions = trasactions;\n    }\n\n    belongsTo(deloser: CrossOriginDeloser): boolean {\n        return deloser.deloserUId === this._deloser.deloserUId;\n    }\n\n    async focusAvailable(): Promise<boolean | null> {\n        const data: RestoreFocusInDeloserTransactionData = {\n            ...this._deloser,\n            reset: false,\n        };\n\n        return this._transactions\n            .beginTransaction(RestoreFocusInDeloserTransaction, data)\n            .then((value) => !!value);\n    }\n\n    async resetFocus(): Promise<boolean> {\n        const data: RestoreFocusInDeloserTransactionData = {\n            ...this._deloser,\n            reset: true,\n        };\n\n        return this._transactions\n            .beginTransaction(RestoreFocusInDeloserTransaction, data)\n            .then((value) => !!value);\n    }\n}\n\nclass CrossOriginDeloserHistoryByRoot extends DeloserHistoryByRootBase<\n    CrossOriginDeloser,\n    CrossOriginDeloserItem\n> {\n    private _transactions: CrossOriginTransactions;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        rootUId: string,\n        transactions: CrossOriginTransactions\n    ) {\n        super(tabster, rootUId);\n        this._transactions = transactions;\n    }\n\n    unshift(deloser: CrossOriginDeloser): void {\n        let item: CrossOriginDeloserItem | undefined;\n\n        for (let i = 0; i < this._history.length; i++) {\n            if (this._history[i].belongsTo(deloser)) {\n                item = this._history[i];\n                this._history.splice(i, 1);\n                break;\n            }\n        }\n\n        if (!item) {\n            item = new CrossOriginDeloserItem(\n                this._tabster,\n                deloser,\n                this._transactions\n            );\n        }\n\n        this._history.unshift(item);\n\n        this._history.splice(10, this._history.length - 10);\n    }\n\n    async focusAvailable(): Promise<boolean | null> {\n        for (const i of this._history) {\n            if (await i.focusAvailable()) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    async resetFocus(): Promise<boolean> {\n        for (const i of this._history) {\n            if (await i.resetFocus()) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n\nabstract class CrossOriginTransaction<I, O> {\n    abstract type: Types.CrossOriginTransactionType;\n    readonly id: string;\n    readonly beginData: I;\n    readonly timeout?: number;\n    protected tabster: Types.TabsterCore;\n    protected endData: O | undefined;\n    protected owner: Types.GetWindow;\n    protected ownerId: string;\n    protected sendUp: Types.CrossOriginTransactionSend | undefined;\n    private _promise: Promise<O>;\n    protected _resolve: ((endData?: O | PromiseLike<O>) => void) | undefined;\n    private _reject: ((reason: string) => void) | undefined;\n    private _knownTargets: KnownTargets;\n    private _sentTo: Types.CrossOriginSentTo;\n    protected targetId: string | undefined;\n    private _inProgress: { [id: string]: boolean } = {};\n    private _isDone = false;\n    private _isSelfResponding = false;\n    private _sentCount = 0;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        getOwner: Types.GetWindow,\n        knownTargets: KnownTargets,\n        value: I,\n        timeout?: number,\n        sentTo?: Types.CrossOriginSentTo,\n        targetId?: string,\n        sendUp?: Types.CrossOriginTransactionSend\n    ) {\n        this.tabster = tabster;\n        this.owner = getOwner;\n        this.ownerId = getWindowUId(getOwner());\n        this.id = getUId(getOwner());\n        this.beginData = value;\n        this._knownTargets = knownTargets;\n        this._sentTo = sentTo || { [this.ownerId]: true };\n        this.targetId = targetId;\n        this.sendUp = sendUp;\n        this.timeout = timeout;\n        this._promise = new (getPromise(getOwner))<O>((resolve, reject) => {\n            this._resolve = resolve;\n            this._reject = reject;\n        });\n    }\n\n    protected getTargets(knownTargets: KnownTargets): KnownTargets | null {\n        return this.targetId === _targetIdUp\n            ? this.sendUp\n                ? { [_targetIdUp]: { send: this.sendUp } }\n                : null\n            : this.targetId\n            ? knownTargets[this.targetId]\n                ? {\n                      [this.targetId]: {\n                          send: knownTargets[this.targetId].send,\n                      },\n                  }\n                : null\n            : Object.keys(knownTargets).length === 0 && this.sendUp\n            ? { [_targetIdUp]: { send: this.sendUp } }\n            : Object.keys(knownTargets).length > 0\n            ? knownTargets\n            : null;\n    }\n\n    begin(\n        selfResponse?: (\n            data: Types.CrossOriginTransactionData<I, O>\n        ) => Promise<O | undefined>\n    ): Promise<O | undefined> {\n        const targets = this.getTargets(this._knownTargets);\n        const sentTo: Types.CrossOriginSentTo = { ...this._sentTo };\n\n        if (targets) {\n            for (const id of Object.keys(targets)) {\n                sentTo[id] = true;\n            }\n        }\n\n        const data: Types.CrossOriginTransactionData<I, O> = {\n            transaction: this.id,\n            type: this.type,\n            isResponse: false,\n            timestamp: Date.now(),\n            owner: this.ownerId,\n            sentto: sentTo,\n            timeout: this.timeout,\n            beginData: this.beginData,\n        };\n\n        if (this.targetId) {\n            data.target = this.targetId;\n        }\n\n        if (selfResponse) {\n            this._isSelfResponding = true;\n\n            selfResponse(data).then((value) => {\n                this._isSelfResponding = false;\n\n                if (value !== undefined) {\n                    if (!this.endData) {\n                        this.endData = value;\n                    }\n                }\n\n                if (this.endData || this._sentCount === 0) {\n                    this.end();\n                }\n            });\n        }\n\n        if (targets) {\n            for (const id of Object.keys(targets)) {\n                if (!(id in this._sentTo)) {\n                    this._send(targets[id].send, id, data);\n                }\n            }\n        }\n\n        if (this._sentCount === 0 && !this._isSelfResponding) {\n            this.end();\n        }\n\n        return this._promise;\n    }\n\n    private _send(\n        send: (data: Types.CrossOriginTransactionData<I, O>) => void,\n        targetId: string,\n        data: Types.CrossOriginTransactionData<I, O>\n    ) {\n        if (this._inProgress[targetId] === undefined) {\n            this._inProgress[targetId] = true;\n            this._sentCount++;\n            send(data);\n        }\n    }\n\n    end(error?: string): void {\n        if (this._isDone) {\n            return;\n        }\n\n        this._isDone = true;\n\n        if (this.endData === undefined && error) {\n            if (this._reject) {\n                this._reject(error);\n            }\n        } else if (this._resolve) {\n            this._resolve(this.endData);\n        }\n    }\n\n    onResponse(data: Types.CrossOriginTransactionData<I, O>): void {\n        const endData = data.endData;\n\n        if (endData !== undefined && !this.endData) {\n            this.endData = endData;\n        }\n\n        const inProgressId =\n            data.target === _targetIdUp ? _targetIdUp : data.owner;\n\n        if (this._inProgress[inProgressId]) {\n            this._inProgress[inProgressId] = false;\n            this._sentCount--;\n\n            if (\n                this.endData ||\n                (this._sentCount === 0 && !this._isSelfResponding)\n            ) {\n                this.end();\n            }\n        }\n    }\n}\n\ninterface CrossOriginTransactionClass<I, O> {\n    new (\n        tabster: Types.TabsterCore,\n        getOwner: Types.GetWindow,\n        knownTargets: KnownTargets,\n        value: I,\n        timeout?: number,\n        sentTo?: Types.CrossOriginSentTo,\n        targetId?: string,\n        sendUp?: Types.CrossOriginTransactionSend\n    ): CrossOriginTransaction<I, O>;\n    shouldForward?(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<I, O>,\n        getOwner: Types.GetWindow,\n        ownerId: string\n    ): boolean;\n    makeResponse(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<I, O>,\n        getOwner: Types.GetWindow,\n        ownerId: string,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<O | undefined>,\n        isSelfResponse?: boolean\n    ): Promise<O>;\n    shouldSelfRespond?(\n        tabster: Types.TabsterCore,\n        data: I,\n        getOwner: Types.GetWindow,\n        ownerId: string\n    ): boolean;\n}\n\ninterface BootstrapTransactionContents {\n    isNavigatingWithKeyboard: boolean;\n}\n\nclass BootstrapTransaction extends CrossOriginTransaction<\n    undefined,\n    BootstrapTransactionContents\n> {\n    type = CrossOriginTransactionTypes.Bootstrap;\n\n    static shouldForward() {\n        return false;\n    }\n\n    static async makeResponse(\n        tabster: Types.TabsterCore\n    ): Promise<BootstrapTransactionContents> {\n        return {\n            isNavigatingWithKeyboard:\n                tabster.keyboardNavigation.isNavigatingWithKeyboard(),\n        };\n    }\n}\n\ninterface CrossOriginElementDataIn {\n    uid?: string;\n    id?: string;\n    rootId?: string;\n    ownerId?: string;\n    observedName?: string;\n    /**\n     * Optionally wait if the element is accessible or focusable before returning it\n     */\n    accessibility?: Types.ObservedElementAccessibility;\n}\n\ninterface FocusElementData extends CrossOriginElementDataIn {\n    noFocusedProgrammaticallyFlag?: boolean;\n    noAccessibleCheck?: boolean;\n}\n\nclass FocusElementTransaction extends CrossOriginTransaction<\n    FocusElementData,\n    boolean\n> {\n    type = CrossOriginTransactionTypes.FocusElement;\n\n    static shouldSelfRespond() {\n        return true;\n    }\n\n    static shouldForward(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<FocusElementData, boolean>,\n        getOwner: Types.GetWindow\n    ): boolean {\n        const el = GetElementTransaction.findElement(\n            tabster,\n            getOwner,\n            data.beginData\n        );\n        return !el || !tabster.focusable.isFocusable(el);\n    }\n\n    static async makeResponse(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<FocusElementData, boolean>,\n        getOwner: Types.GetWindow,\n        ownerId: string,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<boolean | undefined>\n    ): Promise<boolean> {\n        const el = GetElementTransaction.findElement(\n            tabster,\n            getOwner,\n            data.beginData\n        );\n        return (\n            (!!el && tabster.focusedElement.focus(el, true)) ||\n            !!(await forwardResult)\n        );\n    }\n}\n\nconst CrossOriginStates: {\n    Focused: 1;\n    Blurred: 2;\n    Observed: 3;\n    DeadWindow: 4;\n    KeyboardNavigation: 5;\n    Outline: 6;\n} = {\n    Focused: 1,\n    Blurred: 2,\n    Observed: 3,\n    DeadWindow: 4,\n    KeyboardNavigation: 5,\n    Outline: 6,\n};\ntype CrossOriginState =\n    typeof CrossOriginStates[keyof typeof CrossOriginStates];\n\ninterface CrossOriginElementDataOut {\n    ownerUId: string;\n    uid?: string;\n    id?: string;\n    rootUId?: string;\n    deloserUId?: string;\n    observedName?: string;\n    observedDetails?: string;\n}\n\ninterface CrossOriginStateData extends CrossOriginElementDataOut {\n    state: CrossOriginState;\n    isFocusedProgrammatically?: boolean;\n    force?: boolean;\n    isNavigatingWithKeyboard?: boolean;\n    outline?: Partial<Types.OutlineProps>;\n}\n\nclass StateTransaction extends CrossOriginTransaction<\n    CrossOriginStateData,\n    true\n> {\n    type = CrossOriginTransactionTypes.State;\n\n    static shouldSelfRespond(\n        tabster: Types.TabsterCore,\n        data: CrossOriginStateData\n    ): boolean {\n        return (\n            data.state !== CrossOriginStates.DeadWindow &&\n            data.state !== CrossOriginStates.KeyboardNavigation\n        );\n    }\n\n    static async makeResponse(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<CrossOriginStateData, true>,\n        getOwner: Types.GetWindow,\n        ownerId: string,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<true | undefined>,\n        isSelfResponse?: boolean\n    ): Promise<true> {\n        const timestamp = data.timestamp;\n        const beginData = data.beginData;\n\n        if (timestamp && beginData) {\n            switch (beginData.state) {\n                case CrossOriginStates.Focused:\n                    return StateTransaction._makeFocusedResponse(\n                        tabster,\n                        timestamp,\n                        beginData,\n                        transactions,\n                        isSelfResponse\n                    );\n                case CrossOriginStates.Blurred:\n                    return StateTransaction._makeBlurredResponse(\n                        tabster,\n                        timestamp,\n                        beginData,\n                        transactions.ctx\n                    );\n                case CrossOriginStates.Observed:\n                    return StateTransaction._makeObservedResponse(\n                        tabster,\n                        beginData\n                    );\n                case CrossOriginStates.DeadWindow:\n                    return StateTransaction._makeDeadWindowResponse(\n                        tabster,\n                        beginData,\n                        transactions,\n                        forwardResult\n                    );\n                case CrossOriginStates.KeyboardNavigation:\n                    return StateTransaction._makeKeyboardNavigationResponse(\n                        tabster,\n                        transactions.ctx,\n                        beginData.isNavigatingWithKeyboard\n                    );\n                case CrossOriginStates.Outline:\n                    return StateTransaction._makeOutlineResponse(\n                        tabster,\n                        transactions.ctx,\n                        beginData.outline\n                    );\n            }\n        }\n\n        return true;\n    }\n\n    static createElement(\n        tabster: Types.TabsterCore,\n        beginData: CrossOriginElementDataOut\n    ): CrossOriginElement | null {\n        return beginData.uid\n            ? new CrossOriginElement(\n                  tabster,\n                  beginData.uid,\n                  beginData.ownerUId,\n                  beginData.id,\n                  beginData.rootUId,\n                  beginData.observedName,\n                  beginData.observedDetails\n              )\n            : null;\n    }\n\n    private static async _makeFocusedResponse(\n        tabster: Types.TabsterCore,\n        timestamp: number,\n        beginData: CrossOriginStateData,\n        transactions: CrossOriginTransactions,\n        isSelfResponse?: boolean\n    ): Promise<true> {\n        const element = StateTransaction.createElement(tabster, beginData);\n\n        if (beginData && beginData.ownerUId && element) {\n            transactions.ctx.focusOwner = beginData.ownerUId;\n            transactions.ctx.focusOwnerTimestamp = timestamp;\n\n            if (!isSelfResponse && beginData.rootUId && beginData.deloserUId) {\n                const deloserAPI = tabster.deloser;\n\n                if (deloserAPI) {\n                    const history = DeloserAPI.getHistory(deloserAPI);\n\n                    const deloser: CrossOriginDeloser = {\n                        ownerUId: beginData.ownerUId,\n                        deloserUId: beginData.deloserUId,\n                        rootUId: beginData.rootUId,\n                    };\n\n                    const historyItem = history.make(\n                        beginData.rootUId,\n                        () =>\n                            new CrossOriginDeloserHistoryByRoot(\n                                tabster,\n                                deloser.rootUId,\n                                transactions\n                            )\n                    );\n\n                    historyItem.unshift(deloser);\n                }\n            }\n\n            CrossOriginFocusedElementState.setVal(\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                tabster.crossOrigin!.focusedElement,\n                element,\n                {\n                    isFocusedProgrammatically:\n                        beginData.isFocusedProgrammatically,\n                }\n            );\n        }\n\n        return true;\n    }\n\n    private static async _makeBlurredResponse(\n        tabster: Types.TabsterCore,\n        timestamp: number,\n        beginData: CrossOriginStateData,\n        context: CrossOriginInstanceContext\n    ): Promise<true> {\n        if (\n            beginData &&\n            (beginData.ownerUId === context.focusOwner || beginData.force) &&\n            (!context.focusOwnerTimestamp ||\n                context.focusOwnerTimestamp < timestamp)\n        ) {\n            CrossOriginFocusedElementState.setVal(\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                tabster.crossOrigin!.focusedElement,\n                undefined,\n                {}\n            );\n        }\n\n        return true;\n    }\n\n    private static async _makeObservedResponse(\n        tabster: Types.TabsterCore,\n        beginData: CrossOriginStateData\n    ): Promise<true> {\n        const name = beginData.observedName;\n        const element = StateTransaction.createElement(tabster, beginData);\n\n        if (name && element) {\n            CrossOriginObservedElementState.trigger(\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                tabster.crossOrigin!.observedElement,\n                element,\n                { names: [name], details: beginData.observedDetails }\n            );\n        }\n\n        return true;\n    }\n\n    private static async _makeDeadWindowResponse(\n        tabster: Types.TabsterCore,\n        beginData: CrossOriginStateData,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<true | undefined>\n    ): Promise<true> {\n        const deadUId = beginData && beginData.ownerUId;\n\n        if (deadUId) {\n            transactions.removeTarget(deadUId);\n        }\n\n        return forwardResult.then(() => {\n            if (deadUId === transactions.ctx.focusOwner) {\n                const deloserAPI = tabster.deloser;\n\n                if (deloserAPI) {\n                    DeloserAPI.forceRestoreFocus(deloserAPI);\n                }\n            }\n            return true;\n        });\n    }\n\n    private static async _makeKeyboardNavigationResponse(\n        tabster: Types.TabsterCore,\n        context: CrossOriginInstanceContext,\n        isNavigatingWithKeyboard?: boolean\n    ): Promise<true> {\n        if (\n            isNavigatingWithKeyboard !== undefined &&\n            tabster.keyboardNavigation.isNavigatingWithKeyboard() !==\n                isNavigatingWithKeyboard\n        ) {\n            context.ignoreKeyboardNavigationStateUpdate = true;\n            tabster.keyboardNavigation.setNavigatingWithKeyboard(\n                isNavigatingWithKeyboard\n            );\n            context.ignoreKeyboardNavigationStateUpdate = false;\n        }\n        return true;\n    }\n\n    private static async _makeOutlineResponse(\n        tabster: Types.TabsterCore,\n        context: CrossOriginInstanceContext,\n        props?: Partial<Types.OutlineProps>\n    ): Promise<true> {\n        if (context.origOutlineSetup) {\n            context.origOutlineSetup.call(\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                tabster.outline!,\n                props\n            );\n        }\n        return true;\n    }\n}\n\nclass GetElementTransaction extends CrossOriginTransaction<\n    CrossOriginElementDataIn | undefined,\n    CrossOriginElementDataOut\n> {\n    type = CrossOriginTransactionTypes.GetElement;\n\n    static shouldSelfRespond() {\n        return true;\n    }\n\n    static findElement(\n        tabster: Types.TabsterCore,\n        getOwner: Types.GetWindow,\n        data?: CrossOriginElementDataIn\n    ): HTMLElement | null {\n        let element: HTMLElement | null | undefined;\n\n        if (\n            data &&\n            (!data.ownerId || data.ownerId === getWindowUId(getOwner()))\n        ) {\n            if (data.id) {\n                element = dom.getElementById(getOwner().document, data.id);\n\n                if (element && data.rootId) {\n                    const ctx = RootAPI.getTabsterContext(tabster, element);\n\n                    if (!ctx || ctx.root.uid !== data.rootId) {\n                        return null;\n                    }\n                }\n            } else if (data.uid) {\n                const ref = getInstanceContext(getOwner).elementByUId[data.uid];\n                element = ref && ref.get();\n            } else if (data.observedName) {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                element = tabster.observedElement!.getElement(\n                    data.observedName,\n                    data.accessibility\n                );\n            }\n        }\n\n        return element || null;\n    }\n\n    static getElementData(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        getOwner: Types.GetWindow,\n        context: CrossOriginInstanceContext,\n        ownerUId: string\n    ): CrossOriginElementDataOut {\n        const deloser = DeloserAPI.getDeloser(tabster, element);\n        const ctx = RootAPI.getTabsterContext(tabster, element);\n        const tabsterOnElement = getTabsterOnElement(tabster, element);\n        const observed = tabsterOnElement && tabsterOnElement.observed;\n\n        return {\n            uid: getElementUId(getOwner, element),\n            ownerUId,\n            id: element.id || undefined,\n            rootUId: ctx ? ctx.root.uid : undefined,\n            deloserUId: deloser\n                ? getDeloserUID(getOwner, context, deloser)\n                : undefined,\n            observedName: observed && observed.names && observed.names[0],\n            observedDetails: observed && observed.details,\n        };\n    }\n\n    static async makeResponse(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<\n            CrossOriginElementDataIn | undefined,\n            CrossOriginElementDataOut\n        >,\n        getOwner: Types.GetWindow,\n        ownerUId: string,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<CrossOriginElementDataOut | undefined>\n    ): Promise<CrossOriginElementDataOut | undefined> {\n        const beginData = data.beginData;\n        let element: HTMLElement | undefined;\n        let dataOut: CrossOriginElementDataOut | undefined;\n\n        if (beginData === undefined) {\n            element = tabster.focusedElement.getFocusedElement();\n        } else if (beginData) {\n            element =\n                GetElementTransaction.findElement(\n                    tabster,\n                    getOwner,\n                    beginData\n                ) || undefined;\n        }\n\n        if (!element && beginData) {\n            const name = beginData.observedName;\n            const timeout = data.timeout;\n            const accessibility = beginData.accessibility;\n\n            if (name && timeout) {\n                const e: {\n                    element?: HTMLElement | null;\n                    crossOrigin?: CrossOriginElementDataOut;\n                } = await new (getPromise(getOwner))((resolve) => {\n                    let isWaitElementResolved = false;\n                    let isForwardResolved = false;\n                    let isResolved = false;\n\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    tabster\n                        .observedElement!.waitElement(\n                            name,\n                            timeout,\n                            accessibility\n                        )\n                        .result.then((value) => {\n                            isWaitElementResolved = true;\n\n                            if (!isResolved && (value || isForwardResolved)) {\n                                isResolved = true;\n                                resolve({ element: value });\n                            }\n                        });\n\n                    forwardResult.then((value) => {\n                        isForwardResolved = true;\n\n                        if (!isResolved && (value || isWaitElementResolved)) {\n                            isResolved = true;\n                            resolve({ crossOrigin: value });\n                        }\n                    });\n                });\n\n                if (e.element) {\n                    element = e.element;\n                } else if (e.crossOrigin) {\n                    dataOut = e.crossOrigin;\n                }\n            }\n        }\n\n        return element\n            ? GetElementTransaction.getElementData(\n                  tabster,\n                  element,\n                  getOwner,\n                  transactions.ctx,\n                  ownerUId\n              )\n            : dataOut;\n    }\n}\n\ninterface CrossOriginDeloser {\n    ownerUId: string;\n    deloserUId: string;\n    rootUId: string;\n}\n\ninterface RestoreFocusInDeloserTransactionData extends CrossOriginDeloser {\n    reset: boolean;\n}\n\nclass RestoreFocusInDeloserTransaction extends CrossOriginTransaction<\n    RestoreFocusInDeloserTransactionData,\n    boolean\n> {\n    type = CrossOriginTransactionTypes.RestoreFocusInDeloser;\n\n    static async makeResponse(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<\n            RestoreFocusInDeloserTransactionData,\n            boolean\n        >,\n        getOwner: Types.GetWindow,\n        ownerId: string,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<boolean | undefined>\n    ): Promise<boolean | null> {\n        const forwardRet = await forwardResult;\n        const begin = !forwardRet && data.beginData;\n        const uid = begin && begin.deloserUId;\n        const deloser = uid && transactions.ctx.deloserByUId[uid];\n        const deloserAPI = tabster.deloser;\n\n        if (begin && deloser && deloserAPI) {\n            const history = DeloserAPI.getHistory(deloserAPI);\n            return begin.reset\n                ? history.resetFocus(deloser)\n                : history.focusAvailable(deloser);\n        }\n\n        return !!forwardRet;\n    }\n}\n\nclass PingTransaction extends CrossOriginTransaction<undefined, true> {\n    type = CrossOriginTransactionTypes.Ping;\n\n    static shouldForward() {\n        return false;\n    }\n\n    static async makeResponse(): Promise<true> {\n        return true;\n    }\n}\n\ninterface CrossOriginTransactionWrapper<I, O> {\n    transaction: CrossOriginTransaction<I, O>;\n    timer?: number;\n}\n\nclass CrossOriginTransactions {\n    private _owner: Types.GetWindow;\n    private _ownerUId: string;\n    private _knownTargets: KnownTargets = {};\n    private _transactions: {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        [id: string]: CrossOriginTransactionWrapper<any, any>;\n    } = {};\n    private _tabster: Types.TabsterCore;\n    private _pingTimer: number | undefined;\n    private _isDefaultSendUp = false;\n    private _deadPromise: Promise<true | undefined> | undefined;\n    isSetUp = false;\n    sendUp: Types.CrossOriginTransactionSend | undefined;\n    ctx: CrossOriginInstanceContext;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        getOwner: Types.GetWindow,\n        context: CrossOriginInstanceContext\n    ) {\n        this._tabster = tabster;\n        this._owner = getOwner;\n        this._ownerUId = getWindowUId(getOwner());\n        this.ctx = context;\n    }\n\n    setup(\n        sendUp?: Types.CrossOriginTransactionSend | null\n    ): (msg: Types.CrossOriginMessage) => void {\n        if (this.isSetUp) {\n            if (__DEV__) {\n                console.error(\"CrossOrigin is already set up.\");\n            }\n        } else {\n            this.isSetUp = true;\n\n            this.setSendUp(sendUp);\n\n            this._owner().addEventListener(\"pagehide\", this._onPageHide);\n\n            this._ping();\n        }\n\n        return this._onMessage;\n    }\n\n    setSendUp(\n        sendUp?: Types.CrossOriginTransactionSend | null\n    ): (msg: Types.CrossOriginMessage) => void {\n        if (!this.isSetUp) {\n            throw new Error(\"CrossOrigin is not set up.\");\n        }\n\n        this.sendUp = sendUp || undefined;\n\n        const owner = this._owner();\n\n        if (sendUp === undefined) {\n            if (!this._isDefaultSendUp) {\n                if (owner.document) {\n                    this._isDefaultSendUp = true;\n\n                    if (\n                        owner.parent &&\n                        owner.parent !== owner &&\n                        owner.parent.postMessage\n                    ) {\n                        this.sendUp = (\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            data: Types.CrossOriginTransactionData<any, any>\n                        ) => {\n                            owner.parent.postMessage(JSON.stringify(data), \"*\");\n                        };\n                    }\n\n                    owner.addEventListener(\"message\", this._onBrowserMessage);\n                }\n            }\n        } else if (this._isDefaultSendUp) {\n            owner.removeEventListener(\"message\", this._onBrowserMessage);\n            this._isDefaultSendUp = false;\n        }\n\n        return this._onMessage;\n    }\n\n    async dispose(): Promise<void> {\n        const owner = this._owner();\n\n        if (this._pingTimer) {\n            owner.clearTimeout(this._pingTimer);\n            this._pingTimer = undefined;\n        }\n\n        owner.removeEventListener(\"message\", this._onBrowserMessage);\n        owner.removeEventListener(\"pagehide\", this._onPageHide);\n\n        await this._dead();\n\n        delete this._deadPromise;\n\n        for (const id of Object.keys(this._transactions)) {\n            const t = this._transactions[id];\n\n            if (t.timer) {\n                owner.clearTimeout(t.timer);\n                delete t.timer;\n            }\n\n            t.transaction.end();\n        }\n\n        this._knownTargets = {};\n\n        delete this.sendUp;\n    }\n\n    beginTransaction<I, O>(\n        Transaction: CrossOriginTransactionClass<I, O>,\n        value: I,\n        timeout?: number,\n        sentTo?: Types.CrossOriginSentTo,\n        targetId?: string,\n        withReject?: boolean\n    ): Promise<O | undefined> {\n        if (!this._owner) {\n            return getPromise(this._owner).reject();\n        }\n\n        const transaction = new Transaction(\n            this._tabster,\n            this._owner,\n            this._knownTargets,\n            value,\n            timeout,\n            sentTo,\n            targetId,\n            this.sendUp\n        );\n        let selfResponse:\n            | ((\n                  data: Types.CrossOriginTransactionData<I, O>\n              ) => Promise<O | undefined>)\n            | undefined;\n\n        if (\n            Transaction.shouldSelfRespond &&\n            Transaction.shouldSelfRespond(\n                this._tabster,\n                value,\n                this._owner,\n                this._ownerUId\n            )\n        ) {\n            selfResponse = (data: Types.CrossOriginTransactionData<I, O>) => {\n                return Transaction.makeResponse(\n                    this._tabster,\n                    data,\n                    this._owner,\n                    this._ownerUId,\n                    this,\n                    getPromise(this._owner).resolve(undefined),\n                    true\n                );\n            };\n        }\n\n        return this._beginTransaction(\n            transaction,\n            timeout,\n            selfResponse,\n            withReject\n        );\n    }\n\n    removeTarget(uid: string): void {\n        delete this._knownTargets[uid];\n    }\n\n    private _beginTransaction<I, O>(\n        transaction: CrossOriginTransaction<I, O>,\n        timeout?: number,\n        selfResponse?: (\n            data: Types.CrossOriginTransactionData<I, O>\n        ) => Promise<O | undefined>,\n        withReject?: boolean\n    ): Promise<O | undefined> {\n        const owner = this._owner();\n\n        const wrapper: CrossOriginTransactionWrapper<I, O> = {\n            transaction,\n            timer: owner.setTimeout(() => {\n                delete wrapper.timer;\n                transaction.end(\"Cross origin transaction timed out.\");\n            }, _transactionTimeout + (timeout || 0)),\n        };\n\n        this._transactions[transaction.id] = wrapper;\n\n        const ret = transaction.begin(selfResponse);\n\n        ret.catch(() => {\n            /**/\n        }).finally(() => {\n            if (wrapper.timer) {\n                owner.clearTimeout(wrapper.timer);\n            }\n            delete this._transactions[transaction.id];\n        });\n\n        return ret.then(\n            (value) => value,\n            withReject ? undefined : () => undefined\n        );\n    }\n\n    forwardTransaction(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        data: Types.CrossOriginTransactionData<any, any>\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ): Promise<any> {\n        const owner = this._owner;\n        let targetId = data.target;\n\n        if (targetId === this._ownerUId) {\n            return getPromise(owner).resolve();\n        }\n\n        const Transaction = this._getTransactionClass(data.type);\n\n        if (Transaction) {\n            if (\n                Transaction.shouldForward === undefined ||\n                Transaction.shouldForward(\n                    this._tabster,\n                    data,\n                    owner,\n                    this._ownerUId\n                )\n            ) {\n                const sentTo = data.sentto;\n\n                if (targetId === _targetIdUp) {\n                    targetId = undefined;\n                    sentTo[this._ownerUId] = true;\n                }\n\n                delete sentTo[_targetIdUp];\n\n                return this._beginTransaction(\n                    new Transaction(\n                        this._tabster,\n                        owner,\n                        this._knownTargets,\n                        data.beginData,\n                        data.timeout,\n                        sentTo,\n                        targetId,\n                        this.sendUp\n                    ),\n                    data.timeout\n                );\n            } else {\n                return getPromise(owner).resolve();\n            }\n        }\n\n        return getPromise(owner).reject(\n            `Unknown transaction type ${data.type}`\n        );\n    }\n\n    private _getTransactionClass(\n        type: Types.CrossOriginTransactionType\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ): CrossOriginTransactionClass<any, any> | null {\n        switch (type) {\n            case CrossOriginTransactionTypes.Bootstrap:\n                return BootstrapTransaction;\n            case CrossOriginTransactionTypes.FocusElement:\n                return FocusElementTransaction;\n            case CrossOriginTransactionTypes.State:\n                return StateTransaction;\n            case CrossOriginTransactionTypes.GetElement:\n                return GetElementTransaction;\n            case CrossOriginTransactionTypes.RestoreFocusInDeloser:\n                return RestoreFocusInDeloserTransaction;\n            case CrossOriginTransactionTypes.Ping:\n                return PingTransaction;\n            default:\n                return null;\n        }\n    }\n\n    private _onMessage = (e: Types.CrossOriginMessage) => {\n        if (e.data.owner === this._ownerUId || !this._tabster) {\n            return;\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const data: Types.CrossOriginTransactionData<any, any> = e.data;\n        let transactionId: string;\n\n        if (\n            !data ||\n            !(transactionId = data.transaction) ||\n            !data.type ||\n            !data.timestamp ||\n            !data.owner ||\n            !data.sentto\n        ) {\n            return;\n        }\n\n        let knownTarget = this._knownTargets[data.owner];\n\n        if (!knownTarget && e.send && data.owner !== this._ownerUId) {\n            knownTarget = this._knownTargets[data.owner] = { send: e.send };\n        }\n\n        if (knownTarget) {\n            knownTarget.last = Date.now();\n        }\n\n        if (data.isResponse) {\n            const t = this._transactions[transactionId];\n\n            if (t && t.transaction && t.transaction.type === data.type) {\n                t.transaction.onResponse(data);\n            }\n        } else {\n            const Transaction = this._getTransactionClass(data.type);\n\n            const forwardResult = this.forwardTransaction(data);\n\n            if (Transaction && e.send) {\n                Transaction.makeResponse(\n                    this._tabster,\n                    data,\n                    this._owner,\n                    this._ownerUId,\n                    this,\n                    forwardResult,\n                    false\n                ).then((r) => {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    const response: Types.CrossOriginTransactionData<any, any> =\n                        {\n                            transaction: data.transaction,\n                            type: data.type,\n                            isResponse: true,\n                            timestamp: Date.now(),\n                            owner: this._ownerUId,\n                            timeout: data.timeout,\n                            sentto: {},\n                            target:\n                                data.target === _targetIdUp\n                                    ? _targetIdUp\n                                    : data.owner,\n                            endData: r,\n                        };\n\n                    e.send(response);\n                });\n            }\n        }\n    };\n\n    private _onPageHide = () => {\n        this._dead();\n    };\n\n    private async _dead(): Promise<void> {\n        if (!this._deadPromise && this.ctx.focusOwner === this._ownerUId) {\n            this._deadPromise = this.beginTransaction(StateTransaction, {\n                ownerUId: this._ownerUId,\n                state: CrossOriginStates.DeadWindow,\n            });\n        }\n\n        if (this._deadPromise) {\n            await this._deadPromise;\n        }\n    }\n\n    private async _ping(): Promise<void> {\n        if (this._pingTimer) {\n            return;\n        }\n\n        let deadWindows: { [key: string]: boolean } | undefined;\n        const now = Date.now();\n        const targets = Object.keys(this._knownTargets).filter(\n            (uid) => now - (this._knownTargets[uid].last || 0) > _pingTimeout\n        );\n\n        if (this.sendUp) {\n            targets.push(_targetIdUp);\n        }\n\n        if (targets.length) {\n            await getPromise(this._owner).all(\n                targets.map((uid) =>\n                    this.beginTransaction(\n                        PingTransaction,\n                        undefined,\n                        undefined,\n                        undefined,\n                        uid,\n                        true\n                    ).then(\n                        () => true,\n                        () => {\n                            if (uid !== _targetIdUp) {\n                                if (!deadWindows) {\n                                    deadWindows = {};\n                                }\n                                deadWindows[uid] = true;\n                                delete this._knownTargets[uid];\n                            }\n                            return false;\n                        }\n                    )\n                )\n            );\n        }\n\n        if (deadWindows) {\n            const focused = await this.beginTransaction(\n                GetElementTransaction,\n                undefined\n            );\n\n            if (\n                !focused &&\n                this.ctx.focusOwner &&\n                this.ctx.focusOwner in deadWindows\n            ) {\n                await this.beginTransaction(StateTransaction, {\n                    ownerUId: this._ownerUId,\n                    state: CrossOriginStates.Blurred,\n                    force: true,\n                });\n\n                const deloserAPI = this._tabster.deloser;\n\n                if (deloserAPI) {\n                    DeloserAPI.forceRestoreFocus(deloserAPI);\n                }\n            }\n        }\n\n        this._pingTimer = this._owner().setTimeout(() => {\n            this._pingTimer = undefined;\n            this._ping();\n        }, _pingTimeout);\n    }\n\n    private _onBrowserMessage = (e: MessageEvent) => {\n        if (e.source === this._owner()) {\n            return;\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const send = (data: Types.CrossOriginTransactionData<any, any>) => {\n            if (e.source && e.source.postMessage) {\n                // eslint-disable-next-line @typescript-eslint/ban-types\n                (e.source.postMessage as Function)(JSON.stringify(data), \"*\");\n            }\n        };\n\n        try {\n            this._onMessage({\n                data: JSON.parse(e.data),\n                send,\n            });\n        } catch (e) {\n            /* Ignore */\n        }\n    };\n}\n\nexport class CrossOriginElement implements Types.CrossOriginElement {\n    private _tabster: Types.TabsterCore;\n    readonly uid: string;\n    readonly ownerId: string;\n    readonly id?: string;\n    readonly rootId?: string;\n    readonly observedName?: string;\n    readonly observedDetails?: string;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        uid: string,\n        ownerId: string,\n        id?: string,\n        rootId?: string,\n        observedName?: string,\n        observedDetails?: string\n    ) {\n        this._tabster = tabster;\n        this.uid = uid;\n        this.ownerId = ownerId;\n        this.id = id;\n        this.rootId = rootId;\n        this.observedName = observedName;\n        this.observedDetails = observedDetails;\n    }\n\n    focus(\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean> {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return this._tabster.crossOrigin!.focusedElement.focus(\n            this,\n            noFocusedProgrammaticallyFlag,\n            noAccessibleCheck\n        );\n    }\n}\n\nexport class CrossOriginFocusedElementState\n    extends Subscribable<\n        CrossOriginElement | undefined,\n        Types.FocusedElementDetail\n    >\n    implements Types.CrossOriginFocusedElementState\n{\n    private _transactions: CrossOriginTransactions;\n\n    constructor(transactions: CrossOriginTransactions) {\n        super();\n        this._transactions = transactions;\n    }\n\n    async focus(\n        element: Types.CrossOriginElement,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean> {\n        return this._focus(\n            {\n                uid: element.uid,\n                id: element.id,\n                rootId: element.rootId,\n                ownerId: element.ownerId,\n                observedName: element.observedName,\n            },\n            noFocusedProgrammaticallyFlag,\n            noAccessibleCheck\n        );\n    }\n\n    async focusById(\n        elementId: string,\n        rootId?: string,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean> {\n        return this._focus(\n            { id: elementId, rootId },\n            noFocusedProgrammaticallyFlag,\n            noAccessibleCheck\n        );\n    }\n\n    async focusByObservedName(\n        observedName: string,\n        timeout?: number,\n        rootId?: string,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean> {\n        return this._focus(\n            { observedName, rootId },\n            noFocusedProgrammaticallyFlag,\n            noAccessibleCheck,\n            timeout\n        );\n    }\n\n    private async _focus(\n        elementData: CrossOriginElementDataIn,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean,\n        timeout?: number\n    ): Promise<boolean> {\n        return this._transactions\n            .beginTransaction(\n                FocusElementTransaction,\n                {\n                    ...elementData,\n                    noFocusedProgrammaticallyFlag,\n                    noAccessibleCheck,\n                },\n                timeout\n            )\n            .then((value) => !!value);\n    }\n\n    static setVal(\n        instance: Types.CrossOriginFocusedElementState,\n        val: CrossOriginElement | undefined,\n        detail: Types.FocusedElementDetail\n    ): void {\n        (instance as CrossOriginFocusedElementState).setVal(val, detail);\n    }\n}\n\nexport class CrossOriginObservedElementState\n    extends Subscribable<CrossOriginElement, Types.ObservedElementProps>\n    implements Types.CrossOriginObservedElementState\n{\n    private _tabster: Types.TabsterCore;\n    private _transactions: CrossOriginTransactions;\n    private _lastRequestFocusId = 0;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        transactions: CrossOriginTransactions\n    ) {\n        super();\n        this._tabster = tabster;\n        this._transactions = transactions;\n    }\n\n    async getElement(\n        observedName: string,\n        accessibility?: Types.ObservedElementAccessibility\n    ): Promise<CrossOriginElement | null> {\n        return this.waitElement(observedName, 0, accessibility);\n    }\n\n    async waitElement(\n        observedName: string,\n        timeout: number,\n        accessibility?: Types.ObservedElementAccessibility\n    ): Promise<CrossOriginElement | null> {\n        return this._transactions\n            .beginTransaction(\n                GetElementTransaction,\n                {\n                    observedName,\n                    accessibility,\n                },\n                timeout\n            )\n            .then((value) =>\n                value\n                    ? StateTransaction.createElement(this._tabster, value)\n                    : null\n            );\n    }\n\n    async requestFocus(\n        observedName: string,\n        timeout: number\n    ): Promise<boolean> {\n        const requestId = ++this._lastRequestFocusId;\n        return this.waitElement(\n            observedName,\n            timeout,\n            ObservedElementAccessibilities.Focusable\n        ).then((element) =>\n            this._lastRequestFocusId === requestId && element\n                ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                  this._tabster.crossOrigin!.focusedElement.focus(element, true)\n                : false\n        );\n    }\n\n    static trigger(\n        instance: Types.CrossOriginObservedElementState,\n        element: CrossOriginElement,\n        details: Types.ObservedElementProps\n    ): void {\n        (instance as CrossOriginObservedElementState).trigger(element, details);\n    }\n}\n\nexport class CrossOriginAPI implements Types.CrossOriginAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    private _transactions: CrossOriginTransactions;\n    private _blurTimer: number | undefined;\n    private _ctx: CrossOriginInstanceContext;\n\n    focusedElement: Types.CrossOriginFocusedElementState;\n    observedElement: Types.CrossOriginObservedElementState;\n\n    constructor(tabster: Types.TabsterCore) {\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n        this._ctx = {\n            ignoreKeyboardNavigationStateUpdate: false,\n            deloserByUId: {},\n        };\n\n        this._transactions = new CrossOriginTransactions(\n            tabster,\n            this._win,\n            this._ctx\n        );\n        this.focusedElement = new CrossOriginFocusedElementState(\n            this._transactions\n        );\n        this.observedElement = new CrossOriginObservedElementState(\n            tabster,\n            this._transactions\n        );\n    }\n\n    setup(\n        sendUp?: Types.CrossOriginTransactionSend | null\n    ): (msg: Types.CrossOriginMessage) => void {\n        if (this.isSetUp()) {\n            return this._transactions.setSendUp(sendUp);\n        } else {\n            this._tabster.queueInit(this._init);\n            return this._transactions.setup(sendUp);\n        }\n    }\n\n    isSetUp(): boolean {\n        return this._transactions.isSetUp;\n    }\n\n    private _init = (): void => {\n        const tabster = this._tabster;\n\n        tabster.keyboardNavigation.subscribe(\n            this._onKeyboardNavigationStateChanged\n        );\n        tabster.focusedElement.subscribe(this._onFocus);\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        tabster.observedElement!.subscribe(this._onObserved);\n\n        if (!this._ctx.origOutlineSetup) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            this._ctx.origOutlineSetup = tabster.outline!.setup;\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            tabster.outline!.setup = this._outlineSetup;\n        }\n\n        this._transactions\n            .beginTransaction(\n                BootstrapTransaction,\n                undefined,\n                undefined,\n                undefined,\n                _targetIdUp\n            )\n            .then((data) => {\n                if (\n                    data &&\n                    this._tabster.keyboardNavigation.isNavigatingWithKeyboard() !==\n                        data.isNavigatingWithKeyboard\n                ) {\n                    this._ctx.ignoreKeyboardNavigationStateUpdate = true;\n                    this._tabster.keyboardNavigation.setNavigatingWithKeyboard(\n                        data.isNavigatingWithKeyboard\n                    );\n                    this._ctx.ignoreKeyboardNavigationStateUpdate = false;\n                }\n            });\n    };\n\n    dispose(): void {\n        const tabster = this._tabster;\n\n        tabster.keyboardNavigation.unsubscribe(\n            this._onKeyboardNavigationStateChanged\n        );\n        tabster.focusedElement.unsubscribe(this._onFocus);\n        tabster.observedElement?.unsubscribe(this._onObserved);\n\n        this._transactions.dispose();\n        this.focusedElement.dispose();\n        this.observedElement.dispose();\n\n        this._ctx.deloserByUId = {};\n    }\n\n    private _onKeyboardNavigationStateChanged = (value: boolean): void => {\n        if (!this._ctx.ignoreKeyboardNavigationStateUpdate) {\n            this._transactions.beginTransaction(StateTransaction, {\n                state: CrossOriginStates.KeyboardNavigation,\n                ownerUId: getWindowUId(this._win()),\n                isNavigatingWithKeyboard: value,\n            });\n        }\n    };\n\n    private _onFocus = (element: HTMLElementWithUID | undefined): void => {\n        const win = this._win();\n\n        const ownerUId = getWindowUId(win);\n\n        if (this._blurTimer) {\n            win.clearTimeout(this._blurTimer);\n            this._blurTimer = undefined;\n        }\n\n        if (element) {\n            this._transactions.beginTransaction(StateTransaction, {\n                ...GetElementTransaction.getElementData(\n                    this._tabster,\n                    element,\n                    this._win,\n                    this._ctx,\n                    ownerUId\n                ),\n                state: CrossOriginStates.Focused,\n            });\n        } else {\n            this._blurTimer = win.setTimeout(() => {\n                this._blurTimer = undefined;\n\n                if (this._ctx.focusOwner && this._ctx.focusOwner === ownerUId) {\n                    this._transactions\n                        .beginTransaction(GetElementTransaction, undefined)\n                        .then((value) => {\n                            if (!value && this._ctx.focusOwner === ownerUId) {\n                                this._transactions.beginTransaction(\n                                    StateTransaction,\n                                    {\n                                        ownerUId,\n                                        state: CrossOriginStates.Blurred,\n                                        force: false,\n                                    }\n                                );\n                            }\n                        });\n                }\n            }, 0);\n        }\n    };\n\n    private _onObserved = (\n        element: HTMLElement,\n        details: Types.ObservedElementProps\n    ): void => {\n        const d = GetElementTransaction.getElementData(\n            this._tabster,\n            element,\n            this._win,\n            this._ctx,\n            getWindowUId(this._win())\n        ) as CrossOriginStateData;\n\n        d.state = CrossOriginStates.Observed;\n        d.observedName = details.names?.[0];\n        d.observedDetails = details.details;\n\n        this._transactions.beginTransaction(StateTransaction, d);\n    };\n\n    private _outlineSetup = (props?: Partial<Types.OutlineProps>): void => {\n        this._transactions.beginTransaction(StateTransaction, {\n            state: CrossOriginStates.Outline,\n            ownerUId: getWindowUId(this._win()),\n            outline: props,\n        });\n    };\n}\n\nfunction getDeloserUID(\n    getWindow: Types.GetWindow,\n    context: CrossOriginInstanceContext,\n    deloser: Types.Deloser\n): string | undefined {\n    const deloserElement = deloser.getElement();\n\n    if (deloserElement) {\n        const uid = getElementUId(getWindow, deloserElement);\n\n        if (!context.deloserByUId[uid]) {\n            context.deloserByUId[uid] = deloser;\n        }\n\n        return uid;\n    }\n\n    return undefined;\n}\n", "/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport { RootAPI } from \"./Root\";\nimport * as Types from \"./Types\";\nimport { FOCUSABLE_SELECTOR } from \"./Consts\";\nimport {\n    createElementTreeWalker,\n    getDummyInputContainer,\n    getLastChild,\n    getRadioButtonGroup,\n    isDisplayNone,\n    isRadio,\n    matchesSelector,\n    shouldIgnoreFocus,\n} from \"./Utils\";\nimport { dom } from \"./DOMAPI\";\n\nexport class FocusableAPI implements Types.FocusableAPI {\n    private _tabster: Types.TabsterCore;\n\n    constructor(tabster: Types.TabsterCore) {\n        this._tabster = tabster;\n    }\n\n    dispose(): void {\n        /**/\n    }\n\n    getProps(element: HTMLElement): Types.FocusableProps {\n        const tabsterOnElement = getTabsterOnElement(this._tabster, element);\n        return (tabsterOnElement && tabsterOnElement.focusable) || {};\n    }\n\n    isFocusable(\n        el: HTMLElement,\n        includeProgrammaticallyFocusable?: boolean,\n        noVisibleCheck?: boolean,\n        noAccessibleCheck?: boolean\n    ): boolean {\n        if (\n            matchesSelector(el, FOCUSABLE_SELECTOR) &&\n            (includeProgrammaticallyFocusable || el.tabIndex !== -1)\n        ) {\n            return (\n                (noVisibleCheck || this.isVisible(el)) &&\n                (noAccessibleCheck || this.isAccessible(el))\n            );\n        }\n\n        return false;\n    }\n\n    isVisible(el: HTMLElement): boolean {\n        if (!el.ownerDocument || el.nodeType !== Node.ELEMENT_NODE) {\n            return false;\n        }\n\n        if (isDisplayNone(el)) {\n            return false;\n        }\n\n        const rect = el.ownerDocument.body.getBoundingClientRect();\n\n        if (rect.width === 0 && rect.height === 0) {\n            // This might happen, for example, if our <body> is in hidden <iframe>.\n            return false;\n        }\n\n        return true;\n    }\n\n    isAccessible(el: HTMLElement): boolean {\n        for (let e: HTMLElement | null = el; e; e = dom.getParentElement(e)) {\n            const tabsterOnElement = getTabsterOnElement(this._tabster, e);\n\n            if (this._isHidden(e)) {\n                return false;\n            }\n\n            const ignoreDisabled =\n                tabsterOnElement?.focusable?.ignoreAriaDisabled;\n\n            if (!ignoreDisabled && this._isDisabled(e)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    private _isDisabled(el: HTMLElement): boolean {\n        return el.hasAttribute(\"disabled\");\n    }\n\n    private _isHidden(el: HTMLElement): boolean {\n        const attrVal = el.getAttribute(\"aria-hidden\");\n\n        if (attrVal && attrVal.toLowerCase() === \"true\") {\n            if (!this._tabster.modalizer?.isAugmented(el)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    findFirst(\n        options: Types.FindFirstProps,\n        out?: Types.FindFocusableOutputProps\n    ): HTMLElement | null | undefined {\n        return this.findElement(\n            {\n                ...options,\n            },\n            out\n        );\n    }\n\n    findLast(\n        options: Types.FindFirstProps,\n        out?: Types.FindFocusableOutputProps\n    ): HTMLElement | null | undefined {\n        return this.findElement(\n            {\n                isBackward: true,\n                ...options,\n            },\n            out\n        );\n    }\n\n    findNext(\n        options: Types.FindNextProps,\n        out?: Types.FindFocusableOutputProps\n    ): HTMLElement | null | undefined {\n        return this.findElement({ ...options }, out);\n    }\n\n    findPrev(\n        options: Types.FindNextProps,\n        out?: Types.FindFocusableOutputProps\n    ): HTMLElement | null | undefined {\n        return this.findElement({ ...options, isBackward: true }, out);\n    }\n\n    findDefault(\n        options: Types.FindDefaultProps,\n        out?: Types.FindFocusableOutputProps\n    ): HTMLElement | null {\n        return (\n            this.findElement(\n                {\n                    ...options,\n                    acceptCondition: (el) =>\n                        this.isFocusable(\n                            el,\n                            options.includeProgrammaticallyFocusable\n                        ) && !!this.getProps(el).isDefault,\n                },\n                out\n            ) || null\n        );\n    }\n\n    findAll(options: Types.FindAllProps): HTMLElement[] {\n        return this._findElements(true, options) || [];\n    }\n\n    findElement(\n        options: Types.FindFocusableProps,\n        out?: Types.FindFocusableOutputProps\n    ): HTMLElement | null | undefined {\n        const found = this._findElements(false, options, out);\n        return found ? found[0] : found;\n    }\n\n    private _findElements(\n        isFindAll: boolean,\n        options: Types.FindFocusableProps,\n        out?: Types.FindFocusableOutputProps\n    ): HTMLElement[] | null | undefined {\n        const {\n            container,\n            currentElement = null,\n            includeProgrammaticallyFocusable,\n            useActiveModalizer,\n            ignoreAccessibility,\n            modalizerId,\n            isBackward,\n            onElement,\n        } = options;\n\n        if (!out) {\n            out = {};\n        }\n\n        const elements: HTMLElement[] = [];\n\n        let { acceptCondition } = options;\n        const hasCustomCondition = !!acceptCondition;\n\n        if (!container) {\n            return null;\n        }\n\n        if (!acceptCondition) {\n            acceptCondition = (el) =>\n                this.isFocusable(\n                    el,\n                    includeProgrammaticallyFocusable,\n                    false,\n                    ignoreAccessibility\n                );\n        }\n\n        const acceptElementState: Types.FocusableAcceptElementState = {\n            container,\n            modalizerUserId:\n                modalizerId === undefined && useActiveModalizer\n                    ? this._tabster.modalizer?.activeId\n                    : modalizerId ||\n                      RootAPI.getTabsterContext(this._tabster, container)\n                          ?.modalizer?.userId,\n            from: currentElement || container,\n            isBackward,\n            isFindAll,\n            acceptCondition,\n            hasCustomCondition,\n            includeProgrammaticallyFocusable,\n            ignoreAccessibility,\n            cachedGrouppers: {},\n            cachedRadioGroups: {},\n        };\n\n        const walker = createElementTreeWalker(\n            container.ownerDocument,\n            container,\n            (node) =>\n                this._acceptElement(node as HTMLElement, acceptElementState)\n        );\n\n        if (!walker) {\n            return null;\n        }\n\n        const prepareForNextElement = (\n            shouldContinueIfNotFound?: boolean\n        ): boolean => {\n            const foundElement =\n                acceptElementState.foundElement ??\n                acceptElementState.foundBackward;\n\n            if (foundElement) {\n                elements.push(foundElement);\n            }\n\n            if (isFindAll) {\n                if (foundElement) {\n                    acceptElementState.found = false;\n                    delete acceptElementState.foundElement;\n                    delete acceptElementState.foundBackward;\n                    delete acceptElementState.fromCtx;\n                    acceptElementState.from = foundElement;\n\n                    if (onElement && !onElement(foundElement)) {\n                        return false;\n                    }\n                }\n\n                return !!(foundElement || shouldContinueIfNotFound);\n            } else {\n                if (foundElement && out) {\n                    out.uncontrolled = RootAPI.getTabsterContext(\n                        this._tabster,\n                        foundElement\n                    )?.uncontrolled;\n                }\n\n                return !!(shouldContinueIfNotFound && !foundElement);\n            }\n        };\n\n        if (!currentElement) {\n            out.outOfDOMOrder = true;\n        }\n\n        if (currentElement && dom.nodeContains(container, currentElement)) {\n            walker.currentNode = currentElement;\n        } else if (isBackward) {\n            const lastChild = getLastChild(container);\n\n            if (!lastChild) {\n                return null;\n            }\n\n            if (\n                this._acceptElement(lastChild, acceptElementState) ===\n                    NodeFilter.FILTER_ACCEPT &&\n                !prepareForNextElement(true)\n            ) {\n                if (acceptElementState.skippedFocusable) {\n                    out.outOfDOMOrder = true;\n                }\n\n                return elements;\n            }\n\n            walker.currentNode = lastChild;\n        }\n\n        do {\n            if (isBackward) {\n                walker.previousNode();\n            } else {\n                walker.nextNode();\n            }\n        } while (prepareForNextElement());\n\n        if (acceptElementState.skippedFocusable) {\n            out.outOfDOMOrder = true;\n        }\n\n        return elements.length ? elements : null;\n    }\n\n    private _acceptElement(\n        element: HTMLElement,\n        state: Types.FocusableAcceptElementState\n    ): number {\n        if (state.found) {\n            return NodeFilter.FILTER_ACCEPT;\n        }\n\n        const foundBackward = state.foundBackward;\n\n        if (\n            foundBackward &&\n            (element === foundBackward ||\n                !dom.nodeContains(foundBackward, element))\n        ) {\n            state.found = true;\n            state.foundElement = foundBackward;\n            return NodeFilter.FILTER_ACCEPT;\n        }\n\n        const container = state.container;\n\n        if (element === container) {\n            return NodeFilter.FILTER_SKIP;\n        }\n\n        if (!dom.nodeContains(container, element)) {\n            return NodeFilter.FILTER_REJECT;\n        }\n\n        if (getDummyInputContainer(element)) {\n            return NodeFilter.FILTER_REJECT;\n        }\n\n        if (dom.nodeContains(state.rejectElementsFrom, element)) {\n            return NodeFilter.FILTER_REJECT;\n        }\n\n        const ctx = (state.currentCtx = RootAPI.getTabsterContext(\n            this._tabster,\n            element\n        ));\n\n        // Tabster is opt in, if it is not managed, don't try and get do anything special\n        if (!ctx) {\n            return NodeFilter.FILTER_SKIP;\n        }\n\n        if (shouldIgnoreFocus(element)) {\n            if (this.isFocusable(element, undefined, true, true)) {\n                state.skippedFocusable = true;\n            }\n\n            return NodeFilter.FILTER_SKIP;\n        }\n\n        // We assume iframes are focusable because native tab behaviour would tab inside.\n        // But we do it only during the standard search when there is no custom accept\n        // element condition.\n        if (\n            !state.hasCustomCondition &&\n            (element.tagName === \"IFRAME\" || element.tagName === \"WEBVIEW\")\n        ) {\n            if (ctx.modalizer?.userId === this._tabster.modalizer?.activeId) {\n                state.found = true;\n                state.rejectElementsFrom = state.foundElement = element;\n\n                return NodeFilter.FILTER_ACCEPT;\n            } else {\n                return NodeFilter.FILTER_REJECT;\n            }\n        }\n\n        if (!state.ignoreAccessibility && !this.isAccessible(element)) {\n            if (this.isFocusable(element, false, true, true)) {\n                state.skippedFocusable = true;\n            }\n\n            return NodeFilter.FILTER_REJECT;\n        }\n\n        let result: number | undefined;\n\n        let fromCtx = state.fromCtx;\n\n        if (!fromCtx) {\n            fromCtx = state.fromCtx = RootAPI.getTabsterContext(\n                this._tabster,\n                state.from\n            );\n        }\n\n        const fromMover = fromCtx?.mover;\n        let groupper = ctx.groupper;\n        let mover = ctx.mover;\n\n        result = this._tabster.modalizer?.acceptElement(element, state);\n\n        if (result !== undefined) {\n            state.skippedFocusable = true;\n        }\n\n        if (result === undefined && (groupper || mover || fromMover)) {\n            const groupperElement = groupper?.getElement();\n            const fromMoverElement = fromMover?.getElement();\n            let moverElement = mover?.getElement();\n\n            if (\n                moverElement &&\n                dom.nodeContains(fromMoverElement, moverElement) &&\n                dom.nodeContains(container, fromMoverElement) &&\n                (!groupperElement ||\n                    !mover ||\n                    dom.nodeContains(fromMoverElement, groupperElement))\n            ) {\n                mover = fromMover;\n                moverElement = fromMoverElement;\n            }\n\n            if (\n                groupperElement &&\n                (groupperElement === container ||\n                    !dom.nodeContains(container, groupperElement))\n            ) {\n                groupper = undefined;\n            }\n\n            if (moverElement && !dom.nodeContains(container, moverElement)) {\n                mover = undefined;\n            }\n\n            if (groupper && mover) {\n                if (\n                    moverElement &&\n                    groupperElement &&\n                    !dom.nodeContains(groupperElement, moverElement)\n                ) {\n                    mover = undefined;\n                } else {\n                    groupper = undefined;\n                }\n            }\n\n            if (groupper) {\n                result = groupper.acceptElement(element, state);\n            }\n\n            if (mover) {\n                result = mover.acceptElement(element, state);\n            }\n        }\n\n        if (result === undefined) {\n            result = state.acceptCondition(element)\n                ? NodeFilter.FILTER_ACCEPT\n                : NodeFilter.FILTER_SKIP;\n\n            if (\n                result === NodeFilter.FILTER_SKIP &&\n                this.isFocusable(element, false, true, true)\n            ) {\n                state.skippedFocusable = true;\n            }\n        }\n\n        if (result === NodeFilter.FILTER_ACCEPT && !state.found) {\n            if (\n                !state.isFindAll &&\n                isRadio(element) &&\n                !(element as HTMLInputElement).checked\n            ) {\n                // We need to mimic the browser's behaviour to skip unchecked radio buttons.\n                const radioGroupName = (element as HTMLInputElement).name;\n                let radioGroup: Types.RadioButtonGroup | undefined =\n                    state.cachedRadioGroups[radioGroupName];\n\n                if (!radioGroup) {\n                    radioGroup = getRadioButtonGroup(element);\n\n                    if (radioGroup) {\n                        state.cachedRadioGroups[radioGroupName] = radioGroup;\n                    }\n                }\n\n                if (radioGroup?.checked && radioGroup.checked !== element) {\n                    // Currently found element is a radio button in a group that has another radio button checked.\n                    return NodeFilter.FILTER_SKIP;\n                }\n            }\n\n            if (state.isBackward) {\n                // When TreeWalker goes backwards, it visits the container first,\n                // then it goes inside. So, if the container is accepted, we remember it,\n                // but allowing the TreeWalker to check inside.\n                state.foundBackward = element;\n                result = NodeFilter.FILTER_SKIP;\n            } else {\n                state.found = true;\n                state.foundElement = element;\n            }\n        }\n\n        return result;\n    }\n}\n", "/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const Keys: {\n    Tab: \"Tab\";\n    Enter: \"Enter\";\n    Escape: \"Escape\";\n    Space: \" \";\n    PageUp: \"PageUp\";\n    PageDown: \"PageDown\";\n    End: \"End\";\n    Home: \"Home\";\n    ArrowLeft: \"ArrowLeft\";\n    ArrowUp: \"ArrowUp\";\n    ArrowRight: \"ArrowRight\";\n    ArrowDown: \"ArrowDown\";\n} = {\n    Tab: \"Tab\",\n    Enter: \"Enter\",\n    Escape: \"Escape\",\n    Space: \" \",\n    PageUp: \"PageUp\",\n    PageDown: \"PageDown\",\n    End: \"End\",\n    Home: \"Home\",\n    ArrowLeft: \"ArrowLeft\",\n    ArrowUp: \"ArrowUp\",\n    ArrowRight: \"ArrowRight\",\n    ArrowDown: \"ArrowDown\",\n};\n\nexport type Key = typeof Keys[keyof typeof Keys];\n", "/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    KEYBORG_FOCUSIN,\n    KEYBORG_FOCUSOUT,\n    KeyborgFocusInEvent,\n    KeyborgFocusOutEvent,\n    nativeFocus,\n} from \"keyborg\";\n\nimport { Keys } from \"../Keys\";\nimport { RootAPI } from \"../Root\";\nimport * as Types from \"../Types\";\nimport { AsyncFocusSources } from \"../Consts\";\nimport {\n    TabsterFocusInEvent,\n    TabsterFocusOutEvent,\n    TabsterMoveFocusEvent,\n} from \"../Events\";\nimport {\n    documentContains,\n    DummyInputManager,\n    getLastChild,\n    shouldIgnoreFocus,\n    WeakHTMLElement,\n} from \"../Utils\";\nimport { getTabsterOnElement } from \"../Instance\";\nimport { dom } from \"../DOMAPI\";\nimport { Subscribable } from \"./Subscribable\";\n\nfunction getUncontrolledCompletelyContainer(\n    tabster: Types.TabsterCore,\n    element: HTMLElement\n): HTMLElement | undefined {\n    const getParent = tabster.getParent;\n    let el: HTMLElement | null = element;\n\n    do {\n        const uncontrolledOnElement = getTabsterOnElement(\n            tabster,\n            el\n        )?.uncontrolled;\n\n        if (\n            uncontrolledOnElement &&\n            tabster.uncontrolled.isUncontrolledCompletely(\n                el,\n                !!uncontrolledOnElement.completely\n            )\n        ) {\n            return el;\n        }\n\n        el = getParent(el) as HTMLElement | null;\n    } while (el);\n\n    return undefined;\n}\n\nconst AsyncFocusIntentPriorityBySource = {\n    [AsyncFocusSources.Restorer]: 0,\n    [AsyncFocusSources.Deloser]: 1,\n    [AsyncFocusSources.EscapeGroupper]: 2,\n};\n\ninterface AsyncFocus {\n    source: Types.AsyncFocusSource;\n    callback: () => void;\n    timeout: number;\n}\n\nexport class FocusedElementState\n    extends Subscribable<HTMLElement | undefined, Types.FocusedElementDetail>\n    implements Types.FocusedElementState\n{\n    private static _lastResetElement: WeakHTMLElement | undefined;\n    private static _isTabbingTimer: number | undefined;\n    static isTabbing = false;\n\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    private _nextVal:\n        | {\n              element: WeakHTMLElement | undefined;\n              detail: Types.FocusedElementDetail;\n          }\n        | undefined;\n    private _lastVal: WeakHTMLElement | undefined;\n    private _asyncFocus?: AsyncFocus;\n\n    constructor(tabster: Types.TabsterCore, getWindow: Types.GetWindow) {\n        super();\n\n        this._tabster = tabster;\n        this._win = getWindow;\n        tabster.queueInit(this._init);\n    }\n\n    private _init = (): void => {\n        const win = this._win();\n        const doc = win.document;\n\n        // Add these event listeners as capture - we want Tabster to run before user event handlers\n        doc.addEventListener(KEYBORG_FOCUSIN, this._onFocusIn, true);\n        doc.addEventListener(KEYBORG_FOCUSOUT, this._onFocusOut, true);\n        win.addEventListener(\"keydown\", this._onKeyDown, true);\n\n        const activeElement = dom.getActiveElement(doc);\n\n        if (activeElement && activeElement !== doc.body) {\n            this._setFocusedElement(activeElement as HTMLElement);\n        }\n\n        this.subscribe(this._onChanged);\n    };\n\n    dispose(): void {\n        super.dispose();\n\n        const win = this._win();\n        const doc = win.document;\n\n        doc.removeEventListener(KEYBORG_FOCUSIN, this._onFocusIn, true);\n        doc.removeEventListener(KEYBORG_FOCUSOUT, this._onFocusOut, true);\n        win.removeEventListener(\"keydown\", this._onKeyDown, true);\n\n        this.unsubscribe(this._onChanged);\n\n        const asyncFocus = this._asyncFocus;\n        if (asyncFocus) {\n            win.clearTimeout(asyncFocus.timeout);\n            delete this._asyncFocus;\n        }\n\n        delete FocusedElementState._lastResetElement;\n\n        delete this._nextVal;\n        delete this._lastVal;\n    }\n\n    static forgetMemorized(\n        instance: Types.FocusedElementState,\n        parent: HTMLElement\n    ): void {\n        let wel = FocusedElementState._lastResetElement;\n        let el = wel && wel.get();\n        if (el && dom.nodeContains(parent, el)) {\n            delete FocusedElementState._lastResetElement;\n        }\n\n        el = (instance as FocusedElementState)._nextVal?.element?.get();\n        if (el && dom.nodeContains(parent, el)) {\n            delete (instance as FocusedElementState)._nextVal;\n        }\n\n        wel = (instance as FocusedElementState)._lastVal;\n        el = wel && wel.get();\n        if (el && dom.nodeContains(parent, el)) {\n            delete (instance as FocusedElementState)._lastVal;\n        }\n    }\n\n    getFocusedElement(): HTMLElement | undefined {\n        return this.getVal();\n    }\n\n    getLastFocusedElement(): HTMLElement | undefined {\n        let el = this._lastVal?.get();\n\n        if (!el || (el && !documentContains(el.ownerDocument, el))) {\n            this._lastVal = el = undefined;\n        }\n\n        return el;\n    }\n\n    focus(\n        element: HTMLElement,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean,\n        preventScroll?: boolean\n    ): boolean {\n        if (\n            !this._tabster.focusable.isFocusable(\n                element,\n                noFocusedProgrammaticallyFlag,\n                false,\n                noAccessibleCheck\n            )\n        ) {\n            return false;\n        }\n\n        element.focus({ preventScroll });\n\n        return true;\n    }\n\n    focusDefault(container: HTMLElement): boolean {\n        const el = this._tabster.focusable.findDefault({ container });\n\n        if (el) {\n            this._tabster.focusedElement.focus(el);\n\n            return true;\n        }\n\n        return false;\n    }\n\n    getFirstOrLastTabbable(\n        isFirst: boolean,\n        props: Pick<\n            Types.FindFocusableProps,\n            \"container\" | \"ignoreAccessibility\"\n        >\n    ): HTMLElement | undefined {\n        const { container, ignoreAccessibility } = props;\n        let toFocus: HTMLElement | null | undefined;\n\n        if (container) {\n            const ctx = RootAPI.getTabsterContext(this._tabster, container);\n\n            if (ctx) {\n                toFocus = FocusedElementState.findNextTabbable(\n                    this._tabster,\n                    ctx,\n                    container,\n                    undefined,\n                    undefined,\n                    !isFirst,\n                    ignoreAccessibility\n                )?.element;\n            }\n        }\n\n        if (toFocus && !dom.nodeContains(container, toFocus)) {\n            toFocus = undefined;\n        }\n\n        return toFocus || undefined;\n    }\n\n    private _focusFirstOrLast(\n        isFirst: boolean,\n        props: Types.FindFirstProps\n    ): boolean {\n        const toFocus = this.getFirstOrLastTabbable(isFirst, props);\n\n        if (toFocus) {\n            this.focus(toFocus, false, true);\n\n            return true;\n        }\n\n        return false;\n    }\n\n    focusFirst(props: Types.FindFirstProps): boolean {\n        return this._focusFirstOrLast(true, props);\n    }\n\n    focusLast(props: Types.FindFirstProps): boolean {\n        return this._focusFirstOrLast(false, props);\n    }\n\n    resetFocus(container: HTMLElement): boolean {\n        if (!this._tabster.focusable.isVisible(container)) {\n            return false;\n        }\n\n        if (!this._tabster.focusable.isFocusable(container, true, true, true)) {\n            const prevTabIndex = container.getAttribute(\"tabindex\");\n            const prevAriaHidden = container.getAttribute(\"aria-hidden\");\n\n            container.tabIndex = -1;\n            container.setAttribute(\"aria-hidden\", \"true\");\n\n            FocusedElementState._lastResetElement = new WeakHTMLElement(\n                this._win,\n                container\n            );\n\n            this.focus(container, true, true);\n\n            this._setOrRemoveAttribute(container, \"tabindex\", prevTabIndex);\n            this._setOrRemoveAttribute(\n                container,\n                \"aria-hidden\",\n                prevAriaHidden\n            );\n        } else {\n            this.focus(container);\n        }\n\n        return true;\n    }\n\n    requestAsyncFocus(\n        source: Types.AsyncFocusSource,\n        callback: () => void,\n        delay: number\n    ): void {\n        const win = this._tabster.getWindow();\n        const currentAsyncFocus = this._asyncFocus;\n\n        if (currentAsyncFocus) {\n            if (\n                AsyncFocusIntentPriorityBySource[source] >\n                AsyncFocusIntentPriorityBySource[currentAsyncFocus.source]\n            ) {\n                // Previously registered intent has higher priority.\n                return;\n            }\n\n            // New intent has higher priority.\n            win.clearTimeout(currentAsyncFocus.timeout);\n        }\n\n        this._asyncFocus = {\n            source,\n            callback,\n            timeout: win.setTimeout(() => {\n                this._asyncFocus = undefined;\n                callback();\n            }, delay),\n        };\n    }\n\n    cancelAsyncFocus(source: Types.AsyncFocusSource): void {\n        const asyncFocus = this._asyncFocus;\n\n        if (asyncFocus?.source === source) {\n            this._tabster.getWindow().clearTimeout(asyncFocus.timeout);\n            this._asyncFocus = undefined;\n        }\n    }\n\n    private _setOrRemoveAttribute(\n        element: HTMLElement,\n        name: string,\n        value: string | null\n    ): void {\n        if (value === null) {\n            element.removeAttribute(name);\n        } else {\n            element.setAttribute(name, value);\n        }\n    }\n\n    private _setFocusedElement(\n        element?: HTMLElement,\n        relatedTarget?: HTMLElement,\n        isFocusedProgrammatically?: boolean\n    ): void {\n        if (this._tabster._noop) {\n            return;\n        }\n\n        const detail: Types.FocusedElementDetail = { relatedTarget };\n\n        if (element) {\n            const lastResetElement =\n                FocusedElementState._lastResetElement?.get();\n            FocusedElementState._lastResetElement = undefined;\n\n            if (lastResetElement === element || shouldIgnoreFocus(element)) {\n                return;\n            }\n\n            detail.isFocusedProgrammatically = isFocusedProgrammatically;\n\n            const ctx = RootAPI.getTabsterContext(this._tabster, element);\n\n            const modalizerId = ctx?.modalizer?.userId;\n\n            if (modalizerId) {\n                detail.modalizerId = modalizerId;\n            }\n        }\n\n        const nextVal = (this._nextVal = {\n            element: element\n                ? new WeakHTMLElement(this._win, element)\n                : undefined,\n            detail,\n        });\n\n        if (element && element !== this._val) {\n            this._validateFocusedElement(element);\n        }\n\n        // _validateFocusedElement() might cause the refocus which will trigger\n        // another call to this function. Making sure that the value is correct.\n        if (this._nextVal === nextVal) {\n            this.setVal(element, detail);\n        }\n\n        this._nextVal = undefined;\n    }\n\n    protected setVal(\n        val: HTMLElement | undefined,\n        detail: Types.FocusedElementDetail\n    ): void {\n        super.setVal(val, detail);\n\n        if (val) {\n            this._lastVal = new WeakHTMLElement(this._win, val);\n        }\n    }\n\n    private _onFocusIn = (e: KeyborgFocusInEvent): void => {\n        const target = e.composedPath()[0] as HTMLElement;\n\n        if (target) {\n            this._setFocusedElement(\n                target,\n                e.detail.relatedTarget as HTMLElement | undefined,\n                e.detail.isFocusedProgrammatically\n            );\n        }\n    };\n\n    private _onFocusOut = (e: KeyborgFocusOutEvent): void => {\n        this._setFocusedElement(\n            undefined,\n            e.detail?.originalEvent.relatedTarget as HTMLElement | undefined\n        );\n    };\n\n    static findNextTabbable(\n        tabster: Types.TabsterCore,\n        ctx: Types.TabsterContext,\n        container?: HTMLElement,\n        currentElement?: HTMLElement,\n        referenceElement?: HTMLElement,\n        isBackward?: boolean,\n        ignoreAccessibility?: boolean\n    ): Types.NextTabbable | null {\n        const actualContainer = container || ctx.root.getElement();\n\n        if (!actualContainer) {\n            return null;\n        }\n\n        let next: Types.NextTabbable | null = null;\n\n        const isTabbingTimer = FocusedElementState._isTabbingTimer;\n        const win = tabster.getWindow();\n\n        if (isTabbingTimer) {\n            win.clearTimeout(isTabbingTimer);\n        }\n\n        FocusedElementState.isTabbing = true;\n        FocusedElementState._isTabbingTimer = win.setTimeout(() => {\n            delete FocusedElementState._isTabbingTimer;\n            FocusedElementState.isTabbing = false;\n        }, 0);\n\n        const modalizer = ctx.modalizer;\n        const groupper = ctx.groupper;\n        const mover = ctx.mover;\n\n        const callFindNext = (\n            what: Types.Groupper | Types.Mover | Types.Modalizer\n        ) => {\n            next = what.findNextTabbable(\n                currentElement,\n                referenceElement,\n                isBackward,\n                ignoreAccessibility\n            );\n\n            if (currentElement && !next?.element) {\n                const parentElement =\n                    what !== modalizer &&\n                    dom.getParentElement(what.getElement());\n\n                if (parentElement) {\n                    const parentCtx = RootAPI.getTabsterContext(\n                        tabster,\n                        currentElement,\n                        { referenceElement: parentElement }\n                    );\n\n                    if (parentCtx) {\n                        const currentScopeElement = what.getElement();\n                        const newCurrent = isBackward\n                            ? currentScopeElement\n                            : (currentScopeElement &&\n                                  getLastChild(currentScopeElement)) ||\n                              currentScopeElement;\n\n                        if (newCurrent) {\n                            next = FocusedElementState.findNextTabbable(\n                                tabster,\n                                parentCtx,\n                                container,\n                                newCurrent,\n                                parentElement,\n                                isBackward,\n                                ignoreAccessibility\n                            );\n\n                            if (next) {\n                                next.outOfDOMOrder = true;\n                            }\n                        }\n                    }\n                }\n            }\n        };\n\n        if (groupper && mover) {\n            callFindNext(ctx.groupperBeforeMover ? groupper : mover);\n        } else if (groupper) {\n            callFindNext(groupper);\n        } else if (mover) {\n            callFindNext(mover);\n        } else if (modalizer) {\n            callFindNext(modalizer);\n        } else {\n            const findProps: Types.FindNextProps = {\n                container: actualContainer,\n                currentElement,\n                referenceElement,\n                ignoreAccessibility,\n                useActiveModalizer: true,\n            };\n\n            const findPropsOut: Types.FindFocusableOutputProps = {};\n\n            const nextElement = tabster.focusable[\n                isBackward ? \"findPrev\" : \"findNext\"\n            ](findProps, findPropsOut);\n\n            next = {\n                element: nextElement,\n                outOfDOMOrder: findPropsOut.outOfDOMOrder,\n                uncontrolled: findPropsOut.uncontrolled,\n            };\n        }\n\n        return next;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    private _validateFocusedElement = (element: HTMLElement): void => {\n        // TODO: Make sure this is not needed anymore and write tests.\n    };\n\n    private _onKeyDown = (event: KeyboardEvent): void => {\n        if (event.key !== Keys.Tab || event.ctrlKey) {\n            return;\n        }\n\n        const currentElement = this.getVal();\n\n        if (\n            !currentElement ||\n            !currentElement.ownerDocument ||\n            currentElement.contentEditable === \"true\"\n        ) {\n            return;\n        }\n\n        const tabster = this._tabster;\n        const controlTab = tabster.controlTab;\n        const ctx = RootAPI.getTabsterContext(tabster, currentElement);\n\n        if (!ctx || ctx.ignoreKeydown(event)) {\n            return;\n        }\n\n        const isBackward = event.shiftKey;\n\n        const next = FocusedElementState.findNextTabbable(\n            tabster,\n            ctx,\n            undefined,\n            currentElement,\n            undefined,\n            isBackward,\n            true\n        );\n\n        const rootElement = ctx.root.getElement();\n\n        if (!rootElement) {\n            return;\n        }\n\n        const nextElement = next?.element;\n        const uncontrolledCompletelyContainer =\n            getUncontrolledCompletelyContainer(tabster, currentElement);\n\n        if (nextElement) {\n            const nextUncontrolled = next.uncontrolled;\n\n            if (\n                ctx.uncontrolled ||\n                dom.nodeContains(nextUncontrolled, currentElement)\n            ) {\n                if (\n                    (!next.outOfDOMOrder &&\n                        nextUncontrolled === ctx.uncontrolled) ||\n                    (uncontrolledCompletelyContainer &&\n                        !dom.nodeContains(\n                            uncontrolledCompletelyContainer,\n                            nextElement\n                        ))\n                ) {\n                    // Nothing to do, everything will be done by the browser or something\n                    // that controls the uncontrolled area.\n                    return;\n                }\n\n                // We are in uncontrolled area. We allow whatever controls it to move\n                // focus, but we add a phantom dummy to make sure the focus is moved\n                // to the correct place if the uncontrolled area allows default action.\n                // We only need that in the controlled mode, because in uncontrolled\n                // mode we have dummy inputs around everything that redirects focus.\n                DummyInputManager.addPhantomDummyWithTarget(\n                    tabster,\n                    currentElement,\n                    isBackward,\n                    nextElement\n                );\n\n                return;\n            }\n\n            if (nextUncontrolled || nextElement.tagName === \"IFRAME\") {\n                // For iframes and uncontrolled areas we always want to use default action to\n                // move focus into.\n                if (\n                    rootElement.dispatchEvent(\n                        new TabsterMoveFocusEvent({\n                            by: \"root\",\n                            owner: rootElement,\n                            next: nextElement,\n                            relatedEvent: event,\n                        })\n                    )\n                ) {\n                    DummyInputManager.moveWithPhantomDummy(\n                        this._tabster,\n                        nextUncontrolled ?? nextElement,\n                        false,\n                        isBackward,\n                        event\n                    );\n                }\n\n                return;\n            }\n\n            if (controlTab || next?.outOfDOMOrder) {\n                if (\n                    rootElement.dispatchEvent(\n                        new TabsterMoveFocusEvent({\n                            by: \"root\",\n                            owner: rootElement,\n                            next: nextElement,\n                            relatedEvent: event,\n                        })\n                    )\n                ) {\n                    event.preventDefault();\n                    event.stopImmediatePropagation();\n\n                    nativeFocus(nextElement);\n                }\n            } else {\n                // We are in uncontrolled mode and the next element is in DOM order.\n                // Just allow the default action.\n            }\n        } else {\n            if (\n                !uncontrolledCompletelyContainer &&\n                rootElement.dispatchEvent(\n                    new TabsterMoveFocusEvent({\n                        by: \"root\",\n                        owner: rootElement,\n                        next: null,\n                        relatedEvent: event,\n                    })\n                )\n            ) {\n                ctx.root.moveOutWithDefaultAction(isBackward, event);\n            }\n        }\n    };\n\n    _onChanged = (\n        element: HTMLElement | undefined,\n        detail: Types.FocusedElementDetail\n    ): void => {\n        if (element) {\n            element.dispatchEvent(new TabsterFocusInEvent(detail));\n        } else {\n            const last = this._lastVal?.get();\n\n            if (last) {\n                const d = { ...detail };\n                const lastCtx = RootAPI.getTabsterContext(this._tabster, last);\n                const modalizerId = lastCtx?.modalizer?.userId;\n\n                if (modalizerId) {\n                    d.modalizerId = modalizerId;\n                }\n\n                last.dispatchEvent(new TabsterFocusOutEvent(d));\n            }\n        }\n    };\n}\n", "/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { nativeFocus } from \"keyborg\";\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport { Keys } from \"./Keys\";\nimport { RootAPI } from \"./Root\";\nimport * as Types from \"./Types\";\nimport {\n    AsyncFocusSources,\n    GroupperMoveFocusActions,\n    GroupperTabbabilities,\n} from \"./Consts\";\nimport {\n    GroupperMoveFocusEvent,\n    GroupperMoveFocusEventName,\n    TabsterMoveFocusEvent,\n} from \"./Events\";\nimport { FocusedElementState } from \"./State/FocusedElement\";\nimport {\n    DummyInput,\n    DummyInputManager,\n    DummyInputManagerPriorities,\n    getAdjacentElement,\n    getDummyInputContainer,\n    TabsterPart,\n    WeakHTMLElement,\n} from \"./Utils\";\nimport { dom } from \"./DOMAPI\";\n\nclass GroupperDummyManager extends DummyInputManager {\n    constructor(\n        element: WeakHTMLElement,\n        groupper: Groupper,\n        tabster: Types.TabsterCore,\n        sys: Types.SysProps | undefined\n    ) {\n        super(\n            tabster,\n            element,\n            DummyInputManagerPriorities.Groupper,\n            sys,\n            true\n        );\n\n        this._setHandlers(\n            (\n                dummyInput: DummyInput,\n                isBackward: boolean,\n                relatedTarget: HTMLElement | null\n            ) => {\n                const container = element.get();\n                const input = dummyInput.input;\n\n                if (container && input) {\n                    const ctx = RootAPI.getTabsterContext(tabster, input);\n\n                    if (ctx) {\n                        let next: HTMLElement | null | undefined;\n\n                        next = groupper.findNextTabbable(\n                            relatedTarget || undefined,\n                            undefined,\n                            isBackward,\n                            true\n                        )?.element;\n\n                        if (!next) {\n                            next = FocusedElementState.findNextTabbable(\n                                tabster,\n                                ctx,\n                                undefined,\n                                dummyInput.isOutside\n                                    ? input\n                                    : getAdjacentElement(\n                                          container,\n                                          !isBackward\n                                      ),\n                                undefined,\n                                isBackward,\n                                true\n                            )?.element;\n                        }\n\n                        if (next) {\n                            nativeFocus(next);\n                        }\n                    }\n                }\n            }\n        );\n    }\n}\n\nexport class Groupper\n    extends TabsterPart<Types.GroupperProps>\n    implements Types.Groupper\n{\n    private _shouldTabInside = false;\n    private _first: WeakHTMLElement | undefined;\n    private _onDispose: (groupper: Groupper) => void;\n\n    dummyManager: GroupperDummyManager | undefined;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        onDispose: (groupper: Groupper) => void,\n        props: Types.GroupperProps,\n        sys: Types.SysProps | undefined\n    ) {\n        super(tabster, element, props);\n        this.makeTabbable(false);\n\n        this._onDispose = onDispose;\n\n        if (!tabster.controlTab) {\n            this.dummyManager = new GroupperDummyManager(\n                this._element,\n                this,\n                tabster,\n                sys\n            );\n        }\n    }\n\n    dispose(): void {\n        this._onDispose(this);\n\n        const element = this._element.get();\n        this.dummyManager?.dispose();\n        delete this.dummyManager;\n\n        if (element) {\n            if (__DEV__) {\n                _setInformativeStyle(this._element, true);\n            }\n        }\n\n        delete this._first;\n    }\n\n    findNextTabbable(\n        currentElement?: HTMLElement,\n        referenceElement?: HTMLElement,\n        isBackward?: boolean,\n        ignoreAccessibility?: boolean\n    ): Types.NextTabbable | null {\n        const groupperElement = this.getElement();\n\n        if (!groupperElement) {\n            return null;\n        }\n\n        const currentIsDummy =\n            getDummyInputContainer(currentElement) === groupperElement;\n\n        if (\n            !this._shouldTabInside &&\n            currentElement &&\n            dom.nodeContains(groupperElement, currentElement) &&\n            !currentIsDummy\n        ) {\n            return { element: undefined, outOfDOMOrder: true };\n        }\n\n        const groupperFirstFocusable = this.getFirst(true);\n\n        if (\n            !currentElement ||\n            !dom.nodeContains(groupperElement, currentElement) ||\n            currentIsDummy\n        ) {\n            return {\n                element: groupperFirstFocusable,\n                outOfDOMOrder: true,\n            };\n        }\n\n        const tabster = this._tabster;\n        let next: HTMLElement | null | undefined = null;\n        let outOfDOMOrder = false;\n        let uncontrolled: HTMLElement | null | undefined;\n\n        if (this._shouldTabInside && groupperFirstFocusable) {\n            const findProps: Types.FindNextProps = {\n                container: groupperElement,\n                currentElement,\n                referenceElement,\n                ignoreAccessibility,\n                useActiveModalizer: true,\n            };\n\n            const findPropsOut: Types.FindFocusableOutputProps = {};\n\n            next = tabster.focusable[isBackward ? \"findPrev\" : \"findNext\"](\n                findProps,\n                findPropsOut\n            );\n\n            outOfDOMOrder = !!findPropsOut.outOfDOMOrder;\n\n            if (\n                !next &&\n                this._props.tabbability ===\n                    GroupperTabbabilities.LimitedTrapFocus\n            ) {\n                next = tabster.focusable[isBackward ? \"findLast\" : \"findFirst\"](\n                    {\n                        container: groupperElement,\n                        ignoreAccessibility,\n                        useActiveModalizer: true,\n                    },\n                    findPropsOut\n                );\n\n                outOfDOMOrder = true;\n            }\n\n            uncontrolled = findPropsOut.uncontrolled;\n        }\n\n        return {\n            element: next,\n            uncontrolled,\n            outOfDOMOrder,\n        };\n    }\n\n    makeTabbable(isTabbable: boolean): void {\n        this._shouldTabInside = isTabbable || !this._props.tabbability;\n\n        if (__DEV__) {\n            _setInformativeStyle(this._element, !this._shouldTabInside);\n        }\n    }\n\n    isActive(noIfFirstIsFocused?: boolean): boolean | undefined {\n        const element = this.getElement() || null;\n        let isParentActive = true;\n\n        for (\n            let e = dom.getParentElement(element);\n            e;\n            e = dom.getParentElement(e)\n        ) {\n            const g = getTabsterOnElement(this._tabster, e)?.groupper as\n                | Groupper\n                | undefined;\n\n            if (g) {\n                if (!g._shouldTabInside) {\n                    isParentActive = false;\n                }\n            }\n        }\n\n        let ret = isParentActive\n            ? this._props.tabbability\n                ? this._shouldTabInside\n                : false\n            : undefined;\n\n        if (ret && noIfFirstIsFocused) {\n            const focused = this._tabster.focusedElement.getFocusedElement();\n\n            if (focused) {\n                ret = focused !== this.getFirst(true);\n            }\n        }\n\n        return ret;\n    }\n\n    getFirst(orContainer: boolean): HTMLElement | undefined {\n        const groupperElement = this.getElement();\n        let first: HTMLElement | undefined;\n\n        if (groupperElement) {\n            if (\n                orContainer &&\n                this._tabster.focusable.isFocusable(groupperElement)\n            ) {\n                return groupperElement;\n            }\n\n            first = this._first?.get();\n\n            if (!first) {\n                first =\n                    this._tabster.focusable.findFirst({\n                        container: groupperElement,\n                        useActiveModalizer: true,\n                    }) || undefined;\n\n                if (first) {\n                    this.setFirst(first);\n                }\n            }\n        }\n\n        return first;\n    }\n\n    setFirst(element: HTMLElement | undefined): void {\n        if (element) {\n            this._first = new WeakHTMLElement(this._tabster.getWindow, element);\n        } else {\n            delete this._first;\n        }\n    }\n\n    acceptElement(\n        element: HTMLElement,\n        state: Types.FocusableAcceptElementState\n    ): number | undefined {\n        const cachedGrouppers = state.cachedGrouppers;\n\n        const parentElement = dom.getParentElement(this.getElement());\n        const parentCtx =\n            parentElement &&\n            RootAPI.getTabsterContext(this._tabster, parentElement);\n        const parentCtxGroupper = parentCtx?.groupper;\n        const parentGroupper = parentCtx?.groupperBeforeMover\n            ? parentCtxGroupper\n            : undefined;\n        let parentGroupperElement: HTMLElement | undefined;\n\n        const getIsActive = (groupper: Types.Groupper) => {\n            let cached = cachedGrouppers[groupper.id];\n            let isActive: boolean | undefined;\n\n            if (cached) {\n                isActive = cached.isActive;\n            } else {\n                isActive = this.isActive(true);\n\n                cached = cachedGrouppers[groupper.id] = {\n                    isActive,\n                };\n            }\n\n            return isActive;\n        };\n\n        if (parentGroupper) {\n            parentGroupperElement = parentGroupper.getElement();\n\n            if (\n                !getIsActive(parentGroupper) &&\n                parentGroupperElement &&\n                state.container !== parentGroupperElement &&\n                dom.nodeContains(state.container, parentGroupperElement)\n            ) {\n                // Do not fall into a child groupper of inactive parent groupper if it's in the scope of the search.\n                state.skippedFocusable = true;\n                return NodeFilter.FILTER_REJECT;\n            }\n        }\n\n        const isActive = getIsActive(this);\n        const groupperElement = this.getElement();\n\n        if (groupperElement) {\n            if (isActive !== true) {\n                if (groupperElement === element && parentCtxGroupper) {\n                    if (!parentGroupperElement) {\n                        parentGroupperElement = parentCtxGroupper.getElement();\n                    }\n\n                    if (\n                        parentGroupperElement &&\n                        !getIsActive(parentCtxGroupper) &&\n                        dom.nodeContains(\n                            state.container,\n                            parentGroupperElement\n                        ) &&\n                        parentGroupperElement !== state.container\n                    ) {\n                        state.skippedFocusable = true;\n                        return NodeFilter.FILTER_REJECT;\n                    }\n                }\n\n                if (\n                    groupperElement !== element &&\n                    dom.nodeContains(groupperElement, element)\n                ) {\n                    state.skippedFocusable = true;\n                    return NodeFilter.FILTER_REJECT;\n                }\n\n                const cached = cachedGrouppers[this.id];\n                let first: HTMLElement | null | undefined;\n\n                if (\"first\" in cached) {\n                    first = cached.first;\n                } else {\n                    first = cached.first = this.getFirst(true);\n                }\n\n                if (first && state.acceptCondition(first)) {\n                    state.rejectElementsFrom = groupperElement;\n                    state.skippedFocusable = true;\n\n                    if (first !== state.from) {\n                        state.found = true;\n                        state.foundElement = first;\n                        return NodeFilter.FILTER_ACCEPT;\n                    } else {\n                        return NodeFilter.FILTER_REJECT;\n                    }\n                }\n            }\n        }\n\n        return undefined;\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction validateGroupperProps(props: Types.GroupperProps): void {\n    // TODO: Implement validation.\n}\n\nexport class GroupperAPI implements Types.GroupperAPI {\n    private _tabster: Types.TabsterCore;\n    private _updateTimer: number | undefined;\n    private _win: Types.GetWindow;\n    private _current: Record<string, Types.Groupper> = {};\n    private _grouppers: Record<string, Types.Groupper> = {};\n\n    constructor(tabster: Types.TabsterCore, getWindow: Types.GetWindow) {\n        this._tabster = tabster;\n        this._win = getWindow;\n        tabster.queueInit(this._init);\n    }\n\n    private _init = (): void => {\n        const win = this._win();\n\n        // Making sure groupper's onFocus is called before modalizer's onFocus.\n        this._tabster.focusedElement.subscribeFirst(this._onFocus);\n\n        const doc = win.document;\n\n        const activeElement = dom.getActiveElement(doc);\n\n        if (activeElement) {\n            this._onFocus(activeElement as HTMLElement);\n        }\n\n        doc.addEventListener(\"mousedown\", this._onMouseDown, true);\n        win.addEventListener(\"keydown\", this._onKeyDown, true);\n        win.addEventListener(GroupperMoveFocusEventName, this._onMoveFocus);\n    };\n\n    dispose(): void {\n        const win = this._win();\n\n        this._tabster.focusedElement.cancelAsyncFocus(\n            AsyncFocusSources.EscapeGroupper\n        );\n\n        this._current = {};\n\n        if (this._updateTimer) {\n            win.clearTimeout(this._updateTimer);\n            delete this._updateTimer;\n        }\n\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n\n        win.document.removeEventListener(\"mousedown\", this._onMouseDown, true);\n        win.removeEventListener(\"keydown\", this._onKeyDown, true);\n        win.removeEventListener(GroupperMoveFocusEventName, this._onMoveFocus);\n\n        Object.keys(this._grouppers).forEach((groupperId) => {\n            if (this._grouppers[groupperId]) {\n                this._grouppers[groupperId].dispose();\n                delete this._grouppers[groupperId];\n            }\n        });\n    }\n\n    createGroupper(\n        element: HTMLElement,\n        props: Types.GroupperProps,\n        sys: Types.SysProps | undefined\n    ) {\n        if (__DEV__) {\n            validateGroupperProps(props);\n        }\n\n        const newGroupper = new Groupper(\n            this._tabster,\n            element,\n            this._onGroupperDispose,\n            props,\n            sys\n        );\n\n        this._grouppers[newGroupper.id] = newGroupper;\n\n        const focusedElement = this._tabster.focusedElement.getFocusedElement();\n\n        // Newly created groupper contains currently focused element, update the state on the next tick (to\n        // make sure all grouppers are processed).\n        if (\n            focusedElement &&\n            dom.nodeContains(element, focusedElement) &&\n            !this._updateTimer\n        ) {\n            this._updateTimer = this._win().setTimeout(() => {\n                delete this._updateTimer;\n                // Making sure the focused element hasn't changed.\n                if (\n                    focusedElement ===\n                    this._tabster.focusedElement.getFocusedElement()\n                ) {\n                    this._updateCurrent(focusedElement, true, true);\n                }\n            }, 0);\n        }\n\n        return newGroupper;\n    }\n\n    forgetCurrentGrouppers(): void {\n        this._current = {};\n    }\n\n    private _onGroupperDispose = (groupper: Groupper) => {\n        delete this._grouppers[groupper.id];\n    };\n\n    private _onFocus = (element: HTMLElement | undefined): void => {\n        if (element) {\n            this._updateCurrent(element, true, true);\n        }\n    };\n\n    private _onMouseDown = (e: MouseEvent): void => {\n        if (e.target) {\n            this._updateCurrent(e.target as HTMLElement, true);\n        }\n    };\n\n    private _updateCurrent(\n        element: HTMLElement,\n        includeTarget?: boolean,\n        checkTarget?: boolean\n    ): void {\n        if (this._updateTimer) {\n            this._win().clearTimeout(this._updateTimer);\n            delete this._updateTimer;\n        }\n\n        const newIds: Record<string, true> = {};\n\n        let isTarget = true;\n\n        for (\n            let el = element as HTMLElement | null;\n            el;\n            el = dom.getParentElement(el)\n        ) {\n            const groupper = getTabsterOnElement(this._tabster, el)?.groupper;\n\n            if (groupper) {\n                newIds[groupper.id] = true;\n\n                if (isTarget && checkTarget && el !== element) {\n                    isTarget = false;\n                }\n\n                if (includeTarget || !isTarget) {\n                    this._current[groupper.id] = groupper;\n                    const isTabbable =\n                        groupper.isActive() ||\n                        (element !== el &&\n                            (!groupper.getProps().delegated ||\n                                groupper.getFirst(false) !== element));\n\n                    groupper.makeTabbable(isTabbable);\n                }\n\n                isTarget = false;\n            }\n        }\n\n        for (const id of Object.keys(this._current)) {\n            const groupper = this._current[id];\n\n            if (!(groupper.id in newIds)) {\n                groupper.makeTabbable(false);\n                groupper.setFirst(undefined);\n                delete this._current[id];\n            }\n        }\n    }\n\n    private _onKeyDown = (event: KeyboardEvent): void => {\n        if (event.key !== Keys.Enter && event.key !== Keys.Escape) {\n            return;\n        }\n\n        // Give a chance to other listeners to handle the event.\n        if (event.ctrlKey || event.altKey || event.shiftKey || event.metaKey) {\n            return;\n        }\n\n        const element = this._tabster.focusedElement.getFocusedElement();\n\n        if (element) {\n            this.handleKeyPress(element, event);\n        }\n    };\n\n    private _onMoveFocus = (e: GroupperMoveFocusEvent): void => {\n        const element = e.composedPath()[0] as HTMLElement | null | undefined;\n        const action = e.detail?.action;\n\n        if (element && action !== undefined && !e.defaultPrevented) {\n            if (action === GroupperMoveFocusActions.Enter) {\n                this._enterGroupper(element);\n            } else {\n                this._escapeGroupper(element);\n            }\n\n            e.stopImmediatePropagation();\n        }\n    };\n\n    private _enterGroupper(\n        element: HTMLElement,\n        relatedEvent?: KeyboardEvent\n    ): HTMLElement | null {\n        const tabster = this._tabster;\n        const ctx = RootAPI.getTabsterContext(tabster, element);\n        const groupper = ctx?.groupper || ctx?.modalizerInGroupper;\n        const groupperElement = groupper?.getElement();\n\n        if (\n            groupper &&\n            groupperElement &&\n            (element === groupperElement ||\n                (groupper.getProps().delegated &&\n                    element === groupper.getFirst(false)))\n        ) {\n            const next = tabster.focusable.findNext({\n                container: groupperElement,\n                currentElement: element,\n                useActiveModalizer: true,\n            });\n\n            if (\n                next &&\n                (!relatedEvent ||\n                    (relatedEvent &&\n                        groupperElement.dispatchEvent(\n                            new TabsterMoveFocusEvent({\n                                by: \"groupper\",\n                                owner: groupperElement,\n                                next,\n                                relatedEvent,\n                            })\n                        )))\n            ) {\n                if (relatedEvent) {\n                    // When the application hasn't prevented default,\n                    // we consider the event completely handled, hence we\n                    // prevent the initial event's default action and stop\n                    // propagation.\n                    relatedEvent.preventDefault();\n                    relatedEvent.stopImmediatePropagation();\n                }\n\n                next.focus();\n\n                return next;\n            }\n        }\n\n        return null;\n    }\n\n    private _escapeGroupper(\n        element: HTMLElement,\n        relatedEvent?: KeyboardEvent,\n        fromModalizer?: boolean\n    ): HTMLElement | null {\n        const tabster = this._tabster;\n        const ctx = RootAPI.getTabsterContext(tabster, element);\n        const modalizerInGroupper = ctx?.modalizerInGroupper;\n        let groupper = ctx?.groupper || modalizerInGroupper;\n        const groupperElement = groupper?.getElement();\n\n        if (\n            groupper &&\n            groupperElement &&\n            dom.nodeContains(groupperElement, element)\n        ) {\n            let next: HTMLElement | null | undefined;\n\n            if (element !== groupperElement || fromModalizer) {\n                next = groupper.getFirst(true);\n            } else {\n                const parentElement = dom.getParentElement(groupperElement);\n                const parentCtx = parentElement\n                    ? RootAPI.getTabsterContext(tabster, parentElement)\n                    : undefined;\n\n                groupper = parentCtx?.groupper;\n                next = groupper?.getFirst(true);\n            }\n\n            if (\n                next &&\n                (!relatedEvent ||\n                    (relatedEvent &&\n                        groupperElement.dispatchEvent(\n                            new TabsterMoveFocusEvent({\n                                by: \"groupper\",\n                                owner: groupperElement,\n                                next,\n                                relatedEvent,\n                            })\n                        )))\n            ) {\n                if (groupper) {\n                    groupper.makeTabbable(false);\n\n                    if (modalizerInGroupper) {\n                        tabster.modalizer?.setActive(undefined);\n                    }\n                }\n\n                // This part happens asynchronously inside setTimeout,\n                // so no need to prevent default or stop propagation.\n                next.focus();\n\n                return next;\n            }\n        }\n\n        return null;\n    }\n\n    moveFocus(\n        element: HTMLElement,\n        action: Types.GroupperMoveFocusAction\n    ): HTMLElement | null {\n        return action === GroupperMoveFocusActions.Enter\n            ? this._enterGroupper(element)\n            : this._escapeGroupper(element);\n    }\n\n    handleKeyPress(\n        element: HTMLElement,\n        event: KeyboardEvent,\n        fromModalizer?: boolean\n    ): void {\n        const tabster = this._tabster;\n        const ctx = RootAPI.getTabsterContext(tabster, element);\n\n        if (ctx && (ctx?.groupper || ctx?.modalizerInGroupper)) {\n            tabster.focusedElement.cancelAsyncFocus(\n                AsyncFocusSources.EscapeGroupper\n            );\n\n            if (ctx.ignoreKeydown(event)) {\n                return;\n            }\n\n            if (event.key === Keys.Enter) {\n                this._enterGroupper(element, event);\n            } else if (event.key === Keys.Escape) {\n                // We will handle Esc asynchronously, if something in the application will\n                // move focus during the keypress handling, we will not interfere.\n                const focusedElement =\n                    tabster.focusedElement.getFocusedElement();\n\n                tabster.focusedElement.requestAsyncFocus(\n                    AsyncFocusSources.EscapeGroupper,\n                    () => {\n                        if (\n                            focusedElement !==\n                                tabster.focusedElement.getFocusedElement() &&\n                            // A part of Modalizer that has called this handler to escape the active groupper\n                            // might have been removed from DOM, if the focus is on body, we still want to handle Esc.\n                            ((fromModalizer && !focusedElement) ||\n                                !fromModalizer)\n                        ) {\n                            // Something else in the application has moved focus, we will not handle Esc.\n                            return;\n                        }\n\n                        this._escapeGroupper(element, event, fromModalizer);\n                    },\n                    0\n                );\n            }\n        }\n    }\n}\n\nfunction _setInformativeStyle(\n    weakElement: Types.WeakHTMLElement,\n    remove: boolean\n): void {\n    if (__DEV__) {\n        const element = weakElement.get();\n\n        if (element) {\n            if (remove) {\n                element.style.removeProperty(\"--tabster-groupper\");\n            } else {\n                element.style.setProperty(\"--tabster-groupper\", \"unlimited\");\n            }\n        }\n    }\n}\n", "/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { createKeyborg, disposeKeyborg, Keyborg } from \"keyborg\";\n\nimport * as Types from \"../Types\";\nimport { Subscribable } from \"./Subscribable\";\n\nexport class KeyboardNavigationState\n    extends Subscribable<boolean>\n    implements Types.KeyboardNavigationState\n{\n    private _keyborg?: Keyborg;\n\n    constructor(getWindow: Types.GetWindow) {\n        super();\n        this._keyborg = createKeyborg(getWindow());\n        this._keyborg.subscribe(this._onChange);\n    }\n\n    dispose(): void {\n        super.dispose();\n\n        if (this._keyborg) {\n            this._keyborg.unsubscribe(this._onChange);\n\n            disposeKeyborg(this._keyborg);\n\n            delete this._keyborg;\n        }\n    }\n\n    private _onChange = (isNavigatingWithKeyboard: boolean) => {\n        this.setVal(isNavigatingWithKeyboard, undefined);\n    };\n\n    setNavigatingWithKeyboard(isNavigatingWithKeyboard: boolean): void {\n        this._keyborg?.setVal(isNavigatingWithKeyboard);\n    }\n\n    isNavigatingWithKeyboard(): boolean {\n        return !!this._keyborg?.isNavigatingWithKeyboard();\n    }\n}\n", "/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { nativeFocus } from \"keyborg\";\nimport { getTabsterOnElement } from \"./Instance\";\nimport { RootAPI } from \"./Root\";\nimport { FocusedElementState } from \"./State/FocusedElement\";\nimport { Keys } from \"./Keys\";\nimport * as Types from \"./Types\";\nimport { ModalizerActiveEvent, ModalizerInactiveEvent } from \"./Events\";\nimport { ModalizerEventDetail } from \"./EventsTypes\";\nimport {\n    augmentAttribute,\n    DummyInput,\n    DummyInputManager,\n    DummyInputManagerPriorities,\n    getDummyInputContainer,\n    TabsterPart,\n    WeakHTMLElement,\n} from \"./Utils\";\nimport { dom } from \"./DOMAPI\";\n\nlet _wasFocusedCounter = 0;\n\nconst _ariaHidden = \"aria-hidden\";\n\nfunction _setInformativeStyle(\n    weakElement: WeakHTMLElement,\n    remove: boolean,\n    internalId?: string,\n    userId?: string,\n    isActive?: boolean,\n    wasFocused?: number\n): void {\n    if (__DEV__) {\n        const element = weakElement.get();\n\n        if (element) {\n            if (remove) {\n                element.style.removeProperty(\"--tabster-modalizer\");\n            } else {\n                element.style.setProperty(\n                    \"--tabster-modalizer\",\n                    internalId +\n                        \",\" +\n                        userId +\n                        \",\" +\n                        (isActive ? \"active\" : \"inactive\") +\n                        \",\" +\n                        \",\" +\n                        (wasFocused ? `focused(${wasFocused})` : \"not-focused\")\n                );\n            }\n        }\n    }\n}\n\n/**\n * Manages the dummy inputs for the Modalizer.\n */\nclass ModalizerDummyManager extends DummyInputManager {\n    constructor(\n        element: WeakHTMLElement,\n        tabster: Types.TabsterCore,\n        sys: Types.SysProps | undefined\n    ) {\n        super(tabster, element, DummyInputManagerPriorities.Modalizer, sys);\n\n        this._setHandlers((dummyInput: DummyInput, isBackward: boolean) => {\n            const el = element.get();\n            const container = el && RootAPI.getRoot(tabster, el)?.getElement();\n            const input = dummyInput.input;\n            let toFocus: HTMLElement | null | undefined;\n\n            if (container && input) {\n                const dummyContainer = getDummyInputContainer(input);\n\n                const ctx = RootAPI.getTabsterContext(\n                    tabster,\n                    dummyContainer || input\n                );\n\n                if (ctx) {\n                    toFocus = FocusedElementState.findNextTabbable(\n                        tabster,\n                        ctx,\n                        container,\n                        input,\n                        undefined,\n                        isBackward,\n                        true\n                    )?.element;\n                }\n\n                if (toFocus) {\n                    nativeFocus(toFocus);\n                }\n            }\n        });\n    }\n}\n\nexport class Modalizer\n    extends TabsterPart<Types.ModalizerProps>\n    implements Types.Modalizer\n{\n    userId: string;\n\n    private _isActive: boolean | undefined;\n    private _wasFocused = 0;\n    private _onDispose: (modalizer: Modalizer) => void;\n    private _activeElements: WeakHTMLElement<HTMLElement>[];\n\n    dummyManager: ModalizerDummyManager | undefined;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        onDispose: (modalizer: Modalizer) => void,\n        props: Types.ModalizerProps,\n        sys: Types.SysProps | undefined,\n        activeElements: WeakHTMLElement<HTMLElement>[]\n    ) {\n        super(tabster, element, props);\n\n        this.userId = props.id;\n        this._onDispose = onDispose;\n        this._activeElements = activeElements;\n\n        if (!tabster.controlTab) {\n            this.dummyManager = new ModalizerDummyManager(\n                this._element,\n                tabster,\n                sys\n            );\n        }\n\n        if (__DEV__) {\n            _setInformativeStyle(\n                this._element,\n                false,\n                this.id,\n                this.userId,\n                this._isActive,\n                this._wasFocused\n            );\n        }\n    }\n\n    makeActive(isActive: boolean): void {\n        if (this._isActive !== isActive) {\n            this._isActive = isActive;\n\n            const element = this.getElement();\n\n            if (element) {\n                const activeElements = this._activeElements;\n                const index = activeElements\n                    .map((e) => e.get())\n                    .indexOf(element);\n\n                if (isActive) {\n                    if (index < 0) {\n                        activeElements.push(\n                            new WeakHTMLElement(\n                                this._tabster.getWindow,\n                                element\n                            )\n                        );\n                    }\n                } else {\n                    if (index >= 0) {\n                        activeElements.splice(index, 1);\n                    }\n                }\n            }\n\n            if (__DEV__) {\n                _setInformativeStyle(\n                    this._element,\n                    false,\n                    this.id,\n                    this.userId,\n                    this._isActive,\n                    this._wasFocused\n                );\n            }\n\n            this._dispatchEvent(isActive);\n        }\n    }\n\n    focused(noIncrement?: boolean): number {\n        if (!noIncrement) {\n            this._wasFocused = ++_wasFocusedCounter;\n        }\n\n        return this._wasFocused;\n    }\n\n    setProps(props: Types.ModalizerProps): void {\n        if (props.id) {\n            this.userId = props.id;\n        }\n\n        this._props = { ...props };\n    }\n\n    dispose(): void {\n        this.makeActive(false);\n        this._onDispose(this);\n        this.dummyManager?.dispose();\n        delete this.dummyManager;\n        this._activeElements = [];\n        this._remove();\n    }\n\n    isActive(): boolean {\n        return !!this._isActive;\n    }\n\n    contains(element: HTMLElement) {\n        return dom.nodeContains(this.getElement(), element);\n    }\n\n    findNextTabbable(\n        currentElement?: HTMLElement,\n        referenceElement?: HTMLElement,\n        isBackward?: boolean,\n        ignoreAccessibility?: boolean\n    ): Types.NextTabbable | null {\n        const modalizerElement = this.getElement();\n\n        if (!modalizerElement) {\n            return null;\n        }\n\n        const tabster = this._tabster;\n        let next: HTMLElement | null | undefined = null;\n        let outOfDOMOrder = false;\n        let uncontrolled: HTMLElement | null | undefined;\n\n        const container =\n            currentElement &&\n            RootAPI.getRoot(tabster, currentElement)?.getElement();\n\n        if (container) {\n            const findProps: Types.FindNextProps = {\n                container,\n                currentElement,\n                referenceElement,\n                ignoreAccessibility,\n                useActiveModalizer: true,\n            };\n\n            const findPropsOut: Types.FindFocusableOutputProps = {};\n\n            next = tabster.focusable[isBackward ? \"findPrev\" : \"findNext\"](\n                findProps,\n                findPropsOut\n            );\n\n            if (!next && this._props.isTrapped && tabster.modalizer?.activeId) {\n                next = tabster.focusable[isBackward ? \"findLast\" : \"findFirst\"](\n                    {\n                        container,\n                        ignoreAccessibility,\n                        useActiveModalizer: true,\n                    },\n                    findPropsOut\n                );\n\n                if (next === null) {\n                    next = currentElement;\n                }\n\n                outOfDOMOrder = true;\n            } else {\n                outOfDOMOrder = !!findPropsOut.outOfDOMOrder;\n            }\n\n            uncontrolled = findPropsOut.uncontrolled;\n        }\n\n        return {\n            element: next,\n            uncontrolled,\n            outOfDOMOrder,\n        };\n    }\n\n    private _dispatchEvent(isActive: boolean, allElements?: boolean): boolean {\n        const element = this.getElement();\n        let defaultPrevented = false;\n\n        if (element) {\n            const elements = allElements\n                ? this._activeElements.map((e) => e.get())\n                : [element];\n\n            for (const el of elements) {\n                if (el) {\n                    const eventDetail: ModalizerEventDetail = {\n                        id: this.userId,\n                        element,\n                    };\n\n                    const event = isActive\n                        ? new ModalizerActiveEvent(eventDetail)\n                        : new ModalizerInactiveEvent(eventDetail);\n\n                    el.dispatchEvent(event);\n\n                    if (event.defaultPrevented) {\n                        defaultPrevented = true;\n                    }\n                }\n            }\n        }\n\n        return defaultPrevented;\n    }\n\n    private _remove(): void {\n        if (__DEV__) {\n            _setInformativeStyle(this._element, true);\n        }\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction validateModalizerProps(props: Types.ModalizerProps): void {\n    // TODO: Implement validation.\n}\n\nexport class ModalizerAPI implements Types.ModalizerAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    private _restoreModalizerFocusTimer: number | undefined;\n    private _modalizers: Record<string, Types.Modalizer>;\n    private _parts: Record<string, Record<string, Types.Modalizer>>;\n    private _augMap: WeakMap<HTMLElement, true>;\n    private _aug: WeakHTMLElement<HTMLElement>[];\n    private _hiddenUpdateTimer: number | undefined;\n    private _alwaysAccessibleSelector: string | undefined;\n    private _accessibleCheck: Types.ModalizerElementAccessibleCheck | undefined;\n\n    activeId: string | undefined;\n    currentIsOthersAccessible: boolean | undefined;\n    activeElements: WeakHTMLElement<HTMLElement>[];\n\n    constructor(\n        tabster: Types.TabsterCore,\n        // @deprecated use accessibleCheck.\n        alwaysAccessibleSelector?: string,\n        accessibleCheck?: Types.ModalizerElementAccessibleCheck\n    ) {\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n        this._modalizers = {};\n        this._parts = {};\n        this._augMap = new WeakMap();\n        this._aug = [];\n        this._alwaysAccessibleSelector = alwaysAccessibleSelector;\n        this._accessibleCheck = accessibleCheck;\n        this.activeElements = [];\n\n        if (!tabster.controlTab) {\n            tabster.root.addDummyInputs();\n        }\n\n        const win = this._win();\n        win.addEventListener(\"keydown\", this._onKeyDown, true);\n\n        tabster.queueInit(() => {\n            this._tabster.focusedElement.subscribe(this._onFocus);\n        });\n    }\n\n    dispose(): void {\n        const win = this._win();\n\n        win.removeEventListener(\"keydown\", this._onKeyDown, true);\n\n        // Dispose all modalizers managed by the API\n        Object.keys(this._modalizers).forEach((modalizerId) => {\n            if (this._modalizers[modalizerId]) {\n                this._modalizers[modalizerId].dispose();\n                delete this._modalizers[modalizerId];\n            }\n        });\n\n        win.clearTimeout(this._restoreModalizerFocusTimer);\n        win.clearTimeout(this._hiddenUpdateTimer);\n\n        this._parts = {};\n        delete this.activeId;\n        this.activeElements = [];\n\n        this._augMap = new WeakMap();\n        this._aug = [];\n\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n    }\n\n    createModalizer(\n        element: HTMLElement,\n        props: Types.ModalizerProps,\n        sys: Types.SysProps | undefined\n    ): Types.Modalizer {\n        if (__DEV__) {\n            validateModalizerProps(props);\n        }\n\n        const modalizer = new Modalizer(\n            this._tabster,\n            element,\n            this._onModalizerDispose,\n            props,\n            sys,\n            this.activeElements\n        );\n\n        const id = modalizer.id;\n        const userId = props.id;\n\n        this._modalizers[id] = modalizer;\n\n        let part = this._parts[userId];\n        if (!part) {\n            part = this._parts[userId] = {};\n        }\n        part[id] = modalizer;\n\n        // Adding a modalizer which is already focused, activate it\n        if (\n            dom.nodeContains(\n                element,\n                this._tabster.focusedElement.getFocusedElement() ?? null\n            )\n        ) {\n            if (userId !== this.activeId) {\n                this.setActive(modalizer);\n            } else {\n                modalizer.makeActive(true);\n            }\n        }\n\n        return modalizer;\n    }\n\n    private _onModalizerDispose = (modalizer: Modalizer) => {\n        const id = modalizer.id;\n        const userId = modalizer.userId;\n        const part = this._parts[userId];\n\n        delete this._modalizers[id];\n\n        if (part) {\n            delete part[id];\n\n            if (Object.keys(part).length === 0) {\n                delete this._parts[userId];\n\n                if (this.activeId === userId) {\n                    this.setActive(undefined);\n                }\n            }\n        }\n    };\n\n    private _onKeyDown = (event: KeyboardEvent): void => {\n        if (event.key !== Keys.Escape) {\n            return;\n        }\n\n        const tabster = this._tabster;\n        const element = tabster.focusedElement.getFocusedElement();\n\n        if (element) {\n            const ctx = RootAPI.getTabsterContext(tabster, element);\n            const modalizer = ctx?.modalizer;\n\n            if (\n                ctx &&\n                !ctx.groupper &&\n                modalizer?.isActive() &&\n                !ctx.ignoreKeydown(event)\n            ) {\n                const activeId = modalizer.userId;\n\n                if (activeId) {\n                    const part = this._parts[activeId];\n\n                    if (part) {\n                        const focusedSince = Object.keys(part)\n                            .map((id) => {\n                                const m = part[id];\n                                const el = m.getElement();\n                                let groupper: Types.Groupper | undefined;\n\n                                if (el) {\n                                    groupper = getTabsterOnElement(\n                                        this._tabster,\n                                        el\n                                    )?.groupper;\n                                }\n\n                                return m && el && groupper\n                                    ? {\n                                          el,\n                                          focusedSince: m.focused(true),\n                                      }\n                                    : { focusedSince: 0 };\n                            })\n                            .filter((f) => f.focusedSince > 0)\n                            .sort((a, b) =>\n                                a.focusedSince > b.focusedSince\n                                    ? -1\n                                    : a.focusedSince < b.focusedSince\n                                    ? 1\n                                    : 0\n                            );\n\n                        if (focusedSince.length) {\n                            const groupperElement = focusedSince[0].el;\n\n                            if (groupperElement) {\n                                tabster.groupper?.handleKeyPress(\n                                    groupperElement,\n                                    event,\n                                    true\n                                );\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    isAugmented(element: HTMLElement): boolean {\n        return this._augMap.has(element);\n    }\n\n    hiddenUpdate(): void {\n        if (this._hiddenUpdateTimer) {\n            return;\n        }\n\n        this._hiddenUpdateTimer = this._win().setTimeout(() => {\n            delete this._hiddenUpdateTimer;\n            this._hiddenUpdate();\n        }, 250);\n    }\n\n    setActive(modalizer: Types.Modalizer | undefined): void {\n        const userId = modalizer?.userId;\n        const activeId = this.activeId;\n\n        if (activeId === userId) {\n            return;\n        }\n\n        this.activeId = userId;\n\n        if (activeId) {\n            const part = this._parts[activeId];\n\n            if (part) {\n                for (const id of Object.keys(part)) {\n                    part[id].makeActive(false);\n                }\n            }\n        }\n\n        if (userId) {\n            const part = this._parts[userId];\n\n            if (part) {\n                for (const id of Object.keys(part)) {\n                    part[id].makeActive(true);\n                }\n            }\n        }\n\n        this.currentIsOthersAccessible =\n            modalizer?.getProps().isOthersAccessible;\n\n        this.hiddenUpdate();\n    }\n\n    focus(\n        elementFromModalizer: HTMLElement,\n        noFocusFirst?: boolean,\n        noFocusDefault?: boolean\n    ): boolean {\n        const ctx = RootAPI.getTabsterContext(\n            this._tabster,\n            elementFromModalizer\n        );\n\n        const modalizer = ctx?.modalizer;\n\n        if (modalizer) {\n            this.setActive(modalizer);\n\n            const props = modalizer.getProps();\n            const modalizerRoot = modalizer.getElement();\n\n            if (modalizerRoot) {\n                if (noFocusFirst === undefined) {\n                    noFocusFirst = props.isNoFocusFirst;\n                }\n\n                if (\n                    !noFocusFirst &&\n                    this._tabster.keyboardNavigation.isNavigatingWithKeyboard() &&\n                    this._tabster.focusedElement.focusFirst({\n                        container: modalizerRoot,\n                    })\n                ) {\n                    return true;\n                }\n\n                if (noFocusDefault === undefined) {\n                    noFocusDefault = props.isNoFocusDefault;\n                }\n\n                if (\n                    !noFocusDefault &&\n                    this._tabster.focusedElement.focusDefault(modalizerRoot)\n                ) {\n                    return true;\n                }\n\n                this._tabster.focusedElement.resetFocus(modalizerRoot);\n            }\n        } else if (__DEV__) {\n            console.error(\"Element is not in Modalizer.\", elementFromModalizer);\n        }\n\n        return false;\n    }\n\n    acceptElement(\n        element: HTMLElement,\n        state: Types.FocusableAcceptElementState\n    ): number | undefined {\n        const modalizerUserId = state.modalizerUserId;\n        const currentModalizer = state.currentCtx?.modalizer;\n\n        if (modalizerUserId) {\n            for (const e of this.activeElements) {\n                const el = e.get();\n\n                if (el && (dom.nodeContains(element, el) || el === element)) {\n                    // We have a part of currently active modalizer somewhere deeper in the DOM,\n                    // skipping all other checks.\n                    return NodeFilter.FILTER_SKIP;\n                }\n            }\n        }\n\n        const ret =\n            modalizerUserId === currentModalizer?.userId ||\n            (!modalizerUserId &&\n                currentModalizer?.getProps().isAlwaysAccessible)\n                ? undefined\n                : NodeFilter.FILTER_SKIP;\n\n        if (ret !== undefined) {\n            state.skippedFocusable = true;\n        }\n\n        return ret;\n    }\n\n    private _hiddenUpdate(): void {\n        const tabster = this._tabster;\n        const body = tabster.getWindow().document.body;\n        const activeId = this.activeId;\n\n        const parts = this._parts;\n        const visibleElements: HTMLElement[] = [];\n        const hiddenElements: HTMLElement[] = [];\n        const alwaysAccessibleSelector = this._alwaysAccessibleSelector;\n        const alwaysAccessibleElements: HTMLElement[] = alwaysAccessibleSelector\n            ? Array.from(\n                  dom.querySelectorAll(\n                      body,\n                      alwaysAccessibleSelector\n                  ) as HTMLElement[]\n              )\n            : [];\n        const activeModalizerElements: HTMLElement[] = [];\n\n        for (const userId of Object.keys(parts)) {\n            const modalizerParts = parts[userId];\n\n            for (const id of Object.keys(modalizerParts)) {\n                const modalizer = modalizerParts[id];\n                const el = modalizer.getElement();\n                const props = modalizer.getProps();\n                const isAlwaysAccessible = props.isAlwaysAccessible;\n\n                if (el) {\n                    if (userId === activeId) {\n                        activeModalizerElements.push(el);\n\n                        if (!this.currentIsOthersAccessible) {\n                            visibleElements.push(el);\n                        }\n                    } else if (isAlwaysAccessible) {\n                        alwaysAccessibleElements.push(el);\n                    } else {\n                        hiddenElements.push(el);\n                    }\n                }\n            }\n        }\n\n        const augmentedMap = this._augMap;\n        const allVisibleElements: HTMLElement[] | undefined =\n            visibleElements.length > 0\n                ? [...visibleElements, ...alwaysAccessibleElements]\n                : undefined;\n\n        const newAugmented: WeakHTMLElement<HTMLElement>[] = [];\n        const newAugmentedMap: WeakMap<HTMLElement, true> = new WeakMap();\n\n        const toggle = (element: HTMLElement, hide: boolean) => {\n            const tagName = element.tagName;\n\n            if (tagName === \"SCRIPT\" || tagName === \"STYLE\") {\n                return;\n            }\n\n            let isAugmented = false;\n\n            if (augmentedMap.has(element)) {\n                if (hide) {\n                    isAugmented = true;\n                } else {\n                    augmentedMap.delete(element);\n                    augmentAttribute(tabster, element, _ariaHidden);\n                }\n            } else if (\n                hide &&\n                !this._accessibleCheck?.(element, activeModalizerElements) &&\n                augmentAttribute(tabster, element, _ariaHidden, \"true\")\n            ) {\n                augmentedMap.set(element, true);\n                isAugmented = true;\n            }\n\n            if (isAugmented) {\n                newAugmented.push(\n                    new WeakHTMLElement(tabster.getWindow, element)\n                );\n                newAugmentedMap.set(element, true);\n            }\n        };\n\n        const walk = (element: HTMLElement) => {\n            for (\n                let el = dom.getFirstElementChild(\n                    element\n                ) as Types.HTMLElementWithTabsterFlags | null;\n                el;\n                el = dom.getNextElementSibling(\n                    el\n                ) as Types.HTMLElementWithTabsterFlags | null\n            ) {\n                let skip = false;\n                let containsModalizer = false;\n                let containedByModalizer = false;\n\n                if (allVisibleElements) {\n                    const elParent = tabster.getParent(el);\n\n                    for (const c of allVisibleElements) {\n                        if (el === c) {\n                            skip = true;\n                            break;\n                        }\n\n                        if (dom.nodeContains(el, c)) {\n                            containsModalizer = true;\n                            break;\n                        } else if (dom.nodeContains(c, elParent)) {\n                            // tabster.getParent() could be provided by the application to\n                            // handle, for example, virtual parents. Making sure, we are\n                            // not setting aria-hidden on elements which are virtually\n                            // inside modalizer.\n                            containedByModalizer = true;\n                        }\n                    }\n\n                    if (\n                        containsModalizer ||\n                        el.__tabsterElementFlags?.noDirectAriaHidden\n                    ) {\n                        walk(el as HTMLElement);\n                    } else if (!skip && !containedByModalizer) {\n                        toggle(el as HTMLElement, true);\n                    }\n                } else {\n                    toggle(el as HTMLElement, false);\n                }\n            }\n        };\n\n        if (!allVisibleElements) {\n            alwaysAccessibleElements.forEach((e) => toggle(e, false));\n        }\n\n        hiddenElements.forEach((e) => toggle(e, true));\n\n        if (body) {\n            walk(body);\n        }\n\n        this._aug\n            ?.map((e) => e.get())\n            .forEach((e) => {\n                if (e && !newAugmentedMap.get(e)) {\n                    toggle(e, false);\n                }\n            });\n\n        this._aug = newAugmented;\n        this._augMap = newAugmentedMap;\n    }\n\n    /**\n     * Subscribes to the focus state and handles modalizer related focus events\n     * @param focusedElement - Element that is focused\n     * @param detail - Additional data about the focus event\n     */\n    private _onFocus = (\n        focusedElement: HTMLElement | undefined,\n        detail: Types.FocusedElementDetail\n    ): void => {\n        const ctx =\n            focusedElement &&\n            RootAPI.getTabsterContext(this._tabster, focusedElement);\n\n        // Modalizer behaviour is opt in, only apply to elements that have a tabster context\n        if (!ctx || !focusedElement) {\n            return;\n        }\n\n        const augmentedMap = this._augMap;\n\n        for (\n            let e: HTMLElement | null = focusedElement;\n            e;\n            e = dom.getParentElement(e)\n        ) {\n            // If the newly focused element is inside some of the hidden containers,\n            // remove aria-hidden from those synchronously for the screen readers\n            // to be able to read the element. The rest of aria-hiddens, will be removed\n            // acynchronously for the sake of performance.\n\n            if (augmentedMap.has(e)) {\n                augmentedMap.delete(e);\n                augmentAttribute(this._tabster, e, _ariaHidden);\n            }\n        }\n\n        const modalizer = ctx.modalizer;\n\n        // An inactive groupper with the modalizer on the same node will not give the modalizer\n        // in the context, yet we still want to track that the modalizer's container was focused.\n        (\n            modalizer ||\n            getTabsterOnElement(this._tabster, focusedElement)?.modalizer\n        )?.focused();\n\n        if (modalizer?.userId === this.activeId) {\n            this.currentIsOthersAccessible =\n                modalizer?.getProps().isOthersAccessible;\n\n            return;\n        }\n\n        // Developers calling `element.focus()` should change/deactivate active modalizer\n        if (\n            detail.isFocusedProgrammatically ||\n            this.currentIsOthersAccessible ||\n            modalizer?.getProps().isAlwaysAccessible\n        ) {\n            this.setActive(modalizer);\n        } else {\n            // Focused outside of the active modalizer, try pull focus back to current modalizer\n            const win = this._win();\n            win.clearTimeout(this._restoreModalizerFocusTimer);\n            // TODO some rendering frameworks (i.e. React) might async rerender the DOM so we need to wait for a duration\n            // Figure out a better way of doing this rather than a 100ms timeout\n            this._restoreModalizerFocusTimer = win.setTimeout(\n                () => this._restoreModalizerFocus(focusedElement),\n                100\n            );\n        }\n    };\n\n    /**\n     * Called when an element is focused outside of an active modalizer.\n     * Attempts to pull focus back into the active modalizer\n     * @param outsideElement - An element being focused outside of the modalizer\n     */\n    private _restoreModalizerFocus(\n        outsideElement: HTMLElement | undefined\n    ): void {\n        const ownerDocument = outsideElement?.ownerDocument;\n\n        if (!outsideElement || !ownerDocument) {\n            return;\n        }\n\n        const ctx = RootAPI.getTabsterContext(this._tabster, outsideElement);\n        const modalizer = ctx?.modalizer;\n        const activeId = this.activeId;\n\n        if (\n            (!modalizer && !activeId) ||\n            (modalizer && activeId === modalizer.userId)\n        ) {\n            return;\n        }\n\n        const container = ctx?.root.getElement();\n\n        if (container) {\n            let toFocus = this._tabster.focusable.findFirst({\n                container,\n                useActiveModalizer: true,\n            });\n\n            if (toFocus) {\n                if (\n                    outsideElement.compareDocumentPosition(toFocus) &\n                    document.DOCUMENT_POSITION_PRECEDING\n                ) {\n                    toFocus = this._tabster.focusable.findLast({\n                        container,\n                        useActiveModalizer: true,\n                    });\n\n                    if (!toFocus) {\n                        // This only might mean that findFirst/findLast are buggy and inconsistent.\n                        throw new Error(\"Something went wrong.\");\n                    }\n                }\n\n                this._tabster.focusedElement.focus(toFocus);\n\n                return;\n            }\n        }\n\n        // Current Modalizer doesn't seem to have focusable elements.\n        // Blurring the currently focused element which is outside of the current Modalizer.\n        outsideElement.blur();\n    }\n}\n", "/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { nativeFocus } from \"keyborg\";\nimport { FocusedElementState } from \"./State/FocusedElement\";\nimport { getTabsterOnElement } from \"./Instance\";\nimport { Keys } from \"./Keys\";\nimport { RootAPI } from \"./Root\";\nimport * as Types from \"./Types\";\nimport { Visibilities, MoverDirections, MoverKeys } from \"./Consts\";\nimport {\n    MoverMemorizedElementEvent,\n    MoverMemorizedElementEventName,\n    MoverMoveFocusEvent,\n    MoverMoveFocusEventName,\n    MoverStateEvent,\n    TabsterMoveFocusEvent,\n} from \"./Events\";\nimport {\n    createElementTreeWalker,\n    DummyInput,\n    DummyInputManager,\n    DummyInputManagerPriorities,\n    getElementUId,\n    getPromise,\n    isElementVerticallyVisibleInContainer,\n    matchesSelector,\n    scrollIntoView,\n    TabsterPart,\n    WeakHTMLElement,\n    getDummyInputContainer,\n} from \"./Utils\";\nimport { dom } from \"./DOMAPI\";\n\nconst _inputSelector = [\"input\", \"textarea\", \"*[contenteditable]\"].join(\", \");\n\nclass MoverDummyManager extends DummyInputManager {\n    private _tabster: Types.TabsterCore;\n    private _getMemorized: () => WeakHTMLElement | undefined;\n\n    constructor(\n        element: WeakHTMLElement,\n        tabster: Types.TabsterCore,\n        getMemorized: () => WeakHTMLElement | undefined,\n        sys: Types.SysProps | undefined\n    ) {\n        super(tabster, element, DummyInputManagerPriorities.Mover, sys);\n\n        this._tabster = tabster;\n        this._getMemorized = getMemorized;\n\n        this._setHandlers(this._onFocusDummyInput);\n    }\n\n    private _onFocusDummyInput = (dummyInput: DummyInput) => {\n        const container = this._element.get();\n        const input = dummyInput.input;\n\n        if (container && input) {\n            const ctx = RootAPI.getTabsterContext(this._tabster, container);\n\n            let toFocus: HTMLElement | null | undefined;\n\n            if (ctx) {\n                toFocus = FocusedElementState.findNextTabbable(\n                    this._tabster,\n                    ctx,\n                    undefined,\n                    input,\n                    undefined,\n                    !dummyInput.isFirst,\n                    true\n                )?.element;\n            }\n\n            const memorized = this._getMemorized()?.get();\n\n            if (memorized && this._tabster.focusable.isFocusable(memorized)) {\n                toFocus = memorized;\n            }\n\n            if (toFocus) {\n                nativeFocus(toFocus);\n            }\n        }\n    };\n}\n\n// TypeScript enums produce depressing JavaScript code, so, we're just using\n// a few old style constants here.\nconst _moverUpdateAdd = 1;\nconst _moverUpdateAttr = 2;\nconst _moverUpdateRemove = 3;\n\ninterface MoverUpdateQueueItem {\n    element: HTMLElement;\n    type:\n        | typeof _moverUpdateAdd\n        | typeof _moverUpdateAttr\n        | typeof _moverUpdateRemove;\n}\n\nexport class Mover\n    extends TabsterPart<Types.MoverProps>\n    implements Types.Mover\n{\n    private _unobserve: (() => void) | undefined;\n    private _intersectionObserver: IntersectionObserver | undefined;\n    private _setCurrentTimer: number | undefined;\n    private _current: WeakHTMLElement | undefined;\n    private _prevCurrent: WeakHTMLElement | undefined;\n    private _visible: Record<string, Types.Visibility> = {};\n    private _fullyVisible: string | undefined;\n    private _win: Types.GetWindow;\n    private _onDispose: (mover: Mover) => void;\n    private _allElements: WeakMap<HTMLElement, Mover> | undefined;\n    private _updateQueue: MoverUpdateQueueItem[] | undefined;\n    private _updateTimer: number | undefined;\n\n    visibilityTolerance: number;\n    dummyManager: MoverDummyManager | undefined;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        onDispose: (mover: Mover) => void,\n        props: Types.MoverProps,\n        sys: Types.SysProps | undefined\n    ) {\n        super(tabster, element, props);\n\n        this._win = tabster.getWindow;\n        this.visibilityTolerance = props.visibilityTolerance ?? 0.8;\n\n        if (this._props.trackState || this._props.visibilityAware) {\n            this._intersectionObserver = new IntersectionObserver(\n                this._onIntersection,\n                { threshold: [0, 0.25, 0.5, 0.75, 1] }\n            );\n            this._observeState();\n        }\n\n        this._onDispose = onDispose;\n        const getMemorized = () =>\n            props.memorizeCurrent ? this._current : undefined;\n\n        if (!tabster.controlTab) {\n            this.dummyManager = new MoverDummyManager(\n                this._element,\n                tabster,\n                getMemorized,\n                sys\n            );\n        }\n    }\n\n    dispose(): void {\n        this._onDispose(this);\n\n        if (this._intersectionObserver) {\n            this._intersectionObserver.disconnect();\n            delete this._intersectionObserver;\n        }\n\n        delete this._current;\n        delete this._fullyVisible;\n        delete this._allElements;\n        delete this._updateQueue;\n\n        if (this._unobserve) {\n            this._unobserve();\n            delete this._unobserve;\n        }\n\n        const win = this._win();\n\n        if (this._setCurrentTimer) {\n            win.clearTimeout(this._setCurrentTimer);\n            delete this._setCurrentTimer;\n        }\n\n        if (this._updateTimer) {\n            win.clearTimeout(this._updateTimer);\n            delete this._updateTimer;\n        }\n\n        this.dummyManager?.dispose();\n        delete this.dummyManager;\n    }\n\n    setCurrent(element: HTMLElement | undefined): void {\n        if (element) {\n            this._current = new WeakHTMLElement(this._win, element);\n        } else {\n            this._current = undefined;\n        }\n\n        if (\n            (this._props.trackState || this._props.visibilityAware) &&\n            !this._setCurrentTimer\n        ) {\n            this._setCurrentTimer = this._win().setTimeout(() => {\n                delete this._setCurrentTimer;\n\n                const changed: (WeakHTMLElement | undefined)[] = [];\n\n                if (this._current !== this._prevCurrent) {\n                    changed.push(this._current);\n                    changed.push(this._prevCurrent);\n                    this._prevCurrent = this._current;\n                }\n\n                for (const weak of changed) {\n                    const el = weak?.get();\n\n                    if (el && this._allElements?.get(el) === this) {\n                        const props = this._props;\n\n                        if (\n                            el &&\n                            (props.visibilityAware !== undefined ||\n                                props.trackState)\n                        ) {\n                            const state = this.getState(el);\n\n                            if (state) {\n                                el.dispatchEvent(new MoverStateEvent(state));\n                            }\n                        }\n                    }\n                }\n            });\n        }\n    }\n\n    getCurrent(): HTMLElement | null {\n        return this._current?.get() || null;\n    }\n\n    findNextTabbable(\n        currentElement?: HTMLElement,\n        referenceElement?: HTMLElement,\n        isBackward?: boolean,\n        ignoreAccessibility?: boolean\n    ): Types.NextTabbable | null {\n        const container = this.getElement();\n        const currentIsDummy =\n            container && getDummyInputContainer(currentElement) === container;\n\n        if (!container) {\n            return null;\n        }\n\n        let next: HTMLElement | null | undefined = null;\n        let outOfDOMOrder = false;\n        let uncontrolled: HTMLElement | null | undefined;\n\n        if (\n            this._props.tabbable ||\n            currentIsDummy ||\n            (currentElement && !dom.nodeContains(container, currentElement))\n        ) {\n            const findProps: Types.FindNextProps = {\n                currentElement,\n                referenceElement,\n                container,\n                ignoreAccessibility,\n                useActiveModalizer: true,\n            };\n\n            const findPropsOut: Types.FindFocusableOutputProps = {};\n\n            next = this._tabster.focusable[\n                isBackward ? \"findPrev\" : \"findNext\"\n            ](findProps, findPropsOut);\n\n            outOfDOMOrder = !!findPropsOut.outOfDOMOrder;\n            uncontrolled = findPropsOut.uncontrolled;\n        }\n\n        return {\n            element: next,\n            uncontrolled,\n            outOfDOMOrder,\n        };\n    }\n\n    acceptElement(\n        element: HTMLElement,\n        state: Types.FocusableAcceptElementState\n    ): number | undefined {\n        if (!FocusedElementState.isTabbing) {\n            return state.currentCtx?.excludedFromMover\n                ? NodeFilter.FILTER_REJECT\n                : undefined;\n        }\n\n        const {\n            memorizeCurrent,\n            visibilityAware,\n            hasDefault = true,\n        } = this._props;\n        const moverElement = this.getElement();\n\n        if (\n            moverElement &&\n            (memorizeCurrent || visibilityAware || hasDefault) &&\n            (!dom.nodeContains(moverElement, state.from) ||\n                getDummyInputContainer(state.from) === moverElement)\n        ) {\n            let found: HTMLElement | undefined | null;\n\n            if (memorizeCurrent) {\n                const current = this._current?.get();\n\n                if (current && state.acceptCondition(current)) {\n                    found = current;\n                }\n            }\n\n            if (!found && hasDefault) {\n                found = this._tabster.focusable.findDefault({\n                    container: moverElement,\n                    useActiveModalizer: true,\n                });\n            }\n\n            if (!found && visibilityAware) {\n                found = this._tabster.focusable.findElement({\n                    container: moverElement,\n                    useActiveModalizer: true,\n                    isBackward: state.isBackward,\n                    acceptCondition: (el) => {\n                        const id = getElementUId(this._win, el);\n                        const visibility = this._visible[id];\n\n                        return (\n                            moverElement !== el &&\n                            !!this._allElements?.get(el) &&\n                            state.acceptCondition(el) &&\n                            (visibility === Visibilities.Visible ||\n                                (visibility === Visibilities.PartiallyVisible &&\n                                    (visibilityAware ===\n                                        Visibilities.PartiallyVisible ||\n                                        !this._fullyVisible)))\n                        );\n                    },\n                });\n            }\n\n            if (found) {\n                state.found = true;\n                state.foundElement = found;\n                state.rejectElementsFrom = moverElement;\n                state.skippedFocusable = true;\n                return NodeFilter.FILTER_ACCEPT;\n            }\n        }\n\n        return undefined;\n    }\n\n    private _onIntersection = (entries: IntersectionObserverEntry[]): void => {\n        for (const entry of entries) {\n            const el = entry.target as HTMLElement;\n            const id = getElementUId(this._win, el);\n\n            let newVisibility: Types.Visibility;\n            let fullyVisible = this._fullyVisible;\n\n            if (entry.intersectionRatio >= 0.25) {\n                newVisibility =\n                    entry.intersectionRatio >= 0.75\n                        ? Visibilities.Visible\n                        : Visibilities.PartiallyVisible;\n\n                if (newVisibility === Visibilities.Visible) {\n                    fullyVisible = id;\n                }\n            } else {\n                newVisibility = Visibilities.Invisible;\n            }\n\n            if (this._visible[id] !== newVisibility) {\n                if (newVisibility === undefined) {\n                    delete this._visible[id];\n\n                    if (fullyVisible === id) {\n                        delete this._fullyVisible;\n                    }\n                } else {\n                    this._visible[id] = newVisibility;\n                    this._fullyVisible = fullyVisible;\n                }\n\n                const state = this.getState(el);\n\n                if (state) {\n                    el.dispatchEvent(new MoverStateEvent(state));\n                }\n            }\n        }\n    };\n\n    private _observeState(): void {\n        const element = this.getElement();\n\n        if (\n            this._unobserve ||\n            !element ||\n            typeof MutationObserver === \"undefined\"\n        ) {\n            return;\n        }\n\n        const win = this._win();\n        const allElements = (this._allElements = new WeakMap());\n        const tabsterFocusable = this._tabster.focusable;\n        let updateQueue: MoverUpdateQueueItem[] = (this._updateQueue = []);\n\n        const observer = dom.createMutationObserver(\n            (mutations: MutationRecord[]) => {\n                for (const mutation of mutations) {\n                    const target = mutation.target;\n                    const removed = mutation.removedNodes;\n                    const added = mutation.addedNodes;\n\n                    if (mutation.type === \"attributes\") {\n                        if (mutation.attributeName === \"tabindex\") {\n                            updateQueue.push({\n                                element: target as HTMLElement,\n                                type: _moverUpdateAttr,\n                            });\n                        }\n                    } else {\n                        for (let i = 0; i < removed.length; i++) {\n                            updateQueue.push({\n                                element: removed[\n                                    i\n                                ] as HTMLElement as HTMLElement,\n                                type: _moverUpdateRemove,\n                            });\n                        }\n\n                        for (let i = 0; i < added.length; i++) {\n                            updateQueue.push({\n                                element: added[i] as HTMLElement,\n                                type: _moverUpdateAdd,\n                            });\n                        }\n                    }\n                }\n\n                requestUpdate();\n            }\n        );\n\n        const setElement = (element: HTMLElement, remove?: boolean): void => {\n            const current = allElements.get(element);\n\n            if (current && remove) {\n                this._intersectionObserver?.unobserve(element);\n                allElements.delete(element);\n            }\n\n            if (!current && !remove) {\n                allElements.set(element, this);\n                this._intersectionObserver?.observe(element);\n            }\n        };\n\n        const updateElement = (element: HTMLElement): void => {\n            const isFocusable = tabsterFocusable.isFocusable(element);\n            const current = allElements.get(element);\n\n            if (current) {\n                if (!isFocusable) {\n                    setElement(element, true);\n                }\n            } else {\n                if (isFocusable) {\n                    setElement(element);\n                }\n            }\n        };\n\n        const addNewElements = (element: HTMLElement): void => {\n            const { mover } = getMoverGroupper(element);\n\n            if (mover && mover !== this) {\n                if (\n                    mover.getElement() === element &&\n                    tabsterFocusable.isFocusable(element)\n                ) {\n                    setElement(element);\n                } else {\n                    return;\n                }\n            }\n\n            const walker = createElementTreeWalker(\n                win.document,\n                element,\n                (node: Node): number => {\n                    const { mover, groupper } = getMoverGroupper(\n                        node as HTMLElement\n                    );\n\n                    if (mover && mover !== this) {\n                        return NodeFilter.FILTER_REJECT;\n                    }\n\n                    const groupperFirstFocusable = groupper?.getFirst(true);\n\n                    if (\n                        groupper &&\n                        groupper.getElement() !== node &&\n                        groupperFirstFocusable &&\n                        groupperFirstFocusable !== node\n                    ) {\n                        return NodeFilter.FILTER_REJECT;\n                    }\n\n                    if (tabsterFocusable.isFocusable(node as HTMLElement)) {\n                        setElement(node as HTMLElement);\n                    }\n\n                    return NodeFilter.FILTER_SKIP;\n                }\n            );\n\n            if (walker) {\n                walker.currentNode = element;\n\n                while (walker.nextNode()) {\n                    /* Iterating for the sake of calling processNode() callback. */\n                }\n            }\n        };\n\n        const removeWalk = (element: HTMLElement): void => {\n            const current = allElements.get(element);\n\n            if (current) {\n                setElement(element, true);\n            }\n\n            for (\n                let el = dom.getFirstElementChild(element);\n                el;\n                el = dom.getNextElementSibling(el)\n            ) {\n                removeWalk(el as HTMLElement);\n            }\n        };\n\n        const requestUpdate = () => {\n            if (!this._updateTimer && updateQueue.length) {\n                this._updateTimer = win.setTimeout(() => {\n                    delete this._updateTimer;\n\n                    for (const { element, type } of updateQueue) {\n                        switch (type) {\n                            case _moverUpdateAttr:\n                                updateElement(element);\n                                break;\n                            case _moverUpdateAdd:\n                                addNewElements(element);\n                                break;\n                            case _moverUpdateRemove:\n                                removeWalk(element);\n                                break;\n                        }\n                    }\n\n                    updateQueue = this._updateQueue = [];\n                }, 0);\n            }\n        };\n\n        const getMoverGroupper = (\n            element: HTMLElement\n        ): { mover?: Mover; groupper?: Types.Groupper } => {\n            const ret: {\n                mover?: Mover;\n                groupper?: Types.Groupper;\n            } = {};\n\n            for (\n                let el: HTMLElement | null = element;\n                el;\n                el = dom.getParentElement(el)\n            ) {\n                const toe = getTabsterOnElement(this._tabster, el);\n\n                if (toe) {\n                    if (toe.groupper && !ret.groupper) {\n                        ret.groupper = toe.groupper;\n                    }\n\n                    if (toe.mover) {\n                        ret.mover = toe.mover as Mover;\n                        break;\n                    }\n                }\n            }\n\n            return ret;\n        };\n\n        updateQueue.push({ element, type: _moverUpdateAdd });\n        requestUpdate();\n\n        observer.observe(element, {\n            childList: true,\n            subtree: true,\n            attributes: true,\n            attributeFilter: [\"tabindex\"],\n        });\n\n        this._unobserve = () => {\n            observer.disconnect();\n        };\n    }\n\n    getState(element: HTMLElement): Types.MoverElementState | undefined {\n        const id = getElementUId(this._win, element);\n\n        if (id in this._visible) {\n            const visibility = this._visible[id] || Visibilities.Invisible;\n            const isCurrent = this._current\n                ? this._current.get() === element\n                : undefined;\n\n            return {\n                isCurrent,\n                visibility,\n            };\n        }\n\n        return undefined;\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction validateMoverProps(props: Types.MoverProps): void {\n    // TODO: Implement validation.\n}\n\n/**\n * Calculates distance between two rectangles.\n *\n * @param ax1 first rectangle left\n * @param ay1 first rectangle top\n * @param ax2 first rectangle right\n * @param ay2 first rectangle bottom\n * @param bx1 second rectangle left\n * @param by1 second rectangle top\n * @param bx2 second rectangle right\n * @param by2 second rectangle bottom\n * @returns number, shortest distance between the rectangles.\n */\nfunction getDistance(\n    ax1: number,\n    ay1: number,\n    ax2: number,\n    ay2: number,\n    bx1: number,\n    by1: number,\n    bx2: number,\n    by2: number\n): number {\n    const xDistance = ax2 < bx1 ? bx1 - ax2 : bx2 < ax1 ? ax1 - bx2 : 0;\n    const yDistance = ay2 < by1 ? by1 - ay2 : by2 < ay1 ? ay1 - by2 : 0;\n\n    return xDistance === 0\n        ? yDistance\n        : yDistance === 0\n        ? xDistance\n        : Math.sqrt(xDistance * xDistance + yDistance * yDistance);\n}\n\nexport class MoverAPI implements Types.MoverAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    private _movers: Record<string, Mover>;\n    private _ignoredInputTimer: number | undefined;\n    private _ignoredInputResolve: ((value: boolean) => void) | undefined;\n\n    constructor(tabster: Types.TabsterCore, getWindow: Types.GetWindow) {\n        this._tabster = tabster;\n        this._win = getWindow;\n        this._movers = {};\n\n        tabster.queueInit(this._init);\n    }\n\n    private _init = (): void => {\n        const win = this._win();\n\n        win.addEventListener(\"keydown\", this._onKeyDown, true);\n        win.addEventListener(MoverMoveFocusEventName, this._onMoveFocus);\n        win.addEventListener(\n            MoverMemorizedElementEventName,\n            this._onMemorizedElement\n        );\n\n        this._tabster.focusedElement.subscribe(this._onFocus);\n    };\n\n    dispose(): void {\n        const win = this._win();\n\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n\n        this._ignoredInputResolve?.(false);\n\n        if (this._ignoredInputTimer) {\n            win.clearTimeout(this._ignoredInputTimer);\n            delete this._ignoredInputTimer;\n        }\n\n        win.removeEventListener(\"keydown\", this._onKeyDown, true);\n        win.removeEventListener(MoverMoveFocusEventName, this._onMoveFocus);\n        win.removeEventListener(\n            MoverMemorizedElementEventName,\n            this._onMemorizedElement\n        );\n\n        Object.keys(this._movers).forEach((moverId) => {\n            if (this._movers[moverId]) {\n                this._movers[moverId].dispose();\n                delete this._movers[moverId];\n            }\n        });\n    }\n\n    createMover(\n        element: HTMLElement,\n        props: Types.MoverProps,\n        sys: Types.SysProps | undefined\n    ): Types.Mover {\n        if (__DEV__) {\n            validateMoverProps(props);\n        }\n\n        const newMover = new Mover(\n            this._tabster,\n            element,\n            this._onMoverDispose,\n            props,\n            sys\n        );\n        this._movers[newMover.id] = newMover;\n        return newMover;\n    }\n\n    private _onMoverDispose = (mover: Mover) => {\n        delete this._movers[mover.id];\n    };\n\n    private _onFocus = (element: HTMLElement | undefined): void => {\n        // When something in the app gets focused, we are making sure that\n        // the relevant context Mover is aware of it.\n        // Looking for the relevant context Mover from the currently\n        // focused element parent, not from the element itself, because the\n        // Mover element itself cannot be its own current (but might be\n        // current for its parent Mover).\n        let currentFocusableElement = element;\n        let deepestFocusableElement = element;\n\n        for (\n            let el: HTMLElement | null | undefined =\n                dom.getParentElement(element);\n            el;\n            el = dom.getParentElement(el)\n        ) {\n            // We go through all Movers up from the focused element and\n            // set their current element to the deepest focusable of that\n            // Mover.\n            const mover = getTabsterOnElement(this._tabster, el)?.mover;\n\n            if (mover) {\n                mover.setCurrent(deepestFocusableElement);\n                currentFocusableElement = undefined;\n            }\n\n            if (\n                !currentFocusableElement &&\n                this._tabster.focusable.isFocusable(el)\n            ) {\n                currentFocusableElement = deepestFocusableElement = el;\n            }\n        }\n    };\n\n    moveFocus(\n        fromElement: HTMLElement,\n        key: Types.MoverKey\n    ): HTMLElement | null {\n        return this._moveFocus(fromElement, key);\n    }\n\n    private _moveFocus(\n        fromElement: HTMLElement,\n        key: Types.MoverKey,\n        relatedEvent?: KeyboardEvent\n    ): HTMLElement | null {\n        const tabster = this._tabster;\n        const ctx = RootAPI.getTabsterContext(tabster, fromElement, {\n            checkRtl: true,\n        });\n\n        if (\n            !ctx ||\n            !ctx.mover ||\n            ctx.excludedFromMover ||\n            (relatedEvent && ctx.ignoreKeydown(relatedEvent))\n        ) {\n            return null;\n        }\n\n        const mover = ctx.mover;\n        const container = mover.getElement();\n\n        if (ctx.groupperBeforeMover) {\n            const groupper = ctx.groupper;\n\n            if (groupper && !groupper.isActive(true)) {\n                // For the cases when we have Mover/Active Groupper/Inactive Groupper, we need to check\n                // the grouppers between the current element and the current mover.\n                for (\n                    let el: HTMLElement | null | undefined =\n                        dom.getParentElement(groupper.getElement());\n                    el && el !== container;\n                    el = dom.getParentElement(el)\n                ) {\n                    if (\n                        getTabsterOnElement(tabster, el)?.groupper?.isActive(\n                            true\n                        )\n                    ) {\n                        return null;\n                    }\n                }\n            } else {\n                return null;\n            }\n        }\n\n        if (!container) {\n            return null;\n        }\n\n        const focusable = tabster.focusable;\n        const moverProps = mover.getProps();\n        const direction = moverProps.direction || MoverDirections.Both;\n        const isBoth = direction === MoverDirections.Both;\n        const isVertical = isBoth || direction === MoverDirections.Vertical;\n        const isHorizontal = isBoth || direction === MoverDirections.Horizontal;\n        const isGridLinear = direction === MoverDirections.GridLinear;\n        const isGrid = isGridLinear || direction === MoverDirections.Grid;\n        const isCyclic = moverProps.cyclic;\n\n        let next: HTMLElement | null | undefined;\n        let scrollIntoViewArg: boolean | undefined;\n\n        let focusedElementRect: DOMRect;\n        let focusedElementX1 = 0;\n        let focusedElementX2 = 0;\n\n        if (isGrid) {\n            focusedElementRect = fromElement.getBoundingClientRect();\n            focusedElementX1 = Math.ceil(focusedElementRect.left);\n            focusedElementX2 = Math.floor(focusedElementRect.right);\n        }\n\n        if (ctx.rtl) {\n            if (key === MoverKeys.ArrowRight) {\n                key = MoverKeys.ArrowLeft;\n            } else if (key === MoverKeys.ArrowLeft) {\n                key = MoverKeys.ArrowRight;\n            }\n        }\n\n        if (\n            (key === MoverKeys.ArrowDown && isVertical) ||\n            (key === MoverKeys.ArrowRight && (isHorizontal || isGrid))\n        ) {\n            next = focusable.findNext({\n                currentElement: fromElement,\n                container,\n                useActiveModalizer: true,\n            });\n\n            if (next && isGrid) {\n                const nextElementX1 = Math.ceil(\n                    next.getBoundingClientRect().left\n                );\n\n                if (!isGridLinear && focusedElementX2 > nextElementX1) {\n                    next = undefined;\n                }\n            } else if (!next && isCyclic) {\n                next = focusable.findFirst({\n                    container,\n                    useActiveModalizer: true,\n                });\n            }\n        } else if (\n            (key === MoverKeys.ArrowUp && isVertical) ||\n            (key === MoverKeys.ArrowLeft && (isHorizontal || isGrid))\n        ) {\n            next = focusable.findPrev({\n                currentElement: fromElement,\n                container,\n                useActiveModalizer: true,\n            });\n\n            if (next && isGrid) {\n                const nextElementX2 = Math.floor(\n                    next.getBoundingClientRect().right\n                );\n\n                if (!isGridLinear && nextElementX2 > focusedElementX1) {\n                    next = undefined;\n                }\n            } else if (!next && isCyclic) {\n                next = focusable.findLast({\n                    container,\n                    useActiveModalizer: true,\n                });\n            }\n        } else if (key === MoverKeys.Home) {\n            if (isGrid) {\n                focusable.findElement({\n                    container,\n                    currentElement: fromElement,\n                    useActiveModalizer: true,\n                    isBackward: true,\n                    acceptCondition: (el) => {\n                        if (!focusable.isFocusable(el)) {\n                            return false;\n                        }\n\n                        const nextElementX1 = Math.ceil(\n                            el.getBoundingClientRect().left ?? 0\n                        );\n\n                        if (\n                            el !== fromElement &&\n                            focusedElementX1 <= nextElementX1\n                        ) {\n                            return true;\n                        }\n\n                        next = el;\n                        return false;\n                    },\n                });\n            } else {\n                next = focusable.findFirst({\n                    container,\n                    useActiveModalizer: true,\n                });\n            }\n        } else if (key === MoverKeys.End) {\n            if (isGrid) {\n                focusable.findElement({\n                    container,\n                    currentElement: fromElement,\n                    useActiveModalizer: true,\n                    acceptCondition: (el) => {\n                        if (!focusable.isFocusable(el)) {\n                            return false;\n                        }\n\n                        const nextElementX1 = Math.ceil(\n                            el.getBoundingClientRect().left ?? 0\n                        );\n\n                        if (\n                            el !== fromElement &&\n                            focusedElementX1 >= nextElementX1\n                        ) {\n                            return true;\n                        }\n\n                        next = el;\n                        return false;\n                    },\n                });\n            } else {\n                next = focusable.findLast({\n                    container,\n                    useActiveModalizer: true,\n                });\n            }\n        } else if (key === MoverKeys.PageUp) {\n            focusable.findElement({\n                currentElement: fromElement,\n                container,\n                useActiveModalizer: true,\n                isBackward: true,\n                acceptCondition: (el) => {\n                    if (!focusable.isFocusable(el)) {\n                        return false;\n                    }\n\n                    if (\n                        isElementVerticallyVisibleInContainer(\n                            this._win,\n                            el,\n                            mover.visibilityTolerance\n                        )\n                    ) {\n                        next = el;\n                        return false;\n                    }\n\n                    return true;\n                },\n            });\n\n            // will be on the first column move forward and preserve previous column\n            if (isGrid && next) {\n                const firstColumnX1 = Math.ceil(\n                    next.getBoundingClientRect().left\n                );\n                focusable.findElement({\n                    currentElement: next,\n                    container,\n                    useActiveModalizer: true,\n                    acceptCondition: (el) => {\n                        if (!focusable.isFocusable(el)) {\n                            return false;\n                        }\n\n                        const nextElementX1 = Math.ceil(\n                            el.getBoundingClientRect().left\n                        );\n                        if (\n                            focusedElementX1 < nextElementX1 ||\n                            firstColumnX1 >= nextElementX1\n                        ) {\n                            return true;\n                        }\n                        next = el;\n                        return false;\n                    },\n                });\n            }\n\n            scrollIntoViewArg = false;\n        } else if (key === MoverKeys.PageDown) {\n            focusable.findElement({\n                currentElement: fromElement,\n                container,\n                useActiveModalizer: true,\n                acceptCondition: (el) => {\n                    if (!focusable.isFocusable(el)) {\n                        return false;\n                    }\n\n                    if (\n                        isElementVerticallyVisibleInContainer(\n                            this._win,\n                            el,\n                            mover.visibilityTolerance\n                        )\n                    ) {\n                        next = el;\n                        return false;\n                    }\n\n                    return true;\n                },\n            });\n\n            // will be on the last column move backwards and preserve previous column\n            if (isGrid && next) {\n                const lastColumnX1 = Math.ceil(\n                    next.getBoundingClientRect().left\n                );\n                focusable.findElement({\n                    currentElement: next,\n                    container,\n                    useActiveModalizer: true,\n                    isBackward: true,\n                    acceptCondition: (el) => {\n                        if (!focusable.isFocusable(el)) {\n                            return false;\n                        }\n\n                        const nextElementX1 = Math.ceil(\n                            el.getBoundingClientRect().left\n                        );\n                        if (\n                            focusedElementX1 > nextElementX1 ||\n                            lastColumnX1 <= nextElementX1\n                        ) {\n                            return true;\n                        }\n                        next = el;\n                        return false;\n                    },\n                });\n            }\n\n            scrollIntoViewArg = true;\n        } else if (isGrid) {\n            const isBackward = key === MoverKeys.ArrowUp;\n            const ax1 = focusedElementX1;\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const ay1 = Math.ceil(focusedElementRect!.top);\n            const ax2 = focusedElementX2;\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const ay2 = Math.floor(focusedElementRect!.bottom);\n            let targetElement: HTMLElement | undefined;\n            let lastDistance: number | undefined;\n            let lastIntersection = 0;\n\n            focusable.findAll({\n                container,\n                currentElement: fromElement,\n                isBackward,\n                onElement: (el) => {\n                    // Find element which has maximal intersection with the focused element horizontally,\n                    // or the closest one.\n                    const rect = el.getBoundingClientRect();\n\n                    const bx1 = Math.ceil(rect.left);\n                    const by1 = Math.ceil(rect.top);\n                    const bx2 = Math.floor(rect.right);\n                    const by2 = Math.floor(rect.bottom);\n\n                    if (\n                        (isBackward && ay1 < by2) ||\n                        (!isBackward && ay2 > by1)\n                    ) {\n                        // Only consider elements which are below/above curretly focused.\n                        return true;\n                    }\n\n                    const xIntersectionWidth =\n                        Math.ceil(Math.min(ax2, bx2)) -\n                        Math.floor(Math.max(ax1, bx1));\n                    const minWidth = Math.ceil(Math.min(ax2 - ax1, bx2 - bx1));\n\n                    if (\n                        xIntersectionWidth > 0 &&\n                        minWidth >= xIntersectionWidth\n                    ) {\n                        // Element intersects with the focused element on X axis.\n                        const intersection = xIntersectionWidth / minWidth;\n\n                        if (intersection > lastIntersection) {\n                            targetElement = el;\n                            lastIntersection = intersection;\n                        }\n                    } else if (lastIntersection === 0) {\n                        // If we didn't have intersection, try just the closest one.\n                        const distance = getDistance(\n                            ax1,\n                            ay1,\n                            ax2,\n                            ay2,\n                            bx1,\n                            by1,\n                            bx2,\n                            by2\n                        );\n\n                        if (\n                            lastDistance === undefined ||\n                            distance < lastDistance\n                        ) {\n                            lastDistance = distance;\n                            targetElement = el;\n                        }\n                    } else if (lastIntersection > 0) {\n                        // Element doesn't intersect, but we had intersection already, stop search.\n                        return false;\n                    }\n\n                    return true;\n                },\n            });\n\n            next = targetElement;\n        }\n\n        if (\n            next &&\n            (!relatedEvent ||\n                (relatedEvent &&\n                    container.dispatchEvent(\n                        new TabsterMoveFocusEvent({\n                            by: \"mover\",\n                            owner: container,\n                            next,\n                            relatedEvent,\n                        })\n                    )))\n        ) {\n            if (scrollIntoViewArg !== undefined) {\n                scrollIntoView(this._win, next, scrollIntoViewArg);\n            }\n\n            if (relatedEvent) {\n                relatedEvent.preventDefault();\n                relatedEvent.stopImmediatePropagation();\n            }\n\n            nativeFocus(next);\n\n            return next;\n        }\n\n        return null;\n    }\n\n    private _onKeyDown = async (event: KeyboardEvent): Promise<void> => {\n        if (this._ignoredInputTimer) {\n            this._win().clearTimeout(this._ignoredInputTimer);\n            delete this._ignoredInputTimer;\n        }\n\n        this._ignoredInputResolve?.(false);\n\n        // Give a chance to other listeners to handle the event (for example,\n        // to scroll instead of moving focus).\n        if (event.ctrlKey || event.altKey || event.shiftKey || event.metaKey) {\n            return;\n        }\n\n        const key = event.key;\n        let moverKey: Types.MoverKey | undefined;\n\n        if (key === Keys.ArrowDown) {\n            moverKey = MoverKeys.ArrowDown;\n        } else if (key === Keys.ArrowRight) {\n            moverKey = MoverKeys.ArrowRight;\n        } else if (key === Keys.ArrowUp) {\n            moverKey = MoverKeys.ArrowUp;\n        } else if (key === Keys.ArrowLeft) {\n            moverKey = MoverKeys.ArrowLeft;\n        } else if (key === Keys.PageDown) {\n            moverKey = MoverKeys.PageDown;\n        } else if (key === Keys.PageUp) {\n            moverKey = MoverKeys.PageUp;\n        } else if (key === Keys.Home) {\n            moverKey = MoverKeys.Home;\n        } else if (key === Keys.End) {\n            moverKey = MoverKeys.End;\n        }\n\n        if (!moverKey) {\n            return;\n        }\n\n        const focused = this._tabster.focusedElement.getFocusedElement();\n\n        if (!focused || (await this._isIgnoredInput(focused, key))) {\n            return;\n        }\n\n        this._moveFocus(focused, moverKey, event);\n    };\n\n    private _onMoveFocus = (e: MoverMoveFocusEvent): void => {\n        const element = e.composedPath()[0] as HTMLElement | null | undefined;\n        const key = e.detail?.key;\n\n        if (element && key !== undefined && !e.defaultPrevented) {\n            this._moveFocus(element, key);\n            e.stopImmediatePropagation();\n        }\n    };\n\n    private _onMemorizedElement = (e: MoverMemorizedElementEvent): void => {\n        const target = e.composedPath()[0] as HTMLElement | null | undefined;\n        let memorizedElement = e.detail?.memorizedElement;\n\n        if (target) {\n            const ctx = RootAPI.getTabsterContext(this._tabster, target);\n            const mover = ctx?.mover;\n\n            if (mover) {\n                if (\n                    memorizedElement &&\n                    !dom.nodeContains(mover.getElement(), memorizedElement)\n                ) {\n                    memorizedElement = undefined;\n                }\n\n                mover.setCurrent(memorizedElement);\n\n                e.stopImmediatePropagation();\n            }\n        }\n    };\n\n    private async _isIgnoredInput(\n        element: HTMLElement,\n        key: string\n    ): Promise<boolean> {\n        if (\n            element.getAttribute(\"aria-expanded\") === \"true\" &&\n            element.hasAttribute(\"aria-activedescendant\")\n        ) {\n            // It is likely a combobox with expanded options and arrow keys are\n            // controlled by it.\n            return true;\n        }\n\n        if (matchesSelector(element, _inputSelector)) {\n            let selectionStart = 0;\n            let selectionEnd = 0;\n            let textLength = 0;\n            let asyncRet: Promise<boolean> | undefined;\n\n            if (element.tagName === \"INPUT\" || element.tagName === \"TEXTAREA\") {\n                const type = (element as HTMLInputElement).type;\n                const value = (element as HTMLInputElement).value;\n\n                textLength = (value || \"\").length;\n\n                if (type === \"email\" || type === \"number\") {\n                    // For these types Chromium doesn't provide selectionStart and selectionEnd.\n                    // Hence the ugly workaround to find if the caret position is changed with\n                    // the keypress.\n                    // TODO: Have a look at range, week, time, time, date, datetime-local.\n                    if (textLength) {\n                        const selection = dom.getSelection(element);\n\n                        if (selection) {\n                            const initialLength = selection.toString().length;\n                            const isBackward =\n                                key === Keys.ArrowLeft || key === Keys.ArrowUp;\n\n                            selection.modify(\n                                \"extend\",\n                                isBackward ? \"backward\" : \"forward\",\n                                \"character\"\n                            );\n\n                            if (initialLength !== selection.toString().length) {\n                                // The caret is moved, so, we're not on the edge of the value.\n                                // Restore original selection.\n                                selection.modify(\n                                    \"extend\",\n                                    isBackward ? \"forward\" : \"backward\",\n                                    \"character\"\n                                );\n\n                                return true;\n                            } else {\n                                textLength = 0;\n                            }\n                        }\n                    }\n                } else {\n                    const selStart = (element as HTMLInputElement)\n                        .selectionStart;\n\n                    if (selStart === null) {\n                        // Do not ignore not text editable inputs like checkboxes and radios (but ignore hidden).\n                        return type === \"hidden\";\n                    }\n\n                    selectionStart = selStart || 0;\n                    selectionEnd =\n                        (element as HTMLInputElement).selectionEnd || 0;\n                }\n            } else if (element.contentEditable === \"true\") {\n                asyncRet = new (getPromise(this._win))((resolve) => {\n                    this._ignoredInputResolve = (value: boolean) => {\n                        delete this._ignoredInputResolve;\n                        resolve(value);\n                    };\n\n                    const win = this._win();\n\n                    if (this._ignoredInputTimer) {\n                        win.clearTimeout(this._ignoredInputTimer);\n                    }\n\n                    const {\n                        anchorNode: prevAnchorNode,\n                        focusNode: prevFocusNode,\n                        anchorOffset: prevAnchorOffset,\n                        focusOffset: prevFocusOffset,\n                    } = dom.getSelection(element) || {};\n\n                    // Get selection gives incorrect value if we call it syncronously onKeyDown.\n                    this._ignoredInputTimer = win.setTimeout(() => {\n                        delete this._ignoredInputTimer;\n\n                        const {\n                            anchorNode,\n                            focusNode,\n                            anchorOffset,\n                            focusOffset,\n                        } = dom.getSelection(element) || {};\n\n                        if (\n                            anchorNode !== prevAnchorNode ||\n                            focusNode !== prevFocusNode ||\n                            anchorOffset !== prevAnchorOffset ||\n                            focusOffset !== prevFocusOffset\n                        ) {\n                            this._ignoredInputResolve?.(false);\n                            return;\n                        }\n\n                        selectionStart = anchorOffset || 0;\n                        selectionEnd = focusOffset || 0;\n                        textLength = element.textContent?.length || 0;\n\n                        if (anchorNode && focusNode) {\n                            if (\n                                dom.nodeContains(element, anchorNode) &&\n                                dom.nodeContains(element, focusNode)\n                            ) {\n                                if (anchorNode !== element) {\n                                    let anchorFound = false;\n\n                                    const addOffsets = (\n                                        node: ChildNode\n                                    ): boolean => {\n                                        if (node === anchorNode) {\n                                            anchorFound = true;\n                                        } else if (node === focusNode) {\n                                            return true;\n                                        }\n\n                                        const nodeText = node.textContent;\n\n                                        if (\n                                            nodeText &&\n                                            !dom.getFirstChild(node)\n                                        ) {\n                                            const len = nodeText.length;\n\n                                            if (anchorFound) {\n                                                if (focusNode !== anchorNode) {\n                                                    selectionEnd += len;\n                                                }\n                                            } else {\n                                                selectionStart += len;\n                                                selectionEnd += len;\n                                            }\n                                        }\n\n                                        let stop = false;\n\n                                        for (\n                                            let e = dom.getFirstChild(node);\n                                            e && !stop;\n                                            e = e.nextSibling\n                                        ) {\n                                            stop = addOffsets(e);\n                                        }\n\n                                        return stop;\n                                    };\n\n                                    addOffsets(element);\n                                }\n                            }\n                        }\n\n                        this._ignoredInputResolve?.(true);\n                    }, 0);\n                });\n            }\n\n            if (asyncRet && !(await asyncRet)) {\n                return true;\n            }\n\n            if (selectionStart !== selectionEnd) {\n                return true;\n            }\n\n            if (\n                selectionStart > 0 &&\n                (key === Keys.ArrowLeft ||\n                    key === Keys.ArrowUp ||\n                    key === Keys.Home)\n            ) {\n                return true;\n            }\n\n            if (\n                selectionStart < textLength &&\n                (key === Keys.ArrowRight ||\n                    key === Keys.ArrowDown ||\n                    key === Keys.End)\n            ) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n", "/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport * as Types from \"./Types\";\nimport { TABSTER_ATTRIBUTE_NAME } from \"./Consts\";\nimport {\n    createElementTreeWalker,\n    getInstanceContext,\n    HTMLElementWithUID,\n    InstanceContext,\n    WeakHTMLElement,\n} from \"./Utils\";\nimport { dom } from \"./DOMAPI\";\n\nexport function observeMutations(\n    doc: Document,\n    tabster: Types.TabsterCore,\n    updateTabsterByAttribute: (\n        tabster: Types.TabsterCore,\n        element: HTMLElementWithUID,\n        dispose?: boolean\n    ) => void,\n    syncState: boolean\n): () => void {\n    if (typeof MutationObserver === \"undefined\") {\n        return () => {\n            /* Noop */\n        };\n    }\n\n    const getWindow = tabster.getWindow;\n\n    let elementByUId: InstanceContext[\"elementByUId\"] | undefined;\n\n    const onMutation = (mutations: MutationRecord[]) => {\n        const removedNodes = new Set<Node>();\n\n        for (const mutation of mutations) {\n            const target = mutation.target;\n            const removed = mutation.removedNodes;\n            const added = mutation.addedNodes;\n\n            if (mutation.type === \"attributes\") {\n                if (mutation.attributeName === TABSTER_ATTRIBUTE_NAME) {\n                    // removedNodes helps to make sure we are not recreating things\n                    // for the removed elements.\n                    // For some reason, if we do removeChild() and setAttribute() on the\n                    // removed child in the same tick, both the child removal and the attribute\n                    // change will be present in the mutation records. And the attribute change\n                    // will follow the child removal.\n                    // So, we remember the removed nodes and ignore attribute changes for them.\n                    if (!removedNodes.has(target)) {\n                        updateTabsterByAttribute(\n                            tabster,\n                            target as HTMLElement\n                        );\n                    }\n                }\n            } else {\n                for (let i = 0; i < removed.length; i++) {\n                    const removedNode = removed[i];\n                    removedNodes.add(removedNode);\n                    updateTabsterElements(removedNode, true);\n                    tabster._dummyObserver.domChanged?.(target as HTMLElement);\n                }\n\n                for (let i = 0; i < added.length; i++) {\n                    updateTabsterElements(added[i]);\n                    tabster._dummyObserver.domChanged?.(target as HTMLElement);\n                }\n            }\n        }\n\n        removedNodes.clear();\n\n        tabster.modalizer?.hiddenUpdate();\n    };\n\n    function updateTabsterElements(node: Node, removed?: boolean): void {\n        if (!elementByUId) {\n            elementByUId = getInstanceContext(getWindow).elementByUId;\n        }\n\n        processNode(node as HTMLElement, removed);\n\n        const walker = createElementTreeWalker(\n            doc,\n            node,\n            (element: Node): number => {\n                return processNode(element as HTMLElement, removed);\n            }\n        );\n\n        if (walker) {\n            while (walker.nextNode()) {\n                /* Iterating for the sake of calling processNode() callback. */\n            }\n        }\n    }\n\n    function processNode(element: HTMLElement, removed?: boolean): number {\n        if (!element.getAttribute) {\n            // It might actually be a text node.\n            return NodeFilter.FILTER_SKIP;\n        }\n\n        const uid = (element as HTMLElementWithUID).__tabsterElementUID;\n\n        if (uid && elementByUId) {\n            if (removed) {\n                delete elementByUId[uid];\n            } else {\n                elementByUId[uid] ??= new WeakHTMLElement(getWindow, element);\n            }\n        }\n\n        if (\n            getTabsterOnElement(tabster, element) ||\n            element.hasAttribute(TABSTER_ATTRIBUTE_NAME)\n        ) {\n            updateTabsterByAttribute(tabster, element, removed);\n        }\n\n        return NodeFilter.FILTER_SKIP;\n    }\n\n    const observer = dom.createMutationObserver(onMutation);\n\n    if (syncState) {\n        updateTabsterElements(getWindow().document.body);\n    }\n\n    observer.observe(doc, {\n        childList: true,\n        subtree: true,\n        attributes: true,\n        attributeFilter: [TABSTER_ATTRIBUTE_NAME],\n    });\n\n    return () => {\n        observer.disconnect();\n    };\n}\n", "/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"../Instance\";\nimport * as Types from \"../Types\";\nimport { ObservedElementAccessibilities } from \"../Consts\";\nimport {\n    documentContains,\n    getElementUId,\n    getPromise,\n    WeakHTMLElement,\n} from \"../Utils\";\nimport { Subscribable } from \"./Subscribable\";\n\nconst _conditionCheckTimeout = 100;\n\ninterface ObservedElementInfo {\n    element: WeakHTMLElement;\n    prevNames?: string[];\n}\n\ninterface ObservedWaiting {\n    timer?: number;\n    conditionTimer?: number;\n    request?: Types.ObservedElementAsyncRequest<HTMLElement | null>;\n    resolve?: (value: HTMLElement | null) => void;\n    reject?: () => void;\n}\n\nexport class ObservedElementAPI\n    extends Subscribable<HTMLElement, Types.ObservedElementDetails>\n    implements Types.ObservedElementAPI\n{\n    private _win: Types.GetWindow;\n    private _tabster: Types.TabsterCore;\n    private _waiting: Record<string, ObservedWaiting> = {};\n    private _lastRequestFocusId = 0;\n    private _observedById: { [uid: string]: ObservedElementInfo } = {};\n    private _observedByName: {\n        [name: string]: { [uid: string]: ObservedElementInfo };\n    } = {};\n    private _currentRequest:\n        | Types.ObservedElementAsyncRequest<HTMLElement | null>\n        | undefined;\n    private _currentRequestTimestamp = 0;\n\n    constructor(tabster: Types.TabsterCore) {\n        super();\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n\n        tabster.queueInit(() => {\n            this._tabster.focusedElement.subscribe(this._onFocus);\n        });\n    }\n\n    dispose(): void {\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n\n        for (const key of Object.keys(this._waiting)) {\n            this._rejectWaiting(key);\n        }\n\n        this._observedById = {};\n        this._observedByName = {};\n    }\n\n    private _onFocus = (e: HTMLElement | undefined): void => {\n        if (e) {\n            const current = this._currentRequest;\n\n            if (current) {\n                const delta = Date.now() - this._currentRequestTimestamp;\n                const settleTime = 300;\n\n                if (delta >= settleTime) {\n                    // Giving some time for the focus to settle before\n                    // automatically cancelling the current request on focus change.\n                    delete this._currentRequest;\n                    current.cancel();\n                }\n            }\n        }\n    };\n\n    private _rejectWaiting(key: string, shouldResolve?: boolean): void {\n        const w = this._waiting[key];\n\n        if (w) {\n            const win = this._win();\n\n            if (w.timer) {\n                win.clearTimeout(w.timer);\n            }\n\n            if (w.conditionTimer) {\n                win.clearTimeout(w.conditionTimer);\n            }\n\n            if (!shouldResolve && w.reject) {\n                w.reject();\n            } else if (shouldResolve && w.resolve) {\n                w.resolve(null);\n            }\n\n            delete this._waiting[key];\n        }\n    }\n\n    private _isObservedNamesUpdated(cur: string[], prev?: string[]) {\n        if (!prev || cur.length !== prev.length) {\n            return true;\n        }\n        for (let i = 0; i < cur.length; ++i) {\n            if (cur[i] !== prev[i]) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Returns existing element by observed name\n     *\n     * @param observedName An observed name\n     * @param accessibility Optionally, return only if the element is accessible or focusable\n     * @returns HTMLElement | null\n     */\n    getElement(\n        observedName: string,\n        accessibility?: Types.ObservedElementAccessibility\n    ): HTMLElement | null {\n        const o = this._observedByName[observedName];\n\n        if (o) {\n            for (const uid of Object.keys(o)) {\n                let el = o[uid].element.get() || null;\n                if (el) {\n                    if (\n                        (accessibility ===\n                            ObservedElementAccessibilities.Accessible &&\n                            !this._tabster.focusable.isAccessible(el)) ||\n                        (accessibility ===\n                            ObservedElementAccessibilities.Focusable &&\n                            !this._tabster.focusable.isFocusable(el, true))\n                    ) {\n                        el = null;\n                    }\n                } else {\n                    delete o[uid];\n                    delete this._observedById[uid];\n                }\n\n                return el;\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Waits for the element to appear in the DOM and returns it.\n     *\n     * @param observedName An observed name\n     * @param timeout Wait no longer than this timeout\n     * @param accessibility Optionally, wait for the element to also become accessible or focusable before returning it\n     * @returns Promise<HTMLElement | null>\n     */\n    waitElement(\n        observedName: string,\n        timeout: number,\n        accessibility?: Types.ObservedElementAccessibility\n    ): Types.ObservedElementAsyncRequest<HTMLElement | null> {\n        const el = this.getElement(observedName, accessibility);\n\n        if (el) {\n            return {\n                result: getPromise(this._win).resolve(el),\n                cancel: () => {\n                    /**/\n                },\n            };\n        }\n\n        let prefix: string;\n\n        if (accessibility === ObservedElementAccessibilities.Accessible) {\n            prefix = \"a\";\n        } else if (accessibility === ObservedElementAccessibilities.Focusable) {\n            prefix = \"f\";\n        } else {\n            prefix = \"_\";\n        }\n\n        const key = prefix + observedName;\n        let w = this._waiting[key];\n\n        if (w && w.request) {\n            return w.request;\n        }\n\n        w = this._waiting[key] = {\n            timer: this._win().setTimeout(() => {\n                if (w.conditionTimer) {\n                    this._win().clearTimeout(w.conditionTimer);\n                }\n\n                delete this._waiting[key];\n\n                if (w.resolve) {\n                    w.resolve(null);\n                }\n            }, timeout),\n        };\n\n        const promise = new (getPromise(this._win))<HTMLElement | null>(\n            (resolve, reject) => {\n                w.resolve = resolve;\n                w.reject = reject;\n            }\n        );\n\n        w.request = {\n            result: promise,\n            cancel: () => {\n                this._rejectWaiting(key, true);\n            },\n        };\n\n        if (accessibility && this.getElement(observedName)) {\n            // If the observed element is alread in DOM, but not accessible yet,\n            // we need to run the wait logic.\n            this._waitConditional(observedName);\n        }\n\n        return w.request;\n    }\n\n    requestFocus(\n        observedName: string,\n        timeout: number,\n        options: Pick<FocusOptions, \"preventScroll\"> = {}\n    ): Types.ObservedElementAsyncRequest<boolean> {\n        const requestId = ++this._lastRequestFocusId;\n        const currentRequestFocus = this._currentRequest;\n\n        if (currentRequestFocus) {\n            currentRequestFocus.cancel();\n        }\n\n        const request = this.waitElement(\n            observedName,\n            timeout,\n            ObservedElementAccessibilities.Focusable\n        );\n\n        this._currentRequest = request;\n        this._currentRequestTimestamp = Date.now();\n\n        request.result.finally(() => {\n            if (this._currentRequest === request) {\n                delete this._currentRequest;\n            }\n        });\n\n        return {\n            result: request.result.then((element) =>\n                this._lastRequestFocusId === requestId && element\n                    ? this._tabster.focusedElement.focus(\n                          element,\n                          true,\n                          undefined,\n                          options.preventScroll\n                      )\n                    : false\n            ),\n            cancel: () => {\n                request.cancel();\n            },\n        };\n    }\n\n    onObservedElementUpdate = (element: HTMLElement): void => {\n        const observed = getTabsterOnElement(this._tabster, element)?.observed;\n        const uid = getElementUId(this._win, element);\n        let info: ObservedElementInfo | undefined = this._observedById[uid];\n\n        if (observed && documentContains(element.ownerDocument, element)) {\n            if (!info) {\n                info = this._observedById[uid] = {\n                    element: new WeakHTMLElement(this._win, element),\n                };\n            }\n\n            observed.names.sort();\n            const observedNames = observed.names;\n            const prevNames = info.prevNames; // prevNames are already sorted\n\n            if (this._isObservedNamesUpdated(observedNames, prevNames)) {\n                if (prevNames) {\n                    prevNames.forEach((prevName) => {\n                        const obn = this._observedByName[prevName];\n\n                        if (obn && obn[uid]) {\n                            if (Object.keys(obn).length > 1) {\n                                delete obn[uid];\n                            } else {\n                                delete this._observedByName[prevName];\n                            }\n                        }\n                    });\n                }\n\n                info.prevNames = observedNames;\n            }\n\n            observedNames.forEach((observedName) => {\n                let obn = this._observedByName[observedName];\n\n                if (!obn) {\n                    obn = this._observedByName[observedName] = {};\n                }\n\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                obn[uid] = info!;\n\n                this._waitConditional(observedName);\n            });\n        } else if (info) {\n            const prevNames = info.prevNames;\n\n            if (prevNames) {\n                prevNames.forEach((prevName) => {\n                    const obn = this._observedByName[prevName];\n\n                    if (obn && obn[uid]) {\n                        if (Object.keys(obn).length > 1) {\n                            delete obn[uid];\n                        } else {\n                            delete this._observedByName[prevName];\n                        }\n                    }\n                });\n            }\n\n            delete this._observedById[uid];\n        }\n    };\n\n    private _waitConditional(observedName: string): void {\n        const waitingElementKey = \"_\" + observedName;\n        const waitingAccessibleElementKey = \"a\" + observedName;\n        const waitingFocusableElementKey = \"f\" + observedName;\n        const waitingElement = this._waiting[waitingElementKey];\n        const waitingAccessibleElement =\n            this._waiting[waitingAccessibleElementKey];\n        const waitingFocusableElement =\n            this._waiting[waitingFocusableElementKey];\n        const win = this._win();\n\n        const resolve = (\n            element: HTMLElement,\n            key: string,\n            waiting: ObservedWaiting,\n            accessibility: Types.ObservedElementAccessibility\n        ) => {\n            const observed = getTabsterOnElement(\n                this._tabster,\n                element\n            )?.observed;\n\n            if (!observed || !observed.names.includes(observedName)) {\n                return;\n            }\n\n            if (waiting.timer) {\n                win.clearTimeout(waiting.timer);\n            }\n\n            delete this._waiting[key];\n\n            if (waiting.resolve) {\n                waiting.resolve(element);\n            }\n\n            this.trigger(element, {\n                names: [observedName],\n                details: observed.details,\n                accessibility,\n            });\n        };\n\n        if (waitingElement) {\n            const element = this.getElement(observedName);\n\n            if (element && documentContains(element.ownerDocument, element)) {\n                resolve(\n                    element,\n                    waitingElementKey,\n                    waitingElement,\n                    ObservedElementAccessibilities.Any\n                );\n            }\n        }\n\n        if (\n            waitingAccessibleElement &&\n            !waitingAccessibleElement.conditionTimer\n        ) {\n            const resolveAccessible = () => {\n                const element = this.getElement(observedName);\n\n                if (\n                    element &&\n                    documentContains(element.ownerDocument, element) &&\n                    this._tabster.focusable.isAccessible(element)\n                ) {\n                    resolve(\n                        element,\n                        waitingAccessibleElementKey,\n                        waitingAccessibleElement,\n                        ObservedElementAccessibilities.Accessible\n                    );\n                } else {\n                    waitingAccessibleElement.conditionTimer = win.setTimeout(\n                        resolveAccessible,\n                        _conditionCheckTimeout\n                    );\n                }\n            };\n\n            resolveAccessible();\n        }\n\n        if (\n            waitingFocusableElement &&\n            !waitingFocusableElement.conditionTimer\n        ) {\n            const resolveFocusable = () => {\n                const element = this.getElement(observedName);\n\n                if (\n                    element &&\n                    documentContains(element.ownerDocument, element) &&\n                    this._tabster.focusable.isFocusable(element, true)\n                ) {\n                    resolve(\n                        element,\n                        waitingFocusableElementKey,\n                        waitingFocusableElement,\n                        ObservedElementAccessibilities.Focusable\n                    );\n                } else {\n                    waitingFocusableElement.conditionTimer = win.setTimeout(\n                        resolveFocusable,\n                        _conditionCheckTimeout\n                    );\n                }\n            };\n\n            resolveFocusable();\n        }\n    }\n}\n", "/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport * as Types from \"./Types\";\nimport { getBoundingRect } from \"./Utils\";\n\ninterface WindowWithOutlineStyle extends Window {\n    __tabsterOutline?: {\n        style?: HTMLStyleElement;\n        elements?: Types.OutlineElements;\n    };\n}\n\nconst defaultProps: Types.OutlineProps = {\n    areaClass: \"tabster-focus-outline-area\",\n    outlineClass: \"tabster-focus-outline\",\n    outlineColor: \"#ff4500\",\n    outlineWidth: 2,\n    zIndex: 2147483647,\n};\n\nlet _props: Types.OutlineProps = defaultProps;\n\nclass OutlinePosition {\n    public left: number;\n    public top: number;\n    public right: number;\n    public bottom: number;\n\n    constructor(left: number, top: number, right: number, bottom: number) {\n        this.left = left;\n        this.top = top;\n        this.right = right;\n        this.bottom = bottom;\n    }\n\n    public equalsTo(other: OutlinePosition): boolean {\n        return (\n            this.left === other.left &&\n            this.top === other.top &&\n            this.right === other.right &&\n            this.bottom === other.bottom\n        );\n    }\n\n    public clone(): OutlinePosition {\n        return new OutlinePosition(\n            this.left,\n            this.top,\n            this.right,\n            this.bottom\n        );\n    }\n}\n\nexport class OutlineAPI implements Types.OutlineAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    private _updateTimer: number | undefined;\n    private _outlinedElement: HTMLElement | undefined;\n    private _curPos: OutlinePosition | undefined;\n    private _isVisible = false;\n    private _curOutlineElements: Types.OutlineElements | undefined;\n    private _allOutlineElements: Types.OutlineElements[] = [];\n    private _fullScreenElement: HTMLElement | undefined;\n    private _fullScreenEventName: string | undefined;\n    private _fullScreenElementName: string | undefined;\n\n    constructor(tabster: Types.TabsterCore) {\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n\n        tabster.queueInit(this._init);\n\n        if (typeof document !== \"undefined\") {\n            if (\"onfullscreenchange\" in document) {\n                this._fullScreenEventName = \"fullscreenchange\";\n                this._fullScreenElementName = \"fullscreenElement\";\n            } else if (\"onwebkitfullscreenchange\" in document) {\n                this._fullScreenEventName = \"webkitfullscreenchange\";\n                this._fullScreenElementName = \"webkitFullscreenElement\";\n            } else if (\"onmozfullscreenchange\" in document) {\n                this._fullScreenEventName = \"mozfullscreenchange\";\n                this._fullScreenElementName = \"mozFullScreenElement\";\n            } else if (\"onmsfullscreenchange\" in document) {\n                this._fullScreenEventName = \"msfullscreenchange\";\n                this._fullScreenElementName = \"msFullscreenElement\";\n            }\n        }\n    }\n\n    private _init = (): void => {\n        this._tabster.keyboardNavigation.subscribe(\n            this._onKeyboardNavigationStateChanged\n        );\n        this._tabster.focusedElement.subscribe(this._onFocus);\n\n        const win = this._win();\n\n        win.addEventListener(\"scroll\", this._onScroll, true); // Capture!\n\n        if (this._fullScreenEventName) {\n            win.document.addEventListener(\n                this._fullScreenEventName,\n                this._onFullScreenChanged\n            );\n        }\n    };\n\n    setup(props?: Partial<Types.OutlineProps>): void {\n        _props = { ..._props, ...props };\n\n        const win = this._win() as WindowWithOutlineStyle;\n\n        if (!win.__tabsterOutline) {\n            win.__tabsterOutline = {};\n        }\n\n        if (!win.__tabsterOutline.style) {\n            win.__tabsterOutline.style = appendStyles(win.document, _props);\n        }\n\n        if (!props || !props.areaClass) {\n            win.document.body.classList.add(defaultProps.areaClass);\n        } else {\n            win.document.body.classList.remove(defaultProps.areaClass);\n        }\n    }\n\n    dispose(): void {\n        const win = this._win();\n\n        if (this._updateTimer) {\n            win.clearTimeout(this._updateTimer);\n            this._updateTimer = undefined;\n        }\n\n        this._tabster.keyboardNavigation.unsubscribe(\n            this._onKeyboardNavigationStateChanged\n        );\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n\n        win.removeEventListener(\"scroll\", this._onScroll, true);\n\n        if (this._fullScreenEventName) {\n            win.document.removeEventListener(\n                this._fullScreenEventName,\n                this._onFullScreenChanged\n            );\n        }\n\n        this._allOutlineElements.forEach((outlineElements) =>\n            this._removeDOM(outlineElements.container)\n        );\n        this._allOutlineElements = [];\n\n        delete this._outlinedElement;\n        delete this._curPos;\n        delete this._curOutlineElements;\n        delete this._fullScreenElement;\n    }\n\n    private _onFullScreenChanged = (e: Event): void => {\n        if (!this._fullScreenElementName || !e.target) {\n            return;\n        }\n\n        const target = (e.target as Document).body || (e.target as HTMLElement);\n        const outlineElements = this._getDOM(target);\n\n        if (target.ownerDocument && outlineElements) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const fsElement: HTMLElement | null = (target.ownerDocument as any)[\n                this._fullScreenElementName\n            ];\n\n            if (fsElement) {\n                fsElement.appendChild(outlineElements.container);\n                this._fullScreenElement = fsElement;\n            } else {\n                target.ownerDocument.body.appendChild(\n                    outlineElements.container\n                );\n                this._fullScreenElement = undefined;\n            }\n        }\n    };\n\n    private _onKeyboardNavigationStateChanged = (): void => {\n        this._onFocus(this._tabster.focusedElement.getFocusedElement());\n    };\n\n    private _shouldShowCustomOutline(element: HTMLElement): boolean {\n        const tabsterOnElement = getTabsterOnElement(this._tabster, element);\n\n        if (\n            tabsterOnElement &&\n            tabsterOnElement.outline &&\n            tabsterOnElement.outline.isIgnored\n        ) {\n            return false;\n        }\n\n        for (let i: HTMLElement | null = element; i; i = i.parentElement) {\n            if (i.classList && i.classList.contains(_props.areaClass)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    private _onFocus = (e: HTMLElement | undefined): void => {\n        if (!this._updateElement(e) && this._isVisible) {\n            this._setVisibility(false);\n        }\n    };\n\n    private _updateElement(e: HTMLElement | undefined): boolean {\n        this._outlinedElement = undefined;\n\n        if (this._updateTimer) {\n            this._win().clearTimeout(this._updateTimer);\n            this._updateTimer = undefined;\n        }\n\n        this._curPos = undefined;\n\n        if (!this._tabster.keyboardNavigation.isNavigatingWithKeyboard()) {\n            return false;\n        }\n\n        if (e) {\n            // TODO: It's hard (and not necessary) to come up with every possible\n            // condition when there should be no outline, it's better to add an\n            // API to customize the ignores.\n            if (e.tagName === \"INPUT\") {\n                const inputType = (e as HTMLInputElement).type;\n                const outlinedInputTypes = {\n                    button: true,\n                    checkbox: true,\n                    file: true,\n                    image: true,\n                    radio: true,\n                    range: true,\n                    reset: true,\n                    submit: true,\n                };\n\n                if (!(inputType in outlinedInputTypes)) {\n                    return false;\n                }\n            } else if (\n                e.tagName === \"TEXTAREA\" ||\n                e.contentEditable === \"true\" ||\n                e.tagName === \"IFRAME\"\n            ) {\n                return false;\n            }\n\n            if (!this._shouldShowCustomOutline(e)) {\n                return false;\n            }\n\n            if (this._tabster.keyboardNavigation.isNavigatingWithKeyboard()) {\n                this._outlinedElement = e;\n                this._updateOutline();\n            }\n\n            return true;\n        }\n\n        return false;\n    }\n\n    private _onScroll = (e: UIEvent): void => {\n        if (\n            !this._outlinedElement ||\n            !OutlineAPI._isParentChild(\n                e.target as HTMLElement,\n                this._outlinedElement\n            )\n        ) {\n            return;\n        }\n\n        this._curPos = undefined;\n\n        this._setOutlinePosition();\n    };\n\n    private _updateOutline(): void {\n        this._setOutlinePosition();\n\n        if (this._updateTimer) {\n            this._win().clearTimeout(this._updateTimer);\n            this._updateTimer = undefined;\n        }\n\n        if (!this._outlinedElement) {\n            return;\n        }\n\n        this._updateTimer = this._win().setTimeout(() => {\n            this._updateTimer = undefined;\n            this._updateOutline();\n        }, 30);\n    }\n\n    private _setVisibility(visible: boolean): void {\n        this._isVisible = visible;\n\n        if (this._curOutlineElements) {\n            if (visible) {\n                this._curOutlineElements.container.classList.add(\n                    `${_props.outlineClass}_visible`\n                );\n            } else {\n                this._curOutlineElements.container.classList.remove(\n                    `${_props.outlineClass}_visible`\n                );\n                this._curPos = undefined;\n            }\n        }\n    }\n\n    private _setOutlinePosition(): void {\n        if (!this._outlinedElement) {\n            return;\n        }\n\n        let boundingRect = getBoundingRect(this._win, this._outlinedElement);\n\n        const position = new OutlinePosition(\n            boundingRect.left,\n            boundingRect.top,\n            boundingRect.right,\n            boundingRect.bottom\n        );\n\n        if (this._curPos && position.equalsTo(this._curPos)) {\n            return;\n        }\n\n        const outlineElements = this._getDOM(this._outlinedElement);\n        const win =\n            this._outlinedElement.ownerDocument &&\n            this._outlinedElement.ownerDocument.defaultView;\n\n        if (!outlineElements || !win) {\n            return;\n        }\n\n        if (this._curOutlineElements !== outlineElements) {\n            this._setVisibility(false);\n            this._curOutlineElements = outlineElements;\n        }\n\n        this._curPos = position;\n\n        const p = position.clone();\n        let hasAbsolutePositionedParent = false;\n        let hasFixedPositionedParent = false;\n\n        const container = outlineElements.container;\n        const scrollingElement =\n            container &&\n            container.ownerDocument &&\n            (container.ownerDocument.scrollingElement as HTMLElement);\n\n        if (!scrollingElement) {\n            return;\n        }\n\n        for (\n            let parent = this._outlinedElement.parentElement;\n            parent && parent.nodeType === Node.ELEMENT_NODE;\n            parent = parent.parentElement\n        ) {\n            // The element might be partially visible within its scrollable parent,\n            // reduce the bounding rect if this is the case.\n\n            if (parent === this._fullScreenElement) {\n                break;\n            }\n\n            boundingRect = getBoundingRect(this._win, parent);\n\n            const win =\n                parent.ownerDocument && parent.ownerDocument.defaultView;\n\n            if (!win) {\n                return;\n            }\n\n            const computedStyle = win.getComputedStyle(parent);\n            const position = computedStyle.position;\n\n            if (position === \"absolute\") {\n                hasAbsolutePositionedParent = true;\n            } else if (position === \"fixed\" || position === \"sticky\") {\n                hasFixedPositionedParent = true;\n            }\n\n            if (computedStyle.overflow === \"visible\") {\n                continue;\n            }\n\n            if (\n                (!hasAbsolutePositionedParent && !hasFixedPositionedParent) ||\n                computedStyle.overflow === \"hidden\"\n            ) {\n                if (boundingRect.left > p.left) {\n                    p.left = boundingRect.left;\n                }\n                if (boundingRect.top > p.top) {\n                    p.top = boundingRect.top;\n                }\n                if (boundingRect.right < p.right) {\n                    p.right = boundingRect.right;\n                }\n                if (boundingRect.bottom < p.bottom) {\n                    p.bottom = boundingRect.bottom;\n                }\n            }\n        }\n\n        const allRect = getBoundingRect(this._win, scrollingElement);\n        const allWidth = allRect.left + allRect.right;\n        const allHeight = allRect.top + allRect.bottom;\n        const ow = _props.outlineWidth;\n\n        p.left = p.left > ow ? p.left - ow : 0;\n        p.top = p.top > ow ? p.top - ow : 0;\n        p.right = p.right < allWidth - ow ? p.right + ow : allWidth;\n        p.bottom = p.bottom < allHeight - ow ? p.bottom + ow : allHeight;\n\n        const width = p.right - p.left;\n        const height = p.bottom - p.top;\n\n        if (width > ow * 2 && height > ow * 2) {\n            const leftBorderNode = outlineElements.left;\n            const topBorderNode = outlineElements.top;\n            const rightBorderNode = outlineElements.right;\n            const bottomBorderNode = outlineElements.bottom;\n            const sx =\n                this._fullScreenElement || hasFixedPositionedParent\n                    ? 0\n                    : win.pageXOffset;\n            const sy =\n                this._fullScreenElement || hasFixedPositionedParent\n                    ? 0\n                    : win.pageYOffset;\n\n            container.style.position = hasFixedPositionedParent\n                ? \"fixed\"\n                : \"absolute\";\n\n            container.style.background = _props.outlineColor;\n\n            leftBorderNode.style.width =\n                rightBorderNode.style.width =\n                topBorderNode.style.height =\n                bottomBorderNode.style.height =\n                    _props.outlineWidth + \"px\";\n\n            leftBorderNode.style.left =\n                topBorderNode.style.left =\n                bottomBorderNode.style.left =\n                    p.left + sx + \"px\";\n            rightBorderNode.style.left = p.left + sx + width - ow + \"px\";\n\n            leftBorderNode.style.top =\n                rightBorderNode.style.top =\n                topBorderNode.style.top =\n                    p.top + sy + \"px\";\n            bottomBorderNode.style.top = p.top + sy + height - ow + \"px\";\n\n            leftBorderNode.style.height = rightBorderNode.style.height =\n                height + \"px\";\n\n            topBorderNode.style.width = bottomBorderNode.style.width =\n                width + \"px\";\n\n            this._setVisibility(true);\n        } else {\n            this._setVisibility(false);\n        }\n    }\n\n    private _getDOM(\n        contextElement: HTMLElement\n    ): Types.OutlineElements | undefined {\n        const doc = contextElement.ownerDocument;\n        const win = (doc && doc.defaultView) as WindowWithOutlineStyle;\n\n        if (!doc || !win || !win.__tabsterOutline) {\n            return undefined;\n        }\n\n        if (!win.__tabsterOutline.style) {\n            win.__tabsterOutline.style = appendStyles(doc, _props);\n        }\n\n        if (!win.__tabsterOutline.elements) {\n            const outlineElements: Types.OutlineElements = {\n                container: doc.createElement(\"div\"),\n                left: doc.createElement(\"div\"),\n                top: doc.createElement(\"div\"),\n                right: doc.createElement(\"div\"),\n                bottom: doc.createElement(\"div\"),\n            };\n\n            outlineElements.container.className = _props.outlineClass;\n            outlineElements.left.className = `${_props.outlineClass}__left`;\n            outlineElements.top.className = `${_props.outlineClass}__top`;\n            outlineElements.right.className = `${_props.outlineClass}__right`;\n            outlineElements.bottom.className = `${_props.outlineClass}__bottom`;\n\n            outlineElements.container.appendChild(outlineElements.left);\n            outlineElements.container.appendChild(outlineElements.top);\n            outlineElements.container.appendChild(outlineElements.right);\n            outlineElements.container.appendChild(outlineElements.bottom);\n\n            doc.body.appendChild(outlineElements.container);\n\n            win.__tabsterOutline.elements = outlineElements;\n\n            // TODO: Make a garbage collector to remove the references\n            // to the outlines which are nowhere in the DOM anymore.\n            this._allOutlineElements.push(outlineElements);\n        }\n\n        return win.__tabsterOutline.elements;\n    }\n\n    private _removeDOM(contextElement: HTMLElement): void {\n        const win = (contextElement.ownerDocument &&\n            contextElement.ownerDocument.defaultView) as WindowWithOutlineStyle;\n        const outline = win && win.__tabsterOutline;\n\n        if (!outline) {\n            return;\n        }\n\n        if (outline.style && outline.style.parentNode) {\n            outline.style.parentNode.removeChild(outline.style);\n\n            delete outline.style;\n        }\n\n        const outlineElements = outline && outline.elements;\n\n        if (outlineElements) {\n            if (outlineElements.container.parentNode) {\n                outlineElements.container.parentNode.removeChild(\n                    outlineElements.container\n                );\n            }\n\n            delete outline.elements;\n        }\n    }\n\n    private static _isParentChild(\n        parent: HTMLElement,\n        child: HTMLElement\n    ): boolean {\n        return (\n            child === parent ||\n            // tslint:disable-next-line:no-bitwise\n            !!(\n                parent.compareDocumentPosition(child) &\n                document.DOCUMENT_POSITION_CONTAINED_BY\n            )\n        );\n    }\n}\n\nfunction appendStyles(\n    document: HTMLDocument,\n    props: Types.OutlineProps\n): HTMLStyleElement {\n    const style = document.createElement(\"style\");\n    style.type = \"text/css\";\n    style.appendChild(document.createTextNode(getOutlineStyles(props)));\n    document.head.appendChild(style);\n    return style;\n}\n\nfunction getOutlineStyles(props: Types.OutlineProps): string {\n    return `\n.${props.areaClass} *, .${props.areaClass} *:focus {\noutline: none !important;\n}\n\n.${props.outlineClass} {\ndisplay: none;\nposition: absolute;\nwidth: 0;\nheight: 0;\nleft: 0;\ntop: 0;\nz-index: ${props.zIndex};\n}\n\n.${props.outlineClass}.${props.outlineClass}_visible {\ndisplay: block;\n}\n\n.${props.outlineClass}__left,\n.${props.outlineClass}__top,\n.${props.outlineClass}__right,\n.${props.outlineClass}__bottom {\nposition: absolute;\nbackground: inherit;\n}`;\n}\n", "/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as Types from \"./Types\";\n\n/**\n * Allows default or user focus behaviour on the DOM subtree\n * i.e. Tabster will not control focus events within an uncontrolled area\n */\nexport class UncontrolledAPI implements Types.UncontrolledAPI {\n    private _isUncontrolledCompletely?: (\n        element: HTMLElement,\n        completely: boolean\n    ) => boolean | undefined;\n\n    constructor(\n        isUncontrolledCompletely?: (\n            element: HTMLElement,\n            completely: boolean\n        ) => boolean | undefined\n    ) {\n        this._isUncontrolledCompletely = isUncontrolledCompletely;\n    }\n\n    isUncontrolledCompletely(\n        element: HTMLElement,\n        completely: boolean\n    ): boolean {\n        const isUncontrolledCompletely = this._isUncontrolledCompletely?.(\n            element,\n            completely\n        );\n        // If isUncontrolledCompletely callback is not defined or returns undefined, then the default\n        // behaviour is to return the uncontrolled.completely value from the element.\n        return isUncontrolledCompletely === undefined\n            ? completely\n            : isUncontrolledCompletely;\n    }\n}\n", "/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport type {\n    FocusedElementState,\n    GetWindow,\n    KeyboardNavigationState,\n    Restorer as RestorerInterface,\n    RestorerAPI as RestorerAPIType,\n    RestorerProps,\n    TabsterCore,\n} from \"./Types\";\nimport { RestorerTypes, AsyncFocusSources } from \"./Consts\";\nimport {\n    RestorerRestoreFocusEvent,\n    RestorerRestoreFocusEventName,\n} from \"./Events\";\nimport { TabsterPart, WeakHTMLElement } from \"./Utils\";\nimport { dom } from \"./DOMAPI\";\n\nclass Restorer extends TabsterPart<RestorerProps> implements RestorerInterface {\n    private _hasFocus = false;\n\n    constructor(\n        tabster: TabsterCore,\n        element: HTMLElement,\n        props: RestorerProps\n    ) {\n        super(tabster, element, props);\n\n        if (this._props.type === RestorerTypes.Source) {\n            const element = this._element?.get();\n            element?.addEventListener(\"focusout\", this._onFocusOut);\n            element?.addEventListener(\"focusin\", this._onFocusIn);\n\n            // set hasFocus when the instance is created, in case focus has already moved within it\n            this._hasFocus = dom.nodeContains(\n                element,\n                element && dom.getActiveElement(element.ownerDocument)\n            );\n        }\n    }\n\n    dispose(): void {\n        if (this._props.type === RestorerTypes.Source) {\n            const element = this._element?.get();\n            element?.removeEventListener(\"focusout\", this._onFocusOut);\n            element?.removeEventListener(\"focusin\", this._onFocusIn);\n\n            if (this._hasFocus) {\n                const doc = this._tabster.getWindow().document;\n                doc.body.dispatchEvent(new RestorerRestoreFocusEvent());\n            }\n        }\n    }\n\n    private _onFocusOut = (e: FocusEvent) => {\n        const element = this._element?.get();\n        if (element && e.relatedTarget === null) {\n            element.dispatchEvent(new RestorerRestoreFocusEvent());\n        }\n        if (\n            element &&\n            !dom.nodeContains(element, e.relatedTarget as HTMLElement | null)\n        ) {\n            this._hasFocus = false;\n        }\n    };\n\n    private _onFocusIn = () => {\n        this._hasFocus = true;\n    };\n}\n\nclass History {\n    private static readonly DEPTH = 10;\n    private _stack: WeakHTMLElement<HTMLElement>[] = [];\n    private _getWindow: GetWindow;\n    constructor(getWindow: GetWindow) {\n        this._getWindow = getWindow;\n    }\n    /**\n     * Push a weak element to the top of the history stack.\n     * If the stack is full, the bottom weak element is removed.\n     * If the element is already at the top of the stack, it is not duplicated.\n     */\n    push(element: HTMLElement): void {\n        // Don't duplicate the top of history\n        if (this._stack[this._stack.length - 1]?.get() === element) {\n            return;\n        }\n\n        if (this._stack.length > History.DEPTH) {\n            this._stack.shift();\n        }\n        this._stack.push(\n            new WeakHTMLElement<HTMLElement>(this._getWindow, element)\n        );\n    }\n    /**\n     * Pop the first element from the history that satisfies the callback.\n     * The history is searched from the top to the bottom (from the most recent to the least recent).\n     *\n     * If a weak reference to the element is broken,\n     * or the element is no longer in the DOM,\n     * the element is removed from the top of the stack while popping.\n     *\n     * If no matching element is found, undefined is returned.\n     * If the stack is empty, undefined is returned.\n     */\n    pop(\n        filter: (element: HTMLElement) => boolean = () => true\n    ): HTMLElement | undefined {\n        const doc = this._getWindow().document;\n        for (let index = this._stack.length - 1; index >= 0; index--) {\n            const maybeElement = this._stack.pop()?.get();\n            if (\n                maybeElement &&\n                dom.nodeContains(\n                    doc.body,\n                    dom.getParentElement(maybeElement)\n                ) &&\n                filter(maybeElement)\n            ) {\n                return maybeElement;\n            }\n        }\n        return undefined;\n    }\n}\n\nexport class RestorerAPI implements RestorerAPIType {\n    private _tabster: TabsterCore;\n    private _history: History;\n    private _keyboardNavState: KeyboardNavigationState;\n    private _focusedElementState: FocusedElementState;\n    private _getWindow: GetWindow;\n\n    constructor(tabster: TabsterCore) {\n        this._tabster = tabster;\n        this._getWindow = tabster.getWindow;\n        this._getWindow().addEventListener(\n            RestorerRestoreFocusEventName,\n            this._onRestoreFocus\n        );\n        this._history = new History(this._getWindow);\n\n        this._keyboardNavState = tabster.keyboardNavigation;\n        this._focusedElementState = tabster.focusedElement;\n\n        this._focusedElementState.subscribe(this._onFocusIn);\n    }\n\n    dispose(): void {\n        const win = this._getWindow();\n        this._focusedElementState.unsubscribe(this._onFocusIn);\n\n        this._focusedElementState.cancelAsyncFocus(AsyncFocusSources.Restorer);\n\n        win.removeEventListener(\n            RestorerRestoreFocusEventName,\n            this._onRestoreFocus\n        );\n    }\n\n    private _onRestoreFocus = (e: Event) => {\n        this._focusedElementState.cancelAsyncFocus(AsyncFocusSources.Restorer);\n\n        // ShadowDOM will have shadowRoot as e.target.\n        const source = e.composedPath()[0] as HTMLElement | undefined;\n\n        if (source) {\n            // source id must be recovered before source is removed from DOM\n            // otherwise it'll be unreachable\n            // (as tabster on element will not be available through getTabsterOnElement)\n            const sourceId = getTabsterOnElement(\n                this._tabster,\n                source\n            )?.restorer?.getProps().id;\n\n            this._focusedElementState.requestAsyncFocus(\n                AsyncFocusSources.Restorer,\n                () => this._restoreFocus(source, sourceId),\n                0\n            );\n        }\n    };\n\n    private _onFocusIn = (element: HTMLElement | undefined) => {\n        if (!element) {\n            return;\n        }\n\n        const tabsterAttribute = getTabsterOnElement(this._tabster, element);\n        if (\n            tabsterAttribute?.restorer?.getProps().type !== RestorerTypes.Target\n        ) {\n            return;\n        }\n\n        this._history.push(element);\n    };\n\n    private _restoreFocus = (source: HTMLElement, sourceId?: string) => {\n        // don't restore focus if focus isn't lost to body\n        const doc = this._getWindow().document;\n        if (dom.getActiveElement(doc) !== doc.body) {\n            return;\n        }\n        if (\n            // clicking on any empty space focuses body - this is can be a false positive\n            !this._keyboardNavState.isNavigatingWithKeyboard() &&\n            // Source no longer exists on DOM - always restore focus\n            dom.nodeContains(doc.body, source)\n        ) {\n            return;\n        }\n\n        const getId = (element: HTMLElement) =>\n            getTabsterOnElement(this._tabster, element)?.restorer?.getProps()\n                .id;\n\n        this._history.pop((target) => sourceId === getId(target))?.focus();\n    };\n\n    public createRestorer(element: HTMLElement, props: RestorerProps) {\n        const restorer = new Restorer(this._tabster, element, props);\n        // Focus might already be on a restorer target when it gets created so the focusin will not do anything\n        if (\n            props.type === RestorerTypes.Target &&\n            dom.getActiveElement(element.ownerDocument) === element\n        ) {\n            this._history.push(element);\n        }\n\n        return restorer;\n    }\n}\n", "/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport function getActiveElement(doc: Document): Element | null {\n    let activeElement = doc.activeElement;\n\n    while (activeElement?.shadowRoot?.activeElement) {\n        activeElement = activeElement.shadowRoot.activeElement;\n    }\n\n    return activeElement;\n}\n\nexport function nodeContains(\n    node: Node | null | undefined,\n    otherNode: Node | null | undefined\n): boolean {\n    if (!node || !otherNode) {\n        return false;\n    }\n\n    let currentNode: HTMLElement | Node | null | undefined = otherNode;\n\n    while (currentNode) {\n        if (currentNode === node) {\n            return true;\n        }\n\n        if (\n            typeof (currentNode as HTMLSlotElement).assignedElements !==\n                \"function\" &&\n            (currentNode as HTMLElement).assignedSlot?.parentNode\n        ) {\n            // Element is slotted\n            currentNode = (currentNode as HTMLElement).assignedSlot?.parentNode;\n        } else if (currentNode.nodeType === document.DOCUMENT_FRAGMENT_NODE) {\n            // Element is in shadow root\n            currentNode = (currentNode as ShadowRoot).host;\n        } else {\n            currentNode = currentNode.parentNode;\n        }\n    }\n\n    return false;\n}\n\nexport function getParentNode(\n    node: Node | null | undefined\n): ParentNode | null {\n    if (!node) {\n        return null;\n    }\n\n    if (\n        node.nodeType === Node.DOCUMENT_FRAGMENT_NODE &&\n        (node as ShadowRoot).host\n    ) {\n        return (node as ShadowRoot).host;\n    }\n\n    return node.parentNode;\n}\n\nexport function getParentElement(\n    element: HTMLElement | null | undefined\n): HTMLElement | null {\n    for (\n        let parentNode = getParentNode(element);\n        parentNode;\n        parentNode = getParentNode(parentNode)\n    ) {\n        if (parentNode.nodeType === Node.ELEMENT_NODE) {\n            return parentNode as HTMLElement;\n        }\n    }\n\n    return null;\n}\n\nexport function getFirstChild(node: Node | null | undefined): ChildNode | null {\n    if (!node) {\n        return null;\n    }\n\n    if ((node as Element).shadowRoot) {\n        const child = getFirstChild((node as Element).shadowRoot);\n\n        if (child) {\n            return child;\n        }\n\n        // If the attached shadowRoot has no children, just try ordinary children,\n        // that might come after.\n    }\n\n    return node.firstChild;\n}\n\nexport function getLastChild(node: Node | null | undefined): ChildNode | null {\n    if (!node) {\n        return null;\n    }\n\n    if (!node.lastChild && (node as Element).shadowRoot) {\n        return getLastChild((node as Element).shadowRoot);\n    }\n\n    return node.lastChild;\n}\n\nexport function getNextSibling(\n    node: Node | null | undefined\n): ChildNode | null {\n    return node?.nextSibling || null;\n}\n\nexport function getPreviousSibling(\n    node: Node | null | undefined\n): ChildNode | null {\n    if (!node) {\n        return null;\n    }\n\n    let sibling = node.previousSibling;\n\n    if (!sibling && node.parentElement?.shadowRoot) {\n        sibling = getLastChild(node.parentElement.shadowRoot);\n    }\n\n    return sibling;\n}\n\nexport function getFirstElementChild(\n    element: Element | null | undefined\n): Element | null {\n    let child = getFirstChild(element);\n\n    while (child && child.nodeType !== Node.ELEMENT_NODE) {\n        child = getNextSibling(child);\n    }\n\n    return child as Element | null;\n}\n\nexport function getLastElementChild(\n    element: Element | null | undefined\n): Element | null {\n    let child = getLastChild(element);\n\n    while (child && child.nodeType !== Node.ELEMENT_NODE) {\n        child = getPreviousSibling(child);\n    }\n\n    return child as Element | null;\n}\n\nexport function getNextElementSibling(\n    element: Element | null | undefined\n): Element | null {\n    let sibling = getNextSibling(element);\n\n    while (sibling && sibling.nodeType !== Node.ELEMENT_NODE) {\n        sibling = getNextSibling(sibling);\n    }\n\n    return sibling as Element | null;\n}\n\nexport function getPreviousElementSibling(\n    element: Element | null | undefined\n): Element | null {\n    let sibling = getPreviousSibling(element);\n\n    while (sibling && sibling.nodeType !== Node.ELEMENT_NODE) {\n        sibling = getPreviousSibling(sibling);\n    }\n\n    return sibling as Element | null;\n}\n\nexport function appendChild(parent: Node, child: Node): Node {\n    const shadowRoot = (parent as Element).shadowRoot;\n    return shadowRoot\n        ? shadowRoot.appendChild(child)\n        : parent.appendChild(child);\n}\n\nexport function insertBefore(\n    parent: Node,\n    child: Node,\n    referenceChild: Node | null\n): Node {\n    const shadowRoot = (parent as Element).shadowRoot;\n    return shadowRoot\n        ? shadowRoot.insertBefore(child, referenceChild)\n        : parent.insertBefore(child, referenceChild);\n}\n\ninterface ShadowRootWithGetSelection extends ShadowRoot {\n    getSelection?: typeof Window.prototype.getSelection;\n}\n\nexport function getSelection(ref: Node): Selection | null {\n    const win = ref.ownerDocument?.defaultView;\n\n    if (!win) {\n        return null;\n    }\n\n    for (let el: Node | null = ref; el; el = el.parentNode) {\n        if (el.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            const tmp = el as ShadowRootWithGetSelection;\n\n            // ShadowRoot.getSelection() exists only in Chrome.\n            if (tmp.getSelection) {\n                return tmp.getSelection() || null;\n            }\n\n            break;\n        }\n    }\n\n    return win.getSelection() || null;\n}\n\nexport function getElementsByName(\n    referenceElement: HTMLElement,\n    name: string\n): NodeListOf<HTMLElement> {\n    for (let el: Node | null = referenceElement; el; el = el.parentNode) {\n        if (el.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            // Shadow root doesn't have getElementsByName()...\n            return (el as ShadowRoot).querySelectorAll(`[name=${name}]`);\n        }\n    }\n\n    return referenceElement.ownerDocument.getElementsByName(name);\n}\n", "/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getLastElementChild, nodeContains } from \"./DOMFunctions\";\n\nfunction getLastChild(container: HTMLElement): HTMLElement | undefined {\n    let lastChild: HTMLElement | null = null;\n\n    for (\n        let i = getLastElementChild(container);\n        i;\n        i = getLastElementChild(i)\n    ) {\n        lastChild = i as HTMLElement;\n    }\n\n    return lastChild || undefined;\n}\n\nexport class ShadowTreeWalker implements TreeWalker {\n    public readonly filter: NodeFilter | null;\n    public readonly root: Node;\n    public readonly whatToShow: number;\n\n    private _doc: Document;\n    private _walkerStack: TreeWalker[] = [];\n    private _currentNode: Node;\n    private _currentSetFor: Set<TreeWalker> = new Set();\n\n    constructor(\n        doc: Document,\n        root: Node,\n        whatToShow?: number,\n        filter?: NodeFilter | null\n    ) {\n        this._doc = doc;\n        this.root = root;\n        this.filter = filter ?? null;\n        this.whatToShow = whatToShow ?? NodeFilter.SHOW_ALL;\n        this._currentNode = root;\n\n        this._walkerStack.unshift(\n            doc.createTreeWalker(root, whatToShow, this._acceptNode)\n        );\n\n        const shadowRoot = (root as Element).shadowRoot;\n\n        if (shadowRoot) {\n            const walker = this._doc.createTreeWalker(\n                shadowRoot,\n                this.whatToShow,\n                { acceptNode: this._acceptNode }\n            );\n\n            this._walkerStack.unshift(walker);\n        }\n    }\n\n    private _acceptNode = (node: Node): number => {\n        if (node.nodeType === Node.ELEMENT_NODE) {\n            const shadowRoot = (node as Element).shadowRoot;\n\n            if (shadowRoot) {\n                const walker = this._doc.createTreeWalker(\n                    shadowRoot,\n                    this.whatToShow,\n                    { acceptNode: this._acceptNode }\n                );\n\n                this._walkerStack.unshift(walker);\n\n                return NodeFilter.FILTER_ACCEPT;\n            } else {\n                if (typeof this.filter === \"function\") {\n                    return this.filter(node);\n                } else if (this.filter?.acceptNode) {\n                    return this.filter.acceptNode(node);\n                } else if (this.filter === null) {\n                    return NodeFilter.FILTER_ACCEPT;\n                }\n            }\n        }\n\n        return NodeFilter.FILTER_SKIP;\n    };\n\n    public get currentNode(): Node {\n        return this._currentNode;\n    }\n\n    public set currentNode(node: Node) {\n        if (!nodeContains(this.root, node)) {\n            throw new Error(\n                \"Cannot set currentNode to a node that is not contained by the root node.\"\n            );\n        }\n\n        const walkers: TreeWalker[] = [];\n        let curNode: Node | null | undefined = node;\n        let currentWalkerCurrentNode = node;\n\n        this._currentNode = node;\n\n        while (curNode && curNode !== this.root) {\n            if (curNode.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n                const shadowRoot = curNode as ShadowRoot;\n\n                const walker = this._doc.createTreeWalker(\n                    shadowRoot,\n                    this.whatToShow,\n                    { acceptNode: this._acceptNode }\n                );\n\n                walkers.push(walker);\n\n                walker.currentNode = currentWalkerCurrentNode;\n\n                this._currentSetFor.add(walker);\n\n                curNode = currentWalkerCurrentNode = shadowRoot.host;\n            } else {\n                curNode = curNode.parentNode;\n            }\n        }\n\n        const walker = this._doc.createTreeWalker(this.root, this.whatToShow, {\n            acceptNode: this._acceptNode,\n        });\n\n        walkers.push(walker);\n\n        walker.currentNode = currentWalkerCurrentNode;\n\n        this._currentSetFor.add(walker);\n\n        this._walkerStack = walkers;\n    }\n\n    public firstChild(): Node | null {\n        if (__DEV__) {\n            throw new Error(\"Method not implemented.\");\n        }\n\n        return null;\n    }\n\n    public lastChild(): Node | null {\n        if (__DEV__) {\n            throw new Error(\"Method not implemented.\");\n        }\n\n        return null;\n    }\n\n    public nextNode(): Node | null {\n        const nextNode = this._walkerStack[0].nextNode();\n\n        if (nextNode) {\n            const shadowRoot = (nextNode as Element).shadowRoot;\n\n            if (shadowRoot) {\n                let nodeResult: number | undefined;\n\n                if (typeof this.filter === \"function\") {\n                    nodeResult = this.filter(nextNode);\n                } else if (this.filter?.acceptNode) {\n                    nodeResult = this.filter.acceptNode(nextNode);\n                }\n\n                if (nodeResult === NodeFilter.FILTER_ACCEPT) {\n                    return nextNode;\n                }\n\n                // _acceptNode should have added new walker for this shadow,\n                // go in recursively.\n                return this.nextNode();\n            }\n\n            return nextNode;\n        } else {\n            if (this._walkerStack.length > 1) {\n                this._walkerStack.shift();\n\n                return this.nextNode();\n            } else {\n                return null;\n            }\n        }\n    }\n\n    public previousNode(): Node | null {\n        const currentWalker = this._walkerStack[0];\n\n        if (currentWalker.currentNode === currentWalker.root) {\n            if (this._currentSetFor.has(currentWalker)) {\n                this._currentSetFor.delete(currentWalker);\n\n                if (this._walkerStack.length > 1) {\n                    this._walkerStack.shift();\n                    return this.previousNode();\n                } else {\n                    return null;\n                }\n            }\n\n            const lastChild = getLastChild(currentWalker.root as HTMLElement);\n\n            if (lastChild) {\n                currentWalker.currentNode = lastChild;\n\n                let nodeResult: number | undefined;\n\n                if (typeof this.filter === \"function\") {\n                    nodeResult = this.filter(lastChild);\n                } else if (this.filter?.acceptNode) {\n                    nodeResult = this.filter.acceptNode(lastChild);\n                }\n\n                if (nodeResult === NodeFilter.FILTER_ACCEPT) {\n                    return lastChild;\n                }\n            }\n        }\n\n        const previousNode = currentWalker.previousNode();\n\n        if (previousNode) {\n            const shadowRoot = (previousNode as Element).shadowRoot;\n\n            if (shadowRoot) {\n                let nodeResult: number | undefined;\n\n                if (typeof this.filter === \"function\") {\n                    nodeResult = this.filter(previousNode);\n                } else if (this.filter?.acceptNode) {\n                    nodeResult = this.filter.acceptNode(previousNode);\n                }\n\n                if (nodeResult === NodeFilter.FILTER_ACCEPT) {\n                    return previousNode;\n                }\n\n                // _acceptNode should have added new walker for this shadow,\n                // go in recursively.\n                return this.previousNode();\n            }\n\n            return previousNode;\n        } else {\n            if (this._walkerStack.length > 1) {\n                this._walkerStack.shift();\n\n                return this.previousNode();\n            } else {\n                return null;\n            }\n        }\n    }\n\n    public nextSibling(): Node | null {\n        if (__DEV__) {\n            throw new Error(\"Method not implemented.\");\n        }\n\n        return null;\n    }\n\n    public previousSibling(): Node | null {\n        if (__DEV__) {\n            throw new Error(\"Method not implemented.\");\n        }\n\n        return null;\n    }\n\n    public parentNode(): Node | null {\n        if (__DEV__) {\n            throw new Error(\"Method not implemented.\");\n        }\n\n        return null;\n    }\n}\n\nexport function createShadowTreeWalker(\n    doc: Document,\n    root: Node,\n    whatToShow?: number,\n    filter?: NodeFilter | null\n) {\n    return new ShadowTreeWalker(doc, root, whatToShow, filter);\n}\n", "/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { nodeContains } from \"./DOMFunctions\";\n\ninterface OverridenAttachShadow {\n    __origAttachShadow?: typeof Element.prototype.attachShadow;\n}\n\nexport class ShadowMutationObserver implements MutationObserver {\n    private static _shadowObservers: Set<ShadowMutationObserver> = new Set();\n\n    private _root?: Node;\n    private _options?: MutationObserverInit;\n    private _callback: MutationCallback;\n    private _observer: MutationObserver;\n    private _subObservers: Map<Node, MutationObserver>;\n    private _isObserving = false;\n\n    private static _overrideAttachShadow(\n        win: Window & typeof globalThis\n    ): void {\n        const origAttachShadow = win.Element.prototype.attachShadow;\n\n        if ((origAttachShadow as OverridenAttachShadow).__origAttachShadow) {\n            return;\n        }\n\n        Element.prototype.attachShadow = function (\n            this: Element,\n            options?: ShadowRootInit\n        ): ShadowRoot {\n            const shadowRoot = origAttachShadow.call(this, options);\n\n            for (const shadowObserver of ShadowMutationObserver._shadowObservers) {\n                shadowObserver._addSubObserver(shadowRoot);\n            }\n\n            return shadowRoot;\n        };\n\n        (\n            Element.prototype.attachShadow as OverridenAttachShadow\n        ).__origAttachShadow = origAttachShadow;\n    }\n\n    constructor(callback: MutationCallback) {\n        this._callback = callback;\n        this._observer = new MutationObserver(this._callbackWrapper);\n        this._subObservers = new Map();\n    }\n\n    private _callbackWrapper = (\n        mutations: MutationRecord[],\n        observer: MutationObserver\n    ): void => {\n        for (const mutation of mutations) {\n            if (mutation.type === \"childList\") {\n                const removed = mutation.removedNodes;\n                const added = mutation.addedNodes;\n\n                for (let i = 0; i < removed.length; i++) {\n                    this._walkShadows(removed[i], true);\n                }\n\n                for (let i = 0; i < added.length; i++) {\n                    this._walkShadows(added[i]);\n                }\n            }\n        }\n\n        this._callback(mutations, observer);\n    };\n\n    private _addSubObserver(shadowRoot: ShadowRoot): void {\n        if (\n            !this._options ||\n            !this._callback ||\n            this._subObservers.has(shadowRoot)\n        ) {\n            return;\n        }\n\n        if (this._options.subtree && nodeContains(this._root, shadowRoot)) {\n            const subObserver = new MutationObserver(this._callbackWrapper);\n\n            this._subObservers.set(shadowRoot, subObserver);\n\n            if (this._isObserving) {\n                subObserver.observe(shadowRoot, this._options);\n            }\n\n            this._walkShadows(shadowRoot);\n        }\n    }\n\n    public disconnect(): void {\n        this._isObserving = false;\n\n        delete this._options;\n\n        ShadowMutationObserver._shadowObservers.delete(this);\n\n        for (const subObserver of this._subObservers.values()) {\n            subObserver.disconnect();\n        }\n\n        this._subObservers.clear();\n\n        this._observer.disconnect();\n    }\n\n    public observe(target: Node, options?: MutationObserverInit): void {\n        const doc =\n            target.nodeType === Node.DOCUMENT_NODE\n                ? (target as Document)\n                : target.ownerDocument;\n        const win = doc?.defaultView as Window & typeof globalThis;\n\n        if (!doc || !win) {\n            return;\n        }\n\n        ShadowMutationObserver._overrideAttachShadow(win);\n        ShadowMutationObserver._shadowObservers.add(this);\n\n        this._root = target;\n        this._options = options;\n\n        this._isObserving = true;\n\n        this._observer.observe(target, options);\n\n        this._walkShadows(target);\n    }\n\n    private _walkShadows(target: Node, remove?: boolean): void {\n        const doc =\n            target.nodeType === Node.DOCUMENT_NODE\n                ? (target as Document)\n                : target.ownerDocument;\n\n        if (!doc) {\n            return;\n        }\n\n        if (target === doc) {\n            target = doc.body;\n        } else {\n            const shadowRoot = (target as Element).shadowRoot;\n\n            if (shadowRoot) {\n                this._addSubObserver(shadowRoot);\n                return;\n            }\n        }\n\n        const walker = doc.createTreeWalker(target, NodeFilter.SHOW_ELEMENT, {\n            acceptNode: (node) => {\n                if (node.nodeType === Node.ELEMENT_NODE) {\n                    if (remove) {\n                        const subObserver = this._subObservers.get(node);\n\n                        if (subObserver) {\n                            subObserver.disconnect();\n                            this._subObservers.delete(node);\n                        }\n                    } else {\n                        const shadowRoot = (node as Element).shadowRoot;\n\n                        if (shadowRoot) {\n                            this._addSubObserver(shadowRoot);\n                        }\n                    }\n                }\n\n                return NodeFilter.FILTER_SKIP;\n            },\n        });\n\n        walker.nextNode();\n    }\n\n    public takeRecords(): MutationRecord[] {\n        const records = this._observer.takeRecords();\n\n        for (const subObserver of this._subObservers.values()) {\n            records.push(...subObserver.takeRecords());\n        }\n\n        return records;\n    }\n}\n\nexport function createShadowMutationObserver(\n    callback: MutationCallback\n): MutationObserver {\n    return new ShadowMutationObserver(callback);\n}\n", "/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nfunction shadowQuerySelector(\n    node: ParentNode,\n    selector: string,\n    all: boolean\n): Element[] {\n    // TODO: This is probably slow. Optimize to use each shadowRoot's querySelector/querySelectorAll\n    //       instead of walking the tree.\n\n    const elements: Element[] = [];\n\n    walk(node, selector);\n\n    return elements;\n\n    function walk(from: Node, selector: string): void {\n        let el: Element | null = null;\n\n        const walker = document.createTreeWalker(\n            from,\n            NodeFilter.SHOW_ELEMENT,\n            {\n                acceptNode: (n) => {\n                    if (n.nodeType === Node.ELEMENT_NODE) {\n                        if ((n as Element).matches(selector)) {\n                            el = n as Element;\n                            elements.push(el);\n                            return all\n                                ? NodeFilter.FILTER_SKIP\n                                : NodeFilter.FILTER_ACCEPT;\n                        }\n\n                        const shadowRoot = (n as Element).shadowRoot;\n\n                        if (shadowRoot) {\n                            walk(shadowRoot, selector);\n                            return !all && elements.length\n                                ? NodeFilter.FILTER_ACCEPT\n                                : NodeFilter.FILTER_SKIP;\n                        }\n                    }\n                    return NodeFilter.FILTER_SKIP;\n                },\n            }\n        );\n\n        walker.nextNode();\n    }\n}\n\nexport function querySelectorAll(\n    node: ParentNode,\n    selector: string\n): Element[] {\n    return shadowQuerySelector(node, selector, true);\n}\n\nexport function querySelector(\n    node: ParentNode,\n    selector: string\n): Element | null {\n    return shadowQuerySelector(node, selector, false)[0] || null;\n}\n\nexport function getElementById(doc: Document, id: string): HTMLElement | null {\n    return querySelector(doc, \"#\" + id) as HTMLElement | null;\n}\n", "/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n// TODO: The functions below do not consider Shadow DOM slots yet. We will be adding\n// support for slots as the need arises.\n\nexport { createShadowTreeWalker as createTreeWalker } from \"./ShadowTreeWalker\";\nexport { createShadowMutationObserver as createMutationObserver } from \"./ShadowMutationObserver\";\nexport {\n    appendChild,\n    getActiveElement,\n    getFirstChild,\n    getFirstElementChild,\n    getLastChild,\n    getLastElementChild,\n    getNextElementSibling,\n    getNextSibling,\n    getParentElement,\n    getParentNode,\n    getPreviousElementSibling,\n    getPreviousSibling,\n    getSelection,\n    getElementsByName,\n    insertBefore,\n    nodeContains,\n} from \"./DOMFunctions\";\nexport {\n    getElementById,\n    querySelector,\n    querySelectorAll,\n} from \"./querySelector\";\n", "/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { CrossOriginAPI } from \"./CrossOrigin\";\nimport { DeloserAPI } from \"./Deloser\";\nimport { FocusableAPI } from \"./Focusable\";\nimport { FocusedElementState } from \"./State/FocusedElement\";\nimport { GroupperAPI } from \"./Groupper\";\nimport { getTabsterOnElement, updateTabsterByAttribute } from \"./Instance\";\nimport { KeyboardNavigationState } from \"./State/KeyboardNavigation\";\nimport { ModalizerAPI } from \"./Modalizer\";\nimport { MoverAPI } from \"./Mover\";\nimport { observeMutations } from \"./MutationEvent\";\nimport { ObservedElementAPI } from \"./State/ObservedElement\";\nimport { OutlineAPI } from \"./Outline\";\nimport { RootAPI, WindowWithTabsterInstance } from \"./Root\";\nimport * as Types from \"./Types\";\nimport { TABSTER_ATTRIBUTE_NAME } from \"./Consts\";\nimport { UncontrolledAPI } from \"./Uncontrolled\";\nimport {\n    cleanupFakeWeakRefs,\n    clearElementCache,\n    createElementTreeWalker,\n    createWeakMap,\n    disposeInstanceContext,\n    DummyInputObserver,\n    getDummyInputContainer,\n    startFakeWeakRefsCleanup,\n    stopFakeWeakRefsCleanupAndClearStorage,\n} from \"./Utils\";\nimport { RestorerAPI } from \"./Restorer\";\nimport { dom, setDOMAPI } from \"./DOMAPI\";\nimport * as shadowDOMAPI from \"./Shadowdomize\";\n\nexport { getDummyInputContainer };\n\nclass Tabster implements Types.Tabster {\n    keyboardNavigation: Types.KeyboardNavigationState;\n    focusedElement: Types.FocusedElementState;\n    focusable: Types.FocusableAPI;\n    root: Types.RootAPI;\n    uncontrolled: Types.UncontrolledAPI;\n    core: Types.TabsterCore;\n\n    constructor(tabster: Types.TabsterCore) {\n        this.keyboardNavigation = tabster.keyboardNavigation;\n        this.focusedElement = tabster.focusedElement;\n        this.focusable = tabster.focusable;\n        this.root = tabster.root;\n        this.uncontrolled = tabster.uncontrolled;\n        this.core = tabster;\n    }\n}\n\n/**\n * Extends Window to include an internal Tabster instance.\n */\nclass TabsterCore implements Types.TabsterCore {\n    private _storage: WeakMap<HTMLElement, Types.TabsterElementStorage>;\n    private _unobserve: (() => void) | undefined;\n    private _win: WindowWithTabsterInstance | undefined;\n    private _forgetMemorizedTimer: number | undefined;\n    private _forgetMemorizedElements: HTMLElement[] = [];\n    private _wrappers: Set<Tabster> = new Set<Tabster>();\n    private _initTimer: number | undefined;\n    private _initQueue: (() => void)[] = [];\n\n    _version: string = __VERSION__;\n    _noop = false;\n    controlTab: boolean;\n    rootDummyInputs: boolean;\n\n    // Core APIs\n    keyboardNavigation: Types.KeyboardNavigationState;\n    focusedElement: Types.FocusedElementState;\n    focusable: Types.FocusableAPI;\n    root: Types.RootAPI;\n    uncontrolled: Types.UncontrolledAPI;\n    internal: Types.InternalAPI;\n    _dummyObserver: Types.DummyInputObserver;\n\n    // Extended APIs\n    groupper?: Types.GroupperAPI;\n    mover?: Types.MoverAPI;\n    outline?: Types.OutlineAPI;\n    deloser?: Types.DeloserAPI;\n    modalizer?: Types.ModalizerAPI;\n    observedElement?: Types.ObservedElementAPI;\n    crossOrigin?: Types.CrossOriginAPI;\n    restorer?: Types.RestorerAPI;\n    getParent: (el: Node) => Node | null;\n\n    constructor(win: Window, props?: Types.TabsterCoreProps) {\n        this._storage = createWeakMap(win);\n        this._win = win;\n\n        const getWindow = this.getWindow;\n\n        if (props?.DOMAPI) {\n            setDOMAPI({ ...props.DOMAPI });\n        }\n\n        this.keyboardNavigation = new KeyboardNavigationState(getWindow);\n        this.focusedElement = new FocusedElementState(this, getWindow);\n        this.focusable = new FocusableAPI(this);\n        this.root = new RootAPI(this, props?.autoRoot);\n        this.uncontrolled = new UncontrolledAPI(\n            // TODO: Remove checkUncontrolledTrappingFocus in the next major version.\n            props?.checkUncontrolledCompletely ||\n                props?.checkUncontrolledTrappingFocus\n        );\n        this.controlTab = props?.controlTab ?? true;\n        this.rootDummyInputs = !!props?.rootDummyInputs;\n\n        this._dummyObserver = new DummyInputObserver(getWindow);\n\n        this.getParent = props?.getParent ?? dom.getParentNode;\n\n        this.internal = {\n            stopObserver: (): void => {\n                if (this._unobserve) {\n                    this._unobserve();\n                    delete this._unobserve;\n                }\n            },\n\n            resumeObserver: (syncState: boolean): void => {\n                if (!this._unobserve) {\n                    const doc = getWindow().document;\n                    this._unobserve = observeMutations(\n                        doc,\n                        this,\n                        updateTabsterByAttribute,\n                        syncState\n                    );\n                }\n            },\n        };\n\n        startFakeWeakRefsCleanup(getWindow);\n\n        // Gives a tick to the host app to initialize other tabster\n        // APIs before tabster starts observing attributes.\n        this.queueInit(() => {\n            this.internal.resumeObserver(true);\n        });\n    }\n\n    /**\n     * Merges external props with the current props. Not all\n     * props can/should be mergeable, so let's add more as we move on.\n     * @param props Tabster props\n     */\n    private _mergeProps(props?: Types.TabsterCoreProps) {\n        if (!props) {\n            return;\n        }\n\n        this.getParent = props.getParent ?? this.getParent;\n    }\n\n    createTabster(\n        noRefCount?: boolean,\n        props?: Types.TabsterCoreProps\n    ): Types.Tabster {\n        const wrapper = new Tabster(this);\n\n        if (!noRefCount) {\n            this._wrappers.add(wrapper);\n        }\n\n        this._mergeProps(props);\n\n        return wrapper;\n    }\n\n    disposeTabster(wrapper: Types.Tabster, allInstances?: boolean) {\n        if (allInstances) {\n            this._wrappers.clear();\n        } else {\n            this._wrappers.delete(wrapper);\n        }\n\n        if (this._wrappers.size === 0) {\n            this.dispose();\n        }\n    }\n\n    dispose(): void {\n        this.internal.stopObserver();\n\n        const win = this._win;\n\n        win?.clearTimeout(this._initTimer);\n        delete this._initTimer;\n        this._initQueue = [];\n\n        this._forgetMemorizedElements = [];\n\n        if (win && this._forgetMemorizedTimer) {\n            win.clearTimeout(this._forgetMemorizedTimer);\n            delete this._forgetMemorizedTimer;\n        }\n\n        this.outline?.dispose();\n        this.crossOrigin?.dispose();\n        this.deloser?.dispose();\n        this.groupper?.dispose();\n        this.mover?.dispose();\n        this.modalizer?.dispose();\n        this.observedElement?.dispose();\n        this.restorer?.dispose();\n\n        this.keyboardNavigation.dispose();\n        this.focusable.dispose();\n        this.focusedElement.dispose();\n        this.root.dispose();\n\n        this._dummyObserver.dispose();\n\n        stopFakeWeakRefsCleanupAndClearStorage(this.getWindow);\n        clearElementCache(this.getWindow);\n\n        this._storage = new WeakMap();\n        this._wrappers.clear();\n\n        if (win) {\n            disposeInstanceContext(win);\n            delete win.__tabsterInstance;\n            delete this._win;\n        }\n    }\n\n    storageEntry(\n        element: HTMLElement,\n        addremove?: boolean\n    ): Types.TabsterElementStorageEntry | undefined {\n        const storage = this._storage;\n        let entry = storage.get(element);\n\n        if (entry) {\n            if (addremove === false && Object.keys(entry).length === 0) {\n                storage.delete(element);\n            }\n        } else if (addremove === true) {\n            entry = {};\n            storage.set(element, entry);\n        }\n\n        return entry;\n    }\n\n    getWindow = () => {\n        if (!this._win) {\n            throw new Error(\"Using disposed Tabster.\");\n        }\n\n        return this._win;\n    };\n\n    forceCleanup(): void {\n        if (!this._win) {\n            return;\n        }\n\n        this._forgetMemorizedElements.push(this._win.document.body);\n\n        if (this._forgetMemorizedTimer) {\n            return;\n        }\n\n        this._forgetMemorizedTimer = this._win.setTimeout(() => {\n            delete this._forgetMemorizedTimer;\n\n            for (\n                let el: HTMLElement | undefined =\n                    this._forgetMemorizedElements.shift();\n                el;\n                el = this._forgetMemorizedElements.shift()\n            ) {\n                clearElementCache(this.getWindow, el);\n                FocusedElementState.forgetMemorized(this.focusedElement, el);\n            }\n        }, 0);\n\n        cleanupFakeWeakRefs(this.getWindow, true);\n    }\n\n    queueInit(callback: () => void): void {\n        if (!this._win) {\n            return;\n        }\n\n        this._initQueue.push(callback);\n\n        if (!this._initTimer) {\n            this._initTimer = this._win?.setTimeout(() => {\n                delete this._initTimer;\n                this.drainInitQueue();\n            }, 0);\n        }\n    }\n\n    drainInitQueue(): void {\n        if (!this._win) {\n            return;\n        }\n\n        const queue = this._initQueue;\n        // Resetting the queue before calling the callbacks to avoid recursion.\n        this._initQueue = [];\n        queue.forEach((callback) => callback());\n    }\n}\n\nexport function forceCleanup(tabster: Types.Tabster): void {\n    // The only legit case for calling this method is when you've completely removed\n    // the application DOM and not going to add the new one for a while.\n    const tabsterCore = tabster.core;\n    tabsterCore.forceCleanup();\n}\n\n/**\n * Creates an instance of Tabster, returns the current window instance if it already exists.\n */\nexport function createTabster(\n    win: Window,\n    props?: Types.TabsterCoreProps\n): Types.Tabster {\n    let tabster = getCurrentTabster(win as WindowWithTabsterInstance);\n\n    if (tabster) {\n        return tabster.createTabster(false, props);\n    }\n\n    tabster = new TabsterCore(win, props);\n\n    (win as WindowWithTabsterInstance).__tabsterInstance = tabster;\n\n    return tabster.createTabster();\n}\n\n/**\n * Returns an instance of Tabster if it was created before or null.\n */\nexport function getTabster(win: Window): Types.Tabster | null {\n    const tabster = getCurrentTabster(win as WindowWithTabsterInstance);\n\n    return tabster ? tabster.createTabster(true) : null;\n}\n\nexport function getShadowDOMAPI(): Types.DOMAPI {\n    return shadowDOMAPI;\n}\n\n/**\n * Creates a new groupper instance or returns an existing one\n * @param tabster Tabster instance\n */\nexport function getGroupper(tabster: Types.Tabster): Types.GroupperAPI {\n    const tabsterCore = tabster.core;\n\n    if (!tabsterCore.groupper) {\n        tabsterCore.groupper = new GroupperAPI(\n            tabsterCore,\n            tabsterCore.getWindow\n        );\n    }\n\n    return tabsterCore.groupper;\n}\n\n/**\n * Creates a new mover instance or returns an existing one\n * @param tabster Tabster instance\n */\nexport function getMover(tabster: Types.Tabster): Types.MoverAPI {\n    const tabsterCore = tabster.core;\n\n    if (!tabsterCore.mover) {\n        tabsterCore.mover = new MoverAPI(tabsterCore, tabsterCore.getWindow);\n    }\n\n    return tabsterCore.mover;\n}\n\nexport function getOutline(tabster: Types.Tabster): Types.OutlineAPI {\n    const tabsterCore = tabster.core;\n\n    if (!tabsterCore.outline) {\n        tabsterCore.outline = new OutlineAPI(tabsterCore);\n    }\n\n    return tabsterCore.outline;\n}\n\n/**\n * Creates a new new deloser instance or returns an existing one\n * @param tabster Tabster instance\n * @param props Deloser props\n */\nexport function getDeloser(\n    tabster: Types.Tabster,\n    props?: { autoDeloser: Types.DeloserProps }\n): Types.DeloserAPI {\n    const tabsterCore = tabster.core;\n\n    if (!tabsterCore.deloser) {\n        tabsterCore.deloser = new DeloserAPI(tabsterCore, props);\n    }\n\n    return tabsterCore.deloser;\n}\n\n/**\n * Creates a new modalizer instance or returns an existing one\n * @param tabster Tabster instance\n * @param alwaysAccessibleSelector When Modalizer is active, we put\n * aria-hidden to everything else to hide it from screen readers. This CSS\n * selector allows to exclude some elements from this behaviour. For example,\n * this could be used to exclude aria-live region with the application-wide\n * status announcements.\n * @param accessibleCheck An optional callback that will be called when\n * active Modalizer wants to hide an element that doesn't belong to it from\n * the screen readers by setting aria-hidden. Similar to alwaysAccessibleSelector\n * but allows to address the elements programmatically rather than with a selector.\n * If the callback returns true, the element will not receive aria-hidden.\n */\nexport function getModalizer(\n    tabster: Types.Tabster,\n    // @deprecated use accessibleCheck.\n    alwaysAccessibleSelector?: string,\n    accessibleCheck?: Types.ModalizerElementAccessibleCheck\n): Types.ModalizerAPI {\n    const tabsterCore = tabster.core;\n\n    if (!tabsterCore.modalizer) {\n        tabsterCore.modalizer = new ModalizerAPI(\n            tabsterCore,\n            alwaysAccessibleSelector,\n            accessibleCheck\n        );\n    }\n\n    return tabsterCore.modalizer;\n}\n\nexport function getObservedElement(\n    tabster: Types.Tabster\n): Types.ObservedElementAPI {\n    const tabsterCore = tabster.core;\n\n    if (!tabsterCore.observedElement) {\n        tabsterCore.observedElement = new ObservedElementAPI(tabsterCore);\n    }\n\n    return tabsterCore.observedElement;\n}\n\nexport function getCrossOrigin(tabster: Types.Tabster): Types.CrossOriginAPI {\n    const tabsterCore = tabster.core;\n    if (!tabsterCore.crossOrigin) {\n        getDeloser(tabster);\n        getModalizer(tabster);\n        getMover(tabster);\n        getGroupper(tabster);\n        getOutline(tabster);\n        getObservedElement(tabster);\n        tabsterCore.crossOrigin = new CrossOriginAPI(tabsterCore);\n    }\n\n    return tabsterCore.crossOrigin;\n}\n\nexport function getInternal(tabster: Types.Tabster): Types.InternalAPI {\n    const tabsterCore = tabster.core;\n    return tabsterCore.internal;\n}\n\nexport function getRestorer(tabster: Types.Tabster): Types.RestorerAPI {\n    const tabsterCore = tabster.core;\n    if (!tabsterCore.restorer) {\n        tabsterCore.restorer = new RestorerAPI(tabsterCore);\n    }\n\n    return tabsterCore.restorer;\n}\n\nexport function disposeTabster(\n    tabster: Types.Tabster,\n    allInstances?: boolean\n): void {\n    tabster.core.disposeTabster(tabster, allInstances);\n}\n\n/**\n * Returns an instance of Tabster if it already exists on the window .\n * @param win window instance that could contain an Tabster instance.\n */\nexport function getCurrentTabster(win: Window): Types.TabsterCore | undefined {\n    return (win as WindowWithTabsterInstance).__tabsterInstance;\n}\n\n/**\n * Allows to make Tabster non operational. Intended for performance debugging (and other\n * kinds of debugging), you can switch Tabster off without changing the application code\n * that consumes it.\n * @param tabster a reference created by createTabster().\n * @param noop true if you want to make Tabster noop, false if you want to turn it back.\n */\nexport function makeNoOp(tabster: Types.Tabster, noop: boolean): void {\n    const core = tabster.core;\n\n    if (core._noop !== noop) {\n        core._noop = noop;\n\n        const processNode = (element: HTMLElement): number => {\n            if (!element.getAttribute) {\n                return NodeFilter.FILTER_SKIP;\n            }\n\n            if (\n                getTabsterOnElement(core, element) ||\n                element.hasAttribute(TABSTER_ATTRIBUTE_NAME)\n            ) {\n                updateTabsterByAttribute(core, element);\n            }\n\n            return NodeFilter.FILTER_SKIP;\n        };\n\n        const doc = core.getWindow().document;\n        const body = doc.body;\n\n        processNode(body);\n\n        const walker = createElementTreeWalker(doc, body, processNode);\n\n        if (walker) {\n            while (walker.nextNode()) {\n                /* Iterating for the sake of calling processNode() callback. */\n            }\n        }\n    }\n}\n\nexport function isNoOp(tabster: Types.TabsterCore): boolean {\n    return (tabster as TabsterCore)._noop;\n}\n", "/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport type { TABSTER_ATTRIBUTE_NAME } from \"./Consts\";\n\nexport interface HTMLElementWithTabsterFlags extends HTMLElement {\n    __tabsterElementFlags?: {\n        /**\n         * @deprecated This option is added to support interop between Fluent UI V9 and Fluent UI V8.\n         * Once Fluent UI V8 is not supported anymore, this option should be removed.\n         */\n        noDirectAriaHidden?: boolean; // When Modalizer sets aria-hidden on everything outside of the modal,\n        // do not set aria-hidden directly on this element, go inside and check its children,\n        // and set aria-hidden on the children. This is to be set on a container that hosts\n        // elements which have the active modal dialog as virtual parent.\n    };\n}\n\nexport interface TabsterDOMAttribute {\n    [TABSTER_ATTRIBUTE_NAME]: string | undefined;\n}\n\nexport interface TabsterCoreProps {\n    autoRoot?: RootProps;\n    /**\n     * Allows all tab key presses under the tabster root to be controlled by tabster\n     * @default true\n     */\n    controlTab?: boolean;\n    /**\n     * When controlTab is false, Root doesn't have dummy inputs by default.\n     * This option allows to enable dummy inputs on Root.\n     */\n    rootDummyInputs?: boolean;\n    /**\n     * A callback that will be called for the uncontrolled areas when Tabster wants\n     * to know is the uncontrolled element wants complete control (for example it\n     * is trapping focus) and Tabster should not interfere with handling Tab.\n     * If the callback returns undefined, then the default behaviour is to return\n     * the uncontrolled.completely value from the element. If the callback returns\n     * non-undefined value, the callback's value will dominate the element's\n     * uncontrolled.completely value.\n     */\n    checkUncontrolledCompletely?: (\n        element: HTMLElement,\n        completely: boolean // A uncontrolled.completely value from the element.\n    ) => boolean | undefined;\n    /**\n     * @deprecated use checkUncontrolledCompletely.\n     */\n    checkUncontrolledTrappingFocus?: (element: HTMLElement) => boolean;\n    /**\n     * Custom getter for parent elements. Defaults to the default .parentElement call\n     * Currently only used to detect tabster contexts\n     */\n    getParent?(el: Node): Node | null;\n    /**\n     * Ability to redefine all DOM API calls used by Tabster. For example, for\n     * ShadowDOM support.\n     */\n    DOMAPI?: Partial<DOMAPI>;\n}\n\nexport interface DOMAPI {\n    createMutationObserver: (callback: MutationCallback) => MutationObserver;\n    createTreeWalker(\n        doc: Document,\n        root: Node,\n        whatToShow?: number,\n        filter?: NodeFilter | null\n    ): TreeWalker;\n    getParentNode(node: Node | null | undefined): ParentNode | null;\n    getParentElement(\n        element: HTMLElement | null | undefined\n    ): HTMLElement | null;\n    nodeContains(\n        parent: Node | null | undefined,\n        child: Node | null | undefined\n    ): boolean;\n    getActiveElement(doc: Document): Element | null;\n    querySelector(element: ParentNode, selector: string): Element | null;\n    querySelectorAll(element: ParentNode, selector: string): Element[];\n    getElementById(doc: Document, id: string): HTMLElement | null;\n    getFirstChild(node: Node | null | undefined): ChildNode | null;\n    getLastChild(node: Node | null | undefined): ChildNode | null;\n    getNextSibling(node: Node | null | undefined): ChildNode | null;\n    getPreviousSibling(node: Node | null | undefined): ChildNode | null;\n    getFirstElementChild(element: Element | null | undefined): Element | null;\n    getLastElementChild(element: Element | null | undefined): Element | null;\n    getNextElementSibling(element: Element | null | undefined): Element | null;\n    getPreviousElementSibling(\n        element: Element | null | undefined\n    ): Element | null;\n    appendChild(parent: Node, child: Node): Node;\n    insertBefore(parent: Node, child: Node, referenceChild: Node | null): Node;\n    getSelection(ref: Node): Selection | null;\n    getElementsByName(\n        referenceElement: HTMLElement,\n        name: string\n    ): NodeListOf<HTMLElement>;\n}\n\nexport type GetTabster = () => TabsterCore;\nexport type GetWindow = () => Window;\n\nexport type SubscribableCallback<A, B = undefined> = (\n    val: A,\n    detail: B\n) => void;\n\nexport interface Disposable {\n    /** @internal */\n    dispose(): void;\n}\n\nexport interface Subscribable<A, B = undefined> {\n    subscribe(callback: SubscribableCallback<A, B>): void;\n    /** @internal */\n    subscribeFirst(callback: SubscribableCallback<A, B>): void;\n    unsubscribe(callback: SubscribableCallback<A, B>): void;\n}\n\nexport interface KeyboardNavigationState\n    extends Subscribable<boolean>,\n        Disposable {\n    isNavigatingWithKeyboard(): boolean;\n    setNavigatingWithKeyboard(isNavigatingWithKeyboard: boolean): void;\n}\n\nexport interface FocusedElementDetail {\n    relatedTarget?: HTMLElement;\n    isFocusedProgrammatically?: boolean;\n    modalizerId?: string;\n}\n\nimport { AsyncFocusSources as _AsyncFocusSources } from \"./Consts\";\nexport type AsyncFocusSources = typeof _AsyncFocusSources;\n\nexport type AsyncFocusSource = AsyncFocusSources[keyof AsyncFocusSources];\n\nexport interface FocusedElementState\n    extends Subscribable<HTMLElement | undefined, FocusedElementDetail>,\n        Disposable {\n    getFocusedElement(): HTMLElement | undefined;\n    getLastFocusedElement(): HTMLElement | undefined;\n    focus(\n        element: HTMLElement,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean,\n        preventScroll?: boolean\n    ): boolean;\n    focusDefault(container: HTMLElement): boolean;\n    /** @internal */\n    getFirstOrLastTabbable(\n        isFirst: boolean,\n        props: Pick<FindFocusableProps, \"container\" | \"ignoreAccessibility\">\n    ): HTMLElement | undefined;\n    focusFirst(props: FindFirstProps): boolean;\n    focusLast(props: FindFirstProps): boolean;\n    resetFocus(container: HTMLElement): boolean;\n    /**\n     * When Tabster wants to move focus asynchronously, it it should call this method to register its intent.\n     * This is a way to avoid conflicts between different parts that might want to move focus asynchronously\n     * at the same moment (for example when both Deloser and Restorer want to move focus when the focused element\n     * is removed from DOM).\n     */\n    /** @internal */\n    requestAsyncFocus(\n        source: AsyncFocusSource,\n        callback: () => void,\n        delay: number\n    ): void;\n    /** @internal */\n    cancelAsyncFocus(source: AsyncFocusSource): void;\n}\n\nexport interface WeakHTMLElement<D = undefined> {\n    get(): HTMLElement | undefined;\n    getData(): D | undefined;\n}\n\nexport interface TabsterPart<P> {\n    readonly id: string;\n    getElement(): HTMLElement | undefined;\n    getProps(): P;\n    setProps(props: P): void;\n}\n\nexport interface TabsterPartWithFindNextTabbable {\n    findNextTabbable(\n        current?: HTMLElement,\n        reference?: HTMLElement,\n        isBackward?: boolean,\n        ignoreAccessibility?: boolean\n    ): NextTabbable | null;\n}\n\nexport interface TabsterPartWithAcceptElement {\n    acceptElement(\n        element: HTMLElement,\n        state: FocusableAcceptElementState\n    ): number | undefined;\n}\n\nexport interface ObservedElementProps {\n    names: string[];\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    details?: any;\n}\n\nexport interface ObservedElementDetails extends ObservedElementProps {\n    accessibility?: ObservedElementAccessibility;\n}\n\nimport { ObservedElementAccessibilities as _ObservedElementAccessibilities } from \"./Consts\";\nexport type ObservedElementAccessibilities =\n    typeof _ObservedElementAccessibilities;\n\nexport type ObservedElementAccessibility =\n    ObservedElementAccessibilities[keyof ObservedElementAccessibilities];\n\nexport interface ObservedElementAsyncRequest<T> {\n    result: Promise<T>;\n    cancel(): void;\n}\n\ninterface ObservedElementAPIInternal {\n    /** @internal */\n    onObservedElementUpdate(element: HTMLElement): void;\n}\n\nexport interface ObservedElementAPI\n    extends Subscribable<HTMLElement, ObservedElementDetails>,\n        Disposable,\n        ObservedElementAPIInternal {\n    getElement(\n        observedName: string,\n        accessibility?: ObservedElementAccessibility\n    ): HTMLElement | null;\n    waitElement(\n        observedName: string,\n        timeout: number,\n        accessibility?: ObservedElementAccessibility\n    ): ObservedElementAsyncRequest<HTMLElement | null>;\n    requestFocus(\n        observedName: string,\n        timeout: number\n    ): ObservedElementAsyncRequest<boolean>;\n}\n\nexport interface CrossOriginElement {\n    readonly uid: string;\n    readonly ownerId: string;\n    readonly id?: string;\n    readonly rootId?: string;\n    readonly observedName?: string;\n    readonly observedDetails?: string;\n    focus(\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean>;\n}\n\nexport interface CrossOriginSentTo {\n    [id: string]: true;\n}\n\nexport interface CrossOriginTransactionTypes {\n    Bootstrap: 1;\n    FocusElement: 2;\n    State: 3;\n    GetElement: 4;\n    RestoreFocusInDeloser: 5;\n    Ping: 6;\n}\nexport type CrossOriginTransactionType =\n    CrossOriginTransactionTypes[keyof CrossOriginTransactionTypes];\n\nexport interface CrossOriginTransactionData<I, O> {\n    transaction: string;\n    type: CrossOriginTransactionType;\n    isResponse: boolean;\n    timestamp: number;\n    owner: string;\n    sentto: CrossOriginSentTo;\n    timeout?: number;\n    target?: string;\n    beginData?: I;\n    endData?: O;\n}\n\nexport type CrossOriginTransactionSend = (\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data: CrossOriginTransactionData<any, any>\n) => void;\n\nexport interface CrossOriginMessage {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data: CrossOriginTransactionData<any, any>;\n    send: CrossOriginTransactionSend;\n}\n\nexport interface CrossOriginFocusedElementState\n    extends Subscribable<CrossOriginElement | undefined, FocusedElementDetail>,\n        Disposable {\n    focus(\n        element: CrossOriginElement,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean>;\n    focusById(\n        elementId: string,\n        rootId?: string,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean>;\n    focusByObservedName(\n        observedName: string,\n        timeout?: number,\n        rootId?: string,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean>;\n}\n\nexport interface CrossOriginObservedElementState\n    extends Subscribable<CrossOriginElement, ObservedElementProps>,\n        Disposable {\n    getElement(\n        observedName: string,\n        accessibility?: ObservedElementAccessibility\n    ): Promise<CrossOriginElement | null>;\n    waitElement(\n        observedName: string,\n        timeout: number,\n        accessibility?: ObservedElementAccessibility\n    ): Promise<CrossOriginElement | null>;\n    requestFocus(observedName: string, timeout: number): Promise<boolean>;\n}\n\nexport interface CrossOriginAPI {\n    focusedElement: CrossOriginFocusedElementState;\n    observedElement: CrossOriginObservedElementState;\n\n    setup(\n        sendUp?: CrossOriginTransactionSend | null\n    ): (msg: CrossOriginMessage) => void;\n    isSetUp(): boolean;\n    dispose(): void;\n}\n\nexport interface OutlineProps {\n    areaClass: string;\n    outlineClass: string;\n    outlineColor: string;\n    outlineWidth: number;\n    zIndex: number;\n}\n\nexport interface OutlinedElementProps {\n    isIgnored?: boolean;\n}\n\nexport interface OutlineAPI extends Disposable {\n    setup(props?: Partial<OutlineProps>): void;\n}\n\nexport interface DeloserElementActions {\n    focusDefault: () => boolean;\n    focusFirst: () => boolean;\n    resetFocus: () => boolean;\n    clearHistory: (preserveExisting?: boolean) => void;\n    setSnapshot: (index: number) => void;\n    isActive: () => boolean;\n}\n\nimport { RestoreFocusOrders as _RestoreFocusOrders } from \"./Consts\";\nexport type RestoreFocusOrders = typeof _RestoreFocusOrders;\n\nexport type RestoreFocusOrder = RestoreFocusOrders[keyof RestoreFocusOrders];\n\nimport { DeloserStrategies as _DeloserStrategies } from \"./Consts\";\nexport type DeloserStrategies = typeof _DeloserStrategies;\n\nexport type DeloserStrategy = DeloserStrategies[keyof DeloserStrategies];\n\nexport interface DeloserProps {\n    restoreFocusOrder?: RestoreFocusOrder;\n    noSelectorCheck?: boolean;\n    strategy?: DeloserStrategy;\n}\n\nexport interface Deloser extends TabsterPart<DeloserProps> {\n    readonly uid: string;\n    readonly strategy: DeloserStrategy;\n    dispose(): void;\n    isActive(): boolean;\n    setActive(active: boolean): void;\n    getActions(): DeloserElementActions;\n    setSnapshot(index: number): void;\n    focusFirst(): boolean;\n    unshift(element: HTMLElement): void;\n    focusDefault(): boolean;\n    resetFocus(): boolean;\n    findAvailable(): HTMLElement | null;\n    clearHistory(preserveExisting?: boolean): void;\n    customFocusLostHandler(element: HTMLElement): boolean;\n}\n\nexport type DeloserConstructor = (\n    element: HTMLElement,\n    props: DeloserProps\n) => Deloser;\n\ninterface DeloserInterfaceInternal {\n    /** @internal */\n    createDeloser(element: HTMLElement, props: DeloserProps): Deloser;\n}\n\nexport interface DeloserAPI extends DeloserInterfaceInternal, Disposable {\n    getActions(element: HTMLElement): DeloserElementActions | undefined;\n    pause(): void;\n    resume(restore?: boolean): void;\n}\n\nexport interface FocusableProps {\n    isDefault?: boolean;\n    isIgnored?: boolean;\n    /**\n     * Do not determine an element's focusability based on aria-disabled.\n     */\n    ignoreAriaDisabled?: boolean;\n    /**\n     * Exclude element (and all subelements) from Mover navigation.\n     */\n    excludeFromMover?: boolean;\n    /**\n     * Prevents tabster from handling the keydown event\n     */\n    ignoreKeydown?: {\n        Tab?: boolean;\n        Escape?: boolean;\n        Enter?: boolean;\n        ArrowUp?: boolean;\n        ArrowDown?: boolean;\n        ArrowLeft?: boolean;\n        ArrowRight?: boolean;\n        PageUp?: boolean;\n        PageDown?: boolean;\n        Home?: boolean;\n        End?: boolean;\n    };\n}\n\nexport interface RadioButtonGroup {\n    name: string;\n    buttons: Set<HTMLInputElement>;\n    checked?: HTMLInputElement;\n}\n\nexport interface FocusableAcceptElementState {\n    container: HTMLElement;\n    modalizerUserId?: string;\n    currentCtx?: TabsterContext;\n    from: HTMLElement;\n    fromCtx?: TabsterContext;\n    isBackward?: boolean;\n    found?: boolean;\n    foundElement?: HTMLElement;\n    foundBackward?: HTMLElement;\n    rejectElementsFrom?: HTMLElement;\n    uncontrolled?: HTMLElement;\n    acceptCondition: (el: HTMLElement) => boolean;\n    hasCustomCondition?: boolean;\n    includeProgrammaticallyFocusable?: boolean;\n    ignoreAccessibility?: boolean;\n    cachedGrouppers: {\n        [id: string]: {\n            isActive: boolean | undefined;\n            first?: HTMLElement | null;\n        };\n    };\n    cachedRadioGroups: {\n        [name: string]: RadioButtonGroup;\n    };\n    isFindAll?: boolean;\n    /**\n     * A flag that indicates that some focusable elements were skipped\n     * during the search and the found element is not the one the browser\n     * would normally focus if the user pressed Tab.\n     */\n    skippedFocusable?: boolean;\n}\n\nexport interface FindFocusableProps {\n    /**\n     * The container used for the search.\n     */\n    container: HTMLElement;\n    /**\n     * The elemet to start from.\n     */\n    currentElement?: HTMLElement;\n    /**\n     * See `referenceElement` of GetTabsterContextOptions for description.\n     */\n    referenceElement?: HTMLElement;\n    /**\n     * Includes elements that can be focused programmatically.\n     */\n    includeProgrammaticallyFocusable?: boolean;\n    /**\n     * Ignore accessibility check.\n     */\n    ignoreAccessibility?: boolean;\n    /**\n     * Take active modalizer into account when searching for elements\n     * (the elements out of active modalizer will not be returned).\n     */\n    useActiveModalizer?: boolean;\n    /**\n     * Search withing the specified modality, null for everything outside of modalizers, string within\n     * a specific id, undefined for search within the current application state.\n     */\n    modalizerId?: string | null;\n    /**\n     * If true, find previous element instead of the next one.\n     */\n    isBackward?: boolean;\n    /**\n     * @param el element visited.\n     * @returns if an element should be accepted.\n     */\n    acceptCondition?(el: HTMLElement): boolean;\n    /**\n     * A callback that will be called for every focusable element found during findAll().\n     * If false is returned from this callback, the search will stop.\n     */\n    onElement?: FindElementCallback;\n}\n\nexport interface FindFocusableOutputProps {\n    /**\n     * An output parameter. Will be true after the findNext/findPrev() call if some focusable\n     * elements were skipped during the search and the result element not immediately next\n     * focusable after the currentElement.\n     */\n    outOfDOMOrder?: boolean;\n    /**\n     * An output parameter. Will be true if the found element is uncontrolled.\n     */\n    uncontrolled?: HTMLElement | null;\n}\n\nexport type FindFirstProps = Pick<\n    FindFocusableProps,\n    | \"container\"\n    | \"modalizerId\"\n    | \"includeProgrammaticallyFocusable\"\n    | \"useActiveModalizer\"\n    | \"ignoreAccessibility\"\n>;\n\nexport type FindNextProps = Pick<\n    FindFocusableProps,\n    | \"currentElement\"\n    | \"referenceElement\"\n    | \"container\"\n    | \"modalizerId\"\n    | \"includeProgrammaticallyFocusable\"\n    | \"useActiveModalizer\"\n    | \"ignoreAccessibility\"\n>;\n\nexport type FindDefaultProps = Pick<\n    FindFocusableProps,\n    | \"container\"\n    | \"modalizerId\"\n    | \"includeProgrammaticallyFocusable\"\n    | \"useActiveModalizer\"\n    | \"ignoreAccessibility\"\n>;\n\nexport type FindAllProps = Pick<\n    FindFocusableProps,\n    | \"container\"\n    | \"modalizerId\"\n    | \"currentElement\"\n    | \"isBackward\"\n    | \"includeProgrammaticallyFocusable\"\n    | \"useActiveModalizer\"\n    | \"acceptCondition\"\n    | \"ignoreAccessibility\"\n    | \"onElement\"\n>;\n\n/**\n * A callback that is called for every found element during search. Returning false stops search.\n */\nexport type FindElementCallback = (element: HTMLElement) => boolean;\n\nexport interface FocusableAPI extends Disposable {\n    getProps(element: HTMLElement): FocusableProps;\n\n    isFocusable(\n        element: HTMLElement,\n        includeProgrammaticallyFocusable?: boolean,\n        noVisibleCheck?: boolean,\n        noAccessibleCheck?: boolean\n    ): boolean;\n    isVisible(element: HTMLElement): boolean;\n    isAccessible(element: HTMLElement): boolean;\n    // find* return null when there is no element and undefined when there is an uncontrolled area.\n    findFirst(\n        options: FindFirstProps,\n        out?: FindFocusableOutputProps\n    ): HTMLElement | null | undefined;\n    findLast(\n        options: FindFirstProps,\n        out?: FindFocusableOutputProps\n    ): HTMLElement | null | undefined;\n    findNext(\n        options: FindNextProps,\n        out?: FindFocusableOutputProps\n    ): HTMLElement | null | undefined;\n    findPrev(\n        options: FindNextProps,\n        out?: FindFocusableOutputProps\n    ): HTMLElement | null | undefined;\n    findDefault(\n        options: FindDefaultProps,\n        out?: FindFocusableOutputProps\n    ): HTMLElement | null;\n    /**\n     * @returns All focusables in a given context that satisfy an given condition\n     */\n    findAll(options: FindAllProps): HTMLElement[];\n    findElement(\n        options: FindFocusableProps,\n        out?: FindFocusableOutputProps\n    ): HTMLElement | null | undefined;\n}\n\nexport interface DummyInputManager {\n    moveOut: (backwards: boolean) => void;\n    moveOutWithDefaultAction: (\n        backwards: boolean,\n        relatedEvent: KeyboardEvent\n    ) => void;\n}\n\nimport { Visibilities as _Visibilities } from \"./Consts\";\nexport type Visibilities = typeof _Visibilities;\n\nexport type Visibility = Visibilities[keyof Visibilities];\n\nexport interface MoverElementState {\n    isCurrent: boolean | undefined; // Tri-state bool. Undefined when there is no current in the container.\n    visibility: Visibility;\n}\n\nimport { RestorerTypes as _RestorerTypes } from \"./Consts\";\nexport type RestorerTypes = typeof _RestorerTypes;\n\nexport type RestorerType = RestorerTypes[keyof RestorerTypes];\n\nimport { MoverDirections as _MoverDirections } from \"./Consts\";\nexport type MoverDirections = typeof _MoverDirections;\n\nexport type MoverDirection = MoverDirections[keyof MoverDirections];\n\nexport interface NextTabbable {\n    element: HTMLElement | null | undefined;\n    uncontrolled?: HTMLElement | null;\n    outOfDOMOrder?: boolean;\n}\n\nexport interface MoverProps {\n    direction?: MoverDirection;\n    memorizeCurrent?: boolean;\n    tabbable?: boolean;\n    /**\n     * Whether to allow cyclic navigation in the mover\n     * Can only be applied if navigationType is MoverKeys.Arrows\n     *\n     * @defaultValue false\n     */\n    cyclic?: boolean;\n    /**\n     * In case we need a rich state of the elements inside a Mover,\n     * we can track it. It takes extra resourses and might affect\n     * performance when a Mover has many elements inside, so make sure\n     * you use this prop when it is really needed.\n     */\n    trackState?: boolean;\n    /**\n     * When set to Visibility.Visible or Visibility.PartiallyVisible,\n     * uses the visibility part of the trackState prop to be able to\n     * go to first/last visible element (instead of first/last focusable\n     * element in DOM) when tabbing from outside of the mover.\n     */\n    visibilityAware?: Visibility;\n    /**\n     * When true, Mover will try to locate a focusable with Focusable.isDefault\n     * property as a prioritized element to focus. True by default.\n     */\n    hasDefault?: boolean;\n    /**\n     * A value between 0 and 1 that specifies the tolerance allowed\n     * when testing for visibility.\n     *\n     * @example\n     * an element of height 100px has 10px that are above the viewport\n     * hidden by scroll. This element is a valid visible element to focus.\n     *\n     * @default 0.8\n     */\n    visibilityTolerance?: number;\n}\n\nexport interface Mover\n    extends TabsterPart<MoverProps>,\n        TabsterPartWithFindNextTabbable,\n        TabsterPartWithAcceptElement {\n    readonly id: string;\n    readonly dummyManager: DummyInputManager | undefined;\n    readonly visibilityTolerance: NonNullable<\n        MoverProps[\"visibilityTolerance\"]\n    >;\n    dispose(): void;\n    setCurrent(element: HTMLElement | undefined): void;\n    getCurrent(): HTMLElement | null;\n    getState(element: HTMLElement): MoverElementState | undefined;\n}\n\nexport type MoverConstructor = (\n    tabster: TabsterCore,\n    element: HTMLElement,\n    props: MoverProps\n) => Mover;\n\ninterface MoverAPIInternal {\n    /** @internal */\n    createMover(\n        element: HTMLElement,\n        props: MoverProps,\n        sys: SysProps | undefined\n    ): Mover;\n}\n\nimport { MoverKeys as _MoverKeys } from \"./Consts\";\nexport type MoverKeys = typeof _MoverKeys;\n\nexport type MoverKey = MoverKeys[keyof MoverKeys];\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface MoverAPI extends MoverAPIInternal, Disposable {\n    /** @internal (will likely be exposed once the API is fully stable) */\n    moveFocus(fromElement: HTMLElement, key: MoverKey): HTMLElement | null;\n}\n\nimport { GroupperTabbabilities as _GroupperTabbabilities } from \"./Consts\";\nexport type GroupperTabbabilities = typeof _GroupperTabbabilities;\n\nexport type GroupperTabbability =\n    GroupperTabbabilities[keyof GroupperTabbabilities];\n\nexport interface GroupperProps {\n    tabbability?: GroupperTabbability;\n    delegated?: boolean; // This allows to tweak the groupper behaviour for the cases when\n    // the groupper container is not focusable and groupper has Limited or LimitedTrapFocus\n    // tabbability. By default, the groupper will automatically become active once the focus\n    // goes to first focusable element inside the groupper during tabbing. When true, the\n    // groupper will become active only after Enter is pressed on first focusable element\n    // inside the groupper.\n}\n\nexport interface Groupper\n    extends TabsterPart<GroupperProps>,\n        TabsterPartWithFindNextTabbable,\n        TabsterPartWithAcceptElement {\n    readonly id: string;\n    readonly dummyManager: DummyInputManager | undefined;\n    dispose(): void;\n    makeTabbable(isUnlimited: boolean): void;\n    isActive(noIfFirstIsFocused?: boolean): boolean | undefined; // Tri-state boolean, undefined when parent is not active, false when parent is active.\n    setFirst(element: HTMLElement | undefined): void;\n    getFirst(orContainer: boolean): HTMLElement | undefined;\n}\n\nexport type GroupperConstructor = (\n    tabster: TabsterCore,\n    element: HTMLElement,\n    props: GroupperProps\n) => Groupper;\n\nexport interface GroupperAPIInternal {\n    /** @internal */\n    createGroupper(\n        element: HTMLElement,\n        props: GroupperProps,\n        sys: SysProps | undefined\n    ): Groupper;\n    /** @internal */\n    handleKeyPress(\n        element: HTMLElement,\n        event: KeyboardEvent,\n        fromModalizer?: boolean\n    ): void;\n}\n\nimport { GroupperMoveFocusActions as _GroupperMoveFocusActions } from \"./Consts\";\nexport type GroupperMoveFocusActions = typeof _GroupperMoveFocusActions;\n\nexport type GroupperMoveFocusAction =\n    GroupperMoveFocusActions[keyof GroupperMoveFocusActions];\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface GroupperAPI extends GroupperAPIInternal, Disposable {\n    /** @internal (will likely be exposed once the API is fully stable) */\n    moveFocus(\n        element: HTMLElement,\n        action: GroupperMoveFocusAction\n    ): HTMLElement | null;\n}\n\nexport interface GroupperAPIInternal {\n    forgetCurrentGrouppers(): void;\n}\n\nexport interface ModalizerProps {\n    id: string;\n    isOthersAccessible?: boolean;\n    isAlwaysAccessible?: boolean;\n    isNoFocusFirst?: boolean;\n    isNoFocusDefault?: boolean;\n    /** A focus trap variant, keeps focus inside the modal when tabbing */\n    isTrapped?: boolean;\n}\n\nexport interface Modalizer\n    extends TabsterPart<ModalizerProps>,\n        TabsterPartWithFindNextTabbable {\n    readonly userId: string;\n    readonly dummyManager: DummyInputManager | undefined;\n    /**\n     * @returns - Whether the element is inside the modalizer\n     */\n    contains(element: HTMLElement): boolean;\n    dispose(): void;\n    isActive(): boolean;\n    makeActive(isActive: boolean): void;\n    focused(noIncrement?: boolean): number;\n}\n\nexport type ModalizerConstructor = (\n    tabster: TabsterCore,\n    element: HTMLElement,\n    props: ModalizerProps\n) => Modalizer;\n\nexport interface RootProps {\n    restoreFocusOrder?: RestoreFocusOrder;\n}\n\nexport interface Root extends TabsterPart<RootProps> {\n    /**@internal*/\n    addDummyInputs(): void;\n\n    readonly uid: string;\n    dispose(): void;\n    moveOutWithDefaultAction(\n        backwards: boolean,\n        relatedEvent: KeyboardEvent\n    ): void;\n}\n\nexport type RootConstructor = (\n    tabster: TabsterCore,\n    element: HTMLElement,\n    props: RootProps\n) => Root;\n\nimport { SysDummyInputsPositions as _SysDummyInputsPositions } from \"./Consts\";\nexport type SysDummyInputsPositions = typeof _SysDummyInputsPositions;\n\nexport type SysDummyInputsPosition =\n    SysDummyInputsPositions[keyof SysDummyInputsPositions];\n\n/**\n * Ability to fine-tune Tabster internal behaviour in rare cases of need.\n * Normally, should not be used. A deep understanding of the intention and the effect\n * is required.\n */\nexport interface SysProps {\n    /**\n     * Force dummy input position outside or inside of the element.\n     * By default (when undefined), the position is determined dynamically\n     * (for example inside for <li> elements and outside for <table> elements,\n     * plus a default Groupper/Mover/Modalizer implementation position).\n     * Setting to true will force the dummy inputs to be always outside of the element,\n     * setting to false will force the dummy inputs to be always inside.\n     */\n    dummyInputsPosition?: SysDummyInputsPosition;\n}\n\nexport interface GetTabsterContextOptions {\n    /**\n     * Should visit **all** element ancestors to verify if `dir='rtl'` is set\n     */\n    checkRtl?: boolean;\n    /**\n     * The element to start computing the context from. Useful when dealing\n     * with nested structures. For example, if we have an element inside a groupper\n     * inside another groupper, the `groupper` prop in this element's contexts will\n     * be the inner groupper, but when we pass the inner groupper's parent element\n     * as `referenceElement`, the context groupper will be the outer one. Having\n     * this option simplifies searching for the next tabbable element in the\n     * environment of nested movers and grouppers.\n     */\n    referenceElement?: HTMLElement;\n}\n\nexport type TabsterContextMoverGroupper =\n    | { isMover: true; mover: Mover }\n    | { isMover: false; groupper: Groupper };\n\nexport interface TabsterContext {\n    root: Root;\n    modalizer?: Modalizer;\n    groupper?: Groupper;\n    mover?: Mover;\n    groupperBeforeMover?: boolean;\n    modalizerInGroupper?: Groupper;\n    /**\n     * Whether `dir='rtl'` is set on an ancestor\n     */\n    rtl?: boolean;\n    excludedFromMover?: boolean;\n    uncontrolled?: HTMLElement | null;\n    ignoreKeydown: (e: KeyboardEvent) => boolean;\n}\n\ninterface RootAPIInternal {\n    /**@internal*/\n    createRoot(\n        element: HTMLElement,\n        props: RootProps,\n        sys: SysProps | undefined\n    ): Root;\n    /**@internal*/\n    onRoot(root: Root, removed?: boolean): void;\n    /**@internal*/\n    addDummyInputs(): void;\n}\n\nexport interface RootAPI extends Disposable, RootAPIInternal {}\n\nexport interface UncontrolledAPI {\n    isUncontrolledCompletely(\n        element: HTMLElement,\n        completely: boolean\n    ): boolean;\n}\n\ninterface ModalizerAPIInternal extends TabsterPartWithAcceptElement {\n    /** @internal */\n    activeId: string | undefined; // currently active Modalizer user id.\n    /** @internal */\n    currentIsOthersAccessible: boolean | undefined; // isOthersAccessible value of the currently active Modalizer.\n    /** @internal */\n    activeElements: WeakHTMLElement<HTMLElement>[];\n    /** @internal */\n    createModalizer(\n        element: HTMLElement,\n        props: ModalizerProps,\n        sys: SysProps | undefined\n    ): Modalizer;\n    /**\n     * Sets active modalizers.\n     * When active, everything outside of the modalizers with the specific user\n     * defined id gets `aria-hidden`.\n     *\n     * @param userId user defined identifier or undefined (if nothing is modal).\n     */\n    /** @internal */\n    setActive(modalizer: Modalizer | undefined): void;\n    /** @internal */\n    hiddenUpdate(): void;\n    /** @internal */\n    isAugmented(element: HTMLElement): boolean;\n}\n\nexport interface ModalizerAPI extends ModalizerAPIInternal, Disposable {\n    /**\n     * Activates a Modalizer and focuses the first or default element within\n     *\n     * @param elementFromModalizer An element that belongs to a Modalizer\n     * @param noFocusFirst Do not focus on the first element in the Modalizer\n     * @param noFocusDefault Do not focus the default element in the Modalizre\n     */\n    focus(\n        elementFromModalizer: HTMLElement,\n        noFocusFirst?: boolean,\n        noFocusDefault?: boolean\n    ): boolean;\n}\n\ninterface RestorerAPIInternal {\n    /** @internal */\n    createRestorer(element: HTMLElement, props: RestorerProps): Restorer;\n}\n\nexport interface RestorerAPI extends RestorerAPIInternal, Disposable {}\n\nexport interface Restorer extends Disposable, TabsterPart<RestorerProps> {}\n/**\n * A signature for the accessibleCheck callback from getModalizer().\n * It is called when active Modalizer sets aria-hidden on elements outsidef of it.\n *\n * @param element The element that is about to receive aria-hidden.\n * @param activeModalizerElements The container elements of the active modalizer.\n * @returns true if the element should remain accessible and should not receive\n * aria-hidden.\n */\nexport type ModalizerElementAccessibleCheck = (\n    element: HTMLElement,\n    activeModalizerElements?: HTMLElement[]\n) => boolean;\n\nexport interface UncontrolledProps {\n    // Normally, even uncontrolled areas should not be completely uncontrolled\n    // to be able to interact with the rest of the application properly.\n    // For example, if an uncontrolled area implements something like\n    // roving tabindex, it should be uncontrolled inside the area, but it\n    // still should be able to be an organic part of the application.\n    // However, in some cases, third party component might want to be able\n    // to gain full control of the area, for example, if it implements\n    // some custom trap focus logic.\n    // `completely` indicates that uncontrolled area must gain full control over\n    // Tab handling. If not set, Tabster might still handle Tab in the\n    // uncontrolled area, when, for example, there is an inactive Modalizer\n    // (that needs to be skipped) after the last focusable element of the\n    // uncontrolled area.\n    // WARNING: Use with caution, as it might break the normal keyboard navigation\n    // between the uncontrolled area and the rest of the application.\n    completely?: boolean;\n}\n\nexport interface DeloserOnElement {\n    deloser: Deloser;\n}\n\nexport interface RootOnElement {\n    root: Root;\n}\n\nexport interface ModalizerOnElement {\n    modalizer: Modalizer;\n}\n\nexport interface RestorerOnElement {\n    restorer: Restorer;\n}\n\nexport interface FocusableOnElement {\n    focusable: FocusableProps;\n}\n\nexport interface MoverOnElement {\n    mover: Mover;\n}\n\nexport interface GroupperOnElement {\n    groupper: Groupper;\n}\n\nexport interface UncontrolledOnElement {\n    uncontrolled: UncontrolledProps;\n}\n\nexport interface ObservedOnElement {\n    observed: ObservedElementProps;\n}\n\nexport interface OutlineOnElement {\n    outline: OutlinedElementProps;\n}\n\nexport interface SysOnElement {\n    sys: SysProps;\n}\n\nexport interface RestorerProps {\n    type: RestorerType;\n    id?: string;\n}\n\nexport type TabsterAttributeProps = Partial<{\n    deloser: DeloserProps;\n    root: RootProps;\n    uncontrolled: UncontrolledProps;\n    modalizer: ModalizerProps;\n    focusable: FocusableProps;\n    groupper: GroupperProps;\n    mover: MoverProps;\n    observed: ObservedElementProps;\n    outline: OutlinedElementProps;\n    sys: SysProps;\n    restorer: RestorerProps;\n}>;\n\nexport interface TabsterAttributeOnElement {\n    string: string;\n    object: TabsterAttributeProps;\n}\n\nexport interface TabsterAugmentedAttributes {\n    [name: string]: string | null;\n}\n\nexport type TabsterOnElement = Partial<\n    RootOnElement &\n        DeloserOnElement &\n        ModalizerOnElement &\n        FocusableOnElement &\n        MoverOnElement &\n        GroupperOnElement &\n        ObservedOnElement &\n        OutlineOnElement &\n        UncontrolledOnElement &\n        SysOnElement &\n        RestorerOnElement\n>;\n\nexport interface OutlineElements {\n    container: HTMLDivElement;\n    left: HTMLDivElement;\n    top: HTMLDivElement;\n    right: HTMLDivElement;\n    bottom: HTMLDivElement;\n}\n\nexport interface TabsterElementStorageEntry {\n    tabster?: TabsterOnElement;\n    attr?: TabsterAttributeOnElement;\n    aug?: TabsterAugmentedAttributes;\n}\n\nexport interface TabsterElementStorage {\n    [uid: string]: TabsterElementStorageEntry;\n}\n\nexport type DisposeFunc = () => void;\n\nexport interface InternalAPI {\n    stopObserver(): void;\n    resumeObserver(syncState: boolean): void;\n}\n\nexport interface DummyInputObserver {\n    add(dummy: HTMLElement, callback: () => void): void;\n    remove(dummy: HTMLElement): void;\n    dispose(): void;\n    domChanged?(parent: HTMLElement): void;\n    updatePositions(\n        compute: (\n            scrollTopLeftCache: Map<\n                HTMLElement,\n                { scrollTop: number; scrollLeft: number } | null\n            >\n        ) => () => void\n    ): void;\n}\n\ninterface TabsterCoreInternal {\n    /** @internal */\n    groupper?: GroupperAPI;\n    /** @internal */\n    mover?: MoverAPI;\n    /** @internal */\n    outline?: OutlineAPI;\n    /** @internal */\n    deloser?: DeloserAPI;\n    /** @internal */\n    modalizer?: ModalizerAPI;\n    /** @internal */\n    observedElement?: ObservedElementAPI;\n    /** @internal */\n    crossOrigin?: CrossOriginAPI;\n    /** @internal */\n    internal: InternalAPI;\n    /** @internal */\n    restorer?: RestorerAPI;\n\n    /** @internal */\n    _dummyObserver: DummyInputObserver;\n\n    // The version of the tabster package this instance is on\n    /** @internal */\n    _version: string;\n\n    // No operation flag for the debugging purposes\n    /** @internal */\n    _noop: boolean;\n\n    /** @internal */\n    storageEntry(\n        element: HTMLElement,\n        addremove?: boolean\n    ): TabsterElementStorageEntry | undefined;\n    /** @internal */\n    getWindow: GetWindow;\n\n    /** @internal */\n    createTabster(noRefCount?: boolean, props?: TabsterCoreProps): Tabster;\n    /** @internal */\n    disposeTabster(wrapper: Tabster, allInstances?: boolean): void;\n    /** @internal */\n    forceCleanup(): void;\n\n    /** @internal */\n    queueInit(callback: () => void): void;\n    /** @internal */\n    drainInitQueue(): void;\n    /** @internal */\n    getParent: (el: Node) => Node | null;\n}\n\nexport interface Tabster {\n    keyboardNavigation: KeyboardNavigationState;\n    focusedElement: FocusedElementState;\n    focusable: FocusableAPI;\n    root: RootAPI;\n    uncontrolled: UncontrolledAPI;\n\n    /** @internal */\n    core: TabsterCore;\n}\n\nexport interface TabsterCore\n    extends Pick<TabsterCoreProps, \"controlTab\" | \"rootDummyInputs\">,\n        Disposable,\n        TabsterCoreInternal,\n        Omit<Tabster, \"core\"> {}\n\nexport interface TabsterCompat {\n    attributeTransform?: <P>(old: P) => TabsterAttributeProps;\n}\n", "/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as Types from \"./Types\";\n\nexport interface TabsterMoveFocusEventDetail {\n    by: \"mover\" | \"groupper\" | \"modalizer\" | \"root\" | \"deloser\";\n    owner: HTMLElement; // Mover, Groupper, Modalizer or Root, the initiator.\n    next: HTMLElement | null; // Next element to focus or null if Tabster wants to go outside of Root (i.e. to the address bar of the browser).\n    relatedEvent?: KeyboardEvent; // The original keyboard event that triggered the move.\n}\n\nexport interface MoverMoveFocusEventDetail {\n    key: Types.MoverKey;\n}\n\nexport interface MoverMemorizedElementEventDetail {\n    memorizedElement: HTMLElement | undefined;\n}\n\nexport interface GroupperMoveFocusEventDetail {\n    action: Types.GroupperMoveFocusAction;\n}\n\nexport interface ModalizerEventDetail {\n    id: string;\n    element: HTMLElement;\n}\n\nexport interface RootFocusEventDetail {\n    element: HTMLElement;\n}\n", "/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { GroupperMoveFocusAction, MoverKey } from \"./Types\";\nimport {\n    GroupperMoveFocusEvent,\n    MoverMoveFocusEvent,\n    MoverMemorizedElementEvent,\n} from \"./Events\";\n\n/** @deprecated This function is obsolete, use native element.dispatchEvent(new GroupperMoveFocusEvent(...)). */\nexport function dispatchGroupperMoveFocusEvent(\n    target: HTMLElement,\n    action: GroupperMoveFocusAction\n) {\n    return target.dispatchEvent(new GroupperMoveFocusEvent({ action }));\n}\n\n/** @deprecated This function is obsolete, use native element.dispatchEvent(new MoverMoveFocusEvent(...)). */\nexport function dispatchMoverMoveFocusEvent(\n    target: HTMLElement,\n    key: MoverKey\n) {\n    return target.dispatchEvent(new MoverMoveFocusEvent({ key }));\n}\n\n/** @deprecated This function is obsolete, use native element.dispatchEvent(new MoverMemorizedElementEvent(...)). */\nexport function dispatchMoverMemorizedElementEvent(\n    target: HTMLElement,\n    memorizedElement: HTMLElement | undefined\n) {\n    return target.dispatchEvent(\n        new MoverMemorizedElementEvent({ memorizedElement })\n    );\n}\n", "import * as React from 'react';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\nimport { createTabster, disposeTabster } from 'tabster';\nimport { useIsomorphicLayoutEffect, getParent } from '@fluentui/react-utilities';\n/**\n * Tries to get a tabster instance on the current window or creates a new one\n * Since Tabster is single instance only, feel free to call this hook to ensure Tabster exists if necessary\n *\n * @internal\n * @returns Tabster core instance\n */ export const useTabster = ()=>{\n    const { targetDocument } = useFluent();\n    const defaultView = (targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.defaultView) || undefined;\n    const shadowDOMAPI = defaultView === null || defaultView === void 0 ? void 0 : defaultView.__tabsterShadowDOMAPI;\n    const tabster = React.useMemo(()=>{\n        if (!defaultView) {\n            return null;\n        }\n        return createTabster(defaultView, {\n            autoRoot: {},\n            controlTab: false,\n            getParent,\n            checkUncontrolledTrappingFocus: (element)=>{\n                var _element_firstElementChild;\n                return !!((_element_firstElementChild = element.firstElementChild) === null || _element_firstElementChild === void 0 ? void 0 : _element_firstElementChild.hasAttribute('data-is-focus-trap-zone-bumper'));\n            },\n            DOMAPI: shadowDOMAPI\n        });\n    }, [\n        defaultView,\n        shadowDOMAPI\n    ]);\n    useIsomorphicLayoutEffect(()=>{\n        return ()=>{\n            if (tabster) {\n                disposeTabster(tabster);\n            }\n        };\n    }, [\n        tabster\n    ]);\n    return tabster;\n};\n", "import { getTabsterAttribute, TABSTER_ATTRIBUTE_NAME } from 'tabster';\nimport { useTabster } from './useTabster';\nimport * as React from 'react';\n/**\n * @internal\n * Hook that returns tabster attributes while ensuring tabster exists\n */ export const useTabsterAttributes = (props)=>{\n    // A tabster instance is not necessary to generate tabster attributes\n    // but calling the hook will ensure that a tabster instance exists internally and avoids consumers doing the same\n    useTabster();\n    const strAttr = getTabsterAttribute(props, true);\n    return React.useMemo(()=>({\n            [TABSTER_ATTRIBUTE_NAME]: strAttr\n        }), [\n        strAttr\n    ]);\n};\n", "import { getMover, MoverDirections } from 'tabster';\nimport { useTabsterAttributes } from './useTabsterAttributes';\nimport { useTabster } from './useTabster';\n/**\n * A hook that returns the necessary tabster attributes to support arrow key navigation\n * @param options - Options to configure keyboard navigation\n */ export const useArrowNavigationGroup = (options = {})=>{\n    const { circular, axis, memorizeCurrent = true, tabbable, ignoreDefaultKeydown, // eslint-disable-next-line @typescript-eslint/naming-convention\n    unstable_hasDefault } = options;\n    const tabster = useTabster();\n    if (tabster) {\n        getMover(tabster);\n    }\n    return useTabsterAttributes({\n        mover: {\n            cyclic: !!circular,\n            direction: axisToMoverDirection(axis !== null && axis !== void 0 ? axis : 'vertical'),\n            memorizeCurrent,\n            tabbable,\n            hasDefault: unstable_hasDefault\n        },\n        ...ignoreDefaultKeydown && {\n            focusable: {\n                ignoreKeydown: ignoreDefaultKeydown\n            }\n        }\n    });\n};\nfunction axisToMoverDirection(axis) {\n    switch(axis){\n        case 'horizontal':\n            return MoverDirections.Horizontal;\n        case 'grid':\n            return MoverDirections.Grid;\n        case 'grid-linear':\n            return MoverDirections.GridLinear;\n        case 'both':\n            return MoverDirections.Both;\n        case 'vertical':\n        default:\n            return MoverDirections.Vertical;\n    }\n}\n", "import { getGroupper, GroupperTabbabilities } from 'tabster';\nimport { useTabsterAttributes } from './useTabsterAttributes';\nimport { useTabster } from './useTabster';\n/**\n * A hook that returns the necessary tabster attributes to support groupping.\n * @param options - Options to configure keyboard navigation\n */ export const useFocusableGroup = (options)=>{\n    const tabster = useTabster();\n    if (tabster) {\n        getGroupper(tabster);\n    }\n    return useTabsterAttributes({\n        groupper: {\n            tabbability: getTabbability(options === null || options === void 0 ? void 0 : options.tabBehavior)\n        },\n        focusable: {\n            ignoreKeydown: options === null || options === void 0 ? void 0 : options.ignoreDefaultKeydown\n        }\n    });\n};\nconst getTabbability = (tabBehavior)=>{\n    switch(tabBehavior){\n        case 'unlimited':\n            return GroupperTabbabilities.Unlimited;\n        case 'limited':\n            return GroupperTabbabilities.Limited;\n        case 'limited-trap-focus':\n            return GroupperTabbabilities.LimitedTrapFocus;\n        default:\n            return undefined;\n    }\n};\n", "import * as React from 'react';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\nimport { useTabster } from './useTabster';\n/**\n * Returns a set of helper functions that will traverse focusable elements in the context of a root DOM element\n */ export const useFocusFinders = ()=>{\n    const tabster = useTabster();\n    const { targetDocument } = useFluent();\n    // Narrow props for now and let need dictate additional props in the future\n    const findAllFocusable = React.useCallback((container, acceptCondition)=>(tabster === null || tabster === void 0 ? void 0 : tabster.focusable.findAll({\n            container,\n            acceptCondition\n        })) || [], [\n        tabster\n    ]);\n    const findFirstFocusable = React.useCallback((container)=>tabster === null || tabster === void 0 ? void 0 : tabster.focusable.findFirst({\n            container\n        }), [\n        tabster\n    ]);\n    const findLastFocusable = React.useCallback((container)=>tabster === null || tabster === void 0 ? void 0 : tabster.focusable.findLast({\n            container\n        }), [\n        tabster\n    ]);\n    const findNextFocusable = React.useCallback((currentElement, options = {})=>{\n        if (!tabster || !targetDocument) {\n            return null;\n        }\n        const { container = targetDocument.body } = options;\n        return tabster.focusable.findNext({\n            currentElement,\n            container\n        });\n    }, [\n        tabster,\n        targetDocument\n    ]);\n    const findPrevFocusable = React.useCallback((currentElement, options = {})=>{\n        if (!tabster || !targetDocument) {\n            return null;\n        }\n        const { container = targetDocument.body } = options;\n        return tabster.focusable.findPrev({\n            currentElement,\n            container\n        });\n    }, [\n        tabster,\n        targetDocument\n    ]);\n    return {\n        findAllFocusable,\n        findFirstFocusable,\n        findLastFocusable,\n        findNextFocusable,\n        findPrevFocusable\n    };\n};\n", "import * as React from 'react';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\nimport { applyFocusVisiblePolyfill } from '../focus/focusVisiblePolyfill';\nexport function useFocusVisible(options = {}) {\n    const contextValue = useFluent();\n    const scopeRef = React.useRef(null);\n    var _options_targetDocument;\n    const targetDocument = (_options_targetDocument = options.targetDocument) !== null && _options_targetDocument !== void 0 ? _options_targetDocument : contextValue.targetDocument;\n    React.useEffect(()=>{\n        if ((targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.defaultView) && scopeRef.current) {\n            return applyFocusVisiblePolyfill(scopeRef.current, targetDocument.defaultView);\n        }\n    }, [\n        scopeRef,\n        targetDocument\n    ]);\n    return scopeRef;\n}\n", "export const KEYBOARD_NAV_ATTRIBUTE = 'data-keyboard-nav';\nexport const KEYBOARD_NAV_SELECTOR = `:global([${KEYBOARD_NAV_ATTRIBUTE}])`;\n/**\n * @internal\n */ export const FOCUS_VISIBLE_ATTR = 'data-fui-focus-visible';\n/**\n * @internal\n */ export const FOCUS_WITHIN_ATTR = 'data-fui-focus-within';\nexport const defaultOptions = {\n    style: {},\n    selector: 'focus',\n    customizeSelector: (selector)=>selector\n};\n", "import { isHTMLElement } from '@fluentui/react-utilities';\nimport { KEYBORG_FOCUSIN, createKeyborg, disposeKeyborg } from 'keyborg';\nimport { FOCUS_VISIBLE_ATTR } from './constants';\n/**\n * @internal\n * @param scope - Applies the ponyfill to all DOM children\n * @param targetWindow - window\n */ export function applyFocusVisiblePolyfill(scope, targetWindow) {\n    if (alreadyInScope(scope)) {\n        // Focus visible polyfill already applied at this scope\n        return ()=>undefined;\n    }\n    const state = {\n        current: undefined\n    };\n    const keyborg = createKeyborg(targetWindow);\n    function registerElementIfNavigating(el) {\n        if (keyborg.isNavigatingWithKeyboard() && isHTMLElement(el)) {\n            state.current = el;\n            el.setAttribute(FOCUS_VISIBLE_ATTR, '');\n        }\n    }\n    function disposeCurrentElement() {\n        if (state.current) {\n            state.current.removeAttribute(FOCUS_VISIBLE_ATTR);\n            state.current = undefined;\n        }\n    }\n    // When navigation mode changes remove the focus-visible selector\n    keyborg.subscribe((isNavigatingWithKeyboard)=>{\n        if (!isNavigatingWithKeyboard) {\n            disposeCurrentElement();\n        }\n    });\n    // Keyborg's focusin event is delegated so it's only registered once on the window\n    // and contains metadata about the focus event\n    const keyborgListener = (e)=>{\n        disposeCurrentElement();\n        const target = e.composedPath()[0];\n        registerElementIfNavigating(target);\n    };\n    // Make sure that when focus leaves the scope, the focus visible class is removed\n    const blurListener = (e)=>{\n        if (!e.relatedTarget || isHTMLElement(e.relatedTarget) && !scope.contains(e.relatedTarget)) {\n            disposeCurrentElement();\n        }\n    };\n    scope.addEventListener(KEYBORG_FOCUSIN, keyborgListener);\n    scope.addEventListener('focusout', blurListener);\n    scope.focusVisible = true;\n    if (scope.contains(targetWindow.document.activeElement)) {\n        registerElementIfNavigating(targetWindow.document.activeElement);\n    }\n    // Return disposer\n    return ()=>{\n        disposeCurrentElement();\n        scope.removeEventListener(KEYBORG_FOCUSIN, keyborgListener);\n        scope.removeEventListener('focusout', blurListener);\n        delete scope.focusVisible;\n        disposeKeyborg(keyborg);\n    };\n}\nfunction alreadyInScope(el) {\n    if (!el) {\n        return false;\n    }\n    if (el.focusVisible) {\n        return true;\n    }\n    return alreadyInScope(el === null || el === void 0 ? void 0 : el.parentElement);\n}\n", "import * as React from 'react';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\nimport { applyFocusWithinPolyfill } from '../focus/focusWithinPolyfill';\n/**\n * A ponyfill that allows `:focus-within` to support visibility based on keyboard/mouse navigation\n * like `:focus-visible` https://github.com/WICG/focus-visible/issues/151\n * @returns ref to the element that uses `:focus-within` styles\n */ export function useFocusWithin() {\n    const { targetDocument } = useFluent();\n    const elementRef = React.useRef(null);\n    React.useEffect(()=>{\n        if ((targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.defaultView) && elementRef.current) {\n            return applyFocusWithinPolyfill(elementRef.current, targetDocument.defaultView);\n        }\n    }, [\n        elementRef,\n        targetDocument\n    ]);\n    return elementRef;\n}\n", "import { KEYBORG_FOCUSIN, createKeyborg, disposeKeyborg } from 'keyborg';\nimport { FOCUS_WITHIN_ATTR } from './constants';\n/**\n * A ponyfill that allows `:focus-within` to support visibility based on keyboard/mouse navigation\n * like `:focus-visible` https://github.com/WICG/focus-visible/issues/151\n * @returns ref to the element that uses `:focus-within` styles\n */ export function applyFocusWithinPolyfill(element, win) {\n    const keyborg = createKeyborg(win);\n    // When navigation mode changes to mouse, remove the focus-within selector\n    keyborg.subscribe((isNavigatingWithKeyboard)=>{\n        if (!isNavigatingWithKeyboard) {\n            removeFocusWithinClass(element);\n        }\n    });\n    // Keyborg's focusin event is delegated so it's only registered once on the window\n    // and contains metadata about the focus event\n    const keyborgListener = (e)=>{\n        if (keyborg.isNavigatingWithKeyboard() && isHTMLElement(e.target)) {\n            // Griffel can't create chained global styles so use the parent element for now\n            applyFocusWithinClass(element);\n        }\n    };\n    // Make sure that when focus leaves the scope, the focus within class is removed\n    const blurListener = (e)=>{\n        if (!e.relatedTarget || isHTMLElement(e.relatedTarget) && !element.contains(e.relatedTarget)) {\n            removeFocusWithinClass(element);\n        }\n    };\n    element.addEventListener(KEYBORG_FOCUSIN, keyborgListener);\n    element.addEventListener('focusout', blurListener);\n    // Return disposer\n    return ()=>{\n        element.removeEventListener(KEYBORG_FOCUSIN, keyborgListener);\n        element.removeEventListener('focusout', blurListener);\n        disposeKeyborg(keyborg);\n    };\n}\nfunction applyFocusWithinClass(el) {\n    el.setAttribute(FOCUS_WITHIN_ATTR, '');\n}\nfunction removeFocusWithinClass(el) {\n    el.removeAttribute(FOCUS_WITHIN_ATTR);\n}\nfunction isHTMLElement(target) {\n    if (!target) {\n        return false;\n    }\n    return Boolean(target && typeof target === 'object' && 'classList' in target && 'contains' in target);\n}\n", "import { createKeyborg } from 'keyborg';\nimport { useEffect, useMemo, useRef } from 'react';\nimport { KEYBOARD_NAV_ATTRIBUTE } from '../focus/constants';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\n/**\n * Instantiates [keyborg](https://github.com/microsoft/keyborg) and adds `data-keyboard-nav`\n * attribute to a referenced element to ensure keyboard navigation awareness\n * synced to keyborg logic without having to cause a re-render on react tree.\n */ export function useKeyboardNavAttribute() {\n    const { targetDocument } = useFluent();\n    const keyborg = useMemo(()=>targetDocument && createKeyborg(targetDocument.defaultView), [\n        targetDocument\n    ]);\n    const ref = useRef(null);\n    useEffect(()=>{\n        if (keyborg) {\n            setBooleanAttribute(ref, KEYBOARD_NAV_ATTRIBUTE, keyborg.isNavigatingWithKeyboard());\n            const cb = (next)=>{\n                setBooleanAttribute(ref, KEYBOARD_NAV_ATTRIBUTE, next);\n            };\n            keyborg.subscribe(cb);\n            return ()=>keyborg.unsubscribe(cb);\n        }\n    }, [\n        keyborg\n    ]);\n    return ref;\n}\nfunction setBooleanAttribute(elementRef, attribute, value) {\n    if (!elementRef.current) {\n        return;\n    }\n    if (value) {\n        elementRef.current.setAttribute(attribute, '');\n    } else {\n        elementRef.current.removeAttribute(attribute);\n    }\n}\n", "import { useId } from '@fluentui/react-utilities';\nimport { useTabsterAttributes } from './useTabsterAttributes';\nimport { getModalizer, getRestorer, RestorerTypes } from 'tabster';\nimport { useTabster } from './useTabster';\n/**\n * Applies modal dialog behaviour through DOM attributes\n * Modal element will focus trap and hide other content on the page\n * The trigger element will be focused if focus is lost after the modal element is removed\n *\n * @returns DOM attributes to apply to the modal element and its trigger\n */ export const useModalAttributes = (options = {})=>{\n    const { trapFocus, alwaysFocusable, legacyTrapFocus } = options;\n    const tabster = useTabster();\n    // Initializes the modalizer and restorer APIs\n    if (tabster) {\n        getModalizer(tabster);\n        getRestorer(tabster);\n    }\n    const id = useId('modal-', options.id);\n    const modalAttributes = useTabsterAttributes({\n        restorer: {\n            type: RestorerTypes.Source\n        },\n        ...trapFocus && {\n            modalizer: {\n                id,\n                isOthersAccessible: !trapFocus,\n                isAlwaysAccessible: alwaysFocusable,\n                isTrapped: legacyTrapFocus && trapFocus\n            }\n        }\n    });\n    const triggerAttributes = useTabsterAttributes({\n        restorer: {\n            type: RestorerTypes.Target\n        }\n    });\n    return {\n        modalAttributes,\n        triggerAttributes\n    };\n};\n", "import { useTabster } from './useTabster';\nimport { getObservedElement } from 'tabster';\nimport { useTabsterAttributes } from './useTabsterAttributes';\nexport function useObservedElement(name) {\n    const tabster = useTabster();\n    if (tabster) {\n        getObservedElement(tabster);\n    }\n    return useTabsterAttributes({\n        observed: {\n            names: Array.isArray(name) ? name : [\n                name\n            ]\n        }\n    });\n}\n", "import * as React from 'react';\nimport { getObservedElement } from 'tabster';\nimport { useTabster } from './useTabster';\n/**\n *\n * @param name - The observed element to focus\n * @returns Function that will focus the\n */ export function useFocusObserved(name, options = {}) {\n    const { timeout = 1000 } = options;\n    const tabster = useTabster();\n    const observedAPI = tabster ? getObservedElement(tabster) : null;\n    return React.useCallback(()=>{\n        if (observedAPI) {\n            return observedAPI.requestFocus(name, timeout);\n        }\n        return {\n            result: Promise.resolve(false),\n            cancel: ()=>null\n        };\n    }, [\n        observedAPI,\n        name,\n        timeout\n    ]);\n}\n", "import { getRestorer, getTabsterAttribute, RestorerTypes } from 'tabster';\nimport { useTabster } from './useTabster';\n/**\n * Focus will be restored to the most recent target element when it is lost from a source\n * @returns Attribute to apply to the target element where focus is restored\n */ export function useRestoreFocusTarget() {\n    const tabster = useTabster();\n    // Initializes the restorer API\n    if (tabster) {\n        getRestorer(tabster);\n    }\n    return getTabsterAttribute({\n        restorer: {\n            type: RestorerTypes.Target\n        }\n    });\n}\n/**\n * Focus will be restored to the most recent target element when it is lost from a source\n * @returns Attribute to apply to the element that might lose focus\n */ export function useRestoreFocusSource() {\n    const tabster = useTabster();\n    // Initializes the restorer API\n    if (tabster) {\n        getRestorer(tabster);\n    }\n    return getTabsterAttribute({\n        restorer: {\n            type: RestorerTypes.Source\n        }\n    });\n}\n", "import { getTabsterAttribute } from 'tabster';\nimport { useTabster } from './useTabster';\n/**\n * Designates an area where tabster does not control focus\n * @returns Attribute to apply to the target element that should be uncontrolled by tabster\n */ export function useUncontrolledFocus() {\n    useTabster();\n    return getTabsterAttribute({\n        uncontrolled: {}\n    });\n}\n", "import { defaultOptions, FOCUS_VISIBLE_ATTR, FOCUS_WITHIN_ATTR } from './constants';\n/**\n * Creates a style for @see makeStyles that includes the necessary selectors for focus.\n * Should be used only when @see createFocusOutlineStyle does not fit requirements\n *\n * If you're using `createCustomFocusIndicatorStyle` instead of `createFocusOutlineStyle`\n * keep in mind that the default outline style is not going to be removed\n * (as it is in `createFocusOutlineStyle`),\n * and is your responsibility to manually remove it from your styles.\n *\n * @example\n * ```ts\n * // Link styles\n * const useStyles = makeStyles({\n  focusIndicator: createCustomFocusIndicatorStyle({\n    textDecorationColor: tokens.colorStrokeFocus2,\n    textDecorationLine: 'underline',\n    textDecorationStyle: 'double',\n    outlineStyle: 'none',\n  }),\n  // Common styles.\n  root: {\n    // ❗️ DO NOT FORGET TO REMOVE THE DEFAULT OUTLINE STYLE\n    ':focus-visible': {\n      outlineStyle: 'none',\n    },\n * ```\n *\n * @param style - styling applied on focus, defaults to @see getDefaultFocusOutlineStyles\n * @param options - Configure the style of the focus outline\n */ export function createCustomFocusIndicatorStyle(style, { selector: selectorType = defaultOptions.selector, customizeSelector = defaultOptions.customizeSelector } = defaultOptions) {\n    return {\n        [customizeSelector(createBaseSelector(selectorType))]: style\n    };\n}\nfunction createBaseSelector(selectorType) {\n    switch(selectorType){\n        case 'focus':\n            return `&[${FOCUS_VISIBLE_ATTR}]`;\n        case 'focus-within':\n            return `&[${FOCUS_WITHIN_ATTR}]:focus-within`;\n    }\n}\n", "export const tokens = {\n    // Color tokens\n    colorNeutralForeground1: 'var(--colorNeutralForeground1)',\n    colorNeutralForeground1Hover: 'var(--colorNeutralForeground1Hover)',\n    colorNeutralForeground1Pressed: 'var(--colorNeutralForeground1Pressed)',\n    colorNeutralForeground1Selected: 'var(--colorNeutralForeground1Selected)',\n    colorNeutralForeground2: 'var(--colorNeutralForeground2)',\n    colorNeutralForeground2Hover: 'var(--colorNeutralForeground2Hover)',\n    colorNeutralForeground2Pressed: 'var(--colorNeutralForeground2Pressed)',\n    colorNeutralForeground2Selected: 'var(--colorNeutralForeground2Selected)',\n    colorNeutralForeground2BrandHover: 'var(--colorNeutralForeground2BrandHover)',\n    colorNeutralForeground2BrandPressed: 'var(--colorNeutralForeground2BrandPressed)',\n    colorNeutralForeground2BrandSelected: 'var(--colorNeutralForeground2BrandSelected)',\n    colorNeutralForeground3: 'var(--colorNeutralForeground3)',\n    colorNeutralForeground3Hover: 'var(--colorNeutralForeground3Hover)',\n    colorNeutralForeground3Pressed: 'var(--colorNeutralForeground3Pressed)',\n    colorNeutralForeground3Selected: 'var(--colorNeutralForeground3Selected)',\n    colorNeutralForeground3BrandHover: 'var(--colorNeutralForeground3BrandHover)',\n    colorNeutralForeground3BrandPressed: 'var(--colorNeutralForeground3BrandPressed)',\n    colorNeutralForeground3BrandSelected: 'var(--colorNeutralForeground3BrandSelected)',\n    colorNeutralForeground4: 'var(--colorNeutralForeground4)',\n    colorNeutralForegroundDisabled: 'var(--colorNeutralForegroundDisabled)',\n    colorBrandForegroundLink: 'var(--colorBrandForegroundLink)',\n    colorBrandForegroundLinkHover: 'var(--colorBrandForegroundLinkHover)',\n    colorBrandForegroundLinkPressed: 'var(--colorBrandForegroundLinkPressed)',\n    colorBrandForegroundLinkSelected: 'var(--colorBrandForegroundLinkSelected)',\n    colorNeutralForeground2Link: 'var(--colorNeutralForeground2Link)',\n    colorNeutralForeground2LinkHover: 'var(--colorNeutralForeground2LinkHover)',\n    colorNeutralForeground2LinkPressed: 'var(--colorNeutralForeground2LinkPressed)',\n    colorNeutralForeground2LinkSelected: 'var(--colorNeutralForeground2LinkSelected)',\n    colorCompoundBrandForeground1: 'var(--colorCompoundBrandForeground1)',\n    colorCompoundBrandForeground1Hover: 'var(--colorCompoundBrandForeground1Hover)',\n    colorCompoundBrandForeground1Pressed: 'var(--colorCompoundBrandForeground1Pressed)',\n    colorNeutralForegroundOnBrand: 'var(--colorNeutralForegroundOnBrand)',\n    colorNeutralForegroundInverted: 'var(--colorNeutralForegroundInverted)',\n    colorNeutralForegroundInvertedHover: 'var(--colorNeutralForegroundInvertedHover)',\n    colorNeutralForegroundInvertedPressed: 'var(--colorNeutralForegroundInvertedPressed)',\n    colorNeutralForegroundInvertedSelected: 'var(--colorNeutralForegroundInvertedSelected)',\n    colorNeutralForegroundInverted2: 'var(--colorNeutralForegroundInverted2)',\n    colorNeutralForegroundStaticInverted: 'var(--colorNeutralForegroundStaticInverted)',\n    colorNeutralForegroundInvertedLink: 'var(--colorNeutralForegroundInvertedLink)',\n    colorNeutralForegroundInvertedLinkHover: 'var(--colorNeutralForegroundInvertedLinkHover)',\n    colorNeutralForegroundInvertedLinkPressed: 'var(--colorNeutralForegroundInvertedLinkPressed)',\n    colorNeutralForegroundInvertedLinkSelected: 'var(--colorNeutralForegroundInvertedLinkSelected)',\n    colorNeutralForegroundInvertedDisabled: 'var(--colorNeutralForegroundInvertedDisabled)',\n    colorBrandForeground1: 'var(--colorBrandForeground1)',\n    colorBrandForeground2: 'var(--colorBrandForeground2)',\n    colorBrandForeground2Hover: 'var(--colorBrandForeground2Hover)',\n    colorBrandForeground2Pressed: 'var(--colorBrandForeground2Pressed)',\n    colorNeutralForeground1Static: 'var(--colorNeutralForeground1Static)',\n    colorBrandForegroundInverted: 'var(--colorBrandForegroundInverted)',\n    colorBrandForegroundInvertedHover: 'var(--colorBrandForegroundInvertedHover)',\n    colorBrandForegroundInvertedPressed: 'var(--colorBrandForegroundInvertedPressed)',\n    colorBrandForegroundOnLight: 'var(--colorBrandForegroundOnLight)',\n    colorBrandForegroundOnLightHover: 'var(--colorBrandForegroundOnLightHover)',\n    colorBrandForegroundOnLightPressed: 'var(--colorBrandForegroundOnLightPressed)',\n    colorBrandForegroundOnLightSelected: 'var(--colorBrandForegroundOnLightSelected)',\n    colorNeutralBackground1: 'var(--colorNeutralBackground1)',\n    colorNeutralBackground1Hover: 'var(--colorNeutralBackground1Hover)',\n    colorNeutralBackground1Pressed: 'var(--colorNeutralBackground1Pressed)',\n    colorNeutralBackground1Selected: 'var(--colorNeutralBackground1Selected)',\n    colorNeutralBackground2: 'var(--colorNeutralBackground2)',\n    colorNeutralBackground2Hover: 'var(--colorNeutralBackground2Hover)',\n    colorNeutralBackground2Pressed: 'var(--colorNeutralBackground2Pressed)',\n    colorNeutralBackground2Selected: 'var(--colorNeutralBackground2Selected)',\n    colorNeutralBackground3: 'var(--colorNeutralBackground3)',\n    colorNeutralBackground3Hover: 'var(--colorNeutralBackground3Hover)',\n    colorNeutralBackground3Pressed: 'var(--colorNeutralBackground3Pressed)',\n    colorNeutralBackground3Selected: 'var(--colorNeutralBackground3Selected)',\n    colorNeutralBackground4: 'var(--colorNeutralBackground4)',\n    colorNeutralBackground4Hover: 'var(--colorNeutralBackground4Hover)',\n    colorNeutralBackground4Pressed: 'var(--colorNeutralBackground4Pressed)',\n    colorNeutralBackground4Selected: 'var(--colorNeutralBackground4Selected)',\n    colorNeutralBackground5: 'var(--colorNeutralBackground5)',\n    colorNeutralBackground5Hover: 'var(--colorNeutralBackground5Hover)',\n    colorNeutralBackground5Pressed: 'var(--colorNeutralBackground5Pressed)',\n    colorNeutralBackground5Selected: 'var(--colorNeutralBackground5Selected)',\n    colorNeutralBackground6: 'var(--colorNeutralBackground6)',\n    colorNeutralBackgroundInverted: 'var(--colorNeutralBackgroundInverted)',\n    colorNeutralBackgroundStatic: 'var(--colorNeutralBackgroundStatic)',\n    colorNeutralBackgroundAlpha: 'var(--colorNeutralBackgroundAlpha)',\n    colorNeutralBackgroundAlpha2: 'var(--colorNeutralBackgroundAlpha2)',\n    colorSubtleBackground: 'var(--colorSubtleBackground)',\n    colorSubtleBackgroundHover: 'var(--colorSubtleBackgroundHover)',\n    colorSubtleBackgroundPressed: 'var(--colorSubtleBackgroundPressed)',\n    colorSubtleBackgroundSelected: 'var(--colorSubtleBackgroundSelected)',\n    colorSubtleBackgroundLightAlphaHover: 'var(--colorSubtleBackgroundLightAlphaHover)',\n    colorSubtleBackgroundLightAlphaPressed: 'var(--colorSubtleBackgroundLightAlphaPressed)',\n    colorSubtleBackgroundLightAlphaSelected: 'var(--colorSubtleBackgroundLightAlphaSelected)',\n    colorSubtleBackgroundInverted: 'var(--colorSubtleBackgroundInverted)',\n    colorSubtleBackgroundInvertedHover: 'var(--colorSubtleBackgroundInvertedHover)',\n    colorSubtleBackgroundInvertedPressed: 'var(--colorSubtleBackgroundInvertedPressed)',\n    colorSubtleBackgroundInvertedSelected: 'var(--colorSubtleBackgroundInvertedSelected)',\n    colorTransparentBackground: 'var(--colorTransparentBackground)',\n    colorTransparentBackgroundHover: 'var(--colorTransparentBackgroundHover)',\n    colorTransparentBackgroundPressed: 'var(--colorTransparentBackgroundPressed)',\n    colorTransparentBackgroundSelected: 'var(--colorTransparentBackgroundSelected)',\n    colorNeutralBackgroundDisabled: 'var(--colorNeutralBackgroundDisabled)',\n    colorNeutralBackgroundInvertedDisabled: 'var(--colorNeutralBackgroundInvertedDisabled)',\n    colorNeutralStencil1: 'var(--colorNeutralStencil1)',\n    colorNeutralStencil2: 'var(--colorNeutralStencil2)',\n    colorNeutralStencil1Alpha: 'var(--colorNeutralStencil1Alpha)',\n    colorNeutralStencil2Alpha: 'var(--colorNeutralStencil2Alpha)',\n    colorBackgroundOverlay: 'var(--colorBackgroundOverlay)',\n    colorScrollbarOverlay: 'var(--colorScrollbarOverlay)',\n    colorBrandBackground: 'var(--colorBrandBackground)',\n    colorBrandBackgroundHover: 'var(--colorBrandBackgroundHover)',\n    colorBrandBackgroundPressed: 'var(--colorBrandBackgroundPressed)',\n    colorBrandBackgroundSelected: 'var(--colorBrandBackgroundSelected)',\n    colorCompoundBrandBackground: 'var(--colorCompoundBrandBackground)',\n    colorCompoundBrandBackgroundHover: 'var(--colorCompoundBrandBackgroundHover)',\n    colorCompoundBrandBackgroundPressed: 'var(--colorCompoundBrandBackgroundPressed)',\n    colorBrandBackgroundStatic: 'var(--colorBrandBackgroundStatic)',\n    colorBrandBackground2: 'var(--colorBrandBackground2)',\n    colorBrandBackground2Hover: 'var(--colorBrandBackground2Hover)',\n    colorBrandBackground2Pressed: 'var(--colorBrandBackground2Pressed)',\n    colorBrandBackground3Static: 'var(--colorBrandBackground3Static)',\n    colorBrandBackground4Static: 'var(--colorBrandBackground4Static)',\n    colorBrandBackgroundInverted: 'var(--colorBrandBackgroundInverted)',\n    colorBrandBackgroundInvertedHover: 'var(--colorBrandBackgroundInvertedHover)',\n    colorBrandBackgroundInvertedPressed: 'var(--colorBrandBackgroundInvertedPressed)',\n    colorBrandBackgroundInvertedSelected: 'var(--colorBrandBackgroundInvertedSelected)',\n    colorNeutralCardBackground: 'var(--colorNeutralCardBackground)',\n    colorNeutralCardBackgroundHover: 'var(--colorNeutralCardBackgroundHover)',\n    colorNeutralCardBackgroundPressed: 'var(--colorNeutralCardBackgroundPressed)',\n    colorNeutralCardBackgroundSelected: 'var(--colorNeutralCardBackgroundSelected)',\n    colorNeutralCardBackgroundDisabled: 'var(--colorNeutralCardBackgroundDisabled)',\n    colorNeutralStrokeAccessible: 'var(--colorNeutralStrokeAccessible)',\n    colorNeutralStrokeAccessibleHover: 'var(--colorNeutralStrokeAccessibleHover)',\n    colorNeutralStrokeAccessiblePressed: 'var(--colorNeutralStrokeAccessiblePressed)',\n    colorNeutralStrokeAccessibleSelected: 'var(--colorNeutralStrokeAccessibleSelected)',\n    colorNeutralStroke1: 'var(--colorNeutralStroke1)',\n    colorNeutralStroke1Hover: 'var(--colorNeutralStroke1Hover)',\n    colorNeutralStroke1Pressed: 'var(--colorNeutralStroke1Pressed)',\n    colorNeutralStroke1Selected: 'var(--colorNeutralStroke1Selected)',\n    colorNeutralStroke2: 'var(--colorNeutralStroke2)',\n    colorNeutralStroke3: 'var(--colorNeutralStroke3)',\n    colorNeutralStrokeSubtle: 'var(--colorNeutralStrokeSubtle)',\n    colorNeutralStrokeOnBrand: 'var(--colorNeutralStrokeOnBrand)',\n    colorNeutralStrokeOnBrand2: 'var(--colorNeutralStrokeOnBrand2)',\n    colorNeutralStrokeOnBrand2Hover: 'var(--colorNeutralStrokeOnBrand2Hover)',\n    colorNeutralStrokeOnBrand2Pressed: 'var(--colorNeutralStrokeOnBrand2Pressed)',\n    colorNeutralStrokeOnBrand2Selected: 'var(--colorNeutralStrokeOnBrand2Selected)',\n    colorBrandStroke1: 'var(--colorBrandStroke1)',\n    colorBrandStroke2: 'var(--colorBrandStroke2)',\n    colorBrandStroke2Hover: 'var(--colorBrandStroke2Hover)',\n    colorBrandStroke2Pressed: 'var(--colorBrandStroke2Pressed)',\n    colorBrandStroke2Contrast: 'var(--colorBrandStroke2Contrast)',\n    colorCompoundBrandStroke: 'var(--colorCompoundBrandStroke)',\n    colorCompoundBrandStrokeHover: 'var(--colorCompoundBrandStrokeHover)',\n    colorCompoundBrandStrokePressed: 'var(--colorCompoundBrandStrokePressed)',\n    colorNeutralStrokeDisabled: 'var(--colorNeutralStrokeDisabled)',\n    colorNeutralStrokeInvertedDisabled: 'var(--colorNeutralStrokeInvertedDisabled)',\n    colorTransparentStroke: 'var(--colorTransparentStroke)',\n    colorTransparentStrokeInteractive: 'var(--colorTransparentStrokeInteractive)',\n    colorTransparentStrokeDisabled: 'var(--colorTransparentStrokeDisabled)',\n    colorNeutralStrokeAlpha: 'var(--colorNeutralStrokeAlpha)',\n    colorNeutralStrokeAlpha2: 'var(--colorNeutralStrokeAlpha2)',\n    colorStrokeFocus1: 'var(--colorStrokeFocus1)',\n    colorStrokeFocus2: 'var(--colorStrokeFocus2)',\n    colorNeutralShadowAmbient: 'var(--colorNeutralShadowAmbient)',\n    colorNeutralShadowKey: 'var(--colorNeutralShadowKey)',\n    colorNeutralShadowAmbientLighter: 'var(--colorNeutralShadowAmbientLighter)',\n    colorNeutralShadowKeyLighter: 'var(--colorNeutralShadowKeyLighter)',\n    colorNeutralShadowAmbientDarker: 'var(--colorNeutralShadowAmbientDarker)',\n    colorNeutralShadowKeyDarker: 'var(--colorNeutralShadowKeyDarker)',\n    colorBrandShadowAmbient: 'var(--colorBrandShadowAmbient)',\n    colorBrandShadowKey: 'var(--colorBrandShadowKey)',\n    // Color palette tokens\n    // Color palette red tokens\n    colorPaletteRedBackground1: 'var(--colorPaletteRedBackground1)',\n    colorPaletteRedBackground2: 'var(--colorPaletteRedBackground2)',\n    colorPaletteRedBackground3: 'var(--colorPaletteRedBackground3)',\n    colorPaletteRedBorderActive: 'var(--colorPaletteRedBorderActive)',\n    colorPaletteRedBorder1: 'var(--colorPaletteRedBorder1)',\n    colorPaletteRedBorder2: 'var(--colorPaletteRedBorder2)',\n    colorPaletteRedForeground1: 'var(--colorPaletteRedForeground1)',\n    colorPaletteRedForeground2: 'var(--colorPaletteRedForeground2)',\n    colorPaletteRedForeground3: 'var(--colorPaletteRedForeground3)',\n    colorPaletteRedForegroundInverted: 'var(--colorPaletteRedForegroundInverted)',\n    // Color palette green tokens\n    colorPaletteGreenBackground1: 'var(--colorPaletteGreenBackground1)',\n    colorPaletteGreenBackground2: 'var(--colorPaletteGreenBackground2)',\n    colorPaletteGreenBackground3: 'var(--colorPaletteGreenBackground3)',\n    colorPaletteGreenBorderActive: 'var(--colorPaletteGreenBorderActive)',\n    colorPaletteGreenBorder1: 'var(--colorPaletteGreenBorder1)',\n    colorPaletteGreenBorder2: 'var(--colorPaletteGreenBorder2)',\n    colorPaletteGreenForeground1: 'var(--colorPaletteGreenForeground1)',\n    colorPaletteGreenForeground2: 'var(--colorPaletteGreenForeground2)',\n    colorPaletteGreenForeground3: 'var(--colorPaletteGreenForeground3)',\n    colorPaletteGreenForegroundInverted: 'var(--colorPaletteGreenForegroundInverted)',\n    // Color palette dark orange tokens\n    colorPaletteDarkOrangeBackground1: 'var(--colorPaletteDarkOrangeBackground1)',\n    colorPaletteDarkOrangeBackground2: 'var(--colorPaletteDarkOrangeBackground2)',\n    colorPaletteDarkOrangeBackground3: 'var(--colorPaletteDarkOrangeBackground3)',\n    colorPaletteDarkOrangeBorderActive: 'var(--colorPaletteDarkOrangeBorderActive)',\n    colorPaletteDarkOrangeBorder1: 'var(--colorPaletteDarkOrangeBorder1)',\n    colorPaletteDarkOrangeBorder2: 'var(--colorPaletteDarkOrangeBorder2)',\n    colorPaletteDarkOrangeForeground1: 'var(--colorPaletteDarkOrangeForeground1)',\n    colorPaletteDarkOrangeForeground2: 'var(--colorPaletteDarkOrangeForeground2)',\n    colorPaletteDarkOrangeForeground3: 'var(--colorPaletteDarkOrangeForeground3)',\n    // Color palette yellow tokens\n    colorPaletteYellowBackground1: 'var(--colorPaletteYellowBackground1)',\n    colorPaletteYellowBackground2: 'var(--colorPaletteYellowBackground2)',\n    colorPaletteYellowBackground3: 'var(--colorPaletteYellowBackground3)',\n    colorPaletteYellowBorderActive: 'var(--colorPaletteYellowBorderActive)',\n    colorPaletteYellowBorder1: 'var(--colorPaletteYellowBorder1)',\n    colorPaletteYellowBorder2: 'var(--colorPaletteYellowBorder2)',\n    colorPaletteYellowForeground1: 'var(--colorPaletteYellowForeground1)',\n    colorPaletteYellowForeground2: 'var(--colorPaletteYellowForeground2)',\n    colorPaletteYellowForeground3: 'var(--colorPaletteYellowForeground3)',\n    colorPaletteYellowForegroundInverted: 'var(--colorPaletteYellowForegroundInverted)',\n    // Color palette berry tokens\n    colorPaletteBerryBackground1: 'var(--colorPaletteBerryBackground1)',\n    colorPaletteBerryBackground2: 'var(--colorPaletteBerryBackground2)',\n    colorPaletteBerryBackground3: 'var(--colorPaletteBerryBackground3)',\n    colorPaletteBerryBorderActive: 'var(--colorPaletteBerryBorderActive)',\n    colorPaletteBerryBorder1: 'var(--colorPaletteBerryBorder1)',\n    colorPaletteBerryBorder2: 'var(--colorPaletteBerryBorder2)',\n    colorPaletteBerryForeground1: 'var(--colorPaletteBerryForeground1)',\n    colorPaletteBerryForeground2: 'var(--colorPaletteBerryForeground2)',\n    colorPaletteBerryForeground3: 'var(--colorPaletteBerryForeground3)',\n    // Color palette marigold tokens\n    colorPaletteMarigoldBackground1: 'var(--colorPaletteMarigoldBackground1)',\n    colorPaletteMarigoldBackground2: 'var(--colorPaletteMarigoldBackground2)',\n    colorPaletteMarigoldBackground3: 'var(--colorPaletteMarigoldBackground3)',\n    colorPaletteMarigoldBorderActive: 'var(--colorPaletteMarigoldBorderActive)',\n    colorPaletteMarigoldBorder1: 'var(--colorPaletteMarigoldBorder1)',\n    colorPaletteMarigoldBorder2: 'var(--colorPaletteMarigoldBorder2)',\n    colorPaletteMarigoldForeground1: 'var(--colorPaletteMarigoldForeground1)',\n    colorPaletteMarigoldForeground2: 'var(--colorPaletteMarigoldForeground2)',\n    colorPaletteMarigoldForeground3: 'var(--colorPaletteMarigoldForeground3)',\n    // Color palette light green tokens\n    colorPaletteLightGreenBackground1: 'var(--colorPaletteLightGreenBackground1)',\n    colorPaletteLightGreenBackground2: 'var(--colorPaletteLightGreenBackground2)',\n    colorPaletteLightGreenBackground3: 'var(--colorPaletteLightGreenBackground3)',\n    colorPaletteLightGreenBorderActive: 'var(--colorPaletteLightGreenBorderActive)',\n    colorPaletteLightGreenBorder1: 'var(--colorPaletteLightGreenBorder1)',\n    colorPaletteLightGreenBorder2: 'var(--colorPaletteLightGreenBorder2)',\n    colorPaletteLightGreenForeground1: 'var(--colorPaletteLightGreenForeground1)',\n    colorPaletteLightGreenForeground2: 'var(--colorPaletteLightGreenForeground2)',\n    colorPaletteLightGreenForeground3: 'var(--colorPaletteLightGreenForeground3)',\n    // Color palette anchor tokens\n    colorPaletteAnchorBackground2: 'var(--colorPaletteAnchorBackground2)',\n    colorPaletteAnchorBorderActive: 'var(--colorPaletteAnchorBorderActive)',\n    colorPaletteAnchorForeground2: 'var(--colorPaletteAnchorForeground2)',\n    // Color palette beige tokens\n    colorPaletteBeigeBackground2: 'var(--colorPaletteBeigeBackground2)',\n    colorPaletteBeigeBorderActive: 'var(--colorPaletteBeigeBorderActive)',\n    colorPaletteBeigeForeground2: 'var(--colorPaletteBeigeForeground2)',\n    // Color palette blue tokens\n    colorPaletteBlueBackground2: 'var(--colorPaletteBlueBackground2)',\n    colorPaletteBlueBorderActive: 'var(--colorPaletteBlueBorderActive)',\n    colorPaletteBlueForeground2: 'var(--colorPaletteBlueForeground2)',\n    // Color palette brass tokens\n    colorPaletteBrassBackground2: 'var(--colorPaletteBrassBackground2)',\n    colorPaletteBrassBorderActive: 'var(--colorPaletteBrassBorderActive)',\n    colorPaletteBrassForeground2: 'var(--colorPaletteBrassForeground2)',\n    // Color palette brown tokens\n    colorPaletteBrownBackground2: 'var(--colorPaletteBrownBackground2)',\n    colorPaletteBrownBorderActive: 'var(--colorPaletteBrownBorderActive)',\n    colorPaletteBrownForeground2: 'var(--colorPaletteBrownForeground2)',\n    // Color palette cornflower tokens\n    colorPaletteCornflowerBackground2: 'var(--colorPaletteCornflowerBackground2)',\n    colorPaletteCornflowerBorderActive: 'var(--colorPaletteCornflowerBorderActive)',\n    colorPaletteCornflowerForeground2: 'var(--colorPaletteCornflowerForeground2)',\n    // Color palette cranberry tokens\n    colorPaletteCranberryBackground2: 'var(--colorPaletteCranberryBackground2)',\n    colorPaletteCranberryBorderActive: 'var(--colorPaletteCranberryBorderActive)',\n    colorPaletteCranberryForeground2: 'var(--colorPaletteCranberryForeground2)',\n    // Color palette dark green tokens\n    colorPaletteDarkGreenBackground2: 'var(--colorPaletteDarkGreenBackground2)',\n    colorPaletteDarkGreenBorderActive: 'var(--colorPaletteDarkGreenBorderActive)',\n    colorPaletteDarkGreenForeground2: 'var(--colorPaletteDarkGreenForeground2)',\n    // Color palette dark red tokens\n    colorPaletteDarkRedBackground2: 'var(--colorPaletteDarkRedBackground2)',\n    colorPaletteDarkRedBorderActive: 'var(--colorPaletteDarkRedBorderActive)',\n    colorPaletteDarkRedForeground2: 'var(--colorPaletteDarkRedForeground2)',\n    // Color palette forest tokens\n    colorPaletteForestBackground2: 'var(--colorPaletteForestBackground2)',\n    colorPaletteForestBorderActive: 'var(--colorPaletteForestBorderActive)',\n    colorPaletteForestForeground2: 'var(--colorPaletteForestForeground2)',\n    // Color palette gold tokens\n    colorPaletteGoldBackground2: 'var(--colorPaletteGoldBackground2)',\n    colorPaletteGoldBorderActive: 'var(--colorPaletteGoldBorderActive)',\n    colorPaletteGoldForeground2: 'var(--colorPaletteGoldForeground2)',\n    // Color palette grape tokens\n    colorPaletteGrapeBackground2: 'var(--colorPaletteGrapeBackground2)',\n    colorPaletteGrapeBorderActive: 'var(--colorPaletteGrapeBorderActive)',\n    colorPaletteGrapeForeground2: 'var(--colorPaletteGrapeForeground2)',\n    // Color palette lavender tokens\n    colorPaletteLavenderBackground2: 'var(--colorPaletteLavenderBackground2)',\n    colorPaletteLavenderBorderActive: 'var(--colorPaletteLavenderBorderActive)',\n    colorPaletteLavenderForeground2: 'var(--colorPaletteLavenderForeground2)',\n    // Color palette light teal tokens\n    colorPaletteLightTealBackground2: 'var(--colorPaletteLightTealBackground2)',\n    colorPaletteLightTealBorderActive: 'var(--colorPaletteLightTealBorderActive)',\n    colorPaletteLightTealForeground2: 'var(--colorPaletteLightTealForeground2)',\n    // Color palette lilac tokens\n    colorPaletteLilacBackground2: 'var(--colorPaletteLilacBackground2)',\n    colorPaletteLilacBorderActive: 'var(--colorPaletteLilacBorderActive)',\n    colorPaletteLilacForeground2: 'var(--colorPaletteLilacForeground2)',\n    // Color palette magenta tokens\n    colorPaletteMagentaBackground2: 'var(--colorPaletteMagentaBackground2)',\n    colorPaletteMagentaBorderActive: 'var(--colorPaletteMagentaBorderActive)',\n    colorPaletteMagentaForeground2: 'var(--colorPaletteMagentaForeground2)',\n    // Color palette mink tokens\n    colorPaletteMinkBackground2: 'var(--colorPaletteMinkBackground2)',\n    colorPaletteMinkBorderActive: 'var(--colorPaletteMinkBorderActive)',\n    colorPaletteMinkForeground2: 'var(--colorPaletteMinkForeground2)',\n    // Color palette navy tokens\n    colorPaletteNavyBackground2: 'var(--colorPaletteNavyBackground2)',\n    colorPaletteNavyBorderActive: 'var(--colorPaletteNavyBorderActive)',\n    colorPaletteNavyForeground2: 'var(--colorPaletteNavyForeground2)',\n    // Color palette peach tokens\n    colorPalettePeachBackground2: 'var(--colorPalettePeachBackground2)',\n    colorPalettePeachBorderActive: 'var(--colorPalettePeachBorderActive)',\n    colorPalettePeachForeground2: 'var(--colorPalettePeachForeground2)',\n    // Color palette pink tokens\n    colorPalettePinkBackground2: 'var(--colorPalettePinkBackground2)',\n    colorPalettePinkBorderActive: 'var(--colorPalettePinkBorderActive)',\n    colorPalettePinkForeground2: 'var(--colorPalettePinkForeground2)',\n    // Color palette platinum tokens\n    colorPalettePlatinumBackground2: 'var(--colorPalettePlatinumBackground2)',\n    colorPalettePlatinumBorderActive: 'var(--colorPalettePlatinumBorderActive)',\n    colorPalettePlatinumForeground2: 'var(--colorPalettePlatinumForeground2)',\n    // Color palette plum tokens\n    colorPalettePlumBackground2: 'var(--colorPalettePlumBackground2)',\n    colorPalettePlumBorderActive: 'var(--colorPalettePlumBorderActive)',\n    colorPalettePlumForeground2: 'var(--colorPalettePlumForeground2)',\n    // Color palette pumpkin tokens\n    colorPalettePumpkinBackground2: 'var(--colorPalettePumpkinBackground2)',\n    colorPalettePumpkinBorderActive: 'var(--colorPalettePumpkinBorderActive)',\n    colorPalettePumpkinForeground2: 'var(--colorPalettePumpkinForeground2)',\n    // Color palette purple tokens\n    colorPalettePurpleBackground2: 'var(--colorPalettePurpleBackground2)',\n    colorPalettePurpleBorderActive: 'var(--colorPalettePurpleBorderActive)',\n    colorPalettePurpleForeground2: 'var(--colorPalettePurpleForeground2)',\n    // Color palette royal blue tokens\n    colorPaletteRoyalBlueBackground2: 'var(--colorPaletteRoyalBlueBackground2)',\n    colorPaletteRoyalBlueBorderActive: 'var(--colorPaletteRoyalBlueBorderActive)',\n    colorPaletteRoyalBlueForeground2: 'var(--colorPaletteRoyalBlueForeground2)',\n    // Color palette seafoam tokens\n    colorPaletteSeafoamBackground2: 'var(--colorPaletteSeafoamBackground2)',\n    colorPaletteSeafoamBorderActive: 'var(--colorPaletteSeafoamBorderActive)',\n    colorPaletteSeafoamForeground2: 'var(--colorPaletteSeafoamForeground2)',\n    // Color palette steel tokens\n    colorPaletteSteelBackground2: 'var(--colorPaletteSteelBackground2)',\n    colorPaletteSteelBorderActive: 'var(--colorPaletteSteelBorderActive)',\n    colorPaletteSteelForeground2: 'var(--colorPaletteSteelForeground2)',\n    // Color palette teal tokens\n    colorPaletteTealBackground2: 'var(--colorPaletteTealBackground2)',\n    colorPaletteTealBorderActive: 'var(--colorPaletteTealBorderActive)',\n    colorPaletteTealForeground2: 'var(--colorPaletteTealForeground2)',\n    // Color status success tokens\n    colorStatusSuccessBackground1: 'var(--colorStatusSuccessBackground1)',\n    colorStatusSuccessBackground2: 'var(--colorStatusSuccessBackground2)',\n    colorStatusSuccessBackground3: 'var(--colorStatusSuccessBackground3)',\n    colorStatusSuccessForeground1: 'var(--colorStatusSuccessForeground1)',\n    colorStatusSuccessForeground2: 'var(--colorStatusSuccessForeground2)',\n    colorStatusSuccessForeground3: 'var(--colorStatusSuccessForeground3)',\n    colorStatusSuccessForegroundInverted: 'var(--colorStatusSuccessForegroundInverted)',\n    colorStatusSuccessBorderActive: 'var(--colorStatusSuccessBorderActive)',\n    colorStatusSuccessBorder1: 'var(--colorStatusSuccessBorder1)',\n    colorStatusSuccessBorder2: 'var(--colorStatusSuccessBorder2)',\n    // Color status warning tokens\n    colorStatusWarningBackground1: 'var(--colorStatusWarningBackground1)',\n    colorStatusWarningBackground2: 'var(--colorStatusWarningBackground2)',\n    colorStatusWarningBackground3: 'var(--colorStatusWarningBackground3)',\n    colorStatusWarningForeground1: 'var(--colorStatusWarningForeground1)',\n    colorStatusWarningForeground2: 'var(--colorStatusWarningForeground2)',\n    colorStatusWarningForeground3: 'var(--colorStatusWarningForeground3)',\n    colorStatusWarningForegroundInverted: 'var(--colorStatusWarningForegroundInverted)',\n    colorStatusWarningBorderActive: 'var(--colorStatusWarningBorderActive)',\n    colorStatusWarningBorder1: 'var(--colorStatusWarningBorder1)',\n    colorStatusWarningBorder2: 'var(--colorStatusWarningBorder2)',\n    // Color status danger tokens\n    colorStatusDangerBackground1: 'var(--colorStatusDangerBackground1)',\n    colorStatusDangerBackground2: 'var(--colorStatusDangerBackground2)',\n    colorStatusDangerBackground3: 'var(--colorStatusDangerBackground3)',\n    colorStatusDangerBackground3Hover: 'var(--colorStatusDangerBackground3Hover)',\n    colorStatusDangerBackground3Pressed: 'var(--colorStatusDangerBackground3Pressed)',\n    colorStatusDangerForeground1: 'var(--colorStatusDangerForeground1)',\n    colorStatusDangerForeground2: 'var(--colorStatusDangerForeground2)',\n    colorStatusDangerForeground3: 'var(--colorStatusDangerForeground3)',\n    colorStatusDangerForegroundInverted: 'var(--colorStatusDangerForegroundInverted)',\n    colorStatusDangerBorderActive: 'var(--colorStatusDangerBorderActive)',\n    colorStatusDangerBorder1: 'var(--colorStatusDangerBorder1)',\n    colorStatusDangerBorder2: 'var(--colorStatusDangerBorder2)',\n    // Border radius tokens\n    borderRadiusNone: 'var(--borderRadiusNone)',\n    borderRadiusSmall: 'var(--borderRadiusSmall)',\n    borderRadiusMedium: 'var(--borderRadiusMedium)',\n    borderRadiusLarge: 'var(--borderRadiusLarge)',\n    borderRadiusXLarge: 'var(--borderRadiusXLarge)',\n    borderRadiusCircular: 'var(--borderRadiusCircular)',\n    // Font family tokens\n    fontFamilyBase: 'var(--fontFamilyBase)',\n    fontFamilyMonospace: 'var(--fontFamilyMonospace)',\n    fontFamilyNumeric: 'var(--fontFamilyNumeric)',\n    // Font size tokens\n    fontSizeBase100: 'var(--fontSizeBase100)',\n    fontSizeBase200: 'var(--fontSizeBase200)',\n    fontSizeBase300: 'var(--fontSizeBase300)',\n    fontSizeBase400: 'var(--fontSizeBase400)',\n    fontSizeBase500: 'var(--fontSizeBase500)',\n    fontSizeBase600: 'var(--fontSizeBase600)',\n    fontSizeHero700: 'var(--fontSizeHero700)',\n    fontSizeHero800: 'var(--fontSizeHero800)',\n    fontSizeHero900: 'var(--fontSizeHero900)',\n    fontSizeHero1000: 'var(--fontSizeHero1000)',\n    // Font weight tokens\n    fontWeightRegular: 'var(--fontWeightRegular)',\n    fontWeightMedium: 'var(--fontWeightMedium)',\n    fontWeightSemibold: 'var(--fontWeightSemibold)',\n    fontWeightBold: 'var(--fontWeightBold)',\n    // Line height tokens\n    lineHeightBase100: 'var(--lineHeightBase100)',\n    lineHeightBase200: 'var(--lineHeightBase200)',\n    lineHeightBase300: 'var(--lineHeightBase300)',\n    lineHeightBase400: 'var(--lineHeightBase400)',\n    lineHeightBase500: 'var(--lineHeightBase500)',\n    lineHeightBase600: 'var(--lineHeightBase600)',\n    lineHeightHero700: 'var(--lineHeightHero700)',\n    lineHeightHero800: 'var(--lineHeightHero800)',\n    lineHeightHero900: 'var(--lineHeightHero900)',\n    lineHeightHero1000: 'var(--lineHeightHero1000)',\n    // Shadow tokens\n    shadow2: 'var(--shadow2)',\n    shadow4: 'var(--shadow4)',\n    shadow8: 'var(--shadow8)',\n    shadow16: 'var(--shadow16)',\n    shadow28: 'var(--shadow28)',\n    shadow64: 'var(--shadow64)',\n    // Shadow brand tokens\n    shadow2Brand: 'var(--shadow2Brand)',\n    shadow4Brand: 'var(--shadow4Brand)',\n    shadow8Brand: 'var(--shadow8Brand)',\n    shadow16Brand: 'var(--shadow16Brand)',\n    shadow28Brand: 'var(--shadow28Brand)',\n    shadow64Brand: 'var(--shadow64Brand)',\n    // Stroke width tokens\n    strokeWidthThin: 'var(--strokeWidthThin)',\n    strokeWidthThick: 'var(--strokeWidthThick)',\n    strokeWidthThicker: 'var(--strokeWidthThicker)',\n    strokeWidthThickest: 'var(--strokeWidthThickest)',\n    // Spacings\n    spacingHorizontalNone: 'var(--spacingHorizontalNone)',\n    spacingHorizontalXXS: 'var(--spacingHorizontalXXS)',\n    spacingHorizontalXS: 'var(--spacingHorizontalXS)',\n    spacingHorizontalSNudge: 'var(--spacingHorizontalSNudge)',\n    spacingHorizontalS: 'var(--spacingHorizontalS)',\n    spacingHorizontalMNudge: 'var(--spacingHorizontalMNudge)',\n    spacingHorizontalM: 'var(--spacingHorizontalM)',\n    spacingHorizontalL: 'var(--spacingHorizontalL)',\n    spacingHorizontalXL: 'var(--spacingHorizontalXL)',\n    spacingHorizontalXXL: 'var(--spacingHorizontalXXL)',\n    spacingHorizontalXXXL: 'var(--spacingHorizontalXXXL)',\n    spacingVerticalNone: 'var(--spacingVerticalNone)',\n    spacingVerticalXXS: 'var(--spacingVerticalXXS)',\n    spacingVerticalXS: 'var(--spacingVerticalXS)',\n    spacingVerticalSNudge: 'var(--spacingVerticalSNudge)',\n    spacingVerticalS: 'var(--spacingVerticalS)',\n    spacingVerticalMNudge: 'var(--spacingVerticalMNudge)',\n    spacingVerticalM: 'var(--spacingVerticalM)',\n    spacingVerticalL: 'var(--spacingVerticalL)',\n    spacingVerticalXL: 'var(--spacingVerticalXL)',\n    spacingVerticalXXL: 'var(--spacingVerticalXXL)',\n    spacingVerticalXXXL: 'var(--spacingVerticalXXXL)',\n    // Durations\n    durationUltraFast: 'var(--durationUltraFast)',\n    durationFaster: 'var(--durationFaster)',\n    durationFast: 'var(--durationFast)',\n    durationNormal: 'var(--durationNormal)',\n    durationGentle: 'var(--durationGentle)',\n    durationSlow: 'var(--durationSlow)',\n    durationSlower: 'var(--durationSlower)',\n    durationUltraSlow: 'var(--durationUltraSlow)',\n    // Curves\n    curveAccelerateMax: 'var(--curveAccelerateMax)',\n    curveAccelerateMid: 'var(--curveAccelerateMid)',\n    curveAccelerateMin: 'var(--curveAccelerateMin)',\n    curveDecelerateMax: 'var(--curveDecelerateMax)',\n    curveDecelerateMid: 'var(--curveDecelerateMid)',\n    curveDecelerateMin: 'var(--curveDecelerateMin)',\n    curveEasyEaseMax: 'var(--curveEasyEaseMax)',\n    curveEasyEase: 'var(--curveEasyEase)',\n    curveLinear: 'var(--curveLinear)',\n    /**\n   * ZIndexes\n   * Special case where the tokens contain default values\n   * ZIndexes are not mandatory, so they are not included in the theme, but can be used as tokens with default values\n   */ /**\n   * Elevation 0\n   * Can be used for background elements, like surfaces\n   */ zIndexBackground: 'var(--zIndexBackground, 0)',\n    /**\n   * Elevation 2\n   * Can be used content that is on top of the background, like cards\n   */ zIndexContent: 'var(--zIndexContent, 1)',\n    /**\n   * Elevation 4\n   * Can be used for overlays, like the backdrop of a modal\n   */ zIndexOverlay: 'var(--zIndexOverlay, 1000)',\n    /**\n   * Elevation 8\n   * Can be used for popups, like modals and drawers\n   */ zIndexPopup: 'var(--zIndexPopup, 2000)',\n    /**\n   * Elevation 16\n   * Can be used for messages, like snackbars and toasts\n   */ zIndexMessages: 'var(--zIndexMessages, 3000)',\n    /**\n   * Elevation 28\n   * Can be used for floating elements, like dropdowns\n   */ zIndexFloating: 'var(--zIndexFloating, 4000)',\n    /**\n   * Elevation 64\n   * Can be used for high priority floating elements, like tooltips\n   */ zIndexPriority: 'var(--zIndexPriority, 5000)',\n    /**\n   * Special elevation\n   * Can be used for elements that need to be above everything else, like debug overlays\n   */ zIndexDebug: 'var(--zIndexDebug, 6000)'\n};\n", "import { tokens } from \"../tokens.js\";\n/**\n * Global typography styles (fontSize, fontWeight, and lineHeight)\n */ export const typographyStyles = {\n    body1: {\n        fontFamily: tokens.fontFamilyBase,\n        fontSize: tokens.fontSizeBase300,\n        fontWeight: tokens.fontWeightRegular,\n        lineHeight: tokens.lineHeightBase300\n    },\n    body1Strong: {\n        fontFamily: tokens.fontFamilyBase,\n        fontSize: tokens.fontSizeBase300,\n        fontWeight: tokens.fontWeightSemibold,\n        lineHeight: tokens.lineHeightBase300\n    },\n    body1Stronger: {\n        fontFamily: tokens.fontFamilyBase,\n        fontSize: tokens.fontSizeBase300,\n        fontWeight: tokens.fontWeightBold,\n        lineHeight: tokens.lineHeightBase300\n    },\n    body2: {\n        fontFamily: tokens.fontFamilyBase,\n        fontSize: tokens.fontSizeBase400,\n        fontWeight: tokens.fontWeightRegular,\n        lineHeight: tokens.lineHeightBase400\n    },\n    caption1: {\n        fontFamily: tokens.fontFamilyBase,\n        fontSize: tokens.fontSizeBase200,\n        fontWeight: tokens.fontWeightRegular,\n        lineHeight: tokens.lineHeightBase200\n    },\n    caption1Strong: {\n        fontFamily: tokens.fontFamilyBase,\n        fontSize: tokens.fontSizeBase200,\n        fontWeight: tokens.fontWeightSemibold,\n        lineHeight: tokens.lineHeightBase200\n    },\n    caption1Stronger: {\n        fontFamily: tokens.fontFamilyBase,\n        fontSize: tokens.fontSizeBase200,\n        fontWeight: tokens.fontWeightBold,\n        lineHeight: tokens.lineHeightBase200\n    },\n    caption2: {\n        fontFamily: tokens.fontFamilyBase,\n        fontSize: tokens.fontSizeBase100,\n        fontWeight: tokens.fontWeightRegular,\n        lineHeight: tokens.lineHeightBase100\n    },\n    caption2Strong: {\n        fontFamily: tokens.fontFamilyBase,\n        fontSize: tokens.fontSizeBase100,\n        fontWeight: tokens.fontWeightSemibold,\n        lineHeight: tokens.lineHeightBase100\n    },\n    subtitle1: {\n        fontFamily: tokens.fontFamilyBase,\n        fontSize: tokens.fontSizeBase500,\n        fontWeight: tokens.fontWeightSemibold,\n        lineHeight: tokens.lineHeightBase500\n    },\n    subtitle2: {\n        fontFamily: tokens.fontFamilyBase,\n        fontSize: tokens.fontSizeBase400,\n        fontWeight: tokens.fontWeightSemibold,\n        lineHeight: tokens.lineHeightBase400\n    },\n    subtitle2Stronger: {\n        fontFamily: tokens.fontFamilyBase,\n        fontSize: tokens.fontSizeBase400,\n        fontWeight: tokens.fontWeightBold,\n        lineHeight: tokens.lineHeightBase400\n    },\n    title1: {\n        fontFamily: tokens.fontFamilyBase,\n        fontSize: tokens.fontSizeHero800,\n        fontWeight: tokens.fontWeightSemibold,\n        lineHeight: tokens.lineHeightHero800\n    },\n    title2: {\n        fontFamily: tokens.fontFamilyBase,\n        fontSize: tokens.fontSizeHero700,\n        fontWeight: tokens.fontWeightSemibold,\n        lineHeight: tokens.lineHeightHero700\n    },\n    title3: {\n        fontFamily: tokens.fontFamilyBase,\n        fontSize: tokens.fontSizeBase600,\n        fontWeight: tokens.fontWeightSemibold,\n        lineHeight: tokens.lineHeightBase600\n    },\n    largeTitle: {\n        fontFamily: tokens.fontFamilyBase,\n        fontSize: tokens.fontSizeHero900,\n        fontWeight: tokens.fontWeightSemibold,\n        lineHeight: tokens.lineHeightHero900\n    },\n    display: {\n        fontFamily: tokens.fontFamilyBase,\n        fontSize: tokens.fontSizeHero1000,\n        fontWeight: tokens.fontWeightSemibold,\n        lineHeight: tokens.lineHeightHero1000\n    }\n};\n", "/* !!! DO NOT EDIT !!! */ /* This file has been generated by the token pipeline */ export const grey = {\n    '2': '#050505',\n    '4': '#0a0a0a',\n    '6': '#0f0f0f',\n    '8': '#141414',\n    '10': '#1a1a1a',\n    '12': '#1f1f1f',\n    '14': '#242424',\n    '16': '#292929',\n    '18': '#2e2e2e',\n    '20': '#333333',\n    '22': '#383838',\n    '24': '#3d3d3d',\n    '26': '#424242',\n    '28': '#474747',\n    '30': '#4d4d4d',\n    '32': '#525252',\n    '34': '#575757',\n    '36': '#5c5c5c',\n    '38': '#616161',\n    '40': '#666666',\n    '42': '#6b6b6b',\n    '44': '#707070',\n    '46': '#757575',\n    '48': '#7a7a7a',\n    '50': '#808080',\n    '52': '#858585',\n    '54': '#8a8a8a',\n    '56': '#8f8f8f',\n    '58': '#949494',\n    '60': '#999999',\n    '62': '#9e9e9e',\n    '64': '#a3a3a3',\n    '66': '#a8a8a8',\n    '68': '#adadad',\n    '70': '#b3b3b3',\n    '72': '#b8b8b8',\n    '74': '#bdbdbd',\n    '76': '#c2c2c2',\n    '78': '#c7c7c7',\n    '80': '#cccccc',\n    '82': '#d1d1d1',\n    '84': '#d6d6d6',\n    '86': '#dbdbdb',\n    '88': '#e0e0e0',\n    '90': '#e6e6e6',\n    '92': '#ebebeb',\n    '94': '#f0f0f0',\n    '96': '#f5f5f5',\n    '98': '#fafafa'\n};\nexport const whiteAlpha = {\n    '5': 'rgba(255, 255, 255, 0.05)',\n    '10': 'rgba(255, 255, 255, 0.1)',\n    '20': 'rgba(255, 255, 255, 0.2)',\n    '30': 'rgba(255, 255, 255, 0.3)',\n    '40': 'rgba(255, 255, 255, 0.4)',\n    '50': 'rgba(255, 255, 255, 0.5)',\n    '60': 'rgba(255, 255, 255, 0.6)',\n    '70': 'rgba(255, 255, 255, 0.7)',\n    '80': 'rgba(255, 255, 255, 0.8)',\n    '90': 'rgba(255, 255, 255, 0.9)'\n};\nexport const blackAlpha = {\n    '5': 'rgba(0, 0, 0, 0.05)',\n    '10': 'rgba(0, 0, 0, 0.1)',\n    '20': 'rgba(0, 0, 0, 0.2)',\n    '30': 'rgba(0, 0, 0, 0.3)',\n    '40': 'rgba(0, 0, 0, 0.4)',\n    '50': 'rgba(0, 0, 0, 0.5)',\n    '60': 'rgba(0, 0, 0, 0.6)',\n    '70': 'rgba(0, 0, 0, 0.7)',\n    '80': 'rgba(0, 0, 0, 0.8)',\n    '90': 'rgba(0, 0, 0, 0.9)'\n};\nexport const grey10Alpha = {\n    '5': 'rgba(26, 26, 26, 0.05)',\n    '10': 'rgba(26, 26, 26, 0.1)',\n    '20': 'rgba(26, 26, 26, 0.2)',\n    '30': 'rgba(26, 26, 26, 0.3)',\n    '40': 'rgba(26, 26, 26, 0.4)',\n    '50': 'rgba(26, 26, 26, 0.5)',\n    '60': 'rgba(26, 26, 26, 0.6)',\n    '70': 'rgba(26, 26, 26, 0.7)',\n    '80': 'rgba(26, 26, 26, 0.8)',\n    '90': 'rgba(26, 26, 26, 0.9)'\n};\nexport const grey12Alpha = {\n    '5': 'rgba(31, 31, 31, 0.05)',\n    '10': 'rgba(31, 31, 31, 0.1)',\n    '20': 'rgba(31, 31, 31, 0.2)',\n    '30': 'rgba(31, 31, 31, 0.3)',\n    '40': 'rgba(31, 31, 31, 0.4)',\n    '50': 'rgba(31, 31, 31, 0.5)',\n    '60': 'rgba(31, 31, 31, 0.6)',\n    '70': 'rgba(31, 31, 31, 0.7)',\n    '80': 'rgba(31, 31, 31, 0.8)',\n    '90': 'rgba(31, 31, 31, 0.9)'\n};\nexport const grey14Alpha = {\n    '5': 'rgba(36, 36, 36, 0.05)',\n    '10': 'rgba(36, 36, 36, 0.1)',\n    '20': 'rgba(36, 36, 36, 0.2)',\n    '30': 'rgba(36, 36, 36, 0.3)',\n    '40': 'rgba(36, 36, 36, 0.4)',\n    '50': 'rgba(36, 36, 36, 0.5)',\n    '60': 'rgba(36, 36, 36, 0.6)',\n    '70': 'rgba(36, 36, 36, 0.7)',\n    '80': 'rgba(36, 36, 36, 0.8)',\n    '90': 'rgba(36, 36, 36, 0.9)'\n};\nexport const white = '#ffffff';\nexport const black = '#000000';\nexport const hcHyperlink = '#ffff00';\nexport const hcHighlight = '#1aebff';\nexport const hcDisabled = '#3ff23f';\nexport const hcCanvas = '#000000';\nexport const hcCanvasText = '#ffffff';\nexport const hcHighlightText = '#000000';\nexport const hcButtonText = '#000000';\nexport const hcButtonFace = '#ffffff';\nexport const darkRed = {\n    shade50: '#130204',\n    shade40: '#230308',\n    shade30: '#420610',\n    shade20: '#590815',\n    shade10: '#690a19',\n    primary: '#750b1c',\n    tint10: '#861b2c',\n    tint20: '#962f3f',\n    tint30: '#ac4f5e',\n    tint40: '#d69ca5',\n    tint50: '#e9c7cd',\n    tint60: '#f9f0f2'\n};\nexport const burgundy = {\n    shade50: '#1a0607',\n    shade40: '#310b0d',\n    shade30: '#5c1519',\n    shade20: '#7d1d21',\n    shade10: '#942228',\n    primary: '#a4262c',\n    tint10: '#af393e',\n    tint20: '#ba4d52',\n    tint30: '#c86c70',\n    tint40: '#e4afb2',\n    tint50: '#f0d3d4',\n    tint60: '#fbf4f4'\n};\nexport const cranberry = {\n    shade50: '#200205',\n    shade40: '#3b0509',\n    shade30: '#6e0811',\n    shade20: '#960b18',\n    shade10: '#b10e1c',\n    primary: '#c50f1f',\n    tint10: '#cc2635',\n    tint20: '#d33f4c',\n    tint30: '#dc626d',\n    tint40: '#eeacb2',\n    tint50: '#f6d1d5',\n    tint60: '#fdf3f4'\n};\nexport const red = {\n    shade50: '#210809',\n    shade40: '#3f1011',\n    shade30: '#751d1f',\n    shade20: '#9f282b',\n    shade10: '#bc2f32',\n    primary: '#d13438',\n    tint10: '#d7494c',\n    tint20: '#dc5e62',\n    tint30: '#e37d80',\n    tint40: '#f1bbbc',\n    tint50: '#f8dadb',\n    tint60: '#fdf6f6'\n};\nexport const darkOrange = {\n    shade50: '#230900',\n    shade40: '#411200',\n    shade30: '#7a2101',\n    shade20: '#a62d01',\n    shade10: '#c43501',\n    primary: '#da3b01',\n    tint10: '#de501c',\n    tint20: '#e36537',\n    tint30: '#e9835e',\n    tint40: '#f4bfab',\n    tint50: '#f9dcd1',\n    tint60: '#fdf6f3'\n};\nexport const bronze = {\n    shade50: '#1b0a01',\n    shade40: '#321303',\n    shade30: '#5e2405',\n    shade20: '#7f3107',\n    shade10: '#963a08',\n    primary: '#a74109',\n    tint10: '#b2521e',\n    tint20: '#bc6535',\n    tint30: '#ca8057',\n    tint40: '#e5bba4',\n    tint50: '#f1d9cc',\n    tint60: '#fbf5f2'\n};\nexport const pumpkin = {\n    shade50: '#200d03',\n    shade40: '#3d1805',\n    shade30: '#712d09',\n    shade20: '#9a3d0c',\n    shade10: '#b6480e',\n    primary: '#ca5010',\n    tint10: '#d06228',\n    tint20: '#d77440',\n    tint30: '#df8e64',\n    tint40: '#efc4ad',\n    tint50: '#f7dfd2',\n    tint60: '#fdf7f4'\n};\nexport const orange = {\n    shade50: '#271002',\n    shade40: '#4a1e04',\n    shade30: '#8a3707',\n    shade20: '#bc4b09',\n    shade10: '#de590b',\n    primary: '#f7630c',\n    tint10: '#f87528',\n    tint20: '#f98845',\n    tint30: '#faa06b',\n    tint40: '#fdcfb4',\n    tint50: '#fee5d7',\n    tint60: '#fff9f5'\n};\nexport const peach = {\n    shade50: '#291600',\n    shade40: '#4d2a00',\n    shade30: '#8f4e00',\n    shade20: '#c26a00',\n    shade10: '#e67e00',\n    primary: '#ff8c00',\n    tint10: '#ff9a1f',\n    tint20: '#ffa83d',\n    tint30: '#ffba66',\n    tint40: '#ffddb3',\n    tint50: '#ffedd6',\n    tint60: '#fffaf5'\n};\nexport const marigold = {\n    shade50: '#251a00',\n    shade40: '#463100',\n    shade30: '#835b00',\n    shade20: '#b27c00',\n    shade10: '#d39300',\n    primary: '#eaa300',\n    tint10: '#edad1c',\n    tint20: '#efb839',\n    tint30: '#f2c661',\n    tint40: '#f9e2ae',\n    tint50: '#fcefd3',\n    tint60: '#fefbf4'\n};\nexport const yellow = {\n    shade50: '#282400',\n    shade40: '#4c4400',\n    shade30: '#817400',\n    shade20: '#c0ad00',\n    shade10: '#e4cc00',\n    primary: '#fde300',\n    tint10: '#fde61e',\n    tint20: '#fdea3d',\n    tint30: '#feee66',\n    tint40: '#fef7b2',\n    tint50: '#fffad6',\n    tint60: '#fffef5'\n};\nexport const gold = {\n    shade50: '#1f1900',\n    shade40: '#3a2f00',\n    shade30: '#6c5700',\n    shade20: '#937700',\n    shade10: '#ae8c00',\n    primary: '#c19c00',\n    tint10: '#c8a718',\n    tint20: '#d0b232',\n    tint30: '#dac157',\n    tint40: '#ecdfa5',\n    tint50: '#f5eece',\n    tint60: '#fdfbf2'\n};\nexport const brass = {\n    shade50: '#181202',\n    shade40: '#2e2103',\n    shade30: '#553e06',\n    shade20: '#745408',\n    shade10: '#89640a',\n    primary: '#986f0b',\n    tint10: '#a47d1e',\n    tint20: '#b18c34',\n    tint30: '#c1a256',\n    tint40: '#e0cea2',\n    tint50: '#efe4cb',\n    tint60: '#fbf8f2'\n};\nexport const brown = {\n    shade50: '#170e07',\n    shade40: '#2b1a0e',\n    shade30: '#50301a',\n    shade20: '#6c4123',\n    shade10: '#804d29',\n    primary: '#8e562e',\n    tint10: '#9c663f',\n    tint20: '#a97652',\n    tint30: '#bb8f6f',\n    tint40: '#ddc3b0',\n    tint50: '#edded3',\n    tint60: '#faf7f4'\n};\nexport const darkBrown = {\n    shade50: '#0c0704',\n    shade40: '#170c08',\n    shade30: '#2b1710',\n    shade20: '#3a1f15',\n    shade10: '#452519',\n    primary: '#4d291c',\n    tint10: '#623a2b',\n    tint20: '#784d3e',\n    tint30: '#946b5c',\n    tint40: '#caada3',\n    tint50: '#e3d2cb',\n    tint60: '#f8f3f2'\n};\nexport const lime = {\n    shade50: '#121b06',\n    shade40: '#23330b',\n    shade30: '#405f14',\n    shade20: '#57811b',\n    shade10: '#689920',\n    primary: '#73aa24',\n    tint10: '#81b437',\n    tint20: '#90be4c',\n    tint30: '#a4cc6c',\n    tint40: '#cfe5af',\n    tint50: '#e5f1d3',\n    tint60: '#f8fcf4'\n};\nexport const forest = {\n    shade50: '#0c1501',\n    shade40: '#162702',\n    shade30: '#294903',\n    shade20: '#376304',\n    shade10: '#427505',\n    primary: '#498205',\n    tint10: '#599116',\n    tint20: '#6ba02b',\n    tint30: '#85b44c',\n    tint40: '#bdd99b',\n    tint50: '#dbebc7',\n    tint60: '#f6faf0'\n};\nexport const seafoam = {\n    shade50: '#002111',\n    shade40: '#003d20',\n    shade30: '#00723b',\n    shade20: '#009b51',\n    shade10: '#00b85f',\n    primary: '#00cc6a',\n    tint10: '#19d279',\n    tint20: '#34d889',\n    tint30: '#5ae0a0',\n    tint40: '#a8f0cd',\n    tint50: '#cff7e4',\n    tint60: '#f3fdf8'\n};\nexport const lightGreen = {\n    shade50: '#031a02',\n    shade40: '#063004',\n    shade30: '#0b5a08',\n    shade20: '#0e7a0b',\n    shade10: '#11910d',\n    primary: '#13a10e',\n    tint10: '#27ac22',\n    tint20: '#3db838',\n    tint30: '#5ec75a',\n    tint40: '#a7e3a5',\n    tint50: '#cef0cd',\n    tint60: '#f2fbf2'\n};\nexport const green = {\n    shade50: '#031403',\n    shade40: '#052505',\n    shade30: '#094509',\n    shade20: '#0c5e0c',\n    shade10: '#0e700e',\n    primary: '#107c10',\n    tint10: '#218c21',\n    tint20: '#359b35',\n    tint30: '#54b054',\n    tint40: '#9fd89f',\n    tint50: '#c9eac9',\n    tint60: '#f1faf1'\n};\nexport const darkGreen = {\n    shade50: '#021102',\n    shade40: '#032003',\n    shade30: '#063b06',\n    shade20: '#085108',\n    shade10: '#0a5f0a',\n    primary: '#0b6a0b',\n    tint10: '#1a7c1a',\n    tint20: '#2d8e2d',\n    tint30: '#4da64d',\n    tint40: '#9ad29a',\n    tint50: '#c6e7c6',\n    tint60: '#f0f9f0'\n};\nexport const lightTeal = {\n    shade50: '#001d1f',\n    shade40: '#00373a',\n    shade30: '#00666d',\n    shade20: '#008b94',\n    shade10: '#00a5af',\n    primary: '#00b7c3',\n    tint10: '#18bfca',\n    tint20: '#32c8d1',\n    tint30: '#58d3db',\n    tint40: '#a6e9ed',\n    tint50: '#cef3f5',\n    tint60: '#f2fcfd'\n};\nexport const teal = {\n    shade50: '#001516',\n    shade40: '#012728',\n    shade30: '#02494c',\n    shade20: '#026467',\n    shade10: '#037679',\n    primary: '#038387',\n    tint10: '#159195',\n    tint20: '#2aa0a4',\n    tint30: '#4cb4b7',\n    tint40: '#9bd9db',\n    tint50: '#c7ebec',\n    tint60: '#f0fafa'\n};\nexport const darkTeal = {\n    shade50: '#001010',\n    shade40: '#001f1f',\n    shade30: '#003939',\n    shade20: '#004e4e',\n    shade10: '#005c5c',\n    primary: '#006666',\n    tint10: '#0e7878',\n    tint20: '#218b8b',\n    tint30: '#41a3a3',\n    tint40: '#92d1d1',\n    tint50: '#c2e7e7',\n    tint60: '#eff9f9'\n};\nexport const cyan = {\n    shade50: '#00181e',\n    shade40: '#002e38',\n    shade30: '#005669',\n    shade20: '#00748f',\n    shade10: '#008aa9',\n    primary: '#0099bc',\n    tint10: '#18a4c4',\n    tint20: '#31afcc',\n    tint30: '#56bfd7',\n    tint40: '#a4deeb',\n    tint50: '#cdedf4',\n    tint60: '#f2fafc'\n};\nexport const steel = {\n    shade50: '#000f12',\n    shade40: '#001b22',\n    shade30: '#00333f',\n    shade20: '#004555',\n    shade10: '#005265',\n    primary: '#005b70',\n    tint10: '#0f6c81',\n    tint20: '#237d92',\n    tint30: '#4496a9',\n    tint40: '#94c8d4',\n    tint50: '#c3e1e8',\n    tint60: '#eff7f9'\n};\nexport const lightBlue = {\n    shade50: '#091823',\n    shade40: '#112d42',\n    shade30: '#20547c',\n    shade20: '#2c72a8',\n    shade10: '#3487c7',\n    primary: '#3a96dd',\n    tint10: '#4fa1e1',\n    tint20: '#65ade5',\n    tint30: '#83bdeb',\n    tint40: '#bfddf5',\n    tint50: '#dcedfa',\n    tint60: '#f6fafe'\n};\nexport const blue = {\n    shade50: '#001322',\n    shade40: '#002440',\n    shade30: '#004377',\n    shade20: '#005ba1',\n    shade10: '#006cbf',\n    primary: '#0078d4',\n    tint10: '#1a86d9',\n    tint20: '#3595de',\n    tint30: '#5caae5',\n    tint40: '#a9d3f2',\n    tint50: '#d0e7f8',\n    tint60: '#f3f9fd'\n};\nexport const royalBlue = {\n    shade50: '#000c16',\n    shade40: '#00172a',\n    shade30: '#002c4e',\n    shade20: '#003b6a',\n    shade10: '#00467e',\n    primary: '#004e8c',\n    tint10: '#125e9a',\n    tint20: '#286fa8',\n    tint30: '#4a89ba',\n    tint40: '#9abfdc',\n    tint50: '#c7dced',\n    tint60: '#f0f6fa'\n};\nexport const darkBlue = {\n    shade50: '#000910',\n    shade40: '#00111f',\n    shade30: '#002039',\n    shade20: '#002b4e',\n    shade10: '#00335c',\n    primary: '#003966',\n    tint10: '#0e4a78',\n    tint20: '#215c8b',\n    tint30: '#4178a3',\n    tint40: '#92b5d1',\n    tint50: '#c2d6e7',\n    tint60: '#eff4f9'\n};\nexport const cornflower = {\n    shade50: '#0d1126',\n    shade40: '#182047',\n    shade30: '#2c3c85',\n    shade20: '#3c51b4',\n    shade10: '#4760d5',\n    primary: '#4f6bed',\n    tint10: '#637cef',\n    tint20: '#778df1',\n    tint30: '#93a4f4',\n    tint40: '#c8d1fa',\n    tint50: '#e1e6fc',\n    tint60: '#f7f9fe'\n};\nexport const navy = {\n    shade50: '#00061d',\n    shade40: '#000c36',\n    shade30: '#001665',\n    shade20: '#001e89',\n    shade10: '#0023a2',\n    primary: '#0027b4',\n    tint10: '#173bbd',\n    tint20: '#3050c6',\n    tint30: '#546fd2',\n    tint40: '#a3b2e8',\n    tint50: '#ccd5f3',\n    tint60: '#f2f4fc'\n};\nexport const lavender = {\n    shade50: '#120f25',\n    shade40: '#221d46',\n    shade30: '#3f3682',\n    shade20: '#5649b0',\n    shade10: '#6656d1',\n    primary: '#7160e8',\n    tint10: '#8172eb',\n    tint20: '#9184ee',\n    tint30: '#a79cf1',\n    tint40: '#d2ccf8',\n    tint50: '#e7e4fb',\n    tint60: '#f9f8fe'\n};\nexport const purple = {\n    shade50: '#0f0717',\n    shade40: '#1c0e2b',\n    shade30: '#341a51',\n    shade20: '#46236e',\n    shade10: '#532982',\n    primary: '#5c2e91',\n    tint10: '#6b3f9e',\n    tint20: '#7c52ab',\n    tint30: '#9470bd',\n    tint40: '#c6b1de',\n    tint50: '#e0d3ed',\n    tint60: '#f7f4fb'\n};\nexport const darkPurple = {\n    shade50: '#0a0411',\n    shade40: '#130820',\n    shade30: '#240f3c',\n    shade20: '#311552',\n    shade10: '#3a1861',\n    primary: '#401b6c',\n    tint10: '#512b7e',\n    tint20: '#633e8f',\n    tint30: '#7e5ca7',\n    tint40: '#b9a3d3',\n    tint50: '#d8cce7',\n    tint60: '#f5f2f9'\n};\nexport const orchid = {\n    shade50: '#16101d',\n    shade40: '#281e37',\n    shade30: '#4c3867',\n    shade20: '#674c8c',\n    shade10: '#795aa6',\n    primary: '#8764b8',\n    tint10: '#9373c0',\n    tint20: '#a083c9',\n    tint30: '#b29ad4',\n    tint40: '#d7caea',\n    tint50: '#e9e2f4',\n    tint60: '#f9f8fc'\n};\nexport const grape = {\n    shade50: '#160418',\n    shade40: '#29072e',\n    shade30: '#4c0d55',\n    shade20: '#671174',\n    shade10: '#7a1589',\n    primary: '#881798',\n    tint10: '#952aa4',\n    tint20: '#a33fb1',\n    tint30: '#b55fc1',\n    tint40: '#d9a7e0',\n    tint50: '#eaceef',\n    tint60: '#faf2fb'\n};\nexport const berry = {\n    shade50: '#1f091d',\n    shade40: '#3a1136',\n    shade30: '#6d2064',\n    shade20: '#932b88',\n    shade10: '#af33a1',\n    primary: '#c239b3',\n    tint10: '#c94cbc',\n    tint20: '#d161c4',\n    tint30: '#da7ed0',\n    tint40: '#edbbe7',\n    tint50: '#f5daf2',\n    tint60: '#fdf5fc'\n};\nexport const lilac = {\n    shade50: '#1c0b1f',\n    shade40: '#35153a',\n    shade30: '#63276d',\n    shade20: '#863593',\n    shade10: '#9f3faf',\n    primary: '#b146c2',\n    tint10: '#ba58c9',\n    tint20: '#c36bd1',\n    tint30: '#cf87da',\n    tint40: '#e6bfed',\n    tint50: '#f2dcf5',\n    tint60: '#fcf6fd'\n};\nexport const pink = {\n    shade50: '#24091b',\n    shade40: '#441232',\n    shade30: '#80215d',\n    shade20: '#ad2d7e',\n    shade10: '#cd3595',\n    primary: '#e43ba6',\n    tint10: '#e750b0',\n    tint20: '#ea66ba',\n    tint30: '#ef85c8',\n    tint40: '#f7c0e3',\n    tint50: '#fbddf0',\n    tint60: '#fef6fb'\n};\nexport const hotPink = {\n    shade50: '#240016',\n    shade40: '#44002a',\n    shade30: '#7f004e',\n    shade20: '#ad006a',\n    shade10: '#cc007e',\n    primary: '#e3008c',\n    tint10: '#e61c99',\n    tint20: '#ea38a6',\n    tint30: '#ee5fb7',\n    tint40: '#f7adda',\n    tint50: '#fbd2eb',\n    tint60: '#fef4fa'\n};\nexport const magenta = {\n    shade50: '#1f0013',\n    shade40: '#390024',\n    shade30: '#6b0043',\n    shade20: '#91005a',\n    shade10: '#ac006b',\n    primary: '#bf0077',\n    tint10: '#c71885',\n    tint20: '#ce3293',\n    tint30: '#d957a8',\n    tint40: '#eca5d1',\n    tint50: '#f5cee6',\n    tint60: '#fcf2f9'\n};\nexport const plum = {\n    shade50: '#13000c',\n    shade40: '#240017',\n    shade30: '#43002b',\n    shade20: '#5a003b',\n    shade10: '#6b0045',\n    primary: '#77004d',\n    tint10: '#87105d',\n    tint20: '#98246f',\n    tint30: '#ad4589',\n    tint40: '#d696c0',\n    tint50: '#e9c4dc',\n    tint60: '#faf0f6'\n};\nexport const beige = {\n    shade50: '#141313',\n    shade40: '#252323',\n    shade30: '#444241',\n    shade20: '#5d5958',\n    shade10: '#6e6968',\n    primary: '#7a7574',\n    tint10: '#8a8584',\n    tint20: '#9a9594',\n    tint30: '#afabaa',\n    tint40: '#d7d4d4',\n    tint50: '#eae8e8',\n    tint60: '#faf9f9'\n};\nexport const mink = {\n    shade50: '#0f0e0e',\n    shade40: '#1c1b1a',\n    shade30: '#343231',\n    shade20: '#474443',\n    shade10: '#54514f',\n    primary: '#5d5a58',\n    tint10: '#706d6b',\n    tint20: '#84817e',\n    tint30: '#9e9b99',\n    tint40: '#cecccb',\n    tint50: '#e5e4e3',\n    tint60: '#f8f8f8'\n};\nexport const silver = {\n    shade50: '#151818',\n    shade40: '#282d2e',\n    shade30: '#4a5356',\n    shade20: '#657174',\n    shade10: '#78868a',\n    primary: '#859599',\n    tint10: '#92a1a5',\n    tint20: '#a0aeb1',\n    tint30: '#b3bfc2',\n    tint40: '#d8dfe0',\n    tint50: '#eaeeef',\n    tint60: '#fafbfb'\n};\nexport const platinum = {\n    shade50: '#111314',\n    shade40: '#1f2426',\n    shade30: '#3b4447',\n    shade20: '#505c60',\n    shade10: '#5f6d71',\n    primary: '#69797e',\n    tint10: '#79898d',\n    tint20: '#89989d',\n    tint30: '#a0adb2',\n    tint40: '#cdd6d8',\n    tint50: '#e4e9ea',\n    tint60: '#f8f9fa'\n};\nexport const anchor = {\n    shade50: '#090a0b',\n    shade40: '#111315',\n    shade30: '#202427',\n    shade20: '#2b3135',\n    shade10: '#333a3f',\n    primary: '#394146',\n    tint10: '#4d565c',\n    tint20: '#626c72',\n    tint30: '#808a90',\n    tint40: '#bcc3c7',\n    tint50: '#dbdfe1',\n    tint60: '#f6f7f8'\n};\nexport const charcoal = {\n    shade50: '#090909',\n    shade40: '#111111',\n    shade30: '#202020',\n    shade20: '#2b2b2b',\n    shade10: '#333333',\n    primary: '#393939',\n    tint10: '#515151',\n    tint20: '#686868',\n    tint30: '#888888',\n    tint40: '#c4c4c4',\n    tint50: '#dfdfdf',\n    tint60: '#f7f7f7'\n};\n", "import { red, green, darkOrange, yellow, berry, lightGreen, marigold, darkRed, cranberry, pumpkin, peach, gold, brass, brown, forest, seafoam, darkGreen, lightTeal, teal, steel, blue, royalBlue, cornflower, navy, lavender, purple, grape, lilac, pink, magenta, plum, beige, mink, platinum, anchor, orange } from \"./colors.js\";\nexport const statusSharedColors = {\n    red,\n    green,\n    darkOrange,\n    yellow,\n    berry,\n    lightGreen,\n    marigold\n};\nexport const personaSharedColors = {\n    darkRed,\n    cranberry,\n    pumpkin,\n    peach,\n    gold,\n    brass,\n    brown,\n    forest,\n    seafoam,\n    darkGreen,\n    lightTeal,\n    teal,\n    steel,\n    blue,\n    royalBlue,\n    cornflower,\n    navy,\n    lavender,\n    purple,\n    grape,\n    lilac,\n    pink,\n    magenta,\n    plum,\n    beige,\n    mink,\n    platinum,\n    anchor\n};\nexport const mappedStatusColors = {\n    cranberry,\n    green,\n    orange\n};\n", "/* Names of colors used in shared color palette alias tokens for status. */ export const statusSharedColorNames = [\n    'red',\n    'green',\n    'darkOrange',\n    'yellow',\n    'berry',\n    'lightGreen',\n    'marigold'\n];\n/* Names of colors used in shared color palette alias tokens for persona. */ export const personaSharedColorNames = [\n    'darkRed',\n    'cranberry',\n    'pumpkin',\n    'peach',\n    'gold',\n    'brass',\n    'brown',\n    'forest',\n    'seafoam',\n    'darkGreen',\n    'lightTeal',\n    'teal',\n    'steel',\n    'blue',\n    'royalBlue',\n    'cornflower',\n    'navy',\n    'lavender',\n    'purple',\n    'grape',\n    'lilac',\n    'pink',\n    'magenta',\n    'plum',\n    'beige',\n    'mink',\n    'platinum',\n    'anchor'\n];\n/* List of global colors which semantic alias status tokens map to */ export const mappedStatusColorNames = [\n    'cranberry',\n    'green',\n    'orange'\n];\n/* Names of colors not used in alias tokens but produced by token pipeline as global color tokens. */ export const unusedSharedColorNames = [\n    'burgundy',\n    'bronze',\n    'orange',\n    'darkBrown',\n    'lime',\n    'darkTeal',\n    'cyan',\n    'lightBlue',\n    'darkBlue',\n    'darkPurple',\n    'orchid',\n    'hotPink',\n    'silver',\n    'charcoal'\n];\n", "export const statusColorMapping = {\n    success: 'green',\n    warning: 'orange',\n    danger: 'cranberry'\n};\n", "import { statusSharedColors, personaSharedColors, mappedStatusColors } from \"../global/colorPalette.js\";\nimport { statusSharedColorNames, personaSharedColorNames } from \"../sharedColorNames.js\";\nimport { statusColorMapping } from \"../statusColorMapping.js\";\nconst statusColorPaletteTokens = statusSharedColorNames.reduce((acc, sharedColor)=>{\n    const color = sharedColor.slice(0, 1).toUpperCase() + sharedColor.slice(1);\n    const sharedColorTokens = {\n        [`colorPalette${color}Background1`]: statusSharedColors[sharedColor].tint60,\n        [`colorPalette${color}Background2`]: statusSharedColors[sharedColor].tint40,\n        [`colorPalette${color}Background3`]: statusSharedColors[sharedColor].primary,\n        [`colorPalette${color}Foreground1`]: statusSharedColors[sharedColor].shade10,\n        [`colorPalette${color}Foreground2`]: statusSharedColors[sharedColor].shade30,\n        [`colorPalette${color}Foreground3`]: statusSharedColors[sharedColor].primary,\n        [`colorPalette${color}BorderActive`]: statusSharedColors[sharedColor].primary,\n        [`colorPalette${color}Border1`]: statusSharedColors[sharedColor].tint40,\n        [`colorPalette${color}Border2`]: statusSharedColors[sharedColor].primary\n    };\n    return Object.assign(acc, sharedColorTokens);\n}, {});\n// one-off patch for yellow\nstatusColorPaletteTokens.colorPaletteYellowForeground1 = statusSharedColors.yellow.shade30;\nstatusColorPaletteTokens.colorPaletteRedForegroundInverted = statusSharedColors.red.tint20;\nstatusColorPaletteTokens.colorPaletteGreenForegroundInverted = statusSharedColors.green.tint20;\nstatusColorPaletteTokens.colorPaletteYellowForegroundInverted = statusSharedColors.yellow.tint40;\nconst personaColorPaletteTokens = personaSharedColorNames.reduce((acc, sharedColor)=>{\n    const color = sharedColor.slice(0, 1).toUpperCase() + sharedColor.slice(1);\n    const sharedColorTokens = {\n        [`colorPalette${color}Background2`]: personaSharedColors[sharedColor].tint40,\n        [`colorPalette${color}Foreground2`]: personaSharedColors[sharedColor].shade30,\n        [`colorPalette${color}BorderActive`]: personaSharedColors[sharedColor].primary\n    };\n    return Object.assign(acc, sharedColorTokens);\n}, {});\nexport const colorPaletteTokens = {\n    ...statusColorPaletteTokens,\n    ...personaColorPaletteTokens\n};\nexport const colorStatusTokens = Object.entries(statusColorMapping).reduce((acc, [statusColor, sharedColor])=>{\n    const color = statusColor.slice(0, 1).toUpperCase() + statusColor.slice(1);\n    // TODO: double check the mapping with design\n    const statusColorTokens = {\n        [`colorStatus${color}Background1`]: mappedStatusColors[sharedColor].tint60,\n        [`colorStatus${color}Background2`]: mappedStatusColors[sharedColor].tint40,\n        [`colorStatus${color}Background3`]: mappedStatusColors[sharedColor].primary,\n        [`colorStatus${color}Foreground1`]: mappedStatusColors[sharedColor].shade10,\n        [`colorStatus${color}Foreground2`]: mappedStatusColors[sharedColor].shade30,\n        [`colorStatus${color}Foreground3`]: mappedStatusColors[sharedColor].primary,\n        [`colorStatus${color}ForegroundInverted`]: mappedStatusColors[sharedColor].tint30,\n        [`colorStatus${color}BorderActive`]: mappedStatusColors[sharedColor].primary,\n        [`colorStatus${color}Border1`]: mappedStatusColors[sharedColor].tint40,\n        [`colorStatus${color}Border2`]: mappedStatusColors[sharedColor].primary\n    };\n    return Object.assign(acc, statusColorTokens);\n}, {});\n// one-off overrides for colorStatus tokens\ncolorStatusTokens.colorStatusDangerBackground3Hover = mappedStatusColors[statusColorMapping.danger].shade10;\ncolorStatusTokens.colorStatusDangerBackground3Pressed = mappedStatusColors[statusColorMapping.danger].shade20;\ncolorStatusTokens.colorStatusWarningForeground1 = mappedStatusColors[statusColorMapping.warning].shade20;\ncolorStatusTokens.colorStatusWarningForeground3 = mappedStatusColors[statusColorMapping.warning].shade20;\ncolorStatusTokens.colorStatusWarningBorder2 = mappedStatusColors[statusColorMapping.warning].shade20;\n", "/* !!! DO NOT EDIT !!! */ /* This file has been generated by the token pipeline */ import { black, blackAlpha, grey, white, whiteAlpha } from \"../global/colors.js\";\nexport const generateColorTokens = (brand)=>({\n        colorNeutralForeground1: grey[14],\n        colorNeutralForeground1Hover: grey[14],\n        colorNeutralForeground1Pressed: grey[14],\n        colorNeutralForeground1Selected: grey[14],\n        colorNeutralForeground2: grey[26],\n        colorNeutralForeground2Hover: grey[14],\n        colorNeutralForeground2Pressed: grey[14],\n        colorNeutralForeground2Selected: grey[14],\n        colorNeutralForeground2BrandHover: brand[80],\n        colorNeutralForeground2BrandPressed: brand[70],\n        colorNeutralForeground2BrandSelected: brand[80],\n        colorNeutralForeground3: grey[38],\n        colorNeutralForeground3Hover: grey[26],\n        colorNeutralForeground3Pressed: grey[26],\n        colorNeutralForeground3Selected: grey[26],\n        colorNeutralForeground3BrandHover: brand[80],\n        colorNeutralForeground3BrandPressed: brand[70],\n        colorNeutralForeground3BrandSelected: brand[80],\n        colorNeutralForeground4: grey[44],\n        colorNeutralForegroundDisabled: grey[74],\n        colorNeutralForegroundInvertedDisabled: whiteAlpha[40],\n        colorBrandForegroundLink: brand[70],\n        colorBrandForegroundLinkHover: brand[60],\n        colorBrandForegroundLinkPressed: brand[40],\n        colorBrandForegroundLinkSelected: brand[70],\n        colorNeutralForeground2Link: grey[26],\n        colorNeutralForeground2LinkHover: grey[14],\n        colorNeutralForeground2LinkPressed: grey[14],\n        colorNeutralForeground2LinkSelected: grey[14],\n        colorCompoundBrandForeground1: brand[80],\n        colorCompoundBrandForeground1Hover: brand[70],\n        colorCompoundBrandForeground1Pressed: brand[60],\n        colorBrandForeground1: brand[80],\n        colorBrandForeground2: brand[70],\n        colorBrandForeground2Hover: brand[60],\n        colorBrandForeground2Pressed: brand[30],\n        colorNeutralForeground1Static: grey[14],\n        colorNeutralForegroundStaticInverted: white,\n        colorNeutralForegroundInverted: white,\n        colorNeutralForegroundInvertedHover: white,\n        colorNeutralForegroundInvertedPressed: white,\n        colorNeutralForegroundInvertedSelected: white,\n        colorNeutralForegroundInverted2: white,\n        colorNeutralForegroundOnBrand: white,\n        colorNeutralForegroundInvertedLink: white,\n        colorNeutralForegroundInvertedLinkHover: white,\n        colorNeutralForegroundInvertedLinkPressed: white,\n        colorNeutralForegroundInvertedLinkSelected: white,\n        colorBrandForegroundInverted: brand[100],\n        colorBrandForegroundInvertedHover: brand[110],\n        colorBrandForegroundInvertedPressed: brand[100],\n        colorBrandForegroundOnLight: brand[80],\n        colorBrandForegroundOnLightHover: brand[70],\n        colorBrandForegroundOnLightPressed: brand[50],\n        colorBrandForegroundOnLightSelected: brand[60],\n        colorNeutralBackground1: white,\n        colorNeutralBackground1Hover: grey[96],\n        colorNeutralBackground1Pressed: grey[88],\n        colorNeutralBackground1Selected: grey[92],\n        colorNeutralBackground2: grey[98],\n        colorNeutralBackground2Hover: grey[94],\n        colorNeutralBackground2Pressed: grey[86],\n        colorNeutralBackground2Selected: grey[90],\n        colorNeutralBackground3: grey[96],\n        colorNeutralBackground3Hover: grey[92],\n        colorNeutralBackground3Pressed: grey[84],\n        colorNeutralBackground3Selected: grey[88],\n        colorNeutralBackground4: grey[94],\n        colorNeutralBackground4Hover: grey[98],\n        colorNeutralBackground4Pressed: grey[96],\n        colorNeutralBackground4Selected: white,\n        colorNeutralBackground5: grey[92],\n        colorNeutralBackground5Hover: grey[96],\n        colorNeutralBackground5Pressed: grey[94],\n        colorNeutralBackground5Selected: grey[98],\n        colorNeutralBackground6: grey[90],\n        colorNeutralBackgroundInverted: grey[16],\n        colorNeutralBackgroundStatic: grey[20],\n        colorNeutralBackgroundAlpha: whiteAlpha[50],\n        colorNeutralBackgroundAlpha2: whiteAlpha[80],\n        colorSubtleBackground: 'transparent',\n        colorSubtleBackgroundHover: grey[96],\n        colorSubtleBackgroundPressed: grey[88],\n        colorSubtleBackgroundSelected: grey[92],\n        colorSubtleBackgroundLightAlphaHover: whiteAlpha[70],\n        colorSubtleBackgroundLightAlphaPressed: whiteAlpha[50],\n        colorSubtleBackgroundLightAlphaSelected: 'transparent',\n        colorSubtleBackgroundInverted: 'transparent',\n        colorSubtleBackgroundInvertedHover: blackAlpha[10],\n        colorSubtleBackgroundInvertedPressed: blackAlpha[30],\n        colorSubtleBackgroundInvertedSelected: blackAlpha[20],\n        colorTransparentBackground: 'transparent',\n        colorTransparentBackgroundHover: 'transparent',\n        colorTransparentBackgroundPressed: 'transparent',\n        colorTransparentBackgroundSelected: 'transparent',\n        colorNeutralBackgroundDisabled: grey[94],\n        colorNeutralBackgroundInvertedDisabled: whiteAlpha[10],\n        colorNeutralStencil1: grey[90],\n        colorNeutralStencil2: grey[98],\n        colorNeutralStencil1Alpha: blackAlpha[10],\n        colorNeutralStencil2Alpha: blackAlpha[5],\n        colorBackgroundOverlay: blackAlpha[40],\n        colorScrollbarOverlay: blackAlpha[50],\n        colorBrandBackground: brand[80],\n        colorBrandBackgroundHover: brand[70],\n        colorBrandBackgroundPressed: brand[40],\n        colorBrandBackgroundSelected: brand[60],\n        colorCompoundBrandBackground: brand[80],\n        colorCompoundBrandBackgroundHover: brand[70],\n        colorCompoundBrandBackgroundPressed: brand[60],\n        colorBrandBackgroundStatic: brand[80],\n        colorBrandBackground2: brand[160],\n        colorBrandBackground2Hover: brand[150],\n        colorBrandBackground2Pressed: brand[130],\n        colorBrandBackground3Static: brand[60],\n        colorBrandBackground4Static: brand[40],\n        colorBrandBackgroundInverted: white,\n        colorBrandBackgroundInvertedHover: brand[160],\n        colorBrandBackgroundInvertedPressed: brand[140],\n        colorBrandBackgroundInvertedSelected: brand[150],\n        colorNeutralCardBackground: grey[98],\n        colorNeutralCardBackgroundHover: white,\n        colorNeutralCardBackgroundPressed: grey[96],\n        colorNeutralCardBackgroundSelected: grey[92],\n        colorNeutralCardBackgroundDisabled: grey[94],\n        colorNeutralStrokeAccessible: grey[38],\n        colorNeutralStrokeAccessibleHover: grey[34],\n        colorNeutralStrokeAccessiblePressed: grey[30],\n        colorNeutralStrokeAccessibleSelected: brand[80],\n        colorNeutralStroke1: grey[82],\n        colorNeutralStroke1Hover: grey[78],\n        colorNeutralStroke1Pressed: grey[70],\n        colorNeutralStroke1Selected: grey[74],\n        colorNeutralStroke2: grey[88],\n        colorNeutralStroke3: grey[94],\n        colorNeutralStrokeSubtle: grey[88],\n        colorNeutralStrokeOnBrand: white,\n        colorNeutralStrokeOnBrand2: white,\n        colorNeutralStrokeOnBrand2Hover: white,\n        colorNeutralStrokeOnBrand2Pressed: white,\n        colorNeutralStrokeOnBrand2Selected: white,\n        colorBrandStroke1: brand[80],\n        colorBrandStroke2: brand[140],\n        colorBrandStroke2Hover: brand[120],\n        colorBrandStroke2Pressed: brand[80],\n        colorBrandStroke2Contrast: brand[140],\n        colorCompoundBrandStroke: brand[80],\n        colorCompoundBrandStrokeHover: brand[70],\n        colorCompoundBrandStrokePressed: brand[60],\n        colorNeutralStrokeDisabled: grey[88],\n        colorNeutralStrokeInvertedDisabled: whiteAlpha[40],\n        colorTransparentStroke: 'transparent',\n        colorTransparentStrokeInteractive: 'transparent',\n        colorTransparentStrokeDisabled: 'transparent',\n        colorNeutralStrokeAlpha: blackAlpha[5],\n        colorNeutralStrokeAlpha2: whiteAlpha[20],\n        colorStrokeFocus1: white,\n        colorStrokeFocus2: black,\n        colorNeutralShadowAmbient: 'rgba(0,0,0,0.12)',\n        colorNeutralShadowKey: 'rgba(0,0,0,0.14)',\n        colorNeutralShadowAmbientLighter: 'rgba(0,0,0,0.06)',\n        colorNeutralShadowKeyLighter: 'rgba(0,0,0,0.07)',\n        colorNeutralShadowAmbientDarker: 'rgba(0,0,0,0.20)',\n        colorNeutralShadowKeyDarker: 'rgba(0,0,0,0.24)',\n        colorBrandShadowAmbient: 'rgba(0,0,0,0.30)',\n        colorBrandShadowKey: 'rgba(0,0,0,0.25)'\n    });\n", "export const borderRadius = {\n    borderRadiusNone: '0',\n    borderRadiusSmall: '2px',\n    borderRadiusMedium: '4px',\n    borderRadiusLarge: '6px',\n    borderRadiusXLarge: '8px',\n    borderRadiusCircular: '10000px'\n};\n", "export const curves = {\n    curveAccelerateMax: 'cubic-bezier(0.9,0.1,1,0.2)',\n    curveAccelerateMid: 'cubic-bezier(1,0,1,1)',\n    curveAccelerateMin: 'cubic-bezier(0.8,0,0.78,1)',\n    curveDecelerateMax: 'cubic-bezier(0.1,0.9,0.2,1)',\n    curveDecelerateMid: 'cubic-bezier(0,0,0,1)',\n    curveDecelerateMin: 'cubic-bezier(0.33,0,0.1,1)',\n    curveEasyEaseMax: 'cubic-bezier(0.8,0,0.2,1)',\n    curveEasyEase: 'cubic-bezier(0.33,0,0.67,1)',\n    curveLinear: 'cubic-bezier(0,0,1,1)'\n};\n", "export const durations = {\n    durationUltraFast: '50ms',\n    durationFaster: '100ms',\n    durationFast: '150ms',\n    durationNormal: '200ms',\n    durationGentle: '250ms',\n    durationSlow: '300ms',\n    durationSlower: '400ms',\n    durationUltraSlow: '500ms'\n};\n", "export const fontSizes = {\n    fontSizeBase100: '10px',\n    fontSizeBase200: '12px',\n    fontSizeBase300: '14px',\n    fontSizeBase400: '16px',\n    fontSizeBase500: '20px',\n    fontSizeBase600: '24px',\n    fontSizeHero700: '28px',\n    fontSizeHero800: '32px',\n    fontSizeHero900: '40px',\n    fontSizeHero1000: '68px'\n};\nexport const lineHeights = {\n    lineHeightBase100: '14px',\n    lineHeightBase200: '16px',\n    lineHeightBase300: '20px',\n    lineHeightBase400: '22px',\n    lineHeightBase500: '28px',\n    lineHeightBase600: '32px',\n    lineHeightHero700: '36px',\n    lineHeightHero800: '40px',\n    lineHeightHero900: '52px',\n    lineHeightHero1000: '92px'\n};\nexport const fontWeights = {\n    fontWeightRegular: 400,\n    fontWeightMedium: 500,\n    fontWeightSemibold: 600,\n    fontWeightBold: 700\n};\nexport const fontFamilies = {\n    fontFamilyBase: // eslint-disable-next-line @fluentui/max-len\n    \"'Segoe UI', 'Segoe UI Web (West European)', -apple-system, BlinkMacSystemFont, Roboto, 'Helvetica Neue', sans-serif\",\n    fontFamilyMonospace: \"Consolas, 'Courier New', Courier, monospace\",\n    fontFamilyNumeric: // eslint-disable-next-line @fluentui/max-len\n    \"Bahnschrift, 'Segoe UI', 'Segoe UI Web (West European)', -apple-system, BlinkMacSystemFont, Roboto, 'Helvetica Neue', sans-serif\"\n};\n", "// Intentionally not exported! Use horizontalSpacings and verticalSpacings instead.\nconst spacings = {\n    none: '0',\n    xxs: '2px',\n    xs: '4px',\n    sNudge: '6px',\n    s: '8px',\n    mNudge: '10px',\n    m: '12px',\n    l: '16px',\n    xl: '20px',\n    xxl: '24px',\n    xxxl: '32px'\n};\nexport const horizontalSpacings = {\n    spacingHorizontalNone: spacings.none,\n    spacingHorizontalXXS: spacings.xxs,\n    spacingHorizontalXS: spacings.xs,\n    spacingHorizontalSNudge: spacings.sNudge,\n    spacingHorizontalS: spacings.s,\n    spacingHorizontalMNudge: spacings.mNudge,\n    spacingHorizontalM: spacings.m,\n    spacingHorizontalL: spacings.l,\n    spacingHorizontalXL: spacings.xl,\n    spacingHorizontalXXL: spacings.xxl,\n    spacingHorizontalXXXL: spacings.xxxl\n};\nexport const verticalSpacings = {\n    spacingVerticalNone: spacings.none,\n    spacingVerticalXXS: spacings.xxs,\n    spacingVerticalXS: spacings.xs,\n    spacingVerticalSNudge: spacings.sNudge,\n    spacingVerticalS: spacings.s,\n    spacingVerticalMNudge: spacings.mNudge,\n    spacingVerticalM: spacings.m,\n    spacingVerticalL: spacings.l,\n    spacingVerticalXL: spacings.xl,\n    spacingVerticalXXL: spacings.xxl,\n    spacingVerticalXXXL: spacings.xxxl\n};\n", "export const strokeWidths = {\n    strokeWidthThin: '1px',\n    strokeWidthThick: '2px',\n    strokeWidthThicker: '3px',\n    strokeWidthThickest: '4px'\n};\n", "export function createShadowTokens(ambientColor, keyColor, tokenSuffix = '') {\n    return {\n        [`shadow2${tokenSuffix}`]: `0 0 2px ${ambientColor}, 0 1px 2px ${keyColor}`,\n        [`shadow4${tokenSuffix}`]: `0 0 2px ${ambientColor}, 0 2px 4px ${keyColor}`,\n        [`shadow8${tokenSuffix}`]: `0 0 2px ${ambientColor}, 0 4px 8px ${keyColor}`,\n        [`shadow16${tokenSuffix}`]: `0 0 2px ${ambientColor}, 0 8px 16px ${keyColor}`,\n        [`shadow28${tokenSuffix}`]: `0 0 8px ${ambientColor}, 0 14px 28px ${keyColor}`,\n        [`shadow64${tokenSuffix}`]: `0 0 8px ${ambientColor}, 0 32px 64px ${keyColor}`\n    };\n}\n", "import { colorPaletteTokens, colorStatusTokens } from \"../alias/lightColorPalette.js\";\nimport { generateColorTokens } from \"../alias/lightColor.js\";\nimport { borderRadius, fontSizes, lineHeights, fontFamilies, strokeWidths, fontWeights } from \"../global/index.js\";\nimport { createShadowTokens } from \"./shadows.js\";\nimport { durations } from \"../global/durations.js\";\nimport { curves } from \"../global/curves.js\";\nimport { horizontalSpacings, verticalSpacings } from \"../global/spacings.js\";\nexport const createLightTheme = (brand)=>{\n    const colorTokens = generateColorTokens(brand);\n    return {\n        ...borderRadius,\n        ...fontSizes,\n        ...lineHeights,\n        ...fontFamilies,\n        ...fontWeights,\n        ...strokeWidths,\n        ...horizontalSpacings,\n        ...verticalSpacings,\n        ...durations,\n        ...curves,\n        ...colorTokens,\n        ...colorPaletteTokens,\n        ...colorStatusTokens,\n        ...createShadowTokens(colorTokens.colorNeutralShadowAmbient, colorTokens.colorNeutralShadowKey),\n        ...createShadowTokens(colorTokens.colorBrandShadowAmbient, colorTokens.colorBrandShadowKey, 'Brand')\n    };\n};\n", "export const brandWeb = {\n    10: `#061724`,\n    20: `#082338`,\n    30: `#0a2e4a`,\n    40: `#0c3b5e`,\n    50: `#0e4775`,\n    60: `#0f548c`,\n    70: `#115ea3`,\n    80: `#0f6cbd`,\n    90: `#2886de`,\n    100: `#479ef5`,\n    110: `#62abf5`,\n    120: `#77b7f7`,\n    130: `#96c6fa`,\n    140: `#b4d6fa`,\n    150: `#cfe4fa`,\n    160: `#ebf3fc`\n};\nexport const brandTeams = {\n    10: `#2b2b40`,\n    20: `#2f2f4a`,\n    30: `#333357`,\n    40: `#383966`,\n    50: `#3d3e78`,\n    60: `#444791`,\n    70: `#4f52b2`,\n    80: `#5b5fc7`,\n    90: `#7579eb`,\n    100: `#7f85f5`,\n    110: `#9299f7`,\n    120: `#aab1fa`,\n    130: `#b6bcfa`,\n    140: `#c5cbfa`,\n    150: `#dce0fa`,\n    160: `#e8ebfa`\n};\nexport const brandOffice = {\n    10: `#29130b`,\n    20: `#4d2415`,\n    30: `#792000`,\n    40: `#99482b`,\n    50: `#a52c00`,\n    60: `#c33400`,\n    70: `#e06a3f`,\n    80: `#d83b01`,\n    90: `#dd4f1b`,\n    100: `#fe7948`,\n    110: `#ff865a`,\n    120: `#ff9973`,\n    130: `#e8825d`,\n    140: `#ffb498`,\n    150: `#f4beaa`,\n    160: `#f9dcd1`\n};\n", "import { createLightTheme } from \"../../utils/createLightTheme.js\";\nimport { brandTeams } from \"../../global/brandColors.js\";\nexport const teamsLightTheme = createLightTheme(brandTeams);\n", "/* color palette used in both darkTheme and teamsDarkTheme */ import { statusSharedColors, personaSharedColors, mappedStatusColors } from \"../global/colorPalette.js\";\nimport { statusSharedColorNames, personaSharedColorNames } from \"../sharedColorNames.js\";\nimport { statusColorMapping } from \"../statusColorMapping.js\";\nconst statusColorPaletteTokens = statusSharedColorNames.reduce((acc, sharedColor)=>{\n    const color = sharedColor.slice(0, 1).toUpperCase() + sharedColor.slice(1);\n    const sharedColorTokens = {\n        [`colorPalette${color}Background1`]: statusSharedColors[sharedColor].shade40,\n        [`colorPalette${color}Background2`]: statusSharedColors[sharedColor].shade30,\n        [`colorPalette${color}Background3`]: statusSharedColors[sharedColor].primary,\n        [`colorPalette${color}Foreground1`]: statusSharedColors[sharedColor].tint30,\n        [`colorPalette${color}Foreground2`]: statusSharedColors[sharedColor].tint40,\n        [`colorPalette${color}Foreground3`]: statusSharedColors[sharedColor].tint20,\n        [`colorPalette${color}BorderActive`]: statusSharedColors[sharedColor].tint30,\n        [`colorPalette${color}Border1`]: statusSharedColors[sharedColor].primary,\n        [`colorPalette${color}Border2`]: statusSharedColors[sharedColor].tint20\n    };\n    return Object.assign(acc, sharedColorTokens);\n}, {});\n// one-off patches\nstatusColorPaletteTokens.colorPaletteRedForeground3 = statusSharedColors.red.tint30;\nstatusColorPaletteTokens.colorPaletteRedBorder2 = statusSharedColors.red.tint30;\nstatusColorPaletteTokens.colorPaletteGreenForeground3 = statusSharedColors.green.tint40;\nstatusColorPaletteTokens.colorPaletteGreenBorder2 = statusSharedColors.green.tint40;\nstatusColorPaletteTokens.colorPaletteDarkOrangeForeground3 = statusSharedColors.darkOrange.tint30;\nstatusColorPaletteTokens.colorPaletteDarkOrangeBorder2 = statusSharedColors.darkOrange.tint30;\nstatusColorPaletteTokens.colorPaletteRedForegroundInverted = statusSharedColors.red.primary;\nstatusColorPaletteTokens.colorPaletteGreenForegroundInverted = statusSharedColors.green.primary;\nstatusColorPaletteTokens.colorPaletteYellowForegroundInverted = statusSharedColors.yellow.shade30;\nconst personaColorPaletteTokens = personaSharedColorNames.reduce((acc, sharedColor)=>{\n    const color = sharedColor.slice(0, 1).toUpperCase() + sharedColor.slice(1);\n    const sharedColorTokens = {\n        [`colorPalette${color}Background2`]: personaSharedColors[sharedColor].shade30,\n        [`colorPalette${color}Foreground2`]: personaSharedColors[sharedColor].tint40,\n        [`colorPalette${color}BorderActive`]: personaSharedColors[sharedColor].tint30\n    };\n    return Object.assign(acc, sharedColorTokens);\n}, {});\n// one-off patches\npersonaColorPaletteTokens.colorPaletteDarkRedBackground2 = personaSharedColors.darkRed.shade20;\npersonaColorPaletteTokens.colorPalettePlumBackground2 = personaSharedColors.plum.shade20;\nexport const colorPaletteTokens = {\n    ...statusColorPaletteTokens,\n    ...personaColorPaletteTokens\n};\nexport const colorStatusTokens = Object.entries(statusColorMapping).reduce((acc, [statusColor, sharedColor])=>{\n    const color = statusColor.slice(0, 1).toUpperCase() + statusColor.slice(1);\n    // TODO: double check the mapping with design - see the one-off patches above\n    const statusColorTokens = {\n        [`colorStatus${color}Background1`]: mappedStatusColors[sharedColor].shade40,\n        [`colorStatus${color}Background2`]: mappedStatusColors[sharedColor].shade30,\n        [`colorStatus${color}Background3`]: mappedStatusColors[sharedColor].primary,\n        [`colorStatus${color}Foreground1`]: mappedStatusColors[sharedColor].tint30,\n        [`colorStatus${color}Foreground2`]: mappedStatusColors[sharedColor].tint40,\n        [`colorStatus${color}Foreground3`]: mappedStatusColors[sharedColor].tint20,\n        [`colorStatus${color}BorderActive`]: mappedStatusColors[sharedColor].tint30,\n        [`colorStatus${color}ForegroundInverted`]: mappedStatusColors[sharedColor].shade10,\n        [`colorStatus${color}Border1`]: mappedStatusColors[sharedColor].primary,\n        [`colorStatus${color}Border2`]: mappedStatusColors[sharedColor].tint20\n    };\n    return Object.assign(acc, statusColorTokens);\n}, {});\n// one-off overrides for colorStatus tokens\ncolorStatusTokens.colorStatusDangerBackground3Hover = mappedStatusColors[statusColorMapping.danger].shade10;\ncolorStatusTokens.colorStatusDangerBackground3Pressed = mappedStatusColors[statusColorMapping.danger].shade20;\ncolorStatusTokens.colorStatusDangerForeground3 = mappedStatusColors[statusColorMapping.danger].tint40;\ncolorStatusTokens.colorStatusDangerBorder2 = mappedStatusColors[statusColorMapping.danger].tint30;\ncolorStatusTokens.colorStatusSuccessForeground3 = mappedStatusColors[statusColorMapping.success].tint40;\ncolorStatusTokens.colorStatusSuccessBorder2 = mappedStatusColors[statusColorMapping.success].tint40;\ncolorStatusTokens.colorStatusWarningForegroundInverted = mappedStatusColors[statusColorMapping.warning].shade20;\n", "/* !!! DO NOT EDIT !!! */ /* This file has been generated by the token pipeline */ import { black, blackAlpha, grey, grey10Alpha, grey12Alpha, grey14Alpha, white, whiteAlpha } from \"../global/colors.js\";\nexport const generateColorTokens = (brand)=>({\n        colorNeutralForeground1: white,\n        colorNeutralForeground1Hover: white,\n        colorNeutralForeground1Pressed: white,\n        colorNeutralForeground1Selected: white,\n        colorNeutralForeground2: grey[84],\n        colorNeutralForeground2Hover: white,\n        colorNeutralForeground2Pressed: white,\n        colorNeutralForeground2Selected: white,\n        colorNeutralForeground2BrandHover: brand[100],\n        colorNeutralForeground2BrandPressed: brand[90],\n        colorNeutralForeground2BrandSelected: brand[100],\n        colorNeutralForeground3: grey[68],\n        colorNeutralForeground3Hover: grey[84],\n        colorNeutralForeground3Pressed: grey[84],\n        colorNeutralForeground3Selected: grey[84],\n        colorNeutralForeground3BrandHover: brand[100],\n        colorNeutralForeground3BrandPressed: brand[90],\n        colorNeutralForeground3BrandSelected: brand[100],\n        colorNeutralForeground4: grey[60],\n        colorNeutralForegroundDisabled: grey[36],\n        colorNeutralForegroundInvertedDisabled: whiteAlpha[40],\n        colorBrandForegroundLink: brand[100],\n        colorBrandForegroundLinkHover: brand[110],\n        colorBrandForegroundLinkPressed: brand[90],\n        colorBrandForegroundLinkSelected: brand[100],\n        colorNeutralForeground2Link: grey[84],\n        colorNeutralForeground2LinkHover: white,\n        colorNeutralForeground2LinkPressed: white,\n        colorNeutralForeground2LinkSelected: white,\n        colorCompoundBrandForeground1: brand[100],\n        colorCompoundBrandForeground1Hover: brand[110],\n        colorCompoundBrandForeground1Pressed: brand[90],\n        colorBrandForeground1: brand[100],\n        colorBrandForeground2: brand[120],\n        colorBrandForeground2Hover: brand[130],\n        colorBrandForeground2Pressed: brand[160],\n        colorNeutralForeground1Static: grey[14],\n        colorNeutralForegroundStaticInverted: white,\n        colorNeutralForegroundInverted: grey[14],\n        colorNeutralForegroundInvertedHover: grey[14],\n        colorNeutralForegroundInvertedPressed: grey[14],\n        colorNeutralForegroundInvertedSelected: grey[14],\n        colorNeutralForegroundInverted2: grey[14],\n        colorNeutralForegroundOnBrand: white,\n        colorNeutralForegroundInvertedLink: white,\n        colorNeutralForegroundInvertedLinkHover: white,\n        colorNeutralForegroundInvertedLinkPressed: white,\n        colorNeutralForegroundInvertedLinkSelected: white,\n        colorBrandForegroundInverted: brand[80],\n        colorBrandForegroundInvertedHover: brand[70],\n        colorBrandForegroundInvertedPressed: brand[60],\n        colorBrandForegroundOnLight: brand[80],\n        colorBrandForegroundOnLightHover: brand[70],\n        colorBrandForegroundOnLightPressed: brand[50],\n        colorBrandForegroundOnLightSelected: brand[60],\n        colorNeutralBackground1: grey[16],\n        colorNeutralBackground1Hover: grey[24],\n        colorNeutralBackground1Pressed: grey[12],\n        colorNeutralBackground1Selected: grey[22],\n        colorNeutralBackground2: grey[14],\n        colorNeutralBackground2Hover: grey[22],\n        colorNeutralBackground2Pressed: grey[10],\n        colorNeutralBackground2Selected: grey[20],\n        colorNeutralBackground3: grey[12],\n        colorNeutralBackground3Hover: grey[20],\n        colorNeutralBackground3Pressed: grey[8],\n        colorNeutralBackground3Selected: grey[18],\n        colorNeutralBackground4: grey[8],\n        colorNeutralBackground4Hover: grey[16],\n        colorNeutralBackground4Pressed: grey[4],\n        colorNeutralBackground4Selected: grey[14],\n        colorNeutralBackground5: grey[4],\n        colorNeutralBackground5Hover: grey[12],\n        colorNeutralBackground5Pressed: black,\n        colorNeutralBackground5Selected: grey[10],\n        colorNeutralBackground6: grey[20],\n        colorNeutralBackgroundInverted: white,\n        colorNeutralBackgroundStatic: grey[24],\n        colorNeutralBackgroundAlpha: grey10Alpha[50],\n        colorNeutralBackgroundAlpha2: grey12Alpha[70],\n        colorSubtleBackground: 'transparent',\n        colorSubtleBackgroundHover: grey[22],\n        colorSubtleBackgroundPressed: grey[18],\n        colorSubtleBackgroundSelected: grey[20],\n        colorSubtleBackgroundLightAlphaHover: grey14Alpha[80],\n        colorSubtleBackgroundLightAlphaPressed: grey14Alpha[50],\n        colorSubtleBackgroundLightAlphaSelected: 'transparent',\n        colorSubtleBackgroundInverted: 'transparent',\n        colorSubtleBackgroundInvertedHover: blackAlpha[10],\n        colorSubtleBackgroundInvertedPressed: blackAlpha[30],\n        colorSubtleBackgroundInvertedSelected: blackAlpha[20],\n        colorTransparentBackground: 'transparent',\n        colorTransparentBackgroundHover: 'transparent',\n        colorTransparentBackgroundPressed: 'transparent',\n        colorTransparentBackgroundSelected: 'transparent',\n        colorNeutralBackgroundDisabled: grey[8],\n        colorNeutralBackgroundInvertedDisabled: whiteAlpha[10],\n        colorNeutralStencil1: grey[34],\n        colorNeutralStencil2: grey[20],\n        colorNeutralStencil1Alpha: whiteAlpha[10],\n        colorNeutralStencil2Alpha: whiteAlpha[5],\n        colorBackgroundOverlay: blackAlpha[50],\n        colorScrollbarOverlay: whiteAlpha[60],\n        colorBrandBackground: brand[70],\n        colorBrandBackgroundHover: brand[80],\n        colorBrandBackgroundPressed: brand[40],\n        colorBrandBackgroundSelected: brand[60],\n        colorCompoundBrandBackground: brand[100],\n        colorCompoundBrandBackgroundHover: brand[110],\n        colorCompoundBrandBackgroundPressed: brand[90],\n        colorBrandBackgroundStatic: brand[80],\n        colorBrandBackground2: brand[20],\n        colorBrandBackground2Hover: brand[40],\n        colorBrandBackground2Pressed: brand[10],\n        colorBrandBackground3Static: brand[60],\n        colorBrandBackground4Static: brand[40],\n        colorBrandBackgroundInverted: white,\n        colorBrandBackgroundInvertedHover: brand[160],\n        colorBrandBackgroundInvertedPressed: brand[140],\n        colorBrandBackgroundInvertedSelected: brand[150],\n        colorNeutralCardBackground: grey[20],\n        colorNeutralCardBackgroundHover: grey[24],\n        colorNeutralCardBackgroundPressed: grey[18],\n        colorNeutralCardBackgroundSelected: grey[22],\n        colorNeutralCardBackgroundDisabled: grey[8],\n        colorNeutralStrokeAccessible: grey[68],\n        colorNeutralStrokeAccessibleHover: grey[74],\n        colorNeutralStrokeAccessiblePressed: grey[70],\n        colorNeutralStrokeAccessibleSelected: brand[100],\n        colorNeutralStroke1: grey[40],\n        colorNeutralStroke1Hover: grey[46],\n        colorNeutralStroke1Pressed: grey[42],\n        colorNeutralStroke1Selected: grey[44],\n        colorNeutralStroke2: grey[32],\n        colorNeutralStroke3: grey[24],\n        colorNeutralStrokeSubtle: grey[4],\n        colorNeutralStrokeOnBrand: grey[16],\n        colorNeutralStrokeOnBrand2: white,\n        colorNeutralStrokeOnBrand2Hover: white,\n        colorNeutralStrokeOnBrand2Pressed: white,\n        colorNeutralStrokeOnBrand2Selected: white,\n        colorBrandStroke1: brand[100],\n        colorBrandStroke2: brand[50],\n        colorBrandStroke2Hover: brand[50],\n        colorBrandStroke2Pressed: brand[30],\n        colorBrandStroke2Contrast: brand[50],\n        colorCompoundBrandStroke: brand[90],\n        colorCompoundBrandStrokeHover: brand[100],\n        colorCompoundBrandStrokePressed: brand[80],\n        colorNeutralStrokeDisabled: grey[26],\n        colorNeutralStrokeInvertedDisabled: whiteAlpha[40],\n        colorTransparentStroke: 'transparent',\n        colorTransparentStrokeInteractive: 'transparent',\n        colorTransparentStrokeDisabled: 'transparent',\n        colorNeutralStrokeAlpha: whiteAlpha[10],\n        colorNeutralStrokeAlpha2: whiteAlpha[20],\n        colorStrokeFocus1: black,\n        colorStrokeFocus2: white,\n        colorNeutralShadowAmbient: 'rgba(0,0,0,0.24)',\n        colorNeutralShadowKey: 'rgba(0,0,0,0.28)',\n        colorNeutralShadowAmbientLighter: 'rgba(0,0,0,0.12)',\n        colorNeutralShadowKeyLighter: 'rgba(0,0,0,0.14)',\n        colorNeutralShadowAmbientDarker: 'rgba(0,0,0,0.40)',\n        colorNeutralShadowKeyDarker: 'rgba(0,0,0,0.48)',\n        colorBrandShadowAmbient: 'rgba(0,0,0,0.30)',\n        colorBrandShadowKey: 'rgba(0,0,0,0.25)'\n    });\n", "import { colorPaletteTokens, colorStatusTokens } from \"../alias/darkColorPalette.js\";\nimport { generateColorTokens } from \"../alias/teamsDarkColor.js\";\nimport { borderRadius, fontSizes, lineHeights, fontFamilies, strokeWidths, fontWeights } from \"../global/index.js\";\nimport { createShadowTokens } from \"./shadows.js\";\nimport { durations } from \"../global/durations.js\";\nimport { curves } from \"../global/curves.js\";\nimport { horizontalSpacings, verticalSpacings } from \"../global/spacings.js\";\nexport const createTeamsDarkTheme = (brand)=>{\n    const colorTokens = generateColorTokens(brand);\n    return {\n        ...borderRadius,\n        ...fontSizes,\n        ...lineHeights,\n        ...fontFamilies,\n        ...fontWeights,\n        ...strokeWidths,\n        ...horizontalSpacings,\n        ...verticalSpacings,\n        ...durations,\n        ...curves,\n        ...colorTokens,\n        ...colorPaletteTokens,\n        ...colorStatusTokens,\n        ...createShadowTokens(colorTokens.colorNeutralShadowAmbient, colorTokens.colorNeutralShadowKey),\n        ...createShadowTokens(colorTokens.colorBrandShadowAmbient, colorTokens.colorBrandShadowKey, 'Brand')\n    };\n};\n", "import { createTeamsDarkTheme } from \"../../utils/createTeamsDarkTheme.js\";\nimport { brandTeams } from \"../../global/brandColors.js\";\nexport const teamsDarkTheme = createTeamsDarkTheme(brandTeams);\n", "import { hcHighlight, hcCanvas, hcCanvasText } from \"../global/colors.js\";\nimport { statusSharedColorNames, personaSharedColorNames } from \"../sharedColorNames.js\";\nimport { statusColorMapping } from \"../statusColorMapping.js\";\nconst statusColorPaletteTokens = statusSharedColorNames.reduce((acc, sharedColor)=>{\n    const color = sharedColor.slice(0, 1).toUpperCase() + sharedColor.slice(1);\n    const sharedColorTokens = {\n        [`colorPalette${color}Background1`]: hcCanvas,\n        [`colorPalette${color}Background2`]: hcCanvas,\n        [`colorPalette${color}Background3`]: hcCanvasText,\n        [`colorPalette${color}Foreground1`]: hcCanvasText,\n        [`colorPalette${color}Foreground2`]: hcCanvasText,\n        [`colorPalette${color}Foreground3`]: hcCanvasText,\n        [`colorPalette${color}BorderActive`]: hcHighlight,\n        [`colorPalette${color}Border1`]: hcCanvasText,\n        [`colorPalette${color}Border2`]: hcCanvasText\n    };\n    return Object.assign(acc, sharedColorTokens);\n}, {});\n// one-off patches\nstatusColorPaletteTokens.colorPaletteRedForegroundInverted = hcCanvasText;\nstatusColorPaletteTokens.colorPaletteGreenForegroundInverted = hcCanvasText;\nstatusColorPaletteTokens.colorPaletteYellowForegroundInverted = hcCanvasText;\nconst personaColorPaletteTokens = personaSharedColorNames.reduce((acc, sharedColor)=>{\n    const color = sharedColor.slice(0, 1).toUpperCase() + sharedColor.slice(1);\n    const sharedColorTokens = {\n        [`colorPalette${color}Background2`]: hcCanvas,\n        [`colorPalette${color}Foreground2`]: hcCanvasText,\n        [`colorPalette${color}BorderActive`]: hcHighlight\n    };\n    return Object.assign(acc, sharedColorTokens);\n}, {});\nexport const colorPaletteTokens = {\n    ...statusColorPaletteTokens,\n    ...personaColorPaletteTokens\n};\nexport const colorStatusTokens = Object.entries(statusColorMapping).reduce((acc, [statusColor, sharedColor])=>{\n    const color = statusColor.slice(0, 1).toUpperCase() + statusColor.slice(1);\n    // TODO: double check the mapping with design\n    const statusColorTokens = {\n        [`colorStatus${color}Background1`]: hcCanvas,\n        [`colorStatus${color}Background2`]: hcCanvas,\n        [`colorStatus${color}Background3`]: hcCanvasText,\n        [`colorStatus${color}Foreground1`]: hcCanvasText,\n        [`colorStatus${color}Foreground2`]: hcCanvasText,\n        [`colorStatus${color}Foreground3`]: hcCanvasText,\n        [`colorStatus${color}BorderActive`]: hcHighlight,\n        [`colorStatus${color}ForegroundInverted`]: hcCanvasText,\n        [`colorStatus${color}Border1`]: hcCanvasText,\n        [`colorStatus${color}Border2`]: hcCanvasText\n    };\n    return Object.assign(acc, statusColorTokens);\n}, {});\n// one-off overrides for colorStatus tokens\ncolorStatusTokens.colorStatusDangerBackground3Hover = hcHighlight;\ncolorStatusTokens.colorStatusDangerBackground3Pressed = hcHighlight;\n", "/* !!! DO NOT EDIT !!! */ /* This file has been generated by the token pipeline */ import { blackAlpha, hcButtonFace, hcButtonText, hcCanvas, hcCanvasText, hcDisabled, hcHighlight, hcHighlightText, hcHyperlink } from \"../global/colors.js\";\nexport const generateColorTokens = ()=>({\n        colorNeutralForeground1: hcCanvasText,\n        colorNeutralForeground1Hover: hcHighlightText,\n        colorNeutralForeground1Pressed: hcHighlightText,\n        colorNeutralForeground1Selected: hcHighlightText,\n        colorNeutralForeground2: hcCanvasText,\n        colorNeutralForeground2Hover: hcHighlightText,\n        colorNeutralForeground2Pressed: hcHighlightText,\n        colorNeutralForeground2Selected: hcHighlightText,\n        colorNeutralForeground2BrandHover: hcHighlightText,\n        colorNeutralForeground2BrandPressed: hcHighlightText,\n        colorNeutralForeground2BrandSelected: hcHighlightText,\n        colorNeutralForeground3: hcCanvasText,\n        colorNeutralForeground3Hover: hcHighlightText,\n        colorNeutralForeground3Pressed: hcHighlightText,\n        colorNeutralForeground3Selected: hcHighlightText,\n        colorNeutralForeground3BrandHover: hcHighlightText,\n        colorNeutralForeground3BrandPressed: hcHighlightText,\n        colorNeutralForeground3BrandSelected: hcHighlightText,\n        colorNeutralForeground4: hcCanvasText,\n        colorNeutralForegroundDisabled: hcDisabled,\n        colorNeutralForegroundInvertedDisabled: hcDisabled,\n        colorBrandForegroundLink: hcHyperlink,\n        colorBrandForegroundLinkHover: hcHyperlink,\n        colorBrandForegroundLinkPressed: hcHyperlink,\n        colorBrandForegroundLinkSelected: hcHyperlink,\n        colorNeutralForeground2Link: hcHyperlink,\n        colorNeutralForeground2LinkHover: hcHyperlink,\n        colorNeutralForeground2LinkPressed: hcHyperlink,\n        colorNeutralForeground2LinkSelected: hcHyperlink,\n        colorCompoundBrandForeground1: hcHighlight,\n        colorCompoundBrandForeground1Hover: hcHighlight,\n        colorCompoundBrandForeground1Pressed: hcHighlight,\n        colorBrandForeground1: hcCanvasText,\n        colorBrandForeground2: hcCanvasText,\n        colorBrandForeground2Hover: hcCanvasText,\n        colorBrandForeground2Pressed: hcCanvasText,\n        colorNeutralForeground1Static: hcCanvas,\n        colorNeutralForegroundStaticInverted: hcCanvasText,\n        colorNeutralForegroundInverted: hcHighlightText,\n        colorNeutralForegroundInvertedHover: hcHighlightText,\n        colorNeutralForegroundInvertedPressed: hcHighlightText,\n        colorNeutralForegroundInvertedSelected: hcHighlightText,\n        colorNeutralForegroundInverted2: hcCanvasText,\n        colorNeutralForegroundOnBrand: hcButtonText,\n        colorNeutralForegroundInvertedLink: hcHyperlink,\n        colorNeutralForegroundInvertedLinkHover: hcHyperlink,\n        colorNeutralForegroundInvertedLinkPressed: hcHyperlink,\n        colorNeutralForegroundInvertedLinkSelected: hcHyperlink,\n        colorBrandForegroundInverted: hcCanvasText,\n        colorBrandForegroundInvertedHover: hcHighlightText,\n        colorBrandForegroundInvertedPressed: hcHighlightText,\n        colorBrandForegroundOnLight: hcButtonText,\n        colorBrandForegroundOnLightHover: hcHighlightText,\n        colorBrandForegroundOnLightPressed: hcHighlightText,\n        colorBrandForegroundOnLightSelected: hcHighlightText,\n        colorNeutralBackground1: hcCanvas,\n        colorNeutralBackground1Hover: hcHighlight,\n        colorNeutralBackground1Pressed: hcHighlight,\n        colorNeutralBackground1Selected: hcHighlight,\n        colorNeutralBackground2: hcCanvas,\n        colorNeutralBackground2Hover: hcHighlight,\n        colorNeutralBackground2Pressed: hcHighlight,\n        colorNeutralBackground2Selected: hcHighlight,\n        colorNeutralBackground3: hcCanvas,\n        colorNeutralBackground3Hover: hcHighlight,\n        colorNeutralBackground3Pressed: hcHighlight,\n        colorNeutralBackground3Selected: hcHighlight,\n        colorNeutralBackground4: hcCanvas,\n        colorNeutralBackground4Hover: hcHighlight,\n        colorNeutralBackground4Pressed: hcHighlight,\n        colorNeutralBackground4Selected: hcHighlight,\n        colorNeutralBackground5: hcCanvas,\n        colorNeutralBackground5Hover: hcHighlight,\n        colorNeutralBackground5Pressed: hcHighlight,\n        colorNeutralBackground5Selected: hcHighlight,\n        colorNeutralBackground6: hcCanvas,\n        colorNeutralBackgroundInverted: hcCanvas,\n        colorNeutralBackgroundStatic: hcCanvas,\n        colorNeutralBackgroundAlpha: hcCanvas,\n        colorNeutralBackgroundAlpha2: hcCanvas,\n        colorSubtleBackground: 'transparent',\n        colorSubtleBackgroundHover: hcHighlight,\n        colorSubtleBackgroundPressed: hcHighlight,\n        colorSubtleBackgroundSelected: hcHighlight,\n        colorSubtleBackgroundLightAlphaHover: hcHighlight,\n        colorSubtleBackgroundLightAlphaPressed: hcHighlight,\n        colorSubtleBackgroundLightAlphaSelected: hcHighlight,\n        colorSubtleBackgroundInverted: 'transparent',\n        colorSubtleBackgroundInvertedHover: hcHighlight,\n        colorSubtleBackgroundInvertedPressed: hcHighlight,\n        colorSubtleBackgroundInvertedSelected: hcHighlight,\n        colorTransparentBackground: 'transparent',\n        colorTransparentBackgroundHover: hcHighlight,\n        colorTransparentBackgroundPressed: hcHighlight,\n        colorTransparentBackgroundSelected: hcHighlight,\n        colorNeutralBackgroundDisabled: hcCanvas,\n        colorNeutralBackgroundInvertedDisabled: hcCanvas,\n        colorNeutralStencil1: hcCanvasText,\n        colorNeutralStencil2: hcCanvasText,\n        colorNeutralStencil1Alpha: hcCanvasText,\n        colorNeutralStencil2Alpha: hcCanvasText,\n        colorBackgroundOverlay: blackAlpha[50],\n        colorScrollbarOverlay: hcButtonFace,\n        colorBrandBackground: hcButtonFace,\n        colorBrandBackgroundHover: hcHighlight,\n        colorBrandBackgroundPressed: hcHighlight,\n        colorBrandBackgroundSelected: hcHighlight,\n        colorCompoundBrandBackground: hcHighlight,\n        colorCompoundBrandBackgroundHover: hcHighlight,\n        colorCompoundBrandBackgroundPressed: hcHighlight,\n        colorBrandBackgroundStatic: hcCanvas,\n        colorBrandBackground2: hcCanvas,\n        colorBrandBackground2Hover: hcCanvas,\n        colorBrandBackground2Pressed: hcCanvas,\n        colorBrandBackground3Static: hcCanvas,\n        colorBrandBackground4Static: hcCanvas,\n        colorBrandBackgroundInverted: hcButtonFace,\n        colorBrandBackgroundInvertedHover: hcHighlight,\n        colorBrandBackgroundInvertedPressed: hcHighlight,\n        colorBrandBackgroundInvertedSelected: hcHighlight,\n        colorNeutralCardBackground: hcCanvas,\n        colorNeutralCardBackgroundHover: hcHighlight,\n        colorNeutralCardBackgroundPressed: hcHighlight,\n        colorNeutralCardBackgroundSelected: hcHighlight,\n        colorNeutralCardBackgroundDisabled: hcCanvas,\n        colorNeutralStrokeAccessible: hcCanvasText,\n        colorNeutralStrokeAccessibleHover: hcHighlight,\n        colorNeutralStrokeAccessiblePressed: hcHighlight,\n        colorNeutralStrokeAccessibleSelected: hcHighlight,\n        colorNeutralStroke1: hcCanvasText,\n        colorNeutralStroke1Hover: hcHighlight,\n        colorNeutralStroke1Pressed: hcHighlight,\n        colorNeutralStroke1Selected: hcHighlight,\n        colorNeutralStroke2: hcCanvasText,\n        colorNeutralStroke3: hcCanvasText,\n        colorNeutralStrokeSubtle: hcCanvasText,\n        colorNeutralStrokeOnBrand: hcCanvas,\n        colorNeutralStrokeOnBrand2: hcCanvasText,\n        colorNeutralStrokeOnBrand2Hover: hcCanvasText,\n        colorNeutralStrokeOnBrand2Pressed: hcCanvasText,\n        colorNeutralStrokeOnBrand2Selected: hcCanvasText,\n        colorBrandStroke1: hcCanvasText,\n        colorBrandStroke2: hcCanvasText,\n        colorBrandStroke2Hover: hcHighlight,\n        colorBrandStroke2Pressed: hcHighlight,\n        colorBrandStroke2Contrast: hcCanvas,\n        colorCompoundBrandStroke: hcHighlight,\n        colorCompoundBrandStrokeHover: hcHighlight,\n        colorCompoundBrandStrokePressed: hcHighlight,\n        colorNeutralStrokeDisabled: hcDisabled,\n        colorNeutralStrokeInvertedDisabled: hcDisabled,\n        colorTransparentStroke: hcCanvasText,\n        colorTransparentStrokeInteractive: hcHighlight,\n        colorTransparentStrokeDisabled: hcDisabled,\n        colorNeutralStrokeAlpha: hcCanvasText,\n        colorNeutralStrokeAlpha2: hcCanvas,\n        colorStrokeFocus1: hcCanvas,\n        colorStrokeFocus2: hcHighlight,\n        colorNeutralShadowAmbient: 'rgba(0,0,0,0.24)',\n        colorNeutralShadowKey: 'rgba(0,0,0,0.28)',\n        colorNeutralShadowAmbientLighter: 'rgba(0,0,0,0.12)',\n        colorNeutralShadowKeyLighter: 'rgba(0,0,0,0.14)',\n        colorNeutralShadowAmbientDarker: 'rgba(0,0,0,0.40)',\n        colorNeutralShadowKeyDarker: 'rgba(0,0,0,0.48)',\n        colorBrandShadowAmbient: 'rgba(0,0,0,0.30)',\n        colorBrandShadowKey: 'rgba(0,0,0,0.25)'\n    });\n", "import { colorPaletteTokens, colorStatusTokens } from \"../alias/highContrastColorPalette.js\";\nimport { generateColorTokens } from \"../alias/highContrastColor.js\";\nimport { borderRadius, fontSizes, lineHeights, fontFamilies, strokeWidths, fontWeights } from \"../global/index.js\";\nimport { createShadowTokens } from \"./shadows.js\";\nimport { durations } from \"../global/durations.js\";\nimport { curves } from \"../global/curves.js\";\nimport { horizontalSpacings, verticalSpacings } from \"../global/spacings.js\";\nexport const createHighContrastTheme = ()=>{\n    const colorTokens = generateColorTokens();\n    return {\n        ...borderRadius,\n        ...fontSizes,\n        ...lineHeights,\n        ...fontFamilies,\n        ...fontWeights,\n        ...strokeWidths,\n        ...horizontalSpacings,\n        ...verticalSpacings,\n        ...durations,\n        ...curves,\n        ...colorTokens,\n        ...colorPaletteTokens,\n        ...colorStatusTokens,\n        ...createShadowTokens(colorTokens.colorNeutralShadowAmbient, colorTokens.colorNeutralShadowKey),\n        ...createShadowTokens(colorTokens.colorBrandShadowAmbient, colorTokens.colorBrandShadowKey, 'Brand')\n    };\n};\n", "import { createHighContrastTheme } from \"../../utils/createHighContrastTheme.js\";\nexport const teamsHighContrastTheme = createHighContrastTheme();\n", "import { createLightTheme } from \"../../utils/createLightTheme.js\";\nimport { brandWeb } from \"../../global/brandColors.js\";\nexport const webLightTheme = createLightTheme(brandWeb);\n", "/* !!! DO NOT EDIT !!! */ /* This file has been generated by the token pipeline */ import { black, blackAlpha, grey, grey10Alpha, grey12Alpha, grey14Alpha, white, whiteAlpha } from \"../global/colors.js\";\nexport const generateColorTokens = (brand)=>({\n        colorNeutralForeground1: white,\n        colorNeutralForeground1Hover: white,\n        colorNeutralForeground1Pressed: white,\n        colorNeutralForeground1Selected: white,\n        colorNeutralForeground2: grey[84],\n        colorNeutralForeground2Hover: white,\n        colorNeutralForeground2Pressed: white,\n        colorNeutralForeground2Selected: white,\n        colorNeutralForeground2BrandHover: brand[100],\n        colorNeutralForeground2BrandPressed: brand[90],\n        colorNeutralForeground2BrandSelected: brand[100],\n        colorNeutralForeground3: grey[68],\n        colorNeutralForeground3Hover: grey[84],\n        colorNeutralForeground3Pressed: grey[84],\n        colorNeutralForeground3Selected: grey[84],\n        colorNeutralForeground3BrandHover: brand[100],\n        colorNeutralForeground3BrandPressed: brand[90],\n        colorNeutralForeground3BrandSelected: brand[100],\n        colorNeutralForeground4: grey[60],\n        colorNeutralForegroundDisabled: grey[36],\n        colorNeutralForegroundInvertedDisabled: whiteAlpha[40],\n        colorBrandForegroundLink: brand[100],\n        colorBrandForegroundLinkHover: brand[110],\n        colorBrandForegroundLinkPressed: brand[90],\n        colorBrandForegroundLinkSelected: brand[100],\n        colorNeutralForeground2Link: grey[84],\n        colorNeutralForeground2LinkHover: white,\n        colorNeutralForeground2LinkPressed: white,\n        colorNeutralForeground2LinkSelected: white,\n        colorCompoundBrandForeground1: brand[100],\n        colorCompoundBrandForeground1Hover: brand[110],\n        colorCompoundBrandForeground1Pressed: brand[90],\n        colorBrandForeground1: brand[100],\n        colorBrandForeground2: brand[110],\n        colorBrandForeground2Hover: brand[130],\n        colorBrandForeground2Pressed: brand[160],\n        colorNeutralForeground1Static: grey[14],\n        colorNeutralForegroundStaticInverted: white,\n        colorNeutralForegroundInverted: grey[14],\n        colorNeutralForegroundInvertedHover: grey[14],\n        colorNeutralForegroundInvertedPressed: grey[14],\n        colorNeutralForegroundInvertedSelected: grey[14],\n        colorNeutralForegroundInverted2: grey[14],\n        colorNeutralForegroundOnBrand: white,\n        colorNeutralForegroundInvertedLink: white,\n        colorNeutralForegroundInvertedLinkHover: white,\n        colorNeutralForegroundInvertedLinkPressed: white,\n        colorNeutralForegroundInvertedLinkSelected: white,\n        colorBrandForegroundInverted: brand[80],\n        colorBrandForegroundInvertedHover: brand[70],\n        colorBrandForegroundInvertedPressed: brand[60],\n        colorBrandForegroundOnLight: brand[80],\n        colorBrandForegroundOnLightHover: brand[70],\n        colorBrandForegroundOnLightPressed: brand[50],\n        colorBrandForegroundOnLightSelected: brand[60],\n        colorNeutralBackground1: grey[16],\n        colorNeutralBackground1Hover: grey[24],\n        colorNeutralBackground1Pressed: grey[12],\n        colorNeutralBackground1Selected: grey[22],\n        colorNeutralBackground2: grey[12],\n        colorNeutralBackground2Hover: grey[20],\n        colorNeutralBackground2Pressed: grey[8],\n        colorNeutralBackground2Selected: grey[18],\n        colorNeutralBackground3: grey[8],\n        colorNeutralBackground3Hover: grey[16],\n        colorNeutralBackground3Pressed: grey[4],\n        colorNeutralBackground3Selected: grey[14],\n        colorNeutralBackground4: grey[4],\n        colorNeutralBackground4Hover: grey[12],\n        colorNeutralBackground4Pressed: black,\n        colorNeutralBackground4Selected: grey[10],\n        colorNeutralBackground5: black,\n        colorNeutralBackground5Hover: grey[8],\n        colorNeutralBackground5Pressed: grey[2],\n        colorNeutralBackground5Selected: grey[6],\n        colorNeutralBackground6: grey[20],\n        colorNeutralBackgroundInverted: white,\n        colorNeutralBackgroundStatic: grey[24],\n        colorNeutralBackgroundAlpha: grey10Alpha[50],\n        colorNeutralBackgroundAlpha2: grey12Alpha[70],\n        colorSubtleBackground: 'transparent',\n        colorSubtleBackgroundHover: grey[22],\n        colorSubtleBackgroundPressed: grey[18],\n        colorSubtleBackgroundSelected: grey[20],\n        colorSubtleBackgroundLightAlphaHover: grey14Alpha[80],\n        colorSubtleBackgroundLightAlphaPressed: grey14Alpha[50],\n        colorSubtleBackgroundLightAlphaSelected: 'transparent',\n        colorSubtleBackgroundInverted: 'transparent',\n        colorSubtleBackgroundInvertedHover: blackAlpha[10],\n        colorSubtleBackgroundInvertedPressed: blackAlpha[30],\n        colorSubtleBackgroundInvertedSelected: blackAlpha[20],\n        colorTransparentBackground: 'transparent',\n        colorTransparentBackgroundHover: 'transparent',\n        colorTransparentBackgroundPressed: 'transparent',\n        colorTransparentBackgroundSelected: 'transparent',\n        colorNeutralBackgroundDisabled: grey[8],\n        colorNeutralBackgroundInvertedDisabled: whiteAlpha[10],\n        colorNeutralStencil1: grey[34],\n        colorNeutralStencil2: grey[20],\n        colorNeutralStencil1Alpha: whiteAlpha[10],\n        colorNeutralStencil2Alpha: whiteAlpha[5],\n        colorBackgroundOverlay: blackAlpha[50],\n        colorScrollbarOverlay: whiteAlpha[60],\n        colorBrandBackground: brand[70],\n        colorBrandBackgroundHover: brand[80],\n        colorBrandBackgroundPressed: brand[40],\n        colorBrandBackgroundSelected: brand[60],\n        colorCompoundBrandBackground: brand[100],\n        colorCompoundBrandBackgroundHover: brand[110],\n        colorCompoundBrandBackgroundPressed: brand[90],\n        colorBrandBackgroundStatic: brand[80],\n        colorBrandBackground2: brand[20],\n        colorBrandBackground2Hover: brand[40],\n        colorBrandBackground2Pressed: brand[10],\n        colorBrandBackground3Static: brand[60],\n        colorBrandBackground4Static: brand[40],\n        colorBrandBackgroundInverted: white,\n        colorBrandBackgroundInvertedHover: brand[160],\n        colorBrandBackgroundInvertedPressed: brand[140],\n        colorBrandBackgroundInvertedSelected: brand[150],\n        colorNeutralCardBackground: grey[20],\n        colorNeutralCardBackgroundHover: grey[24],\n        colorNeutralCardBackgroundPressed: grey[18],\n        colorNeutralCardBackgroundSelected: grey[22],\n        colorNeutralCardBackgroundDisabled: grey[8],\n        colorNeutralStrokeAccessible: grey[68],\n        colorNeutralStrokeAccessibleHover: grey[74],\n        colorNeutralStrokeAccessiblePressed: grey[70],\n        colorNeutralStrokeAccessibleSelected: brand[100],\n        colorNeutralStroke1: grey[40],\n        colorNeutralStroke1Hover: grey[46],\n        colorNeutralStroke1Pressed: grey[42],\n        colorNeutralStroke1Selected: grey[44],\n        colorNeutralStroke2: grey[32],\n        colorNeutralStroke3: grey[24],\n        colorNeutralStrokeSubtle: grey[4],\n        colorNeutralStrokeOnBrand: grey[16],\n        colorNeutralStrokeOnBrand2: white,\n        colorNeutralStrokeOnBrand2Hover: white,\n        colorNeutralStrokeOnBrand2Pressed: white,\n        colorNeutralStrokeOnBrand2Selected: white,\n        colorBrandStroke1: brand[100],\n        colorBrandStroke2: brand[50],\n        colorBrandStroke2Hover: brand[50],\n        colorBrandStroke2Pressed: brand[30],\n        colorBrandStroke2Contrast: brand[50],\n        colorCompoundBrandStroke: brand[100],\n        colorCompoundBrandStrokeHover: brand[110],\n        colorCompoundBrandStrokePressed: brand[90],\n        colorNeutralStrokeDisabled: grey[26],\n        colorNeutralStrokeInvertedDisabled: whiteAlpha[40],\n        colorTransparentStroke: 'transparent',\n        colorTransparentStrokeInteractive: 'transparent',\n        colorTransparentStrokeDisabled: 'transparent',\n        colorNeutralStrokeAlpha: whiteAlpha[10],\n        colorNeutralStrokeAlpha2: whiteAlpha[20],\n        colorStrokeFocus1: black,\n        colorStrokeFocus2: white,\n        colorNeutralShadowAmbient: 'rgba(0,0,0,0.24)',\n        colorNeutralShadowKey: 'rgba(0,0,0,0.28)',\n        colorNeutralShadowAmbientLighter: 'rgba(0,0,0,0.12)',\n        colorNeutralShadowKeyLighter: 'rgba(0,0,0,0.14)',\n        colorNeutralShadowAmbientDarker: 'rgba(0,0,0,0.40)',\n        colorNeutralShadowKeyDarker: 'rgba(0,0,0,0.48)',\n        colorBrandShadowAmbient: 'rgba(0,0,0,0.30)',\n        colorBrandShadowKey: 'rgba(0,0,0,0.25)'\n    });\n", "import { colorPaletteTokens, colorStatusTokens } from \"../alias/darkColorPalette.js\";\nimport { generateColorTokens } from \"../alias/darkColor.js\";\nimport { borderRadius, fontSizes, lineHeights, fontFamilies, strokeWidths, fontWeights } from \"../global/index.js\";\nimport { createShadowTokens } from \"./shadows.js\";\nimport { durations } from \"../global/durations.js\";\nimport { curves } from \"../global/curves.js\";\nimport { horizontalSpacings, verticalSpacings } from \"../global/spacings.js\";\nexport const createDarkTheme = (brand)=>{\n    const colorTokens = generateColorTokens(brand);\n    return {\n        ...borderRadius,\n        ...fontSizes,\n        ...lineHeights,\n        ...fontFamilies,\n        ...fontWeights,\n        ...strokeWidths,\n        ...horizontalSpacings,\n        ...verticalSpacings,\n        ...durations,\n        ...curves,\n        ...colorTokens,\n        ...colorPaletteTokens,\n        ...colorStatusTokens,\n        ...createShadowTokens(colorTokens.colorNeutralShadowAmbient, colorTokens.colorNeutralShadowKey),\n        ...createShadowTokens(colorTokens.colorBrandShadowAmbient, colorTokens.colorBrandShadowKey, 'Brand')\n    };\n};\n", "import { createDarkTheme } from \"../../utils/createDarkTheme.js\";\nimport { brandWeb } from \"../../global/brandColors.js\";\nexport const webDarkTheme = createDarkTheme(brandWeb);\n", "/**\n * Programmatically generates a tokens to css variables mapping object from the keys in a theme.\n * This helps with ease of use as a user of a custom theme does not have to manually construct this object, but it could\n * affect tree-shaking since bundlers do not know the shape of the output.\n *\n * @param theme - Theme from which to get the keys to generate the tokens to css variables mapping object\n * @returns Tokens to css variables mapping object corresponding to the passed theme\n */ export function themeToTokensObject(theme) {\n    const tokens = {};\n    const keys = Object.keys(theme);\n    for (const key of keys){\n        tokens[key] = `var(--${String(key)})`;\n    }\n    return tokens;\n}\n", "import { tokens } from '@fluentui/react-theme';\nimport { shorthands } from '@griffel/react';\nimport { createCustomFocusIndicatorStyle } from './createCustomFocusIndicatorStyle';\nimport { defaultOptions } from './constants';\n/**\n * Get the position of the focus outline\n *\n * @param options - Configures the style of the focus outline\n * @param position - The position of the focus outline\n * @returns CSS value for the position of the focus outline\n */ function getOutlinePosition({ outlineWidth, outlineOffset }, position) {\n    const offsetValue = (outlineOffset === null || outlineOffset === void 0 ? void 0 : outlineOffset[position]) || outlineOffset;\n    if (!outlineOffset) {\n        return `calc(${outlineWidth} * -1)`;\n    }\n    return `calc(0px - ${outlineWidth} - ${offsetValue})`;\n}\n/**\n * NOTE: the element with the focus outline needs to have `position: relative` so that the\n * pseudo element can be properly positioned.\n *\n * @param options - Configures the style of the focus outline\n * @returns focus outline styles object\n */ const getFocusOutlineStyles = (options)=>{\n    const { outlineRadius, outlineColor, outlineWidth } = options;\n    return {\n        ...shorthands.borderColor('transparent'),\n        '@media (forced-colors: active)': {\n            '::after': {\n                ...shorthands.borderColor('Highlight')\n            }\n        },\n        '::after': {\n            content: '\"\"',\n            position: 'absolute',\n            pointerEvents: 'none',\n            zIndex: 1,\n            border: `${outlineWidth} solid ${outlineColor}`,\n            borderRadius: outlineRadius,\n            top: getOutlinePosition(options, 'top'),\n            right: getOutlinePosition(options, 'right'),\n            bottom: getOutlinePosition(options, 'bottom'),\n            left: getOutlinePosition(options, 'left')\n        }\n    };\n};\n/**\n * NOTE: The element with the focus outline needs to have `position: relative` so that the\n * pseudo element can be properly positioned.\n *\n * @param options - Configure the style of the focus outline\n * @returns focus outline styles object for @see makeStyles\n */ export const createFocusOutlineStyle = ({ enableOutline = false, selector = defaultOptions.selector, customizeSelector, style = defaultOptions.style } = defaultOptions)=>({\n        ':focus': {\n            outlineStyle: enableOutline ? undefined : 'none'\n        },\n        ':focus-visible': {\n            outlineStyle: enableOutline ? undefined : 'none'\n        },\n        ...createCustomFocusIndicatorStyle(getFocusOutlineStyles({\n            outlineColor: tokens.colorStrokeFocus2,\n            outlineRadius: tokens.borderRadiusMedium,\n            // FIXME: tokens.strokeWidthThick causes some weird bugs\n            outlineWidth: '2px',\n            ...style\n        }), {\n            selector,\n            customizeSelector\n        })\n    });\n", "import * as React from 'react';\nimport { useEventCallback } from '@fluentui/react-utilities';\nimport { useKeyborgRef } from './useKeyborgRef';\n/**\n * Instantiates [keyborg](https://github.com/microsoft/keyborg) and subscribes to changes\n * in the keyboard navigation mode.\n *\n * @param callback - called every time the keyboard navigation state changes\n */ export function useOnKeyboardNavigationChange(callback) {\n    const keyborgRef = useKeyborgRef();\n    const eventCallback = useEventCallback(callback);\n    React.useEffect(()=>{\n        const keyborg = keyborgRef.current;\n        if (keyborg) {\n            const cb = (next)=>{\n                eventCallback(next);\n            };\n            keyborg.subscribe(cb);\n            cb(keyborg.isNavigatingWithKeyboard());\n            return ()=>{\n                keyborg.unsubscribe(cb);\n            };\n        }\n    }, [\n        keyborgRef,\n        eventCallback\n    ]);\n}\n", "import * as React from 'react';\nimport { createKeyborg, disposeKeyborg } from 'keyborg';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\n/**\n * @internal\n * Instantiates [keyborg](https://github.com/microsoft/keyborg)\n * @returns - keyborg instance\n */ export function useKeyborgRef() {\n    const { targetDocument } = useFluent();\n    const keyborgRef = React.useRef(null);\n    React.useEffect(()=>{\n        if (targetDocument) {\n            const keyborg = createKeyborg(targetDocument.defaultView);\n            keyborgRef.current = keyborg;\n            return ()=>{\n                disposeKeyborg(keyborg);\n                keyborgRef.current = null;\n            };\n        }\n    }, [\n        targetDocument\n    ]);\n    return keyborgRef;\n}\n", "import * as React from 'react';\nimport { TABSTER_ATTRIBUTE_NAME } from 'tabster';\n/**\n * Merges a collection of tabster attributes.\n *\n * ⚠️The attributes passed as arguments to this  hook cannot change at runtime.\n * @internal\n * @param attributes - collection of tabster attributes from other react-tabster hooks\n * @returns single merged tabster attribute\n */ export const useMergedTabsterAttributes_unstable = (...attributes)=>{\n    'use no memo';\n    const stringAttributes = attributes.reduce((acc, curr)=>{\n        if (curr === null || curr === void 0 ? void 0 : curr[TABSTER_ATTRIBUTE_NAME]) {\n            acc.push(curr[TABSTER_ATTRIBUTE_NAME]);\n        }\n        return acc;\n    }, []);\n    if (process.env.NODE_ENV !== 'production') {\n        // ignoring rules of hooks because this is a condition based on the environment\n        // it's safe to ignore the rule\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        useWarnIfUnstableAttributes(stringAttributes);\n    }\n    return React.useMemo(()=>({\n            [TABSTER_ATTRIBUTE_NAME]: stringAttributes.length > 0 ? stringAttributes.reduce(mergeJSONStrings) : undefined\n        }), // disable exhaustive-deps because we want to memoize the result of the reduction\n    // this is safe because the collection of attributes is not expected to change at runtime\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    stringAttributes);\n};\n/**\n * Merges two JSON strings into one.\n */ const mergeJSONStrings = (a, b)=>JSON.stringify(Object.assign(safelyParseJSON(a), safelyParseJSON(b)));\n/**\n * Tries to parse a JSON string and returns an object.\n * If the JSON string is invalid, an empty object is returned.\n */ const safelyParseJSON = (json)=>{\n    try {\n        return JSON.parse(json);\n    } catch  {\n        return {};\n    }\n};\n/**\n * Helper hook that ensures that the attributes passed to the hook are stable.\n * This is necessary because the attributes are expected to not change at runtime.\n *\n * This hook will console.warn if the attributes change at runtime.\n */ const useWarnIfUnstableAttributes = (attributes)=>{\n    'use no memo';\n    const initialAttributesRef = React.useRef(attributes);\n    let isStable = initialAttributesRef.current.length === attributes.length;\n    if (initialAttributesRef.current !== attributes && isStable) {\n        for(let i = 0; i < attributes.length; i++){\n            if (initialAttributesRef.current[i] !== attributes[i]) {\n                isStable = false;\n                break;\n            }\n        }\n    }\n    React.useEffect(()=>{\n        if (!isStable) {\n            const error = new Error();\n            // eslint-disable-next-line no-console\n            console.warn(/** #__DE-INDENT__ */ `\n        @fluentui/react-tabster [useMergedTabsterAttributes]:\n        The attributes passed to the hook changed at runtime.\n        This might lead to unexpected behavior, please ensure that the attributes are stable.\n        ${error.stack}\n      `);\n        }\n    }, [\n        isStable\n    ]);\n};\n", "import * as React from 'react';\nimport { useKeyborgRef } from './useKeyborgRef';\n/**\n */ export function useSetKeyboardNavigation() {\n    const keyborgRef = useKeyborgRef();\n    return React.useCallback((isNavigatingWithKeyboard)=>{\n        var _keyborgRef_current;\n        (_keyborgRef_current = keyborgRef.current) === null || _keyborgRef_current === void 0 ? void 0 : _keyborgRef_current.setVal(isNavigatingWithKeyboard);\n    }, [\n        keyborgRef\n    ]);\n}\n", "import { useTabster } from './useTabster';\nimport * as React from 'react';\n/**\n * Subscribes to the tabster focused element. Calls the callback when the focused element changes.\n * @param callback - Callback to subscribe to the focused element.\n */ export function useFocusedElementChange(callback) {\n    const tabster = useTabster();\n    React.useEffect(()=>{\n        if (tabster) {\n            tabster.focusedElement.subscribe(callback);\n            return ()=>tabster.focusedElement.unsubscribe(callback);\n        }\n    }, [\n        tabster,\n        callback\n    ]);\n}\n", "/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */ /**\n * WARNING! ATTENTION! WARNING! ATTENTION! WARNING! ATTENTION!\n * WARNING! ATTENTION! WARNING! ATTENTION! WARNING! ATTENTION!\n *\n * Do not use anything from this file. It is a snapshot of the older Tabster typings exposed by a mistake.\n * The exposed typings should have been removed, but we don't do it in minor versions to avoid breaking changes.\n * Everything reexported from this file as react-tabster/TabsterTypes is marked as deprecated and shouldn't\n * be used anywhre.\n *\n * WARNING! ATTENTION! WARNING! ATTENTION! WARNING! ATTENTION!\n * WARNING! ATTENTION! WARNING! ATTENTION! WARNING! ATTENTION!\n */ export const TabsterAttributeName = 'data-tabster';\nexport const TabsterDummyInputAttributeName = 'data-tabster-dummy';\nexport const DeloserEventName = 'tabster:deloser';\nexport const ModalizerActiveEventName = 'tabster:modalizer:active';\nexport const ModalizerInactiveEventName = 'tabster:modalizer:inactive';\nexport const ModalizerFocusInEventName = 'tabster:modalizer:focusin';\nexport const ModalizerFocusOutEventName = 'tabster:modalizer:focusout';\nexport const ModalizerBeforeFocusOutEventName = 'tabster:modalizer:beforefocusout';\nexport const MoverEventName = 'tabster:mover';\nexport const FocusInEventName = 'tabster:focusin';\nexport const FocusOutEventName = 'tabster:focusout';\n// Event to be triggered when Tabster wants to move focus as the result of\n// keyboard event. This allows to preventDefault() if you want to have\n// some custom logic.\nexport const MoveFocusEventName = 'tabster:movefocus';\n// Event that can be triggered by the application to programmatically move\n// focus inside Mover.\nexport const MoverMoveFocusEventName = 'tabster:mover:movefocus';\n// Event that can be triggered by the application to programmatically enter\n// or escape Groupper.\nexport const GroupperMoveFocusEventName = 'tabster:groupper:movefocus';\nexport const FocusableSelector = [\n    'a[href]',\n    'button:not([disabled])',\n    'input:not([disabled])',\n    'select:not([disabled])',\n    'textarea:not([disabled])',\n    '*[tabindex]',\n    '*[contenteditable]'\n].join(', ');\nexport const GroupperMoveFocusActions = {\n    Enter: 1,\n    Escape: 2\n};\nexport const ObservedElementAccesibilities = {\n    Any: 0,\n    Accessible: 1,\n    Focusable: 2\n};\nexport const RestoreFocusOrders = {\n    History: 0,\n    DeloserDefault: 1,\n    RootDefault: 2,\n    DeloserFirst: 3,\n    RootFirst: 4\n};\nexport const Visibilities = {\n    Invisible: 0,\n    PartiallyVisible: 1,\n    Visible: 2\n};\nexport const RestorerTypes = {\n    Source: 0,\n    Target: 1\n};\nexport const MoverDirections = {\n    Both: 0,\n    Vertical: 1,\n    Horizontal: 2,\n    Grid: 3,\n    GridLinear: 4\n};\nexport const MoverKeys = {\n    ArrowUp: 1,\n    ArrowDown: 2,\n    ArrowLeft: 3,\n    ArrowRight: 4,\n    PageUp: 5,\n    PageDown: 6,\n    Home: 7,\n    End: 8\n};\nexport const GroupperTabbabilities = {\n    Unlimited: 0,\n    Limited: 1,\n    LimitedTrapFocus: 2\n};\nexport const SysDummyInputsPositions = {\n    Auto: 0,\n    Inside: 1,\n    Outside: 2\n};\n", "// Look up table for shorthand to avoid parsing strings\nconst shorthandLookup = {\n    above: {\n        position: 'above',\n        align: 'center'\n    },\n    'above-start': {\n        position: 'above',\n        align: 'start'\n    },\n    'above-end': {\n        position: 'above',\n        align: 'end'\n    },\n    below: {\n        position: 'below',\n        align: 'center'\n    },\n    'below-start': {\n        position: 'below',\n        align: 'start'\n    },\n    'below-end': {\n        position: 'below',\n        align: 'end'\n    },\n    before: {\n        position: 'before',\n        align: 'center'\n    },\n    'before-top': {\n        position: 'before',\n        align: 'top'\n    },\n    'before-bottom': {\n        position: 'before',\n        align: 'bottom'\n    },\n    after: {\n        position: 'after',\n        align: 'center'\n    },\n    'after-top': {\n        position: 'after',\n        align: 'top'\n    },\n    'after-bottom': {\n        position: 'after',\n        align: 'bottom'\n    }\n};\nexport function resolvePositioningShorthand(shorthand) {\n    if (shorthand === undefined || shorthand === null) {\n        return {};\n    }\n    if (typeof shorthand === 'string') {\n        return shorthandLookup[shorthand];\n    }\n    return shorthand;\n}\n", "/**\n * Creates a virtual element based on the position of a click event\n * Can be used as a target for popper in scenarios such as context menus\n */ export function createVirtualElementFromClick(nativeEvent) {\n    const left = nativeEvent.clientX;\n    const top = nativeEvent.clientY;\n    const right = left + 1;\n    const bottom = top + 1;\n    function getBoundingClientRect() {\n        return {\n            left,\n            top,\n            right,\n            bottom,\n            x: left,\n            y: top,\n            height: 1,\n            width: 1\n        };\n    }\n    return {\n        getBoundingClientRect\n    };\n}\n", "export const DATA_POSITIONING_INTERSECTING = 'data-popper-is-intersecting';\nexport const DATA_POSITIONING_ESCAPED = 'data-popper-escaped';\nexport const DATA_POSITIONING_HIDDEN = 'data-popper-reference-hidden';\nexport const DATA_POSITIONING_PLACEMENT = 'data-popper-placement';\nexport const POSITIONING_END_EVENT = 'fui-positioningend';\n", "/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  return {\n    width,\n    height,\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n", "import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    x,\n    y,\n    width: rects.floating.width,\n    height: rects.floating.height\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const initialSideAxis = getSideAxis(initialPlacement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      const hasFallbackAxisSideDirection = fallbackAxisSideDirection !== 'none';\n      if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$filter2;\n                const placement = (_overflowsData$filter2 = overflowsData.filter(d => {\n                  if (hasFallbackAxisSideDirection) {\n                    const currentSideAxis = getSideAxis(d.placement);\n                    return currentSideAxis === initialSideAxis ||\n                    // Create a bias to the `y` side axis due to horizontal\n                    // reading directions favoring greater width.\n                    currentSideAxis === 'y';\n                  }\n                  return true;\n                }).map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$filter2[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: rawValue.mainAxis || 0,\n    crossAxis: rawValue.crossAxis || 0,\n    alignmentAxis: rawValue.alignmentAxis\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y,\n          enabled: {\n            [mainAxis]: checkMainAxis,\n            [crossAxis]: checkCrossAxis\n          }\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      var _state$middlewareData, _state$middlewareData2;\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const maximumClippingHeight = height - overflow.top - overflow.bottom;\n      const maximumClippingWidth = width - overflow.left - overflow.right;\n      const overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);\n      const overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if ((_state$middlewareData = state.middlewareData.shift) != null && _state$middlewareData.enabled.x) {\n        availableWidth = maximumClippingWidth;\n      }\n      if ((_state$middlewareData2 = state.middlewareData.shift) != null && _state$middlewareData2.enabled.y) {\n        availableHeight = maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n", "function hasWindow() {\n  return typeof window !== 'undefined';\n}\nfunction getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  if (!hasWindow() || typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isTopLayer(element) {\n  return [':popover-open', ':modal'].some(selector => {\n    try {\n      return element.matches(selector);\n    } catch (e) {\n      return false;\n    }\n  });\n}\nfunction isContainingBlock(elementOrCss) {\n  const webkit = isWebKit();\n  const css = isElement(elementOrCss) ? getComputedStyle(elementOrCss) : elementOrCss;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else if (isTopLayer(currentNode)) {\n      return null;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.scrollX,\n    scrollTop: element.scrollY\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    const frameElement = getFrameElement(win);\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], frameElement && traverseIframes ? getOverflowAncestors(frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\nfunction getFrameElement(win) {\n  return win.parent && Object.getPrototypeOf(win.parent) ? win.frameElement : null;\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getFrameElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isTopLayer, isWebKit };\n", "import { rectToClientRect, detectOverflow as detectOverflow$1, offset as offset$1, autoPlacement as autoPlacement$1, shift as shift$1, flip as flip$1, size as size$1, hide as hide$1, arrow as arrow$1, inline as inline$1, limitShift as limitShift$1, computePosition as computePosition$1 } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getFrameElement, getNodeScroll, getDocumentElement, isTopLayer, getNodeName, isOverflowElement, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = getFrameElement(currentWin);\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = getFrameElement(currentWin);\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\n// If <html> has a CSS width greater than the viewport, then this will be\n// incorrect for RTL.\nfunction getWindowScrollBarX(element, rect) {\n  const leftScroll = getNodeScroll(element).scrollLeft;\n  if (!rect) {\n    return getBoundingClientRect(getDocumentElement(element)).left + leftScroll;\n  }\n  return rect.left + leftScroll;\n}\n\nfunction getHTMLOffset(documentElement, scroll, ignoreScrollbarX) {\n  if (ignoreScrollbarX === void 0) {\n    ignoreScrollbarX = false;\n  }\n  const htmlRect = documentElement.getBoundingClientRect();\n  const x = htmlRect.left + scroll.scrollLeft - (ignoreScrollbarX ? 0 :\n  // RTL <body> scrollbar.\n  getWindowScrollBarX(documentElement, htmlRect));\n  const y = htmlRect.top + scroll.scrollTop;\n  return {\n    x,\n    y\n  };\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll, true) : createCoords(0);\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x + htmlOffset.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y + htmlOffset.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y,\n      width: clippingAncestor.width,\n      height: clippingAncestor.height\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      // If the <body> scrollbar appears on the left (e.g. RTL systems). Use\n      // Firefox with layout.scrollbar.side = 3 in about:config to test this.\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll) : createCoords(0);\n  const x = rect.left + scroll.scrollLeft - offsets.x - htmlOffset.x;\n  const y = rect.top + scroll.scrollTop - offsets.y - htmlOffset.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction isStaticPositioned(element) {\n  return getComputedStyle(element).position === 'static';\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  let rawOffsetParent = element.offsetParent;\n\n  // Firefox returns the <html> element as the offsetParent if it's non-static,\n  // while Chrome and Safari return the <body> element. The <body> element must\n  // be used to perform the correct calculations even if the <html> element is\n  // non-static.\n  if (getDocumentElement(element) === rawOffsetParent) {\n    rawOffsetParent = rawOffsetParent.ownerDocument.body;\n  }\n  return rawOffsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const win = getWindow(element);\n  if (isTopLayer(element)) {\n    return win;\n  }\n  if (!isHTMLElement(element)) {\n    let svgOffsetParent = getParentNode(element);\n    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {\n      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {\n        return svgOffsetParent;\n      }\n      svgOffsetParent = getParentNode(svgOffsetParent);\n    }\n    return win;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {\n    return win;\n  }\n  return offsetParent || getContainingBlock(element) || win;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  const floatingDimensions = await getDimensionsFn(data.floating);\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      width: floatingDimensions.width,\n      height: floatingDimensions.height\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          // If the reference is clipped, the ratio is 0. Throttle the refresh\n          // to prevent an infinite loop of updates.\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 1000);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nconst detectOverflow = detectOverflow$1;\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = offset$1;\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, platform, shift, size };\n", "import { hide as hideMiddleware, arrow as arrowMiddleware } from '@floating-ui/dom';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\nimport { canUseDOM, useEventCallback, useIsomorphicLayoutEffect } from '@fluentui/react-utilities';\nimport * as React from 'react';\nimport { useCallbackRef, toFloatingUIPlacement, hasAutofocusFilter, hasScrollParent, normalizeAutoSize } from './utils';\nimport { shift as shiftMiddleware, flip as flipMiddleware, coverTarget as coverTargetMiddleware, maxSize as maxSizeMiddleware, resetMaxSize as resetMaxSizeMiddleware, offset as offsetMiddleware, intersecting as intersectingMiddleware, matchTargetSize as matchTargetSizeMiddleware } from './middleware';\nimport { createPositionManager } from './createPositionManager';\nimport { devtools } from '@floating-ui/devtools';\nimport { devtoolsCallback } from './utils/devtools';\nimport { POSITIONING_END_EVENT } from './constants';\n/**\n * @internal\n */ export function usePositioning(options) {\n    'use no memo';\n    const managerRef = React.useRef(null);\n    const targetRef = React.useRef(null);\n    const overrideTargetRef = React.useRef(null);\n    const containerRef = React.useRef(null);\n    const arrowRef = React.useRef(null);\n    const { enabled = true } = options;\n    const resolvePositioningOptions = usePositioningOptions(options);\n    const updatePositionManager = React.useCallback(()=>{\n        if (managerRef.current) {\n            managerRef.current.dispose();\n        }\n        managerRef.current = null;\n        var _overrideTargetRef_current;\n        const target = (_overrideTargetRef_current = overrideTargetRef.current) !== null && _overrideTargetRef_current !== void 0 ? _overrideTargetRef_current : targetRef.current;\n        if (enabled && canUseDOM() && target && containerRef.current) {\n            managerRef.current = createPositionManager({\n                container: containerRef.current,\n                target,\n                arrow: arrowRef.current,\n                ...resolvePositioningOptions(containerRef.current, arrowRef.current)\n            });\n        }\n    }, [\n        enabled,\n        resolvePositioningOptions\n    ]);\n    const setOverrideTarget = useEventCallback((target)=>{\n        overrideTargetRef.current = target;\n        updatePositionManager();\n    });\n    React.useImperativeHandle(options.positioningRef, ()=>({\n            updatePosition: ()=>{\n                var _managerRef_current;\n                return (_managerRef_current = managerRef.current) === null || _managerRef_current === void 0 ? void 0 : _managerRef_current.updatePosition();\n            },\n            setTarget: (target)=>{\n                if (options.target && process.env.NODE_ENV !== 'production') {\n                    const err = new Error();\n                    // eslint-disable-next-line no-console\n                    console.warn('Imperative setTarget should not be used at the same time as target option');\n                    // eslint-disable-next-line no-console\n                    console.warn(err.stack);\n                }\n                setOverrideTarget(target);\n            }\n        }), [\n        options.target,\n        setOverrideTarget\n    ]);\n    useIsomorphicLayoutEffect(()=>{\n        var _options_target;\n        setOverrideTarget((_options_target = options.target) !== null && _options_target !== void 0 ? _options_target : null);\n    }, [\n        options.target,\n        setOverrideTarget\n    ]);\n    useIsomorphicLayoutEffect(()=>{\n        updatePositionManager();\n    }, [\n        updatePositionManager\n    ]);\n    if (process.env.NODE_ENV !== 'production') {\n        // This checked should run only in development mode\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        React.useEffect(()=>{\n            if (containerRef.current) {\n                var _contentNode_ownerDocument;\n                const contentNode = containerRef.current;\n                const treeWalker = (_contentNode_ownerDocument = contentNode.ownerDocument) === null || _contentNode_ownerDocument === void 0 ? void 0 : _contentNode_ownerDocument.createTreeWalker(contentNode, NodeFilter.SHOW_ELEMENT, {\n                    acceptNode: hasAutofocusFilter\n                });\n                while(treeWalker.nextNode()){\n                    const node = treeWalker.currentNode;\n                    // eslint-disable-next-line no-console\n                    console.warn('<Popper>:', node);\n                    // eslint-disable-next-line no-console\n                    console.warn([\n                        '<Popper>: ^ this node contains \"autoFocus\" prop on a React element. This can break the initial',\n                        'positioning of an element and cause a window jump effect. This issue occurs because React polyfills',\n                        '\"autoFocus\" behavior to solve inconsistencies between different browsers:',\n                        'https://github.com/facebook/react/issues/11851#issuecomment-351787078',\n                        '\\n',\n                        'However, \".focus()\" in this case occurs before any other React effects will be executed',\n                        '(React.useEffect(), componentDidMount(), etc.) and we can not prevent this behavior. If you really',\n                        'want to use \"autoFocus\" please add \"position: fixed\" to styles of the element that is wrapped by',\n                        '\"Popper\".',\n                        `In general, it's not recommended to use \"autoFocus\" as it may break accessibility aspects:`,\n                        'https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-autofocus.md',\n                        '\\n',\n                        'We suggest to use the \"trapFocus\" prop on Fluent components or a catch \"ref\" and then use',\n                        '\"ref.current.focus\" in React.useEffect():',\n                        'https://reactjs.org/docs/refs-and-the-dom.html#adding-a-ref-to-a-dom-element'\n                    ].join(' '));\n                }\n            }\n        // We run this check once, no need to add deps here\n        // TODO: Should be rework to handle options.enabled and contentRef updates\n        }, []);\n    }\n    const setTarget = useCallbackRef(null, (target)=>{\n        if (targetRef.current !== target) {\n            targetRef.current = target;\n            updatePositionManager();\n        }\n    });\n    const onPositioningEnd = useEventCallback(()=>{\n        var _options_onPositioningEnd;\n        return (_options_onPositioningEnd = options.onPositioningEnd) === null || _options_onPositioningEnd === void 0 ? void 0 : _options_onPositioningEnd.call(options);\n    });\n    const setContainer = useCallbackRef(null, (container)=>{\n        if (containerRef.current !== container) {\n            var _containerRef_current;\n            (_containerRef_current = containerRef.current) === null || _containerRef_current === void 0 ? void 0 : _containerRef_current.removeEventListener(POSITIONING_END_EVENT, onPositioningEnd);\n            container === null || container === void 0 ? void 0 : container.addEventListener(POSITIONING_END_EVENT, onPositioningEnd);\n            containerRef.current = container;\n            updatePositionManager();\n        }\n    });\n    const setArrow = useCallbackRef(null, (arrow)=>{\n        if (arrowRef.current !== arrow) {\n            arrowRef.current = arrow;\n            updatePositionManager();\n        }\n    });\n    // Let users use callback refs so they feel like 'normal' DOM refs\n    return {\n        targetRef: setTarget,\n        containerRef: setContainer,\n        arrowRef: setArrow\n    };\n}\nfunction usePositioningOptions(options) {\n    'use no memo';\n    const { align, arrowPadding, autoSize: rawAutoSize, coverTarget, flipBoundary, offset, overflowBoundary, pinned, position, unstable_disableTether: disableTether, // eslint-disable-next-line deprecation/deprecation\n    positionFixed, strategy, overflowBoundaryPadding, fallbackPositions, useTransform, matchTargetSize, disableUpdateOnResize = false } = options;\n    const { dir, targetDocument } = useFluent();\n    const isRtl = dir === 'rtl';\n    const positionStrategy = (strategy !== null && strategy !== void 0 ? strategy : positionFixed) ? 'fixed' : 'absolute';\n    const autoSize = normalizeAutoSize(rawAutoSize);\n    return React.useCallback((container, arrow)=>{\n        const hasScrollableElement = hasScrollParent(container);\n        const middleware = [\n            autoSize && resetMaxSizeMiddleware(autoSize),\n            matchTargetSize && matchTargetSizeMiddleware(),\n            offset && offsetMiddleware(offset),\n            coverTarget && coverTargetMiddleware(),\n            !pinned && flipMiddleware({\n                container,\n                flipBoundary,\n                hasScrollableElement,\n                isRtl,\n                fallbackPositions\n            }),\n            shiftMiddleware({\n                container,\n                hasScrollableElement,\n                overflowBoundary,\n                disableTether,\n                overflowBoundaryPadding,\n                isRtl\n            }),\n            autoSize && maxSizeMiddleware(autoSize, {\n                container,\n                overflowBoundary,\n                overflowBoundaryPadding,\n                isRtl\n            }),\n            intersectingMiddleware(),\n            arrow && arrowMiddleware({\n                element: arrow,\n                padding: arrowPadding\n            }),\n            hideMiddleware({\n                strategy: 'referenceHidden'\n            }),\n            hideMiddleware({\n                strategy: 'escaped'\n            }),\n            process.env.NODE_ENV !== 'production' && targetDocument && devtools(targetDocument, devtoolsCallback(options))\n        ].filter(Boolean);\n        const placement = toFloatingUIPlacement(align, position, isRtl);\n        return {\n            placement,\n            middleware,\n            strategy: positionStrategy,\n            useTransform,\n            disableUpdateOnResize\n        };\n    }, // Options is missing here, but it's not required\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n        align,\n        arrowPadding,\n        autoSize,\n        coverTarget,\n        disableTether,\n        flipBoundary,\n        isRtl,\n        offset,\n        overflowBoundary,\n        pinned,\n        position,\n        positionStrategy,\n        overflowBoundaryPadding,\n        fallbackPositions,\n        useTransform,\n        matchTargetSize,\n        targetDocument,\n        disableUpdateOnResize\n    ]);\n}\n", "/**\n * Parses Floating UI placement and returns the different components\n * @param placement - the floating ui placement (i.e. bottom-start)\n *\n * @returns side and alignment components of the placement\n */ export function parseFloatingUIPlacement(placement) {\n    const tokens = placement.split('-');\n    return {\n        side: tokens[0],\n        alignment: tokens[1]\n    };\n}\n", "/**\n * Returns the parent node or the host of the node argument.\n * @param node - DOM node.\n * @returns - parent DOM node.\n */ export const getParentNode = (node)=>{\n    if (node.nodeName === 'HTML') {\n        return node;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return node.parentNode || node.host;\n};\n/**\n * Returns CSS styles of the given node.\n * @param node - DOM node.\n * @returns - CSS styles.\n */ const getStyleComputedProperty = (node)=>{\n    var _node_ownerDocument;\n    if (node.nodeType !== 1) {\n        return {};\n    }\n    const window = (_node_ownerDocument = node.ownerDocument) === null || _node_ownerDocument === void 0 ? void 0 : _node_ownerDocument.defaultView;\n    return window.getComputedStyle(node, null);\n};\n/**\n * Returns the first scrollable parent of the given element.\n * @param node - DOM node.\n * @returns - the first scrollable parent.\n */ export const getScrollParent = (node)=>{\n    // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n    const parentNode = node && getParentNode(node);\n    // eslint-disable-next-line\n    if (!parentNode) return document.body;\n    switch(parentNode.nodeName){\n        case 'HTML':\n        case 'BODY':\n            return parentNode.ownerDocument.body;\n        case '#document':\n            return parentNode.body;\n    }\n    // If any of the overflow props is defined for the node then we return it as the parent\n    const { overflow, overflowX, overflowY } = getStyleComputedProperty(parentNode);\n    if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n        return parentNode;\n    }\n    return getScrollParent(parentNode);\n};\nexport const hasScrollParent = (node)=>{\n    var _scrollParentElement_ownerDocument;\n    const scrollParentElement = getScrollParent(node);\n    return scrollParentElement ? scrollParentElement !== ((_scrollParentElement_ownerDocument = scrollParentElement.ownerDocument) === null || _scrollParentElement_ownerDocument === void 0 ? void 0 : _scrollParentElement_ownerDocument.body) : false;\n};\n", "import { getScrollParent } from './getScrollParent';\n/**\n * Allows to mimic a behavior from V1 of Popper and accept `window` and `scrollParent` as strings.\n */ export function getBoundary(element, boundary) {\n    if (boundary === 'window') {\n        return element === null || element === void 0 ? void 0 : element.ownerDocument.documentElement;\n    }\n    if (boundary === 'clippingParents') {\n        return 'clippingAncestors';\n    }\n    if (boundary === 'scrollParent') {\n        let boundariesNode = getScrollParent(element);\n        if (boundariesNode.nodeName === 'BODY') {\n            boundariesNode = element === null || element === void 0 ? void 0 : element.ownerDocument.documentElement;\n        }\n        return boundariesNode;\n    }\n    return boundary;\n}\n", "import * as React from 'react';\nvar WorkTag;\n(function(WorkTag) {\n    WorkTag[WorkTag[\"FunctionComponent\"] = 0] = \"FunctionComponent\";\n    WorkTag[WorkTag[\"ClassComponent\"] = 1] = \"ClassComponent\";\n    WorkTag[WorkTag[\"IndeterminateComponent\"] = 2] = \"IndeterminateComponent\";\n    WorkTag[WorkTag[\"HostRoot\"] = 3] = \"HostRoot\";\n    WorkTag[WorkTag[\"HostPortal\"] = 4] = \"HostPortal\";\n    WorkTag[WorkTag[\"HostComponent\"] = 5] = \"HostComponent\";\n    WorkTag[WorkTag[\"HostText\"] = 6] = \"HostText\";\n    WorkTag[WorkTag[\"Fragment\"] = 7] = \"Fragment\";\n    WorkTag[WorkTag[\"Mode\"] = 8] = \"Mode\";\n    WorkTag[WorkTag[\"ContextConsumer\"] = 9] = \"ContextConsumer\";\n    WorkTag[WorkTag[\"ContextProvider\"] = 10] = \"ContextProvider\";\n    WorkTag[WorkTag[\"ForwardRef\"] = 11] = \"ForwardRef\";\n    WorkTag[WorkTag[\"Profiler\"] = 12] = \"Profiler\";\n    WorkTag[WorkTag[\"SuspenseComponent\"] = 13] = \"SuspenseComponent\";\n    WorkTag[WorkTag[\"MemoComponent\"] = 14] = \"MemoComponent\";\n    WorkTag[WorkTag[\"SimpleMemoComponent\"] = 15] = \"SimpleMemoComponent\";\n    WorkTag[WorkTag[\"LazyComponent\"] = 16] = \"LazyComponent\";\n    WorkTag[WorkTag[\"IncompleteClassComponent\"] = 17] = \"IncompleteClassComponent\";\n    WorkTag[WorkTag[\"DehydratedFragment\"] = 18] = \"DehydratedFragment\";\n    WorkTag[WorkTag[\"SuspenseListComponent\"] = 19] = \"SuspenseListComponent\";\n    WorkTag[WorkTag[\"FundamentalComponent\"] = 20] = \"FundamentalComponent\";\n    WorkTag[WorkTag[\"ScopeComponent\"] = 21] = \"ScopeComponent\";\n})(WorkTag || (WorkTag = {}));\nexport function getReactFiberFromNode(elm) {\n    if (!elm) {\n        return null;\n    }\n    for(const k in elm){\n        // React 16 uses \"__reactInternalInstance$\" prefix\n        // React 17 uses \"__reactFiber$\" prefix\n        // https://github.com/facebook/react/pull/18377\n        if (k.indexOf('__reactInternalInstance$') === 0 || k.indexOf('__reactFiber$') === 0) {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            return elm[k];\n        }\n    }\n    throw new Error('getReactFiber(): Failed to find a React Fiber on a node');\n}\n", "/**\n * Generally when adding an arrow to popper, it's necessary to offset the position of the popper by the\n * height of the arrow. A simple utility to merge a provided offset with an arrow height to return the final offset\n *\n * @internal\n * @param userOffset - The offset provided by the user\n * @param arrowHeight - The height of the arrow in px\n * @returns User offset augmented with arrow height\n */ export function mergeArrowOffset(userOffset, arrowHeight) {\n    if (typeof userOffset === 'number') {\n        return addArrowOffset(userOffset, arrowHeight);\n    }\n    if (typeof userOffset === 'object' && userOffset !== null) {\n        return addArrowOffset(userOffset, arrowHeight);\n    }\n    if (typeof userOffset === 'function') {\n        return (offsetParams)=>{\n            const offset = userOffset(offsetParams);\n            return addArrowOffset(offset, arrowHeight);\n        };\n    }\n    return {\n        mainAxis: arrowHeight\n    };\n}\nconst addArrowOffset = (offset, arrowHeight)=>{\n    if (typeof offset === 'number') {\n        return {\n            mainAxis: offset + arrowHeight\n        };\n    }\n    var _offset_mainAxis;\n    return {\n        ...offset,\n        mainAxis: ((_offset_mainAxis = offset.mainAxis) !== null && _offset_mainAxis !== void 0 ? _offset_mainAxis : 0) + arrowHeight\n    };\n};\n", "export function toFloatingUIPadding(padding, isRtl) {\n    if (typeof padding === 'number') {\n        return padding;\n    }\n    const { start, end, ...verticalPadding } = padding;\n    const paddingObject = verticalPadding;\n    const left = isRtl ? 'end' : 'start';\n    const right = isRtl ? 'start' : 'end';\n    // assign properties explicitly since undefined values are actually handled by floating UI\n    // TODO create floating UI issue\n    if (padding[left]) {\n        paddingObject.left = padding[left];\n    }\n    if (padding[right]) {\n        paddingObject.right = padding[right];\n    }\n    return paddingObject;\n}\n", "const getPositionMap = (rtl)=>({\n        above: 'top',\n        below: 'bottom',\n        before: rtl ? 'right' : 'left',\n        after: rtl ? 'left' : 'right'\n    });\n// Floating UI automatically flips alignment\n// https://github.com/floating-ui/floating-ui/issues/1563\nconst getAlignmentMap = ()=>({\n        start: 'start',\n        end: 'end',\n        top: 'start',\n        bottom: 'end',\n        center: undefined\n    });\nconst shouldAlignToCenter = (p, a)=>{\n    const positionedVertically = p === 'above' || p === 'below';\n    const alignedVertically = a === 'top' || a === 'bottom';\n    return positionedVertically && alignedVertically || !positionedVertically && !alignedVertically;\n};\n/**\n * Maps internal positioning values to Floating UI placement\n * @see positioningHelper.test.ts for expected placement values\n */ export const toFloatingUIPlacement = (align, position, rtl)=>{\n    const alignment = shouldAlignToCenter(position, align) ? 'center' : align;\n    const computedPosition = position && getPositionMap(rtl)[position];\n    const computedAlignment = alignment && getAlignmentMap()[alignment];\n    if (computedPosition && computedAlignment) {\n        return `${computedPosition}-${computedAlignment}`;\n    }\n    return computedPosition;\n};\n", "import { parseFloatingUIPlacement } from './parseFloatingUIPlacement';\nconst getPositionMap = ()=>({\n        top: 'above',\n        bottom: 'below',\n        right: 'after',\n        left: 'before'\n    });\n// Floating UI automatically flips alignment\n// https://github.com/floating-ui/floating-ui/issues/1563\nconst getAlignmentMap = (position)=>{\n    if (position === 'above' || position === 'below') {\n        return {\n            start: 'start',\n            end: 'end'\n        };\n    }\n    return {\n        start: 'top',\n        end: 'bottom'\n    };\n};\n/**\n * Maps Floating UI placement to positioning values\n * @see positioningHelper.test.ts for expected placement values\n */ export const fromFloatingUIPlacement = (placement)=>{\n    const { side, alignment: floatingUIAlignment } = parseFloatingUIPlacement(placement);\n    const position = getPositionMap()[side];\n    const alignment = floatingUIAlignment && getAlignmentMap(position)[floatingUIAlignment];\n    return {\n        position,\n        alignment\n    };\n};\n", "import * as React from 'react';\nimport { useIsomorphicLayoutEffect } from '@fluentui/react-utilities';\n/**\n * Creates a MutableRef with ref change callback. Is useful as React.useRef() doesn't notify you when its content\n * changes and mutating the .current property doesn't cause a re-render. An opt-out will be use a callback ref via\n * React.useState(), but it will cause re-renders always.\n *\n * https://reactjs.org/docs/hooks-reference.html#useref\n * https://github.com/theKashey/use-callback-ref#usecallbackref---to-replace-reactuseref\n *\n * @param initialValue - initial ref value\n * @param callback - a callback to run when value changes\n * @param skipInitialResolve - a flag to skip an initial ref report\n *\n * @example\n * const ref = useCallbackRef(0, (newValue, oldValue) => console.log(oldValue, '->', newValue);\n * ref.current = 1;\n * // prints 0 -> 1\n */ export function useCallbackRef(initialValue, callback, skipInitialResolve) {\n    const isFirst = React.useRef(true);\n    const [ref] = React.useState(()=>({\n            // value\n            value: initialValue,\n            // last callback\n            callback,\n            // \"memoized\" public interface\n            facade: {\n                get current () {\n                    return ref.value;\n                },\n                set current (value){\n                    const last = ref.value;\n                    if (last !== value) {\n                        ref.value = value;\n                        if (skipInitialResolve && isFirst.current) {\n                            return;\n                        }\n                        ref.callback(value, last);\n                    }\n                }\n            }\n        }));\n    useIsomorphicLayoutEffect(()=>{\n        isFirst.current = false;\n    }, []);\n    // update callback\n    ref.callback = callback;\n    return ref.facade;\n}\n", "/**\n * Promise microtask debouncer used by Popper.js v2\n * This is no longer exported in Floating UI (Popper.js v3)\n * https://github.com/floating-ui/floating-ui/blob/v2.x/src/utils/debounce.js\n * @param fn function that will be debounced\n */ export function debounce(fn) {\n    let pending;\n    return ()=>{\n        if (!pending) {\n            pending = new Promise((resolve)=>{\n                Promise.resolve().then(()=>{\n                    pending = undefined;\n                    resolve(fn());\n                });\n            });\n        }\n        return pending;\n    };\n}\n", "//\n// Dev utils to detect if nodes have \"autoFocus\" props.\n//\nimport { getReactFiberFromNode } from './getReactFiberFromNode';\n/**\n * Detects if a passed HTML node has \"autoFocus\" prop on a React's fiber. Is needed as React handles autofocus behavior\n * in React DOM and will not pass \"autoFocus\" to an actual HTML.\n *\n * @param node\n */ function hasAutofocusProp(node) {\n    // https://github.com/facebook/react/blob/848bb2426e44606e0a55dfe44c7b3ece33772485/packages/react-dom/src/client/ReactDOMHostConfig.js#L157-L166\n    const isAutoFocusableElement = node.nodeName === 'BUTTON' || node.nodeName === 'INPUT' || node.nodeName === 'SELECT' || node.nodeName === 'TEXTAREA';\n    if (isAutoFocusableElement) {\n        var _getReactFiberFromNode;\n        return !!((_getReactFiberFromNode = getReactFiberFromNode(node)) === null || _getReactFiberFromNode === void 0 ? void 0 : _getReactFiberFromNode.pendingProps.autoFocus);\n    }\n    return false;\n}\nexport function hasAutofocusFilter(node) {\n    return hasAutofocusProp(node) ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;\n}\n", "/**\n * Writes all DOM element updates after position is computed\n */ export function writeArrowUpdates(options) {\n    const { arrow, middlewareData } = options;\n    if (!middlewareData.arrow || !arrow) {\n        return;\n    }\n    const { x: arrowX, y: arrowY } = middlewareData.arrow;\n    Object.assign(arrow.style, {\n        left: `${arrowX}px`,\n        top: `${arrowY}px`\n    });\n}\n", "import { DATA_POSITIONING_ESCAPED, DATA_POSITIONING_HIDDEN, DATA_POSITIONING_INTERSECTING, DATA_POSITIONING_PLACEMENT } from '../constants';\n/**\n * Writes all container element position updates after the position is computed\n */ export function writeContainerUpdates(options) {\n    var _middlewareData_hide, _middlewareData_hide1, _container_ownerDocument_defaultView;\n    const { container, placement, middlewareData, strategy, lowPPI, coordinates, useTransform = true } = options;\n    if (!container) {\n        return;\n    }\n    container.setAttribute(DATA_POSITIONING_PLACEMENT, placement);\n    container.removeAttribute(DATA_POSITIONING_INTERSECTING);\n    if (middlewareData.intersectionObserver.intersecting) {\n        container.setAttribute(DATA_POSITIONING_INTERSECTING, '');\n    }\n    container.removeAttribute(DATA_POSITIONING_ESCAPED);\n    if ((_middlewareData_hide = middlewareData.hide) === null || _middlewareData_hide === void 0 ? void 0 : _middlewareData_hide.escaped) {\n        container.setAttribute(DATA_POSITIONING_ESCAPED, '');\n    }\n    container.removeAttribute(DATA_POSITIONING_HIDDEN);\n    if ((_middlewareData_hide1 = middlewareData.hide) === null || _middlewareData_hide1 === void 0 ? void 0 : _middlewareData_hide1.referenceHidden) {\n        container.setAttribute(DATA_POSITIONING_HIDDEN, '');\n    }\n    // Round so that the coordinates land on device pixels.\n    // This prevents blurriness in cases where the browser doesn't apply pixel snapping, such as when other effects like\n    // `backdrop-filter: blur()` are applied to the container, and the browser is zoomed in.\n    // See https://github.com/microsoft/fluentui/issues/26764 for more info.\n    const devicePixelRatio = ((_container_ownerDocument_defaultView = container.ownerDocument.defaultView) === null || _container_ownerDocument_defaultView === void 0 ? void 0 : _container_ownerDocument_defaultView.devicePixelRatio) || 1;\n    const x = Math.round(coordinates.x * devicePixelRatio) / devicePixelRatio;\n    const y = Math.round(coordinates.y * devicePixelRatio) / devicePixelRatio;\n    Object.assign(container.style, {\n        position: strategy\n    });\n    if (useTransform) {\n        Object.assign(container.style, {\n            transform: lowPPI ? `translate(${x}px, ${y}px)` : `translate3d(${x}px, ${y}px, 0)`\n        });\n        return;\n    }\n    Object.assign(container.style, {\n        left: `${x}px`,\n        top: `${y}px`\n    });\n}\n", "/**\n * AutoSizes contains many options from historic implementation.\n * Now options 'always'/'height-always'/'width-always' are obsolete.\n * This function maps them to true/'height'/'width'\n */ export const normalizeAutoSize = (autoSize)=>{\n    switch(autoSize){\n        case 'always':\n        case true:\n            return {\n                applyMaxWidth: true,\n                applyMaxHeight: true\n            };\n        case 'width-always':\n        case 'width':\n            return {\n                applyMaxWidth: true,\n                applyMaxHeight: false\n            };\n        case 'height-always':\n        case 'height':\n            return {\n                applyMaxWidth: false,\n                applyMaxHeight: true\n            };\n        default:\n            return false;\n    }\n};\n", "import { parseFloatingUIPlacement } from '../utils/index';\nexport function coverTarget() {\n    return {\n        name: 'coverTarget',\n        fn: (middlewareArguments)=>{\n            const { placement, rects, x, y } = middlewareArguments;\n            const basePlacement = parseFloatingUIPlacement(placement).side;\n            const newCoords = {\n                x,\n                y\n            };\n            switch(basePlacement){\n                case 'bottom':\n                    newCoords.y -= rects.reference.height;\n                    break;\n                case 'top':\n                    newCoords.y += rects.reference.height;\n                    break;\n                case 'left':\n                    newCoords.x += rects.reference.width;\n                    break;\n                case 'right':\n                    newCoords.x -= rects.reference.width;\n                    break;\n            }\n            return newCoords;\n        }\n    };\n}\n", "import { flip as baseFlip } from '@floating-ui/dom';\nimport { getBoundary, resolvePositioningShorthand, toFloatingUIPlacement } from '../utils/index';\nexport function flip(options) {\n    const { hasScrollableElement, flipBoundary, container, fallbackPositions = [], isRtl } = options;\n    const fallbackPlacements = fallbackPositions.reduce((acc, shorthand)=>{\n        const { position, align } = resolvePositioningShorthand(shorthand);\n        const placement = toFloatingUIPlacement(align, position, isRtl);\n        if (placement) {\n            acc.push(placement);\n        }\n        return acc;\n    }, []);\n    return baseFlip({\n        ...hasScrollableElement && {\n            boundary: 'clippingAncestors'\n        },\n        ...flipBoundary && {\n            altBoundary: true,\n            boundary: getBoundary(container, flipBoundary)\n        },\n        fallbackStrategy: 'bestFit',\n        ...fallbackPlacements.length && {\n            fallbackPlacements\n        }\n    });\n}\n", "import { detectOverflow } from '@floating-ui/dom';\nexport function intersecting() {\n    return {\n        name: 'intersectionObserver',\n        fn: async (middlewareArguments)=>{\n            const floatingRect = middlewareArguments.rects.floating;\n            const altOverflow = await detectOverflow(middlewareArguments, {\n                altBoundary: true\n            });\n            const isIntersectingTop = altOverflow.top < floatingRect.height && altOverflow.top > 0;\n            const isIntersectingBottom = altOverflow.bottom < floatingRect.height && altOverflow.bottom > 0;\n            const isIntersecting = isIntersectingTop || isIntersectingBottom;\n            return {\n                data: {\n                    intersecting: isIntersecting\n                }\n            };\n        }\n    };\n}\n", "import { size } from '@floating-ui/dom';\nimport { getBoundary } from '../utils/getBoundary';\nimport { toFloatingUIPadding } from '../utils';\n/**\n * floating-ui `size` middleware uses floating element's height/width to calculate available height/width.\n * This middleware only runs once per lifecycle, resetting styles applied by maxSize from previous lifecycle.\n * Then floating element's original size is restored and `size` middleware can calculate available height/width correctly.\n */ export const resetMaxSize = (autoSize)=>({\n        name: 'resetMaxSize',\n        fn ({ middlewareData, elements }) {\n            var _middlewareData_resetMaxSize;\n            if ((_middlewareData_resetMaxSize = middlewareData.resetMaxSize) === null || _middlewareData_resetMaxSize === void 0 ? void 0 : _middlewareData_resetMaxSize.maxSizeAlreadyReset) {\n                return {};\n            }\n            const { applyMaxWidth, applyMaxHeight } = autoSize;\n            if (applyMaxWidth) {\n                elements.floating.style.removeProperty('box-sizing');\n                elements.floating.style.removeProperty('max-width');\n                elements.floating.style.removeProperty('width');\n            }\n            if (applyMaxHeight) {\n                elements.floating.style.removeProperty('box-sizing');\n                elements.floating.style.removeProperty('max-height');\n                elements.floating.style.removeProperty('height');\n            }\n            return {\n                data: {\n                    maxSizeAlreadyReset: true\n                },\n                reset: {\n                    rects: true\n                }\n            };\n        }\n    });\nexport function maxSize(autoSize, options) {\n    const { container, overflowBoundary, overflowBoundaryPadding, isRtl } = options;\n    return size({\n        ...overflowBoundaryPadding && {\n            padding: toFloatingUIPadding(overflowBoundaryPadding, isRtl)\n        },\n        ...overflowBoundary && {\n            altBoundary: true,\n            boundary: getBoundary(container, overflowBoundary)\n        },\n        apply ({ availableHeight, availableWidth, elements, rects }) {\n            const applyMaxSizeStyles = (apply, dimension, availableSize)=>{\n                if (!apply) {\n                    return;\n                }\n                elements.floating.style.setProperty('box-sizing', 'border-box');\n                elements.floating.style.setProperty(`max-${dimension}`, `${availableSize}px`);\n                if (rects.floating[dimension] > availableSize) {\n                    elements.floating.style.setProperty(dimension, `${availableSize}px`);\n                    const axis = dimension === 'width' ? 'x' : 'y';\n                    if (!elements.floating.style.getPropertyValue(`overflow-${axis}`)) {\n                        elements.floating.style.setProperty(`overflow-${axis}`, 'auto');\n                    }\n                }\n            };\n            const { applyMaxWidth, applyMaxHeight } = autoSize;\n            applyMaxSizeStyles(applyMaxWidth, 'width', availableWidth);\n            applyMaxSizeStyles(applyMaxHeight, 'height', availableHeight);\n        }\n    });\n}\n", "import { fromFloatingUIPlacement } from './fromFloatingUIPlacement';\n/**\n * Shim to transform offset values from this library to Floating UI\n * @param rawOffset Offset from this library\n * @returns An offset value compatible with Floating UI\n */ export function getFloatingUIOffset(rawOffset) {\n    if (!rawOffset) {\n        return rawOffset;\n    }\n    if (typeof rawOffset === 'number' || typeof rawOffset === 'object') {\n        return rawOffset;\n    }\n    return ({ rects: { floating, reference }, placement })=>{\n        const { position, alignment } = fromFloatingUIPlacement(placement);\n        return rawOffset({\n            positionedRect: floating,\n            targetRect: reference,\n            position,\n            alignment\n        });\n    };\n}\n", "import { offset as baseOffset } from '@floating-ui/dom';\nimport { getFloatingUIOffset } from '../utils/getFloatingUIOffset';\n/**\n * Wraps floating UI offset middleware to to transform offset value\n */ export function offset(offsetValue) {\n    const floatingUIOffset = getFloatingUIOffset(offsetValue);\n    return baseOffset(floatingUIOffset);\n}\n", "import { shift as baseShift, limitShift } from '@floating-ui/dom';\nimport { getBoundary, toFloatingUIPadding } from '../utils/index';\n/**\n * Wraps the floating UI shift middleware for easier usage of our options\n */ export function shift(options) {\n    const { hasScrollableElement, disableTether, overflowBoundary, container, overflowBoundaryPadding, isRtl } = options;\n    return baseShift({\n        ...hasScrollableElement && {\n            boundary: 'clippingAncestors'\n        },\n        ...disableTether && {\n            crossAxis: disableTether === 'all',\n            limiter: limitShift({\n                crossAxis: disableTether !== 'all',\n                mainAxis: false\n            })\n        },\n        ...overflowBoundaryPadding && {\n            padding: toFloatingUIPadding(overflowBoundaryPadding, isRtl)\n        },\n        ...overflowBoundary && {\n            altBoundary: true,\n            boundary: getBoundary(container, overflowBoundary)\n        }\n    });\n}\n", "export const matchTargetSizeCssVar = '--fui-match-target-size';\nexport function matchTargetSize() {\n    return {\n        name: 'matchTargetSize',\n        fn: async (middlewareArguments)=>{\n            const { rects: { reference: referenceRect, floating: floatingRect }, elements: { floating: floatingElement }, middlewareData: { matchTargetSize: { matchTargetSizeAttempt = false } = {} } } = middlewareArguments;\n            if (referenceRect.width === floatingRect.width || matchTargetSizeAttempt) {\n                return {};\n            }\n            const { width } = referenceRect;\n            floatingElement.style.setProperty(matchTargetSizeCssVar, `${width}px`);\n            if (!floatingElement.style.width) {\n                floatingElement.style.width = `var(${matchTargetSizeCssVar})`;\n            }\n            return {\n                data: {\n                    matchTargetSizeAttempt: true\n                },\n                reset: {\n                    rects: true\n                }\n            };\n        }\n    };\n}\n", "import { getScrollParent } from './getScrollParent';\nexport function listScrollParents(node) {\n    const scrollParents = [];\n    let cur = node;\n    while(cur){\n        const scrollParent = getScrollParent(cur);\n        if (node.ownerDocument.body === scrollParent) {\n            scrollParents.push(scrollParent);\n            break;\n        }\n        if (scrollParent.nodeName === 'BODY' && scrollParent !== node.ownerDocument.body) {\n            if (process.env.NODE_ENV !== 'production') {\n                // eslint-disable-next-line no-console\n                console.error('@fluentui/react-positioning: You are comparing two different documents! This is an unexpected error, please report this as a bug to the Fluent UI team ');\n            }\n            break;\n        }\n        scrollParents.push(scrollParent);\n        cur = scrollParent;\n    }\n    return scrollParents;\n}\n", "export function createResizeObserver(targetWindow, callback) {\n    // https://github.com/jsdom/jsdom/issues/3368\n    // Add the polyfill here so it is not needed for all unit tests that leverage positioning\n    if (process.env.NODE_ENV === 'test') {\n        targetWindow.ResizeObserver = class ResizeObserver {\n            observe() {\n            // do nothing\n            }\n            unobserve() {\n            // do nothing\n            }\n            disconnect() {\n            // do nothing\n            }\n        };\n    }\n    return new targetWindow.ResizeObserver(callback);\n}\n", "import { computePosition } from '@floating-ui/dom';\nimport { isHTMLElement } from '@fluentui/react-utilities';\nimport { debounce, writeArrowUpdates, writeContainerUpdates } from './utils';\nimport { listScrollParents } from './utils/listScrollParents';\nimport { POSITIONING_END_EVENT } from './constants';\nimport { createResizeObserver } from './utils/createResizeObserver';\n/**\n * @internal\n * @returns manager that handles positioning out of the react lifecycle\n */ export function createPositionManager(options) {\n    let isDestroyed = false;\n    const { container, target, arrow, strategy, middleware, placement, useTransform = true, disableUpdateOnResize = false } = options;\n    const targetWindow = container.ownerDocument.defaultView;\n    if (!target || !container || !targetWindow) {\n        return {\n            updatePosition: ()=>undefined,\n            dispose: ()=>undefined\n        };\n    }\n    // When the dimensions of the target or the container change - trigger a position update\n    const resizeObserver = disableUpdateOnResize ? null : createResizeObserver(targetWindow, (entries)=>{\n        // If content rect dimensions to go 0 -> very likely that `display: none` is being used to hide the element\n        // In this case don't update and let users update imperatively\n        const shouldUpdateOnResize = entries.every((entry)=>{\n            return entry.contentRect.width > 0 && entry.contentRect.height > 0;\n        });\n        if (shouldUpdateOnResize) {\n            updatePosition();\n        }\n    });\n    let isFirstUpdate = true;\n    const scrollParents = new Set();\n    // When the container is first resolved, set position `fixed` to avoid scroll jumps.\n    // Without this scroll jumps can occur when the element is rendered initially and receives focus\n    Object.assign(container.style, {\n        position: 'fixed',\n        left: 0,\n        top: 0,\n        margin: 0\n    });\n    const forceUpdate = ()=>{\n        // debounced update can still occur afterwards\n        // early return to avoid memory leaks\n        if (isDestroyed) {\n            return;\n        }\n        if (isFirstUpdate) {\n            listScrollParents(container).forEach((scrollParent)=>scrollParents.add(scrollParent));\n            if (isHTMLElement(target)) {\n                listScrollParents(target).forEach((scrollParent)=>scrollParents.add(scrollParent));\n            }\n            scrollParents.forEach((scrollParent)=>{\n                scrollParent.addEventListener('scroll', updatePosition, {\n                    passive: true\n                });\n            });\n            resizeObserver === null || resizeObserver === void 0 ? void 0 : resizeObserver.observe(container);\n            if (isHTMLElement(target)) {\n                resizeObserver === null || resizeObserver === void 0 ? void 0 : resizeObserver.observe(target);\n            }\n            isFirstUpdate = false;\n        }\n        Object.assign(container.style, {\n            position: strategy\n        });\n        computePosition(target, container, {\n            placement,\n            middleware,\n            strategy\n        }).then(({ x, y, middlewareData, placement: computedPlacement })=>{\n            // Promise can still resolve after destruction\n            // early return to avoid applying outdated position\n            if (isDestroyed) {\n                return;\n            }\n            writeArrowUpdates({\n                arrow,\n                middlewareData\n            });\n            writeContainerUpdates({\n                container,\n                middlewareData,\n                placement: computedPlacement,\n                coordinates: {\n                    x,\n                    y\n                },\n                lowPPI: ((targetWindow === null || targetWindow === void 0 ? void 0 : targetWindow.devicePixelRatio) || 1) <= 1,\n                strategy,\n                useTransform\n            });\n            container.dispatchEvent(new CustomEvent(POSITIONING_END_EVENT));\n        }).catch((err)=>{\n            // https://github.com/floating-ui/floating-ui/issues/1845\n            // FIXME for node > 14\n            // node 15 introduces promise rejection which means that any components\n            // tests need to be `it('', async () => {})` otherwise there can be race conditions with\n            // JSDOM being torn down before this promise is resolved so globals like `window` and `document` don't exist\n            // Unless all tests that ever use `usePositioning` are turned into async tests, any logging during testing\n            // will actually be counter productive\n            if (process.env.NODE_ENV === 'development') {\n                // eslint-disable-next-line no-console\n                console.error('[usePositioning]: Failed to calculate position', err);\n            }\n        });\n    };\n    const updatePosition = debounce(()=>forceUpdate());\n    const dispose = ()=>{\n        isDestroyed = true;\n        if (targetWindow) {\n            targetWindow.removeEventListener('scroll', updatePosition);\n            targetWindow.removeEventListener('resize', updatePosition);\n        }\n        scrollParents.forEach((scrollParent)=>{\n            scrollParent.removeEventListener('scroll', updatePosition);\n        });\n        scrollParents.clear();\n        resizeObserver === null || resizeObserver === void 0 ? void 0 : resizeObserver.disconnect();\n    };\n    if (targetWindow) {\n        targetWindow.addEventListener('scroll', updatePosition, {\n            passive: true\n        });\n        targetWindow.addEventListener('resize', updatePosition);\n    }\n    // Update the position on initialization\n    updatePosition();\n    return {\n        updatePosition,\n        dispose\n    };\n}\n", "/**\n * @internal\n */\nconst CONTROLLER = '__FUIDT_CONTROLLER__';\n\n/**\n * @internal\n */\nconst ELEMENT_METADATA = '__FUIDT_ELEMENT_METADATA__';\n\n/**\n * @internal\n */\nconst HTML_ELEMENT_REFERENCE = '__FUIDT_HTML_ELEMENT_REFERENCE__';\n\n/**\n * @internal\n */\nconst SERIALIZED_DATA_CHANGE = '__FUIDT_SERIALIZED_DATA_CHANGE__';\n\n/**\n * Verifies if a given node is an HTMLElement,\n * this method works seamlessly with frames and elements from different documents\n *\n * This is preferred over simply using `instanceof`.\n * Since `instanceof` might be problematic while operating with [multiple realms](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/instanceof#instanceof_and_multiple_realms)\n *\n * @example\n * ```ts\n * isHTMLElement(event.target) && event.target.focus()\n * isHTMLElement(event.target, {constructorName: 'HTMLInputElement'}) && event.target.value // some value\n * ```\n *\n */\nfunction isHTMLElement(element, options) {\n  var _typedElement$ownerDo, _options$constructorN;\n  const typedElement = element;\n  return Boolean((typedElement == null || (_typedElement$ownerDo = typedElement.ownerDocument) == null ? void 0 : _typedElement$ownerDo.defaultView) && typedElement instanceof typedElement.ownerDocument.defaultView[(_options$constructorN = options == null ? void 0 : options.constructorName) != null ? _options$constructorN : 'HTMLElement']);\n}\n\n/**\n * @internal\n */\n\nconst isHTMLElementWithMetadata = element => Boolean(isHTMLElement(element) && ELEMENT_METADATA in element && element.parentElement !== null);\n\nconst createController = defaultView => {\n  let selectedElement = null;\n  const observer = new MutationObserver(mutations => {\n    if (!selectedElement) {\n      return;\n    }\n    for (const mutation of mutations) {\n      if (mutation.type === 'childList' && Array.from(mutation.removedNodes).includes(selectedElement)) {\n        controller.withdraw();\n      }\n    }\n  });\n  const controller = {\n    get selectedElement() {\n      return selectedElement;\n    },\n    select: nextSelectedElement => {\n      if (isHTMLElementWithMetadata(nextSelectedElement)) {\n        selectedElement = nextSelectedElement;\n        observer.observe(nextSelectedElement.parentElement, {\n          childList: true,\n          subtree: false\n        });\n      }\n      if (selectedElement && nextSelectedElement) {\n        const metadata = selectedElement[ELEMENT_METADATA];\n        if (metadata.references.has(nextSelectedElement)) {\n          return selectedElement;\n        }\n      }\n      controller.withdraw();\n      return selectedElement;\n    },\n    withdraw: () => {\n      selectedElement = null;\n      observer.disconnect();\n      defaultView.postMessage(SERIALIZED_DATA_CHANGE);\n    }\n  };\n  return controller;\n};\nconst injectController = _ref => {\n  let {\n    defaultView\n  } = _ref;\n  if (!defaultView) {\n    return;\n  }\n  if (!defaultView[CONTROLLER]) {\n    defaultView[CONTROLLER] = createController(defaultView);\n  }\n};\nconst getController = targetDocument => {\n  var _targetDocument$defau, _targetDocument$defau2;\n  injectController(targetDocument);\n  return (_targetDocument$defau = (_targetDocument$defau2 = targetDocument.defaultView) == null ? void 0 : _targetDocument$defau2[CONTROLLER]) != null ? _targetDocument$defau : null;\n};\n\nconst serialize = (data, references) => {\n  const serializedData = JSON.parse(JSON.stringify(data, (_, value) => {\n    if (isHTMLElement(value)) return references.add(value);\n    if (typeof value === 'object' && value && Object.getPrototypeOf(value) !== Object.prototype && Object.getPrototypeOf(value) !== Array.prototype) {\n      if ('toString' in value) {\n        return value.toString();\n      }\n      return undefined;\n    }\n    return value;\n  }));\n  return serializedData;\n};\n\nlet counter = 0;\nconst generateReferenceId = () => HTML_ELEMENT_REFERENCE + \":\" + counter++;\nconst createReferences = () => {\n  const map = new Map();\n  const weakMap = new WeakMap();\n  const references = {\n    add: element => {\n      if (weakMap.has(element)) {\n        // biome-ignore lint/style/noNonNullAssertion: weakMap.has(element) ensures this is not undefined\n        return weakMap.get(element);\n      }\n      const id = generateReferenceId();\n      map.set(id, element);\n      weakMap.set(element, id);\n      return id;\n    },\n    get: id => {\n      const element = map.get(id);\n      if (element && weakMap.has(element)) {\n        return element;\n      }\n    },\n    has: element => {\n      return weakMap.has(element);\n    }\n  };\n  return references;\n};\n\n/**\n * devtools middleware\n * @public\n */\nconst devtools = function (targetDocument, middlewareDataCallback) {\n  if (targetDocument === void 0) {\n    targetDocument = document;\n  }\n  if (middlewareDataCallback === void 0) {\n    middlewareDataCallback = floatingUIMiddlewareDataCallback;\n  }\n  return {\n    name: '@floating-ui/devtools',\n    fn: state => {\n      const {\n        [ELEMENT_METADATA]: metadata\n      } = isHTMLElementWithMetadata(state.elements.floating) ? state.elements.floating : Object.assign(state.elements.floating, {\n        [ELEMENT_METADATA]: {\n          references: createReferences(),\n          serializedData: []\n        }\n      });\n      const serializedData = serialize(middlewareDataCallback(state), metadata.references);\n      metadata.serializedData.unshift(serializedData);\n      const controller = getController(targetDocument);\n      if (metadata.serializedData.length > 1 && state.elements.floating === (controller == null ? void 0 : controller.selectedElement)) {\n        var _targetDocument$defau;\n        (_targetDocument$defau = targetDocument.defaultView) == null || _targetDocument$defau.postMessage(SERIALIZED_DATA_CHANGE);\n      }\n      return {};\n    }\n  };\n};\nconst floatingUIMiddlewareDataCallback = state => ({\n  ...state,\n  type: 'FloatingUIMiddleware'\n});\n\nexport { devtools, devtools as middleware };\n", "import { isHTMLElement } from '@fluentui/react-utilities';\nimport { listScrollParents } from './listScrollParents';\nimport { fromFloatingUIPlacement } from './fromFloatingUIPlacement';\nexport const devtoolsCallback = (options)=>(middlewareState)=>{\n        const { elements: { floating, reference } } = middlewareState;\n        const scrollParentsSet = new Set();\n        if (isHTMLElement(reference)) {\n            listScrollParents(reference).forEach((scrollParent)=>scrollParentsSet.add(scrollParent));\n        }\n        listScrollParents(floating).forEach((scrollParent)=>scrollParentsSet.add(scrollParent));\n        const flipBoundaries = Array.isArray(options.flipBoundary) ? options.flipBoundary : isHTMLElement(options.flipBoundary) ? [\n            options.flipBoundary\n        ] : [];\n        const overflowBoundaries = Array.isArray(options.overflowBoundary) ? options.overflowBoundary : isHTMLElement(options.overflowBoundary) ? [\n            options.overflowBoundary\n        ] : [];\n        return {\n            type: 'FluentUIMiddleware',\n            middlewareState,\n            options,\n            initialPlacement: fromFloatingUIPlacement(middlewareState.initialPlacement),\n            placement: fromFloatingUIPlacement(middlewareState.placement),\n            flipBoundaries,\n            overflowBoundaries,\n            scrollParents: Array.from(scrollParentsSet)\n        };\n    };\n", "import * as React from 'react';\nimport { createVirtualElementFromClick } from './createVirtualElementFromClick';\n/**\n * @internal\n * A state hook that manages a popper virtual element from mouseevents.\n * Useful for scenarios where a component needs to be positioned by mouse click (e.g. contextmenu)\n * React synthetic events are not persisted by this hook\n *\n * @param initialState - initializes a user provided state similare to useState\n * @returns state and dispatcher for a Popper virtual element that uses native/synthetic mouse events\n */ export const usePositioningMouseTarget = (initialState)=>{\n    const [virtualElement, setVirtualElement] = React.useState(initialState);\n    const setVirtualMouseTarget = (event)=>{\n        if (event === undefined || event === null) {\n            setVirtualElement(undefined);\n            return;\n        }\n        let mouseevent;\n        if (!(event instanceof MouseEvent)) {\n            mouseevent = event.nativeEvent;\n        } else {\n            mouseevent = event;\n        }\n        if (!(mouseevent instanceof MouseEvent) && process.env.NODE_ENV !== 'production') {\n            // eslint-disable-next-line no-console\n            console.error('usePositioningMouseTarget should only be used with MouseEvent');\n        }\n        const contextTarget = createVirtualElementFromClick(mouseevent);\n        setVirtualElement(contextTarget);\n    };\n    return [\n        virtualElement,\n        setVirtualMouseTarget\n    ];\n};\n", "import { isHTMLElement } from '@fluentui/react-utilities';\n/**\n * The function that normalizes the `mountNode` prop into an object with element and className props.\n *\n * @param mountNode - an HTML element or an object with props\n */ export function toMountNodeProps(mountNode) {\n    if (isHTMLElement(mountNode)) {\n        return {\n            element: mountNode\n        };\n    }\n    if (typeof mountNode === 'object') {\n        if (mountNode === null) {\n            return {\n                element: null\n            };\n        }\n        return mountNode;\n    }\n    return {};\n}\n", "import { setVirtualParent } from '@fluentui/react-utilities';\nimport * as React from 'react';\nimport { toMountNodeProps } from '../../utils/toMountNodeProps';\nimport { usePortalMountNode } from './usePortalMountNode';\n/**\n * Create the state required to render Portal.\n *\n * The returned state can be modified with hooks such as usePortalStyles, before being passed to renderPortal_unstable.\n *\n * @param props - props from this instance of Portal\n */ export const usePortal_unstable = (props)=>{\n    const { element, className } = toMountNodeProps(props.mountNode);\n    const virtualParentRootRef = React.useRef(null);\n    const fallbackElement = usePortalMountNode({\n        disabled: !!element,\n        className\n    });\n    const mountNode = element !== null && element !== void 0 ? element : fallbackElement;\n    const state = {\n        children: props.children,\n        mountNode,\n        virtualParentRootRef\n    };\n    React.useEffect(()=>{\n        if (!mountNode) {\n            return;\n        }\n        const virtualParent = virtualParentRootRef.current;\n        // By default, we create a mount node for portal on `document.body` (see usePortalMountNode()) and have following structure:\n        //\n        // <body>\n        //   <!-- ⚛️ application root -->\n        //   <div id=\"root\">\n        //     <!-- ⬇️ portal node rendered in a tree to anchor (virtual parent node) -->\n        //     <span aria-hidden=\"true\"></span>\n        //   </div>\n        //   <div id=\"portal-mount-node\">\n        //     <!-- 🧩portal content -->\n        //   </div>\n        // </body>\n        //\n        // To make sure that `.elementContains()` works correctly, we link a virtual parent to a portal node (a virtual parent node becomes a parent of mount node):\n        //   virtual.contains(mountNode) === false\n        //   (while we need ⬇️⬇️⬇️)\n        //   elementsContains(virtualParent, mountNode) === true\n        //   elementsContains(mountNode, virtualParent) === false\n        //\n        // For more details, check docs for virtual parent utils.\n        //\n        // However, if a user provides a custom mount node (via `props`) the structure could be different:\n        //\n        // <body>\n        //   <!-- application root -->\n        //   <div id=\"root\">\n        //     <div id=\"portal-mount-node\">\n        //       <!-- 🧩portal content -->\n        //\n        //       <span aria-hidden=\"true\"></span>\n        //     </div>\n        //   </div>\n        // </body>\n        //\n        // A mount node in this case contains portal's content and a virtual parent node. In this case nodes linking is redundant and the check below avoids it.\n        //\n        // Otherwise, there is a circular reference - both elements are parents of each other:\n        //   elementsContains(mountNode, virtualParent) === true\n        //   elementsContains(virtualParent, mountNode) === true\n        const isVirtualParentInsideChild = mountNode.contains(virtualParent);\n        if (virtualParent && !isVirtualParentInsideChild) {\n            setVirtualParent(mountNode, virtualParent);\n            return ()=>{\n                setVirtualParent(mountNode, undefined);\n            };\n        }\n    }, [\n        virtualParentRootRef,\n        mountNode\n    ]);\n    return state;\n};\n", "import * as React from 'react';\nimport { useThemeClassName_unstable as useThemeClassName, useFluent_unstable as useFluent, usePortalMountNode as usePortalMountNodeContext } from '@fluentui/react-shared-contexts';\nimport { mergeClasses } from '@griffel/react';\nimport { useFocusVisible } from '@fluentui/react-tabster';\nimport { useDisposable } from 'use-disposable';\nimport { usePortalMountNodeStylesStyles } from './usePortalMountNodeStyles.styles';\nconst useInsertionEffect = React['useInsertion' + 'Effect'];\n/**\n * Creates a new element on a \"document.body\" to mount portals.\n */ export const usePortalMountNode = (options)=>{\n    'use no memo';\n    const { targetDocument, dir } = useFluent();\n    const mountNode = usePortalMountNodeContext();\n    const focusVisibleRef = useFocusVisible();\n    const classes = usePortalMountNodeStylesStyles();\n    const themeClassName = useThemeClassName();\n    const className = mergeClasses(themeClassName, classes.root, options.className);\n    const targetNode = mountNode !== null && mountNode !== void 0 ? mountNode : targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.body;\n    const element = useDisposable(()=>{\n        if (targetNode === undefined || options.disabled) {\n            return [\n                null,\n                ()=>null\n            ];\n        }\n        const newElement = targetNode.ownerDocument.createElement('div');\n        targetNode.appendChild(newElement);\n        return [\n            newElement,\n            ()=>newElement.remove()\n        ];\n    }, [\n        targetNode\n    ]);\n    if (useInsertionEffect) {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        useInsertionEffect(()=>{\n            if (!element) {\n                return;\n            }\n            const classesToApply = className.split(' ').filter(Boolean);\n            element.classList.add(...classesToApply);\n            element.setAttribute('dir', dir);\n            element.setAttribute('data-portal-node', 'true');\n            focusVisibleRef.current = element;\n            return ()=>{\n                element.classList.remove(...classesToApply);\n                element.removeAttribute('dir');\n            };\n        }, [\n            className,\n            dir,\n            element,\n            focusVisibleRef\n        ]);\n    } else {\n        // This useMemo call is intentional for React 17\n        // We don't want to re-create the portal element when its attributes change.\n        // This also should not be done in an effect because, changing the value of css variables\n        // after initial mount can trigger interesting CSS side effects like transitions.\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        React.useMemo(()=>{\n            if (!element) {\n                return;\n            }\n            // Force replace all classes\n            element.className = className;\n            element.setAttribute('dir', dir);\n            element.setAttribute('data-portal-node', 'true');\n            focusVisibleRef.current = element;\n        }, [\n            className,\n            dir,\n            element,\n            focusVisibleRef\n        ]);\n    }\n    return element;\n};\n", "import * as React from \"react\";\n\n/**\n * @returns Current react fiber being rendered\n */\nexport const getCurrentOwner = () => {\n  // Note: String concatenation is used to prevent bundlers to complain with multiple versions of React\n  try {\n    // React 19\n    // using react internals\n    return (React as any)[\n      \"\".concat(\n        \"__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE\",\n      )\n    ].A.getOwner();\n  } catch {}\n\n  try {\n    // React <18\n    // using react internals\n    return (React as any)[\n      \"\".concat(\"__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\")\n    ].ReactCurrentOwner.current;\n  } catch {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.error(\n        \"use-disposable: failed to get current fiber, please report this bug to maintainers\",\n      );\n    }\n  }\n};\n\nconst REACT_STRICT_MODE_TYPE = /*#__PURE__*/ Symbol.for(\"react.strict_mode\");\n\n/**\n * Traverses up the React fiber tree to find the StrictMode component.\n * Note: This only detects strict mode from React >= 18\n * https://github.com/reactwg/react-18/discussions/19\n * @returns If strict mode is being used in the React tree\n */\nexport const useIsStrictMode = (): boolean => {\n  // This check violates Rules of Hooks, but \"process.env.NODE_ENV\" does not change in bundle\n  // or during application lifecycle\n  if (process.env.NODE_ENV === \"production\") {\n    return false;\n  }\n\n  const isStrictMode = React.useRef<boolean | undefined>(undefined);\n  const reactMajorVersion = React.useMemo(() => {\n    return Number(React.version.split(\".\")[0]);\n  }, [React.version]);\n\n  if (isNaN(reactMajorVersion) || reactMajorVersion < 18) {\n    return false;\n  }\n\n  if (isStrictMode.current === undefined) {\n    let currentOwner = getCurrentOwner();\n    while (currentOwner && currentOwner.return) {\n      currentOwner = currentOwner.return;\n      if (\n        currentOwner.type === REACT_STRICT_MODE_TYPE ||\n        currentOwner.elementType === REACT_STRICT_MODE_TYPE\n      ) {\n        isStrictMode.current = true;\n      }\n    }\n  }\n\n  return !!isStrictMode.current;\n};\n", "import * as React from \"react\";\nimport type { DisposableFactory } from \"./types\";\nimport { useIsStrictMode } from \"./useIsStrictMode\";\nimport { useStrictEffect } from \"./useStrictEffect\";\nimport { useStrictMemo } from \"./useStrictMemo\";\n\n/**\n * Creates a disposable instance during **render time** that will\n * be created once (based on dependency array) even during strict mode.\n * The disposable will be disposed based on the dependency array similar to\n * useEffect.\n *\n * \u26A0\uFE0F This can only be called **once** per component\n * @param factory - factory for disposable and its dispose function\n * @param deps - Similar to a React dependency array\n * @returns - The disposable instance\n */\nexport function useDisposable<TInstance>(\n  factory: DisposableFactory<TInstance>,\n  deps: any[],\n) {\n  // In production, strict mode does not require special handling\n  const isStrictMode =\n    useIsStrictMode() && process.env.NODE_ENV !== \"production\";\n\n  const useMemo = isStrictMode ? useStrictMemo : React.useMemo;\n  const useEffect = isStrictMode ? useStrictEffect : React.useEffect;\n\n  const [disposable, dispose] = useMemo(() => factory(), deps) ?? [\n    null,\n    () => null,\n  ];\n  useEffect(() => {\n    return dispose;\n  }, deps);\n\n  return disposable;\n}\n", "import * as React from \"react\";\nimport { getCurrentOwner } from \"./useIsStrictMode\";\n\n// we know strict mode will render useMemo facory twice\n// keep a weak set to detect when the second render happens\nconst effectSet = new WeakSet();\n\nexport function useStrictEffect(\n  effect: () => () => void,\n  deps: React.DependencyList | undefined,\n) {\n  const currentOwner = getCurrentOwner();\n  React.useEffect(() => {\n    if (!effectSet.has(currentOwner)) {\n      effectSet.add(currentOwner);\n      effect();\n      return;\n    }\n\n    const dispose = effect();\n    return dispose;\n  }, deps);\n}\n", "import * as React from \"react\";\nimport { getCurrentOwner } from \"./useIsStrictMode\";\n\n// we know strict mode will render useMemo facory twice\n// keep a weak set to detect when the second render happens\nconst memoSet = new WeakSet();\n\nexport function useStrictMemo<TMemoized>(\n  factory: () => any,\n  deps: React.DependencyList | undefined,\n): TMemoized | null {\n  return React.useMemo(() => {\n    const currentOwner = getCurrentOwner();\n    if (!memoSet.has(currentOwner)) {\n      memoSet.add(currentOwner);\n      return null;\n    }\n\n    return factory();\n  }, deps);\n}\n", "import { makeStyles } from '@griffel/react';\nexport const usePortalMountNodeStylesStyles = makeStyles({\n    root: {\n        // Creates new stacking context to prevent z-index issues\n        // https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_positioned_layout/Understanding_z-index/Stacking_context\n        //\n        // Also keeps a portal on top of a page to prevent scrollbars from appearing\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        zIndex: 1000000\n    }\n});\n", "import * as ReactDOM from 'react-dom';\nimport * as React from 'react';\n/**\n * Render the final JSX of Portal\n */ export const renderPortal_unstable = (state)=>{\n    return /*#__PURE__*/ React.createElement(\"span\", {\n        hidden: true,\n        ref: state.virtualParentRootRef\n    }, state.mountNode && /*#__PURE__*/ ReactDOM.createPortal(state.children, state.mountNode));\n};\n", "import * as React from 'react';\nimport { usePortal_unstable } from './usePortal';\nimport { renderPortal_unstable } from './renderPortal';\n/**\n * A portal provides a way to render children into a DOM node\n * that exists outside the DOM hierarchy of the parent component.\n */ export const Portal = (props)=>{\n    const state = usePortal_unstable(props);\n    return renderPortal_unstable(state);\n};\nPortal.displayName = 'Portal';\n", "import * as React from 'react';\n", "import * as React from 'react';\nconst FieldContext = React.createContext(undefined);\nexport const FieldContextProvider = FieldContext.Provider;\nexport const useFieldContext_unstable = ()=>React.useContext(FieldContext);\n", "import * as React from 'react';\n/**\n * Get the context values used when rendering Field.\n */ export const useFieldContextValues_unstable = (state)=>{\n    var _state_label, _state_label1, _state_validationMessage, _state_hint;\n    const { generatedControlId, orientation, required, size, validationState } = state;\n    const labelFor = (_state_label = state.label) === null || _state_label === void 0 ? void 0 : _state_label.htmlFor;\n    const labelId = (_state_label1 = state.label) === null || _state_label1 === void 0 ? void 0 : _state_label1.id;\n    const validationMessageId = (_state_validationMessage = state.validationMessage) === null || _state_validationMessage === void 0 ? void 0 : _state_validationMessage.id;\n    const hintId = (_state_hint = state.hint) === null || _state_hint === void 0 ? void 0 : _state_hint.id;\n    const field = React.useMemo(()=>({\n            generatedControlId,\n            hintId,\n            labelFor,\n            labelId,\n            orientation,\n            required,\n            size,\n            validationMessageId,\n            validationState\n        }), [\n        generatedControlId,\n        hintId,\n        labelFor,\n        labelId,\n        orientation,\n        required,\n        size,\n        validationMessageId,\n        validationState\n    ]);\n    return {\n        field\n    };\n};\n", "import { useFieldContext_unstable } from './FieldContext';\nexport function useFieldControlProps_unstable(props, options) {\n    return getFieldControlProps(useFieldContext_unstable(), props, options);\n}\n/**\n * @internal\n * Implementation of useFieldControlProps_unstable.\n * Split out so it can be used directly in renderField_unstable.\n */ export function getFieldControlProps(context, props, options) {\n    if (!context) {\n        return props;\n    }\n    // Create a copy of props so we don't modify the original\n    props = {\n        ...props\n    };\n    const { generatedControlId, hintId, labelFor, labelId, required, validationMessageId, validationState } = context;\n    if (generatedControlId) {\n        var _props;\n        var _id;\n        (_id = (_props = props).id) !== null && _id !== void 0 ? _id : _props.id = generatedControlId;\n    }\n    // Set aria-labelledby if the control doesn't support label.htmlFor, or if the label's htmlFor doesn't refer\n    // to this control (i.e. the user set this control's id prop without also setting the Field's label.htmlFor).\n    if (labelId && (!(options === null || options === void 0 ? void 0 : options.supportsLabelFor) || labelFor !== props.id)) {\n        var _props1, _arialabelledby;\n        var _;\n        (_ = (_props1 = props)[_arialabelledby = 'aria-labelledby']) !== null && _ !== void 0 ? _ : _props1[_arialabelledby] = labelId;\n    }\n    // The control is described by the validation message, or hint, or both.\n    // We also preserve and append any aria-describedby from props.\n    // For reference: https://github.com/microsoft/fluentui/pull/25580#discussion_r1017259933\n    if (validationMessageId || hintId) {\n        // NOTE: Not using ??= since we're merging and overriding the user-provided value.\n        props['aria-describedby'] = [\n            validationMessageId,\n            hintId,\n            props === null || props === void 0 ? void 0 : props['aria-describedby']\n        ].filter(Boolean).join(' ');\n    }\n    if (validationState === 'error') {\n        var _props2, _ariainvalid;\n        var _1;\n        (_1 = (_props2 = props)[_ariainvalid = 'aria-invalid']) !== null && _1 !== void 0 ? _1 : _props2[_ariainvalid] = true;\n    }\n    if (required) {\n        if (options === null || options === void 0 ? void 0 : options.supportsRequired) {\n            var _props3;\n            var _required;\n            (_required = (_props3 = props).required) !== null && _required !== void 0 ? _required : _props3.required = true;\n        } else {\n            var _props4, _ariarequired;\n            var _2;\n            (_2 = (_props4 = props)[_ariarequired = 'aria-required']) !== null && _2 !== void 0 ? _2 : _props4[_ariarequired] = true;\n        }\n    }\n    // Include the size prop if this control supports it\n    if (options === null || options === void 0 ? void 0 : options.supportsSize) {\n        var _props5;\n        var _size;\n        (_size = (_props5 = props).size) !== null && _size !== void 0 ? _size : _props5.size = context.size;\n    }\n    return props;\n}\n", "import { isSlot } from '@fluentui/react-utilities';\nimport * as React from 'react';\nimport { createCompatSlotComponent } from '../utils/createCompatSlotComponent';\nimport { warnIfElementTypeIsInvalid } from '../utils/warnIfElementTypeIsInvalid';\nexport function createJSX(runtime, slotRuntime) {\n    return function jsx(type, overrideProps, key, source, self) {\n        // TODO:\n        // this is for backwards compatibility with getSlotsNext\n        // it should be removed once getSlotsNext is obsolete\n        if (isSlot(overrideProps)) {\n            return slotRuntime(createCompatSlotComponent(type, overrideProps), null, key, source, self);\n        }\n        if (isSlot(type)) {\n            return slotRuntime(type, overrideProps, key, source, self);\n        }\n        warnIfElementTypeIsInvalid(type);\n        return runtime(type, overrideProps, key, source, self);\n    };\n}\n", "import * as React from 'react';\nimport { SLOT_ELEMENT_TYPE_SYMBOL } from '@fluentui/react-utilities';\n// TODO:\n// this is for backwards compatibility with getSlotsNext\n// it should be removed once getSlotsNext is obsolete\nexport function createCompatSlotComponent(type, props) {\n    return {\n        ...props,\n        [SLOT_ELEMENT_TYPE_SYMBOL]: type\n    };\n}\n", "import * as React from 'react';\nimport { isValidElementType } from 'react-is';\nexport function warnIfElementTypeIsInvalid(type) {\n    if (process.env.NODE_ENV === 'development' && typeof type === 'object' && !isValidElementType(type)) {\n        // eslint-disable-next-line no-console\n        console.error(`@fluentui/react-jsx-runtime:\nElement type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: ${type}.\n\nIf this happened in a slot of Fluent UI component, you might be facing package resolution issues.\nPlease make sure you don't have multiple versions of \"@fluentui/react-utilities\" installed in your dependencies or sub-dependencies.\nYou can check this by searching up for matching entries in a lockfile produced by your package manager (yarn.lock, pnpm-lock.yaml or package-lock.json).`);\n    }\n}\n", "import * as React from 'react';\nimport { getMetadataFromSlotComponent } from '../utils/getMetadataFromSlotComponent';\nimport { Runtime } from '../utils/Runtime';\nexport const jsxSlot = (type, overrideProps, key)=>{\n    const { elementType, renderFunction, props: slotProps } = getMetadataFromSlotComponent(type);\n    const props = {\n        ...slotProps,\n        ...overrideProps\n    };\n    if (renderFunction) {\n        return Runtime.jsx(React.Fragment, {\n            children: renderFunction(elementType, props)\n        }, key);\n    }\n    return Runtime.jsx(elementType, props, key);\n};\n", "import { SLOT_ELEMENT_TYPE_SYMBOL, SLOT_RENDER_FUNCTION_SYMBOL } from '@fluentui/react-utilities';\n/**\n * @internal\n */ export function getMetadataFromSlotComponent(type) {\n    const { as, [SLOT_ELEMENT_TYPE_SYMBOL]: baseElementType, [SLOT_RENDER_FUNCTION_SYMBOL]: renderFunction, ...propsWithoutMetadata } = type;\n    const props = propsWithoutMetadata;\n    const elementType = typeof baseElementType === 'string' ? as !== null && as !== void 0 ? as : baseElementType : baseElementType;\n    if (typeof elementType !== 'string' && as) {\n        props.as = as;\n    }\n    return {\n        elementType,\n        props,\n        renderFunction\n    };\n}\n", "import * as ReactRuntime from 'react/jsx-runtime';\nexport const Runtime = ReactRuntime;\n", "import * as React from 'react';\nimport { getMetadataFromSlotComponent } from '../utils/getMetadataFromSlotComponent';\nimport { Runtime } from '../utils/Runtime';\nexport const jsxsSlot = (type, overrideProps, key)=>{\n    const { elementType, renderFunction, props: slotProps } = getMetadataFromSlotComponent(type);\n    const props = {\n        ...slotProps,\n        ...overrideProps\n    };\n    if (renderFunction) {\n        /**\n     * In static runtime then children is an array and this array won't be keyed.\n     * We should wrap children by a static fragment\n     * as there's no way to know if renderFunction will render statically or dynamically\n     */ return Runtime.jsx(React.Fragment, {\n            children: renderFunction(elementType, {\n                ...props,\n                children: Runtime.jsxs(React.Fragment, {\n                    children: props.children\n                }, undefined)\n            })\n        }, key);\n    }\n    return Runtime.jsxs(elementType, props, key);\n};\n", "import { createJSX } from './jsx/createJSX';\nimport { jsxSlot } from './jsx/jsxSlot';\nimport { jsxsSlot } from './jsx/jsxsSlot';\nimport { Runtime } from './utils/Runtime';\nexport { Fragment } from 'react';\nexport const jsx = createJSX(Runtime.jsx, jsxSlot);\nexport const jsxs = createJSX(Runtime.jsxs, jsxsSlot);\n", "  import { jsx as _jsx, jsxs as _jsxs } from \"@fluentui/react-jsx-runtime/jsx-runtime\";\nimport { assertSlots } from '@fluentui/react-utilities';\nimport { FieldContextProvider, getFieldControlProps } from '../../contexts/index';\n/**\n * Render the final JSX of Field\n */ export const renderField_unstable = (state, contextValues)=>{\n    assertSlots(state);\n    let { children } = state;\n    if (typeof children === 'function') {\n        children = children(getFieldControlProps(contextValues.field) || {});\n    }\n    return /*#__PURE__*/ _jsx(FieldContextProvider, {\n        value: contextValues === null || contextValues === void 0 ? void 0 : contextValues.field,\n        children: /*#__PURE__*/ _jsxs(state.root, {\n            children: [\n                state.label && /*#__PURE__*/ _jsx(state.label, {}),\n                children,\n                state.validationMessage && /*#__PURE__*/ _jsxs(state.validationMessage, {\n                    children: [\n                        state.validationMessageIcon && /*#__PURE__*/ _jsx(state.validationMessageIcon, {}),\n                        state.validationMessage.children\n                    ]\n                }),\n                state.hint && /*#__PURE__*/ _jsx(state.hint, {})\n            ]\n        })\n    });\n};\n", "import * as React from 'react';\nimport { getIntrinsicElementProps, slot } from '@fluentui/react-utilities';\n/**\n * Create the state required to render Label.\n *\n * The returned state can be modified with hooks such as useLabelStyles_unstable,\n * before being passed to renderLabel_unstable.\n *\n * @param props - props from this instance of Label\n * @param ref - reference to root HTMLElement of Label\n */ export const useLabel_unstable = (props, ref)=>{\n    const { disabled = false, required = false, weight = 'regular', size = 'medium' } = props;\n    return {\n        disabled,\n        required: slot.optional(required === true ? '*' : required || undefined, {\n            defaultProps: {\n                'aria-hidden': 'true'\n            },\n            elementType: 'span'\n        }),\n        weight,\n        size,\n        components: {\n            root: 'label',\n            required: 'span'\n        },\n        root: slot.always(getIntrinsicElementProps('label', {\n            // FIXME:\n            // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLLabelElement`\n            // but since it would be a breaking change to fix it, we are casting ref to it's proper type\n            ref: ref,\n            ...props\n        }), {\n            elementType: 'label'\n        })\n    };\n};\n", "  import { jsx as _jsx, jsxs as _jsxs } from \"@fluentui/react-jsx-runtime/jsx-runtime\";\nimport { assertSlots } from '@fluentui/react-utilities';\n/**\n * Render the final JSX of Label\n */ export const renderLabel_unstable = (state)=>{\n    assertSlots(state);\n    return /*#__PURE__*/ _jsxs(state.root, {\n        children: [\n            state.root.children,\n            state.required && /*#__PURE__*/ _jsx(state.required, {})\n        ]\n    });\n};\n", "import { makeStyles, mergeClasses } from '@griffel/react';\nimport { tokens } from '@fluentui/react-theme';\nexport const labelClassNames = {\n    root: 'fui-Label',\n    required: 'fui-Label__required'\n};\n/**\n * Styles for the label\n */ const useStyles = makeStyles({\n    root: {\n        fontFamily: tokens.fontFamilyBase,\n        color: tokens.colorNeutralForeground1\n    },\n    disabled: {\n        color: tokens.colorNeutralForegroundDisabled,\n        '@media (forced-colors: active)': {\n            color: 'GrayText'\n        }\n    },\n    required: {\n        color: tokens.colorPaletteRedForeground3,\n        paddingLeft: tokens.spacingHorizontalXS\n    },\n    small: {\n        fontSize: tokens.fontSizeBase200,\n        lineHeight: tokens.lineHeightBase200\n    },\n    medium: {\n        fontSize: tokens.fontSizeBase300,\n        lineHeight: tokens.lineHeightBase300\n    },\n    large: {\n        fontSize: tokens.fontSizeBase400,\n        lineHeight: tokens.lineHeightBase400,\n        fontWeight: tokens.fontWeightSemibold\n    },\n    semibold: {\n        fontWeight: tokens.fontWeightSemibold\n    }\n});\n/**\n * Apply styling to the Label slots based on the state\n */ export const useLabelStyles_unstable = (state)=>{\n    'use no memo';\n    const styles = useStyles();\n    state.root.className = mergeClasses(labelClassNames.root, styles.root, state.disabled && styles.disabled, styles[state.size], state.weight === 'semibold' && styles.semibold, state.root.className);\n    if (state.required) {\n        state.required.className = mergeClasses(labelClassNames.required, styles.required, state.disabled && styles.disabled, state.required.className);\n    }\n    return state;\n};\n", "import * as React from 'react';\nimport { useLabel_unstable } from './useLabel';\nimport { renderLabel_unstable } from './renderLabel';\nimport { useLabelStyles_unstable } from './useLabelStyles.styles';\nimport { useCustomStyleHook_unstable } from '@fluentui/react-shared-contexts';\n/**\n * A label component provides a title or name to a component.\n */ export const Label = /*#__PURE__*/ React.forwardRef((props, ref)=>{\n    const state = useLabel_unstable(props, ref);\n    useLabelStyles_unstable(state);\n    useCustomStyleHook_unstable('useLabelStyles_unstable')(state);\n    return renderLabel_unstable(state);\n});\nLabel.displayName = 'Label';\n", "import * as React from 'react';\nimport { CheckmarkCircle12Filled, ErrorCircle12Filled, Warning12Filled } from '@fluentui/react-icons';\nimport { Label } from '@fluentui/react-label';\nimport { getIntrinsicElementProps, useId, slot } from '@fluentui/react-utilities';\nconst validationMessageIcons = {\n    error: /*#__PURE__*/ React.createElement(ErrorCircle12Filled, null),\n    warning: /*#__PURE__*/ React.createElement(Warning12Filled, null),\n    success: /*#__PURE__*/ React.createElement(CheckmarkCircle12Filled, null),\n    none: undefined\n};\n/**\n * Create the state required to render Field.\n *\n * The returned state can be modified with hooks such as useFieldStyles_unstable,\n * before being passed to renderField_unstable.\n *\n * @param props - Props passed to this field\n * @param ref - Ref to the root\n */ export const useField_unstable = (props, ref)=>{\n    const { children, orientation = 'vertical', required = false, validationState = props.validationMessage ? 'error' : 'none', size = 'medium' } = props;\n    const baseId = useId('field-');\n    const generatedControlId = baseId + '__control';\n    const root = slot.always(getIntrinsicElementProps('div', {\n        ...props,\n        ref\n    }, /*excludedPropNames:*/ [\n        'children'\n    ]), {\n        elementType: 'div'\n    });\n    const label = slot.optional(props.label, {\n        defaultProps: {\n            htmlFor: generatedControlId,\n            id: baseId + '__label',\n            required,\n            size\n        },\n        elementType: Label\n    });\n    const validationMessage = slot.optional(props.validationMessage, {\n        defaultProps: {\n            id: baseId + '__validationMessage',\n            role: validationState === 'error' ? 'alert' : undefined\n        },\n        elementType: 'div'\n    });\n    const hint = slot.optional(props.hint, {\n        defaultProps: {\n            id: baseId + '__hint'\n        },\n        elementType: 'div'\n    });\n    const defaultIcon = validationMessageIcons[validationState];\n    const validationMessageIcon = slot.optional(props.validationMessageIcon, {\n        renderByDefault: !!defaultIcon,\n        defaultProps: {\n            children: defaultIcon\n        },\n        elementType: 'span'\n    });\n    return {\n        children,\n        generatedControlId,\n        orientation,\n        required,\n        size,\n        validationState,\n        components: {\n            root: 'div',\n            label: Label,\n            validationMessage: 'div',\n            validationMessageIcon: 'span',\n            hint: 'div'\n        },\n        root,\n        label,\n        validationMessageIcon,\n        validationMessage,\n        hint\n    };\n};\n", "import { tokens, typographyStyles } from '@fluentui/react-theme';\nimport { makeResetStyles, makeStyles, mergeClasses } from '@griffel/react';\nexport const fieldClassNames = {\n    root: `fui-Field`,\n    label: `fui-Field__label`,\n    validationMessage: `fui-Field__validationMessage`,\n    validationMessageIcon: `fui-Field__validationMessageIcon`,\n    hint: `fui-Field__hint`\n};\n// Size of the icon in the validation message\nconst iconSize = '12px';\n/**\n * Styles for the root slot\n */ const useRootStyles = makeStyles({\n    base: {\n        display: 'grid'\n    },\n    // In horizontal layout, the field is a grid with the label taking up the entire first column.\n    // The last row is slack space in case the label is taller than the rest of the content.\n    horizontal: {\n        gridTemplateColumns: '33% 1fr',\n        gridTemplateRows: 'auto auto auto 1fr'\n    },\n    // In horizontal layout without a label, replace the label's column with padding.\n    // This lets grid auto-flow properly place the other children, and keeps fields with and without labels aligned.\n    horizontalNoLabel: {\n        paddingLeft: '33%',\n        gridTemplateColumns: '1fr'\n    }\n});\nconst useLabelStyles = makeStyles({\n    vertical: {\n        paddingTop: tokens.spacingVerticalXXS,\n        paddingBottom: tokens.spacingVerticalXXS,\n        marginBottom: tokens.spacingVerticalXXS\n    },\n    verticalLarge: {\n        paddingTop: '1px',\n        paddingBottom: '1px',\n        marginBottom: tokens.spacingVerticalXS\n    },\n    horizontal: {\n        paddingTop: tokens.spacingVerticalSNudge,\n        paddingBottom: tokens.spacingVerticalSNudge,\n        marginRight: tokens.spacingHorizontalM,\n        gridRowStart: '1',\n        gridRowEnd: '-1'\n    },\n    horizontalSmall: {\n        paddingTop: tokens.spacingVerticalXS,\n        paddingBottom: tokens.spacingVerticalXS\n    },\n    horizontalLarge: {\n        // To align the label text with the Input text, it should be centered within the 40px height of the Input.\n        // This is (40px - lineHeightBase400) / 2 = 9px. Hardcoded since there is no 9px padding token.\n        paddingTop: '9px',\n        paddingBottom: '9px'\n    }\n});\nconst useSecondaryTextBaseClassName = makeResetStyles({\n    marginTop: tokens.spacingVerticalXXS,\n    color: tokens.colorNeutralForeground3,\n    ...typographyStyles.caption1\n});\nconst useSecondaryTextStyles = makeStyles({\n    error: {\n        color: tokens.colorPaletteRedForeground1\n    },\n    withIcon: {\n        // Add a gutter for the icon, to allow multiple lines of text to line up to the right of the icon.\n        paddingLeft: `calc(${iconSize} + ${tokens.spacingHorizontalXS})`\n    }\n});\nconst useValidationMessageIconBaseClassName = makeResetStyles({\n    display: 'inline-block',\n    fontSize: iconSize,\n    // Negative left margin puts the icon in the gutter of the validation message div's withIcon style.\n    marginLeft: `calc(-${iconSize} - ${tokens.spacingHorizontalXS})`,\n    marginRight: tokens.spacingHorizontalXS,\n    // Line height of 0 prevents the verticalAlign from affecting the line height of the text.\n    lineHeight: '0',\n    // Negative verticalAlign shifts the inline icon down to align with the text (effectively top padding).\n    verticalAlign: '-1px'\n});\nconst useValidationMessageIconStyles = makeStyles({\n    error: {\n        color: tokens.colorPaletteRedForeground1\n    },\n    warning: {\n        color: tokens.colorPaletteDarkOrangeForeground1\n    },\n    success: {\n        color: tokens.colorPaletteGreenForeground1\n    }\n});\n/**\n * Apply styling to the Field slots based on the state\n */ export const useFieldStyles_unstable = (state)=>{\n    'use no memo';\n    const { validationState, size } = state;\n    const horizontal = state.orientation === 'horizontal';\n    const rootStyles = useRootStyles();\n    state.root.className = mergeClasses(fieldClassNames.root, rootStyles.base, horizontal && rootStyles.horizontal, horizontal && !state.label && rootStyles.horizontalNoLabel, state.root.className);\n    const labelStyles = useLabelStyles();\n    if (state.label) {\n        state.label.className = mergeClasses(fieldClassNames.label, horizontal && labelStyles.horizontal, horizontal && size === 'small' && labelStyles.horizontalSmall, horizontal && size === 'large' && labelStyles.horizontalLarge, !horizontal && labelStyles.vertical, !horizontal && size === 'large' && labelStyles.verticalLarge, state.label.className);\n    }\n    const validationMessageIconBaseClassName = useValidationMessageIconBaseClassName();\n    const validationMessageIconStyles = useValidationMessageIconStyles();\n    if (state.validationMessageIcon) {\n        state.validationMessageIcon.className = mergeClasses(fieldClassNames.validationMessageIcon, validationMessageIconBaseClassName, validationState !== 'none' && validationMessageIconStyles[validationState], state.validationMessageIcon.className);\n    }\n    const secondaryTextBaseClassName = useSecondaryTextBaseClassName();\n    const secondaryTextStyles = useSecondaryTextStyles();\n    if (state.validationMessage) {\n        state.validationMessage.className = mergeClasses(fieldClassNames.validationMessage, secondaryTextBaseClassName, validationState === 'error' && secondaryTextStyles.error, !!state.validationMessageIcon && secondaryTextStyles.withIcon, state.validationMessage.className);\n    }\n    if (state.hint) {\n        state.hint.className = mergeClasses(fieldClassNames.hint, secondaryTextBaseClassName, state.hint.className);\n    }\n    return state;\n};\n", "import * as React from 'react';\nimport { renderField_unstable } from './renderField';\nimport { useField_unstable } from './useField';\nimport { useFieldStyles_unstable } from './useFieldStyles.styles';\nimport { useFieldContextValues_unstable } from '../../contexts/index';\nexport const Field = /*#__PURE__*/ React.forwardRef((props, ref)=>{\n    const state = useField_unstable(props, ref);\n    useFieldStyles_unstable(state);\n    const context = useFieldContextValues_unstable(state);\n    return renderField_unstable(state, context);\n});\nField.displayName = 'Field';\n", "import * as React from 'react';\n", "import * as React from 'react';\nimport { useFieldControlProps_unstable } from '@fluentui/react-field';\nimport { getPartitionedNativeProps, useControllableState, useEventCallback, slot } from '@fluentui/react-utilities';\nimport { useOverrides_unstable as useOverrides } from '@fluentui/react-shared-contexts';\n/**\n * Create the state required to render Input.\n *\n * The returned state can be modified with hooks such as useInputStyles_unstable,\n * before being passed to renderInput_unstable.\n *\n * @param props - props from this instance of Input\n * @param ref - reference to `<input>` element of Input\n */ export const useInput_unstable = (props, ref)=>{\n    props = useFieldControlProps_unstable(props, {\n        supportsLabelFor: true,\n        supportsRequired: true,\n        supportsSize: true\n    });\n    const overrides = useOverrides();\n    var _overrides_inputDefaultAppearance;\n    const { size = 'medium', appearance = (_overrides_inputDefaultAppearance = overrides.inputDefaultAppearance) !== null && _overrides_inputDefaultAppearance !== void 0 ? _overrides_inputDefaultAppearance : 'outline', onChange } = props;\n    if (process.env.NODE_ENV !== 'production' && (appearance === 'filled-darker-shadow' || appearance === 'filled-lighter-shadow')) {\n        // eslint-disable-next-line no-console\n        console.error(\"The 'filled-darker-shadow' and 'filled-lighter-shadow' appearances are deprecated and will be removed in the\" + ' future.');\n    }\n    const [value, setValue] = useControllableState({\n        state: props.value,\n        defaultState: props.defaultValue,\n        initialState: ''\n    });\n    const nativeProps = getPartitionedNativeProps({\n        props,\n        primarySlotTagName: 'input',\n        excludedPropNames: [\n            'size',\n            'onChange',\n            'value',\n            'defaultValue'\n        ]\n    });\n    const state = {\n        size,\n        appearance,\n        components: {\n            root: 'span',\n            input: 'input',\n            contentBefore: 'span',\n            contentAfter: 'span'\n        },\n        input: slot.always(props.input, {\n            defaultProps: {\n                type: 'text',\n                ref,\n                ...nativeProps.primary\n            },\n            elementType: 'input'\n        }),\n        contentAfter: slot.optional(props.contentAfter, {\n            elementType: 'span'\n        }),\n        contentBefore: slot.optional(props.contentBefore, {\n            elementType: 'span'\n        }),\n        root: slot.always(props.root, {\n            defaultProps: nativeProps.root,\n            elementType: 'span'\n        })\n    };\n    state.input.value = value;\n    state.input.onChange = useEventCallback((ev)=>{\n        const newValue = ev.target.value;\n        onChange === null || onChange === void 0 ? void 0 : onChange(ev, {\n            value: newValue\n        });\n        setValue(newValue);\n    });\n    return state;\n};\n", "  import { jsx as _jsx, jsxs as _jsxs } from \"@fluentui/react-jsx-runtime/jsx-runtime\";\nimport { assertSlots } from '@fluentui/react-utilities';\n/**\n * Render the final JSX of Input\n */ export const renderInput_unstable = (state)=>{\n    assertSlots(state);\n    return /*#__PURE__*/ _jsxs(state.root, {\n        children: [\n            state.contentBefore && /*#__PURE__*/ _jsx(state.contentBefore, {}),\n            /*#__PURE__*/ _jsx(state.input, {}),\n            state.contentAfter && /*#__PURE__*/ _jsx(state.contentAfter, {})\n        ]\n    });\n};\n", "import { tokens, typographyStyles } from '@fluentui/react-theme';\nimport { makeResetStyles, makeStyles, mergeClasses, shorthands } from '@griffel/react';\nexport const inputClassNames = {\n    root: 'fui-Input',\n    input: 'fui-Input__input',\n    contentBefore: 'fui-Input__contentBefore',\n    contentAfter: 'fui-Input__contentAfter'\n};\n// TODO(sharing) should these be shared somewhere?\nconst fieldHeights = {\n    small: '24px',\n    medium: '32px',\n    large: '40px'\n};\n// With no contentBefore or contentAfter, the input slot uses combined padding to increase its hit target.\n// If there is contentBefore or contentAfter, then the root and input slots use their individual padding.\nconst horizontalPadding = {\n    root: {\n        small: tokens.spacingHorizontalSNudge,\n        medium: tokens.spacingHorizontalMNudge,\n        large: tokens.spacingHorizontalM\n    },\n    input: {\n        small: tokens.spacingHorizontalXXS,\n        medium: tokens.spacingHorizontalXXS,\n        large: tokens.spacingHorizontalSNudge\n    },\n    combined: {\n        small: tokens.spacingHorizontalS,\n        medium: tokens.spacingHorizontalM,\n        large: `calc(${tokens.spacingHorizontalM} + ${tokens.spacingHorizontalSNudge})`\n    }\n};\nconst useRootClassName = makeResetStyles({\n    display: 'inline-flex',\n    alignItems: 'center',\n    flexWrap: 'nowrap',\n    gap: tokens.spacingHorizontalXXS,\n    borderRadius: tokens.borderRadiusMedium,\n    position: 'relative',\n    boxSizing: 'border-box',\n    verticalAlign: 'middle',\n    // size: medium (default)\n    minHeight: fieldHeights.medium,\n    ...typographyStyles.body1,\n    // appearance: outline (default)\n    backgroundColor: tokens.colorNeutralBackground1,\n    border: `1px solid ${tokens.colorNeutralStroke1}`,\n    borderBottomColor: tokens.colorNeutralStrokeAccessible,\n    // This is all for the bottom focus border.\n    // It's supposed to be 2px flat all the way across and match the radius of the field's corners.\n    '::after': {\n        boxSizing: 'border-box',\n        content: '\"\"',\n        position: 'absolute',\n        left: '-1px',\n        bottom: '-1px',\n        right: '-1px',\n        // Maintaining the correct corner radius:\n        // Use the whole border-radius as the height and only put radii on the bottom corners.\n        // (Otherwise the radius would be automatically reduced to fit available space.)\n        // max() ensures the focus border still shows up even if someone sets tokens.borderRadiusMedium to 0.\n        height: `max(2px, ${tokens.borderRadiusMedium})`,\n        borderBottomLeftRadius: tokens.borderRadiusMedium,\n        borderBottomRightRadius: tokens.borderRadiusMedium,\n        // Flat 2px border:\n        // By default borderBottom will cause little \"horns\" on the ends. The clipPath trims them off.\n        // (This could be done without trimming using `background: linear-gradient(...)`, but using\n        // borderBottom makes it easier for people to override the color if needed.)\n        borderBottom: `2px solid ${tokens.colorCompoundBrandStroke}`,\n        clipPath: 'inset(calc(100% - 2px) 0 0 0)',\n        // Animation for focus OUT\n        transform: 'scaleX(0)',\n        transitionProperty: 'transform',\n        transitionDuration: tokens.durationUltraFast,\n        transitionDelay: tokens.curveAccelerateMid,\n        '@media screen and (prefers-reduced-motion: reduce)': {\n            transitionDuration: '0.01ms',\n            transitionDelay: '0.01ms'\n        }\n    },\n    ':focus-within::after': {\n        // Animation for focus IN\n        transform: 'scaleX(1)',\n        transitionProperty: 'transform',\n        transitionDuration: tokens.durationNormal,\n        transitionDelay: tokens.curveDecelerateMid,\n        '@media screen and (prefers-reduced-motion: reduce)': {\n            transitionDuration: '0.01ms',\n            transitionDelay: '0.01ms'\n        }\n    },\n    ':focus-within:active::after': {\n        // This is if the user clicks the field again while it's already focused\n        borderBottomColor: tokens.colorCompoundBrandStrokePressed\n    },\n    ':focus-within': {\n        outline: '2px solid transparent'\n    }\n});\nconst useRootStyles = makeStyles({\n    small: {\n        minHeight: fieldHeights.small,\n        ...typographyStyles.caption1\n    },\n    medium: {\n    },\n    large: {\n        minHeight: fieldHeights.large,\n        ...typographyStyles.body2,\n        gap: tokens.spacingHorizontalSNudge\n    },\n    outline: {\n    },\n    outlineInteractive: {\n        ':hover': {\n            ...shorthands.borderColor(tokens.colorNeutralStroke1Hover),\n            borderBottomColor: tokens.colorNeutralStrokeAccessibleHover\n        },\n        // DO NOT add a space between the selectors! It changes the behavior of make-styles.\n        ':active,:focus-within': {\n            ...shorthands.borderColor(tokens.colorNeutralStroke1Pressed),\n            borderBottomColor: tokens.colorNeutralStrokeAccessiblePressed\n        }\n    },\n    underline: {\n        backgroundColor: tokens.colorTransparentBackground,\n        borderRadius: '0',\n        // border is specified in rootBaseStyles, but we only want a bottom border here\n        borderTopStyle: 'none',\n        borderRightStyle: 'none',\n        borderLeftStyle: 'none',\n        // Make the focus underline (::after) match the width of the bottom border\n        '::after': {\n            left: 0,\n            right: 0\n        }\n    },\n    underlineInteractive: {\n        ':hover': {\n            borderBottomColor: tokens.colorNeutralStrokeAccessibleHover\n        },\n        // DO NOT add a space between the selectors! It changes the behavior of make-styles.\n        ':active,:focus-within': {\n            borderBottomColor: tokens.colorNeutralStrokeAccessiblePressed\n        },\n        '::after': {\n            // remove rounded corners from focus underline\n            borderRadius: '0'\n        }\n    },\n    filled: {\n        ...shorthands.borderColor(tokens.colorTransparentStroke)\n    },\n    filledInteractive: {\n        // DO NOT add a space between the selectors! It changes the behavior of make-styles.\n        ':hover,:focus-within': {\n            // also handles pressed border color (:active)\n            ...shorthands.borderColor(tokens.colorTransparentStrokeInteractive)\n        }\n    },\n    invalid: {\n        ':not(:focus-within),:hover:not(:focus-within)': {\n            ...shorthands.borderColor(tokens.colorPaletteRedBorder2)\n        }\n    },\n    'filled-darker': {\n        backgroundColor: tokens.colorNeutralBackground3\n    },\n    'filled-lighter': {\n        backgroundColor: tokens.colorNeutralBackground1\n    },\n    // This shadow appearance is deprecated and will be removed in a future release.\n    'filled-darker-shadow': {\n        backgroundColor: tokens.colorNeutralBackground3,\n        boxShadow: tokens.shadow2\n    },\n    // This shadow appearance is deprecated and will be removed in a future release.\n    'filled-lighter-shadow': {\n        backgroundColor: tokens.colorNeutralBackground1,\n        boxShadow: tokens.shadow2\n    },\n    disabled: {\n        cursor: 'not-allowed',\n        backgroundColor: tokens.colorTransparentBackground,\n        ...shorthands.borderColor(tokens.colorNeutralStrokeDisabled),\n        '@media (forced-colors: active)': {\n            ...shorthands.borderColor('GrayText')\n        },\n        // remove the focus border\n        '::after': {\n            content: 'unset'\n        },\n        // remove the focus outline\n        ':focus-within': {\n            outlineStyle: 'none'\n        }\n    },\n    smallWithContentBefore: {\n        paddingLeft: horizontalPadding.root.small\n    },\n    smallWithContentAfter: {\n        paddingRight: horizontalPadding.root.small\n    },\n    mediumWithContentBefore: {\n        paddingLeft: horizontalPadding.root.medium\n    },\n    mediumWithContentAfter: {\n        paddingRight: horizontalPadding.root.medium\n    },\n    largeWithContentBefore: {\n        paddingLeft: horizontalPadding.root.large\n    },\n    largeWithContentAfter: {\n        paddingRight: horizontalPadding.root.large\n    }\n});\nconst useInputClassName = makeResetStyles({\n    alignSelf: 'stretch',\n    boxSizing: 'border-box',\n    flexGrow: 1,\n    minWidth: 0,\n    borderStyle: 'none',\n    padding: `0 ${horizontalPadding.combined.medium}`,\n    color: tokens.colorNeutralForeground1,\n    // Use literal \"transparent\" (not from the theme) to always let the color from the root show through\n    backgroundColor: 'transparent',\n    '::placeholder': {\n        color: tokens.colorNeutralForeground4,\n        opacity: 1\n    },\n    outlineStyle: 'none',\n    // Inherit typography styles from root\n    fontFamily: 'inherit',\n    fontSize: 'inherit',\n    fontWeight: 'inherit',\n    lineHeight: 'inherit'\n});\nconst useInputElementStyles = makeStyles({\n    small: {\n        paddingLeft: horizontalPadding.combined.small,\n        paddingRight: horizontalPadding.combined.small\n    },\n    medium: {\n    },\n    large: {\n        paddingLeft: horizontalPadding.combined.large,\n        paddingRight: horizontalPadding.combined.large\n    },\n    smallWithContentBefore: {\n        paddingLeft: horizontalPadding.input.small\n    },\n    smallWithContentAfter: {\n        paddingRight: horizontalPadding.input.small\n    },\n    mediumWithContentBefore: {\n        paddingLeft: horizontalPadding.input.medium\n    },\n    mediumWithContentAfter: {\n        paddingRight: horizontalPadding.input.medium\n    },\n    largeWithContentBefore: {\n        paddingLeft: horizontalPadding.input.large\n    },\n    largeWithContentAfter: {\n        paddingRight: horizontalPadding.input.large\n    },\n    disabled: {\n        color: tokens.colorNeutralForegroundDisabled,\n        backgroundColor: tokens.colorTransparentBackground,\n        cursor: 'not-allowed',\n        '::placeholder': {\n            color: tokens.colorNeutralForegroundDisabled\n        }\n    }\n});\nconst useContentClassName = makeResetStyles({\n    boxSizing: 'border-box',\n    color: tokens.colorNeutralForeground3,\n    display: 'flex',\n    // special case styling for icons (most common case) to ensure they're centered vertically\n    // size: medium (default)\n    '> svg': {\n        fontSize: '20px'\n    }\n});\nconst useContentStyles = makeStyles({\n    disabled: {\n        color: tokens.colorNeutralForegroundDisabled\n    },\n    // Ensure resizable icons show up with the proper font size\n    small: {\n        '> svg': {\n            fontSize: '16px'\n        }\n    },\n    medium: {\n    },\n    large: {\n        '> svg': {\n            fontSize: '24px'\n        }\n    }\n});\n/**\n * Apply styling to the Input slots based on the state\n */ export const useInputStyles_unstable = (state)=>{\n    'use no memo';\n    const { size, appearance } = state;\n    const disabled = state.input.disabled;\n    const invalid = `${state.input['aria-invalid']}` === 'true';\n    const filled = appearance.startsWith('filled');\n    const rootStyles = useRootStyles();\n    const inputStyles = useInputElementStyles();\n    const contentStyles = useContentStyles();\n    state.root.className = mergeClasses(inputClassNames.root, useRootClassName(), rootStyles[size], state.contentBefore && rootStyles[`${size}WithContentBefore`], state.contentAfter && rootStyles[`${size}WithContentAfter`], rootStyles[appearance], !disabled && appearance === 'outline' && rootStyles.outlineInteractive, !disabled && appearance === 'underline' && rootStyles.underlineInteractive, !disabled && filled && rootStyles.filledInteractive, filled && rootStyles.filled, !disabled && invalid && rootStyles.invalid, disabled && rootStyles.disabled, state.root.className);\n    state.input.className = mergeClasses(inputClassNames.input, useInputClassName(), inputStyles[size], state.contentBefore && inputStyles[`${size}WithContentBefore`], state.contentAfter && inputStyles[`${size}WithContentAfter`], disabled && inputStyles.disabled, state.input.className);\n    const contentClasses = [\n        useContentClassName(),\n        disabled && contentStyles.disabled,\n        contentStyles[size]\n    ];\n    if (state.contentBefore) {\n        state.contentBefore.className = mergeClasses(inputClassNames.contentBefore, ...contentClasses, state.contentBefore.className);\n    }\n    if (state.contentAfter) {\n        state.contentAfter.className = mergeClasses(inputClassNames.contentAfter, ...contentClasses, state.contentAfter.className);\n    }\n    return state;\n};\n", "import * as React from 'react';\nimport { useInput_unstable } from './useInput';\nimport { renderInput_unstable } from './renderInput';\nimport { useInputStyles_unstable } from './useInputStyles.styles';\nimport { useCustomStyleHook_unstable } from '@fluentui/react-shared-contexts';\n/**\n * The Input component allows people to enter and edit text.\n */ export const Input = /*#__PURE__*/ React.forwardRef((props, ref)=>{\n    const state = useInput_unstable(props, ref);\n    useInputStyles_unstable(state);\n    useCustomStyleHook_unstable('useInputStyles_unstable')(state);\n    return renderInput_unstable(state);\n});\nInput.displayName = 'Input';\n", "import * as React from 'react';\n", "export const Alt = 'Alt';\nexport const AltGraph = 'AltGraph';\nexport const CapsLock = 'CapsLock';\nexport const Control = 'Control';\nexport const Fn = 'Fn';\nexport const FnLock = 'FnLock';\nexport const Meta = 'Meta';\nexport const NumLock = 'NumLock';\nexport const ScrollLock = 'ScrollLock';\nexport const Shift = 'Shift';\nexport const Symbol = 'Symbol';\nexport const SymbolLock = 'SymbolLock';\nexport const Hyper = 'Hyper';\nexport const Super = 'Super';\nexport const Enter = 'Enter';\nexport const Space = ' ';\nexport const Tab = 'Tab';\nexport const ArrowDown = 'ArrowDown';\nexport const ArrowLeft = 'ArrowLeft';\nexport const ArrowRight = 'ArrowRight';\nexport const ArrowUp = 'ArrowUp';\nexport const End = 'End';\nexport const Home = 'Home';\nexport const PageDown = 'PageDown';\nexport const PageUp = 'PageUp';\nexport const Backspace = 'Backspace';\nexport const Clear = 'Clear';\nexport const Copy = 'Copy';\nexport const CrSel = 'CrSel';\nexport const Cut = 'Cut';\nexport const Delete = 'Delete';\nexport const EraseEof = 'EraseEof';\nexport const ExSel = 'ExSel';\nexport const Insert = 'Insert';\nexport const Paste = 'Paste';\nexport const Redo = 'Redo';\nexport const Undo = 'Undo';\nexport const Accept = 'Accept';\nexport const Again = 'Again';\nexport const Attn = 'Attn';\nexport const Cancel = 'Cancel';\nexport const ContextMenu = 'ContextMenu';\nexport const Escape = 'Escape';\nexport const Execute = 'Execute';\nexport const Find = 'Find';\nexport const Help = 'Help';\nexport const Pause = 'Pause';\nexport const Play = 'Play';\nexport const Props = 'Props';\nexport const Select = 'Select';\nexport const ZoomIn = 'ZoomIn';\nexport const ZoomOut = 'ZoomOut';\nexport const BrightnessDown = 'BrightnessDown';\nexport const BrightnessUp = 'BrightnessUp';\nexport const Eject = 'Eject';\nexport const LogOff = 'LogOff';\nexport const Power = 'Power';\nexport const PowerOff = 'PowerOff';\nexport const PrintScreen = 'PrintScreen';\nexport const Hibernate = 'Hibernate';\nexport const Standby = 'Standby';\nexport const WakeUp = 'WakeUp';\nexport const AllCandidates = 'AllCandidates';\nexport const Alphanumeric = 'Alphanumeric';\nexport const CodeInput = 'CodeInput';\nexport const Compose = 'Compose';\nexport const Convert = 'Convert';\nexport const Dead = 'Dead';\nexport const FinalMode = 'FinalMode';\nexport const GroupFirst = 'GroupFirst';\nexport const GroupLast = 'GroupLast';\nexport const GroupNext = 'GroupNext';\nexport const GroupPrevious = 'GroupPrevious';\nexport const ModeChange = 'ModeChange';\nexport const NextCandidate = 'NextCandidate';\nexport const NonConvert = 'NonConvert';\nexport const PreviousCandidate = 'PreviousCandidate';\nexport const Process = 'Process';\nexport const SingleCandidate = 'SingleCandidate';\nexport const HangulMode = 'HangulMode';\nexport const HanjaMode = 'HanjaMode';\nexport const JunjaMode = 'JunjaMode';\nexport const Eisu = 'Eisu';\nexport const Hankaku = 'Hankaku';\nexport const Hiragana = 'Hiragana';\nexport const HiraganaKatakana = 'HiraganaKatakana';\nexport const KanaMode = 'KanaMode';\nexport const KanjiMode = 'KanjiMode';\nexport const Katakana = 'Katakana';\nexport const Romaji = 'Romaji';\nexport const Zenkaku = 'Zenkaku';\nexport const ZenkakuHankaku = 'ZenkakuHankaku';\nexport const F1 = 'F1';\nexport const F2 = 'F2';\nexport const F3 = 'F3';\nexport const F4 = 'F4';\nexport const F5 = 'F5';\nexport const F6 = 'F6';\nexport const F7 = 'F7';\nexport const F8 = 'F8';\nexport const F9 = 'F9';\nexport const F10 = 'F10';\nexport const F11 = 'F11';\nexport const F12 = 'F12';\nexport const Soft1 = 'Soft1';\nexport const Soft2 = 'Soft2';\nexport const Soft3 = 'Soft3';\nexport const Soft4 = 'Soft4';\nexport const ChannelDown = 'ChannelDown';\nexport const ChannelUp = 'ChannelUp';\nexport const Close = 'Close';\nexport const MailForward = 'MailForward';\nexport const MailReply = 'MailReply';\nexport const MailSend = 'MailSend';\nexport const MediaClose = 'MediaClose';\nexport const MediaFastForward = 'MediaFastForward';\nexport const MediaPause = 'MediaPause';\nexport const MediaPlay = 'MediaPlay';\nexport const MediaPlayPause = 'MediaPlayPause';\nexport const MediaRecord = 'MediaRecord';\nexport const MediaRewind = 'MediaRewind';\nexport const MediaStop = 'MediaStop';\nexport const MediaTrackNext = 'MediaTrackNext';\nexport const MediaTrackPrevious = 'MediaTrackPrevious';\nexport const New = 'New';\nexport const Open = 'Open';\nexport const Print = 'Print';\nexport const Save = 'Save';\nexport const SpellCheck = 'SpellCheck';\nexport const Key11 = 'Key11';\nexport const Key12 = 'Key12';\nexport const AudioBalanceLeft = 'AudioBalanceLeft';\nexport const AudioBalanceRight = 'AudioBalanceRight';\nexport const AudioBassBoostDown = 'AudioBassBoostDown';\nexport const AudioBassBoostToggle = 'AudioBassBoostToggle';\nexport const AudioBassBoostUp = 'AudioBassBoostUp';\nexport const AudioFaderFront = 'AudioFaderFront';\nexport const AudioFaderRear = 'AudioFaderRear';\nexport const AudioSurroundModeNext = 'AudioSurroundModeNext';\nexport const AudioTrebleDown = 'AudioTrebleDown';\nexport const AudioTrebleUp = 'AudioTrebleUp';\nexport const AudioVolumeDown = 'AudioVolumeDown';\nexport const AudioVolumeUp = 'AudioVolumeUp';\nexport const AudioVolumeMute = 'AudioVolumeMute';\nexport const MicrophoneToggle = 'MicrophoneToggle';\nexport const MicrophoneVolumeDown = 'MicrophoneVolumeDown';\nexport const MicrophoneVolumeUp = 'MicrophoneVolumeUp';\nexport const MicrophoneVolumeMute = 'MicrophoneVolumeMute';\nexport const SpeechCorrectionList = 'SpeechCorrectionList';\nexport const SpeechInputToggle = 'SpeechInputToggle';\nexport const LaunchApplication1 = 'LaunchApplication1';\nexport const LaunchApplication2 = 'LaunchApplication2';\nexport const LaunchCalendar = 'LaunchCalendar';\nexport const LaunchContacts = 'LaunchContacts';\nexport const LaunchMail = 'LaunchMail';\nexport const LaunchMediaPlayer = 'LaunchMediaPlayer';\nexport const LaunchMusicPlayer = 'LaunchMusicPlayer';\nexport const LaunchPhone = 'LaunchPhone';\nexport const LaunchScreenSaver = 'LaunchScreenSaver';\nexport const LaunchSpreadsheet = 'LaunchSpreadsheet';\nexport const LaunchWebBrowser = 'LaunchWebBrowser';\nexport const LaunchWebCam = 'LaunchWebCam';\nexport const LaunchWordProcessor = 'LaunchWordProcessor';\nexport const BrowserBack = 'BrowserBack';\nexport const BrowserFavorites = 'BrowserFavorites';\nexport const BrowserForward = 'BrowserForward';\nexport const BrowserHome = 'BrowserHome';\nexport const BrowserRefresh = 'BrowserRefresh';\nexport const BrowserSearch = 'BrowserSearch';\nexport const BrowserStop = 'BrowserStop';\nexport const AppSwitch = 'AppSwitch';\nexport const Call = 'Call';\nexport const Camera = 'Camera';\nexport const CameraFocus = 'CameraFocus';\nexport const EndCall = 'EndCall';\nexport const GoBack = 'GoBack';\nexport const GoHome = 'GoHome';\nexport const HeadsetHook = 'HeadsetHook';\nexport const LastNumberRedial = 'LastNumberRedial';\nexport const Notification = 'Notification';\nexport const MannerMode = 'MannerMode';\nexport const VoiceDial = 'VoiceDial';\nexport const TV = 'TV';\nexport const TV3DMode = 'TV3DMode';\nexport const TVAntennaCable = 'TVAntennaCable';\nexport const TVAudioDescription = 'TVAudioDescription';\nexport const TVAudioDescriptionMixDown = 'TVAudioDescriptionMixDown';\nexport const TVAudioDescriptionMixUp = 'TVAudioDescriptionMixUp';\nexport const TVContentsMenu = 'TVContentsMenu';\nexport const TVDataService = 'TVDataService';\nexport const TVInput = 'TVInput';\nexport const TVInputComponent1 = 'TVInputComponent1';\nexport const TVInputComponent2 = 'TVInputComponent2';\nexport const TVInputComposite1 = 'TVInputComposite1';\nexport const TVInputComposite2 = 'TVInputComposite2';\nexport const TVInputHDMI1 = 'TVInputHDMI1';\nexport const TVInputHDMI2 = 'TVInputHDMI2';\nexport const TVInputHDMI3 = 'TVInputHDMI3';\nexport const TVInputHDMI4 = 'TVInputHDMI4';\nexport const TVInputVGA1 = 'TVInputVGA1';\nexport const TVMediaContext = 'TVMediaContext';\nexport const TVNetwork = 'TVNetwork';\nexport const TVNumberEntry = 'TVNumberEntry';\nexport const TVPower = 'TVPower';\nexport const TVRadioService = 'TVRadioService';\nexport const TVSatellite = 'TVSatellite';\nexport const TVSatelliteBS = 'TVSatelliteBS';\nexport const TVSatelliteCS = 'TVSatelliteCS';\nexport const TVSatelliteToggle = 'TVSatelliteToggle';\nexport const TVTerrestrialAnalog = 'TVTerrestrialAnalog';\nexport const TVTerrestrialDigital = 'TVTerrestrialDigital';\nexport const TVTimer = 'TVTimer';\nexport const AVRInput = 'AVRInput';\nexport const AVRPower = 'AVRPower';\nexport const ColorF0Red = 'ColorF0Red';\nexport const ColorF1Green = 'ColorF1Green';\nexport const ColorF2Yellow = 'ColorF2Yellow';\nexport const ColorF3Blue = 'ColorF3Blue';\nexport const ColorF4Grey = 'ColorF4Grey';\nexport const ColorF5Brown = 'ColorF5Brown';\nexport const ClosedCaptionToggle = 'ClosedCaptionToggle';\nexport const Dimmer = 'Dimmer';\nexport const DisplaySwap = 'DisplaySwap';\nexport const DVR = 'DVR';\nexport const Exit = 'Exit';\nexport const FavoriteClear0 = 'FavoriteClear0';\nexport const FavoriteClear1 = 'FavoriteClear1';\nexport const FavoriteClear2 = 'FavoriteClear2';\nexport const FavoriteClear3 = 'FavoriteClear3';\nexport const FavoriteRecall0 = 'FavoriteRecall0';\nexport const FavoriteRecall1 = 'FavoriteRecall1';\nexport const FavoriteRecall2 = 'FavoriteRecall2';\nexport const FavoriteRecall3 = 'FavoriteRecall3';\nexport const FavoriteStore0 = 'FavoriteStore0';\nexport const FavoriteStore1 = 'FavoriteStore1';\nexport const FavoriteStore2 = 'FavoriteStore2';\nexport const FavoriteStore3 = 'FavoriteStore3';\nexport const Guide = 'Guide';\nexport const GuideNextDay = 'GuideNextDay';\nexport const GuidePreviousDay = 'GuidePreviousDay';\nexport const Info = 'Info';\nexport const InstantReplay = 'InstantReplay';\nexport const Link = 'Link';\nexport const ListProgram = 'ListProgram';\nexport const LiveContent = 'LiveContent';\nexport const Lock = 'Lock';\nexport const MediaApps = 'MediaApps';\nexport const MediaAudioTrack = 'MediaAudioTrack';\nexport const MediaLast = 'MediaLast';\nexport const MediaSkipBackward = 'MediaSkipBackward';\nexport const MediaSkipForward = 'MediaSkipForward';\nexport const MediaStepBackward = 'MediaStepBackward';\nexport const MediaStepForward = 'MediaStepForward';\nexport const MediaTopMenu = 'MediaTopMenu';\nexport const NavigateIn = 'NavigateIn';\nexport const NavigateNext = 'NavigateNext';\nexport const NavigateOut = 'NavigateOut';\nexport const NavigatePrevious = 'NavigatePrevious';\nexport const NextFavoriteChannel = 'NextFavoriteChannel';\nexport const NextUserProfile = 'NextUserProfile';\nexport const OnDemand = 'OnDemand';\nexport const Pairing = 'Pairing';\nexport const PinPDown = 'PinPDown';\nexport const PinPMove = 'PinPMove';\nexport const PinPToggle = 'PinPToggle';\nexport const PinPUp = 'PinPUp';\nexport const PlaySpeedDown = 'PlaySpeedDown';\nexport const PlaySpeedReset = 'PlaySpeedReset';\nexport const PlaySpeedUp = 'PlaySpeedUp';\nexport const RandomToggle = 'RandomToggle';\nexport const RcLowBattery = 'RcLowBattery';\nexport const RecordSpeedNext = 'RecordSpeedNext';\nexport const RfBypass = 'RfBypass';\nexport const ScanChannelsToggle = 'ScanChannelsToggle';\nexport const ScreenModeNext = 'ScreenModeNext';\nexport const Settings = 'Settings';\nexport const SplitScreenToggle = 'SplitScreenToggle';\nexport const STBInput = 'STBInput';\nexport const STBPower = 'STBPower';\nexport const Subtitle = 'Subtitle';\nexport const Teletext = 'Teletext';\nexport const VideoModeNext = 'VideoModeNext';\nexport const Wink = 'Wink';\nexport const ZoomToggle = 'ZoomToggle';\nexport const MediaNextTrack = 'MediaNextTrack';\nexport const MediaPreviousTrack = 'MediaPreviousTrack';\nexport const Unidentified = 'Unidentified';\n"],
  "mappings": "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",
  "names": ["REACT_STRICT_MODE_TYPE", "isValidElementType", "Element", "Fragment", "Portal", "isElement", "React", "React", "React", "React", "resolveShorthand", "React", "React", "React", "React", "React", "React", "React", "React", "React", "React", "React", "React", "React", "React", "React", "React", "useId", "React", "React", "React", "React", "React", "import_react", "React", "parent", "_targetDocument_defaultView", "React", "parent", "React", "min", "max", "size", "React", "React", "React", "React", "React", "React", "parent", "parent", "parent", "HTMLElement", "win", "TABSTER_ATTRIBUTE_NAME", "TABSTER_DUMMY_INPUT_ATTRIBUTE_NAME", "FOCUSABLE_SELECTOR", "join", "AsyncFocusSources", "EscapeGroupper", "Restorer", "Deloser", "ObservedElementAccessibilities", "Any", "Accessible", "Focusable", "Visibilities", "Invisible", "PartiallyVisible", "Visible", "RestorerTypes", "Source", "Target", "MoverDirections", "Both", "Vertical", "Horizontal", "Grid", "GridLinear", "MoverKeys", "ArrowUp", "ArrowDown", "ArrowLeft", "ArrowRight", "PageUp", "PageDown", "Home", "End", "GroupperTabbabilities", "Unlimited", "Limited", "LimitedTrapFocus", "GroupperMoveFocusActions", "Enter", "Escape", "SysDummyInputsPositions", "Auto", "Inside", "Outside", "getTabsterOnElement", "tabster", "element", "storageEntry", "updateTabsterByAttribute", "dispose", "newAttrValue", "_noop", "undefined", "getAttribute", "TABSTER_ATTRIBUTE_NAME", "entry", "newAttr", "attr", "string", "newValue", "JSON", "parse", "Error", "object", "e", "__DEV__", "console", "error", "tabsterOnElement", "oldTabsterProps", "newTabsterProps", "key", "Object", "keys", "root", "onRoot", "part", "observedElement", "onObservedElementUpdate", "sys", "deloser", "setProps", "createDeloser", "createRoot", "modalizer", "createModalizer", "restorer", "createRestorer", "focusable", "groupper", "createGroupper", "mover", "createMover", "observed", "uncontrolled", "outline", "length", "TabsterFocusInEventName", "TabsterFocusOutEventName", "TabsterMoveFocusEventName", "ModalizerActiveEventName", "ModalizerInactiveEventName", "MoverStateEventName", "MoverMoveFocusEventName", "MoverMemorizedElementEventName", "GroupperMoveFocusEventName", "RestorerRestoreFocusEventName", "RootFocusEventName", "RootBlurEventName", "CustomEvent_", "CustomEvent", "TabsterCustomEvent", "constructor", "type", "detail", "bubbles", "cancelable", "composed", "details", "TabsterFocusInEvent", "TabsterFocusInEventName", "TabsterFocusOutEvent", "TabsterFocusOutEventName", "TabsterMoveFocusEvent", "TabsterMoveFocusEventName", "MoverStateEvent", "MoverMoveFocusEvent", "GroupperMoveFocusEvent", "TabsterCustomEvent", "constructor", "detail", "GroupperMoveFocusEventName", "ModalizerActiveEvent", "ModalizerActiveEventName", "ModalizerInactiveEvent", "ModalizerInactiveEventName", "RestorerRestoreFocusEvent", "TabsterCustomEvent", "constructor", "RestorerRestoreFocusEventName", "RootFocusEvent", "detail", "RootFocusEventName", "RootBlurEvent", "RootBlurEventName", "_createMutationObserver", "callback", "MutationObserver", "_createTreeWalker", "doc", "root", "whatToShow", "filter", "createTreeWalker", "_getParentNode", "node", "parentNode", "_getParentElement", "element", "parentElement", "_nodeContains", "parent", "child", "contains", "_getActiveElement", "activeElement", "_querySelector", "selector", "querySelector", "_querySelectorAll", "Array", "prototype", "slice", "call", "querySelectorAll", "_getElementById", "id", "getElementById", "_getFirstChild", "firstChild", "_getLastChild", "lastChild", "_getNextSibling", "nextSibling", "_getPreviousSibling", "previousSibling", "_getFirstElementChild", "firstElementChild", "_getLastElementChild", "lastElementChild", "_getNextElementSibling", "nextElementSibling", "_getPreviousElementSibling", "previousElementSibling", "_appendChild", "appendChild", "_insertBefore", "referenceChild", "insertBefore", "_getSelection", "ref", "ownerDocument", "getSelection", "_getElementsByName", "referenceElement", "name", "getElementsByName", "dom", "createMutationObserver", "getParentNode", "getParentElement", "nodeContains", "getActiveElement", "getFirstChild", "getLastChild", "getNextSibling", "getPreviousSibling", "getFirstElementChild", "getLastElementChild", "getNextElementSibling", "getPreviousElementSibling", "setDOMAPI", "domapi", "key", "Object", "keys", "_isBrokenIE11", "_DOMRect", "DOMRect", "x", "y", "width", "height", "left", "top", "right", "bottom", "_uidCounter", "document", "NodeFilter", "SHOW_ELEMENT", "e", "_updateDummyInputsTimeout", "getInstanceContext", "getWindow", "win", "ctx", "__tabsterInstanceContext", "elementByUId", "basics", "Promise", "undefined", "WeakRef", "containerBoundingRectCache", "lastContainerBoundingRectCacheId", "fakeWeakRefs", "fakeWeakRefsStarted", "disposeInstanceContext", "containerBoundingRectCacheTimer", "clearTimeout", "fakeWeakRefsTimer", "createWeakMap", "WeakMap", "hasSubFocusable", "FOCUSABLE_SELECTOR", "FakeWeakRef", "target", "_target", "deref", "cleanup", "fwr", "forceRemove", "documentContains", "WeakHTMLElement", "data", "context", "push", "_ref", "_data", "get", "getData", "cleanupFakeWeakRefs", "startFakeWeakRefsCleanup", "getWeakRef", "setTimeout", "stopFakeWeakRefsCleanupAndClearStorage", "createElementTreeWalker", "acceptNode", "nodeType", "Node", "ELEMENT_NODE", "getBoundingRect", "cacheId", "__tabsterCacheId", "cached", "rect", "scrollingElement", "documentElement", "clientWidth", "clientHeight", "r", "getBoundingClientRect", "Math", "max", "min", "window", "cId", "isElementVerticallyVisibleInContainer", "tolerance", "container", "getScrollableContainer", "containerRect", "elementRect", "intersectionTolerance", "topIntersection", "bottomIntersection", "totalIntersection", "scrollIntoView", "alignToTop", "scrollTop", "el", "scrollWidth", "scrollHeight", "makeFocusIgnored", "__shouldIgnoreFocus", "shouldIgnoreFocus", "getUId", "wnd", "rnd", "Uint32Array", "crypto", "getRandomValues", "msCrypto", "i", "length", "random", "srnd", "toString", "Date", "now", "join", "getElementUId", "uid", "__tabsterElementUID", "clearElementCache", "getWindow", "parent", "context", "getInstanceContext", "key", "Object", "keys", "elementByUId", "wel", "el", "get", "dom", "nodeContains", "documentContains", "doc", "element", "body", "matchesSelector", "selector", "matches", "msMatchesSelector", "webkitMatchesSelector", "call", "getPromise", "basics", "Promise", "Error", "getWeakRef", "WeakRef", "_lastTabsterPartId", "TabsterPart", "constructor", "tabster", "props", "_tabster", "_element", "WeakHTMLElement", "_props", "id", "getElement", "getProps", "setProps", "DummyInput", "isOutside", "fixedTarget", "e", "_fixedTarget", "target", "nativeFocus", "input", "onFocusIn", "relatedTarget", "_isBackward", "useDefaultAction", "onFocusOut", "win", "document", "createElement", "tabIndex", "setAttribute", "TABSTER_DUMMY_INPUT_ATTRIBUTE_NAME", "style", "position", "width", "height", "opacity", "zIndex", "setProperty", "makeFocusIgnored", "isFirst", "_isPhantom", "isPhantom", "addEventListener", "_focusIn", "_focusOut", "__tabsterDummyContainer", "_disposeTimer", "setTimeout", "dispose", "_clearDisposeTimeout", "clearTimeout", "removeEventListener", "getParentNode", "removeChild", "setTopLeft", "top", "left", "isIn", "current", "previous", "compareDocumentPosition", "Node", "DOCUMENT_POSITION_FOLLOWING", "DummyInputManagerPriorities", "Root", "Modalizer", "Mover", "Groupper", "DummyInputManager", "priority", "sys", "outsideByDefault", "callForDefaultAction", "_instance", "DummyInputManagerCore", "_setHandlers", "_onFocusIn", "_onFocusOut", "moveOut", "backwards", "moveOutWithDefaultAction", "relatedEvent", "getHandler", "setTabbable", "tabbable", "moveWithPhantomDummy", "moveOutOfElement", "isBackward", "dummy", "insertBefore", "tagName", "getFirstElementChild", "focusable", "isFocusable", "firstElementChild", "getParentElement", "getNextElementSibling", "potentialDummy", "dummyFor", "getPreviousElementSibling", "getDummyInputContainer", "dispatchEvent", "TabsterMoveFocusEvent", "by", "owner", "next", "addPhantomDummyWithTarget", "sourceElement", "targetElement", "undefined", "dummyParent", "hasSubFocusable", "setDummyInputDebugValue", "wrappers", "what", "map", "w", "join", "DummyInputObserver", "Set", "WeakSet", "WeakMap", "_changedParents", "has", "add", "_updateDummyInputsTimer", "_win", "ref", "_dummyElements", "dummyElement", "callback", "_dummyCallbacks", "_updateDummyInputsTimeout", "push", "set", "domChanged", "_domChanged", "remove", "filter", "delete", "length", "_updateTimer", "_updateQueue", "clear", "updatePositions", "compute", "_lastUpdateQueueTime", "Date", "now", "_scheduledUpdatePositions", "scrollTopLeftCache", "Map", "setTopLeftCallbacks", "manager", "dummyInput", "_onFocus", "first", "_firstDummy", "last", "_lastDummy", "_ensurePosition", "firstInput", "lastInput", "toFocus", "_wrappers", "wrapper", "_getCurrent", "__DEV__", "_addTimer", "_getWindow", "_addTransformOffsets", "_dummyObserver", "_computeTransformOffsets", "from", "transformElements", "_transformElements", "newTransformElements", "scrollTop", "scrollLeft", "nodeType", "ELEMENT_NODE", "scrollTopLeft", "transform", "getComputedStyle", "_a", "_b", "_callForDefaultAction", "instance", "__tabsterDummy", "forcedDummyPosition", "dummyInputsPosition", "_isOutside", "SysDummyInputsPositions", "Outside", "_addDummyInputs", "force", "sort", "a", "b", "firstDummyInput", "lastDummyInput", "elementParent", "nextSibling", "getNextSibling", "getLastElementChild", "appendChild", "parentNode", "getLastChild", "container", "lastChild", "i", "getAdjacentElement", "prev", "cur", "adjacent", "augmentAttribute", "name", "value", "entry", "storageEntry", "ret", "aug", "origVal", "removeAttribute", "origValue", "getAttribute", "isDisplayNone", "elementDocument", "ownerDocument", "computedStyle", "defaultView", "offsetParent", "visibility", "display", "parentElement", "isRadio", "type", "getRadioButtonGroup", "radioButtons", "Array", "getElementsByName", "checked", "buttons", "getTabsterAttribute", "plain", "attr", "JSON", "stringify", "TABSTER_ATTRIBUTE_NAME", "mergeTabsterProps", "newProps", "setTabsterAttribute", "update", "parse", "console", "error", "_setInformativeStyle", "weakElement", "removeProperty", "RootDummyManager", "setFocused", "_setFocused", "keyboardNavigation", "setNavigatingWithKeyboard", "focusedElement", "getFirstOrLastTabbable", "ignoreAccessibility", "blur", "_onDummyInputFocus", "onDispose", "hasFocused", "_setFocusedTimer", "_isFocused", "_dummyManager", "RootFocusEvent", "RootBlurEvent", "event", "getParent", "rootElement", "curElement", "composedPath", "_onDispose", "uid", "getElementUId", "_sys", "controlTab", "rootDummyInputs", "addDummyInputs", "KEYBORG_FOCUSIN", "KEYBORG_FOCUSOUT", "_add", "_remove", "dummyManager", "RootAPI", "autoRoot", "_autoRootUnwait", "_autoRoot", "root", "updateTabsterByAttribute", "getTabsterOnElement", "_autoRootWaiting", "_autoRootCreate", "_roots", "queueInit", "forEach", "rootId", "rootById", "createRoot", "newRoot", "_onRootDispose", "_forceDummy", "roots", "getRootByUId", "__tabsterInstance", "getTabsterContext", "options", "checkRtl", "referenceElement", "drainInitQueue", "modalizer", "groupper", "mover", "excludedFromMover", "groupperBeforeMover", "modalizerInGroupper", "dirRightToLeft", "uncontrolled", "ignoreKeydown", "tabsterOnElement", "dir", "toLowerCase", "excludeFromMover", "curModalizer", "curGroupper", "curMover", "isActive", "tabbability", "userId", "activeId", "contains", "assign", "rootAPI", "shouldIgnoreKeydown", "rtl", "getRoot", "onRoot", "removed", "Subscribable", "constructor", "dispose", "_callbacks", "_val", "subscribe", "callback", "callbacks", "index", "indexOf", "push", "subscribeFirst", "splice", "unshift", "unsubscribe", "setVal", "val", "detail", "_callCallbacks", "getVal", "trigger", "forEach", "FocusableAPI", "constructor", "tabster", "_tabster", "dispose", "getProps", "element", "tabsterOnElement", "getTabsterOnElement", "focusable", "isFocusable", "el", "includeProgrammaticallyFocusable", "noVisibleCheck", "noAccessibleCheck", "matchesSelector", "FOCUSABLE_SELECTOR", "tabIndex", "isVisible", "isAccessible", "ownerDocument", "nodeType", "Node", "ELEMENT_NODE", "isDisplayNone", "rect", "body", "getBoundingClientRect", "width", "height", "e", "dom", "getParentElement", "_isHidden", "ignoreDisabled", "ignoreAriaDisabled", "_isDisabled", "hasAttribute", "attrVal", "getAttribute", "toLowerCase", "modalizer", "isAugmented", "findFirst", "options", "out", "findElement", "findLast", "isBackward", "findNext", "findPrev", "findDefault", "acceptCondition", "isDefault", "findAll", "_findElements", "found", "isFindAll", "container", "currentElement", "useActiveModalizer", "ignoreAccessibility", "modalizerId", "onElement", "elements", "hasCustomCondition", "acceptElementState", "modalizerUserId", "undefined", "activeId", "RootAPI", "getTabsterContext", "userId", "from", "cachedGrouppers", "cachedRadioGroups", "walker", "createElementTreeWalker", "node", "_acceptElement", "prepareForNextElement", "shouldContinueIfNotFound", "foundElement", "_a", "foundBackward", "push", "fromCtx", "uncontrolled", "_b", "outOfDOMOrder", "nodeContains", "currentNode", "lastChild", "getLastChild", "NodeFilter", "FILTER_ACCEPT", "skippedFocusable", "previousNode", "nextNode", "length", "state", "FILTER_SKIP", "FILTER_REJECT", "getDummyInputContainer", "rejectElementsFrom", "ctx", "currentCtx", "shouldIgnoreFocus", "tagName", "result", "fromMover", "mover", "groupper", "acceptElement", "groupperElement", "getElement", "fromMoverElement", "moverElement", "isRadio", "checked", "radioGroupName", "name", "radioGroup", "getRadioButtonGroup", "Keys", "Tab", "Enter", "Escape", "Space", "PageUp", "PageDown", "End", "Home", "ArrowLeft", "ArrowUp", "ArrowRight", "ArrowDown", "getUncontrolledCompletelyContainer", "getParent", "uncontrolledOnElement", "isUncontrolledCompletely", "completely", "AsyncFocusIntentPriorityBySource", "AsyncFocusSources", "Restorer", "Deloser", "EscapeGroupper", "FocusedElementState", "Subscribable", "getWindow", "win", "_win", "doc", "document", "addEventListener", "KEYBORG_FOCUSIN", "_onFocusIn", "KEYBORG_FOCUSOUT", "_onFocusOut", "_onKeyDown", "activeElement", "getActiveElement", "_setFocusedElement", "subscribe", "_onChanged", "target", "composedPath", "detail", "relatedTarget", "isFocusedProgrammatically", "originalEvent", "event", "key", "ctrlKey", "getVal", "contentEditable", "controlTab", "ignoreKeydown", "shiftKey", "next", "findNextTabbable", "rootElement", "root", "nextElement", "uncontrolledCompletelyContainer", "nextUncontrolled", "DummyInputManager", "addPhantomDummyWithTarget", "dispatchEvent", "TabsterMoveFocusEvent", "by", "owner", "relatedEvent", "moveWithPhantomDummy", "preventDefault", "stopImmediatePropagation", "nativeFocus", "moveOutWithDefaultAction", "TabsterFocusInEvent", "last", "_lastVal", "get", "d", "lastCtx", "TabsterFocusOutEvent", "queueInit", "_init", "removeEventListener", "unsubscribe", "asyncFocus", "_asyncFocus", "clearTimeout", "timeout", "_lastResetElement", "_nextVal", "forgetMemorized", "instance", "parent", "wel", "getFocusedElement", "getLastFocusedElement", "documentContains", "focus", "noFocusedProgrammaticallyFlag", "preventScroll", "focusDefault", "focusedElement", "getFirstOrLastTabbable", "isFirst", "props", "toFocus", "_focusFirstOrLast", "focusFirst", "focusLast", "resetFocus", "prevTabIndex", "prevAriaHidden", "setAttribute", "WeakHTMLElement", "_setOrRemoveAttribute", "requestAsyncFocus", "source", "callback", "delay", "currentAsyncFocus", "setTimeout", "cancelAsyncFocus", "value", "removeAttribute", "_noop", "lastResetElement", "nextVal", "_val", "_validateFocusedElement", "setVal", "val", "referenceElement", "actualContainer", "isTabbingTimer", "_isTabbingTimer", "isTabbing", "callFindNext", "what", "parentElement", "parentCtx", "currentScopeElement", "newCurrent", "groupperBeforeMover", "findProps", "findPropsOut", "GroupperDummyManager", "sys", "DummyInputManagerPriorities", "Groupper", "_setHandlers", "dummyInput", "input", "isOutside", "getAdjacentElement", "TabsterPart", "onDispose", "makeTabbable", "_onDispose", "dummyManager", "_element", "__DEV__", "_setInformativeStyle", "_first", "currentIsDummy", "_shouldTabInside", "groupperFirstFocusable", "getFirst", "_props", "tabbability", "GroupperTabbabilities", "LimitedTrapFocus", "isTabbable", "isActive", "noIfFirstIsFocused", "isParentActive", "g", "ret", "focused", "orContainer", "first", "setFirst", "parentCtxGroupper", "parentGroupper", "parentGroupperElement", "getIsActive", "cached", "id", "GroupperAPI", "subscribeFirst", "_onFocus", "_onMouseDown", "GroupperMoveFocusEventName", "_onMoveFocus", "_grouppers", "_updateCurrent", "altKey", "metaKey", "handleKeyPress", "action", "defaultPrevented", "GroupperMoveFocusActions", "_enterGroupper", "_escapeGroupper", "_current", "_updateTimer", "Object", "keys", "forEach", "groupperId", "createGroupper", "newGroupper", "_onGroupperDispose", "forgetCurrentGrouppers", "includeTarget", "checkTarget", "newIds", "isTarget", "delegated", "modalizerInGroupper", "fromModalizer", "setActive", "moveFocus", "weakElement", "remove", "style", "removeProperty", "setProperty", "KeyboardNavigationState", "isNavigatingWithKeyboard", "_keyborg", "createKeyborg", "_onChange", "disposeKeyborg", "setNavigatingWithKeyboard", "_wasFocusedCounter", "_ariaHidden", "internalId", "wasFocused", "ModalizerDummyManager", "Modalizer", "getRoot", "dummyContainer", "activeElements", "_activeElements", "_isActive", "_wasFocused", "makeActive", "index", "map", "indexOf", "splice", "_dispatchEvent", "noIncrement", "setProps", "_remove", "contains", "modalizerElement", "isTrapped", "allElements", "eventDetail", "ModalizerActiveEvent", "ModalizerInactiveEvent", "ModalizerAPI", "alwaysAccessibleSelector", "accessibleCheck", "part", "_parts", "_modalizers", "focusedSince", "m", "filter", "f", "sort", "a", "b", "augmentedMap", "_augMap", "has", "delete", "augmentAttribute", "currentIsOthersAccessible", "isOthersAccessible", "isAlwaysAccessible", "_restoreModalizerFocusTimer", "_restoreModalizerFocus", "WeakMap", "_aug", "_alwaysAccessibleSelector", "_accessibleCheck", "addDummyInputs", "_hiddenUpdateTimer", "createModalizer", "_onModalizerDispose", "hiddenUpdate", "_hiddenUpdate", "elementFromModalizer", "noFocusFirst", "noFocusDefault", "modalizerRoot", "isNoFocusFirst", "keyboardNavigation", "isNoFocusDefault", "console", "error", "currentModalizer", "parts", "visibleElements", "hiddenElements", "alwaysAccessibleElements", "Array", "querySelectorAll", "activeModalizerElements", "modalizerParts", "allVisibleElements", "newAugmented", "newAugmentedMap", "toggle", "hide", "set", "walk", "getFirstElementChild", "getNextElementSibling", "skip", "containsModalizer", "containedByModalizer", "elParent", "c", "__tabsterElementFlags", "noDirectAriaHidden", "outsideElement", "compareDocumentPosition", "DOCUMENT_POSITION_PRECEDING", "Error", "blur", "_inputSelector", "join", "MoverDummyManager", "getMemorized", "Mover", "memorized", "_getMemorized", "_onFocusDummyInput", "_moverUpdateAdd", "_moverUpdateAttr", "_moverUpdateRemove", "entries", "entry", "getElementUId", "newVisibility", "fullyVisible", "_fullyVisible", "intersectionRatio", "Visibilities", "Visible", "PartiallyVisible", "Invisible", "_visible", "getState", "MoverStateEvent", "visibilityTolerance", "trackState", "visibilityAware", "_intersectionObserver", "IntersectionObserver", "_onIntersection", "threshold", "_observeState", "memorizeCurrent", "disconnect", "_allElements", "_updateQueue", "_unobserve", "_setCurrentTimer", "setCurrent", "changed", "_prevCurrent", "weak", "getCurrent", "tabbable", "excludedFromMover", "hasDefault", "current", "visibility", "MutationObserver", "tabsterFocusable", "updateQueue", "observer", "createMutationObserver", "mutations", "mutation", "removed", "removedNodes", "added", "addedNodes", "type", "attributeName", "i", "requestUpdate", "setElement", "unobserve", "observe", "updateElement", "addNewElements", "getMoverGroupper", "removeWalk", "toe", "childList", "subtree", "attributes", "attributeFilter", "isCurrent", "getDistance", "ax1", "ay1", "ax2", "ay2", "bx1", "by1", "bx2", "by2", "xDistance", "yDistance", "Math", "sqrt", "MoverAPI", "MoverMoveFocusEventName", "MoverMemorizedElementEventName", "_onMemorizedElement", "_movers", "currentFocusableElement", "deepestFocusableElement", "_ignoredInputTimer", "_ignoredInputResolve", "moverKey", "MoverKeys", "_isIgnoredInput", "_moveFocus", "memorizedElement", "moverId", "createMover", "newMover", "_onMoverDispose", "fromElement", "checkRtl", "moverProps", "direction", "MoverDirections", "Both", "isBoth", "isVertical", "Vertical", "isHorizontal", "Horizontal", "isGridLinear", "GridLinear", "isGrid", "Grid", "isCyclic", "cyclic", "scrollIntoViewArg", "focusedElementRect", "focusedElementX1", "focusedElementX2", "ceil", "left", "floor", "right", "rtl", "nextElementX1", "nextElementX2", "isElementVerticallyVisibleInContainer", "firstColumnX1", "lastColumnX1", "top", "bottom", "targetElement", "lastDistance", "lastIntersection", "xIntersectionWidth", "min", "max", "minWidth", "intersection", "distance", "scrollIntoView", "selectionStart", "selectionEnd", "textLength", "asyncRet", "selection", "getSelection", "initialLength", "toString", "modify", "selStart", "getPromise", "resolve", "anchorNode", "prevAnchorNode", "focusNode", "prevFocusNode", "anchorOffset", "prevAnchorOffset", "focusOffset", "prevFocusOffset", "textContent", "anchorFound", "addOffsets", "nodeText", "getFirstChild", "len", "stop", "nextSibling", "observeMutations", "updateTabsterByAttribute", "syncState", "elementByUId", "onMutation", "Set", "TABSTER_ATTRIBUTE_NAME", "removedNode", "add", "updateTabsterElements", "_dummyObserver", "domChanged", "clear", "getInstanceContext", "processNode", "uid", "__tabsterElementUID", "_conditionCheckTimeout", "ObservedElementAPI", "_currentRequest", "delta", "Date", "now", "_currentRequestTimestamp", "settleTime", "cancel", "observed", "info", "_observedById", "names", "observedNames", "prevNames", "_isObservedNamesUpdated", "prevName", "obn", "_observedByName", "observedName", "_waitConditional", "_waiting", "_rejectWaiting", "shouldResolve", "w", "timer", "conditionTimer", "reject", "cur", "prev", "accessibility", "o", "ObservedElementAccessibilities", "Accessible", "Focusable", "waitElement", "prefix", "request", "promise", "requestFocus", "requestId", "_lastRequestFocusId", "currentRequestFocus", "finally", "then", "waitingElementKey", "waitingAccessibleElementKey", "waitingFocusableElementKey", "waitingElement", "waitingAccessibleElement", "waitingFocusableElement", "waiting", "includes", "trigger", "details", "Any", "resolveAccessible", "resolveFocusable", "UncontrolledAPI", "constructor", "isUncontrolledCompletely", "_isUncontrolledCompletely", "element", "completely", "undefined", "Restorer", "TabsterPart", "tabster", "props", "e", "_a", "_element", "get", "relatedTarget", "dispatchEvent", "RestorerRestoreFocusEvent", "dom", "nodeContains", "_hasFocus", "_props", "type", "RestorerTypes", "Source", "addEventListener", "_onFocusOut", "_onFocusIn", "getActiveElement", "ownerDocument", "dispose", "removeEventListener", "doc", "_tabster", "getWindow", "document", "body", "History", "_getWindow", "push", "_stack", "length", "DEPTH", "shift", "WeakHTMLElement", "pop", "filter", "index", "maybeElement", "getParentElement", "RestorerAPI", "_focusedElementState", "cancelAsyncFocus", "AsyncFocusSources", "source", "composedPath", "sourceId", "getTabsterOnElement", "restorer", "getProps", "id", "requestAsyncFocus", "_restoreFocus", "tabsterAttribute", "Target", "_history", "_keyboardNavState", "isNavigatingWithKeyboard", "getId", "target", "focus", "RestorerRestoreFocusEventName", "_onRestoreFocus", "keyboardNavigation", "focusedElement", "subscribe", "win", "unsubscribe", "createRestorer", "activeElement", "shadowRoot", "node", "otherNode", "currentNode", "assignedElements", "assignedSlot", "parentNode", "nodeType", "DOCUMENT_FRAGMENT_NODE", "host", "getParentNode", "Node", "ELEMENT_NODE", "getFirstChild", "child", "firstChild", "getLastChild", "lastChild", "getNextSibling", "nextSibling", "getPreviousSibling", "sibling", "previousSibling", "parentElement", "getFirstElementChild", "getLastElementChild", "getNextElementSibling", "getPreviousElementSibling", "appendChild", "parent", "insertBefore", "referenceChild", "getSelection", "ref", "defaultView", "el", "tmp", "getElementsByName", "referenceElement", "name", "querySelectorAll", "container", "i", "ShadowTreeWalker", "root", "whatToShow", "Set", "walker", "_doc", "createTreeWalker", "acceptNode", "_acceptNode", "_walkerStack", "unshift", "NodeFilter", "FILTER_ACCEPT", "FILTER_SKIP", "SHOW_ALL", "_currentNode", "Error", "walkers", "curNode", "currentWalkerCurrentNode", "_currentSetFor", "add", "__DEV__", "nextNode", "nodeResult", "previousNode", "currentWalker", "has", "delete", "createShadowTreeWalker", "ShadowMutationObserver", "_overrideAttachShadow", "origAttachShadow", "Element", "prototype", "attachShadow", "__origAttachShadow", "options", "call", "shadowObserver", "_shadowObservers", "_addSubObserver", "callback", "mutations", "observer", "mutation", "removed", "removedNodes", "added", "addedNodes", "_walkShadows", "_callback", "_observer", "MutationObserver", "_callbackWrapper", "_subObservers", "Map", "_options", "subtree", "_root", "subObserver", "set", "_isObserving", "observe", "disconnect", "values", "clear", "DOCUMENT_NODE", "remove", "SHOW_ELEMENT", "takeRecords", "records", "createShadowMutationObserver", "shadowQuerySelector", "selector", "all", "elements", "walk", "from", "n", "matches", "querySelector", "getElementById", "Tabster", "focusable", "uncontrolled", "core", "TabsterCore", "__VERSION__", "_win", "_storage", "createWeakMap", "DOMAPI", "setDOMAPI", "KeyboardNavigationState", "FocusedElementState", "FocusableAPI", "RootAPI", "autoRoot", "checkUncontrolledCompletely", "checkUncontrolledTrappingFocus", "controlTab", "rootDummyInputs", "_dummyObserver", "DummyInputObserver", "getParent", "internal", "stopObserver", "_unobserve", "resumeObserver", "syncState", "observeMutations", "updateTabsterByAttribute", "startFakeWeakRefsCleanup", "queueInit", "_mergeProps", "createTabster", "noRefCount", "wrapper", "_wrappers", "disposeTabster", "allInstances", "size", "clearTimeout", "_initTimer", "_initQueue", "_forgetMemorizedElements", "_forgetMemorizedTimer", "outline", "crossOrigin", "deloser", "groupper", "mover", "modalizer", "observedElement", "stopFakeWeakRefsCleanupAndClearStorage", "clearElementCache", "WeakMap", "disposeInstanceContext", "__tabsterInstance", "storageEntry", "addremove", "storage", "entry", "Object", "keys", "forceCleanup", "setTimeout", "forgetMemorized", "cleanupFakeWeakRefs", "drainInitQueue", "queue", "forEach", "createTabster", "win", "props", "tabster", "getCurrentTabster", "TabsterCore", "__tabsterInstance", "getGroupper", "tabster", "tabsterCore", "core", "groupper", "GroupperAPI", "getWindow", "getMover", "mover", "MoverAPI", "getModalizer", "tabster", "alwaysAccessibleSelector", "accessibleCheck", "tabsterCore", "core", "modalizer", "ModalizerAPI", "getObservedElement", "observedElement", "ObservedElementAPI", "getRestorer", "tabster", "tabsterCore", "core", "restorer", "RestorerAPI", "disposeTabster", "allInstances", "getCurrentTabster", "win", "__tabsterInstance", "React", "shadowDOMAPI", "React", "React", "React", "React", "isHTMLElement", "import_react", "useId", "React", "statusColorPaletteTokens", "personaColorPaletteTokens", "colorPaletteTokens", "colorStatusTokens", "generateColorTokens", "generateColorTokens", "colorPaletteTokens", "colorStatusTokens", "statusColorPaletteTokens", "personaColorPaletteTokens", "colorPaletteTokens", "colorStatusTokens", "generateColorTokens", "generateColorTokens", "colorPaletteTokens", "colorStatusTokens", "generateColorTokens", "generateColorTokens", "colorPaletteTokens", "colorStatusTokens", "tokens", "React", "React", "React", "React", "React", "left", "right", "getBoundingClientRect", "clamp", "platform", "max", "offset", "clamp", "platform", "placements", "sides", "side", "placement", "overflow", "platform", "x", "y", "min", "max", "clamp", "offset", "isHTMLElement", "getParentNode", "isHTMLElement", "left", "getParentNode", "cache", "detectOverflow", "offset", "shift", "flip", "size", "hide", "arrow", "limitShift", "computePosition", "cache", "React", "tokens", "getParentNode", "window", "React", "WorkTag", "offset", "left", "right", "getPositionMap", "getAlignmentMap", "React", "arrow", "flip", "detectOverflow", "size", "offset", "shift", "limitShift", "arrow", "computePosition", "isHTMLElement", "arrow", "coverTarget", "offset", "matchTargetSize", "flip", "shift", "hide", "React", "React", "React", "React", "React4", "React2", "React3", "useMemo", "useEffect", "usePortalMountNodeStylesStyles", "__styles", "root", "qhf8xq", "Bhzewxz", "oyh7mz", "j35jbq", "Bj3rh1h", "d", "useInsertionEffect", "usePortalMountNode", "usePortalMountNode", "React", "React", "React", "React", "React", "size", "React", "React", "React", "jsx", "React", "React", "import_react", "React", "size", "labelClassNames", "root", "required", "useStyles", "__styles", "Bahqtrf", "sj55zd", "disabled", "Bbusuzp", "uwmqm3", "small", "Be2twd7", "Bg96gwp", "medium", "large", "Bhrd7zp", "semibold", "d", "m", "useLabelStyles_unstable", "state", "styles", "className", "mergeClasses", "size", "weight", "React", "React", "size", "useId", "fieldClassNames", "root", "label", "validationMessage", "validationMessageIcon", "hint", "useRootStyles", "__styles", "base", "mc9l5x", "horizontal", "Budl1dq", "wkccdc", "horizontalNoLabel", "uwmqm3", "d", "useLabelStyles", "vertical", "z8tnut", "Byoj8tv", "jrapky", "verticalLarge", "t21cq0", "Ijaq50", "nk6f5a", "horizontalSmall", "horizontalLarge", "useSecondaryTextBaseClassName", "__resetStyles", "useSecondaryTextStyles", "error", "sj55zd", "withIcon", "useValidationMessageIconBaseClassName", "useValidationMessageIconStyles", "warning", "success", "useFieldStyles_unstable", "state", "validationState", "size", "orientation", "rootStyles", "root", "className", "mergeClasses", "fieldClassNames", "label", "labelStyles", "validationMessageIconBaseClassName", "validationMessageIconStyles", "validationMessageIcon", "secondaryTextBaseClassName", "secondaryTextStyles", "validationMessage", "hint", "React", "React", "React", "size", "inputClassNames", "root", "input", "contentBefore", "contentAfter", "horizontalPadding", "root", "small", "tokens", "spacingHorizontalSNudge", "medium", "spacingHorizontalMNudge", "large", "spacingHorizontalM", "input", "spacingHorizontalXXS", "combined", "spacingHorizontalS", "useRootClassName", "__resetStyles", "r", "s", "useRootStyles", "__styles", "sshi5w", "Bahqtrf", "Be2twd7", "Bhrd7zp", "Bg96gwp", "i8kkvl", "Belr9w4", "rmohyg", "outline", "outlineInteractive", "Bgoe8wy", "Bwzppfd", "oetu4i", "gg5e9n", "Drbcw7", "udz0bu", "Be8ivqh", "ofdepl", "underline", "De3pzq", "Beyfa6y", "Bbmb7ep", "Btl43ni", "B7oj6ja", "Dimara", "icvyot", "vrafjx", "wvpqe5", "Eqx8gd", "B1piin3", "underlineInteractive", "d9w3h3", "B3778ie", "B4j8arr", "Bl18szs", "Blrzh8d", "filled", "g2u3we", "h3c5rm", "B9xav0g", "zhjwy3", "filledInteractive", "q7v0qe", "kmh5ft", "nagaa4", "B1yhkcb", "invalid", "tvckwq", "gk2u95", "hhx65j", "Bxowmz0", "E5pizo", "disabled", "Bceei9c", "Bjwas2f", "Bn1d65q", "Bxeuatn", "n51gp8", "Bsft5z2", "Bduesf4", "smallWithContentBefore", "uwmqm3", "smallWithContentAfter", "z189sj", "mediumWithContentBefore", "mediumWithContentAfter", "largeWithContentBefore", "largeWithContentAfter", "d", "p", "h", "a", "m", "w", "useInputClassName", "useInputElementStyles", "sj55zd", "yvdlaj", "useContentClassName", "useContentStyles", "Duoase", "useInputStyles_unstable", "state", "size", "appearance", "startsWith", "rootStyles", "inputStyles", "contentStyles", "className", "mergeClasses", "inputClassNames", "contentBefore", "contentAfter", "contentClasses", "React", "React"]
}
