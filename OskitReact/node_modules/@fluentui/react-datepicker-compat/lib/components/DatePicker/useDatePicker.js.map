{"version":3,"sources":["useDatePicker.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ArrowDown, Enter, Escape } from '@fluentui/keyboard-keys';\nimport { Calendar, compareDatePart, DayOfWeek, FirstWeekOfYear } from '@fluentui/react-calendar-compat';\nimport { CalendarMonthRegular } from '@fluentui/react-icons';\nimport { defaultDatePickerStrings } from './defaults';\nimport { Input } from '@fluentui/react-input';\nimport {\n  mergeCallbacks,\n  useControllableState,\n  useEventCallback,\n  useId,\n  useMergedRefs,\n  useOnClickOutside,\n  useOnScrollOutside,\n  slot,\n} from '@fluentui/react-utilities';\nimport { useFieldContext_unstable as useFieldContext } from '@fluentui/react-field';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\nimport { useModalAttributes } from '@fluentui/react-tabster';\nimport { usePopupPositioning } from '../../utils/usePopupPositioning';\nimport type { CalendarProps, ICalendar } from '@fluentui/react-calendar-compat';\nimport type { DatePickerProps, DatePickerState, DatePickerValidationResultData } from './DatePicker.types';\nimport type { InputProps, InputOnChangeData } from '@fluentui/react-input';\n\nfunction isDateOutOfBounds(date: Date, minDate?: Date, maxDate?: Date): boolean {\n  return (!!minDate && compareDatePart(minDate!, date) > 0) || (!!maxDate && compareDatePart(maxDate!, date) < 0);\n}\n\nfunction useFocusLogic() {\n  const inputRef = React.useRef<HTMLInputElement>(null);\n  const preventFocusOpeningPicker = React.useRef(false);\n\n  const focus = React.useCallback(() => {\n    inputRef.current?.focus?.();\n  }, []);\n\n  const preventNextFocusOpeningPicker = React.useCallback(() => {\n    preventFocusOpeningPicker.current = true;\n  }, []);\n\n  return [focus, inputRef, preventFocusOpeningPicker, preventNextFocusOpeningPicker] as const;\n}\n\nfunction usePopupVisibility(props: DatePickerProps) {\n  'use no memo';\n\n  const [open, setOpen] = useControllableState({\n    initialState: false,\n    defaultState: props.defaultOpen,\n    state: props.open,\n  });\n  const isMounted = React.useRef(false);\n\n  React.useEffect(\n    () => {\n      if (isMounted.current && !open) {\n        // If DatePicker's menu (Calendar) is closed, run onAfterMenuDismiss\n        props.onOpenChange?.(false);\n      }\n      isMounted.current = true;\n    },\n    // Should only run on allowTextInput or open change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [props.allowTextInput, open],\n  );\n\n  return [open, setOpen] as const;\n}\n\nfunction useSelectedDate({ formatDate, onSelectDate, value }: DatePickerProps) {\n  const [selectedDate, setSelectedDateState] = useControllableState<Date | null | undefined>({\n    initialState: null,\n    state: value,\n  });\n  const [formattedDate, setFormattedDate] = React.useState(() => (value && formatDate ? formatDate(value) : ''));\n\n  const setSelectedDate = (newDate: Date | null | undefined) => {\n    onSelectDate?.(newDate);\n    setSelectedDateState(newDate);\n    setFormattedDate(newDate && formatDate ? formatDate(newDate) : '');\n  };\n\n  React.useEffect(() => {\n    setFormattedDate(value && formatDate ? formatDate(value) : '');\n  }, [formatDate, value]);\n\n  return [selectedDate, formattedDate, setSelectedDate, setFormattedDate] as const;\n}\n\nconst defaultFormatDate = (date?: Date) => (date ? date.toDateString() : '');\nconst defaultParseDateFromString = (dateStr: string) => {\n  const date = Date.parse(dateStr);\n  return date ? new Date(date) : null;\n};\n\n/**\n * Create the state required to render DatePicker.\n *\n * The returned state can be modified with hooks such as useDatePickerStyles_unstable,\n * before being passed to renderDatePicker_unstable.\n *\n * @param props - props from this instance of DatePicker\n * @param ref - reference to root Input slot\n */\nexport const useDatePicker_unstable = (props: DatePickerProps, ref: React.Ref<HTMLInputElement>): DatePickerState => {\n  'use no memo';\n\n  const {\n    allowTextInput = false,\n    allFocusable = false,\n    borderless = false,\n    dateTimeFormatter,\n    defaultOpen = false,\n    disableAutoFocus = true,\n    firstDayOfWeek = DayOfWeek.Sunday,\n    firstWeekOfYear = FirstWeekOfYear.FirstDay,\n    formatDate = defaultFormatDate,\n    highlightCurrentMonth = false,\n    highlightSelectedMonth = false,\n    initialPickerDate: initialPickerDateProp,\n    inlinePopup = false,\n    isMonthPickerVisible = true,\n    maxDate,\n    minDate,\n    mountNode,\n    onOpenChange,\n    onSelectDate: onUserSelectDate,\n    openOnClick = true,\n    onValidationResult,\n    parseDateFromString = defaultParseDateFromString,\n    showCloseButton = false,\n    showGoToToday = true,\n    showMonthPickerAsOverlay = false,\n    showWeekNumbers = false,\n    strings = defaultDatePickerStrings,\n    today,\n    underlined = false,\n    value,\n    ...restOfProps\n  } = props;\n\n  const initialPickerDate = React.useMemo(() => initialPickerDateProp ?? new Date(), [initialPickerDateProp]);\n\n  const calendar = React.useRef<ICalendar>(null);\n  const [focus, rootRef, preventFocusOpeningPicker, preventNextFocusOpeningPicker] = useFocusLogic();\n  const [selectedDate, formattedDate, setSelectedDate, setFormattedDate] = useSelectedDate({\n    formatDate,\n    onSelectDate: onUserSelectDate,\n    value,\n  });\n  const [open, setOpenState] = usePopupVisibility(props);\n  const fieldContext = useFieldContext();\n  const required = fieldContext?.required ?? props.required;\n  const defaultId = useId('datePicker-input');\n  const popupSurfaceId = useId('datePicker-popupSurface');\n\n  const validateTextInput = React.useCallback(\n    (date: Date | null = null): void => {\n      let error: DatePickerValidationResultData['error'];\n\n      if (allowTextInput) {\n        if (formattedDate || date) {\n          // Don't parse if the selected date has the same formatted string as what we're about to parse.\n          // The formatted string might be ambiguous (ex: \"1/2/3\" or \"New Year Eve\") and the parser might\n          // not be able to come up with the exact same date.\n          if (selectedDate && formatDate && formatDate(date ?? selectedDate) === formattedDate) {\n            return;\n          }\n          date = date || parseDateFromString!(formattedDate);\n\n          // Check if date is null or date is an invalid date\n          if (!date || isNaN(date.getTime())) {\n            // Reset input if formatting is available\n            setSelectedDate(selectedDate);\n            error = 'invalid-input';\n          } else {\n            if (isDateOutOfBounds(date, minDate, maxDate)) {\n              error = 'out-of-bounds';\n            } else {\n              setSelectedDate(date);\n            }\n          }\n        } else {\n          if (required) {\n            error = 'required-input';\n          }\n\n          onUserSelectDate?.(date);\n        }\n      } else if (required && !formattedDate) {\n        error = 'required-input';\n      }\n\n      onValidationResult?.({ error });\n    },\n    [\n      allowTextInput,\n      formatDate,\n      formattedDate,\n      maxDate,\n      minDate,\n      onUserSelectDate,\n      onValidationResult,\n      parseDateFromString,\n      required,\n      selectedDate,\n      setSelectedDate,\n    ],\n  );\n\n  const setOpen = React.useCallback(\n    (newState: boolean) => {\n      onOpenChange?.(newState);\n      setOpenState(newState);\n\n      if (!open && !props.disabled) {\n        focus();\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [focus, onOpenChange, props.disabled, setOpenState],\n  );\n\n  const dismissDatePickerPopup = React.useCallback(\n    (newlySelectedDate?: Date | null): void => {\n      if (open) {\n        setOpen(false);\n\n        validateTextInput(newlySelectedDate);\n        if (!allowTextInput && newlySelectedDate) {\n          setSelectedDate(newlySelectedDate);\n        }\n      }\n    },\n    [allowTextInput, open, setOpen, setSelectedDate, validateTextInput],\n  );\n\n  const showDatePickerPopup = React.useCallback((): void => {\n    if (!open) {\n      preventNextFocusOpeningPicker();\n      setOpen(true);\n    }\n  }, [open, preventNextFocusOpeningPicker, setOpen]);\n\n  /**\n   * Callback for closing the calendar callout\n   */\n  const calendarDismissed = React.useCallback(\n    (newlySelectedDate?: Date): void => {\n      preventNextFocusOpeningPicker();\n      dismissDatePickerPopup(newlySelectedDate);\n    },\n    [dismissDatePickerPopup, preventNextFocusOpeningPicker],\n  );\n\n  const onInputChange = React.useCallback(\n    (ev: React.ChangeEvent<HTMLInputElement>, data: InputOnChangeData) => {\n      const { value: newValue } = data;\n\n      if (allowTextInput) {\n        if (open) {\n          dismissDatePickerPopup();\n        }\n\n        setFormattedDate(newValue);\n      }\n    },\n    [allowTextInput, dismissDatePickerPopup, open, setFormattedDate],\n  );\n\n  const onInputBlur: React.FocusEventHandler<HTMLInputElement> = React.useCallback((): void => {\n    validateTextInput();\n  }, [validateTextInput]);\n\n  const onInputKeyDown = React.useCallback(\n    (ev: React.KeyboardEvent<HTMLElement>): void => {\n      switch (ev.key) {\n        case Enter:\n          ev.preventDefault();\n          ev.stopPropagation();\n          if (!open) {\n            validateTextInput();\n            showDatePickerPopup();\n          } else {\n            // When DatePicker allows input date string directly,\n            // it is expected to hit another enter to close the popup\n            if (props.allowTextInput) {\n              dismissDatePickerPopup();\n            }\n          }\n          break;\n\n        case Escape:\n          ev.stopPropagation();\n          ev.preventDefault();\n          if (open) {\n            calendarDismissed();\n          }\n          break;\n\n        case ArrowDown:\n          ev.preventDefault();\n          if (!open) {\n            showDatePickerPopup();\n          }\n          break;\n\n        default:\n          break;\n      }\n    },\n    [calendarDismissed, dismissDatePickerPopup, open, props.allowTextInput, showDatePickerPopup, validateTextInput],\n  );\n\n  const onInputFocus: React.FocusEventHandler<HTMLInputElement> = React.useCallback((): void => {\n    if (disableAutoFocus) {\n      return;\n    }\n\n    if (!allowTextInput) {\n      if (!preventFocusOpeningPicker.current) {\n        showDatePickerPopup();\n      }\n      preventFocusOpeningPicker.current = false;\n    }\n  }, [allowTextInput, disableAutoFocus, preventFocusOpeningPicker, showDatePickerPopup]);\n\n  const onInputClick: React.MouseEventHandler<HTMLInputElement> = React.useCallback((): void => {\n    // default openOnClick to !props.disableAutoFocus for legacy support of disableAutoFocus behavior\n    if ((props.openOnClick || !props.disableAutoFocus) && !open && !props.disabled) {\n      showDatePickerPopup();\n      return;\n    }\n\n    if (allowTextInput) {\n      dismissDatePickerPopup();\n    }\n  }, [\n    allowTextInput,\n    dismissDatePickerPopup,\n    open,\n    props.disabled,\n    props.disableAutoFocus,\n    props.openOnClick,\n    showDatePickerPopup,\n  ]);\n\n  const onIconClick = (ev: React.MouseEvent<HTMLElement>): void => {\n    ev.stopPropagation();\n    if (!open && !props.disabled) {\n      showDatePickerPopup();\n    } else if (props.allowTextInput) {\n      dismissDatePickerPopup();\n    }\n  };\n\n  const inputAppearance: InputProps['appearance'] = underlined\n    ? 'underline'\n    : borderless\n    ? 'filled-lighter'\n    : 'outline';\n\n  const [triggerWrapperRef, popupRef] = usePopupPositioning(props);\n\n  const inputRoot = slot.always(props.root, {\n    defaultProps: {\n      ref: triggerWrapperRef,\n    },\n    elementType: 'span',\n  });\n  inputRoot.ref = useMergedRefs(inputRoot.ref, triggerWrapperRef);\n\n  const input = slot.always(props.input, {\n    elementType: 'input',\n  });\n  input.ref = useMergedRefs(input.ref, ref, rootRef);\n\n  // Props to create a semantic but non-focusable button on the element with the click-to-open handler\n  // Used for voice control and touch screen reader accessibility\n  const inputLabelledBy = props['aria-labelledby'];\n  const inputId = props.id ?? defaultId;\n  const iconA11yProps = React.useMemo(\n    () => ({\n      role: 'button',\n      'aria-expanded': open,\n      'aria-labelledby': inputLabelledBy ?? inputId,\n    }),\n    [open, inputLabelledBy, inputId],\n  );\n\n  const contentAfter = slot.always(props.contentAfter || {}, {\n    defaultProps: {\n      children: <CalendarMonthRegular />,\n      ...iconA11yProps,\n    },\n    elementType: 'span',\n  });\n  contentAfter.onClick = useEventCallback(mergeCallbacks(contentAfter.onClick, onIconClick));\n\n  const root = slot.always(restOfProps, {\n    defaultProps: {\n      appearance: inputAppearance,\n      'aria-controls': open ? popupSurfaceId : undefined,\n      'aria-expanded': open,\n      'aria-haspopup': 'dialog',\n      readOnly: !allowTextInput,\n      role: 'combobox',\n      id: inputId,\n    },\n    elementType: Input,\n  });\n  root.root = inputRoot;\n  root.input = input;\n  root.contentAfter = contentAfter;\n  root.onChange = useEventCallback(mergeCallbacks(root.onChange, onInputChange));\n  root.onBlur = useEventCallback(mergeCallbacks(root.onBlur, onInputBlur));\n  root.onKeyDown = useEventCallback(mergeCallbacks(root.onKeyDown, onInputKeyDown));\n  root.onFocus = useEventCallback(mergeCallbacks(root.onFocus, onInputFocus));\n  root.onClick = useEventCallback(mergeCallbacks(root.onClick, onInputClick));\n\n  const { modalAttributes } = useModalAttributes({ trapFocus: true, alwaysFocusable: true, legacyTrapFocus: true });\n  const popupSurface = open\n    ? slot.optional(props.popupSurface, {\n        renderByDefault: true,\n        defaultProps: {\n          'aria-label': 'Calendar',\n          'aria-modal': true,\n          id: popupSurfaceId,\n          role: 'dialog',\n          ref: popupRef,\n          ...modalAttributes,\n        },\n        elementType: 'div',\n      })\n    : undefined;\n  const { targetDocument } = useFluent();\n  useOnClickOutside({\n    element: targetDocument,\n    callback: ev => dismissDatePickerPopup(),\n    refs: [triggerWrapperRef, popupRef],\n    disabled: !open,\n  });\n  useOnScrollOutside({\n    element: targetDocument,\n    callback: ev => dismissDatePickerPopup(),\n    refs: [triggerWrapperRef, popupRef],\n    disabled: !open,\n  }); // When the popup is opened, focus should go to the calendar.\n  // In v8 this was done by focusing after the callout was positioned, but in v9 this can be simulated by using a\n  // useEffect hook.\n  React.useEffect(() => {\n    if (open && !props.disabled && calendar.current) {\n      calendar.current.focus();\n    }\n  }, [disableAutoFocus, open, props.disabled]);\n  const calendarShorthand = slot.always(props.calendar, {\n    defaultProps: {\n      allFocusable,\n      componentRef: calendar,\n      dateTimeFormatter,\n      firstDayOfWeek,\n      firstWeekOfYear,\n      highlightCurrentMonth,\n      highlightSelectedMonth,\n      isMonthPickerVisible,\n      maxDate,\n      minDate,\n      showCloseButton,\n      showGoToToday,\n      showMonthPickerAsOverlay,\n      showWeekNumbers,\n      strings,\n      today,\n      value: selectedDate || initialPickerDate,\n    },\n    elementType: Calendar,\n  });\n  calendarShorthand.onDismiss = useEventCallback(mergeCallbacks(calendarShorthand.onDismiss, calendarDismissed));\n  calendarShorthand.onSelectDate = useEventCallback(mergeCallbacks(calendarShorthand.onSelectDate, calendarDismissed));\n  const state: DatePickerState = {\n    disabled: !!props.disabled,\n    inlinePopup,\n    components: { root: Input, calendar: Calendar as React.FC<Partial<CalendarProps>>, popupSurface: 'div' },\n    calendar: calendarShorthand,\n    mountNode,\n    root,\n    popupSurface,\n  };\n\n  state.root.value = formattedDate;\n\n  return state;\n};\n"],"names":["React","ArrowDown","Enter","Escape","Calendar","compareDatePart","DayOfWeek","FirstWeekOfYear","CalendarMonthRegular","defaultDatePickerStrings","Input","mergeCallbacks","useControllableState","useEventCallback","useId","useMergedRefs","useOnClickOutside","useOnScrollOutside","slot","useFieldContext_unstable","useFieldContext","useFluent_unstable","useFluent","useModalAttributes","usePopupPositioning","isDateOutOfBounds","date","minDate","maxDate","useFocusLogic","inputRef","useRef","preventFocusOpeningPicker","focus","useCallback","current","preventNextFocusOpeningPicker","usePopupVisibility","props","open","setOpen","initialState","defaultState","defaultOpen","state","isMounted","useEffect","onOpenChange","allowTextInput","useSelectedDate","formatDate","onSelectDate","value","selectedDate","setSelectedDateState","formattedDate","setFormattedDate","useState","setSelectedDate","newDate","defaultFormatDate","toDateString","defaultParseDateFromString","dateStr","Date","parse","useDatePicker_unstable","ref","allFocusable","borderless","dateTimeFormatter","disableAutoFocus","firstDayOfWeek","Sunday","firstWeekOfYear","FirstDay","highlightCurrentMonth","highlightSelectedMonth","initialPickerDate","initialPickerDateProp","inlinePopup","isMonthPickerVisible","mountNode","onUserSelectDate","openOnClick","onValidationResult","parseDateFromString","showCloseButton","showGoToToday","showMonthPickerAsOverlay","showWeekNumbers","strings","today","underlined","restOfProps","useMemo","calendar","rootRef","setOpenState","fieldContext","required","defaultId","popupSurfaceId","validateTextInput","error","isNaN","getTime","newState","disabled","dismissDatePickerPopup","newlySelectedDate","showDatePickerPopup","calendarDismissed","onInputChange","ev","data","newValue","onInputBlur","onInputKeyDown","key","preventDefault","stopPropagation","onInputFocus","onInputClick","onIconClick","inputAppearance","triggerWrapperRef","popupRef","inputRoot","always","root","defaultProps","elementType","input","inputLabelledBy","inputId","id","iconA11yProps","role","contentAfter","children","onClick","appearance","undefined","readOnly","onChange","onBlur","onKeyDown","onFocus","modalAttributes","trapFocus","alwaysFocusable","legacyTrapFocus","popupSurface","optional","renderByDefault","targetDocument","element","callback","refs","calendarShorthand","componentRef","onDismiss","components"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}