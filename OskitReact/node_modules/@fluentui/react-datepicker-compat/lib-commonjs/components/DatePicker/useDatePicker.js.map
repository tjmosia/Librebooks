{"version":3,"sources":["useDatePicker.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ArrowDown, Enter, Escape } from '@fluentui/keyboard-keys';\nimport { Calendar, compareDatePart, DayOfWeek, FirstWeekOfYear } from '@fluentui/react-calendar-compat';\nimport { CalendarMonthRegular } from '@fluentui/react-icons';\nimport { defaultDatePickerStrings } from './defaults';\nimport { Input } from '@fluentui/react-input';\nimport {\n  mergeCallbacks,\n  useControllableState,\n  useEventCallback,\n  useId,\n  useMergedRefs,\n  useOnClickOutside,\n  useOnScrollOutside,\n  slot,\n} from '@fluentui/react-utilities';\nimport { useFieldContext_unstable as useFieldContext } from '@fluentui/react-field';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\nimport { useModalAttributes } from '@fluentui/react-tabster';\nimport { usePopupPositioning } from '../../utils/usePopupPositioning';\nimport type { CalendarProps, ICalendar } from '@fluentui/react-calendar-compat';\nimport type { DatePickerProps, DatePickerState, DatePickerValidationResultData } from './DatePicker.types';\nimport type { InputProps, InputOnChangeData } from '@fluentui/react-input';\n\nfunction isDateOutOfBounds(date: Date, minDate?: Date, maxDate?: Date): boolean {\n  return (!!minDate && compareDatePart(minDate!, date) > 0) || (!!maxDate && compareDatePart(maxDate!, date) < 0);\n}\n\nfunction useFocusLogic() {\n  const inputRef = React.useRef<HTMLInputElement>(null);\n  const preventFocusOpeningPicker = React.useRef(false);\n\n  const focus = React.useCallback(() => {\n    inputRef.current?.focus?.();\n  }, []);\n\n  const preventNextFocusOpeningPicker = React.useCallback(() => {\n    preventFocusOpeningPicker.current = true;\n  }, []);\n\n  return [focus, inputRef, preventFocusOpeningPicker, preventNextFocusOpeningPicker] as const;\n}\n\nfunction usePopupVisibility(props: DatePickerProps) {\n  'use no memo';\n\n  const [open, setOpen] = useControllableState({\n    initialState: false,\n    defaultState: props.defaultOpen,\n    state: props.open,\n  });\n  const isMounted = React.useRef(false);\n\n  React.useEffect(\n    () => {\n      if (isMounted.current && !open) {\n        // If DatePicker's menu (Calendar) is closed, run onAfterMenuDismiss\n        props.onOpenChange?.(false);\n      }\n      isMounted.current = true;\n    },\n    // Should only run on allowTextInput or open change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [props.allowTextInput, open],\n  );\n\n  return [open, setOpen] as const;\n}\n\nfunction useSelectedDate({ formatDate, onSelectDate, value }: DatePickerProps) {\n  const [selectedDate, setSelectedDateState] = useControllableState<Date | null | undefined>({\n    initialState: null,\n    state: value,\n  });\n  const [formattedDate, setFormattedDate] = React.useState(() => (value && formatDate ? formatDate(value) : ''));\n\n  const setSelectedDate = (newDate: Date | null | undefined) => {\n    onSelectDate?.(newDate);\n    setSelectedDateState(newDate);\n    setFormattedDate(newDate && formatDate ? formatDate(newDate) : '');\n  };\n\n  React.useEffect(() => {\n    setFormattedDate(value && formatDate ? formatDate(value) : '');\n  }, [formatDate, value]);\n\n  return [selectedDate, formattedDate, setSelectedDate, setFormattedDate] as const;\n}\n\nconst defaultFormatDate = (date?: Date) => (date ? date.toDateString() : '');\nconst defaultParseDateFromString = (dateStr: string) => {\n  const date = Date.parse(dateStr);\n  return date ? new Date(date) : null;\n};\n\n/**\n * Create the state required to render DatePicker.\n *\n * The returned state can be modified with hooks such as useDatePickerStyles_unstable,\n * before being passed to renderDatePicker_unstable.\n *\n * @param props - props from this instance of DatePicker\n * @param ref - reference to root Input slot\n */\nexport const useDatePicker_unstable = (props: DatePickerProps, ref: React.Ref<HTMLInputElement>): DatePickerState => {\n  'use no memo';\n\n  const {\n    allowTextInput = false,\n    allFocusable = false,\n    borderless = false,\n    dateTimeFormatter,\n    defaultOpen = false,\n    disableAutoFocus = true,\n    firstDayOfWeek = DayOfWeek.Sunday,\n    firstWeekOfYear = FirstWeekOfYear.FirstDay,\n    formatDate = defaultFormatDate,\n    highlightCurrentMonth = false,\n    highlightSelectedMonth = false,\n    initialPickerDate: initialPickerDateProp,\n    inlinePopup = false,\n    isMonthPickerVisible = true,\n    maxDate,\n    minDate,\n    mountNode,\n    onOpenChange,\n    onSelectDate: onUserSelectDate,\n    openOnClick = true,\n    onValidationResult,\n    parseDateFromString = defaultParseDateFromString,\n    showCloseButton = false,\n    showGoToToday = true,\n    showMonthPickerAsOverlay = false,\n    showWeekNumbers = false,\n    strings = defaultDatePickerStrings,\n    today,\n    underlined = false,\n    value,\n    ...restOfProps\n  } = props;\n\n  const initialPickerDate = React.useMemo(() => initialPickerDateProp ?? new Date(), [initialPickerDateProp]);\n\n  const calendar = React.useRef<ICalendar>(null);\n  const [focus, rootRef, preventFocusOpeningPicker, preventNextFocusOpeningPicker] = useFocusLogic();\n  const [selectedDate, formattedDate, setSelectedDate, setFormattedDate] = useSelectedDate({\n    formatDate,\n    onSelectDate: onUserSelectDate,\n    value,\n  });\n  const [open, setOpenState] = usePopupVisibility(props);\n  const fieldContext = useFieldContext();\n  const required = fieldContext?.required ?? props.required;\n  const defaultId = useId('datePicker-input');\n  const popupSurfaceId = useId('datePicker-popupSurface');\n\n  const validateTextInput = React.useCallback(\n    (date: Date | null = null): void => {\n      let error: DatePickerValidationResultData['error'];\n\n      if (allowTextInput) {\n        if (formattedDate || date) {\n          // Don't parse if the selected date has the same formatted string as what we're about to parse.\n          // The formatted string might be ambiguous (ex: \"1/2/3\" or \"New Year Eve\") and the parser might\n          // not be able to come up with the exact same date.\n          if (selectedDate && formatDate && formatDate(date ?? selectedDate) === formattedDate) {\n            return;\n          }\n          date = date || parseDateFromString!(formattedDate);\n\n          // Check if date is null or date is an invalid date\n          if (!date || isNaN(date.getTime())) {\n            // Reset input if formatting is available\n            setSelectedDate(selectedDate);\n            error = 'invalid-input';\n          } else {\n            if (isDateOutOfBounds(date, minDate, maxDate)) {\n              error = 'out-of-bounds';\n            } else {\n              setSelectedDate(date);\n            }\n          }\n        } else {\n          if (required) {\n            error = 'required-input';\n          }\n\n          onUserSelectDate?.(date);\n        }\n      } else if (required && !formattedDate) {\n        error = 'required-input';\n      }\n\n      onValidationResult?.({ error });\n    },\n    [\n      allowTextInput,\n      formatDate,\n      formattedDate,\n      maxDate,\n      minDate,\n      onUserSelectDate,\n      onValidationResult,\n      parseDateFromString,\n      required,\n      selectedDate,\n      setSelectedDate,\n    ],\n  );\n\n  const setOpen = React.useCallback(\n    (newState: boolean) => {\n      onOpenChange?.(newState);\n      setOpenState(newState);\n\n      if (!open && !props.disabled) {\n        focus();\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [focus, onOpenChange, props.disabled, setOpenState],\n  );\n\n  const dismissDatePickerPopup = React.useCallback(\n    (newlySelectedDate?: Date | null): void => {\n      if (open) {\n        setOpen(false);\n\n        validateTextInput(newlySelectedDate);\n        if (!allowTextInput && newlySelectedDate) {\n          setSelectedDate(newlySelectedDate);\n        }\n      }\n    },\n    [allowTextInput, open, setOpen, setSelectedDate, validateTextInput],\n  );\n\n  const showDatePickerPopup = React.useCallback((): void => {\n    if (!open) {\n      preventNextFocusOpeningPicker();\n      setOpen(true);\n    }\n  }, [open, preventNextFocusOpeningPicker, setOpen]);\n\n  /**\n   * Callback for closing the calendar callout\n   */\n  const calendarDismissed = React.useCallback(\n    (newlySelectedDate?: Date): void => {\n      preventNextFocusOpeningPicker();\n      dismissDatePickerPopup(newlySelectedDate);\n    },\n    [dismissDatePickerPopup, preventNextFocusOpeningPicker],\n  );\n\n  const onInputChange = React.useCallback(\n    (ev: React.ChangeEvent<HTMLInputElement>, data: InputOnChangeData) => {\n      const { value: newValue } = data;\n\n      if (allowTextInput) {\n        if (open) {\n          dismissDatePickerPopup();\n        }\n\n        setFormattedDate(newValue);\n      }\n    },\n    [allowTextInput, dismissDatePickerPopup, open, setFormattedDate],\n  );\n\n  const onInputBlur: React.FocusEventHandler<HTMLInputElement> = React.useCallback((): void => {\n    validateTextInput();\n  }, [validateTextInput]);\n\n  const onInputKeyDown = React.useCallback(\n    (ev: React.KeyboardEvent<HTMLElement>): void => {\n      switch (ev.key) {\n        case Enter:\n          ev.preventDefault();\n          ev.stopPropagation();\n          if (!open) {\n            validateTextInput();\n            showDatePickerPopup();\n          } else {\n            // When DatePicker allows input date string directly,\n            // it is expected to hit another enter to close the popup\n            if (props.allowTextInput) {\n              dismissDatePickerPopup();\n            }\n          }\n          break;\n\n        case Escape:\n          ev.stopPropagation();\n          ev.preventDefault();\n          if (open) {\n            calendarDismissed();\n          }\n          break;\n\n        case ArrowDown:\n          ev.preventDefault();\n          if (!open) {\n            showDatePickerPopup();\n          }\n          break;\n\n        default:\n          break;\n      }\n    },\n    [calendarDismissed, dismissDatePickerPopup, open, props.allowTextInput, showDatePickerPopup, validateTextInput],\n  );\n\n  const onInputFocus: React.FocusEventHandler<HTMLInputElement> = React.useCallback((): void => {\n    if (disableAutoFocus) {\n      return;\n    }\n\n    if (!allowTextInput) {\n      if (!preventFocusOpeningPicker.current) {\n        showDatePickerPopup();\n      }\n      preventFocusOpeningPicker.current = false;\n    }\n  }, [allowTextInput, disableAutoFocus, preventFocusOpeningPicker, showDatePickerPopup]);\n\n  const onInputClick: React.MouseEventHandler<HTMLInputElement> = React.useCallback((): void => {\n    // default openOnClick to !props.disableAutoFocus for legacy support of disableAutoFocus behavior\n    if ((props.openOnClick || !props.disableAutoFocus) && !open && !props.disabled) {\n      showDatePickerPopup();\n      return;\n    }\n\n    if (allowTextInput) {\n      dismissDatePickerPopup();\n    }\n  }, [\n    allowTextInput,\n    dismissDatePickerPopup,\n    open,\n    props.disabled,\n    props.disableAutoFocus,\n    props.openOnClick,\n    showDatePickerPopup,\n  ]);\n\n  const onIconClick = (ev: React.MouseEvent<HTMLElement>): void => {\n    ev.stopPropagation();\n    if (!open && !props.disabled) {\n      showDatePickerPopup();\n    } else if (props.allowTextInput) {\n      dismissDatePickerPopup();\n    }\n  };\n\n  const inputAppearance: InputProps['appearance'] = underlined\n    ? 'underline'\n    : borderless\n    ? 'filled-lighter'\n    : 'outline';\n\n  const [triggerWrapperRef, popupRef] = usePopupPositioning(props);\n\n  const inputRoot = slot.always(props.root, {\n    defaultProps: {\n      ref: triggerWrapperRef,\n    },\n    elementType: 'span',\n  });\n  inputRoot.ref = useMergedRefs(inputRoot.ref, triggerWrapperRef);\n\n  const input = slot.always(props.input, {\n    elementType: 'input',\n  });\n  input.ref = useMergedRefs(input.ref, ref, rootRef);\n\n  // Props to create a semantic but non-focusable button on the element with the click-to-open handler\n  // Used for voice control and touch screen reader accessibility\n  const inputLabelledBy = props['aria-labelledby'];\n  const inputId = props.id ?? defaultId;\n  const iconA11yProps = React.useMemo(\n    () => ({\n      role: 'button',\n      'aria-expanded': open,\n      'aria-labelledby': inputLabelledBy ?? inputId,\n    }),\n    [open, inputLabelledBy, inputId],\n  );\n\n  const contentAfter = slot.always(props.contentAfter || {}, {\n    defaultProps: {\n      children: <CalendarMonthRegular />,\n      ...iconA11yProps,\n    },\n    elementType: 'span',\n  });\n  contentAfter.onClick = useEventCallback(mergeCallbacks(contentAfter.onClick, onIconClick));\n\n  const root = slot.always(restOfProps, {\n    defaultProps: {\n      appearance: inputAppearance,\n      'aria-controls': open ? popupSurfaceId : undefined,\n      'aria-expanded': open,\n      'aria-haspopup': 'dialog',\n      readOnly: !allowTextInput,\n      role: 'combobox',\n      id: inputId,\n    },\n    elementType: Input,\n  });\n  root.root = inputRoot;\n  root.input = input;\n  root.contentAfter = contentAfter;\n  root.onChange = useEventCallback(mergeCallbacks(root.onChange, onInputChange));\n  root.onBlur = useEventCallback(mergeCallbacks(root.onBlur, onInputBlur));\n  root.onKeyDown = useEventCallback(mergeCallbacks(root.onKeyDown, onInputKeyDown));\n  root.onFocus = useEventCallback(mergeCallbacks(root.onFocus, onInputFocus));\n  root.onClick = useEventCallback(mergeCallbacks(root.onClick, onInputClick));\n\n  const { modalAttributes } = useModalAttributes({ trapFocus: true, alwaysFocusable: true, legacyTrapFocus: true });\n  const popupSurface = open\n    ? slot.optional(props.popupSurface, {\n        renderByDefault: true,\n        defaultProps: {\n          'aria-label': 'Calendar',\n          'aria-modal': true,\n          id: popupSurfaceId,\n          role: 'dialog',\n          ref: popupRef,\n          ...modalAttributes,\n        },\n        elementType: 'div',\n      })\n    : undefined;\n  const { targetDocument } = useFluent();\n  useOnClickOutside({\n    element: targetDocument,\n    callback: ev => dismissDatePickerPopup(),\n    refs: [triggerWrapperRef, popupRef],\n    disabled: !open,\n  });\n  useOnScrollOutside({\n    element: targetDocument,\n    callback: ev => dismissDatePickerPopup(),\n    refs: [triggerWrapperRef, popupRef],\n    disabled: !open,\n  }); // When the popup is opened, focus should go to the calendar.\n  // In v8 this was done by focusing after the callout was positioned, but in v9 this can be simulated by using a\n  // useEffect hook.\n  React.useEffect(() => {\n    if (open && !props.disabled && calendar.current) {\n      calendar.current.focus();\n    }\n  }, [disableAutoFocus, open, props.disabled]);\n  const calendarShorthand = slot.always(props.calendar, {\n    defaultProps: {\n      allFocusable,\n      componentRef: calendar,\n      dateTimeFormatter,\n      firstDayOfWeek,\n      firstWeekOfYear,\n      highlightCurrentMonth,\n      highlightSelectedMonth,\n      isMonthPickerVisible,\n      maxDate,\n      minDate,\n      showCloseButton,\n      showGoToToday,\n      showMonthPickerAsOverlay,\n      showWeekNumbers,\n      strings,\n      today,\n      value: selectedDate || initialPickerDate,\n    },\n    elementType: Calendar,\n  });\n  calendarShorthand.onDismiss = useEventCallback(mergeCallbacks(calendarShorthand.onDismiss, calendarDismissed));\n  calendarShorthand.onSelectDate = useEventCallback(mergeCallbacks(calendarShorthand.onSelectDate, calendarDismissed));\n  const state: DatePickerState = {\n    disabled: !!props.disabled,\n    inlinePopup,\n    components: { root: Input, calendar: Calendar as React.FC<Partial<CalendarProps>>, popupSurface: 'div' },\n    calendar: calendarShorthand,\n    mountNode,\n    root,\n    popupSurface,\n  };\n\n  state.root.value = formattedDate;\n\n  return state;\n};\n"],"names":["useDatePicker_unstable","isDateOutOfBounds","date","minDate","maxDate","compareDatePart","useFocusLogic","inputRef","React","useRef","preventFocusOpeningPicker","focus","useCallback","current","preventNextFocusOpeningPicker","usePopupVisibility","props","open","setOpen","useControllableState","initialState","defaultState","defaultOpen","state","isMounted","useEffect","onOpenChange","allowTextInput","useSelectedDate","formatDate","onSelectDate","value","selectedDate","setSelectedDateState","formattedDate","setFormattedDate","useState","setSelectedDate","newDate","defaultFormatDate","toDateString","defaultParseDateFromString","dateStr","Date","parse","ref","allFocusable","borderless","dateTimeFormatter","disableAutoFocus","firstDayOfWeek","DayOfWeek","Sunday","firstWeekOfYear","FirstWeekOfYear","FirstDay","highlightCurrentMonth","highlightSelectedMonth","initialPickerDate","initialPickerDateProp","inlinePopup","isMonthPickerVisible","mountNode","onUserSelectDate","openOnClick","onValidationResult","parseDateFromString","showCloseButton","showGoToToday","showMonthPickerAsOverlay","showWeekNumbers","strings","defaultDatePickerStrings","today","underlined","restOfProps","useMemo","calendar","rootRef","setOpenState","fieldContext","useFieldContext","required","defaultId","useId","popupSurfaceId","validateTextInput","error","isNaN","getTime","newState","disabled","dismissDatePickerPopup","newlySelectedDate","showDatePickerPopup","calendarDismissed","onInputChange","ev","data","newValue","onInputBlur","onInputKeyDown","key","Enter","preventDefault","stopPropagation","Escape","ArrowDown","onInputFocus","onInputClick","onIconClick","inputAppearance","triggerWrapperRef","popupRef","usePopupPositioning","inputRoot","slot","always","root","defaultProps","elementType","useMergedRefs","input","inputLabelledBy","inputId","id","iconA11yProps","role","contentAfter","children","createElement","CalendarMonthRegular","onClick","useEventCallback","mergeCallbacks","appearance","undefined","readOnly","Input","onChange","onBlur","onKeyDown","onFocus","modalAttributes","useModalAttributes","trapFocus","alwaysFocusable","legacyTrapFocus","popupSurface","optional","renderByDefault","targetDocument","useFluent","useOnClickOutside","element","callback","refs","useOnScrollOutside","calendarShorthand","componentRef","Calendar","onDismiss","components"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}