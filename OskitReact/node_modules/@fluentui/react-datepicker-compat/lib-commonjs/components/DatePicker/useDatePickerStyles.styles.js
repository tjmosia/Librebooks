"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    datePickerClassNames: function() {
        return datePickerClassNames;
    },
    useDatePickerStyles_unstable: function() {
        return useDatePickerStyles_unstable;
    }
});
const _react = require("@griffel/react");
const datePickerClassNames = {
    root: 'fui-DatePicker',
    calendar: 'fui-DatePicker__calendar',
    popupSurface: 'fui-DatePicker__popupSurface'
};
const useStyles = /*#__PURE__*/ (0, _react.__styles)({
    base: {
        qhf8xq: "f10pi13n",
        Bceei9c: "f1k6fduh",
        xfaavh: "faxec97"
    },
    disabled: {
        Bceei9c: "f158kwzp",
        xfaavh: "f19qwlmg"
    },
    inline: {
        Bj3rh1h: "f19g0ac"
    }
}, {
    d: [
        ".f10pi13n{position:relative;}",
        ".f1k6fduh{cursor:pointer;}",
        ".faxec97 input{cursor:pointer;}",
        ".f158kwzp{cursor:default;}",
        ".f19qwlmg input{cursor:default;}",
        ".f19g0ac{z-index:1;}"
    ]
});
const usePopupSurfaceClassName = /*#__PURE__*/ (0, _react.__resetStyles)("r1ytv1z8", null, [
    ".r1ytv1z8{background-color:var(--colorNeutralBackground1);box-shadow:var(--shadow16);border-radius:var(--borderRadiusMedium);border-width:1px;border-style:solid;border-color:var(--colorTransparentStroke);display:inline-flex;color:var(--colorNeutralForeground1);font-family:var(--fontFamilyBase);font-size:var(--fontSizeBase300);font-weight:var(--fontWeightRegular);line-height:var(--lineHeightBase300);}"
]);
const useDatePickerStyles_unstable = (state)=>{
    'use no memo';
    const styles = useStyles();
    const popupSurfaceClassName = usePopupSurfaceClassName();
    const { disabled, inlinePopup } = state;
    state.root.className = (0, _react.mergeClasses)(datePickerClassNames.root, styles.base, disabled && styles.disabled, state.root.className);
    if (state.popupSurface) {
        state.popupSurface.className = (0, _react.mergeClasses)(datePickerClassNames.popupSurface, popupSurfaceClassName, state.popupSurface.className, inlinePopup && styles.inline);
    }
    state.calendar.className = (0, _react.mergeClasses)(datePickerClassNames.calendar, state.calendar.className);
    return state;
}; //# sourceMappingURL=useDatePickerStyles.styles.js.map
