{"version":3,"sources":["useCarouselCard.ts"],"sourcesContent":["import { useFocusableGroup } from '@fluentui/react-tabster';\nimport {\n  getIntrinsicElementProps,\n  isHTMLElement,\n  mergeCallbacks,\n  slot,\n  useMergedRefs,\n  useId,\n} from '@fluentui/react-utilities';\nimport * as React from 'react';\n\nimport { useCarouselContext_unstable as useCarouselContext } from '../CarouselContext';\nimport type { CarouselVisibilityChangeEvent } from '../Carousel/Carousel.types';\nimport { EMBLA_VISIBILITY_EVENT } from '../useEmblaCarousel';\nimport type { CarouselCardProps, CarouselCardState } from './CarouselCard.types';\nimport { carouselCardClassNames } from './useCarouselCardStyles.styles';\nimport { useCarouselSliderContext } from '../CarouselSlider/CarouselSliderContext';\n\n/**\n * Create the state required to render CarouselCard.\n *\n * The returned state can be modified with hooks such as useCarouselCardStyles_unstable,\n * before being passed to renderCarouselCard_unstable.\n *\n * @param props - props from this instance of CarouselCard\n * @param ref - reference to root HTMLDivElement of CarouselCard\n */\nexport const useCarouselCard_unstable = (\n  props: CarouselCardProps,\n  ref: React.Ref<HTMLDivElement>,\n): CarouselCardState => {\n  const { autoSize } = props;\n  const elementRef = React.useRef<HTMLDivElement>(null);\n  const isMouseEvent = React.useRef<boolean>(false);\n  const selectPageByElement = useCarouselContext(ctx => ctx.selectPageByElement);\n  const containerRef = useCarouselContext(ctx => ctx.containerRef);\n  const { cardFocus } = useCarouselSliderContext();\n\n  const focusAttr = useFocusableGroup({\n    tabBehavior: 'limited',\n  });\n  const focusAttrProps = cardFocus ? { ...focusAttr, tabIndex: 0 } : {};\n\n  // We attach a unique card id if user does not provide\n  const id = useId(carouselCardClassNames.root, props.id);\n\n  React.useEffect(() => {\n    const element = elementRef.current;\n\n    if (element) {\n      const listener = (_e: Event) => {\n        const event = _e as CarouselVisibilityChangeEvent;\n        // When there is no tab index present, only current cards should be visible to accessibility\n        if (!cardFocus) {\n          const hidden = !event.detail.isVisible;\n          element.ariaHidden = hidden.toString();\n          element.inert = hidden;\n        }\n      };\n\n      element.addEventListener(EMBLA_VISIBILITY_EVENT, listener);\n\n      return () => {\n        element.removeEventListener(EMBLA_VISIBILITY_EVENT, listener);\n      };\n    }\n  }, [cardFocus]);\n\n  const handleFocusCapture = React.useCallback(\n    (e: React.FocusEvent) => {\n      if (!e.defaultPrevented && isHTMLElement(e.currentTarget) && !isMouseEvent.current) {\n        // We want to prevent any browser scroll intervention for 'offscreen' focus\n        containerRef?.current?.scrollTo(0, 0);\n        selectPageByElement(e, e.currentTarget, false);\n      }\n    },\n    [selectPageByElement, containerRef],\n  );\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLDivElement>) => {\n    if (!e.defaultPrevented) {\n      isMouseEvent.current = true;\n    }\n  };\n  const handleMouseUp = (e: React.MouseEvent<HTMLDivElement>) => {\n    if (!e.defaultPrevented) {\n      isMouseEvent.current = false;\n    }\n  };\n\n  const onFocusCapture = mergeCallbacks(props.onFocusCapture, handleFocusCapture);\n  const onMouseUp = mergeCallbacks(props.onMouseUp, handleMouseUp);\n  const onMouseDown = mergeCallbacks(props.onMouseDown, handleMouseDown);\n  const state: CarouselCardState = {\n    autoSize,\n    components: {\n      root: 'div',\n    },\n    root: slot.always(\n      getIntrinsicElementProps('div', {\n        ref: useMergedRefs(elementRef, ref),\n        role: 'tabpanel',\n        tabIndex: cardFocus ? 0 : undefined,\n        ...props,\n        id,\n        onFocusCapture,\n        onMouseDown,\n        onMouseUp,\n        ...focusAttrProps,\n      }),\n      { elementType: 'div' },\n    ),\n  };\n\n  return state;\n};\n"],"names":["useFocusableGroup","getIntrinsicElementProps","isHTMLElement","mergeCallbacks","slot","useMergedRefs","useId","React","useCarouselContext_unstable","useCarouselContext","EMBLA_VISIBILITY_EVENT","carouselCardClassNames","useCarouselSliderContext","useCarouselCard_unstable","props","ref","autoSize","elementRef","useRef","isMouseEvent","selectPageByElement","ctx","containerRef","cardFocus","focusAttr","tabBehavior","focusAttrProps","tabIndex","id","root","useEffect","element","current","listener","_e","event","hidden","detail","isVisible","ariaHidden","toString","inert","addEventListener","removeEventListener","handleFocusCapture","useCallback","e","defaultPrevented","currentTarget","scrollTo","handleMouseDown","handleMouseUp","onFocusCapture","onMouseUp","onMouseDown","state","components","always","role","undefined","elementType"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}