{"version":3,"sources":["CarouselContext.types.ts"],"sourcesContent":["import type { EventData } from '@fluentui/react-utilities';\nimport * as React from 'react';\n\nimport type { CarouselUpdateData } from '../Carousel';\n\nexport type CarouselIndexChangeData = EventData<\n  'click' | 'focus',\n  React.FocusEvent | React.MouseEvent<HTMLButtonElement | HTMLAnchorElement>\n> & {\n  /**\n   * The index to be set after event has occurred.\n   */\n  index: number;\n};\n\nexport type CarouselContextValue = {\n  activeIndex: number;\n  circular: boolean;\n  selectPageByElement: (event: React.FocusEvent, element: HTMLElement, jump?: boolean) => number;\n  selectPageByDirection: (\n    event: React.MouseEvent<HTMLButtonElement | HTMLAnchorElement>,\n    direction: 'next' | 'prev',\n  ) => number;\n  selectPageByIndex: (\n    event: React.MouseEvent<HTMLButtonElement | HTMLAnchorElement>,\n    value: number,\n    jump?: boolean,\n  ) => void;\n  subscribeForValues: (listener: (data: CarouselUpdateData) => void) => () => void;\n  enableAutoplay: (autoplay: boolean) => void;\n  resetAutoplay: () => void;\n  containerRef?: React.RefObject<HTMLDivElement>;\n};\n\n/**\n * Context shared between Carousel and its children components\n */\nexport type CarouselContextValues = {\n  carousel: CarouselContextValue;\n};\n"],"names":["React"],"rangeMappings":"","mappings":"AACA,YAAYA,WAAW,QAAQ"}