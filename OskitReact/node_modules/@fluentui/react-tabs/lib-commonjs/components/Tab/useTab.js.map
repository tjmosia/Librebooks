{"version":3,"sources":["useTab.ts"],"sourcesContent":["import * as React from 'react';\nimport {\n  getIntrinsicElementProps,\n  mergeCallbacks,\n  useEventCallback,\n  useMergedRefs,\n  slot,\n  omit,\n} from '@fluentui/react-utilities';\nimport type { TabProps, TabState } from './Tab.types';\nimport { useTabListContext_unstable } from '../TabList/TabListContext';\nimport { SelectTabEvent } from '../TabList/TabList.types';\n\n/**\n * Create the state required to render Tab.\n *\n * The returned state can be modified with hooks such as useTabStyles_unstable,\n * before being passed to renderTab_unstable.\n *\n * @param props - props from this instance of Tab\n * @param ref - reference to root HTMLElement of Tab\n */\nexport const useTab_unstable = (props: TabProps, ref: React.Ref<HTMLElement>): TabState => {\n  const { content, disabled: tabDisabled = false, icon, onClick, onFocus, value } = props;\n\n  const appearance = useTabListContext_unstable(ctx => ctx.appearance);\n  const reserveSelectedTabSpace = useTabListContext_unstable(ctx => ctx.reserveSelectedTabSpace);\n  const selectTabOnFocus = useTabListContext_unstable(ctx => ctx.selectTabOnFocus);\n  const listDisabled = useTabListContext_unstable(ctx => ctx.disabled);\n  const selected = useTabListContext_unstable(ctx => ctx.selectedValue === value);\n  const onRegister = useTabListContext_unstable(ctx => ctx.onRegister);\n  const onUnregister = useTabListContext_unstable(ctx => ctx.onUnregister);\n  const onSelect = useTabListContext_unstable(ctx => ctx.onSelect);\n  const size = useTabListContext_unstable(ctx => ctx.size);\n  const vertical = useTabListContext_unstable(ctx => !!ctx.vertical);\n  const disabled = listDisabled || tabDisabled;\n\n  const innerRef = React.useRef<HTMLElement>(null);\n  const onSelectCallback = (event: SelectTabEvent) => onSelect(event, { value });\n  const onTabClick = useEventCallback(mergeCallbacks(onClick, onSelectCallback));\n  const onTabFocus = useEventCallback(mergeCallbacks(onFocus, onSelectCallback));\n\n  React.useEffect(() => {\n    onRegister({\n      value,\n      ref: innerRef,\n    });\n\n    return () => {\n      onUnregister({ value, ref: innerRef });\n    };\n  }, [onRegister, onUnregister, innerRef, value]);\n\n  const iconSlot = slot.optional(icon, { elementType: 'span' });\n  const contentSlot = slot.always(content, {\n    defaultProps: { children: props.children },\n    elementType: 'span',\n  });\n  const contentReservedSpace: typeof content =\n    content && typeof content === 'object' ? omit(content, ['ref' as keyof typeof content]) : content;\n  const iconOnly = Boolean(iconSlot?.children && !contentSlot.children);\n  return {\n    components: { root: 'button', icon: 'span', content: 'span', contentReservedSpace: 'span' },\n    root: slot.always(\n      getIntrinsicElementProps('button', {\n        // FIXME:\n        // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLButtonElement`\n        // but since it would be a breaking change to fix it, we are casting ref to it's proper type\n        ref: useMergedRefs(ref, innerRef) as React.Ref<HTMLButtonElement>,\n        role: 'tab',\n        type: 'button',\n        // aria-selected undefined indicates it is not selectable\n        // according to https://www.w3.org/TR/wai-aria-1.1/#aria-selected\n        'aria-selected': disabled ? undefined : (`${selected}` as 'true' | 'false'),\n        ...props,\n        disabled,\n        onClick: onTabClick,\n        onFocus: selectTabOnFocus ? onTabFocus : onFocus,\n      }),\n      { elementType: 'button' },\n    ),\n    icon: iconSlot,\n    iconOnly,\n    content: contentSlot,\n    contentReservedSpace: slot.optional(contentReservedSpace, {\n      renderByDefault: !selected && !iconOnly && reserveSelectedTabSpace,\n      defaultProps: { children: props.children },\n      elementType: 'span',\n    }),\n    appearance,\n    disabled,\n    selected,\n    size,\n    value,\n    vertical,\n  };\n};\n"],"names":["useTab_unstable","props","ref","content","disabled","tabDisabled","icon","onClick","onFocus","value","appearance","useTabListContext_unstable","ctx","reserveSelectedTabSpace","selectTabOnFocus","listDisabled","selected","selectedValue","onRegister","onUnregister","onSelect","size","vertical","innerRef","React","useRef","onSelectCallback","event","onTabClick","useEventCallback","mergeCallbacks","onTabFocus","useEffect","iconSlot","slot","optional","elementType","contentSlot","always","defaultProps","children","contentReservedSpace","omit","iconOnly","Boolean","components","root","getIntrinsicElementProps","useMergedRefs","role","type","undefined","renderByDefault"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}