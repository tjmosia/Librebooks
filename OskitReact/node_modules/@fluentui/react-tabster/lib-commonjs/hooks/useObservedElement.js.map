{"version":3,"sources":["useObservedElement.ts"],"sourcesContent":["import { useTabster } from './useTabster';\nimport { getObservedElement, Types as TabsterTypes } from 'tabster';\nimport { useTabsterAttributes } from './useTabsterAttributes';\n\nexport function useObservedElement(name: string | string[]): TabsterTypes.TabsterDOMAttribute {\n  const tabster = useTabster();\n  if (tabster) {\n    getObservedElement(tabster);\n  }\n\n  return useTabsterAttributes({ observed: { names: Array.isArray(name) ? name : [name] } });\n}\n"],"names":["useObservedElement","name","tabster","useTabster","getObservedElement","useTabsterAttributes","observed","names","Array","isArray"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAIgBA;;;eAAAA;;;4BAJW;yBAC+B;sCACrB;AAE9B,SAASA,mBAAmBC,IAAuB;IACxD,MAAMC,UAAUC,IAAAA,sBAAAA;IAChB,IAAID,SAAS;QACXE,IAAAA,2BAAAA,EAAmBF;IACrB;IAEA,OAAOG,IAAAA,0CAAAA,EAAqB;QAAEC,UAAU;YAAEC,OAAOC,MAAMC,OAAO,CAACR,QAAQA,OAAO;gBAACA;aAAK;QAAC;IAAE;AACzF"}