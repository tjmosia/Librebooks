import * as React from 'react';
import { getWeekNumbersInMonth } from '../../utils';
import { CalendarGridDayCell } from './CalendarGridDayCell';
/**
 * @internal
 */ export const CalendarGridRow = (props)=>{
    const { ariaHidden, classNames, week, weeks, weekIndex, rowClassName, ariaRole, showWeekNumbers, firstDayOfWeek, firstWeekOfYear, navigatedDate, strings } = props;
    const weekNumbers = showWeekNumbers ? getWeekNumbersInMonth(weeks.length, firstDayOfWeek, firstWeekOfYear, navigatedDate) : null;
    const titleString = weekNumbers ? strings.weekNumberFormatString && strings.weekNumberFormatString.replace('{0}', `${weekNumbers[weekIndex]}`) : '';
    return /*#__PURE__*/ React.createElement("tr", {
        role: ariaRole,
        "aria-hidden": ariaHidden,
        className: rowClassName,
        key: weekIndex + '_' + week[0].key
    }, showWeekNumbers && weekNumbers && /*#__PURE__*/ React.createElement("th", {
        className: classNames.weekNumberCell,
        key: weekIndex,
        title: titleString,
        "aria-label": titleString,
        scope: "row"
    }, /*#__PURE__*/ React.createElement("span", null, weekNumbers[weekIndex])), week.map((day, dayIndex)=>/*#__PURE__*/ React.createElement(CalendarGridDayCell, {
            ...props,
            key: day.key,
            day: day,
            dayIndex: dayIndex
        })));
};
