{"version":3,"sources":["CalendarDay.types.ts"],"sourcesContent":["import * as React from 'react';\nimport type { CalendarStrings, DateFormatting } from '../../utils';\nimport type { CalendarDayGridProps, CalendarDayGridStyleProps } from '../CalendarDayGrid/CalendarDayGrid.types';\nimport type { CalendarNavigationIcons } from '../Calendar/calendarNavigationIcons';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface ICalendarDay {\n  focus(): void;\n}\n\nexport interface CalendarDayProps extends CalendarDayGridProps {\n  /**\n   * Optional callback to access the ICalendarDay interface. Use this instead of ref for accessing\n   * the public methods and properties of the component.\n   */\n  componentRef?: React.RefObject<ICalendarDay>;\n\n  /**\n   * Additional CSS class(es) to apply to the CalendarDay.\n   */\n  className?: string;\n\n  /**\n   * Localized strings to use in the Calendar\n   */\n  strings: CalendarStrings;\n\n  /**\n   * The currently navigated date\n   */\n  navigatedDate: Date;\n\n  /**\n   * Callback issued when a date in the calendar is navigated\n   * @param date - The date that is navigated to\n   * @param focusOnNavigatedDay - Whether to set the focus to the navigated date.\n   */\n  onNavigateDate: (date: Date, focusOnNavigatedDay: boolean) => void;\n\n  /**\n   * Callback issued when calendar day is closed\n   */\n  onDismiss?: () => void;\n\n  /**\n   * Callback function when the header is selected\n   */\n  onHeaderSelect?: () => void;\n\n  /**\n   * Whether the calendar should show the week number (weeks 1 to 53) before each week row\n   * @default false\n   */\n  showWeekNumbers?: boolean;\n\n  /**\n   * Apply additional formatting to dates, for example localized date formatting.\n   */\n  dateTimeFormatter: DateFormatting;\n\n  /**\n   * Whether the calendar should show 6 weeks by default.\n   * @default false\n   */\n  showSixWeeksByDefault?: boolean;\n\n  /**\n   * If set the Calendar will not allow navigation to or selection of a date earlier than this value.\n   */\n  minDate?: Date;\n\n  /**\n   * If set the Calendar will not allow navigation to or selection of a date later than this value.\n   */\n  maxDate?: Date;\n\n  /**\n   * If set the Calendar will not allow selection of dates in this array.\n   */\n  restrictedDates?: Date[];\n\n  /**\n   * Whether the close button should be shown or not\n   * @default false\n   */\n  showCloseButton?: boolean;\n\n  /**\n   * Allows all dates and buttons to be focused, including disabled ones\n   * @default false\n   */\n  allFocusable?: boolean;\n\n  /**\n   * Custom navigation icons.\n   */\n  navigationIcons: CalendarNavigationIcons;\n}\n\n/**\n * @internal\n */\nexport interface CalendarDayStyleProps extends CalendarDayGridStyleProps {\n  /**\n   * Accept custom classNames\n   */\n  className?: string;\n\n  /**\n   * Whether the header is clickable\n   */\n  headerIsClickable?: boolean;\n\n  /**\n   * Whether week numbers are being shown\n   */\n  showWeekNumbers?: boolean;\n}\n\n/**\n * @internal\n */\nexport interface CalendarDayStyles {\n  /**\n   * Style for the root element.\n   */\n  root: string;\n\n  /**\n   * The style for the header button and forward/back navigation button container\n   */\n  header: string;\n\n  /**\n   * The style for the title text inside the header\n   */\n  monthAndYear: string;\n\n  /**\n   * The style for the wrapper around forward/back/close buttons\n   */\n  monthComponents: string;\n\n  /**\n   * The style for the forward/back/close buttons\n   */\n  headerIconButton: string;\n\n  /**\n   * The style to apply for disabled elements\n   */\n  disabledStyle: string;\n}\n"],"names":["React"],"rangeMappings":"","mappings":"AAAA,YAAYA,WAAW,QAAQ"}