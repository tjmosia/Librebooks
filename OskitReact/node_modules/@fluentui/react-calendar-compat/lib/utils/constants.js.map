{"version":3,"sources":["constants.ts"],"sourcesContent":["/**\n * The days of the week\n */\nexport enum DayOfWeek {\n  Sunday = 0,\n  Monday = 1,\n  Tuesday = 2,\n  Wednesday = 3,\n  Thursday = 4,\n  Friday = 5,\n  Saturday = 6,\n}\n\n/**\n * The months\n */\nexport enum MonthOfYear {\n  January = 0,\n  February = 1,\n  March = 2,\n  April = 3,\n  May = 4,\n  June = 5,\n  July = 6,\n  August = 7,\n  September = 8,\n  October = 9,\n  November = 10,\n  December = 11,\n}\n\n/**\n * First week of the year settings types\n */\nexport enum FirstWeekOfYear {\n  FirstDay = 0,\n  FirstFullWeek = 1,\n  FirstFourDayWeek = 2,\n}\n\n/**\n * The supported date range types\n */\nexport enum DateRangeType {\n  Day = 0,\n  Week = 1,\n  Month = 2,\n  WorkWeek = 3,\n}\n\nexport const DAYS_IN_WEEK = 7;\n\nexport const TimeConstants = {\n  MillisecondsInOneDay: 86400000,\n  MillisecondsIn1Sec: 1000,\n  MillisecondsIn1Min: 60000,\n  MillisecondsIn30Mins: 1800000,\n  MillisecondsIn1Hour: 3600000,\n  MinutesInOneDay: 1440,\n  MinutesInOneHour: 60,\n  DaysInOneWeek: 7,\n  MonthInOneYear: 12,\n  HoursInOneDay: 24,\n  SecondsInOneMinute: 60,\n  OffsetTo24HourFormat: 12,\n  /**\n   * Matches a time string. Groups:\n   * 1. hours (with or without leading 0)\n   * 2. minutes\n   * 3. seconds (optional)\n   * 4. meridiem (am/pm, case-insensitive, optional)\n   */\n  TimeFormatRegex: /^(\\d\\d?):(\\d\\d):?(\\d\\d)? ?([ap]m)?/i,\n};\n"],"names":["DayOfWeek","MonthOfYear","FirstWeekOfYear","DateRangeType","DAYS_IN_WEEK","TimeConstants","MillisecondsInOneDay","MillisecondsIn1Sec","MillisecondsIn1Min","MillisecondsIn30Mins","MillisecondsIn1Hour","MinutesInOneDay","MinutesInOneHour","DaysInOneWeek","MonthInOneYear","HoursInOneDay","SecondsInOneMinute","OffsetTo24HourFormat","TimeFormatRegex"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA;;CAEC;UACWA;;;;;;;;GAAAA,cAAAA;;UAaAC;;;;;;;;;;;;;GAAAA,gBAAAA;;UAkBAC;;;;GAAAA,oBAAAA;;UASAC;;;;;GAAAA,kBAAAA;AAOZ,OAAO,MAAMC,eAAe,EAAE;AAE9B,OAAO,MAAMC,gBAAgB;IAC3BC,sBAAsB;IACtBC,oBAAoB;IACpBC,oBAAoB;IACpBC,sBAAsB;IACtBC,qBAAqB;IACrBC,iBAAiB;IACjBC,kBAAkB;IAClBC,eAAe;IACfC,gBAAgB;IAChBC,eAAe;IACfC,oBAAoB;IACpBC,sBAAsB;IACtB;;;;;;GAMC,GACDC,iBAAiB;AACnB,EAAE"}