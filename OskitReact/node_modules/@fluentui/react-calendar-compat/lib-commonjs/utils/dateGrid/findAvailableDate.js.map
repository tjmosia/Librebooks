{"version":3,"sources":["findAvailableDate.ts"],"sourcesContent":["import { AvailableDateOptions } from './dateGrid.types';\n\nimport { isRestrictedDate } from './isRestrictedDate';\n\nimport { isAfterMaxDate } from './isAfterMaxDate';\n\nimport { isBeforeMinDate } from './isBeforeMinDate';\nimport { compareDatePart, addDays } from '../dateMath/dateMath';\n\n/**\n * Returns closest available date given the restriction `options`, or undefined otherwise\n * @param options - list of search options\n */\nexport const findAvailableDate = (options: AvailableDateOptions): Date | undefined => {\n  const { targetDate, initialDate, direction, ...restrictedDateOptions } = options;\n  let availableDate = targetDate;\n  // if the target date is available, return it immediately\n  if (!isRestrictedDate(targetDate, restrictedDateOptions)) {\n    return targetDate;\n  }\n\n  while (\n    compareDatePart(initialDate, availableDate) !== 0 &&\n    isRestrictedDate(availableDate, restrictedDateOptions) &&\n    !isAfterMaxDate(availableDate, restrictedDateOptions) &&\n    !isBeforeMinDate(availableDate, restrictedDateOptions)\n  ) {\n    availableDate = addDays(availableDate, direction);\n  }\n\n  if (compareDatePart(initialDate, availableDate) !== 0 && !isRestrictedDate(availableDate, restrictedDateOptions)) {\n    return availableDate;\n  }\n\n  return undefined;\n};\n"],"names":["findAvailableDate","options","targetDate","initialDate","direction","restrictedDateOptions","availableDate","isRestrictedDate","compareDatePart","isAfterMaxDate","isBeforeMinDate","addDays","undefined"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAaaA;;;eAAAA;;;kCAXoB;gCAEF;iCAEC;0BACS;AAMlC,MAAMA,oBAAoB,CAACC;IAChC,MAAM,EAAEC,UAAU,EAAEC,WAAW,EAAEC,SAAS,EAAE,GAAGC,uBAAuB,GAAGJ;IACzE,IAAIK,gBAAgBJ;IACpB,yDAAyD;IACzD,IAAI,CAACK,IAAAA,kCAAAA,EAAiBL,YAAYG,wBAAwB;QACxD,OAAOH;IACT;IAEA,MACEM,IAAAA,yBAAAA,EAAgBL,aAAaG,mBAAmB,KAChDC,IAAAA,kCAAAA,EAAiBD,eAAeD,0BAChC,CAACI,IAAAA,8BAAAA,EAAeH,eAAeD,0BAC/B,CAACK,IAAAA,gCAAAA,EAAgBJ,eAAeD,uBAChC;QACAC,gBAAgBK,IAAAA,iBAAAA,EAAQL,eAAeF;IACzC;IAEA,IAAII,IAAAA,yBAAAA,EAAgBL,aAAaG,mBAAmB,KAAK,CAACC,IAAAA,kCAAAA,EAAiBD,eAAeD,wBAAwB;QAChH,OAAOC;IACT;IAEA,OAAOM;AACT"}