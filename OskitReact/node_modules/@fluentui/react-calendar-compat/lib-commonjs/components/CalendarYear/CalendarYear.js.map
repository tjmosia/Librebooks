{"version":3,"sources":["CalendarYear.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Enter, Space } from '@fluentui/keyboard-keys';\nimport { useArrowNavigationGroup } from '@fluentui/react-tabster';\nimport { mergeClasses } from '@griffel/react';\nimport { useCalendarYearStyles_unstable } from './useCalendarYearStyles.styles';\nimport type {\n  CalendarYearStrings,\n  CalendarYearProps,\n  CalendarYearRange,\n  CalendarYearHeaderProps,\n} from './CalendarYear.types';\n\nconst CELL_COUNT = 12;\nconst CELLS_PER_ROW = 4;\n\nconst DefaultCalendarYearStrings: CalendarYearStrings = {\n  prevRangeAriaLabel: undefined,\n  nextRangeAriaLabel: undefined,\n};\ninterface CalendarYearGrid {\n  focus(): void;\n}\n\ninterface CalendarYearGridCellProps extends CalendarYearProps {\n  year: number;\n  current?: boolean;\n  selected?: boolean;\n  disabled?: boolean;\n  onSelectYear?: (year: number) => void;\n  onRenderYear?: (year: number) => React.ReactNode;\n}\n\ninterface CalendarYearGridProps extends CalendarYearProps, CalendarYearRange {\n  selectedYear?: number;\n  animateBackwards?: boolean;\n  componentRef?: React.RefObject<CalendarYearGridCell>;\n}\n\ninterface CalendarYearGridCell {\n  focus(): void;\n}\n\nconst CalendarYearGridCell: React.FunctionComponent<CalendarYearGridCellProps> = props => {\n  const {\n    className,\n    highlightCurrentYear,\n    highlightSelectedYear,\n    year,\n    selected,\n    disabled,\n    componentRef,\n    onSelectYear,\n    onRenderYear,\n  } = props;\n\n  const buttonRef = React.useRef<HTMLButtonElement>(null);\n\n  React.useImperativeHandle(\n    componentRef,\n    () => ({\n      focus() {\n        buttonRef.current?.focus?.();\n      },\n    }),\n    [],\n  );\n\n  const onClick = () => {\n    onSelectYear?.(year);\n  };\n\n  const onKeyDown = (ev: React.KeyboardEvent<HTMLElement>) => {\n    if (ev.key === Enter) {\n      onSelectYear?.(year);\n    }\n  };\n\n  const classNames = useCalendarYearStyles_unstable({\n    className,\n    highlightCurrent: highlightCurrentYear,\n    highlightSelected: highlightSelectedYear,\n  });\n\n  return (\n    <button\n      className={mergeClasses(classNames.itemButton, selected && classNames.selected, disabled && classNames.disabled)}\n      type=\"button\"\n      role=\"gridcell\"\n      onClick={!disabled ? onClick : undefined}\n      onKeyDown={!disabled ? onKeyDown : undefined}\n      disabled={disabled}\n      aria-selected={selected}\n      ref={buttonRef}\n    >\n      {onRenderYear?.(year) ?? year}\n    </button>\n  );\n};\nCalendarYearGridCell.displayName = 'CalendarYearGridCell';\n\nconst CalendarYearGrid: React.FunctionComponent<CalendarYearGridProps> = props => {\n  const {\n    className,\n    fromYear,\n    toYear,\n    animationDirection,\n    animateBackwards,\n    minYear,\n    maxYear,\n    onSelectYear,\n    selectedYear,\n    componentRef,\n  } = props;\n\n  const selectedCellRef = React.useRef<CalendarYearGridCell>(null);\n  const currentCellRef = React.useRef<CalendarYearGridCell>(null);\n\n  React.useImperativeHandle(\n    componentRef,\n    () => ({\n      focus() {\n        (selectedCellRef.current || currentCellRef.current)?.focus?.();\n      },\n    }),\n    [],\n  );\n\n  const renderCell = (yearToRender: number): React.ReactNode => {\n    const selected = yearToRender === selectedYear;\n    const disabled =\n      (minYear !== undefined && yearToRender < minYear) || (maxYear !== undefined && yearToRender > maxYear);\n    const current = yearToRender === new Date().getFullYear();\n\n    return (\n      <CalendarYearGridCell\n        {...props}\n        key={yearToRender}\n        year={yearToRender}\n        selected={selected}\n        current={current}\n        disabled={disabled}\n        onSelectYear={onSelectYear}\n        componentRef={selected ? selectedCellRef : current ? currentCellRef : undefined}\n      />\n    );\n  };\n\n  const classNames = useCalendarYearStyles_unstable({\n    className,\n    animateBackwards,\n    animationDirection,\n  });\n\n  const onRenderYear = (value: number) => {\n    return props.onRenderYear?.(value) ?? value;\n  };\n\n  const gridAriaLabel = `${onRenderYear(fromYear)} - ${onRenderYear(toYear)}`;\n\n  let year = fromYear;\n  const cells: React.ReactNode[][] = [];\n\n  for (let i = 0; i < (toYear - fromYear + 1) / CELLS_PER_ROW; i++) {\n    cells.push([]);\n    for (let j = 0; j < CELLS_PER_ROW; j++) {\n      cells[i].push(renderCell(year));\n      year++;\n    }\n  }\n\n  const arrowNavigationAttributes = useArrowNavigationGroup({ axis: 'grid' });\n\n  return (\n    <div {...arrowNavigationAttributes} className={classNames.gridContainer} role=\"grid\" aria-label={gridAriaLabel}>\n      {cells.map((cellRow: React.ReactNode[], index: number) => {\n        return (\n          <div key={'yearPickerRow_' + index + '_' + fromYear} role=\"row\" className={classNames.buttonRow}>\n            {cellRow}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\nCalendarYearGrid.displayName = 'CalendarYearGrid';\n\nconst CalendarYearNavDirection = {\n  Previous: 0 as const,\n  Next: 1 as const,\n};\n\ninterface CalendarYearNavArrowProps extends CalendarYearHeaderProps {\n  direction: (typeof CalendarYearNavDirection)[keyof typeof CalendarYearNavDirection];\n}\n\nconst CalendarYearNavArrow: React.FunctionComponent<CalendarYearNavArrowProps> = props => {\n  const {\n    className,\n    strings = DefaultCalendarYearStrings,\n    direction,\n    onSelectPrev,\n    onSelectNext,\n    fromYear,\n    toYear,\n    maxYear,\n    minYear,\n    navigationIcons,\n  } = props;\n\n  const classNames = useCalendarYearStyles_unstable({\n    className,\n  });\n\n  const ariaLabel =\n    direction === CalendarYearNavDirection.Previous ? strings.prevRangeAriaLabel : strings.nextRangeAriaLabel;\n  const newRangeOffset = direction === CalendarYearNavDirection.Previous ? -CELL_COUNT : CELL_COUNT;\n  const newRange = { fromYear: fromYear + newRangeOffset, toYear: toYear + newRangeOffset };\n  const ariaLabelString = ariaLabel ? (typeof ariaLabel === 'string' ? ariaLabel : ariaLabel(newRange)) : undefined;\n  const disabled =\n    direction === CalendarYearNavDirection.Previous\n      ? minYear !== undefined && fromYear < minYear\n      : maxYear !== undefined && props.fromYear + CELL_COUNT > maxYear;\n\n  const onNavigate = () => {\n    direction === CalendarYearNavDirection.Previous ? onSelectPrev?.() : onSelectNext?.();\n  };\n\n  const onKeyDown = (ev: React.KeyboardEvent<HTMLElement>) => {\n    if (ev.key === Enter) {\n      onNavigate();\n    }\n  };\n\n  return (\n    <button\n      className={mergeClasses(classNames.navigationButton, disabled && classNames.disabled)}\n      onClick={!disabled ? onNavigate : undefined}\n      onKeyDown={!disabled ? onKeyDown : undefined}\n      type=\"button\"\n      title={ariaLabelString}\n      disabled={disabled}\n    >\n      {direction === CalendarYearNavDirection.Previous ? navigationIcons.upNavigation : navigationIcons.downNavigation}\n    </button>\n  );\n};\nCalendarYearNavArrow.displayName = 'CalendarYearNavArrow';\n\nconst CalendarYearNav: React.FunctionComponent<CalendarYearHeaderProps> = props => {\n  const { className } = props;\n\n  const classNames = useCalendarYearStyles_unstable({\n    className,\n  });\n\n  return (\n    <div className={classNames.navigationButtonsContainer}>\n      <CalendarYearNavArrow {...props} direction={CalendarYearNavDirection.Previous} />\n      <CalendarYearNavArrow {...props} direction={CalendarYearNavDirection.Next} />\n    </div>\n  );\n};\nCalendarYearNav.displayName = 'CalendarYearNav';\n\nconst CalendarYearTitle: React.FunctionComponent<CalendarYearHeaderProps> = props => {\n  const {\n    className,\n    fromYear,\n    toYear,\n    strings = DefaultCalendarYearStrings,\n    animateBackwards,\n    animationDirection,\n  } = props;\n\n  const onHeaderSelect = () => {\n    props.onHeaderSelect?.(true);\n  };\n\n  const onHeaderKeyDown = (ev: React.KeyboardEvent<HTMLElement>) => {\n    if (ev.key === Enter || ev.key === Space) {\n      onHeaderSelect();\n    }\n  };\n\n  const onRenderYear = (year: number) => {\n    return props.onRenderYear?.(year) ?? year;\n  };\n\n  const classNames = useCalendarYearStyles_unstable({\n    className,\n    hasHeaderClickCallback: !!props.onHeaderSelect,\n    animateBackwards,\n    animationDirection,\n  });\n\n  if (props.onHeaderSelect) {\n    const rangeAriaLabel = strings.rangeAriaLabel;\n    const headerAriaLabelFormatString = strings.headerAriaLabelFormatString;\n    const currentDateRange = rangeAriaLabel\n      ? typeof rangeAriaLabel === 'string'\n        ? rangeAriaLabel\n        : rangeAriaLabel(props)\n      : undefined;\n\n    const ariaLabel = headerAriaLabelFormatString\n      ? headerAriaLabelFormatString.replace('{0}', currentDateRange ?? '')\n      : currentDateRange;\n\n    return (\n      <button\n        className={classNames.currentItemButton}\n        onClick={onHeaderSelect}\n        onKeyDown={onHeaderKeyDown}\n        aria-label={ariaLabel}\n        role=\"button\"\n        type=\"button\"\n      >\n        <span aria-live=\"assertive\" aria-atomic=\"true\">\n          {onRenderYear(fromYear)} - {onRenderYear(toYear)}\n        </span>\n      </button>\n    );\n  }\n\n  return (\n    <div className={classNames.current}>\n      {onRenderYear(fromYear)} - {onRenderYear(toYear)}\n    </div>\n  );\n};\nCalendarYearTitle.displayName = 'CalendarYearTitle';\n\nconst CalendarYearHeader: React.FunctionComponent<CalendarYearHeaderProps> = props => {\n  const { className, animateBackwards, animationDirection, onRenderTitle } = props;\n\n  const classNames = useCalendarYearStyles_unstable({\n    className,\n    hasHeaderClickCallback: !!props.onHeaderSelect,\n    animateBackwards,\n    animationDirection,\n  });\n\n  return (\n    <div className={classNames.headerContainer}>\n      {onRenderTitle?.(props) ?? <CalendarYearTitle {...props} />}\n      <CalendarYearNav {...props} />\n    </div>\n  );\n};\nCalendarYearHeader.displayName = 'CalendarYearHeader';\n\nfunction useAnimateBackwards({ selectedYear, navigatedYear }: CalendarYearProps) {\n  const rangeYear = selectedYear || navigatedYear || new Date().getFullYear();\n  const fromYear = Math.floor(rangeYear / 10) * 10;\n\n  const previousFromYearRef = React.useRef<number | undefined>(fromYear);\n  React.useRef(() => {\n    previousFromYearRef.current = fromYear;\n  });\n  const previousFromYear = previousFromYearRef.current;\n\n  if (!previousFromYear || previousFromYear === fromYear) {\n    return undefined;\n  } else if (previousFromYear > fromYear) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction useYearRangeState({ selectedYear, navigatedYear }: CalendarYearProps) {\n  const rangeYear = React.useMemo(() => {\n    return selectedYear || navigatedYear || Math.floor(new Date().getFullYear() / 10) * 10;\n  }, [navigatedYear, selectedYear]);\n\n  const [fromYear, setFromYear] = React.useState<number>(rangeYear);\n\n  const onNavNext = () => {\n    setFromYear(year => year + CELL_COUNT);\n  };\n\n  const onNavPrevious = () => {\n    setFromYear(year => year - CELL_COUNT);\n  };\n\n  React.useEffect(() => {\n    setFromYear(rangeYear);\n  }, [rangeYear]);\n\n  const toYear = fromYear + CELL_COUNT - 1;\n\n  return [fromYear, toYear, onNavNext, onNavPrevious] as const;\n}\n\n/**\n * @internal\n */\nexport const CalendarYear: React.FunctionComponent<CalendarYearProps> = props => {\n  const animateBackwards = useAnimateBackwards(props);\n  const [fromYear, toYear, onNavNext, onNavPrevious] = useYearRangeState(props);\n\n  const gridRef = React.useRef<CalendarYearGrid>(null);\n\n  React.useImperativeHandle(props.componentRef, () => ({\n    focus() {\n      gridRef.current?.focus?.();\n    },\n  }));\n\n  const { className } = props;\n\n  const classNames = useCalendarYearStyles_unstable({\n    className,\n  });\n\n  return (\n    <div className={classNames.root}>\n      <CalendarYearHeader\n        {...props}\n        fromYear={fromYear}\n        toYear={toYear}\n        onSelectPrev={onNavPrevious}\n        onSelectNext={onNavNext}\n        animateBackwards={animateBackwards}\n      />\n      <CalendarYearGrid\n        {...props}\n        fromYear={fromYear}\n        toYear={toYear}\n        animateBackwards={animateBackwards}\n        componentRef={gridRef}\n      />\n    </div>\n  );\n};\nCalendarYear.displayName = 'CalendarYear';\n"],"names":["CalendarYear","CELL_COUNT","CELLS_PER_ROW","DefaultCalendarYearStrings","prevRangeAriaLabel","undefined","nextRangeAriaLabel","CalendarYearGridCell","props","className","highlightCurrentYear","highlightSelectedYear","year","selected","disabled","componentRef","onSelectYear","onRenderYear","buttonRef","React","useRef","useImperativeHandle","focus","current","onClick","onKeyDown","ev","key","Enter","classNames","useCalendarYearStyles_unstable","highlightCurrent","highlightSelected","createElement","button","mergeClasses","itemButton","type","role","aria-selected","ref","displayName","CalendarYearGrid","fromYear","toYear","animationDirection","animateBackwards","minYear","maxYear","selectedYear","selectedCellRef","currentCellRef","_focus","_this","call","renderCell","yearToRender","Date","getFullYear","value","gridAriaLabel","cells","i","push","j","arrowNavigationAttributes","useArrowNavigationGroup","axis","div","gridContainer","aria-label","map","cellRow","index","buttonRow","CalendarYearNavDirection","Previous","Next","CalendarYearNavArrow","strings","direction","onSelectPrev","onSelectNext","navigationIcons","ariaLabel","newRangeOffset","newRange","ariaLabelString","onNavigate","navigationButton","title","upNavigation","downNavigation","CalendarYearNav","navigationButtonsContainer","CalendarYearTitle","onHeaderSelect","onHeaderKeyDown","Space","hasHeaderClickCallback","rangeAriaLabel","headerAriaLabelFormatString","currentDateRange","replace","currentItemButton","span","aria-live","aria-atomic","CalendarYearHeader","onRenderTitle","headerContainer","useAnimateBackwards","navigatedYear","rangeYear","Math","floor","previousFromYearRef","previousFromYear","useYearRangeState","useMemo","setFromYear","useState","onNavNext","onNavPrevious","useEffect","gridRef","root"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}