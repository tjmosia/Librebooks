{"version":3,"sources":["Calendar.types.ts"],"sourcesContent":["import * as React from 'react';\nimport type { CalendarStrings, DateFormatting, DateRangeType, DayOfWeek, FirstWeekOfYear } from '../../utils';\nimport type { CalendarDayProps } from '../CalendarDay/CalendarDay.types';\nimport type { CalendarMonthProps } from '../CalendarMonth/CalendarMonth.types';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface ICalendar {\n  /** Sets focus to the selected date. */\n  focus: () => void;\n}\n\nexport interface CalendarProps extends React.RefAttributes<HTMLDivElement> {\n  /**\n   * Optional callback to access the ICalendar interface. Use this instead of ref for accessing\n   * the public methods and properties of the component.\n   */\n  componentRef?: React.RefObject<ICalendar>;\n\n  /**\n   * Customized props for the calendar day\n   */\n  calendarDayProps?: Partial<CalendarDayProps>;\n\n  /**\n   * Customized props for the calendar month\n   */\n  calendarMonthProps?: Partial<CalendarMonthProps>;\n\n  /**\n   * Optional class name to add to the root element.\n   */\n  className?: string;\n\n  /**\n   * Callback for when a date is selected\n   * @param date - The date the user selected\n   * @param selectedDateRangeArray - The resultant list of dates that are selected based on the date range type set\n   * for the component.\n   */\n  onSelectDate?: (date: Date, selectedDateRangeArray?: Date[]) => void;\n\n  /**\n   * Callback for when calendar is closed\n   */\n  onDismiss?: () => void;\n\n  /**\n   * ID for the calendar\n   */\n  id?: string;\n\n  /**\n   * Default value of the Calendar, if any\n   */\n  value?: Date;\n\n  /**\n   * Value of today. If unspecified, current time in client machine will be used.\n   */\n  today?: Date;\n\n  /**\n   * The date range type indicating how many days should be selected as the user\n   * selects days\n   * @default DateRangeType.Day\n   */\n  dateRangeType?: DateRangeType;\n\n  /**\n   * The first day of the week for your locale.\n   * @default DayOfWeek.Sunday\n   */\n  firstDayOfWeek?: DayOfWeek;\n\n  /**\n   * Defines when the first week of the year should start.\n   * @default FirstWeekOfYear.FirstDay\n   */\n  firstWeekOfYear?: FirstWeekOfYear;\n\n  /**\n   * Whether the month picker is shown beside the day picker or hidden.\n   * @default true\n   */\n  isMonthPickerVisible?: boolean;\n\n  /**\n   * Whether the day picker is shown beside the month picker or hidden.\n   * @default true\n   */\n  isDayPickerVisible?: boolean;\n\n  /**\n   * Show month picker on top of date picker when visible.\n   * @default false\n   */\n  showMonthPickerAsOverlay?: boolean;\n\n  /**\n   * Whether the \"Go to today\" link should be shown or not\n   */\n  showGoToToday?: boolean;\n\n  /**\n   * Whether the calendar should show the week number (weeks 1 to 53) before each week row\n   * @default false\n   */\n  showWeekNumbers?: boolean;\n\n  /**\n   * Localized strings to use in the Calendar\n   */\n  strings?: CalendarStrings;\n\n  /**\n   * Apply additional formatting to dates, for example localized date formatting.\n   */\n  dateTimeFormatter?: DateFormatting;\n\n  /**\n   * If set the Calendar will not allow navigation to or selection of a date earlier than this value.\n   */\n  minDate?: Date;\n\n  /**\n   * If set the Calendar will not allow navigation to or selection of a date later than this value.\n   */\n  maxDate?: Date;\n\n  /**\n   * If set the Calendar will not allow selection of dates in this array.\n   */\n  restrictedDates?: Date[];\n\n  /**\n   * Whether the calendar should show 6 weeks by default.\n   * @default false\n   */\n  showSixWeeksByDefault?: boolean;\n\n  /**\n   * The days that are selectable when `dateRangeType` is `WorkWeek`.\n   * If `dateRangeType` is not `WorkWeek` this property does nothing.\n   * @default [Monday,Tuesday,Wednesday,Thursday,Friday]\n   */\n  workWeekDays?: DayOfWeek[];\n\n  /**\n   * Whether the month picker should highlight the current month\n   * @default false\n   */\n  highlightCurrentMonth?: boolean;\n\n  /**\n   * Whether the month picker should highlight the selected month\n   * @default false\n   */\n  highlightSelectedMonth?: boolean;\n\n  /**\n   * Whether the close button should be shown or not\n   * @default false\n   */\n  showCloseButton?: boolean;\n\n  /**\n   * Allows all dates and buttons to be focused, including disabled ones\n   * @default false\n   */\n  allFocusable?: boolean;\n}\n\n/**\n * @internal\n */\nexport interface CalendarStyleProps {\n  /**\n   * Custom CSS class for the calendar.\n   */\n  className?: string;\n\n  /**\n   * Whether the month picker is visible\n   */\n  isMonthPickerVisible?: boolean;\n\n  /**\n   * Whether the day picker is visible\n   */\n  isDayPickerVisible?: boolean;\n\n  /**\n   * Whether only month picker is shown\n   */\n  monthPickerOnly?: boolean;\n\n  /**\n   * Whether the month picker is overlaid on the day picker\n   */\n  showMonthPickerAsOverlay?: boolean;\n\n  /**\n   * @deprecated Use `overlaidWithButton`\n   */\n  overlayedWithButton?: boolean;\n\n  /**\n   * Whether the month and day picker are overlaid and the 'go to today' button is shown\n   */\n  overlaidWithButton?: boolean;\n\n  /**\n   * Whether the go to today button is shown\n   */\n  showGoToToday?: boolean;\n\n  /**\n   * Whether the week numbers are shown\n   */\n  showWeekNumbers?: boolean;\n}\n\n/**\n * @internal\n */\nexport interface CalendarStyles {\n  /**\n   * Style for the root element.\n   */\n  root: string;\n\n  divider: string;\n\n  goTodayButton: string;\n\n  monthPickerWrapper: string;\n\n  liveRegion: string;\n}\n\nexport enum AnimationDirection {\n  /**\n   * Grid will transition out and in horizontally\n   */\n  Horizontal,\n\n  /**\n   * Grid will transition out and in vertically\n   */\n  Vertical,\n}\n"],"names":["AnimationDirection"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;","mappings":";;;;;;;;;;;iEAAuB;;UAgPXA,kBAAAA;IACV;;GAEC,GAAAA,kBAAA,CAAAA,kBAAA,CAAA,aAAA,GAAA,EAAA,GAAA;IAGD;;GAEC,GAAAA,kBAAA,CAAAA,kBAAA,CAAA,WAAA,GAAA,EAAA,GAAA;GARSA,sBAAAA,CAAAA,qBAAAA,CAAAA,CAAAA"}