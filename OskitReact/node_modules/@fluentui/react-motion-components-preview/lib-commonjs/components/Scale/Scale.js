"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    Scale: function() {
        return Scale;
    },
    ScaleExaggerated: function() {
        return ScaleExaggerated;
    },
    ScaleSnappy: function() {
        return ScaleSnappy;
    }
});
const _reactmotion = require("@fluentui/react-motion");
/** Define a presence motion for scale in/out */ const scaleMotion = ({ animateOpacity = true })=>{
    const fromOpacity = animateOpacity ? 0 : 1;
    const toOpacity = 1;
    const fromScale = 0.9; // Could be a custom param in the future
    const toScale = 1;
    const enterKeyframes = [
        {
            opacity: fromOpacity,
            transform: `scale3d(${fromScale}, ${fromScale}, 1)`,
            visibility: 'visible'
        },
        {
            opacity: toOpacity,
            transform: `scale3d(${toScale}, ${toScale}, 1)`
        }
    ];
    const exitKeyframes = [
        {
            opacity: toOpacity,
            transform: `scale3d(${toScale}, ${toScale}, 1)`
        },
        {
            opacity: fromOpacity,
            transform: `scale3d(${fromScale}, ${fromScale}, 1)`,
            visibility: 'hidden'
        }
    ];
    return {
        enter: {
            duration: _reactmotion.motionTokens.durationGentle,
            easing: _reactmotion.motionTokens.curveDecelerateMax,
            keyframes: enterKeyframes
        },
        exit: {
            duration: _reactmotion.motionTokens.durationNormal,
            easing: _reactmotion.motionTokens.curveAccelerateMax,
            keyframes: exitKeyframes
        }
    };
};
const Scale = (0, _reactmotion.createPresenceComponent)(scaleMotion);
const ScaleSnappy = (0, _reactmotion.createPresenceComponentVariant)(Scale, {
    enter: {
        duration: _reactmotion.motionTokens.durationNormal,
        easing: _reactmotion.motionTokens.curveDecelerateMax
    },
    exit: {
        duration: _reactmotion.motionTokens.durationFast,
        easing: _reactmotion.motionTokens.curveAccelerateMax
    }
});
const ScaleExaggerated = (0, _reactmotion.createPresenceComponentVariant)(Scale, {
    enter: {
        duration: _reactmotion.motionTokens.durationSlow,
        easing: _reactmotion.motionTokens.curveDecelerateMax
    },
    exit: {
        duration: _reactmotion.motionTokens.durationGentle,
        easing: _reactmotion.motionTokens.curveAccelerateMax
    }
});
