{"version":3,"sources":["Carousel.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  isHTMLElement,\n  useMergedRefs,\n  useControllableState,\n  type EventHandler,\n  useEventCallback,\n} from '@fluentui/react-utilities';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\n\nimport { CAROUSEL_ITEM } from './constants';\nimport { useCarouselWalker_unstable } from './useCarouselWalker';\nimport { createCarouselStore } from './createCarouselStore';\nimport type { CarouselValueChangeData } from './Carousel.types';\nimport { CarouselContextValue } from './CarouselContext';\n\nexport type UseCarouselOptions = {\n  defaultValue?: string;\n  value?: string;\n\n  onValueChange?: EventHandler<CarouselValueChangeData>;\n  onFinish?: EventHandler<CarouselValueChangeData>;\n};\n\n// TODO: Migrate this into an external @fluentui/carousel component\n// For now, we won't export this publicly, is only for internal TeachingPopover use until stabilized.\nexport function useCarousel_unstable(options: UseCarouselOptions) {\n  'use no memo';\n\n  const { onValueChange, onFinish } = options;\n\n  const { targetDocument } = useFluent();\n  const win = targetDocument?.defaultView;\n  const { ref: carouselRef, walker: carouselWalker } = useCarouselWalker_unstable();\n  const [store] = React.useState(() => createCarouselStore());\n\n  const [value, setValue] = useControllableState({\n    defaultState: options.defaultValue,\n    state: options.value,\n    initialState: null,\n  });\n  const rootRef = React.useRef<HTMLDivElement>(null);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (value === null) {\n        // eslint-disable-next-line no-console\n        console.error(\n          'useCarousel: Carousel needs to have a `defaultValue` or `value` prop set. If you want to control the value, use the `value` prop.',\n        );\n      }\n    }, [value]);\n  }\n\n  React.useEffect(() => {\n    const allItems = rootRef.current?.querySelectorAll(`[${CAROUSEL_ITEM}]`)!;\n\n    for (let i = 0; i < allItems.length; i++) {\n      store.addValue(allItems.item(i).getAttribute(CAROUSEL_ITEM)!);\n    }\n\n    return () => {\n      store.clear();\n    };\n  }, [store]);\n\n  React.useEffect(() => {\n    if (!win) {\n      return;\n    }\n\n    const config: MutationObserverInit = {\n      attributes: true,\n      attributeFilter: [CAROUSEL_ITEM],\n      childList: true,\n      subtree: true,\n    };\n\n    // Callback function to execute when mutations are observed\n    const callback: MutationCallback = mutationList => {\n      for (const mutation of mutationList) {\n        for (const addedNode of Array.from(mutation.addedNodes)) {\n          if (isHTMLElement(addedNode) && addedNode.hasAttribute(CAROUSEL_ITEM)) {\n            const newValue = addedNode.getAttribute(CAROUSEL_ITEM)!;\n            const newNode = carouselWalker.find(newValue);\n            if (!newNode?.value) {\n              return;\n            }\n\n            const previousNode = carouselWalker.prevPage(newNode?.value);\n            store.insertValue(newValue, previousNode?.value ?? null);\n          }\n        }\n\n        for (const removedNode of Array.from(mutation.removedNodes)) {\n          if (isHTMLElement(removedNode) && removedNode?.hasAttribute(CAROUSEL_ITEM)) {\n            const removedValue = removedNode.getAttribute(CAROUSEL_ITEM)!;\n\n            store.removeValue(removedValue);\n          }\n        }\n      }\n    };\n\n    // Create an observer instance linked to the callback function\n    const observer = new win.MutationObserver(callback);\n\n    // Start observing the target node for configured mutations\n    observer.observe(rootRef.current!, config);\n\n    // Later, you can stop observing\n    return () => {\n      observer.disconnect();\n    };\n  }, [carouselWalker, store, win]);\n\n  const selectPageByDirection: CarouselContextValue['selectPageByDirection'] = useEventCallback((event, direction) => {\n    const active = carouselWalker.active();\n\n    if (!active?.value) {\n      return;\n    }\n\n    const newPage =\n      direction === 'prev' ? carouselWalker.prevPage(active.value) : carouselWalker.nextPage(active.value);\n\n    if (newPage) {\n      setValue(newPage?.value);\n      onValueChange?.(event, { event, type: 'click', value: newPage?.value });\n    } else {\n      onFinish?.(event, { event, type: 'click', value: active?.value });\n    }\n  });\n\n  const selectPageByValue: CarouselContextValue['selectPageByValue'] = useEventCallback((event, _value) => {\n    setValue(_value);\n    onValueChange?.(event, { event, type: 'click', value: _value });\n  });\n\n  return {\n    carouselRef: useMergedRefs(rootRef, carouselRef),\n    carousel: {\n      store,\n      value,\n      selectPageByDirection,\n      selectPageByValue,\n    },\n  };\n}\n"],"names":["useCarousel_unstable","options","onValueChange","onFinish","targetDocument","useFluent","win","defaultView","ref","carouselRef","walker","carouselWalker","useCarouselWalker_unstable","store","React","useState","createCarouselStore","value","setValue","useControllableState","defaultState","defaultValue","state","initialState","rootRef","useRef","process","env","NODE_ENV","useEffect","console","error","allItems","current","querySelectorAll","CAROUSEL_ITEM","i","length","addValue","item","getAttribute","clear","config","attributes","attributeFilter","childList","subtree","callback","mutationList","mutation","addedNode","Array","from","addedNodes","isHTMLElement","hasAttribute","newValue","newNode","find","previousNode","prevPage","insertValue","removedNode","removedNodes","removedValue","removeValue","observer","MutationObserver","observe","disconnect","selectPageByDirection","useEventCallback","event","direction","active","newPage","nextPage","type","selectPageByValue","_value","useMergedRefs","carousel"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}