{"version":3,"file":"index.js","sources":["../src/Consts.ts","../src/Instance.ts","../src/Events.ts","../src/DOMAPI.ts","../src/Utils.ts","../src/AttributeHelpers.ts","../src/Root.ts","../src/Deloser.ts","../src/State/Subscribable.ts","../src/CrossOrigin.ts","../src/Focusable.ts","../src/Keys.ts","../src/State/FocusedElement.ts","../src/Groupper.ts","../src/State/KeyboardNavigation.ts","../src/Modalizer.ts","../src/Mover.ts","../src/MutationEvent.ts","../src/State/ObservedElement.ts","../src/Outline.ts","../src/Uncontrolled.ts","../src/Restorer.ts","../src/Shadowdomize/DOMFunctions.ts","../src/Shadowdomize/ShadowTreeWalker.ts","../src/Shadowdomize/ShadowMutationObserver.ts","../src/Shadowdomize/querySelector.ts","../src/Shadowdomize/index.ts","../src/Tabster.ts","../src/Types.ts","../src/EventsTypes.ts","../src/Deprecated.ts"],"sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const TABSTER_ATTRIBUTE_NAME = \"data-tabster\" as const;\nexport const TABSTER_DUMMY_INPUT_ATTRIBUTE_NAME = \"data-tabster-dummy\" as const;\n\nexport const FOCUSABLE_SELECTOR = [\n    \"a[href]\",\n    \"button:not([disabled])\",\n    \"input:not([disabled])\",\n    \"select:not([disabled])\",\n    \"textarea:not([disabled])\",\n    \"*[tabindex]\",\n    \"*[contenteditable]\",\n    \"details > summary\",\n    \"audio[controls]\",\n    \"video[controls]\",\n].join(\", \");\n\nexport const AsyncFocusSources = {\n    EscapeGroupper: 1,\n    Restorer: 2,\n    Deloser: 3,\n} as const;\n\nexport const ObservedElementAccessibilities = {\n    Any: 0,\n    Accessible: 1,\n    Focusable: 2,\n} as const;\n\nexport const RestoreFocusOrders = {\n    History: 0,\n    DeloserDefault: 1,\n    RootDefault: 2,\n    DeloserFirst: 3,\n    RootFirst: 4,\n} as const;\n\nexport const DeloserStrategies = {\n    /**\n     * If the focus is lost, the focus will be restored automatically using all available focus history.\n     * This is the default strategy.\n     */\n    Auto: 0,\n    /**\n     * If the focus is lost from this Deloser instance, the focus will not be restored automatically.\n     * The application might listen to the event and restore the focus manually.\n     * But if it is lost from another Deloser instance, the history of this Deloser could be used finding\n     * the element to focus.\n     */\n    Manual: 1,\n} as const;\n\nexport const Visibilities = {\n    Invisible: 0,\n    PartiallyVisible: 1,\n    Visible: 2,\n} as const;\n\nexport const RestorerTypes = {\n    Source: 0,\n    Target: 1,\n} as const;\n\nexport const MoverDirections = {\n    Both: 0, // Default, both left/up keys move to the previous, right/down move to the next.\n    Vertical: 1, // Only up/down arrows move to the next/previous.\n    Horizontal: 2, // Only left/right arrows move to the next/previous.\n    Grid: 3, // Two-dimentional movement depending on the visual placement.\n    GridLinear: 4, // Two-dimentional movement depending on the visual placement. Allows linear movement.\n} as const;\n\nexport const MoverKeys = {\n    ArrowUp: 1,\n    ArrowDown: 2,\n    ArrowLeft: 3,\n    ArrowRight: 4,\n    PageUp: 5,\n    PageDown: 6,\n    Home: 7,\n    End: 8,\n} as const;\n\nexport const GroupperTabbabilities = {\n    Unlimited: 0,\n    Limited: 1, // The tabbability is limited to the container and explicit Enter is needed to go inside.\n    LimitedTrapFocus: 2, // The focus is limited as above, plus trapped when inside.\n} as const;\n\nexport const GroupperMoveFocusActions = {\n    Enter: 1,\n    Escape: 2,\n} as const;\n\nexport const SysDummyInputsPositions = {\n    Auto: 0, // Tabster will place dummy inputs depending on the container tag name and on the default behaviour.\n    Inside: 1, // Tabster will always place dummy inputs inside the container.\n    Outside: 2, // Tabster will always place dummy inputs outside of the container.\n} as const;\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as Types from \"./Types\";\nimport { TABSTER_ATTRIBUTE_NAME } from \"./Consts\";\n\nexport function getTabsterOnElement(\n    tabster: Types.TabsterCore,\n    element: HTMLElement\n): Types.TabsterOnElement | undefined {\n    return tabster.storageEntry(element)?.tabster;\n}\n\nexport function updateTabsterByAttribute(\n    tabster: Types.TabsterCore,\n    element: HTMLElement,\n    dispose?: boolean\n): void {\n    const newAttrValue =\n        dispose || tabster._noop\n            ? undefined\n            : element.getAttribute(TABSTER_ATTRIBUTE_NAME);\n\n    let entry = tabster.storageEntry(element);\n    let newAttr: Types.TabsterAttributeOnElement | undefined;\n\n    if (newAttrValue) {\n        if (newAttrValue !== entry?.attr?.string) {\n            try {\n                const newValue = JSON.parse(\n                    newAttrValue\n                ) as Types.TabsterAttributeProps;\n\n                if (typeof newValue !== \"object\") {\n                    throw new Error(\n                        `Value is not a JSON object, got '${newAttrValue}'.`\n                    );\n                }\n\n                newAttr = {\n                    string: newAttrValue,\n                    object: newValue,\n                };\n            } catch (e) {\n                if (__DEV__) {\n                    console.error(\n                        `data-tabster attribute error: ${e}`,\n                        element\n                    );\n                }\n            }\n        } else {\n            return;\n        }\n    } else if (!entry) {\n        return;\n    }\n\n    if (!entry) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        entry = tabster.storageEntry(element, true)!;\n    }\n\n    if (!entry.tabster) {\n        entry.tabster = {};\n    }\n\n    const tabsterOnElement = entry.tabster || {};\n    const oldTabsterProps = entry.attr?.object || {};\n    const newTabsterProps = newAttr?.object || {};\n\n    for (const key of Object.keys(\n        oldTabsterProps\n    ) as (keyof Types.TabsterAttributeProps)[]) {\n        if (!newTabsterProps[key]) {\n            if (key === \"root\") {\n                const root = tabsterOnElement[key];\n\n                if (root) {\n                    tabster.root.onRoot(root, true);\n                }\n            }\n\n            switch (key) {\n                case \"deloser\":\n                case \"root\":\n                case \"groupper\":\n                case \"modalizer\":\n                case \"restorer\":\n                case \"mover\":\n                    // eslint-disable-next-line no-case-declarations\n                    const part = tabsterOnElement[key];\n                    if (part) {\n                        part.dispose();\n                        delete tabsterOnElement[key];\n                    }\n                    break;\n\n                case \"observed\":\n                    delete tabsterOnElement[key];\n                    if (tabster.observedElement) {\n                        tabster.observedElement.onObservedElementUpdate(\n                            element\n                        );\n                    }\n                    break;\n\n                case \"focusable\":\n                case \"outline\":\n                case \"uncontrolled\":\n                case \"sys\":\n                    delete tabsterOnElement[key];\n                    break;\n            }\n        }\n    }\n\n    for (const key of Object.keys(\n        newTabsterProps\n    ) as (keyof Types.TabsterAttributeProps)[]) {\n        const sys = newTabsterProps.sys;\n\n        switch (key) {\n            case \"deloser\":\n                if (tabsterOnElement.deloser) {\n                    tabsterOnElement.deloser.setProps(\n                        newTabsterProps.deloser as Types.DeloserProps\n                    );\n                } else {\n                    if (tabster.deloser) {\n                        tabsterOnElement.deloser =\n                            tabster.deloser.createDeloser(\n                                element,\n                                newTabsterProps.deloser as Types.DeloserProps\n                            );\n                    } else if (__DEV__) {\n                        console.error(\n                            \"Deloser API used before initialization, please call `getDeloser()`\"\n                        );\n                    }\n                }\n                break;\n\n            case \"root\":\n                if (tabsterOnElement.root) {\n                    tabsterOnElement.root.setProps(\n                        newTabsterProps.root as Types.RootProps\n                    );\n                } else {\n                    tabsterOnElement.root = tabster.root.createRoot(\n                        element,\n                        newTabsterProps.root as Types.RootProps,\n                        sys\n                    );\n                }\n                tabster.root.onRoot(tabsterOnElement.root);\n                break;\n\n            case \"modalizer\":\n                if (tabsterOnElement.modalizer) {\n                    tabsterOnElement.modalizer.setProps(\n                        newTabsterProps.modalizer as Types.ModalizerProps\n                    );\n                } else {\n                    if (tabster.modalizer) {\n                        tabsterOnElement.modalizer =\n                            tabster.modalizer.createModalizer(\n                                element,\n                                newTabsterProps.modalizer as Types.ModalizerProps,\n                                sys\n                            );\n                    } else if (__DEV__) {\n                        console.error(\n                            \"Modalizer API used before initialization, please call `getModalizer()`\"\n                        );\n                    }\n                }\n                break;\n\n            case \"restorer\":\n                if (tabsterOnElement.restorer) {\n                    tabsterOnElement.restorer.setProps(\n                        newTabsterProps.restorer as Types.RestorerProps\n                    );\n                } else {\n                    if (tabster.restorer) {\n                        if (newTabsterProps.restorer) {\n                            tabsterOnElement.restorer =\n                                tabster.restorer.createRestorer(\n                                    element,\n                                    newTabsterProps.restorer\n                                );\n                        }\n                    } else if (__DEV__) {\n                        console.error(\n                            \"Restorer API used before initialization, please call `getRestorer()`\"\n                        );\n                    }\n                }\n\n                break;\n\n            case \"focusable\":\n                tabsterOnElement.focusable = newTabsterProps.focusable;\n                break;\n\n            case \"groupper\":\n                if (tabsterOnElement.groupper) {\n                    tabsterOnElement.groupper.setProps(\n                        newTabsterProps.groupper as Types.GroupperProps\n                    );\n                } else {\n                    if (tabster.groupper) {\n                        tabsterOnElement.groupper =\n                            tabster.groupper.createGroupper(\n                                element,\n                                newTabsterProps.groupper as Types.GroupperProps,\n                                sys\n                            );\n                    } else if (__DEV__) {\n                        console.error(\n                            \"Groupper API used before initialization, please call `getGroupper()`\"\n                        );\n                    }\n                }\n                break;\n\n            case \"mover\":\n                if (tabsterOnElement.mover) {\n                    tabsterOnElement.mover.setProps(\n                        newTabsterProps.mover as Types.MoverProps\n                    );\n                } else {\n                    if (tabster.mover) {\n                        tabsterOnElement.mover = tabster.mover.createMover(\n                            element,\n                            newTabsterProps.mover as Types.MoverProps,\n                            sys\n                        );\n                    } else if (__DEV__) {\n                        console.error(\n                            \"Mover API used before initialization, please call `getMover()`\"\n                        );\n                    }\n                }\n                break;\n\n            case \"observed\":\n                if (tabster.observedElement) {\n                    tabsterOnElement.observed = newTabsterProps.observed;\n                    tabster.observedElement.onObservedElementUpdate(element);\n                } else if (__DEV__) {\n                    console.error(\n                        \"ObservedElement API used before initialization, please call `getObservedElement()`\"\n                    );\n                }\n                break;\n\n            case \"uncontrolled\":\n                tabsterOnElement.uncontrolled = newTabsterProps.uncontrolled;\n                break;\n\n            case \"outline\":\n                if (tabster.outline) {\n                    tabsterOnElement.outline = newTabsterProps.outline;\n                } else if (__DEV__) {\n                    console.error(\n                        \"Outline API used before initialization, please call `getOutline()`\"\n                    );\n                }\n                break;\n\n            case \"sys\":\n                tabsterOnElement.sys = newTabsterProps.sys;\n                break;\n\n            default:\n                console.error(\n                    `Unknown key '${key}' in data-tabster attribute value.`\n                );\n        }\n    }\n\n    if (newAttr) {\n        entry.attr = newAttr;\n    } else {\n        if (Object.keys(tabsterOnElement).length === 0) {\n            delete entry.tabster;\n            delete entry.attr;\n        }\n        tabster.storageEntry(element, false);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as Types from \"./Types\";\nimport * as EventsTypes from \"./EventsTypes\";\n\n/**\n * Events sent by Tabster.\n */\n\nexport const TabsterFocusInEventName = \"tabster:focusin\";\nexport const TabsterFocusOutEventName = \"tabster:focusout\";\n\n// Event is dispatched when Tabster wants to move focus as the result of\n// handling keyboard event. This allows to preventDefault() if you want to have\n// some custom logic.\nexport const TabsterMoveFocusEventName = \"tabster:movefocus\";\n\n/**\n * Events sent by Deloser.\n */\n\nexport const DeloserFocusLostEventName = \"tabster:deloser:focus-lost\";\n\n/**\n * Events to be sent to Deloser by the application.\n */\n\nexport const DeloserRestoreFocusEventName = \"tabster:deloser:restore-focus\";\n\n/**\n * Events sent by Modalizer.\n */\nexport const ModalizerActiveEventName = \"tabster:modalizer:active\";\nexport const ModalizerInactiveEventName = \"tabster:modalizer:inactive\";\nexport const ModalizerFocusInEventName = \"tabster:modalizer:focusin\";\nexport const ModalizerFocusOutEventName = \"tabster:modalizer:focusout\";\n\n/**\n * Events sent by Mover.\n */\nexport const MoverStateEventName = \"tabster:mover:state\";\n\n/**\n * Events to be sent to Mover by the application.\n */\n\n// Event that can be dispatched by the application to programmatically move\n// focus inside Mover.\nexport const MoverMoveFocusEventName = \"tabster:mover:movefocus\";\n// Event that can be dispatched by the application to forget or modify\n// memorized element in Mover with memorizeCurrent property.\nexport const MoverMemorizedElementEventName = \"tabster:mover:memorized-element\";\n\n/**\n * Events sent by Groupper.\n */\n\n/**\n * Events to be sent to Groupper by the application.\n */\n\n// Event that can be dispatched by the application to programmatically enter\n// or escape Groupper.\nexport const GroupperMoveFocusEventName = \"tabster:groupper:movefocus\";\n\n/**\n * Events sent by Restorer.\n */\n\nexport const RestorerRestoreFocusEventName = \"tabster:restorer:restore-focus\";\n\n/**\n * Events sent by Root.\n */\nexport const RootFocusEventName = \"tabster:root:focus\";\nexport const RootBlurEventName = \"tabster:root:blur\";\n\n// Node.js environments do not have CustomEvent and it is needed for the events to be\n// evaluated. It doesn't matter if it works or not in Node.js environment.\n// So, we just need to make sure that it doesn't throw undefined reference.\nconst CustomEvent_ =\n    typeof CustomEvent !== \"undefined\"\n        ? CustomEvent\n        : (function () {\n              /* no-op */\n          } as typeof CustomEvent);\n\nexport abstract class TabsterCustomEvent<D> extends CustomEvent_<D> {\n    /**\n     * @deprecated use `detail`.\n     */\n    details?: D;\n\n    constructor(type: string, detail?: D) {\n        super(type, {\n            bubbles: true,\n            cancelable: true,\n            composed: true,\n            detail,\n        });\n\n        this.details = detail;\n    }\n}\n\nexport class TabsterFocusInEvent extends TabsterCustomEvent<Types.FocusedElementDetail> {\n    constructor(detail: Types.FocusedElementDetail) {\n        super(TabsterFocusInEventName, detail);\n    }\n}\n\nexport class TabsterFocusOutEvent extends TabsterCustomEvent<Types.FocusedElementDetail> {\n    constructor(detail: Types.FocusedElementDetail) {\n        super(TabsterFocusOutEventName, detail);\n    }\n}\n\nexport class TabsterMoveFocusEvent extends TabsterCustomEvent<EventsTypes.TabsterMoveFocusEventDetail> {\n    constructor(detail: EventsTypes.TabsterMoveFocusEventDetail) {\n        super(TabsterMoveFocusEventName, detail);\n    }\n}\n\nexport class MoverStateEvent extends TabsterCustomEvent<Types.MoverElementState> {\n    constructor(detail: Types.MoverElementState) {\n        super(MoverStateEventName, detail);\n    }\n}\n\nexport class MoverMoveFocusEvent extends TabsterCustomEvent<EventsTypes.MoverMoveFocusEventDetail> {\n    constructor(detail: EventsTypes.MoverMoveFocusEventDetail) {\n        super(MoverMoveFocusEventName, detail);\n    }\n}\n\nexport class MoverMemorizedElementEvent extends TabsterCustomEvent<EventsTypes.MoverMemorizedElementEventDetail> {\n    constructor(detail: EventsTypes.MoverMemorizedElementEventDetail) {\n        super(MoverMemorizedElementEventName, detail);\n    }\n}\n\nexport class GroupperMoveFocusEvent extends TabsterCustomEvent<EventsTypes.GroupperMoveFocusEventDetail> {\n    constructor(detail: EventsTypes.GroupperMoveFocusEventDetail) {\n        super(GroupperMoveFocusEventName, detail);\n    }\n}\n\nexport class ModalizerActiveEvent extends TabsterCustomEvent<EventsTypes.ModalizerEventDetail> {\n    constructor(detail: EventsTypes.ModalizerEventDetail) {\n        super(ModalizerActiveEventName, detail);\n    }\n}\n\nexport class ModalizerInactiveEvent extends TabsterCustomEvent<EventsTypes.ModalizerEventDetail> {\n    constructor(detail: EventsTypes.ModalizerEventDetail) {\n        super(ModalizerInactiveEventName, detail);\n    }\n}\n\nexport class DeloserFocusLostEvent extends TabsterCustomEvent<Types.DeloserElementActions> {\n    constructor(detail: Types.DeloserElementActions) {\n        super(DeloserFocusLostEventName, detail);\n    }\n}\n\nexport class DeloserRestoreFocusEvent extends TabsterCustomEvent<undefined> {\n    constructor() {\n        super(DeloserRestoreFocusEventName);\n    }\n}\n\nexport class RestorerRestoreFocusEvent extends TabsterCustomEvent<undefined> {\n    constructor() {\n        super(RestorerRestoreFocusEventName);\n    }\n}\n\nexport class RootFocusEvent extends TabsterCustomEvent<EventsTypes.RootFocusEventDetail> {\n    constructor(detail: EventsTypes.RootFocusEventDetail) {\n        super(RootFocusEventName, detail);\n    }\n}\n\nexport class RootBlurEvent extends TabsterCustomEvent<EventsTypes.RootFocusEventDetail> {\n    constructor(detail: EventsTypes.RootFocusEventDetail) {\n        super(RootBlurEventName, detail);\n    }\n}\n\n// addEventListener() typings augmentation.\ndeclare global {\n    interface GlobalEventHandlersEventMap {\n        [TabsterFocusInEventName]: TabsterFocusInEvent;\n        [TabsterFocusOutEventName]: TabsterFocusOutEvent;\n        [TabsterMoveFocusEventName]: TabsterMoveFocusEvent;\n\n        [MoverStateEventName]: MoverStateEvent;\n        [MoverMoveFocusEventName]: MoverMoveFocusEvent;\n        [MoverMemorizedElementEventName]: MoverMemorizedElementEvent;\n\n        [GroupperMoveFocusEventName]: GroupperMoveFocusEvent;\n\n        [ModalizerActiveEventName]: ModalizerActiveEvent;\n        [ModalizerInactiveEventName]: ModalizerInactiveEvent;\n\n        [DeloserFocusLostEventName]: DeloserFocusLostEvent;\n        [DeloserRestoreFocusEventName]: DeloserRestoreFocusEvent;\n\n        [RestorerRestoreFocusEventName]: RestorerRestoreFocusEvent;\n\n        [RootFocusEventName]: RootFocusEvent;\n        [RootBlurEventName]: RootBlurEvent;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { DOMAPI } from \"./Types\";\n\nconst _createMutationObserver = (callback: MutationCallback) =>\n    new MutationObserver(callback);\nconst _createTreeWalker = (\n    doc: Document,\n    root: Node,\n    whatToShow?: number,\n    filter?: NodeFilter | null\n) => doc.createTreeWalker(root, whatToShow, filter);\nconst _getParentNode = (node: Node | null | undefined) =>\n    node ? node.parentNode : null;\nconst _getParentElement = (element: HTMLElement) =>\n    element ? element.parentElement : null;\nconst _nodeContains = (\n    parent: Node | null | undefined,\n    child: Node | null | undefined\n) => !!(child && parent?.contains(child));\nconst _getActiveElement = (doc: Document) => doc.activeElement;\nconst _querySelector = (element: Element, selector: string) =>\n    element.querySelector(selector);\nconst _querySelectorAll = (element: ParentNode, selector: string) =>\n    Array.prototype.slice.call(element.querySelectorAll(selector), 0);\nconst _getElementById = (doc: Document, id: string): HTMLElement | null =>\n    doc.getElementById(id);\nconst _getFirstChild = (node: Node | null | undefined): ChildNode | null =>\n    node?.firstChild || null;\nconst _getLastChild = (node: Node | null | undefined): ChildNode | null =>\n    node?.lastChild || null;\nconst _getNextSibling = (node: Node | null | undefined): ChildNode | null =>\n    node?.nextSibling || null;\nconst _getPreviousSibling = (node: Node | null | undefined): ChildNode | null =>\n    node?.previousSibling || null;\nconst _getFirstElementChild = (\n    element: Element | null | undefined\n): Element | null => element?.firstElementChild || null;\nconst _getLastElementChild = (\n    element: Element | null | undefined\n): Element | null => element?.lastElementChild || null;\nconst _getNextElementSibling = (\n    element: Element | null | undefined\n): Element | null => element?.nextElementSibling || null;\nconst _getPreviousElementSibling = (\n    element: Element | null | undefined\n): Element | null => element?.previousElementSibling || null;\nconst _appendChild = (parent: Node, child: Node): Node =>\n    parent.appendChild(child);\nconst _insertBefore = (\n    parent: Node,\n    child: Node,\n    referenceChild: Node | null\n): Node => parent.insertBefore(child, referenceChild);\nconst _getSelection = (ref: Node): Selection | null =>\n    ref.ownerDocument?.getSelection() || null;\nconst _getElementsByName = (referenceElement: HTMLElement, name: string) =>\n    referenceElement.ownerDocument.getElementsByName(name);\n\nexport const dom: DOMAPI = {\n    createMutationObserver: _createMutationObserver,\n    createTreeWalker: _createTreeWalker,\n    getParentNode: _getParentNode,\n    getParentElement: _getParentElement,\n    nodeContains: _nodeContains,\n    getActiveElement: _getActiveElement,\n    querySelector: _querySelector,\n    querySelectorAll: _querySelectorAll,\n    getElementById: _getElementById,\n    getFirstChild: _getFirstChild,\n    getLastChild: _getLastChild,\n    getNextSibling: _getNextSibling,\n    getPreviousSibling: _getPreviousSibling,\n    getFirstElementChild: _getFirstElementChild,\n    getLastElementChild: _getLastElementChild,\n    getNextElementSibling: _getNextElementSibling,\n    getPreviousElementSibling: _getPreviousElementSibling,\n    appendChild: _appendChild,\n    insertBefore: _insertBefore,\n    getSelection: _getSelection,\n    getElementsByName: _getElementsByName,\n};\n\nexport function setDOMAPI(domapi: Partial<DOMAPI>) {\n    for (const key of Object.keys(domapi) as (keyof DOMAPI)[]) {\n        (dom[key] as typeof domapi[typeof key]) = domapi[key];\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { nativeFocus } from \"keyborg\";\n\nimport {\n    DummyInputObserver as DummyInputObserverInterface,\n    GetWindow,\n    RadioButtonGroup,\n    SysProps,\n    TabsterAttributeProps,\n    TabsterCore,\n    TabsterPart as TabsterPartInterface,\n    Visibility,\n    WeakHTMLElement as WeakHTMLElementInterface,\n} from \"./Types\";\nimport {\n    FOCUSABLE_SELECTOR,\n    SysDummyInputsPositions,\n    TABSTER_ATTRIBUTE_NAME,\n    TABSTER_DUMMY_INPUT_ATTRIBUTE_NAME,\n    Visibilities,\n} from \"./Consts\";\nimport { TabsterMoveFocusEvent } from \"./Events\";\nimport { dom } from \"./DOMAPI\";\n\ninterface HTMLElementWithBoundingRectCacheId extends HTMLElement {\n    __tabsterCacheId?: string;\n}\n\ninterface FocusedElementWithIgnoreFlag extends HTMLElement {\n    __shouldIgnoreFocus: boolean;\n}\n\nexport interface WindowWithUID extends Window {\n    __tabsterCrossOriginWindowUID?: string;\n}\n\nexport interface HTMLElementWithUID extends HTMLElement {\n    __tabsterElementUID?: string;\n}\n\ninterface HTMLElementWithDummyContainer extends HTMLElement {\n    __tabsterDummyContainer?: WeakHTMLElement;\n}\n\nexport interface TabsterDOMRect {\n    bottom: number;\n    left: number;\n    right: number;\n    top: number;\n}\n\nexport interface InstanceContext {\n    elementByUId: { [uid: string]: WeakHTMLElement<HTMLElementWithUID> };\n    basics: InternalBasics;\n    WeakRef?: WeakRefConstructor;\n    containerBoundingRectCache: {\n        [id: string]: {\n            rect: TabsterDOMRect;\n            element: HTMLElementWithBoundingRectCacheId;\n        };\n    };\n    lastContainerBoundingRectCacheId: number;\n    containerBoundingRectCacheTimer?: number;\n    fakeWeakRefs: TabsterWeakRef<unknown>[];\n    fakeWeakRefsTimer?: number;\n    fakeWeakRefsStarted: boolean;\n}\n\nlet _isBrokenIE11: boolean;\n\nconst _DOMRect =\n    typeof DOMRect !== \"undefined\"\n        ? DOMRect\n        : class {\n              readonly bottom: number;\n              readonly left: number;\n              readonly right: number;\n              readonly top: number;\n\n              constructor(\n                  x?: number,\n                  y?: number,\n                  width?: number,\n                  height?: number\n              ) {\n                  this.left = x || 0;\n                  this.top = y || 0;\n                  this.right = (x || 0) + (width || 0);\n                  this.bottom = (y || 0) + (height || 0);\n              }\n          };\n\nlet _uidCounter = 0;\n\ntry {\n    // IE11 only accepts `filter` argument as a function (not object with the `acceptNode`\n    // property as the docs define). Also `entityReferenceExpansion` argument is not\n    // optional. And it throws exception when the above arguments aren't there.\n    document.createTreeWalker(document, NodeFilter.SHOW_ELEMENT);\n    _isBrokenIE11 = false;\n} catch (e) {\n    _isBrokenIE11 = true;\n}\n\nconst _updateDummyInputsTimeout = 100;\n\ninterface WindowWithUtilsConext extends Window {\n    __tabsterInstanceContext?: InstanceContext;\n    Promise: PromiseConstructor;\n    WeakRef: WeakRefConstructor;\n}\n\nexport function getInstanceContext(getWindow: GetWindow): InstanceContext {\n    const win = getWindow() as WindowWithUtilsConext;\n\n    let ctx = win.__tabsterInstanceContext;\n\n    if (!ctx) {\n        ctx = {\n            elementByUId: {},\n            basics: {\n                Promise: win.Promise || undefined,\n                WeakRef: win.WeakRef || undefined,\n            },\n            containerBoundingRectCache: {},\n            lastContainerBoundingRectCacheId: 0,\n            fakeWeakRefs: [],\n            fakeWeakRefsStarted: false,\n        };\n\n        win.__tabsterInstanceContext = ctx;\n    }\n\n    return ctx;\n}\n\nexport function disposeInstanceContext(win: Window): void {\n    const ctx = (win as WindowWithUtilsConext).__tabsterInstanceContext;\n\n    if (ctx) {\n        ctx.elementByUId = {};\n\n        delete ctx.WeakRef;\n\n        ctx.containerBoundingRectCache = {};\n\n        if (ctx.containerBoundingRectCacheTimer) {\n            win.clearTimeout(ctx.containerBoundingRectCacheTimer);\n        }\n\n        if (ctx.fakeWeakRefsTimer) {\n            win.clearTimeout(ctx.fakeWeakRefsTimer);\n        }\n\n        ctx.fakeWeakRefs = [];\n\n        delete (win as WindowWithUtilsConext).__tabsterInstanceContext;\n    }\n}\n\nexport function createWeakMap<K extends object, V>(win: Window): WeakMap<K, V> {\n    const ctx = (win as WindowWithUtilsConext).__tabsterInstanceContext;\n    return new (ctx?.basics.WeakMap || WeakMap)();\n}\n\nexport function hasSubFocusable(element: HTMLElement): boolean {\n    return !!element.querySelector(FOCUSABLE_SELECTOR);\n}\n\ninterface TabsterWeakRef<T> {\n    deref(): T | undefined;\n}\n\nclass FakeWeakRef<T extends HTMLElement = HTMLElement>\n    implements TabsterWeakRef<T>\n{\n    private _target: T | undefined;\n\n    constructor(target: T) {\n        this._target = target;\n    }\n\n    deref(): T | undefined {\n        return this._target;\n    }\n\n    static cleanup(fwr: FakeWeakRef, forceRemove?: boolean): boolean {\n        if (!fwr._target) {\n            return true;\n        }\n\n        if (\n            forceRemove ||\n            !documentContains(fwr._target.ownerDocument, fwr._target)\n        ) {\n            delete fwr._target;\n            return true;\n        }\n\n        return false;\n    }\n}\n\nexport class WeakHTMLElement<T extends HTMLElement = HTMLElement, D = undefined>\n    implements WeakHTMLElementInterface<D>\n{\n    private _ref: TabsterWeakRef<T> | undefined;\n    private _data: D | undefined;\n\n    constructor(getWindow: GetWindow, element: T, data?: D) {\n        const context = getInstanceContext(getWindow);\n\n        let ref: TabsterWeakRef<T>;\n        if (context.WeakRef) {\n            ref = new context.WeakRef(element);\n        } else {\n            ref = new FakeWeakRef(element);\n            context.fakeWeakRefs.push(ref);\n        }\n\n        this._ref = ref;\n        this._data = data;\n    }\n\n    get(): T | undefined {\n        const ref = this._ref;\n        let element: T | undefined;\n\n        if (ref) {\n            element = ref.deref();\n\n            if (!element) {\n                delete this._ref;\n            }\n        }\n\n        return element;\n    }\n\n    getData(): D | undefined {\n        return this._data;\n    }\n}\n\nexport function cleanupFakeWeakRefs(\n    getWindow: GetWindow,\n    forceRemove?: boolean\n): void {\n    const context = getInstanceContext(getWindow);\n    context.fakeWeakRefs = context.fakeWeakRefs.filter(\n        (e) => !FakeWeakRef.cleanup(e as FakeWeakRef, forceRemove)\n    );\n}\n\nexport function startFakeWeakRefsCleanup(getWindow: GetWindow): void {\n    const context = getInstanceContext(getWindow);\n\n    if (!context.fakeWeakRefsStarted) {\n        context.fakeWeakRefsStarted = true;\n        context.WeakRef = getWeakRef(context);\n    }\n\n    if (!context.fakeWeakRefsTimer) {\n        context.fakeWeakRefsTimer = getWindow().setTimeout(() => {\n            context.fakeWeakRefsTimer = undefined;\n            cleanupFakeWeakRefs(getWindow);\n            startFakeWeakRefsCleanup(getWindow);\n        }, 2 * 60 * 1000); // 2 minutes.\n    }\n}\n\nexport function stopFakeWeakRefsCleanupAndClearStorage(\n    getWindow: GetWindow\n): void {\n    const context = getInstanceContext(getWindow);\n\n    context.fakeWeakRefsStarted = false;\n\n    if (context.fakeWeakRefsTimer) {\n        getWindow().clearTimeout(context.fakeWeakRefsTimer);\n        context.fakeWeakRefsTimer = undefined;\n        context.fakeWeakRefs = [];\n    }\n}\n\nexport function createElementTreeWalker(\n    doc: Document,\n    root: Node,\n    acceptNode: (node: Node) => number\n): TreeWalker | undefined {\n    // IE11 will throw an exception when the TreeWalker root is not an Element.\n    if (root.nodeType !== Node.ELEMENT_NODE) {\n        return undefined;\n    }\n\n    // TypeScript isn't aware of IE11 behaving badly.\n    const filter = (_isBrokenIE11\n        ? acceptNode\n        : ({ acceptNode } as NodeFilter)) as unknown as NodeFilter;\n\n    return dom.createTreeWalker(\n        doc,\n        root,\n        NodeFilter.SHOW_ELEMENT,\n        filter,\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore: We still don't want to completely break IE11, so, entityReferenceExpansion argument is not optional.\n        false /* Last argument is not optional for IE11! */\n    );\n}\n\nexport function getBoundingRect(\n    getWindow: GetWindow,\n    element: HTMLElementWithBoundingRectCacheId\n): TabsterDOMRect {\n    let cacheId = element.__tabsterCacheId;\n    const context = getInstanceContext(getWindow);\n    const cached = cacheId\n        ? context.containerBoundingRectCache[cacheId]\n        : undefined;\n\n    if (cached) {\n        return cached.rect;\n    }\n\n    const scrollingElement =\n        element.ownerDocument && element.ownerDocument.documentElement;\n\n    if (!scrollingElement) {\n        return new _DOMRect();\n    }\n\n    // A bounding rect of the top-level element contains the whole page regardless of the\n    // scrollbar. So, we improvise a little and limiting the final result...\n    let left = 0;\n    let top = 0;\n    let right = scrollingElement.clientWidth;\n    let bottom = scrollingElement.clientHeight;\n\n    if (element !== scrollingElement) {\n        const r = element.getBoundingClientRect();\n        left = Math.max(left, r.left);\n        top = Math.max(top, r.top);\n        right = Math.min(right, r.right);\n        bottom = Math.min(bottom, r.bottom);\n    }\n\n    const rect = new _DOMRect(\n        left < right ? left : -1,\n        top < bottom ? top : -1,\n        left < right ? right - left : 0,\n        top < bottom ? bottom - top : 0\n    );\n\n    if (!cacheId) {\n        cacheId = \"r-\" + ++context.lastContainerBoundingRectCacheId;\n        element.__tabsterCacheId = cacheId;\n    }\n\n    context.containerBoundingRectCache[cacheId] = {\n        rect,\n        element,\n    };\n\n    if (!context.containerBoundingRectCacheTimer) {\n        context.containerBoundingRectCacheTimer = window.setTimeout(() => {\n            context.containerBoundingRectCacheTimer = undefined;\n\n            for (const cId of Object.keys(context.containerBoundingRectCache)) {\n                delete context.containerBoundingRectCache[cId].element\n                    .__tabsterCacheId;\n            }\n\n            context.containerBoundingRectCache = {};\n        }, 50);\n    }\n\n    return rect;\n}\n\nexport function isElementVerticallyVisibleInContainer(\n    getWindow: GetWindow,\n    element: HTMLElement,\n    tolerance: number\n): boolean {\n    const container = getScrollableContainer(element);\n    if (!container) {\n        return false;\n    }\n\n    const containerRect = getBoundingRect(getWindow, container);\n    const elementRect = element.getBoundingClientRect();\n    const intersectionTolerance = elementRect.height * (1 - tolerance);\n    const topIntersection = Math.max(0, containerRect.top - elementRect.top);\n    const bottomIntersection = Math.max(\n        0,\n        elementRect.bottom - containerRect.bottom\n    );\n    const totalIntersection = topIntersection + bottomIntersection;\n\n    return (\n        totalIntersection === 0 || totalIntersection <= intersectionTolerance\n    );\n}\n\nexport function isElementVisibleInContainer(\n    getWindow: GetWindow,\n    element: HTMLElement,\n    gap = 0\n): Visibility {\n    const container = getScrollableContainer(element);\n\n    if (container) {\n        const containerRect = getBoundingRect(getWindow, container);\n        const elementRect = element.getBoundingClientRect();\n\n        if (\n            elementRect.left > containerRect.right ||\n            elementRect.top > containerRect.bottom ||\n            elementRect.bottom < containerRect.top ||\n            elementRect.right < containerRect.left\n        ) {\n            return Visibilities.Invisible;\n        }\n\n        if (\n            elementRect.top + gap >= containerRect.top &&\n            elementRect.top <= containerRect.bottom &&\n            elementRect.bottom >= containerRect.top &&\n            elementRect.bottom - gap <= containerRect.bottom &&\n            elementRect.left + gap >= containerRect.left &&\n            elementRect.left <= containerRect.right &&\n            elementRect.right >= containerRect.left &&\n            elementRect.right - gap <= containerRect.right\n        ) {\n            return Visibilities.Visible;\n        }\n\n        return Visibilities.PartiallyVisible;\n    }\n\n    return Visibilities.Invisible;\n}\n\nexport function scrollIntoView(\n    getWindow: GetWindow,\n    element: HTMLElement,\n    alignToTop: boolean\n): void {\n    // Built-in DOM's scrollIntoView() is cool, but when we have nested containers,\n    // it scrolls all of them, not just the deepest one. So, trying to work it around.\n    const container = getScrollableContainer(element);\n\n    if (container) {\n        const containerRect = getBoundingRect(getWindow, container);\n        const elementRect = element.getBoundingClientRect();\n\n        if (alignToTop) {\n            container.scrollTop += elementRect.top - containerRect.top;\n        } else {\n            container.scrollTop += elementRect.bottom - containerRect.bottom;\n        }\n    }\n}\n\nexport function getScrollableContainer(\n    element: HTMLElement\n): HTMLElement | null {\n    const doc = element.ownerDocument;\n\n    if (doc) {\n        for (\n            let el: HTMLElement | null = dom.getParentElement(element);\n            el;\n            el = dom.getParentElement(el)\n        ) {\n            if (\n                el.scrollWidth > el.clientWidth ||\n                el.scrollHeight > el.clientHeight\n            ) {\n                return el;\n            }\n        }\n\n        return doc.documentElement;\n    }\n\n    return null;\n}\n\nexport function makeFocusIgnored(element: HTMLElement): void {\n    (element as FocusedElementWithIgnoreFlag).__shouldIgnoreFocus = true;\n}\n\nexport function shouldIgnoreFocus(element: HTMLElement): boolean {\n    return !!(element as FocusedElementWithIgnoreFlag).__shouldIgnoreFocus;\n}\n\nexport function getUId(wnd: Window & { msCrypto?: Crypto }): string {\n    const rnd = new Uint32Array(4);\n\n    if (wnd.crypto && wnd.crypto.getRandomValues) {\n        wnd.crypto.getRandomValues(rnd);\n    } else if (wnd.msCrypto && wnd.msCrypto.getRandomValues) {\n        wnd.msCrypto.getRandomValues(rnd);\n    } else {\n        for (let i = 0; i < rnd.length; i++) {\n            rnd[i] = 0xffffffff * Math.random();\n        }\n    }\n\n    const srnd: string[] = [];\n\n    for (let i = 0; i < rnd.length; i++) {\n        srnd.push(rnd[i].toString(36));\n    }\n\n    srnd.push(\"|\");\n    srnd.push((++_uidCounter).toString(36));\n    srnd.push(\"|\");\n    srnd.push(Date.now().toString(36));\n\n    return srnd.join(\"\");\n}\n\nexport function getElementUId(\n    getWindow: GetWindow,\n    element: HTMLElementWithUID\n): string {\n    const context = getInstanceContext(getWindow);\n    let uid = element.__tabsterElementUID;\n\n    if (!uid) {\n        uid = element.__tabsterElementUID = getUId(getWindow());\n    }\n\n    if (\n        !context.elementByUId[uid] &&\n        documentContains(element.ownerDocument, element)\n    ) {\n        context.elementByUId[uid] = new WeakHTMLElement(getWindow, element);\n    }\n\n    return uid;\n}\n\nexport function getElementByUId(\n    context: InstanceContext,\n    uid: string\n): WeakHTMLElement<HTMLElementWithUID, undefined> | undefined {\n    return context.elementByUId[uid];\n}\n\nexport function getWindowUId(win: WindowWithUID): string {\n    let uid = win.__tabsterCrossOriginWindowUID;\n\n    if (!uid) {\n        uid = win.__tabsterCrossOriginWindowUID = getUId(win);\n    }\n\n    return uid;\n}\n\nexport function clearElementCache(\n    getWindow: GetWindow,\n    parent?: HTMLElement\n): void {\n    const context = getInstanceContext(getWindow);\n\n    for (const key of Object.keys(context.elementByUId)) {\n        const wel = context.elementByUId[key];\n        const el = wel && wel.get();\n\n        if (el && parent) {\n            if (!dom.nodeContains(parent, el)) {\n                continue;\n            }\n        }\n\n        delete context.elementByUId[key];\n    }\n}\n\n// IE11 doesn't have document.contains()...\nexport function documentContains(\n    doc: HTMLDocument | null | undefined,\n    element: HTMLElement\n): boolean {\n    return dom.nodeContains(doc?.body, element);\n}\n\nexport function matchesSelector(\n    element: HTMLElement,\n    selector: string\n): boolean {\n    interface HTMLElementWithMatches extends HTMLElement {\n        matchesSelector?: typeof HTMLElement.prototype.matches;\n        msMatchesSelector?: typeof HTMLElement.prototype.matches;\n    }\n\n    const matches =\n        element.matches ||\n        (element as HTMLElementWithMatches).matchesSelector ||\n        (element as HTMLElementWithMatches).msMatchesSelector ||\n        element.webkitMatchesSelector;\n\n    return matches && matches.call(element, selector);\n}\n\nexport function getPromise(getWindow: GetWindow): PromiseConstructor {\n    const context = getInstanceContext(getWindow);\n    if (context.basics.Promise) {\n        return context.basics.Promise;\n    }\n\n    throw new Error(\"No Promise defined.\");\n}\n\nexport function getWeakRef(\n    context: InstanceContext\n): WeakRefConstructor | undefined {\n    return context.basics.WeakRef;\n}\n\ninterface InternalBasics {\n    Promise?: PromiseConstructor;\n    WeakRef?: WeakRefConstructor;\n    WeakMap?: WeakMapConstructor;\n}\n\nexport function setBasics(win: Window, basics: InternalBasics): void {\n    const context = getInstanceContext(() => win);\n\n    let key: keyof InternalBasics;\n\n    key = \"Promise\";\n    if (key in basics) {\n        context.basics[key] = basics[key];\n    }\n\n    key = \"WeakRef\";\n    if (key in basics) {\n        context.basics[key] = basics[key];\n    }\n\n    key = \"WeakMap\";\n    if (key in basics) {\n        context.basics[key] = basics[key];\n    }\n}\n\nlet _lastTabsterPartId = 0;\n\nexport abstract class TabsterPart<P, D = undefined>\n    implements TabsterPartInterface<P>\n{\n    protected _tabster: TabsterCore;\n    protected _element: WeakHTMLElement<HTMLElement, D>;\n    protected _props: P;\n\n    readonly id: string;\n\n    constructor(tabster: TabsterCore, element: HTMLElement, props: P) {\n        const getWindow = tabster.getWindow;\n        this._tabster = tabster;\n        this._element = new WeakHTMLElement(getWindow, element);\n        this._props = { ...props };\n        this.id = \"i\" + ++_lastTabsterPartId;\n    }\n\n    getElement(): HTMLElement | undefined {\n        return this._element.get();\n    }\n\n    getProps(): P {\n        return this._props;\n    }\n\n    setProps(props: P): void {\n        this._props = { ...props };\n    }\n}\n\nexport interface DummyInputProps {\n    /** The input is created to be used only once and autoremoved when focused. */\n    isPhantom?: boolean;\n    /** Whether the input is before or after the content it is guarding.  */\n    isFirst: boolean;\n}\n\nexport type DummyInputFocusCallback = (\n    dummyInput: DummyInput,\n    isBackward: boolean,\n    relatedTarget: HTMLElement | null\n) => void;\n\n/**\n * Dummy HTML elements that are used as focus sentinels for the DOM enclosed within them\n */\nexport class DummyInput {\n    private _isPhantom: DummyInputProps[\"isPhantom\"];\n    private _fixedTarget?: WeakHTMLElement;\n    private _disposeTimer: number | undefined;\n    private _clearDisposeTimeout: (() => void) | undefined;\n\n    input: HTMLElement | undefined;\n    useDefaultAction?: boolean;\n    isFirst: DummyInputProps[\"isFirst\"];\n    isOutside: boolean;\n    /** Called when the input is focused */\n    onFocusIn?: DummyInputFocusCallback;\n    /** Called when the input is blurred */\n    onFocusOut?: DummyInputFocusCallback;\n\n    constructor(\n        getWindow: GetWindow,\n        isOutside: boolean,\n        props: DummyInputProps,\n        element?: WeakHTMLElement,\n        fixedTarget?: WeakHTMLElement\n    ) {\n        const win = getWindow();\n        const input = win.document.createElement(\"i\");\n\n        input.tabIndex = 0;\n        input.setAttribute(\"role\", \"none\");\n\n        input.setAttribute(TABSTER_DUMMY_INPUT_ATTRIBUTE_NAME, \"\");\n        input.setAttribute(\"aria-hidden\", \"true\");\n\n        const style = input.style;\n        style.position = \"fixed\";\n        style.width = style.height = \"1px\";\n        style.opacity = \"0.001\";\n        style.zIndex = \"-1\";\n        style.setProperty(\"content-visibility\", \"hidden\");\n\n        makeFocusIgnored(input);\n\n        this.input = input;\n        this.isFirst = props.isFirst;\n        this.isOutside = isOutside;\n        this._isPhantom = props.isPhantom ?? false;\n        this._fixedTarget = fixedTarget;\n\n        input.addEventListener(\"focusin\", this._focusIn);\n        input.addEventListener(\"focusout\", this._focusOut);\n\n        (input as HTMLElementWithDummyContainer).__tabsterDummyContainer =\n            element;\n\n        if (this._isPhantom) {\n            this._disposeTimer = win.setTimeout(() => {\n                delete this._disposeTimer;\n                this.dispose();\n            }, 0);\n\n            this._clearDisposeTimeout = () => {\n                if (this._disposeTimer) {\n                    win.clearTimeout(this._disposeTimer);\n                    delete this._disposeTimer;\n                }\n\n                delete this._clearDisposeTimeout;\n            };\n        }\n    }\n\n    dispose(): void {\n        if (this._clearDisposeTimeout) {\n            this._clearDisposeTimeout();\n        }\n\n        const input = this.input;\n\n        if (!input) {\n            return;\n        }\n\n        delete this._fixedTarget;\n        delete this.onFocusIn;\n        delete this.onFocusOut;\n        delete this.input;\n\n        input.removeEventListener(\"focusin\", this._focusIn);\n        input.removeEventListener(\"focusout\", this._focusOut);\n\n        delete (input as HTMLElementWithDummyContainer).__tabsterDummyContainer;\n\n        dom.getParentNode(input)?.removeChild(input);\n    }\n\n    setTopLeft(top: number, left: number): void {\n        const style = this.input?.style;\n\n        if (style) {\n            style.top = `${top}px`;\n            style.left = `${left}px`;\n        }\n    }\n\n    private _isBackward(\n        isIn: boolean,\n        current: HTMLElement,\n        previous: HTMLElement | null\n    ): boolean {\n        return isIn && !previous\n            ? !this.isFirst\n            : !!(\n                  previous &&\n                  current.compareDocumentPosition(previous) &\n                      Node.DOCUMENT_POSITION_FOLLOWING\n              );\n    }\n\n    private _focusIn = (e: FocusEvent): void => {\n        if (this._fixedTarget) {\n            const target = this._fixedTarget.get();\n\n            if (target) {\n                nativeFocus(target);\n            }\n\n            return;\n        }\n\n        const input = this.input;\n\n        if (this.onFocusIn && input) {\n            const relatedTarget = e.relatedTarget as HTMLElement | null;\n\n            this.onFocusIn(\n                this,\n                this._isBackward(true, input, relatedTarget),\n                relatedTarget\n            );\n        }\n    };\n\n    private _focusOut = (e: FocusEvent): void => {\n        if (this._fixedTarget) {\n            return;\n        }\n\n        this.useDefaultAction = false;\n\n        const input = this.input;\n\n        if (this.onFocusOut && input) {\n            const relatedTarget = e.relatedTarget as HTMLElement | null;\n\n            this.onFocusOut(\n                this,\n                this._isBackward(false, input, relatedTarget),\n                relatedTarget\n            );\n        }\n    };\n}\n\ninterface HTMLElementWithDummyInputs extends HTMLElement {\n    __tabsterDummy?: DummyInputManagerCore;\n}\n\nexport const DummyInputManagerPriorities = {\n    Root: 1,\n    Modalizer: 2,\n    Mover: 3,\n    Groupper: 4,\n} as const;\n\nexport class DummyInputManager {\n    private _instance?: DummyInputManagerCore;\n    private _onFocusIn?: DummyInputFocusCallback;\n    private _onFocusOut?: DummyInputFocusCallback;\n    protected _element: WeakHTMLElement;\n\n    constructor(\n        tabster: TabsterCore,\n        element: WeakHTMLElement,\n        priority: number,\n        sys: SysProps | undefined,\n        outsideByDefault?: boolean,\n        callForDefaultAction?: boolean\n    ) {\n        this._element = element;\n\n        this._instance = new DummyInputManagerCore(\n            tabster,\n            element,\n            this,\n            priority,\n            sys,\n            outsideByDefault,\n            callForDefaultAction\n        );\n    }\n\n    protected _setHandlers(\n        onFocusIn?: DummyInputFocusCallback,\n        onFocusOut?: DummyInputFocusCallback\n    ): void {\n        this._onFocusIn = onFocusIn;\n        this._onFocusOut = onFocusOut;\n    }\n\n    moveOut(backwards: boolean): void {\n        this._instance?.moveOut(backwards);\n    }\n\n    moveOutWithDefaultAction(\n        backwards: boolean,\n        relatedEvent: KeyboardEvent\n    ): void {\n        this._instance?.moveOutWithDefaultAction(backwards, relatedEvent);\n    }\n\n    getHandler(isIn: boolean): DummyInputFocusCallback | undefined {\n        return isIn ? this._onFocusIn : this._onFocusOut;\n    }\n\n    setTabbable(tabbable: boolean) {\n        this._instance?.setTabbable(this, tabbable);\n    }\n\n    dispose(): void {\n        if (this._instance) {\n            this._instance.dispose(this);\n            delete this._instance;\n        }\n\n        delete this._onFocusIn;\n        delete this._onFocusOut;\n    }\n\n    static moveWithPhantomDummy(\n        tabster: TabsterCore,\n        element: HTMLElement, // The target element to move to or out of.\n        moveOutOfElement: boolean, // Whether to move out of the element or into it.\n        isBackward: boolean, // Are we tabbing of shift-tabbing?\n        relatedEvent: KeyboardEvent // The event that triggered the move.\n    ): void {\n        // Phantom dummy is a hack to use browser's default action to move\n        // focus from a specific point in the application to the next/previous\n        // element. Default action is needed because next focusable element\n        // is not always available to focus directly (for example, next focusable\n        // is inside isolated iframe) or for uncontrolled areas we want to make\n        // sure that something that controls it takes care of the focusing.\n        // It works in a way that during the Tab key handling, we create a dummy\n        // input element, place it to the specific place in the DOM and focus it,\n        // then the default action of the Tab press will move focus from our dummy\n        // input. And we remove it from the DOM right after that.\n        const dummy: DummyInput = new DummyInput(tabster.getWindow, true, {\n            isPhantom: true,\n            isFirst: true,\n        });\n\n        const input = dummy.input;\n\n        if (input) {\n            let parent: HTMLElement | null;\n            let insertBefore: HTMLElement | null;\n\n            // Let's say we have a following DOM structure:\n            // <div>\n            //   <button>Button1</button>\n            //   <div id=\"uncontrolled\" data-tabster={uncontrolled: {}}>\n            //     <button>Button2</button>\n            //     <button>Button3</button>\n            //   </div>\n            //   <button>Button4</button>\n            // </div>\n            //\n            // We pass the \"uncontrolled\" div as the element to move to or out of.\n            //\n            // When we pass moveOutOfElement=true and isBackward=false,\n            // the phantom dummy input will be inserted before Button4.\n            //\n            // When we pass moveOutOfElement=true and isBackward=true, there are\n            // two cases. If the uncontrolled element is focusable (has tabindex=0),\n            // the phantom dummy input will be inserted after Button1. If the\n            // uncontrolled element is not focusable, the phantom dummy input will be\n            // inserted before Button2.\n            //\n            // When we pass moveOutOfElement=false and isBackward=false, the\n            // phantom dummy input will be inserted after Button1.\n            //\n            // When we pass moveOutOfElement=false and isBackward=true, the phantom\n            // dummy input will be inserted before Button4.\n            //\n            // And we have a corner case for <body> and we make sure that the inserted\n            // dummy is inserted properly when there are existing permanent dummies.\n\n            if (element.tagName === \"BODY\") {\n                // We cannot insert elements outside of BODY.\n                parent = element;\n                insertBefore =\n                    (moveOutOfElement && isBackward) ||\n                    (!moveOutOfElement && !isBackward)\n                        ? (dom.getFirstElementChild(\n                              element\n                          ) as HTMLElement | null)\n                        : null;\n            } else {\n                if (\n                    moveOutOfElement &&\n                    (!isBackward ||\n                        (isBackward &&\n                            !tabster.focusable.isFocusable(\n                                element,\n                                false,\n                                true,\n                                true\n                            )))\n                ) {\n                    parent = element;\n                    insertBefore = isBackward\n                        ? (element.firstElementChild as HTMLElement | null)\n                        : null;\n                } else {\n                    parent = dom.getParentElement(element);\n                    insertBefore =\n                        (moveOutOfElement && isBackward) ||\n                        (!moveOutOfElement && !isBackward)\n                            ? element\n                            : (dom.getNextElementSibling(\n                                  element\n                              ) as HTMLElement | null);\n                }\n\n                let potentialDummy: HTMLElement | null;\n                let dummyFor: HTMLElement | null;\n\n                do {\n                    // This is a safety pillow for the cases when someone, combines\n                    // groupper with uncontrolled on the same node. Which is technically\n                    // not correct, but moving into the container element via its dummy\n                    // input would produce a correct behaviour in uncontrolled mode.\n                    potentialDummy = (\n                        (moveOutOfElement && isBackward) ||\n                        (!moveOutOfElement && !isBackward)\n                            ? dom.getPreviousElementSibling(insertBefore)\n                            : insertBefore\n                    ) as HTMLElement | null;\n\n                    dummyFor = getDummyInputContainer(potentialDummy);\n\n                    if (dummyFor === element) {\n                        insertBefore =\n                            (moveOutOfElement && isBackward) ||\n                            (!moveOutOfElement && !isBackward)\n                                ? potentialDummy\n                                : (dom.getNextElementSibling(\n                                      potentialDummy\n                                  ) as HTMLElement | null);\n                    } else {\n                        dummyFor = null;\n                    }\n                } while (dummyFor);\n            }\n\n            if (\n                parent?.dispatchEvent(\n                    new TabsterMoveFocusEvent({\n                        by: \"root\",\n                        owner: parent,\n                        next: null,\n                        relatedEvent,\n                    })\n                )\n            ) {\n                dom.insertBefore(parent, input, insertBefore);\n                nativeFocus(input);\n            }\n        }\n    }\n\n    static addPhantomDummyWithTarget(\n        tabster: TabsterCore,\n        sourceElement: HTMLElement,\n        isBackward: boolean,\n        targetElement: HTMLElement\n    ): void {\n        const dummy: DummyInput = new DummyInput(\n            tabster.getWindow,\n            true,\n            {\n                isPhantom: true,\n                isFirst: true,\n            },\n            undefined,\n            new WeakHTMLElement(tabster.getWindow, targetElement)\n        );\n\n        const input = dummy.input;\n\n        if (input) {\n            let dummyParent: HTMLElement | null;\n            let insertBefore: HTMLElement | null;\n\n            if (hasSubFocusable(sourceElement) && !isBackward) {\n                dummyParent = sourceElement;\n                insertBefore = dom.getFirstElementChild(\n                    sourceElement\n                ) as HTMLElement | null;\n            } else {\n                dummyParent = dom.getParentElement(sourceElement);\n                insertBefore = isBackward\n                    ? sourceElement\n                    : (dom.getNextElementSibling(\n                          sourceElement\n                      ) as HTMLElement | null);\n            }\n\n            if (dummyParent) {\n                dom.insertBefore(dummyParent, input, insertBefore);\n            }\n        }\n    }\n}\n\ninterface DummyInputWrapper {\n    manager: DummyInputManager;\n    priority: number;\n    tabbable: boolean;\n}\n\nfunction setDummyInputDebugValue(\n    dummy: DummyInput,\n    wrappers: DummyInputWrapper[]\n): void {\n    const what: Record<number, string> = {\n        1: \"Root\",\n        2: \"Modalizer\",\n        3: \"Mover\",\n        4: \"Groupper\",\n    };\n\n    dummy.input?.setAttribute(\n        TABSTER_DUMMY_INPUT_ATTRIBUTE_NAME,\n        [\n            `isFirst=${dummy.isFirst}`,\n            `isOutside=${dummy.isOutside}`,\n            ...wrappers.map(\n                (w) => `(${what[w.priority]}, tabbable=${w.tabbable})`\n            ),\n        ].join(\", \")\n    );\n}\n\nexport class DummyInputObserver implements DummyInputObserverInterface {\n    private _win?: GetWindow;\n    private _updateQueue: Set<\n        (\n            scrollTopLeftCache: Map<\n                HTMLElement,\n                { scrollTop: number; scrollLeft: number } | null\n            >\n        ) => () => void\n    > = new Set();\n    private _updateTimer?: number;\n    private _lastUpdateQueueTime = 0;\n    private _changedParents: WeakSet<Node> = new WeakSet();\n    private _updateDummyInputsTimer?: number;\n    private _dummyElements: WeakHTMLElement<HTMLElement>[] = [];\n    private _dummyCallbacks: WeakMap<HTMLElement, () => void> = new WeakMap();\n    domChanged?(parent: HTMLElement): void;\n\n    constructor(win: GetWindow) {\n        this._win = win;\n    }\n\n    add(dummy: HTMLElement, callback: () => void): void {\n        if (!this._dummyCallbacks.has(dummy) && this._win) {\n            this._dummyElements.push(new WeakHTMLElement(this._win, dummy));\n            this._dummyCallbacks.set(dummy, callback);\n            this.domChanged = this._domChanged;\n        }\n    }\n\n    remove(dummy: HTMLElement): void {\n        this._dummyElements = this._dummyElements.filter((ref) => {\n            const element = ref.get();\n            return element && element !== dummy;\n        });\n\n        this._dummyCallbacks.delete(dummy);\n\n        if (this._dummyElements.length === 0) {\n            delete this.domChanged;\n        }\n    }\n\n    dispose(): void {\n        const win = this._win?.();\n\n        if (this._updateTimer) {\n            win?.clearTimeout(this._updateTimer);\n            delete this._updateTimer;\n        }\n\n        if (this._updateDummyInputsTimer) {\n            win?.clearTimeout(this._updateDummyInputsTimer);\n            delete this._updateDummyInputsTimer;\n        }\n\n        this._changedParents = new WeakSet();\n        this._dummyCallbacks = new WeakMap();\n        this._dummyElements = [];\n        this._updateQueue.clear();\n\n        delete this.domChanged;\n        delete this._win;\n    }\n\n    private _domChanged = (parent: HTMLElement): void => {\n        if (this._changedParents.has(parent)) {\n            return;\n        }\n\n        this._changedParents.add(parent);\n\n        if (this._updateDummyInputsTimer) {\n            return;\n        }\n\n        this._updateDummyInputsTimer = this._win?.().setTimeout(() => {\n            delete this._updateDummyInputsTimer;\n\n            for (const ref of this._dummyElements) {\n                const dummyElement = ref.get();\n\n                if (dummyElement) {\n                    const callback = this._dummyCallbacks.get(dummyElement);\n\n                    if (callback) {\n                        const dummyParent = dom.getParentNode(dummyElement);\n\n                        if (\n                            !dummyParent ||\n                            this._changedParents.has(dummyParent)\n                        ) {\n                            callback();\n                        }\n                    }\n                }\n            }\n\n            this._changedParents = new WeakSet();\n        }, _updateDummyInputsTimeout);\n    };\n\n    updatePositions(\n        compute: (\n            scrollTopLeftCache: Map<\n                HTMLElement,\n                { scrollTop: number; scrollLeft: number } | null\n            >\n        ) => () => void\n    ): void {\n        if (!this._win) {\n            // As this is a public method, we make sure that it has no effect when\n            // called after dispose().\n            return;\n        }\n\n        this._updateQueue.add(compute);\n\n        this._lastUpdateQueueTime = Date.now();\n\n        this._scheduledUpdatePositions();\n    }\n\n    private _scheduledUpdatePositions(): void {\n        if (this._updateTimer) {\n            return;\n        }\n\n        this._updateTimer = this._win?.().setTimeout(() => {\n            delete this._updateTimer;\n\n            // updatePositions() might be called quite a lot during the scrolling.\n            // So, instead of clearing the timeout and scheduling a new one, we\n            // check if enough time has passed since the last updatePositions() call\n            // and only schedule a new one if not.\n            // At maximum, we will update dummy inputs positions\n            // _updateDummyInputsTimeout * 2 after the last updatePositions() call.\n            if (\n                this._lastUpdateQueueTime + _updateDummyInputsTimeout <=\n                Date.now()\n            ) {\n                // A cache for current bulk of updates to reduce getComputedStyle() calls.\n                const scrollTopLeftCache = new Map<\n                    HTMLElement,\n                    { scrollTop: number; scrollLeft: number } | null\n                >();\n\n                const setTopLeftCallbacks: (() => void)[] = [];\n\n                for (const compute of this._updateQueue) {\n                    setTopLeftCallbacks.push(compute(scrollTopLeftCache));\n                }\n\n                this._updateQueue.clear();\n\n                // We're splitting the computation of offsets and setting them to avoid extra\n                // reflows.\n                for (const setTopLeft of setTopLeftCallbacks) {\n                    setTopLeft();\n                }\n\n                // Explicitly clear to not hold references till the next garbage collection.\n                scrollTopLeftCache.clear();\n            } else {\n                this._scheduledUpdatePositions();\n            }\n        }, _updateDummyInputsTimeout);\n    }\n}\n\n/**\n * Parent class that encapsulates the behaviour of dummy inputs (focus sentinels)\n */\nclass DummyInputManagerCore {\n    private _tabster: TabsterCore;\n    private _addTimer: number | undefined;\n    private _getWindow: GetWindow;\n    private _wrappers: DummyInputWrapper[] = [];\n    private _element: WeakHTMLElement | undefined;\n    private _isOutside = false;\n    private _firstDummy: DummyInput | undefined;\n    private _lastDummy: DummyInput | undefined;\n    private _transformElements: Set<HTMLElement> = new Set();\n    private _callForDefaultAction: boolean | undefined;\n\n    constructor(\n        tabster: TabsterCore,\n        element: WeakHTMLElement,\n        manager: DummyInputManager,\n        priority: number,\n        sys: SysProps | undefined,\n        outsideByDefault?: boolean,\n        callForDefaultAction?: boolean\n    ) {\n        const el = element.get() as HTMLElementWithDummyInputs;\n\n        if (!el) {\n            throw new Error(\"No element\");\n        }\n\n        this._tabster = tabster;\n        this._getWindow = tabster.getWindow;\n        this._callForDefaultAction = callForDefaultAction;\n\n        const instance = el.__tabsterDummy;\n\n        (instance || this)._wrappers.push({\n            manager,\n            priority,\n            tabbable: true,\n        });\n\n        if (instance) {\n            if (__DEV__) {\n                this._firstDummy &&\n                    setDummyInputDebugValue(\n                        this._firstDummy,\n                        instance._wrappers\n                    );\n                this._lastDummy &&\n                    setDummyInputDebugValue(\n                        this._lastDummy,\n                        instance._wrappers\n                    );\n            }\n\n            return instance;\n        }\n\n        el.__tabsterDummy = this;\n\n        // Some elements allow only specific types of direct descendants and we need to\n        // put our dummy inputs inside or outside of the element accordingly.\n        const forcedDummyPosition = sys?.dummyInputsPosition;\n        const tagName = el.tagName;\n        this._isOutside = !forcedDummyPosition\n            ? (outsideByDefault ||\n                  tagName === \"UL\" ||\n                  tagName === \"OL\" ||\n                  tagName === \"TABLE\") &&\n              !(tagName === \"LI\" || tagName === \"TD\" || tagName === \"TH\")\n            : forcedDummyPosition === SysDummyInputsPositions.Outside;\n\n        this._firstDummy = new DummyInput(\n            this._getWindow,\n            this._isOutside,\n            {\n                isFirst: true,\n            },\n            element\n        );\n\n        this._lastDummy = new DummyInput(\n            this._getWindow,\n            this._isOutside,\n            {\n                isFirst: false,\n            },\n            element\n        );\n\n        // We will be checking dummy input parents to see if their child list have changed.\n        // So, it is enough to have just one of the inputs observed, because\n        // both dummy inputs always have the same parent.\n        const dummyElement = this._firstDummy.input;\n        dummyElement &&\n            tabster._dummyObserver.add(dummyElement, this._addDummyInputs);\n\n        this._firstDummy.onFocusIn = this._onFocusIn;\n        this._firstDummy.onFocusOut = this._onFocusOut;\n        this._lastDummy.onFocusIn = this._onFocusIn;\n        this._lastDummy.onFocusOut = this._onFocusOut;\n\n        this._element = element;\n        this._addDummyInputs();\n    }\n\n    dispose(manager: DummyInputManager, force?: boolean): void {\n        const wrappers = (this._wrappers = this._wrappers.filter(\n            (w) => w.manager !== manager && !force\n        ));\n\n        if (__DEV__) {\n            this._firstDummy &&\n                setDummyInputDebugValue(this._firstDummy, wrappers);\n            this._lastDummy &&\n                setDummyInputDebugValue(this._lastDummy, wrappers);\n        }\n\n        if (wrappers.length === 0) {\n            delete (this._element?.get() as HTMLElementWithDummyInputs)\n                .__tabsterDummy;\n\n            for (const el of this._transformElements) {\n                el.removeEventListener(\"scroll\", this._addTransformOffsets);\n            }\n            this._transformElements.clear();\n\n            const win = this._getWindow();\n\n            if (this._addTimer) {\n                win.clearTimeout(this._addTimer);\n                delete this._addTimer;\n            }\n\n            const dummyElement = this._firstDummy?.input;\n            dummyElement && this._tabster._dummyObserver.remove(dummyElement);\n\n            this._firstDummy?.dispose();\n            this._lastDummy?.dispose();\n        }\n    }\n\n    private _onFocus(\n        isIn: boolean,\n        dummyInput: DummyInput,\n        isBackward: boolean,\n        relatedTarget: HTMLElement | null\n    ): void {\n        const wrapper = this._getCurrent();\n\n        if (\n            wrapper &&\n            (!dummyInput.useDefaultAction || this._callForDefaultAction)\n        ) {\n            wrapper.manager.getHandler(isIn)?.(\n                dummyInput,\n                isBackward,\n                relatedTarget\n            );\n        }\n    }\n\n    private _onFocusIn = (\n        dummyInput: DummyInput,\n        isBackward: boolean,\n        relatedTarget: HTMLElement | null\n    ): void => {\n        this._onFocus(true, dummyInput, isBackward, relatedTarget);\n    };\n\n    private _onFocusOut = (\n        dummyInput: DummyInput,\n        isBackward: boolean,\n        relatedTarget: HTMLElement | null\n    ): void => {\n        this._onFocus(false, dummyInput, isBackward, relatedTarget);\n    };\n\n    moveOut = (backwards: boolean): void => {\n        const first = this._firstDummy;\n        const last = this._lastDummy;\n\n        if (first && last) {\n            // For the sake of performance optimization, the dummy input\n            // position in the DOM updates asynchronously from the DOM change.\n            // Calling _ensurePosition() to make sure the position is correct.\n            this._ensurePosition();\n\n            const firstInput = first.input;\n            const lastInput = last.input;\n            const element = this._element?.get();\n\n            if (firstInput && lastInput && element) {\n                let toFocus: HTMLElement | undefined;\n\n                if (backwards) {\n                    firstInput.tabIndex = 0;\n                    toFocus = firstInput;\n                } else {\n                    lastInput.tabIndex = 0;\n                    toFocus = lastInput;\n                }\n\n                if (toFocus) {\n                    nativeFocus(toFocus);\n                }\n            }\n        }\n    };\n\n    /**\n     * Prepares to move focus out of the given element by focusing\n     * one of the dummy inputs and setting the `useDefaultAction` flag\n     * @param backwards focus moving to an element behind the given element\n     */\n    moveOutWithDefaultAction = (\n        backwards: boolean,\n        relatedEvent: KeyboardEvent\n    ): void => {\n        const first = this._firstDummy;\n        const last = this._lastDummy;\n\n        if (first && last) {\n            // For the sake of performance optimization, the dummy input\n            // position in the DOM updates asynchronously from the DOM change.\n            // Calling _ensurePosition() to make sure the position is correct.\n            this._ensurePosition();\n\n            const firstInput = first.input;\n            const lastInput = last.input;\n            const element = this._element?.get();\n\n            if (firstInput && lastInput && element) {\n                let toFocus: HTMLElement | undefined;\n\n                if (backwards) {\n                    if (\n                        !first.isOutside &&\n                        this._tabster.focusable.isFocusable(\n                            element,\n                            true,\n                            true,\n                            true\n                        )\n                    ) {\n                        toFocus = element;\n                    } else {\n                        first.useDefaultAction = true;\n                        firstInput.tabIndex = 0;\n                        toFocus = firstInput;\n                    }\n                } else {\n                    last.useDefaultAction = true;\n                    lastInput.tabIndex = 0;\n                    toFocus = lastInput;\n                }\n\n                if (\n                    toFocus &&\n                    element.dispatchEvent(\n                        new TabsterMoveFocusEvent({\n                            by: \"root\",\n                            owner: element,\n                            next: null,\n                            relatedEvent,\n                        })\n                    )\n                ) {\n                    nativeFocus(toFocus);\n                }\n            }\n        }\n    };\n\n    setTabbable = (manager: DummyInputManager, tabbable: boolean) => {\n        for (const w of this._wrappers) {\n            if (w.manager === manager) {\n                w.tabbable = tabbable;\n                break;\n            }\n        }\n\n        const wrapper = this._getCurrent();\n\n        if (wrapper) {\n            const tabIndex = wrapper.tabbable ? 0 : -1;\n\n            let input = this._firstDummy?.input;\n\n            if (input) {\n                input.tabIndex = tabIndex;\n            }\n\n            input = this._lastDummy?.input;\n\n            if (input) {\n                input.tabIndex = tabIndex;\n            }\n        }\n\n        if (__DEV__) {\n            this._firstDummy &&\n                setDummyInputDebugValue(this._firstDummy, this._wrappers);\n            this._lastDummy &&\n                setDummyInputDebugValue(this._lastDummy, this._wrappers);\n        }\n    };\n\n    private _getCurrent(): DummyInputWrapper | undefined {\n        this._wrappers.sort((a, b) => {\n            if (a.tabbable !== b.tabbable) {\n                return a.tabbable ? -1 : 1;\n            }\n\n            return a.priority - b.priority;\n        });\n\n        return this._wrappers[0];\n    }\n\n    /**\n     * Adds dummy inputs as the first and last child of the given element\n     * Called each time the children under the element is mutated\n     */\n    private _addDummyInputs = () => {\n        if (this._addTimer) {\n            return;\n        }\n\n        this._addTimer = this._getWindow().setTimeout(() => {\n            delete this._addTimer;\n\n            this._ensurePosition();\n\n            if (__DEV__) {\n                this._firstDummy &&\n                    setDummyInputDebugValue(this._firstDummy, this._wrappers);\n                this._lastDummy &&\n                    setDummyInputDebugValue(this._lastDummy, this._wrappers);\n            }\n\n            this._addTransformOffsets();\n        }, 0);\n    };\n\n    private _ensurePosition(): void {\n        const element = this._element?.get();\n        const firstDummyInput = this._firstDummy?.input;\n        const lastDummyInput = this._lastDummy?.input;\n\n        if (!element || !firstDummyInput || !lastDummyInput) {\n            return;\n        }\n\n        if (this._isOutside) {\n            const elementParent = dom.getParentNode(element);\n\n            if (elementParent) {\n                const nextSibling = dom.getNextSibling(element);\n\n                if (nextSibling !== lastDummyInput) {\n                    dom.insertBefore(\n                        elementParent,\n                        lastDummyInput,\n                        nextSibling\n                    );\n                }\n\n                if (\n                    dom.getPreviousElementSibling(element) !== firstDummyInput\n                ) {\n                    dom.insertBefore(elementParent, firstDummyInput, element);\n                }\n            }\n        } else {\n            if (dom.getLastElementChild(element) !== lastDummyInput) {\n                dom.appendChild(element, lastDummyInput);\n            }\n\n            const firstElementChild = dom.getFirstElementChild(element);\n\n            if (\n                firstElementChild &&\n                firstElementChild !== firstDummyInput &&\n                firstElementChild.parentNode\n            ) {\n                dom.insertBefore(\n                    firstElementChild.parentNode,\n                    firstDummyInput,\n                    firstElementChild\n                );\n            }\n        }\n    }\n\n    private _addTransformOffsets = (): void => {\n        this._tabster._dummyObserver.updatePositions(\n            this._computeTransformOffsets\n        );\n    };\n\n    private _computeTransformOffsets = (\n        scrollTopLeftCache: Map<\n            HTMLElement,\n            { scrollTop: number; scrollLeft: number } | null\n        >\n    ): (() => void) => {\n        const from = this._firstDummy?.input || this._lastDummy?.input;\n        const transformElements = this._transformElements;\n        const newTransformElements: typeof transformElements = new Set();\n        let scrollTop = 0;\n        let scrollLeft = 0;\n\n        const win = this._getWindow();\n\n        for (\n            let element: HTMLElement | undefined | null = from;\n            element && element.nodeType === Node.ELEMENT_NODE;\n            element = dom.getParentElement(element)\n        ) {\n            let scrollTopLeft = scrollTopLeftCache.get(element);\n\n            // getComputedStyle() and element.scrollLeft/Top() cause style recalculation,\n            // so we cache the result across all elements in the current bulk.\n            if (scrollTopLeft === undefined) {\n                const transform = win.getComputedStyle(element).transform;\n\n                if (transform && transform !== \"none\") {\n                    scrollTopLeft = {\n                        scrollTop: element.scrollTop,\n                        scrollLeft: element.scrollLeft,\n                    };\n                }\n\n                scrollTopLeftCache.set(element, scrollTopLeft || null);\n            }\n\n            if (scrollTopLeft) {\n                newTransformElements.add(element);\n\n                if (!transformElements.has(element)) {\n                    element.addEventListener(\n                        \"scroll\",\n                        this._addTransformOffsets\n                    );\n                }\n\n                scrollTop += scrollTopLeft.scrollTop;\n                scrollLeft += scrollTopLeft.scrollLeft;\n            }\n        }\n\n        for (const el of transformElements) {\n            if (!newTransformElements.has(el)) {\n                el.removeEventListener(\"scroll\", this._addTransformOffsets);\n            }\n        }\n\n        this._transformElements = newTransformElements;\n\n        return () => {\n            this._firstDummy?.setTopLeft(scrollTop, scrollLeft);\n            this._lastDummy?.setTopLeft(scrollTop, scrollLeft);\n        };\n    };\n}\n\nexport function getLastChild(container: HTMLElement): HTMLElement | undefined {\n    let lastChild: HTMLElement | null = null;\n\n    for (\n        let i = dom.getLastElementChild(container);\n        i;\n        i = dom.getLastElementChild(i)\n    ) {\n        lastChild = i as HTMLElement;\n    }\n\n    return lastChild || undefined;\n}\n\nexport function getAdjacentElement(\n    from: HTMLElement,\n    prev?: boolean\n): HTMLElement | undefined {\n    let cur: HTMLElement | null = from;\n    let adjacent: HTMLElement | null = null;\n\n    while (cur && !adjacent) {\n        adjacent = (\n            prev\n                ? dom.getPreviousElementSibling(cur)\n                : dom.getNextElementSibling(cur)\n        ) as HTMLElement | null;\n        cur = dom.getParentElement(cur);\n    }\n\n    return adjacent || undefined;\n}\n\nexport function augmentAttribute(\n    tabster: TabsterCore,\n    element: HTMLElement,\n    name: string,\n    value?: string | null // Restore original value when undefined.\n): boolean {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const entry = tabster.storageEntry(element, true)!;\n    let ret = false;\n\n    if (!entry.aug) {\n        if (value === undefined) {\n            return ret;\n        }\n\n        entry.aug = {};\n    }\n\n    if (value === undefined) {\n        if (name in entry.aug) {\n            const origVal = entry.aug[name];\n\n            delete entry.aug[name];\n\n            if (origVal === null) {\n                element.removeAttribute(name);\n            } else {\n                element.setAttribute(name, origVal);\n            }\n\n            ret = true;\n        }\n    } else {\n        let origValue: string | null | undefined;\n\n        if (!(name in entry.aug)) {\n            origValue = element.getAttribute(name);\n        }\n\n        if (origValue !== undefined && origValue !== value) {\n            entry.aug[name] = origValue;\n\n            if (value === null) {\n                element.removeAttribute(name);\n            } else {\n                element.setAttribute(name, value);\n            }\n\n            ret = true;\n        }\n    }\n\n    if (value === undefined && Object.keys(entry.aug).length === 0) {\n        delete entry.aug;\n        tabster.storageEntry(element, false);\n    }\n\n    return ret;\n}\n\nexport function getTabsterAttributeOnElement(\n    element: HTMLElement\n): TabsterAttributeProps | null {\n    if (!element.hasAttribute(TABSTER_ATTRIBUTE_NAME)) {\n        return null;\n    }\n\n    // We already checked the presence with `hasAttribute`\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const rawAttribute = element.getAttribute(TABSTER_ATTRIBUTE_NAME)!;\n    let tabsterAttribute: TabsterAttributeProps;\n    try {\n        tabsterAttribute = JSON.parse(rawAttribute);\n    } catch {\n        console.error(\"Tabster: failed to parse attribute\", rawAttribute);\n        tabsterAttribute = {};\n    }\n\n    return tabsterAttribute;\n}\n\nexport function isDisplayNone(element: HTMLElement): boolean {\n    const elementDocument = element.ownerDocument;\n    const computedStyle =\n        elementDocument.defaultView?.getComputedStyle(element);\n\n    // offsetParent is null for elements with display:none, display:fixed and for <body>.\n    if (\n        element.offsetParent === null &&\n        elementDocument.body !== element &&\n        computedStyle?.position !== \"fixed\"\n    ) {\n        return true;\n    }\n\n    // For our purposes of looking for focusable elements, visibility:hidden has the same\n    // effect as display:none.\n    if (computedStyle?.visibility === \"hidden\") {\n        return true;\n    }\n\n    // if an element has display: fixed, we need to check if it is also hidden with CSS,\n    // or within a parent hidden with CSS\n    if (computedStyle?.position === \"fixed\") {\n        if (computedStyle.display === \"none\") {\n            return true;\n        }\n\n        if (\n            element.parentElement?.offsetParent === null &&\n            elementDocument.body !== element.parentElement\n        ) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isRadio(element: HTMLElement): boolean {\n    return (\n        element.tagName === \"INPUT\" &&\n        !!(element as HTMLInputElement).name &&\n        (element as HTMLInputElement).type === \"radio\"\n    );\n}\n\nexport function getRadioButtonGroup(\n    element: HTMLElement\n): RadioButtonGroup | undefined {\n    if (!isRadio(element)) {\n        return;\n    }\n\n    const name = (element as HTMLInputElement).name;\n    let radioButtons = Array.from(dom.getElementsByName(element, name));\n    let checked: HTMLInputElement | undefined;\n\n    radioButtons = radioButtons.filter((el) => {\n        if (isRadio(el)) {\n            if ((el as HTMLInputElement).checked) {\n                checked = el as HTMLInputElement;\n            }\n            return true;\n        }\n        return false;\n    });\n\n    return {\n        name,\n        buttons: new Set(radioButtons as HTMLInputElement[]),\n        checked,\n    };\n}\n\n/**\n * If the passed element is Tabster dummy input, returns the container element this dummy input belongs to.\n * @param element Element to check for being dummy input.\n * @returns Dummy input container element (if the passed element is a dummy input) or null.\n */\nexport function getDummyInputContainer(\n    element: HTMLElement | null | undefined\n): HTMLElement | null {\n    return (\n        (\n            element as HTMLElementWithDummyContainer | null | undefined\n        )?.__tabsterDummyContainer?.get() || null\n    );\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as Types from \"./Types\";\nimport { TABSTER_ATTRIBUTE_NAME } from \"./Consts\";\n\nexport function getTabsterAttribute(\n    props: Types.TabsterAttributeProps\n): Types.TabsterDOMAttribute;\nexport function getTabsterAttribute(\n    props: Types.TabsterAttributeProps,\n    plain: true\n): string;\nexport function getTabsterAttribute(\n    props: Types.TabsterAttributeProps,\n    plain?: true\n): Types.TabsterDOMAttribute | string {\n    const attr = JSON.stringify(props);\n\n    if (plain === true) {\n        return attr;\n    }\n\n    return {\n        [TABSTER_ATTRIBUTE_NAME]: attr,\n    };\n}\n\n/**\n * Updates Tabster props object with new props.\n * @param element an element to set data-tabster attribute on.\n * @param props current Tabster props to update.\n * @param newProps new Tabster props to add.\n *  When the value of a property in newProps is undefined, the property\n *  will be removed from the attribute.\n */\nexport function mergeTabsterProps(\n    props: Types.TabsterAttributeProps,\n    newProps: Types.TabsterAttributeProps\n): void {\n    for (const key of Object.keys(\n        newProps\n    ) as (keyof Types.TabsterAttributeProps)[]) {\n        const value = newProps[key];\n\n        if (value) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            props[key] = value as any;\n        } else {\n            delete props[key];\n        }\n    }\n}\n\n/**\n * Sets or updates Tabster attribute of the element.\n * @param element an element to set data-tabster attribute on.\n * @param newProps new Tabster props to set.\n * @param update if true, newProps will be merged with the existing props.\n *  When true and the value of a property in newProps is undefined, the property\n *  will be removed from the attribute.\n */\nexport function setTabsterAttribute(\n    element: HTMLElement,\n    newProps: Types.TabsterAttributeProps,\n    update?: boolean\n): void {\n    let props: Types.TabsterAttributeProps | undefined;\n\n    if (update) {\n        const attr = element.getAttribute(TABSTER_ATTRIBUTE_NAME);\n\n        if (attr) {\n            try {\n                props = JSON.parse(attr);\n            } catch (e) {\n                if (__DEV__) {\n                    console.error(\n                        `data-tabster attribute error: ${e}`,\n                        element\n                    );\n                }\n            }\n        }\n    }\n\n    if (!props) {\n        props = {};\n    }\n\n    mergeTabsterProps(props, newProps);\n\n    if (Object.keys(props).length > 0) {\n        element.setAttribute(\n            TABSTER_ATTRIBUTE_NAME,\n            getTabsterAttribute(props, true)\n        );\n    } else {\n        element.removeAttribute(TABSTER_ATTRIBUTE_NAME);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { KEYBORG_FOCUSIN, KEYBORG_FOCUSOUT, nativeFocus } from \"keyborg\";\nimport { getTabsterOnElement, updateTabsterByAttribute } from \"./Instance\";\nimport * as Types from \"./Types\";\nimport { RootFocusEvent, RootBlurEvent } from \"./Events\";\nimport {\n    DummyInput,\n    DummyInputManager,\n    DummyInputManagerPriorities,\n    getElementUId,\n    TabsterPart,\n    WeakHTMLElement,\n} from \"./Utils\";\nimport { setTabsterAttribute } from \"./AttributeHelpers\";\n\nexport interface WindowWithTabsterInstance extends Window {\n    __tabsterInstance?: Types.TabsterCore;\n}\n\nfunction _setInformativeStyle(\n    weakElement: WeakHTMLElement,\n    remove: boolean,\n    id?: string\n) {\n    if (__DEV__) {\n        const element = weakElement.get();\n\n        if (element) {\n            if (remove) {\n                element.style.removeProperty(\"--tabster-root\");\n            } else {\n                element.style.setProperty(\"--tabster-root\", id + \",\");\n            }\n        }\n    }\n}\n\nclass RootDummyManager extends DummyInputManager {\n    private _tabster: Types.TabsterCore;\n    private _setFocused: (focused: boolean) => void;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: WeakHTMLElement,\n        setFocused: (focused: boolean) => void,\n        sys: Types.SysProps | undefined\n    ) {\n        super(\n            tabster,\n            element,\n            DummyInputManagerPriorities.Root,\n            sys,\n            undefined,\n            true\n        );\n\n        this._setHandlers(this._onDummyInputFocus);\n\n        this._tabster = tabster;\n        this._setFocused = setFocused;\n    }\n\n    private _onDummyInputFocus = (dummyInput: DummyInput): void => {\n        if (dummyInput.useDefaultAction) {\n            // When we've reached the last focusable element, we want to let the browser\n            // to move the focus outside of the page. In order to do that we're synchronously\n            // calling focus() of the dummy input from the Tab key handler and allowing\n            // the default action to move the focus out.\n            this._setFocused(false);\n        } else {\n            // The only way a dummy input gets focused is during the keyboard navigation.\n            this._tabster.keyboardNavigation.setNavigatingWithKeyboard(true);\n\n            const element = this._element.get();\n\n            if (element) {\n                this._setFocused(true);\n\n                const toFocus =\n                    this._tabster.focusedElement.getFirstOrLastTabbable(\n                        dummyInput.isFirst,\n                        { container: element, ignoreAccessibility: true }\n                    );\n\n                if (toFocus) {\n                    nativeFocus(toFocus);\n                    return;\n                }\n            }\n\n            dummyInput.input?.blur();\n        }\n    };\n}\n\nexport class Root\n    extends TabsterPart<Types.RootProps, undefined>\n    implements Types.Root\n{\n    readonly uid: string;\n\n    private _dummyManager?: RootDummyManager;\n    private _sys?: Types.SysProps;\n    private _isFocused = false;\n    private _setFocusedTimer: number | undefined;\n    private _onDispose: (root: Root) => void;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        onDispose: (root: Root) => void,\n        props: Types.RootProps,\n        sys: Types.SysProps | undefined\n    ) {\n        super(tabster, element, props);\n\n        this._onDispose = onDispose;\n\n        const win = tabster.getWindow;\n        this.uid = getElementUId(win, element);\n\n        this._sys = sys;\n\n        if (tabster.controlTab || tabster.rootDummyInputs) {\n            this.addDummyInputs();\n        }\n\n        const w = win();\n        const doc = w.document;\n\n        doc.addEventListener(KEYBORG_FOCUSIN, this._onFocusIn);\n        doc.addEventListener(KEYBORG_FOCUSOUT, this._onFocusOut);\n\n        this._add();\n    }\n\n    addDummyInputs(): void {\n        if (!this._dummyManager) {\n            this._dummyManager = new RootDummyManager(\n                this._tabster,\n                this._element,\n                this._setFocused,\n                this._sys\n            );\n        }\n    }\n\n    dispose(): void {\n        this._onDispose(this);\n\n        const win = this._tabster.getWindow();\n        const doc = win.document;\n\n        doc.removeEventListener(KEYBORG_FOCUSIN, this._onFocusIn);\n        doc.removeEventListener(KEYBORG_FOCUSOUT, this._onFocusOut);\n\n        if (this._setFocusedTimer) {\n            win.clearTimeout(this._setFocusedTimer);\n            delete this._setFocusedTimer;\n        }\n\n        this._dummyManager?.dispose();\n        this._remove();\n    }\n\n    moveOutWithDefaultAction(isBackward: boolean, relatedEvent: KeyboardEvent) {\n        const dummyManager = this._dummyManager;\n\n        if (dummyManager) {\n            dummyManager.moveOutWithDefaultAction(isBackward, relatedEvent);\n        } else {\n            const el = this.getElement();\n\n            if (el) {\n                RootDummyManager.moveWithPhantomDummy(\n                    this._tabster,\n                    el,\n                    true,\n                    isBackward,\n                    relatedEvent\n                );\n            }\n        }\n    }\n\n    private _setFocused = (hasFocused: boolean): void => {\n        if (this._setFocusedTimer) {\n            this._tabster.getWindow().clearTimeout(this._setFocusedTimer);\n            delete this._setFocusedTimer;\n        }\n\n        if (this._isFocused === hasFocused) {\n            return;\n        }\n\n        const element = this._element.get();\n\n        if (element) {\n            if (hasFocused) {\n                this._isFocused = true;\n                this._dummyManager?.setTabbable(false);\n                element.dispatchEvent(new RootFocusEvent({ element }));\n            } else {\n                this._setFocusedTimer = this._tabster\n                    .getWindow()\n                    .setTimeout(() => {\n                        delete this._setFocusedTimer;\n\n                        this._isFocused = false;\n                        this._dummyManager?.setTabbable(true);\n                        element.dispatchEvent(new RootBlurEvent({ element }));\n                    }, 0);\n            }\n        }\n    };\n\n    private _onFocusIn = (event: FocusEvent) => {\n        const getParent = this._tabster.getParent;\n        const rootElement = this._element.get();\n        let curElement = event.composedPath()[0] as HTMLElement | null;\n\n        do {\n            if (curElement === rootElement) {\n                this._setFocused(true);\n                return;\n            }\n\n            curElement =\n                curElement && (getParent(curElement) as HTMLElement | null);\n        } while (curElement);\n    };\n\n    private _onFocusOut = () => {\n        this._setFocused(false);\n    };\n\n    private _add(): void {\n        if (__DEV__) {\n            _setInformativeStyle(this._element, false, this.uid);\n        }\n    }\n\n    private _remove(): void {\n        if (__DEV__) {\n            _setInformativeStyle(this._element, true);\n        }\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction validateRootProps(props: Types.RootProps): void {\n    // TODO: Implement validation.\n}\n\nexport class RootAPI implements Types.RootAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    private _autoRoot: Types.RootProps | undefined;\n    private _autoRootWaiting = false;\n    private _roots: Record<string, Types.Root> = {};\n    private _forceDummy = false;\n    rootById: { [id: string]: Types.Root } = {};\n\n    constructor(tabster: Types.TabsterCore, autoRoot?: Types.RootProps) {\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n        this._autoRoot = autoRoot;\n\n        tabster.queueInit(() => {\n            if (this._autoRoot) {\n                this._autoRootCreate();\n            }\n        });\n    }\n\n    private _autoRootCreate = (): Types.Root | undefined => {\n        const doc = this._win().document;\n        const body = doc.body;\n\n        if (body) {\n            this._autoRootUnwait(doc);\n\n            const props = this._autoRoot;\n\n            if (props) {\n                setTabsterAttribute(body, { root: props }, true);\n                updateTabsterByAttribute(this._tabster, body);\n                return getTabsterOnElement(this._tabster, body)?.root;\n            }\n        } else if (!this._autoRootWaiting) {\n            this._autoRootWaiting = true;\n            doc.addEventListener(\"readystatechange\", this._autoRootCreate);\n        }\n\n        return undefined;\n    };\n\n    private _autoRootUnwait(doc: Document): void {\n        doc.removeEventListener(\"readystatechange\", this._autoRootCreate);\n        this._autoRootWaiting = false;\n    }\n\n    dispose(): void {\n        const win = this._win();\n\n        this._autoRootUnwait(win.document);\n        delete this._autoRoot;\n\n        Object.keys(this._roots).forEach((rootId) => {\n            if (this._roots[rootId]) {\n                this._roots[rootId].dispose();\n                delete this._roots[rootId];\n            }\n        });\n\n        this.rootById = {};\n    }\n\n    createRoot(\n        element: HTMLElement,\n        props: Types.RootProps,\n        sys: Types.SysProps | undefined\n    ): Types.Root {\n        if (__DEV__) {\n            validateRootProps(props);\n        }\n\n        const newRoot = new Root(\n            this._tabster,\n            element,\n            this._onRootDispose,\n            props,\n            sys\n        ) as Types.Root;\n\n        this._roots[newRoot.id] = newRoot;\n\n        if (this._forceDummy) {\n            newRoot.addDummyInputs();\n        }\n\n        return newRoot;\n    }\n\n    addDummyInputs(): void {\n        this._forceDummy = true;\n\n        const roots = this._roots;\n\n        for (const id of Object.keys(roots)) {\n            roots[id].addDummyInputs();\n        }\n    }\n\n    static getRootByUId(\n        getWindow: Types.GetWindow,\n        id: string\n    ): Types.Root | undefined {\n        const tabster = (getWindow() as WindowWithTabsterInstance)\n            .__tabsterInstance;\n        return tabster && (tabster.root as RootAPI).rootById[id];\n    }\n\n    /**\n     * Fetches the tabster context for an element walking up its ancestors\n     *\n     * @param tabster Tabster instance\n     * @param element The element the tabster context should represent\n     * @param options Additional options\n     * @returns undefined if the element is not a child of a tabster root, otherwise all applicable tabster behaviours and configurations\n     */\n    static getTabsterContext(\n        tabster: Types.TabsterCore,\n        element: Node,\n        options: Types.GetTabsterContextOptions = {}\n    ): Types.TabsterContext | undefined {\n        if (!element.ownerDocument) {\n            return undefined;\n        }\n\n        const { checkRtl, referenceElement } = options;\n\n        const getParent = tabster.getParent;\n\n        // Normally, the initialization starts on the next tick after the tabster\n        // instance creation. However, if the application starts using it before\n        // the next tick, we need to make sure the initialization is done.\n        tabster.drainInitQueue();\n\n        let root: Types.Root | undefined;\n        let modalizer: Types.Modalizer | undefined;\n        let groupper: Types.Groupper | undefined;\n        let mover: Types.Mover | undefined;\n        let excludedFromMover = false;\n        let groupperBeforeMover: boolean | undefined;\n        let modalizerInGroupper: Types.Groupper | undefined;\n        let dirRightToLeft: boolean | undefined;\n        let uncontrolled: HTMLElement | null | undefined;\n        let curElement: Node | null = referenceElement || element;\n        const ignoreKeydown: Types.FocusableProps[\"ignoreKeydown\"] = {};\n\n        while (curElement && (!root || checkRtl)) {\n            const tabsterOnElement = getTabsterOnElement(\n                tabster,\n                curElement as HTMLElement\n            );\n\n            if (checkRtl && dirRightToLeft === undefined) {\n                const dir = (curElement as HTMLElement).dir;\n\n                if (dir) {\n                    dirRightToLeft = dir.toLowerCase() === \"rtl\";\n                }\n            }\n\n            if (!tabsterOnElement) {\n                curElement = getParent(curElement);\n                continue;\n            }\n\n            const tagName = (curElement as HTMLElement).tagName;\n\n            if (\n                tabsterOnElement.uncontrolled ||\n                tagName === \"IFRAME\" ||\n                tagName === \"WEBVIEW\"\n            ) {\n                uncontrolled = curElement as HTMLElement;\n            }\n\n            if (\n                !mover &&\n                tabsterOnElement.focusable?.excludeFromMover &&\n                !groupper\n            ) {\n                excludedFromMover = true;\n            }\n\n            const curModalizer = tabsterOnElement.modalizer;\n            const curGroupper = tabsterOnElement.groupper;\n            const curMover = tabsterOnElement.mover;\n\n            if (!modalizer && curModalizer) {\n                modalizer = curModalizer;\n            }\n\n            if (!groupper && curGroupper && (!modalizer || curModalizer)) {\n                if (modalizer) {\n                    // Modalizer dominates the groupper when they are on the same node and the groupper is active.\n                    if (\n                        !curGroupper.isActive() &&\n                        curGroupper.getProps().tabbability &&\n                        modalizer.userId !== tabster.modalizer?.activeId\n                    ) {\n                        modalizer = undefined;\n                        groupper = curGroupper;\n                    }\n\n                    modalizerInGroupper = curGroupper;\n                } else {\n                    groupper = curGroupper;\n                }\n            }\n\n            if (\n                !mover &&\n                curMover &&\n                (!modalizer || curModalizer) &&\n                (!curGroupper || curElement !== element) &&\n                curElement.contains(element) // Mover makes sense only for really inside elements, not for virutal out of the DOM order children.\n            ) {\n                mover = curMover;\n                groupperBeforeMover = !!groupper && groupper !== curGroupper;\n            }\n\n            if (tabsterOnElement.root) {\n                root = tabsterOnElement.root;\n            }\n\n            if (tabsterOnElement.focusable?.ignoreKeydown) {\n                Object.assign(\n                    ignoreKeydown,\n                    tabsterOnElement.focusable.ignoreKeydown\n                );\n            }\n\n            curElement = getParent(curElement);\n        }\n\n        // No root element could be found, try to get an auto root\n        if (!root) {\n            const rootAPI = tabster.root as RootAPI;\n            const autoRoot = rootAPI._autoRoot;\n\n            if (autoRoot) {\n                if (element.ownerDocument?.body) {\n                    root = rootAPI._autoRootCreate();\n                }\n            }\n        }\n\n        if (groupper && !mover) {\n            groupperBeforeMover = true;\n        }\n\n        if (__DEV__ && !root) {\n            if (modalizer || groupper || mover) {\n                console.error(\n                    \"Tabster Root is required for Mover, Groupper and Modalizer to work.\"\n                );\n            }\n        }\n\n        const shouldIgnoreKeydown = (event: KeyboardEvent) =>\n            !!ignoreKeydown[\n                event.key as keyof Types.FocusableProps[\"ignoreKeydown\"]\n            ];\n\n        return root\n            ? {\n                  root,\n                  modalizer,\n                  groupper,\n                  mover,\n                  groupperBeforeMover,\n                  modalizerInGroupper,\n                  rtl: checkRtl ? !!dirRightToLeft : undefined,\n                  uncontrolled,\n                  excludedFromMover,\n                  ignoreKeydown: shouldIgnoreKeydown,\n              }\n            : undefined;\n    }\n\n    static getRoot(\n        tabster: Types.TabsterCore,\n        element: HTMLElement\n    ): Types.Root | undefined {\n        const getParent = tabster.getParent;\n\n        for (\n            let el = element as HTMLElement | null;\n            el;\n            el = getParent(el) as HTMLElement | null\n        ) {\n            const root = getTabsterOnElement(tabster, el)?.root;\n\n            if (root) {\n                return root;\n            }\n        }\n\n        return undefined;\n    }\n\n    onRoot(root: Types.Root, removed?: boolean): void {\n        if (removed) {\n            delete this.rootById[root.uid];\n        } else {\n            this.rootById[root.uid] = root;\n        }\n    }\n\n    private _onRootDispose = (root: Root) => {\n        delete this._roots[root.id];\n    };\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport { RootAPI } from \"./Root\";\nimport * as Types from \"./Types\";\nimport { DeloserStrategies, RestoreFocusOrders } from \"./Consts\";\nimport {\n    DeloserFocusLostEvent,\n    DeloserRestoreFocusEvent,\n    DeloserRestoreFocusEventName,\n    TabsterMoveFocusEvent,\n} from \"./Events\";\nimport {\n    documentContains,\n    getElementUId,\n    getPromise,\n    isDisplayNone,\n    TabsterPart,\n    WeakHTMLElement,\n} from \"./Utils\";\nimport { dom } from \"./DOMAPI\";\n\nconst _containerHistoryLength = 10;\n\nexport abstract class DeloserItemBase<C> {\n    abstract resetFocus(): Promise<boolean>;\n    abstract belongsTo(deloser: C): boolean;\n}\n\nexport class DeloserItem extends DeloserItemBase<Types.Deloser> {\n    readonly uid: string;\n    private _tabster: Types.TabsterCore;\n    private _deloser: Types.Deloser;\n\n    constructor(tabster: Types.TabsterCore, deloser: Types.Deloser) {\n        super();\n        this.uid = deloser.uid;\n        this._tabster = tabster;\n        this._deloser = deloser;\n    }\n\n    belongsTo(deloser: Types.Deloser): boolean {\n        return deloser === this._deloser;\n    }\n\n    unshift(element: HTMLElement): void {\n        this._deloser.unshift(element);\n    }\n\n    async focusAvailable(): Promise<boolean | null> {\n        const available = this._deloser.findAvailable();\n        const deloserElement = this._deloser.getElement();\n\n        if (available && deloserElement) {\n            if (\n                !deloserElement.dispatchEvent(\n                    new TabsterMoveFocusEvent({\n                        by: \"deloser\",\n                        owner: deloserElement,\n                        next: available,\n                    })\n                )\n            ) {\n                // Default action is prevented, don't look further.\n                return null;\n            }\n\n            return this._tabster.focusedElement.focus(available);\n        }\n\n        return false;\n    }\n\n    async resetFocus(): Promise<boolean> {\n        const getWindow = this._tabster.getWindow;\n        return getPromise(getWindow).resolve(this._deloser.resetFocus());\n    }\n}\n\nexport abstract class DeloserHistoryByRootBase<\n    I,\n    D extends DeloserItemBase<I>\n> {\n    protected _tabster: Types.TabsterCore;\n    protected _history: D[] = [];\n    readonly rootUId: string;\n\n    constructor(tabster: Types.TabsterCore, rootUId: string) {\n        this._tabster = tabster;\n        this.rootUId = rootUId;\n    }\n\n    getLength(): number {\n        return this._history.length;\n    }\n\n    removeDeloser(deloser: I): void {\n        this._history = this._history.filter((c) => !c.belongsTo(deloser));\n    }\n\n    hasDeloser(deloser: I): boolean {\n        return this._history.some((d) => d.belongsTo(deloser));\n    }\n\n    abstract focusAvailable(from: I | null): Promise<boolean | null>;\n    abstract resetFocus(from: I | null): Promise<boolean>;\n}\n\nclass DeloserHistoryByRoot extends DeloserHistoryByRootBase<\n    Types.Deloser,\n    DeloserItem\n> {\n    unshiftToDeloser(deloser: Types.Deloser, element: HTMLElement): void {\n        let item: DeloserItem | undefined;\n\n        for (let i = 0; i < this._history.length; i++) {\n            if (this._history[i].belongsTo(deloser)) {\n                item = this._history[i];\n                this._history.splice(i, 1);\n                break;\n            }\n        }\n\n        if (!item) {\n            item = new DeloserItem(this._tabster, deloser);\n        }\n\n        item.unshift(element);\n\n        this._history.unshift(item);\n\n        this._history.splice(\n            _containerHistoryLength,\n            this._history.length - _containerHistoryLength\n        );\n    }\n\n    async focusAvailable(from: Types.Deloser | null): Promise<boolean | null> {\n        let skip = !!from;\n\n        for (const i of this._history) {\n            if (from && i.belongsTo(from)) {\n                skip = false;\n            }\n\n            if (!skip) {\n                const result = await i.focusAvailable();\n\n                // Result is null when the default action is prevented by the application\n                // and we don't need to look further.\n                if (result || result === null) {\n                    return result;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    async resetFocus(from: Types.Deloser | null): Promise<boolean> {\n        let skip = !!from;\n        const resetQueue: { [id: string]: DeloserItem } = {};\n\n        for (const i of this._history) {\n            if (from && i.belongsTo(from)) {\n                skip = false;\n            }\n\n            if (!skip && !resetQueue[i.uid]) {\n                resetQueue[i.uid] = i;\n            }\n        }\n\n        // Nothing is found, at least try to reset.\n        for (const id of Object.keys(resetQueue)) {\n            if (await resetQueue[id].resetFocus()) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n\nexport class DeloserHistory {\n    private _tabster: Types.TabsterCore;\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    private _history: DeloserHistoryByRootBase<\n        unknown,\n        DeloserItemBase<unknown>\n    >[] = [];\n\n    constructor(tabster: Types.TabsterCore) {\n        this._tabster = tabster;\n    }\n\n    dispose(): void {\n        this._history = [];\n    }\n\n    process(element: HTMLElement): Types.Deloser | undefined {\n        const ctx = RootAPI.getTabsterContext(this._tabster, element);\n        const rootUId = ctx && ctx.root.uid;\n        const deloser = DeloserAPI.getDeloser(this._tabster, element);\n\n        if (!rootUId || !deloser) {\n            return undefined;\n        }\n\n        const historyByRoot = this.make(\n            rootUId,\n            () => new DeloserHistoryByRoot(this._tabster, rootUId)\n        );\n\n        if (!ctx || !ctx.modalizer || ctx.modalizer?.isActive()) {\n            historyByRoot.unshiftToDeloser(deloser, element);\n        }\n\n        return deloser;\n    }\n\n    make<\n        I,\n        D extends DeloserItemBase<I>,\n        C extends DeloserHistoryByRootBase<I, D>\n    >(rootUId: string, createInstance: () => C): C {\n        let historyByRoot: C | undefined;\n\n        for (let i = 0; i < this._history.length; i++) {\n            const hbr = this._history[i] as C;\n\n            if (hbr.rootUId === rootUId) {\n                historyByRoot = hbr;\n                this._history.splice(i, 1);\n                break;\n            }\n        }\n\n        if (!historyByRoot) {\n            historyByRoot = createInstance();\n        }\n\n        this._history.unshift(historyByRoot);\n\n        this._history.splice(\n            _containerHistoryLength,\n            this._history.length - _containerHistoryLength\n        );\n\n        return historyByRoot;\n    }\n\n    removeDeloser(deloser: Types.Deloser): void {\n        this._history.forEach((i) => {\n            i.removeDeloser(deloser);\n        });\n\n        this._history = this._history.filter((i) => i.getLength() > 0);\n    }\n\n    async focusAvailable(from: Types.Deloser | null): Promise<boolean | null> {\n        let skip = !!from;\n\n        for (const h of this._history) {\n            if (from && h.hasDeloser(from)) {\n                skip = false;\n            }\n\n            if (!skip) {\n                const result = await h.focusAvailable(from);\n\n                // Result is null when the default action is prevented by the application\n                // and we don't need to look further.\n                if (result || result === null) {\n                    return result;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    async resetFocus(from: Types.Deloser | null): Promise<boolean> {\n        let skip = !!from;\n\n        for (const h of this._history) {\n            if (from && h.hasDeloser(from)) {\n                skip = false;\n            }\n\n            if (!skip && (await h.resetFocus(from))) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n\nfunction _setInformativeStyle(\n    weakElement: WeakHTMLElement,\n    remove: boolean,\n    isActive?: boolean,\n    snapshotIndex?: number\n): void {\n    if (__DEV__) {\n        const element = weakElement.get();\n\n        if (element) {\n            if (remove) {\n                element.style.removeProperty(\"--tabster-deloser\");\n            } else {\n                element.style.setProperty(\n                    \"--tabster-deloser\",\n                    (isActive ? \"active\" : \"inactive\") +\n                        \",\" +\n                        (\"snapshot-\" + snapshotIndex)\n                );\n            }\n        }\n    }\n}\n\nfunction buildElementSelector(\n    element: HTMLElement,\n    withClass?: boolean,\n    withIndex?: boolean\n): string {\n    const selector: string[] = [];\n    const escapeRegExp = /(:|\\.|\\[|\\]|,|=|@)/g;\n    const escapeReplaceValue = \"\\\\$1\";\n\n    const elementId = element.getAttribute(\"id\");\n\n    if (elementId) {\n        selector.push(\n            \"#\" + elementId.replace(escapeRegExp, escapeReplaceValue)\n        );\n    }\n\n    if (withClass !== false && element.className) {\n        element.className.split(\" \").forEach((cls) => {\n            cls = cls.trim();\n\n            if (cls) {\n                selector.push(\n                    \".\" + cls.replace(escapeRegExp, escapeReplaceValue)\n                );\n            }\n        });\n    }\n\n    let index = 0;\n    let el: Element | null;\n\n    if (withIndex !== false && selector.length === 0) {\n        el = element;\n        while (el) {\n            index++;\n            el = el.previousElementSibling;\n        }\n        selector.unshift(\":nth-child(\" + index + \")\");\n    }\n\n    selector.unshift(element.tagName.toLowerCase());\n\n    return selector.join(\"\");\n}\n\nfunction buildSelector(element: HTMLElement): string | undefined {\n    if (!documentContains(element.ownerDocument, element)) {\n        return undefined;\n    }\n\n    const selector: string[] = [buildElementSelector(element)];\n\n    let node = dom.getParentNode(element);\n\n    while (node && node.nodeType !== Node.DOCUMENT_FRAGMENT_NODE) {\n        // Stop at the shadow root as cross shadow selectors won't work.\n        if (node.nodeType === Node.ELEMENT_NODE) {\n            const isBody = (node as HTMLElement).tagName === \"BODY\";\n\n            selector.unshift(\n                buildElementSelector(node as HTMLElement, false, !isBody)\n            );\n\n            if (isBody) {\n                break;\n            }\n        }\n\n        node = dom.getParentNode(node);\n    }\n\n    return selector.join(\" \");\n}\n\nexport class Deloser\n    extends TabsterPart<Types.DeloserProps>\n    implements Types.Deloser\n{\n    readonly uid: string;\n    readonly strategy: Types.DeloserStrategy;\n    private _isActive = false;\n    private _history: WeakHTMLElement<HTMLElement, string>[][] = [[]];\n    private _snapshotIndex = 0;\n    private _onDispose: (deloser: Deloser) => void;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        onDispose: (deloser: Deloser) => void,\n        props: Types.DeloserProps\n    ) {\n        super(tabster, element, props);\n\n        this.uid = getElementUId(tabster.getWindow, element);\n        this.strategy = props.strategy || DeloserStrategies.Auto;\n        this._onDispose = onDispose;\n\n        if (__DEV__) {\n            _setInformativeStyle(\n                this._element,\n                false,\n                this._isActive,\n                this._snapshotIndex\n            );\n        }\n    }\n\n    dispose(): void {\n        this._remove();\n\n        this._onDispose(this);\n\n        this._isActive = false;\n        this._snapshotIndex = 0;\n\n        this._props = {};\n        this._history = [];\n    }\n\n    isActive = (): boolean => {\n        return this._isActive;\n    };\n\n    setActive(active: boolean): void {\n        this._isActive = active;\n\n        if (__DEV__) {\n            _setInformativeStyle(\n                this._element,\n                false,\n                this._isActive,\n                this._snapshotIndex\n            );\n        }\n    }\n\n    getActions(): Types.DeloserElementActions {\n        return {\n            focusDefault: this.focusDefault,\n            focusFirst: this.focusFirst,\n            resetFocus: this.resetFocus,\n            clearHistory: this.clearHistory,\n            setSnapshot: this.setSnapshot,\n            isActive: this.isActive,\n        };\n    }\n\n    setSnapshot = (index: number): void => {\n        this._snapshotIndex = index;\n\n        if (this._history.length > index + 1) {\n            this._history.splice(index + 1, this._history.length - index - 1);\n        }\n\n        if (!this._history[index]) {\n            this._history[index] = [];\n        }\n\n        if (__DEV__) {\n            _setInformativeStyle(\n                this._element,\n                false,\n                this._isActive,\n                this._snapshotIndex\n            );\n        }\n    };\n\n    focusFirst = (): boolean => {\n        const e = this._element.get();\n        return !!e && this._tabster.focusedElement.focusFirst({ container: e });\n    };\n\n    unshift(element: HTMLElement): void {\n        let cur = this._history[this._snapshotIndex];\n\n        cur = this._history[this._snapshotIndex] = cur.filter((we) => {\n            const e = we.get();\n            return e && e !== element;\n        });\n\n        cur.unshift(\n            new WeakHTMLElement(\n                this._tabster.getWindow,\n                element,\n                buildSelector(element)\n            )\n        );\n\n        while (cur.length > _containerHistoryLength) {\n            cur.pop();\n        }\n    }\n\n    focusDefault = (): boolean => {\n        const e = this._element.get();\n        return !!e && this._tabster.focusedElement.focusDefault(e);\n    };\n\n    resetFocus = (): boolean => {\n        const e = this._element.get();\n        return !!e && this._tabster.focusedElement.resetFocus(e);\n    };\n\n    findAvailable(): HTMLElement | null {\n        const element = this._element.get();\n\n        if (!element || !this._tabster.focusable.isVisible(element)) {\n            return null;\n        }\n\n        let restoreFocusOrder = this._props.restoreFocusOrder;\n        let available: HTMLElement | null = null;\n\n        const ctx = RootAPI.getTabsterContext(this._tabster, element);\n\n        if (!ctx) {\n            return null;\n        }\n\n        const root = ctx.root;\n        const rootElement = root.getElement();\n\n        if (!rootElement) {\n            return null;\n        }\n\n        if (restoreFocusOrder === undefined) {\n            restoreFocusOrder = root.getProps().restoreFocusOrder;\n        }\n\n        if (restoreFocusOrder === RestoreFocusOrders.RootDefault) {\n            available = this._tabster.focusable.findDefault({\n                container: rootElement,\n            });\n        }\n\n        if (!available && restoreFocusOrder === RestoreFocusOrders.RootFirst) {\n            available = this._findFirst(rootElement);\n        }\n\n        if (available) {\n            return available;\n        }\n\n        const availableInHistory = this._findInHistory();\n\n        if (\n            availableInHistory &&\n            restoreFocusOrder === RestoreFocusOrders.History\n        ) {\n            return availableInHistory;\n        }\n\n        const availableDefault = this._tabster.focusable.findDefault({\n            container: element,\n        });\n\n        if (\n            availableDefault &&\n            restoreFocusOrder === RestoreFocusOrders.DeloserDefault\n        ) {\n            return availableDefault;\n        }\n\n        const availableFirst = this._findFirst(element);\n\n        if (\n            availableFirst &&\n            restoreFocusOrder === RestoreFocusOrders.DeloserFirst\n        ) {\n            return availableFirst;\n        }\n\n        return availableDefault || availableInHistory || availableFirst || null;\n    }\n\n    clearHistory = (preserveExisting?: boolean): void => {\n        const element = this._element.get();\n\n        if (!element) {\n            this._history[this._snapshotIndex] = [];\n\n            return;\n        }\n\n        this._history[this._snapshotIndex] = this._history[\n            this._snapshotIndex\n        ].filter((we) => {\n            const e = we.get();\n            return e && preserveExisting ? dom.nodeContains(element, e) : false;\n        });\n    };\n\n    customFocusLostHandler(element: HTMLElement): boolean {\n        return element.dispatchEvent(\n            new DeloserFocusLostEvent(this.getActions())\n        );\n    }\n\n    private _findInHistory(): HTMLElement | null {\n        const cur = this._history[this._snapshotIndex].slice(0);\n\n        this.clearHistory(true);\n\n        for (let i = 0; i < cur.length; i++) {\n            const we = cur[i];\n            const e = we.get();\n            const element = this._element.get();\n\n            if (e && element && dom.nodeContains(element, e)) {\n                if (this._tabster.focusable.isFocusable(e)) {\n                    return e;\n                }\n            } else if (!this._props.noSelectorCheck) {\n                // Element is not in the DOM, try to locate the node by it's\n                // selector. This might return not exactly the right node,\n                // but it would be easily fixable by having more detailed selectors.\n                const selector = we.getData();\n\n                if (selector && element) {\n                    let els: Element[];\n\n                    try {\n                        els = dom.querySelectorAll(\n                            element.ownerDocument,\n                            selector\n                        );\n                    } catch (e) {\n                        if (__DEV__) {\n                            // This should never happen, unless there is some bug in buildElementSelector().\n                            console.error(\n                                `Failed to querySelectorAll('${selector}')`\n                            );\n                        }\n                        continue;\n                    }\n\n                    for (let i = 0; i < els.length; i++) {\n                        const el = els[i] as HTMLElement;\n\n                        if (el && this._tabster.focusable.isFocusable(el)) {\n                            return el;\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n\n    private _findFirst(element: HTMLElement): HTMLElement | null {\n        if (this._tabster.keyboardNavigation.isNavigatingWithKeyboard()) {\n            const first = this._tabster.focusable.findFirst({\n                container: element,\n                useActiveModalizer: true,\n            });\n\n            if (first) {\n                return first;\n            }\n        }\n\n        return null;\n    }\n\n    private _remove(): void {\n        if (__DEV__) {\n            _setInformativeStyle(this._element, true);\n        }\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction validateDeloserProps(props: Types.DeloserProps): void {\n    // TODO: Implement validation.\n}\n\nexport class DeloserAPI implements Types.DeloserAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    /**\n     * Tracks if focus is inside a deloser\n     */\n    private _inDeloser = false;\n    private _curDeloser: Types.Deloser | undefined;\n    private _history: DeloserHistory;\n    private _restoreFocusTimer: number | undefined;\n    private _isRestoringFocus = false;\n    private _isPaused = false;\n    private _autoDeloser: Types.DeloserProps | undefined;\n    private _autoDeloserInstance: Deloser | undefined;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        props?: { autoDeloser: Types.DeloserProps }\n    ) {\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n        this._history = new DeloserHistory(tabster);\n\n        tabster.queueInit(() => {\n            this._tabster.focusedElement.subscribe(this._onFocus);\n            const doc = this._win().document;\n\n            doc.addEventListener(\n                DeloserRestoreFocusEventName,\n                this._onRestoreFocus\n            );\n\n            const activeElement = dom.getActiveElement(doc);\n\n            if (activeElement && activeElement !== doc.body) {\n                // Adding currently focused element to the deloser history.\n                this._onFocus(activeElement as HTMLElement);\n            }\n        });\n\n        const autoDeloser = props?.autoDeloser;\n        if (autoDeloser) {\n            this._autoDeloser = autoDeloser;\n        }\n    }\n\n    dispose(): void {\n        const win = this._win();\n\n        if (this._restoreFocusTimer) {\n            win.clearTimeout(this._restoreFocusTimer);\n            this._restoreFocusTimer = undefined;\n        }\n\n        if (this._autoDeloserInstance) {\n            this._autoDeloserInstance.dispose();\n            delete this._autoDeloserInstance;\n            delete this._autoDeloser;\n        }\n\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n\n        win.document.removeEventListener(\n            DeloserRestoreFocusEventName,\n            this._onRestoreFocus\n        );\n\n        this._history.dispose();\n\n        delete this._curDeloser;\n    }\n\n    createDeloser(\n        element: HTMLElement,\n        props: Types.DeloserProps\n    ): Types.Deloser {\n        if (__DEV__) {\n            validateDeloserProps(props);\n        }\n\n        const deloser = new Deloser(\n            this._tabster,\n            element,\n            this._onDeloserDispose,\n            props\n        );\n\n        if (\n            dom.nodeContains(\n                element,\n                this._tabster.focusedElement.getFocusedElement() ?? null\n            )\n        ) {\n            this._activate(deloser);\n        }\n\n        return deloser;\n    }\n\n    getActions(element: HTMLElement): Types.DeloserElementActions | undefined {\n        for (\n            let e: HTMLElement | null = element;\n            e;\n            e = dom.getParentElement(e)\n        ) {\n            const tabsterOnElement = getTabsterOnElement(this._tabster, e);\n\n            if (tabsterOnElement && tabsterOnElement.deloser) {\n                return tabsterOnElement.deloser.getActions();\n            }\n        }\n\n        return undefined;\n    }\n\n    pause(): void {\n        this._isPaused = true;\n\n        if (this._restoreFocusTimer) {\n            this._win().clearTimeout(this._restoreFocusTimer);\n            this._restoreFocusTimer = undefined;\n        }\n    }\n\n    resume(restore?: boolean): void {\n        this._isPaused = false;\n\n        if (restore) {\n            this._scheduleRestoreFocus();\n        }\n    }\n\n    private _onRestoreFocus = (event: DeloserRestoreFocusEvent): void => {\n        const target = event.composedPath()[0] as\n            | HTMLElement\n            | null\n            | undefined;\n\n        if (target) {\n            const available = DeloserAPI.getDeloser(\n                this._tabster,\n                target\n            )?.findAvailable();\n\n            if (available) {\n                this._tabster.focusedElement.focus(available);\n            }\n\n            event.stopImmediatePropagation();\n        }\n    };\n\n    private _onFocus = (e: HTMLElement | undefined): void => {\n        if (this._restoreFocusTimer) {\n            this._win().clearTimeout(this._restoreFocusTimer);\n            this._restoreFocusTimer = undefined;\n        }\n\n        if (!e) {\n            this._scheduleRestoreFocus();\n\n            return;\n        }\n\n        const deloser = this._history.process(e);\n\n        if (deloser) {\n            this._activate(deloser);\n        } else {\n            this._deactivate();\n        }\n    };\n\n    /**\n     * Activates and sets the current deloser\n     */\n    private _activate(deloser: Types.Deloser) {\n        const curDeloser = this._curDeloser;\n        if (curDeloser !== deloser) {\n            this._inDeloser = true;\n            curDeloser?.setActive(false);\n            deloser.setActive(true);\n            this._curDeloser = deloser;\n        }\n    }\n\n    /**\n     * Called when focus should no longer be in a deloser\n     */\n    private _deactivate() {\n        this._inDeloser = false;\n        this._curDeloser?.setActive(false);\n        this._curDeloser = undefined;\n    }\n\n    private _scheduleRestoreFocus(force?: boolean): void {\n        if (this._isPaused || this._isRestoringFocus) {\n            return;\n        }\n\n        const restoreFocus = async () => {\n            this._restoreFocusTimer = undefined;\n            const lastFocused =\n                this._tabster.focusedElement.getLastFocusedElement();\n\n            if (\n                !force &&\n                (this._isRestoringFocus ||\n                    !this._inDeloser ||\n                    (lastFocused && !isDisplayNone(lastFocused)))\n            ) {\n                return;\n            }\n\n            const curDeloser = this._curDeloser;\n            let isManual = false;\n\n            if (curDeloser) {\n                if (\n                    lastFocused &&\n                    curDeloser.customFocusLostHandler(lastFocused)\n                ) {\n                    return;\n                }\n\n                if (curDeloser.strategy === DeloserStrategies.Manual) {\n                    isManual = true;\n                } else {\n                    const curDeloserElement = curDeloser.getElement();\n                    const el = curDeloser.findAvailable();\n\n                    if (\n                        el &&\n                        (!curDeloserElement?.dispatchEvent(\n                            new TabsterMoveFocusEvent({\n                                by: \"deloser\",\n                                owner: curDeloserElement,\n                                next: el,\n                            })\n                        ) ||\n                            this._tabster.focusedElement.focus(el))\n                    ) {\n                        return;\n                    }\n                }\n            }\n\n            this._deactivate();\n\n            if (isManual) {\n                return;\n            }\n\n            this._isRestoringFocus = true;\n\n            // focusAvailable returns null when the default action is prevented by the application, false\n            // when nothing was focused and true when something was focused.\n            if ((await this._history.focusAvailable(null)) === false) {\n                await this._history.resetFocus(null);\n            }\n\n            this._isRestoringFocus = false;\n        };\n\n        if (force) {\n            restoreFocus();\n        } else {\n            this._restoreFocusTimer = this._win().setTimeout(restoreFocus, 100);\n        }\n    }\n\n    static getDeloser(\n        tabster: Types.TabsterCore,\n        element: HTMLElement\n    ): Types.Deloser | undefined {\n        let root: Types.Root | undefined;\n\n        for (\n            let e: HTMLElement | null = element;\n            e;\n            e = dom.getParentElement(e)\n        ) {\n            const tabsterOnElement = getTabsterOnElement(tabster, e);\n\n            if (tabsterOnElement) {\n                if (!root) {\n                    root = tabsterOnElement.root;\n                }\n\n                const deloser = tabsterOnElement.deloser;\n\n                if (deloser) {\n                    return deloser;\n                }\n            }\n        }\n\n        const deloserAPI = tabster.deloser && (tabster.deloser as DeloserAPI);\n\n        if (deloserAPI) {\n            if (deloserAPI._autoDeloserInstance) {\n                return deloserAPI._autoDeloserInstance;\n            }\n\n            const autoDeloserProps = deloserAPI._autoDeloser;\n\n            if (root && !deloserAPI._autoDeloserInstance && autoDeloserProps) {\n                const body = element.ownerDocument?.body;\n\n                if (body) {\n                    deloserAPI._autoDeloserInstance = new Deloser(\n                        tabster,\n                        body,\n                        (tabster.deloser as DeloserAPI)._onDeloserDispose,\n                        autoDeloserProps\n                    );\n                }\n            }\n\n            return deloserAPI._autoDeloserInstance;\n        }\n\n        return undefined;\n    }\n\n    private _onDeloserDispose = (deloser: Deloser) => {\n        this._history.removeDeloser(deloser);\n\n        if (deloser.isActive()) {\n            this._scheduleRestoreFocus();\n        }\n    };\n\n    static getHistory(instance: Types.DeloserAPI): DeloserHistory {\n        return (instance as DeloserAPI)._history;\n    }\n\n    static forceRestoreFocus(instance: Types.DeloserAPI): void {\n        (instance as DeloserAPI)._scheduleRestoreFocus(true);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as Types from \"../Types\";\n\nexport abstract class Subscribable<A, B = undefined>\n    implements Types.Subscribable<A, B>\n{\n    protected _val: A | undefined;\n    private _callbacks: Types.SubscribableCallback<A, B>[] = [];\n\n    dispose(): void {\n        this._callbacks = [];\n        delete this._val;\n    }\n\n    subscribe(callback: Types.SubscribableCallback<A, B>): void {\n        const callbacks = this._callbacks;\n        const index = callbacks.indexOf(callback);\n\n        if (index < 0) {\n            callbacks.push(callback);\n        }\n    }\n\n    subscribeFirst(callback: Types.SubscribableCallback<A, B>): void {\n        const callbacks = this._callbacks;\n        const index = callbacks.indexOf(callback);\n\n        if (index >= 0) {\n            callbacks.splice(index, 1);\n        }\n\n        callbacks.unshift(callback);\n    }\n\n    unsubscribe(callback: Types.SubscribableCallback<A, B>): void {\n        const index = this._callbacks.indexOf(callback);\n\n        if (index >= 0) {\n            this._callbacks.splice(index, 1);\n        }\n    }\n\n    protected setVal(val: A, detail: B): void {\n        if (this._val === val) {\n            return;\n        }\n\n        this._val = val;\n\n        this._callCallbacks(val, detail);\n    }\n\n    protected getVal(): A | undefined {\n        return this._val;\n    }\n\n    protected trigger(val: A, detail: B): void {\n        this._callCallbacks(val, detail);\n    }\n\n    private _callCallbacks(val: A, detail: B): void {\n        this._callbacks.forEach((callback) => callback(val, detail));\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    DeloserAPI,\n    DeloserHistoryByRootBase,\n    DeloserItemBase,\n} from \"./Deloser\";\nimport { getTabsterOnElement } from \"./Instance\";\nimport { RootAPI } from \"./Root\";\nimport { Subscribable } from \"./State/Subscribable\";\nimport * as Types from \"./Types\";\nimport { ObservedElementAccessibilities } from \"./Consts\";\nimport {\n    getElementUId,\n    getInstanceContext,\n    getPromise,\n    getUId,\n    getWindowUId,\n    HTMLElementWithUID,\n} from \"./Utils\";\nimport { dom } from \"./DOMAPI\";\n\nconst _transactionTimeout = 1500;\nconst _pingTimeout = 3000;\n\nconst _targetIdUp = \"up\";\n\nconst CrossOriginTransactionTypes: Types.CrossOriginTransactionTypes = {\n    Bootstrap: 1,\n    FocusElement: 2,\n    State: 3,\n    GetElement: 4,\n    RestoreFocusInDeloser: 5,\n    Ping: 6,\n};\n\ninterface CrossOriginInstanceContext {\n    ignoreKeyboardNavigationStateUpdate: boolean;\n    focusOwner?: string;\n    focusOwnerTimestamp?: number;\n    deloserByUId: { [uid: string]: Types.Deloser };\n    origOutlineSetup?: (props?: Partial<Types.OutlineProps>) => void;\n}\n\ninterface KnownTargets {\n    [id: string]: {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        send: (payload: Types.CrossOriginTransactionData<any, any>) => void;\n        last?: number;\n    };\n}\n\nclass CrossOriginDeloserItem extends DeloserItemBase<CrossOriginDeloser> {\n    private _deloser: CrossOriginDeloser;\n    private _transactions: CrossOriginTransactions;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        deloser: CrossOriginDeloser,\n        trasactions: CrossOriginTransactions\n    ) {\n        super();\n        this._deloser = deloser;\n        this._transactions = trasactions;\n    }\n\n    belongsTo(deloser: CrossOriginDeloser): boolean {\n        return deloser.deloserUId === this._deloser.deloserUId;\n    }\n\n    async focusAvailable(): Promise<boolean | null> {\n        const data: RestoreFocusInDeloserTransactionData = {\n            ...this._deloser,\n            reset: false,\n        };\n\n        return this._transactions\n            .beginTransaction(RestoreFocusInDeloserTransaction, data)\n            .then((value) => !!value);\n    }\n\n    async resetFocus(): Promise<boolean> {\n        const data: RestoreFocusInDeloserTransactionData = {\n            ...this._deloser,\n            reset: true,\n        };\n\n        return this._transactions\n            .beginTransaction(RestoreFocusInDeloserTransaction, data)\n            .then((value) => !!value);\n    }\n}\n\nclass CrossOriginDeloserHistoryByRoot extends DeloserHistoryByRootBase<\n    CrossOriginDeloser,\n    CrossOriginDeloserItem\n> {\n    private _transactions: CrossOriginTransactions;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        rootUId: string,\n        transactions: CrossOriginTransactions\n    ) {\n        super(tabster, rootUId);\n        this._transactions = transactions;\n    }\n\n    unshift(deloser: CrossOriginDeloser): void {\n        let item: CrossOriginDeloserItem | undefined;\n\n        for (let i = 0; i < this._history.length; i++) {\n            if (this._history[i].belongsTo(deloser)) {\n                item = this._history[i];\n                this._history.splice(i, 1);\n                break;\n            }\n        }\n\n        if (!item) {\n            item = new CrossOriginDeloserItem(\n                this._tabster,\n                deloser,\n                this._transactions\n            );\n        }\n\n        this._history.unshift(item);\n\n        this._history.splice(10, this._history.length - 10);\n    }\n\n    async focusAvailable(): Promise<boolean | null> {\n        for (const i of this._history) {\n            if (await i.focusAvailable()) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    async resetFocus(): Promise<boolean> {\n        for (const i of this._history) {\n            if (await i.resetFocus()) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n\nabstract class CrossOriginTransaction<I, O> {\n    abstract type: Types.CrossOriginTransactionType;\n    readonly id: string;\n    readonly beginData: I;\n    readonly timeout?: number;\n    protected tabster: Types.TabsterCore;\n    protected endData: O | undefined;\n    protected owner: Types.GetWindow;\n    protected ownerId: string;\n    protected sendUp: Types.CrossOriginTransactionSend | undefined;\n    private _promise: Promise<O>;\n    protected _resolve: ((endData?: O | PromiseLike<O>) => void) | undefined;\n    private _reject: ((reason: string) => void) | undefined;\n    private _knownTargets: KnownTargets;\n    private _sentTo: Types.CrossOriginSentTo;\n    protected targetId: string | undefined;\n    private _inProgress: { [id: string]: boolean } = {};\n    private _isDone = false;\n    private _isSelfResponding = false;\n    private _sentCount = 0;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        getOwner: Types.GetWindow,\n        knownTargets: KnownTargets,\n        value: I,\n        timeout?: number,\n        sentTo?: Types.CrossOriginSentTo,\n        targetId?: string,\n        sendUp?: Types.CrossOriginTransactionSend\n    ) {\n        this.tabster = tabster;\n        this.owner = getOwner;\n        this.ownerId = getWindowUId(getOwner());\n        this.id = getUId(getOwner());\n        this.beginData = value;\n        this._knownTargets = knownTargets;\n        this._sentTo = sentTo || { [this.ownerId]: true };\n        this.targetId = targetId;\n        this.sendUp = sendUp;\n        this.timeout = timeout;\n        this._promise = new (getPromise(getOwner))<O>((resolve, reject) => {\n            this._resolve = resolve;\n            this._reject = reject;\n        });\n    }\n\n    protected getTargets(knownTargets: KnownTargets): KnownTargets | null {\n        return this.targetId === _targetIdUp\n            ? this.sendUp\n                ? { [_targetIdUp]: { send: this.sendUp } }\n                : null\n            : this.targetId\n            ? knownTargets[this.targetId]\n                ? {\n                      [this.targetId]: {\n                          send: knownTargets[this.targetId].send,\n                      },\n                  }\n                : null\n            : Object.keys(knownTargets).length === 0 && this.sendUp\n            ? { [_targetIdUp]: { send: this.sendUp } }\n            : Object.keys(knownTargets).length > 0\n            ? knownTargets\n            : null;\n    }\n\n    begin(\n        selfResponse?: (\n            data: Types.CrossOriginTransactionData<I, O>\n        ) => Promise<O | undefined>\n    ): Promise<O | undefined> {\n        const targets = this.getTargets(this._knownTargets);\n        const sentTo: Types.CrossOriginSentTo = { ...this._sentTo };\n\n        if (targets) {\n            for (const id of Object.keys(targets)) {\n                sentTo[id] = true;\n            }\n        }\n\n        const data: Types.CrossOriginTransactionData<I, O> = {\n            transaction: this.id,\n            type: this.type,\n            isResponse: false,\n            timestamp: Date.now(),\n            owner: this.ownerId,\n            sentto: sentTo,\n            timeout: this.timeout,\n            beginData: this.beginData,\n        };\n\n        if (this.targetId) {\n            data.target = this.targetId;\n        }\n\n        if (selfResponse) {\n            this._isSelfResponding = true;\n\n            selfResponse(data).then((value) => {\n                this._isSelfResponding = false;\n\n                if (value !== undefined) {\n                    if (!this.endData) {\n                        this.endData = value;\n                    }\n                }\n\n                if (this.endData || this._sentCount === 0) {\n                    this.end();\n                }\n            });\n        }\n\n        if (targets) {\n            for (const id of Object.keys(targets)) {\n                if (!(id in this._sentTo)) {\n                    this._send(targets[id].send, id, data);\n                }\n            }\n        }\n\n        if (this._sentCount === 0 && !this._isSelfResponding) {\n            this.end();\n        }\n\n        return this._promise;\n    }\n\n    private _send(\n        send: (data: Types.CrossOriginTransactionData<I, O>) => void,\n        targetId: string,\n        data: Types.CrossOriginTransactionData<I, O>\n    ) {\n        if (this._inProgress[targetId] === undefined) {\n            this._inProgress[targetId] = true;\n            this._sentCount++;\n            send(data);\n        }\n    }\n\n    end(error?: string): void {\n        if (this._isDone) {\n            return;\n        }\n\n        this._isDone = true;\n\n        if (this.endData === undefined && error) {\n            if (this._reject) {\n                this._reject(error);\n            }\n        } else if (this._resolve) {\n            this._resolve(this.endData);\n        }\n    }\n\n    onResponse(data: Types.CrossOriginTransactionData<I, O>): void {\n        const endData = data.endData;\n\n        if (endData !== undefined && !this.endData) {\n            this.endData = endData;\n        }\n\n        const inProgressId =\n            data.target === _targetIdUp ? _targetIdUp : data.owner;\n\n        if (this._inProgress[inProgressId]) {\n            this._inProgress[inProgressId] = false;\n            this._sentCount--;\n\n            if (\n                this.endData ||\n                (this._sentCount === 0 && !this._isSelfResponding)\n            ) {\n                this.end();\n            }\n        }\n    }\n}\n\ninterface CrossOriginTransactionClass<I, O> {\n    new (\n        tabster: Types.TabsterCore,\n        getOwner: Types.GetWindow,\n        knownTargets: KnownTargets,\n        value: I,\n        timeout?: number,\n        sentTo?: Types.CrossOriginSentTo,\n        targetId?: string,\n        sendUp?: Types.CrossOriginTransactionSend\n    ): CrossOriginTransaction<I, O>;\n    shouldForward?(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<I, O>,\n        getOwner: Types.GetWindow,\n        ownerId: string\n    ): boolean;\n    makeResponse(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<I, O>,\n        getOwner: Types.GetWindow,\n        ownerId: string,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<O | undefined>,\n        isSelfResponse?: boolean\n    ): Promise<O>;\n    shouldSelfRespond?(\n        tabster: Types.TabsterCore,\n        data: I,\n        getOwner: Types.GetWindow,\n        ownerId: string\n    ): boolean;\n}\n\ninterface BootstrapTransactionContents {\n    isNavigatingWithKeyboard: boolean;\n}\n\nclass BootstrapTransaction extends CrossOriginTransaction<\n    undefined,\n    BootstrapTransactionContents\n> {\n    type = CrossOriginTransactionTypes.Bootstrap;\n\n    static shouldForward() {\n        return false;\n    }\n\n    static async makeResponse(\n        tabster: Types.TabsterCore\n    ): Promise<BootstrapTransactionContents> {\n        return {\n            isNavigatingWithKeyboard:\n                tabster.keyboardNavigation.isNavigatingWithKeyboard(),\n        };\n    }\n}\n\ninterface CrossOriginElementDataIn {\n    uid?: string;\n    id?: string;\n    rootId?: string;\n    ownerId?: string;\n    observedName?: string;\n    /**\n     * Optionally wait if the element is accessible or focusable before returning it\n     */\n    accessibility?: Types.ObservedElementAccessibility;\n}\n\ninterface FocusElementData extends CrossOriginElementDataIn {\n    noFocusedProgrammaticallyFlag?: boolean;\n    noAccessibleCheck?: boolean;\n}\n\nclass FocusElementTransaction extends CrossOriginTransaction<\n    FocusElementData,\n    boolean\n> {\n    type = CrossOriginTransactionTypes.FocusElement;\n\n    static shouldSelfRespond() {\n        return true;\n    }\n\n    static shouldForward(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<FocusElementData, boolean>,\n        getOwner: Types.GetWindow\n    ): boolean {\n        const el = GetElementTransaction.findElement(\n            tabster,\n            getOwner,\n            data.beginData\n        );\n        return !el || !tabster.focusable.isFocusable(el);\n    }\n\n    static async makeResponse(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<FocusElementData, boolean>,\n        getOwner: Types.GetWindow,\n        ownerId: string,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<boolean | undefined>\n    ): Promise<boolean> {\n        const el = GetElementTransaction.findElement(\n            tabster,\n            getOwner,\n            data.beginData\n        );\n        return (\n            (!!el && tabster.focusedElement.focus(el, true)) ||\n            !!(await forwardResult)\n        );\n    }\n}\n\nconst CrossOriginStates: {\n    Focused: 1;\n    Blurred: 2;\n    Observed: 3;\n    DeadWindow: 4;\n    KeyboardNavigation: 5;\n    Outline: 6;\n} = {\n    Focused: 1,\n    Blurred: 2,\n    Observed: 3,\n    DeadWindow: 4,\n    KeyboardNavigation: 5,\n    Outline: 6,\n};\ntype CrossOriginState =\n    typeof CrossOriginStates[keyof typeof CrossOriginStates];\n\ninterface CrossOriginElementDataOut {\n    ownerUId: string;\n    uid?: string;\n    id?: string;\n    rootUId?: string;\n    deloserUId?: string;\n    observedName?: string;\n    observedDetails?: string;\n}\n\ninterface CrossOriginStateData extends CrossOriginElementDataOut {\n    state: CrossOriginState;\n    isFocusedProgrammatically?: boolean;\n    force?: boolean;\n    isNavigatingWithKeyboard?: boolean;\n    outline?: Partial<Types.OutlineProps>;\n}\n\nclass StateTransaction extends CrossOriginTransaction<\n    CrossOriginStateData,\n    true\n> {\n    type = CrossOriginTransactionTypes.State;\n\n    static shouldSelfRespond(\n        tabster: Types.TabsterCore,\n        data: CrossOriginStateData\n    ): boolean {\n        return (\n            data.state !== CrossOriginStates.DeadWindow &&\n            data.state !== CrossOriginStates.KeyboardNavigation\n        );\n    }\n\n    static async makeResponse(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<CrossOriginStateData, true>,\n        getOwner: Types.GetWindow,\n        ownerId: string,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<true | undefined>,\n        isSelfResponse?: boolean\n    ): Promise<true> {\n        const timestamp = data.timestamp;\n        const beginData = data.beginData;\n\n        if (timestamp && beginData) {\n            switch (beginData.state) {\n                case CrossOriginStates.Focused:\n                    return StateTransaction._makeFocusedResponse(\n                        tabster,\n                        timestamp,\n                        beginData,\n                        transactions,\n                        isSelfResponse\n                    );\n                case CrossOriginStates.Blurred:\n                    return StateTransaction._makeBlurredResponse(\n                        tabster,\n                        timestamp,\n                        beginData,\n                        transactions.ctx\n                    );\n                case CrossOriginStates.Observed:\n                    return StateTransaction._makeObservedResponse(\n                        tabster,\n                        beginData\n                    );\n                case CrossOriginStates.DeadWindow:\n                    return StateTransaction._makeDeadWindowResponse(\n                        tabster,\n                        beginData,\n                        transactions,\n                        forwardResult\n                    );\n                case CrossOriginStates.KeyboardNavigation:\n                    return StateTransaction._makeKeyboardNavigationResponse(\n                        tabster,\n                        transactions.ctx,\n                        beginData.isNavigatingWithKeyboard\n                    );\n                case CrossOriginStates.Outline:\n                    return StateTransaction._makeOutlineResponse(\n                        tabster,\n                        transactions.ctx,\n                        beginData.outline\n                    );\n            }\n        }\n\n        return true;\n    }\n\n    static createElement(\n        tabster: Types.TabsterCore,\n        beginData: CrossOriginElementDataOut\n    ): CrossOriginElement | null {\n        return beginData.uid\n            ? new CrossOriginElement(\n                  tabster,\n                  beginData.uid,\n                  beginData.ownerUId,\n                  beginData.id,\n                  beginData.rootUId,\n                  beginData.observedName,\n                  beginData.observedDetails\n              )\n            : null;\n    }\n\n    private static async _makeFocusedResponse(\n        tabster: Types.TabsterCore,\n        timestamp: number,\n        beginData: CrossOriginStateData,\n        transactions: CrossOriginTransactions,\n        isSelfResponse?: boolean\n    ): Promise<true> {\n        const element = StateTransaction.createElement(tabster, beginData);\n\n        if (beginData && beginData.ownerUId && element) {\n            transactions.ctx.focusOwner = beginData.ownerUId;\n            transactions.ctx.focusOwnerTimestamp = timestamp;\n\n            if (!isSelfResponse && beginData.rootUId && beginData.deloserUId) {\n                const deloserAPI = tabster.deloser;\n\n                if (deloserAPI) {\n                    const history = DeloserAPI.getHistory(deloserAPI);\n\n                    const deloser: CrossOriginDeloser = {\n                        ownerUId: beginData.ownerUId,\n                        deloserUId: beginData.deloserUId,\n                        rootUId: beginData.rootUId,\n                    };\n\n                    const historyItem = history.make(\n                        beginData.rootUId,\n                        () =>\n                            new CrossOriginDeloserHistoryByRoot(\n                                tabster,\n                                deloser.rootUId,\n                                transactions\n                            )\n                    );\n\n                    historyItem.unshift(deloser);\n                }\n            }\n\n            CrossOriginFocusedElementState.setVal(\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                tabster.crossOrigin!.focusedElement,\n                element,\n                {\n                    isFocusedProgrammatically:\n                        beginData.isFocusedProgrammatically,\n                }\n            );\n        }\n\n        return true;\n    }\n\n    private static async _makeBlurredResponse(\n        tabster: Types.TabsterCore,\n        timestamp: number,\n        beginData: CrossOriginStateData,\n        context: CrossOriginInstanceContext\n    ): Promise<true> {\n        if (\n            beginData &&\n            (beginData.ownerUId === context.focusOwner || beginData.force) &&\n            (!context.focusOwnerTimestamp ||\n                context.focusOwnerTimestamp < timestamp)\n        ) {\n            CrossOriginFocusedElementState.setVal(\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                tabster.crossOrigin!.focusedElement,\n                undefined,\n                {}\n            );\n        }\n\n        return true;\n    }\n\n    private static async _makeObservedResponse(\n        tabster: Types.TabsterCore,\n        beginData: CrossOriginStateData\n    ): Promise<true> {\n        const name = beginData.observedName;\n        const element = StateTransaction.createElement(tabster, beginData);\n\n        if (name && element) {\n            CrossOriginObservedElementState.trigger(\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                tabster.crossOrigin!.observedElement,\n                element,\n                { names: [name], details: beginData.observedDetails }\n            );\n        }\n\n        return true;\n    }\n\n    private static async _makeDeadWindowResponse(\n        tabster: Types.TabsterCore,\n        beginData: CrossOriginStateData,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<true | undefined>\n    ): Promise<true> {\n        const deadUId = beginData && beginData.ownerUId;\n\n        if (deadUId) {\n            transactions.removeTarget(deadUId);\n        }\n\n        return forwardResult.then(() => {\n            if (deadUId === transactions.ctx.focusOwner) {\n                const deloserAPI = tabster.deloser;\n\n                if (deloserAPI) {\n                    DeloserAPI.forceRestoreFocus(deloserAPI);\n                }\n            }\n            return true;\n        });\n    }\n\n    private static async _makeKeyboardNavigationResponse(\n        tabster: Types.TabsterCore,\n        context: CrossOriginInstanceContext,\n        isNavigatingWithKeyboard?: boolean\n    ): Promise<true> {\n        if (\n            isNavigatingWithKeyboard !== undefined &&\n            tabster.keyboardNavigation.isNavigatingWithKeyboard() !==\n                isNavigatingWithKeyboard\n        ) {\n            context.ignoreKeyboardNavigationStateUpdate = true;\n            tabster.keyboardNavigation.setNavigatingWithKeyboard(\n                isNavigatingWithKeyboard\n            );\n            context.ignoreKeyboardNavigationStateUpdate = false;\n        }\n        return true;\n    }\n\n    private static async _makeOutlineResponse(\n        tabster: Types.TabsterCore,\n        context: CrossOriginInstanceContext,\n        props?: Partial<Types.OutlineProps>\n    ): Promise<true> {\n        if (context.origOutlineSetup) {\n            context.origOutlineSetup.call(\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                tabster.outline!,\n                props\n            );\n        }\n        return true;\n    }\n}\n\nclass GetElementTransaction extends CrossOriginTransaction<\n    CrossOriginElementDataIn | undefined,\n    CrossOriginElementDataOut\n> {\n    type = CrossOriginTransactionTypes.GetElement;\n\n    static shouldSelfRespond() {\n        return true;\n    }\n\n    static findElement(\n        tabster: Types.TabsterCore,\n        getOwner: Types.GetWindow,\n        data?: CrossOriginElementDataIn\n    ): HTMLElement | null {\n        let element: HTMLElement | null | undefined;\n\n        if (\n            data &&\n            (!data.ownerId || data.ownerId === getWindowUId(getOwner()))\n        ) {\n            if (data.id) {\n                element = dom.getElementById(getOwner().document, data.id);\n\n                if (element && data.rootId) {\n                    const ctx = RootAPI.getTabsterContext(tabster, element);\n\n                    if (!ctx || ctx.root.uid !== data.rootId) {\n                        return null;\n                    }\n                }\n            } else if (data.uid) {\n                const ref = getInstanceContext(getOwner).elementByUId[data.uid];\n                element = ref && ref.get();\n            } else if (data.observedName) {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                element = tabster.observedElement!.getElement(\n                    data.observedName,\n                    data.accessibility\n                );\n            }\n        }\n\n        return element || null;\n    }\n\n    static getElementData(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        getOwner: Types.GetWindow,\n        context: CrossOriginInstanceContext,\n        ownerUId: string\n    ): CrossOriginElementDataOut {\n        const deloser = DeloserAPI.getDeloser(tabster, element);\n        const ctx = RootAPI.getTabsterContext(tabster, element);\n        const tabsterOnElement = getTabsterOnElement(tabster, element);\n        const observed = tabsterOnElement && tabsterOnElement.observed;\n\n        return {\n            uid: getElementUId(getOwner, element),\n            ownerUId,\n            id: element.id || undefined,\n            rootUId: ctx ? ctx.root.uid : undefined,\n            deloserUId: deloser\n                ? getDeloserUID(getOwner, context, deloser)\n                : undefined,\n            observedName: observed && observed.names && observed.names[0],\n            observedDetails: observed && observed.details,\n        };\n    }\n\n    static async makeResponse(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<\n            CrossOriginElementDataIn | undefined,\n            CrossOriginElementDataOut\n        >,\n        getOwner: Types.GetWindow,\n        ownerUId: string,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<CrossOriginElementDataOut | undefined>\n    ): Promise<CrossOriginElementDataOut | undefined> {\n        const beginData = data.beginData;\n        let element: HTMLElement | undefined;\n        let dataOut: CrossOriginElementDataOut | undefined;\n\n        if (beginData === undefined) {\n            element = tabster.focusedElement.getFocusedElement();\n        } else if (beginData) {\n            element =\n                GetElementTransaction.findElement(\n                    tabster,\n                    getOwner,\n                    beginData\n                ) || undefined;\n        }\n\n        if (!element && beginData) {\n            const name = beginData.observedName;\n            const timeout = data.timeout;\n            const accessibility = beginData.accessibility;\n\n            if (name && timeout) {\n                const e: {\n                    element?: HTMLElement | null;\n                    crossOrigin?: CrossOriginElementDataOut;\n                } = await new (getPromise(getOwner))((resolve) => {\n                    let isWaitElementResolved = false;\n                    let isForwardResolved = false;\n                    let isResolved = false;\n\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    tabster\n                        .observedElement!.waitElement(\n                            name,\n                            timeout,\n                            accessibility\n                        )\n                        .result.then((value) => {\n                            isWaitElementResolved = true;\n\n                            if (!isResolved && (value || isForwardResolved)) {\n                                isResolved = true;\n                                resolve({ element: value });\n                            }\n                        });\n\n                    forwardResult.then((value) => {\n                        isForwardResolved = true;\n\n                        if (!isResolved && (value || isWaitElementResolved)) {\n                            isResolved = true;\n                            resolve({ crossOrigin: value });\n                        }\n                    });\n                });\n\n                if (e.element) {\n                    element = e.element;\n                } else if (e.crossOrigin) {\n                    dataOut = e.crossOrigin;\n                }\n            }\n        }\n\n        return element\n            ? GetElementTransaction.getElementData(\n                  tabster,\n                  element,\n                  getOwner,\n                  transactions.ctx,\n                  ownerUId\n              )\n            : dataOut;\n    }\n}\n\ninterface CrossOriginDeloser {\n    ownerUId: string;\n    deloserUId: string;\n    rootUId: string;\n}\n\ninterface RestoreFocusInDeloserTransactionData extends CrossOriginDeloser {\n    reset: boolean;\n}\n\nclass RestoreFocusInDeloserTransaction extends CrossOriginTransaction<\n    RestoreFocusInDeloserTransactionData,\n    boolean\n> {\n    type = CrossOriginTransactionTypes.RestoreFocusInDeloser;\n\n    static async makeResponse(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<\n            RestoreFocusInDeloserTransactionData,\n            boolean\n        >,\n        getOwner: Types.GetWindow,\n        ownerId: string,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<boolean | undefined>\n    ): Promise<boolean | null> {\n        const forwardRet = await forwardResult;\n        const begin = !forwardRet && data.beginData;\n        const uid = begin && begin.deloserUId;\n        const deloser = uid && transactions.ctx.deloserByUId[uid];\n        const deloserAPI = tabster.deloser;\n\n        if (begin && deloser && deloserAPI) {\n            const history = DeloserAPI.getHistory(deloserAPI);\n            return begin.reset\n                ? history.resetFocus(deloser)\n                : history.focusAvailable(deloser);\n        }\n\n        return !!forwardRet;\n    }\n}\n\nclass PingTransaction extends CrossOriginTransaction<undefined, true> {\n    type = CrossOriginTransactionTypes.Ping;\n\n    static shouldForward() {\n        return false;\n    }\n\n    static async makeResponse(): Promise<true> {\n        return true;\n    }\n}\n\ninterface CrossOriginTransactionWrapper<I, O> {\n    transaction: CrossOriginTransaction<I, O>;\n    timer?: number;\n}\n\nclass CrossOriginTransactions {\n    private _owner: Types.GetWindow;\n    private _ownerUId: string;\n    private _knownTargets: KnownTargets = {};\n    private _transactions: {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        [id: string]: CrossOriginTransactionWrapper<any, any>;\n    } = {};\n    private _tabster: Types.TabsterCore;\n    private _pingTimer: number | undefined;\n    private _isDefaultSendUp = false;\n    private _deadPromise: Promise<true | undefined> | undefined;\n    isSetUp = false;\n    sendUp: Types.CrossOriginTransactionSend | undefined;\n    ctx: CrossOriginInstanceContext;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        getOwner: Types.GetWindow,\n        context: CrossOriginInstanceContext\n    ) {\n        this._tabster = tabster;\n        this._owner = getOwner;\n        this._ownerUId = getWindowUId(getOwner());\n        this.ctx = context;\n    }\n\n    setup(\n        sendUp?: Types.CrossOriginTransactionSend | null\n    ): (msg: Types.CrossOriginMessage) => void {\n        if (this.isSetUp) {\n            if (__DEV__) {\n                console.error(\"CrossOrigin is already set up.\");\n            }\n        } else {\n            this.isSetUp = true;\n\n            this.setSendUp(sendUp);\n\n            this._owner().addEventListener(\"pagehide\", this._onPageHide);\n\n            this._ping();\n        }\n\n        return this._onMessage;\n    }\n\n    setSendUp(\n        sendUp?: Types.CrossOriginTransactionSend | null\n    ): (msg: Types.CrossOriginMessage) => void {\n        if (!this.isSetUp) {\n            throw new Error(\"CrossOrigin is not set up.\");\n        }\n\n        this.sendUp = sendUp || undefined;\n\n        const owner = this._owner();\n\n        if (sendUp === undefined) {\n            if (!this._isDefaultSendUp) {\n                if (owner.document) {\n                    this._isDefaultSendUp = true;\n\n                    if (\n                        owner.parent &&\n                        owner.parent !== owner &&\n                        owner.parent.postMessage\n                    ) {\n                        this.sendUp = (\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            data: Types.CrossOriginTransactionData<any, any>\n                        ) => {\n                            owner.parent.postMessage(JSON.stringify(data), \"*\");\n                        };\n                    }\n\n                    owner.addEventListener(\"message\", this._onBrowserMessage);\n                }\n            }\n        } else if (this._isDefaultSendUp) {\n            owner.removeEventListener(\"message\", this._onBrowserMessage);\n            this._isDefaultSendUp = false;\n        }\n\n        return this._onMessage;\n    }\n\n    async dispose(): Promise<void> {\n        const owner = this._owner();\n\n        if (this._pingTimer) {\n            owner.clearTimeout(this._pingTimer);\n            this._pingTimer = undefined;\n        }\n\n        owner.removeEventListener(\"message\", this._onBrowserMessage);\n        owner.removeEventListener(\"pagehide\", this._onPageHide);\n\n        await this._dead();\n\n        delete this._deadPromise;\n\n        for (const id of Object.keys(this._transactions)) {\n            const t = this._transactions[id];\n\n            if (t.timer) {\n                owner.clearTimeout(t.timer);\n                delete t.timer;\n            }\n\n            t.transaction.end();\n        }\n\n        this._knownTargets = {};\n\n        delete this.sendUp;\n    }\n\n    beginTransaction<I, O>(\n        Transaction: CrossOriginTransactionClass<I, O>,\n        value: I,\n        timeout?: number,\n        sentTo?: Types.CrossOriginSentTo,\n        targetId?: string,\n        withReject?: boolean\n    ): Promise<O | undefined> {\n        if (!this._owner) {\n            return getPromise(this._owner).reject();\n        }\n\n        const transaction = new Transaction(\n            this._tabster,\n            this._owner,\n            this._knownTargets,\n            value,\n            timeout,\n            sentTo,\n            targetId,\n            this.sendUp\n        );\n        let selfResponse:\n            | ((\n                  data: Types.CrossOriginTransactionData<I, O>\n              ) => Promise<O | undefined>)\n            | undefined;\n\n        if (\n            Transaction.shouldSelfRespond &&\n            Transaction.shouldSelfRespond(\n                this._tabster,\n                value,\n                this._owner,\n                this._ownerUId\n            )\n        ) {\n            selfResponse = (data: Types.CrossOriginTransactionData<I, O>) => {\n                return Transaction.makeResponse(\n                    this._tabster,\n                    data,\n                    this._owner,\n                    this._ownerUId,\n                    this,\n                    getPromise(this._owner).resolve(undefined),\n                    true\n                );\n            };\n        }\n\n        return this._beginTransaction(\n            transaction,\n            timeout,\n            selfResponse,\n            withReject\n        );\n    }\n\n    removeTarget(uid: string): void {\n        delete this._knownTargets[uid];\n    }\n\n    private _beginTransaction<I, O>(\n        transaction: CrossOriginTransaction<I, O>,\n        timeout?: number,\n        selfResponse?: (\n            data: Types.CrossOriginTransactionData<I, O>\n        ) => Promise<O | undefined>,\n        withReject?: boolean\n    ): Promise<O | undefined> {\n        const owner = this._owner();\n\n        const wrapper: CrossOriginTransactionWrapper<I, O> = {\n            transaction,\n            timer: owner.setTimeout(() => {\n                delete wrapper.timer;\n                transaction.end(\"Cross origin transaction timed out.\");\n            }, _transactionTimeout + (timeout || 0)),\n        };\n\n        this._transactions[transaction.id] = wrapper;\n\n        const ret = transaction.begin(selfResponse);\n\n        ret.catch(() => {\n            /**/\n        }).finally(() => {\n            if (wrapper.timer) {\n                owner.clearTimeout(wrapper.timer);\n            }\n            delete this._transactions[transaction.id];\n        });\n\n        return ret.then(\n            (value) => value,\n            withReject ? undefined : () => undefined\n        );\n    }\n\n    forwardTransaction(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        data: Types.CrossOriginTransactionData<any, any>\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ): Promise<any> {\n        const owner = this._owner;\n        let targetId = data.target;\n\n        if (targetId === this._ownerUId) {\n            return getPromise(owner).resolve();\n        }\n\n        const Transaction = this._getTransactionClass(data.type);\n\n        if (Transaction) {\n            if (\n                Transaction.shouldForward === undefined ||\n                Transaction.shouldForward(\n                    this._tabster,\n                    data,\n                    owner,\n                    this._ownerUId\n                )\n            ) {\n                const sentTo = data.sentto;\n\n                if (targetId === _targetIdUp) {\n                    targetId = undefined;\n                    sentTo[this._ownerUId] = true;\n                }\n\n                delete sentTo[_targetIdUp];\n\n                return this._beginTransaction(\n                    new Transaction(\n                        this._tabster,\n                        owner,\n                        this._knownTargets,\n                        data.beginData,\n                        data.timeout,\n                        sentTo,\n                        targetId,\n                        this.sendUp\n                    ),\n                    data.timeout\n                );\n            } else {\n                return getPromise(owner).resolve();\n            }\n        }\n\n        return getPromise(owner).reject(\n            `Unknown transaction type ${data.type}`\n        );\n    }\n\n    private _getTransactionClass(\n        type: Types.CrossOriginTransactionType\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ): CrossOriginTransactionClass<any, any> | null {\n        switch (type) {\n            case CrossOriginTransactionTypes.Bootstrap:\n                return BootstrapTransaction;\n            case CrossOriginTransactionTypes.FocusElement:\n                return FocusElementTransaction;\n            case CrossOriginTransactionTypes.State:\n                return StateTransaction;\n            case CrossOriginTransactionTypes.GetElement:\n                return GetElementTransaction;\n            case CrossOriginTransactionTypes.RestoreFocusInDeloser:\n                return RestoreFocusInDeloserTransaction;\n            case CrossOriginTransactionTypes.Ping:\n                return PingTransaction;\n            default:\n                return null;\n        }\n    }\n\n    private _onMessage = (e: Types.CrossOriginMessage) => {\n        if (e.data.owner === this._ownerUId || !this._tabster) {\n            return;\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const data: Types.CrossOriginTransactionData<any, any> = e.data;\n        let transactionId: string;\n\n        if (\n            !data ||\n            !(transactionId = data.transaction) ||\n            !data.type ||\n            !data.timestamp ||\n            !data.owner ||\n            !data.sentto\n        ) {\n            return;\n        }\n\n        let knownTarget = this._knownTargets[data.owner];\n\n        if (!knownTarget && e.send && data.owner !== this._ownerUId) {\n            knownTarget = this._knownTargets[data.owner] = { send: e.send };\n        }\n\n        if (knownTarget) {\n            knownTarget.last = Date.now();\n        }\n\n        if (data.isResponse) {\n            const t = this._transactions[transactionId];\n\n            if (t && t.transaction && t.transaction.type === data.type) {\n                t.transaction.onResponse(data);\n            }\n        } else {\n            const Transaction = this._getTransactionClass(data.type);\n\n            const forwardResult = this.forwardTransaction(data);\n\n            if (Transaction && e.send) {\n                Transaction.makeResponse(\n                    this._tabster,\n                    data,\n                    this._owner,\n                    this._ownerUId,\n                    this,\n                    forwardResult,\n                    false\n                ).then((r) => {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    const response: Types.CrossOriginTransactionData<any, any> =\n                        {\n                            transaction: data.transaction,\n                            type: data.type,\n                            isResponse: true,\n                            timestamp: Date.now(),\n                            owner: this._ownerUId,\n                            timeout: data.timeout,\n                            sentto: {},\n                            target:\n                                data.target === _targetIdUp\n                                    ? _targetIdUp\n                                    : data.owner,\n                            endData: r,\n                        };\n\n                    e.send(response);\n                });\n            }\n        }\n    };\n\n    private _onPageHide = () => {\n        this._dead();\n    };\n\n    private async _dead(): Promise<void> {\n        if (!this._deadPromise && this.ctx.focusOwner === this._ownerUId) {\n            this._deadPromise = this.beginTransaction(StateTransaction, {\n                ownerUId: this._ownerUId,\n                state: CrossOriginStates.DeadWindow,\n            });\n        }\n\n        if (this._deadPromise) {\n            await this._deadPromise;\n        }\n    }\n\n    private async _ping(): Promise<void> {\n        if (this._pingTimer) {\n            return;\n        }\n\n        let deadWindows: { [key: string]: boolean } | undefined;\n        const now = Date.now();\n        const targets = Object.keys(this._knownTargets).filter(\n            (uid) => now - (this._knownTargets[uid].last || 0) > _pingTimeout\n        );\n\n        if (this.sendUp) {\n            targets.push(_targetIdUp);\n        }\n\n        if (targets.length) {\n            await getPromise(this._owner).all(\n                targets.map((uid) =>\n                    this.beginTransaction(\n                        PingTransaction,\n                        undefined,\n                        undefined,\n                        undefined,\n                        uid,\n                        true\n                    ).then(\n                        () => true,\n                        () => {\n                            if (uid !== _targetIdUp) {\n                                if (!deadWindows) {\n                                    deadWindows = {};\n                                }\n                                deadWindows[uid] = true;\n                                delete this._knownTargets[uid];\n                            }\n                            return false;\n                        }\n                    )\n                )\n            );\n        }\n\n        if (deadWindows) {\n            const focused = await this.beginTransaction(\n                GetElementTransaction,\n                undefined\n            );\n\n            if (\n                !focused &&\n                this.ctx.focusOwner &&\n                this.ctx.focusOwner in deadWindows\n            ) {\n                await this.beginTransaction(StateTransaction, {\n                    ownerUId: this._ownerUId,\n                    state: CrossOriginStates.Blurred,\n                    force: true,\n                });\n\n                const deloserAPI = this._tabster.deloser;\n\n                if (deloserAPI) {\n                    DeloserAPI.forceRestoreFocus(deloserAPI);\n                }\n            }\n        }\n\n        this._pingTimer = this._owner().setTimeout(() => {\n            this._pingTimer = undefined;\n            this._ping();\n        }, _pingTimeout);\n    }\n\n    private _onBrowserMessage = (e: MessageEvent) => {\n        if (e.source === this._owner()) {\n            return;\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const send = (data: Types.CrossOriginTransactionData<any, any>) => {\n            if (e.source && e.source.postMessage) {\n                // eslint-disable-next-line @typescript-eslint/ban-types\n                (e.source.postMessage as Function)(JSON.stringify(data), \"*\");\n            }\n        };\n\n        try {\n            this._onMessage({\n                data: JSON.parse(e.data),\n                send,\n            });\n        } catch (e) {\n            /* Ignore */\n        }\n    };\n}\n\nexport class CrossOriginElement implements Types.CrossOriginElement {\n    private _tabster: Types.TabsterCore;\n    readonly uid: string;\n    readonly ownerId: string;\n    readonly id?: string;\n    readonly rootId?: string;\n    readonly observedName?: string;\n    readonly observedDetails?: string;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        uid: string,\n        ownerId: string,\n        id?: string,\n        rootId?: string,\n        observedName?: string,\n        observedDetails?: string\n    ) {\n        this._tabster = tabster;\n        this.uid = uid;\n        this.ownerId = ownerId;\n        this.id = id;\n        this.rootId = rootId;\n        this.observedName = observedName;\n        this.observedDetails = observedDetails;\n    }\n\n    focus(\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean> {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return this._tabster.crossOrigin!.focusedElement.focus(\n            this,\n            noFocusedProgrammaticallyFlag,\n            noAccessibleCheck\n        );\n    }\n}\n\nexport class CrossOriginFocusedElementState\n    extends Subscribable<\n        CrossOriginElement | undefined,\n        Types.FocusedElementDetail\n    >\n    implements Types.CrossOriginFocusedElementState\n{\n    private _transactions: CrossOriginTransactions;\n\n    constructor(transactions: CrossOriginTransactions) {\n        super();\n        this._transactions = transactions;\n    }\n\n    async focus(\n        element: Types.CrossOriginElement,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean> {\n        return this._focus(\n            {\n                uid: element.uid,\n                id: element.id,\n                rootId: element.rootId,\n                ownerId: element.ownerId,\n                observedName: element.observedName,\n            },\n            noFocusedProgrammaticallyFlag,\n            noAccessibleCheck\n        );\n    }\n\n    async focusById(\n        elementId: string,\n        rootId?: string,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean> {\n        return this._focus(\n            { id: elementId, rootId },\n            noFocusedProgrammaticallyFlag,\n            noAccessibleCheck\n        );\n    }\n\n    async focusByObservedName(\n        observedName: string,\n        timeout?: number,\n        rootId?: string,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean> {\n        return this._focus(\n            { observedName, rootId },\n            noFocusedProgrammaticallyFlag,\n            noAccessibleCheck,\n            timeout\n        );\n    }\n\n    private async _focus(\n        elementData: CrossOriginElementDataIn,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean,\n        timeout?: number\n    ): Promise<boolean> {\n        return this._transactions\n            .beginTransaction(\n                FocusElementTransaction,\n                {\n                    ...elementData,\n                    noFocusedProgrammaticallyFlag,\n                    noAccessibleCheck,\n                },\n                timeout\n            )\n            .then((value) => !!value);\n    }\n\n    static setVal(\n        instance: Types.CrossOriginFocusedElementState,\n        val: CrossOriginElement | undefined,\n        detail: Types.FocusedElementDetail\n    ): void {\n        (instance as CrossOriginFocusedElementState).setVal(val, detail);\n    }\n}\n\nexport class CrossOriginObservedElementState\n    extends Subscribable<CrossOriginElement, Types.ObservedElementProps>\n    implements Types.CrossOriginObservedElementState\n{\n    private _tabster: Types.TabsterCore;\n    private _transactions: CrossOriginTransactions;\n    private _lastRequestFocusId = 0;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        transactions: CrossOriginTransactions\n    ) {\n        super();\n        this._tabster = tabster;\n        this._transactions = transactions;\n    }\n\n    async getElement(\n        observedName: string,\n        accessibility?: Types.ObservedElementAccessibility\n    ): Promise<CrossOriginElement | null> {\n        return this.waitElement(observedName, 0, accessibility);\n    }\n\n    async waitElement(\n        observedName: string,\n        timeout: number,\n        accessibility?: Types.ObservedElementAccessibility\n    ): Promise<CrossOriginElement | null> {\n        return this._transactions\n            .beginTransaction(\n                GetElementTransaction,\n                {\n                    observedName,\n                    accessibility,\n                },\n                timeout\n            )\n            .then((value) =>\n                value\n                    ? StateTransaction.createElement(this._tabster, value)\n                    : null\n            );\n    }\n\n    async requestFocus(\n        observedName: string,\n        timeout: number\n    ): Promise<boolean> {\n        const requestId = ++this._lastRequestFocusId;\n        return this.waitElement(\n            observedName,\n            timeout,\n            ObservedElementAccessibilities.Focusable\n        ).then((element) =>\n            this._lastRequestFocusId === requestId && element\n                ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                  this._tabster.crossOrigin!.focusedElement.focus(element, true)\n                : false\n        );\n    }\n\n    static trigger(\n        instance: Types.CrossOriginObservedElementState,\n        element: CrossOriginElement,\n        details: Types.ObservedElementProps\n    ): void {\n        (instance as CrossOriginObservedElementState).trigger(element, details);\n    }\n}\n\nexport class CrossOriginAPI implements Types.CrossOriginAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    private _transactions: CrossOriginTransactions;\n    private _blurTimer: number | undefined;\n    private _ctx: CrossOriginInstanceContext;\n\n    focusedElement: Types.CrossOriginFocusedElementState;\n    observedElement: Types.CrossOriginObservedElementState;\n\n    constructor(tabster: Types.TabsterCore) {\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n        this._ctx = {\n            ignoreKeyboardNavigationStateUpdate: false,\n            deloserByUId: {},\n        };\n\n        this._transactions = new CrossOriginTransactions(\n            tabster,\n            this._win,\n            this._ctx\n        );\n        this.focusedElement = new CrossOriginFocusedElementState(\n            this._transactions\n        );\n        this.observedElement = new CrossOriginObservedElementState(\n            tabster,\n            this._transactions\n        );\n    }\n\n    setup(\n        sendUp?: Types.CrossOriginTransactionSend | null\n    ): (msg: Types.CrossOriginMessage) => void {\n        if (this.isSetUp()) {\n            return this._transactions.setSendUp(sendUp);\n        } else {\n            this._tabster.queueInit(this._init);\n            return this._transactions.setup(sendUp);\n        }\n    }\n\n    isSetUp(): boolean {\n        return this._transactions.isSetUp;\n    }\n\n    private _init = (): void => {\n        const tabster = this._tabster;\n\n        tabster.keyboardNavigation.subscribe(\n            this._onKeyboardNavigationStateChanged\n        );\n        tabster.focusedElement.subscribe(this._onFocus);\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        tabster.observedElement!.subscribe(this._onObserved);\n\n        if (!this._ctx.origOutlineSetup) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            this._ctx.origOutlineSetup = tabster.outline!.setup;\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            tabster.outline!.setup = this._outlineSetup;\n        }\n\n        this._transactions\n            .beginTransaction(\n                BootstrapTransaction,\n                undefined,\n                undefined,\n                undefined,\n                _targetIdUp\n            )\n            .then((data) => {\n                if (\n                    data &&\n                    this._tabster.keyboardNavigation.isNavigatingWithKeyboard() !==\n                        data.isNavigatingWithKeyboard\n                ) {\n                    this._ctx.ignoreKeyboardNavigationStateUpdate = true;\n                    this._tabster.keyboardNavigation.setNavigatingWithKeyboard(\n                        data.isNavigatingWithKeyboard\n                    );\n                    this._ctx.ignoreKeyboardNavigationStateUpdate = false;\n                }\n            });\n    };\n\n    dispose(): void {\n        const tabster = this._tabster;\n\n        tabster.keyboardNavigation.unsubscribe(\n            this._onKeyboardNavigationStateChanged\n        );\n        tabster.focusedElement.unsubscribe(this._onFocus);\n        tabster.observedElement?.unsubscribe(this._onObserved);\n\n        this._transactions.dispose();\n        this.focusedElement.dispose();\n        this.observedElement.dispose();\n\n        this._ctx.deloserByUId = {};\n    }\n\n    private _onKeyboardNavigationStateChanged = (value: boolean): void => {\n        if (!this._ctx.ignoreKeyboardNavigationStateUpdate) {\n            this._transactions.beginTransaction(StateTransaction, {\n                state: CrossOriginStates.KeyboardNavigation,\n                ownerUId: getWindowUId(this._win()),\n                isNavigatingWithKeyboard: value,\n            });\n        }\n    };\n\n    private _onFocus = (element: HTMLElementWithUID | undefined): void => {\n        const win = this._win();\n\n        const ownerUId = getWindowUId(win);\n\n        if (this._blurTimer) {\n            win.clearTimeout(this._blurTimer);\n            this._blurTimer = undefined;\n        }\n\n        if (element) {\n            this._transactions.beginTransaction(StateTransaction, {\n                ...GetElementTransaction.getElementData(\n                    this._tabster,\n                    element,\n                    this._win,\n                    this._ctx,\n                    ownerUId\n                ),\n                state: CrossOriginStates.Focused,\n            });\n        } else {\n            this._blurTimer = win.setTimeout(() => {\n                this._blurTimer = undefined;\n\n                if (this._ctx.focusOwner && this._ctx.focusOwner === ownerUId) {\n                    this._transactions\n                        .beginTransaction(GetElementTransaction, undefined)\n                        .then((value) => {\n                            if (!value && this._ctx.focusOwner === ownerUId) {\n                                this._transactions.beginTransaction(\n                                    StateTransaction,\n                                    {\n                                        ownerUId,\n                                        state: CrossOriginStates.Blurred,\n                                        force: false,\n                                    }\n                                );\n                            }\n                        });\n                }\n            }, 0);\n        }\n    };\n\n    private _onObserved = (\n        element: HTMLElement,\n        details: Types.ObservedElementProps\n    ): void => {\n        const d = GetElementTransaction.getElementData(\n            this._tabster,\n            element,\n            this._win,\n            this._ctx,\n            getWindowUId(this._win())\n        ) as CrossOriginStateData;\n\n        d.state = CrossOriginStates.Observed;\n        d.observedName = details.names?.[0];\n        d.observedDetails = details.details;\n\n        this._transactions.beginTransaction(StateTransaction, d);\n    };\n\n    private _outlineSetup = (props?: Partial<Types.OutlineProps>): void => {\n        this._transactions.beginTransaction(StateTransaction, {\n            state: CrossOriginStates.Outline,\n            ownerUId: getWindowUId(this._win()),\n            outline: props,\n        });\n    };\n}\n\nfunction getDeloserUID(\n    getWindow: Types.GetWindow,\n    context: CrossOriginInstanceContext,\n    deloser: Types.Deloser\n): string | undefined {\n    const deloserElement = deloser.getElement();\n\n    if (deloserElement) {\n        const uid = getElementUId(getWindow, deloserElement);\n\n        if (!context.deloserByUId[uid]) {\n            context.deloserByUId[uid] = deloser;\n        }\n\n        return uid;\n    }\n\n    return undefined;\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport { RootAPI } from \"./Root\";\nimport * as Types from \"./Types\";\nimport { FOCUSABLE_SELECTOR } from \"./Consts\";\nimport {\n    createElementTreeWalker,\n    getDummyInputContainer,\n    getLastChild,\n    getRadioButtonGroup,\n    isDisplayNone,\n    isRadio,\n    matchesSelector,\n    shouldIgnoreFocus,\n} from \"./Utils\";\nimport { dom } from \"./DOMAPI\";\n\nexport class FocusableAPI implements Types.FocusableAPI {\n    private _tabster: Types.TabsterCore;\n\n    constructor(tabster: Types.TabsterCore) {\n        this._tabster = tabster;\n    }\n\n    dispose(): void {\n        /**/\n    }\n\n    getProps(element: HTMLElement): Types.FocusableProps {\n        const tabsterOnElement = getTabsterOnElement(this._tabster, element);\n        return (tabsterOnElement && tabsterOnElement.focusable) || {};\n    }\n\n    isFocusable(\n        el: HTMLElement,\n        includeProgrammaticallyFocusable?: boolean,\n        noVisibleCheck?: boolean,\n        noAccessibleCheck?: boolean\n    ): boolean {\n        if (\n            matchesSelector(el, FOCUSABLE_SELECTOR) &&\n            (includeProgrammaticallyFocusable || el.tabIndex !== -1)\n        ) {\n            return (\n                (noVisibleCheck || this.isVisible(el)) &&\n                (noAccessibleCheck || this.isAccessible(el))\n            );\n        }\n\n        return false;\n    }\n\n    isVisible(el: HTMLElement): boolean {\n        if (!el.ownerDocument || el.nodeType !== Node.ELEMENT_NODE) {\n            return false;\n        }\n\n        if (isDisplayNone(el)) {\n            return false;\n        }\n\n        const rect = el.ownerDocument.body.getBoundingClientRect();\n\n        if (rect.width === 0 && rect.height === 0) {\n            // This might happen, for example, if our <body> is in hidden <iframe>.\n            return false;\n        }\n\n        return true;\n    }\n\n    isAccessible(el: HTMLElement): boolean {\n        for (let e: HTMLElement | null = el; e; e = dom.getParentElement(e)) {\n            const tabsterOnElement = getTabsterOnElement(this._tabster, e);\n\n            if (this._isHidden(e)) {\n                return false;\n            }\n\n            const ignoreDisabled =\n                tabsterOnElement?.focusable?.ignoreAriaDisabled;\n\n            if (!ignoreDisabled && this._isDisabled(e)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    private _isDisabled(el: HTMLElement): boolean {\n        return el.hasAttribute(\"disabled\");\n    }\n\n    private _isHidden(el: HTMLElement): boolean {\n        const attrVal = el.getAttribute(\"aria-hidden\");\n\n        if (attrVal && attrVal.toLowerCase() === \"true\") {\n            if (!this._tabster.modalizer?.isAugmented(el)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    findFirst(\n        options: Types.FindFirstProps,\n        out?: Types.FindFocusableOutputProps\n    ): HTMLElement | null | undefined {\n        return this.findElement(\n            {\n                ...options,\n            },\n            out\n        );\n    }\n\n    findLast(\n        options: Types.FindFirstProps,\n        out?: Types.FindFocusableOutputProps\n    ): HTMLElement | null | undefined {\n        return this.findElement(\n            {\n                isBackward: true,\n                ...options,\n            },\n            out\n        );\n    }\n\n    findNext(\n        options: Types.FindNextProps,\n        out?: Types.FindFocusableOutputProps\n    ): HTMLElement | null | undefined {\n        return this.findElement({ ...options }, out);\n    }\n\n    findPrev(\n        options: Types.FindNextProps,\n        out?: Types.FindFocusableOutputProps\n    ): HTMLElement | null | undefined {\n        return this.findElement({ ...options, isBackward: true }, out);\n    }\n\n    findDefault(\n        options: Types.FindDefaultProps,\n        out?: Types.FindFocusableOutputProps\n    ): HTMLElement | null {\n        return (\n            this.findElement(\n                {\n                    ...options,\n                    acceptCondition: (el) =>\n                        this.isFocusable(\n                            el,\n                            options.includeProgrammaticallyFocusable\n                        ) && !!this.getProps(el).isDefault,\n                },\n                out\n            ) || null\n        );\n    }\n\n    findAll(options: Types.FindAllProps): HTMLElement[] {\n        return this._findElements(true, options) || [];\n    }\n\n    findElement(\n        options: Types.FindFocusableProps,\n        out?: Types.FindFocusableOutputProps\n    ): HTMLElement | null | undefined {\n        const found = this._findElements(false, options, out);\n        return found ? found[0] : found;\n    }\n\n    private _findElements(\n        isFindAll: boolean,\n        options: Types.FindFocusableProps,\n        out?: Types.FindFocusableOutputProps\n    ): HTMLElement[] | null | undefined {\n        const {\n            container,\n            currentElement = null,\n            includeProgrammaticallyFocusable,\n            useActiveModalizer,\n            ignoreAccessibility,\n            modalizerId,\n            isBackward,\n            onElement,\n        } = options;\n\n        if (!out) {\n            out = {};\n        }\n\n        const elements: HTMLElement[] = [];\n\n        let { acceptCondition } = options;\n        const hasCustomCondition = !!acceptCondition;\n\n        if (!container) {\n            return null;\n        }\n\n        if (!acceptCondition) {\n            acceptCondition = (el) =>\n                this.isFocusable(\n                    el,\n                    includeProgrammaticallyFocusable,\n                    false,\n                    ignoreAccessibility\n                );\n        }\n\n        const acceptElementState: Types.FocusableAcceptElementState = {\n            container,\n            modalizerUserId:\n                modalizerId === undefined && useActiveModalizer\n                    ? this._tabster.modalizer?.activeId\n                    : modalizerId ||\n                      RootAPI.getTabsterContext(this._tabster, container)\n                          ?.modalizer?.userId,\n            from: currentElement || container,\n            isBackward,\n            isFindAll,\n            acceptCondition,\n            hasCustomCondition,\n            includeProgrammaticallyFocusable,\n            ignoreAccessibility,\n            cachedGrouppers: {},\n            cachedRadioGroups: {},\n        };\n\n        const walker = createElementTreeWalker(\n            container.ownerDocument,\n            container,\n            (node) =>\n                this._acceptElement(node as HTMLElement, acceptElementState)\n        );\n\n        if (!walker) {\n            return null;\n        }\n\n        const prepareForNextElement = (\n            shouldContinueIfNotFound?: boolean\n        ): boolean => {\n            const foundElement =\n                acceptElementState.foundElement ??\n                acceptElementState.foundBackward;\n\n            if (foundElement) {\n                elements.push(foundElement);\n            }\n\n            if (isFindAll) {\n                if (foundElement) {\n                    acceptElementState.found = false;\n                    delete acceptElementState.foundElement;\n                    delete acceptElementState.foundBackward;\n                    delete acceptElementState.fromCtx;\n                    acceptElementState.from = foundElement;\n\n                    if (onElement && !onElement(foundElement)) {\n                        return false;\n                    }\n                }\n\n                return !!(foundElement || shouldContinueIfNotFound);\n            } else {\n                if (foundElement && out) {\n                    out.uncontrolled = RootAPI.getTabsterContext(\n                        this._tabster,\n                        foundElement\n                    )?.uncontrolled;\n                }\n\n                return !!(shouldContinueIfNotFound && !foundElement);\n            }\n        };\n\n        if (!currentElement) {\n            out.outOfDOMOrder = true;\n        }\n\n        if (currentElement && dom.nodeContains(container, currentElement)) {\n            walker.currentNode = currentElement;\n        } else if (isBackward) {\n            const lastChild = getLastChild(container);\n\n            if (!lastChild) {\n                return null;\n            }\n\n            if (\n                this._acceptElement(lastChild, acceptElementState) ===\n                    NodeFilter.FILTER_ACCEPT &&\n                !prepareForNextElement(true)\n            ) {\n                if (acceptElementState.skippedFocusable) {\n                    out.outOfDOMOrder = true;\n                }\n\n                return elements;\n            }\n\n            walker.currentNode = lastChild;\n        }\n\n        do {\n            if (isBackward) {\n                walker.previousNode();\n            } else {\n                walker.nextNode();\n            }\n        } while (prepareForNextElement());\n\n        if (acceptElementState.skippedFocusable) {\n            out.outOfDOMOrder = true;\n        }\n\n        return elements.length ? elements : null;\n    }\n\n    private _acceptElement(\n        element: HTMLElement,\n        state: Types.FocusableAcceptElementState\n    ): number {\n        if (state.found) {\n            return NodeFilter.FILTER_ACCEPT;\n        }\n\n        const foundBackward = state.foundBackward;\n\n        if (\n            foundBackward &&\n            (element === foundBackward ||\n                !dom.nodeContains(foundBackward, element))\n        ) {\n            state.found = true;\n            state.foundElement = foundBackward;\n            return NodeFilter.FILTER_ACCEPT;\n        }\n\n        const container = state.container;\n\n        if (element === container) {\n            return NodeFilter.FILTER_SKIP;\n        }\n\n        if (!dom.nodeContains(container, element)) {\n            return NodeFilter.FILTER_REJECT;\n        }\n\n        if (getDummyInputContainer(element)) {\n            return NodeFilter.FILTER_REJECT;\n        }\n\n        if (dom.nodeContains(state.rejectElementsFrom, element)) {\n            return NodeFilter.FILTER_REJECT;\n        }\n\n        const ctx = (state.currentCtx = RootAPI.getTabsterContext(\n            this._tabster,\n            element\n        ));\n\n        // Tabster is opt in, if it is not managed, don't try and get do anything special\n        if (!ctx) {\n            return NodeFilter.FILTER_SKIP;\n        }\n\n        if (shouldIgnoreFocus(element)) {\n            if (this.isFocusable(element, undefined, true, true)) {\n                state.skippedFocusable = true;\n            }\n\n            return NodeFilter.FILTER_SKIP;\n        }\n\n        // We assume iframes are focusable because native tab behaviour would tab inside.\n        // But we do it only during the standard search when there is no custom accept\n        // element condition.\n        if (\n            !state.hasCustomCondition &&\n            (element.tagName === \"IFRAME\" || element.tagName === \"WEBVIEW\")\n        ) {\n            if (ctx.modalizer?.userId === this._tabster.modalizer?.activeId) {\n                state.found = true;\n                state.rejectElementsFrom = state.foundElement = element;\n\n                return NodeFilter.FILTER_ACCEPT;\n            } else {\n                return NodeFilter.FILTER_REJECT;\n            }\n        }\n\n        if (!state.ignoreAccessibility && !this.isAccessible(element)) {\n            if (this.isFocusable(element, false, true, true)) {\n                state.skippedFocusable = true;\n            }\n\n            return NodeFilter.FILTER_REJECT;\n        }\n\n        let result: number | undefined;\n\n        let fromCtx = state.fromCtx;\n\n        if (!fromCtx) {\n            fromCtx = state.fromCtx = RootAPI.getTabsterContext(\n                this._tabster,\n                state.from\n            );\n        }\n\n        const fromMover = fromCtx?.mover;\n        let groupper = ctx.groupper;\n        let mover = ctx.mover;\n\n        result = this._tabster.modalizer?.acceptElement(element, state);\n\n        if (result !== undefined) {\n            state.skippedFocusable = true;\n        }\n\n        if (result === undefined && (groupper || mover || fromMover)) {\n            const groupperElement = groupper?.getElement();\n            const fromMoverElement = fromMover?.getElement();\n            let moverElement = mover?.getElement();\n\n            if (\n                moverElement &&\n                dom.nodeContains(fromMoverElement, moverElement) &&\n                dom.nodeContains(container, fromMoverElement) &&\n                (!groupperElement ||\n                    !mover ||\n                    dom.nodeContains(fromMoverElement, groupperElement))\n            ) {\n                mover = fromMover;\n                moverElement = fromMoverElement;\n            }\n\n            if (\n                groupperElement &&\n                (groupperElement === container ||\n                    !dom.nodeContains(container, groupperElement))\n            ) {\n                groupper = undefined;\n            }\n\n            if (moverElement && !dom.nodeContains(container, moverElement)) {\n                mover = undefined;\n            }\n\n            if (groupper && mover) {\n                if (\n                    moverElement &&\n                    groupperElement &&\n                    !dom.nodeContains(groupperElement, moverElement)\n                ) {\n                    mover = undefined;\n                } else {\n                    groupper = undefined;\n                }\n            }\n\n            if (groupper) {\n                result = groupper.acceptElement(element, state);\n            }\n\n            if (mover) {\n                result = mover.acceptElement(element, state);\n            }\n        }\n\n        if (result === undefined) {\n            result = state.acceptCondition(element)\n                ? NodeFilter.FILTER_ACCEPT\n                : NodeFilter.FILTER_SKIP;\n\n            if (\n                result === NodeFilter.FILTER_SKIP &&\n                this.isFocusable(element, false, true, true)\n            ) {\n                state.skippedFocusable = true;\n            }\n        }\n\n        if (result === NodeFilter.FILTER_ACCEPT && !state.found) {\n            if (\n                !state.isFindAll &&\n                isRadio(element) &&\n                !(element as HTMLInputElement).checked\n            ) {\n                // We need to mimic the browser's behaviour to skip unchecked radio buttons.\n                const radioGroupName = (element as HTMLInputElement).name;\n                let radioGroup: Types.RadioButtonGroup | undefined =\n                    state.cachedRadioGroups[radioGroupName];\n\n                if (!radioGroup) {\n                    radioGroup = getRadioButtonGroup(element);\n\n                    if (radioGroup) {\n                        state.cachedRadioGroups[radioGroupName] = radioGroup;\n                    }\n                }\n\n                if (radioGroup?.checked && radioGroup.checked !== element) {\n                    // Currently found element is a radio button in a group that has another radio button checked.\n                    return NodeFilter.FILTER_SKIP;\n                }\n            }\n\n            if (state.isBackward) {\n                // When TreeWalker goes backwards, it visits the container first,\n                // then it goes inside. So, if the container is accepted, we remember it,\n                // but allowing the TreeWalker to check inside.\n                state.foundBackward = element;\n                result = NodeFilter.FILTER_SKIP;\n            } else {\n                state.found = true;\n                state.foundElement = element;\n            }\n        }\n\n        return result;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const Keys: {\n    Tab: \"Tab\";\n    Enter: \"Enter\";\n    Escape: \"Escape\";\n    Space: \" \";\n    PageUp: \"PageUp\";\n    PageDown: \"PageDown\";\n    End: \"End\";\n    Home: \"Home\";\n    ArrowLeft: \"ArrowLeft\";\n    ArrowUp: \"ArrowUp\";\n    ArrowRight: \"ArrowRight\";\n    ArrowDown: \"ArrowDown\";\n} = {\n    Tab: \"Tab\",\n    Enter: \"Enter\",\n    Escape: \"Escape\",\n    Space: \" \",\n    PageUp: \"PageUp\",\n    PageDown: \"PageDown\",\n    End: \"End\",\n    Home: \"Home\",\n    ArrowLeft: \"ArrowLeft\",\n    ArrowUp: \"ArrowUp\",\n    ArrowRight: \"ArrowRight\",\n    ArrowDown: \"ArrowDown\",\n};\n\nexport type Key = typeof Keys[keyof typeof Keys];\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    KEYBORG_FOCUSIN,\n    KEYBORG_FOCUSOUT,\n    KeyborgFocusInEvent,\n    KeyborgFocusOutEvent,\n    nativeFocus,\n} from \"keyborg\";\n\nimport { Keys } from \"../Keys\";\nimport { RootAPI } from \"../Root\";\nimport * as Types from \"../Types\";\nimport { AsyncFocusSources } from \"../Consts\";\nimport {\n    TabsterFocusInEvent,\n    TabsterFocusOutEvent,\n    TabsterMoveFocusEvent,\n} from \"../Events\";\nimport {\n    documentContains,\n    DummyInputManager,\n    getLastChild,\n    shouldIgnoreFocus,\n    WeakHTMLElement,\n} from \"../Utils\";\nimport { getTabsterOnElement } from \"../Instance\";\nimport { dom } from \"../DOMAPI\";\nimport { Subscribable } from \"./Subscribable\";\n\nfunction getUncontrolledCompletelyContainer(\n    tabster: Types.TabsterCore,\n    element: HTMLElement\n): HTMLElement | undefined {\n    const getParent = tabster.getParent;\n    let el: HTMLElement | null = element;\n\n    do {\n        const uncontrolledOnElement = getTabsterOnElement(\n            tabster,\n            el\n        )?.uncontrolled;\n\n        if (\n            uncontrolledOnElement &&\n            tabster.uncontrolled.isUncontrolledCompletely(\n                el,\n                !!uncontrolledOnElement.completely\n            )\n        ) {\n            return el;\n        }\n\n        el = getParent(el) as HTMLElement | null;\n    } while (el);\n\n    return undefined;\n}\n\nconst AsyncFocusIntentPriorityBySource = {\n    [AsyncFocusSources.Restorer]: 0,\n    [AsyncFocusSources.Deloser]: 1,\n    [AsyncFocusSources.EscapeGroupper]: 2,\n};\n\ninterface AsyncFocus {\n    source: Types.AsyncFocusSource;\n    callback: () => void;\n    timeout: number;\n}\n\nexport class FocusedElementState\n    extends Subscribable<HTMLElement | undefined, Types.FocusedElementDetail>\n    implements Types.FocusedElementState\n{\n    private static _lastResetElement: WeakHTMLElement | undefined;\n    private static _isTabbingTimer: number | undefined;\n    static isTabbing = false;\n\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    private _nextVal:\n        | {\n              element: WeakHTMLElement | undefined;\n              detail: Types.FocusedElementDetail;\n          }\n        | undefined;\n    private _lastVal: WeakHTMLElement | undefined;\n    private _asyncFocus?: AsyncFocus;\n\n    constructor(tabster: Types.TabsterCore, getWindow: Types.GetWindow) {\n        super();\n\n        this._tabster = tabster;\n        this._win = getWindow;\n        tabster.queueInit(this._init);\n    }\n\n    private _init = (): void => {\n        const win = this._win();\n        const doc = win.document;\n\n        // Add these event listeners as capture - we want Tabster to run before user event handlers\n        doc.addEventListener(KEYBORG_FOCUSIN, this._onFocusIn, true);\n        doc.addEventListener(KEYBORG_FOCUSOUT, this._onFocusOut, true);\n        win.addEventListener(\"keydown\", this._onKeyDown, true);\n\n        const activeElement = dom.getActiveElement(doc);\n\n        if (activeElement && activeElement !== doc.body) {\n            this._setFocusedElement(activeElement as HTMLElement);\n        }\n\n        this.subscribe(this._onChanged);\n    };\n\n    dispose(): void {\n        super.dispose();\n\n        const win = this._win();\n        const doc = win.document;\n\n        doc.removeEventListener(KEYBORG_FOCUSIN, this._onFocusIn, true);\n        doc.removeEventListener(KEYBORG_FOCUSOUT, this._onFocusOut, true);\n        win.removeEventListener(\"keydown\", this._onKeyDown, true);\n\n        this.unsubscribe(this._onChanged);\n\n        const asyncFocus = this._asyncFocus;\n        if (asyncFocus) {\n            win.clearTimeout(asyncFocus.timeout);\n            delete this._asyncFocus;\n        }\n\n        delete FocusedElementState._lastResetElement;\n\n        delete this._nextVal;\n        delete this._lastVal;\n    }\n\n    static forgetMemorized(\n        instance: Types.FocusedElementState,\n        parent: HTMLElement\n    ): void {\n        let wel = FocusedElementState._lastResetElement;\n        let el = wel && wel.get();\n        if (el && dom.nodeContains(parent, el)) {\n            delete FocusedElementState._lastResetElement;\n        }\n\n        el = (instance as FocusedElementState)._nextVal?.element?.get();\n        if (el && dom.nodeContains(parent, el)) {\n            delete (instance as FocusedElementState)._nextVal;\n        }\n\n        wel = (instance as FocusedElementState)._lastVal;\n        el = wel && wel.get();\n        if (el && dom.nodeContains(parent, el)) {\n            delete (instance as FocusedElementState)._lastVal;\n        }\n    }\n\n    getFocusedElement(): HTMLElement | undefined {\n        return this.getVal();\n    }\n\n    getLastFocusedElement(): HTMLElement | undefined {\n        let el = this._lastVal?.get();\n\n        if (!el || (el && !documentContains(el.ownerDocument, el))) {\n            this._lastVal = el = undefined;\n        }\n\n        return el;\n    }\n\n    focus(\n        element: HTMLElement,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean,\n        preventScroll?: boolean\n    ): boolean {\n        if (\n            !this._tabster.focusable.isFocusable(\n                element,\n                noFocusedProgrammaticallyFlag,\n                false,\n                noAccessibleCheck\n            )\n        ) {\n            return false;\n        }\n\n        element.focus({ preventScroll });\n\n        return true;\n    }\n\n    focusDefault(container: HTMLElement): boolean {\n        const el = this._tabster.focusable.findDefault({ container });\n\n        if (el) {\n            this._tabster.focusedElement.focus(el);\n\n            return true;\n        }\n\n        return false;\n    }\n\n    getFirstOrLastTabbable(\n        isFirst: boolean,\n        props: Pick<\n            Types.FindFocusableProps,\n            \"container\" | \"ignoreAccessibility\"\n        >\n    ): HTMLElement | undefined {\n        const { container, ignoreAccessibility } = props;\n        let toFocus: HTMLElement | null | undefined;\n\n        if (container) {\n            const ctx = RootAPI.getTabsterContext(this._tabster, container);\n\n            if (ctx) {\n                toFocus = FocusedElementState.findNextTabbable(\n                    this._tabster,\n                    ctx,\n                    container,\n                    undefined,\n                    undefined,\n                    !isFirst,\n                    ignoreAccessibility\n                )?.element;\n            }\n        }\n\n        if (toFocus && !dom.nodeContains(container, toFocus)) {\n            toFocus = undefined;\n        }\n\n        return toFocus || undefined;\n    }\n\n    private _focusFirstOrLast(\n        isFirst: boolean,\n        props: Types.FindFirstProps\n    ): boolean {\n        const toFocus = this.getFirstOrLastTabbable(isFirst, props);\n\n        if (toFocus) {\n            this.focus(toFocus, false, true);\n\n            return true;\n        }\n\n        return false;\n    }\n\n    focusFirst(props: Types.FindFirstProps): boolean {\n        return this._focusFirstOrLast(true, props);\n    }\n\n    focusLast(props: Types.FindFirstProps): boolean {\n        return this._focusFirstOrLast(false, props);\n    }\n\n    resetFocus(container: HTMLElement): boolean {\n        if (!this._tabster.focusable.isVisible(container)) {\n            return false;\n        }\n\n        if (!this._tabster.focusable.isFocusable(container, true, true, true)) {\n            const prevTabIndex = container.getAttribute(\"tabindex\");\n            const prevAriaHidden = container.getAttribute(\"aria-hidden\");\n\n            container.tabIndex = -1;\n            container.setAttribute(\"aria-hidden\", \"true\");\n\n            FocusedElementState._lastResetElement = new WeakHTMLElement(\n                this._win,\n                container\n            );\n\n            this.focus(container, true, true);\n\n            this._setOrRemoveAttribute(container, \"tabindex\", prevTabIndex);\n            this._setOrRemoveAttribute(\n                container,\n                \"aria-hidden\",\n                prevAriaHidden\n            );\n        } else {\n            this.focus(container);\n        }\n\n        return true;\n    }\n\n    requestAsyncFocus(\n        source: Types.AsyncFocusSource,\n        callback: () => void,\n        delay: number\n    ): void {\n        const win = this._tabster.getWindow();\n        const currentAsyncFocus = this._asyncFocus;\n\n        if (currentAsyncFocus) {\n            if (\n                AsyncFocusIntentPriorityBySource[source] >\n                AsyncFocusIntentPriorityBySource[currentAsyncFocus.source]\n            ) {\n                // Previously registered intent has higher priority.\n                return;\n            }\n\n            // New intent has higher priority.\n            win.clearTimeout(currentAsyncFocus.timeout);\n        }\n\n        this._asyncFocus = {\n            source,\n            callback,\n            timeout: win.setTimeout(() => {\n                this._asyncFocus = undefined;\n                callback();\n            }, delay),\n        };\n    }\n\n    cancelAsyncFocus(source: Types.AsyncFocusSource): void {\n        const asyncFocus = this._asyncFocus;\n\n        if (asyncFocus?.source === source) {\n            this._tabster.getWindow().clearTimeout(asyncFocus.timeout);\n            this._asyncFocus = undefined;\n        }\n    }\n\n    private _setOrRemoveAttribute(\n        element: HTMLElement,\n        name: string,\n        value: string | null\n    ): void {\n        if (value === null) {\n            element.removeAttribute(name);\n        } else {\n            element.setAttribute(name, value);\n        }\n    }\n\n    private _setFocusedElement(\n        element?: HTMLElement,\n        relatedTarget?: HTMLElement,\n        isFocusedProgrammatically?: boolean\n    ): void {\n        if (this._tabster._noop) {\n            return;\n        }\n\n        const detail: Types.FocusedElementDetail = { relatedTarget };\n\n        if (element) {\n            const lastResetElement =\n                FocusedElementState._lastResetElement?.get();\n            FocusedElementState._lastResetElement = undefined;\n\n            if (lastResetElement === element || shouldIgnoreFocus(element)) {\n                return;\n            }\n\n            detail.isFocusedProgrammatically = isFocusedProgrammatically;\n\n            const ctx = RootAPI.getTabsterContext(this._tabster, element);\n\n            const modalizerId = ctx?.modalizer?.userId;\n\n            if (modalizerId) {\n                detail.modalizerId = modalizerId;\n            }\n        }\n\n        const nextVal = (this._nextVal = {\n            element: element\n                ? new WeakHTMLElement(this._win, element)\n                : undefined,\n            detail,\n        });\n\n        if (element && element !== this._val) {\n            this._validateFocusedElement(element);\n        }\n\n        // _validateFocusedElement() might cause the refocus which will trigger\n        // another call to this function. Making sure that the value is correct.\n        if (this._nextVal === nextVal) {\n            this.setVal(element, detail);\n        }\n\n        this._nextVal = undefined;\n    }\n\n    protected setVal(\n        val: HTMLElement | undefined,\n        detail: Types.FocusedElementDetail\n    ): void {\n        super.setVal(val, detail);\n\n        if (val) {\n            this._lastVal = new WeakHTMLElement(this._win, val);\n        }\n    }\n\n    private _onFocusIn = (e: KeyborgFocusInEvent): void => {\n        const target = e.composedPath()[0] as HTMLElement;\n\n        if (target) {\n            this._setFocusedElement(\n                target,\n                e.detail.relatedTarget as HTMLElement | undefined,\n                e.detail.isFocusedProgrammatically\n            );\n        }\n    };\n\n    private _onFocusOut = (e: KeyborgFocusOutEvent): void => {\n        this._setFocusedElement(\n            undefined,\n            e.detail?.originalEvent.relatedTarget as HTMLElement | undefined\n        );\n    };\n\n    static findNextTabbable(\n        tabster: Types.TabsterCore,\n        ctx: Types.TabsterContext,\n        container?: HTMLElement,\n        currentElement?: HTMLElement,\n        referenceElement?: HTMLElement,\n        isBackward?: boolean,\n        ignoreAccessibility?: boolean\n    ): Types.NextTabbable | null {\n        const actualContainer = container || ctx.root.getElement();\n\n        if (!actualContainer) {\n            return null;\n        }\n\n        let next: Types.NextTabbable | null = null;\n\n        const isTabbingTimer = FocusedElementState._isTabbingTimer;\n        const win = tabster.getWindow();\n\n        if (isTabbingTimer) {\n            win.clearTimeout(isTabbingTimer);\n        }\n\n        FocusedElementState.isTabbing = true;\n        FocusedElementState._isTabbingTimer = win.setTimeout(() => {\n            delete FocusedElementState._isTabbingTimer;\n            FocusedElementState.isTabbing = false;\n        }, 0);\n\n        const modalizer = ctx.modalizer;\n        const groupper = ctx.groupper;\n        const mover = ctx.mover;\n\n        const callFindNext = (\n            what: Types.Groupper | Types.Mover | Types.Modalizer\n        ) => {\n            next = what.findNextTabbable(\n                currentElement,\n                referenceElement,\n                isBackward,\n                ignoreAccessibility\n            );\n\n            if (currentElement && !next?.element) {\n                const parentElement =\n                    what !== modalizer &&\n                    dom.getParentElement(what.getElement());\n\n                if (parentElement) {\n                    const parentCtx = RootAPI.getTabsterContext(\n                        tabster,\n                        currentElement,\n                        { referenceElement: parentElement }\n                    );\n\n                    if (parentCtx) {\n                        const currentScopeElement = what.getElement();\n                        const newCurrent = isBackward\n                            ? currentScopeElement\n                            : (currentScopeElement &&\n                                  getLastChild(currentScopeElement)) ||\n                              currentScopeElement;\n\n                        if (newCurrent) {\n                            next = FocusedElementState.findNextTabbable(\n                                tabster,\n                                parentCtx,\n                                container,\n                                newCurrent,\n                                parentElement,\n                                isBackward,\n                                ignoreAccessibility\n                            );\n\n                            if (next) {\n                                next.outOfDOMOrder = true;\n                            }\n                        }\n                    }\n                }\n            }\n        };\n\n        if (groupper && mover) {\n            callFindNext(ctx.groupperBeforeMover ? groupper : mover);\n        } else if (groupper) {\n            callFindNext(groupper);\n        } else if (mover) {\n            callFindNext(mover);\n        } else if (modalizer) {\n            callFindNext(modalizer);\n        } else {\n            const findProps: Types.FindNextProps = {\n                container: actualContainer,\n                currentElement,\n                referenceElement,\n                ignoreAccessibility,\n                useActiveModalizer: true,\n            };\n\n            const findPropsOut: Types.FindFocusableOutputProps = {};\n\n            const nextElement = tabster.focusable[\n                isBackward ? \"findPrev\" : \"findNext\"\n            ](findProps, findPropsOut);\n\n            next = {\n                element: nextElement,\n                outOfDOMOrder: findPropsOut.outOfDOMOrder,\n                uncontrolled: findPropsOut.uncontrolled,\n            };\n        }\n\n        return next;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    private _validateFocusedElement = (element: HTMLElement): void => {\n        // TODO: Make sure this is not needed anymore and write tests.\n    };\n\n    private _onKeyDown = (event: KeyboardEvent): void => {\n        if (event.key !== Keys.Tab || event.ctrlKey) {\n            return;\n        }\n\n        const currentElement = this.getVal();\n\n        if (\n            !currentElement ||\n            !currentElement.ownerDocument ||\n            currentElement.contentEditable === \"true\"\n        ) {\n            return;\n        }\n\n        const tabster = this._tabster;\n        const controlTab = tabster.controlTab;\n        const ctx = RootAPI.getTabsterContext(tabster, currentElement);\n\n        if (!ctx || ctx.ignoreKeydown(event)) {\n            return;\n        }\n\n        const isBackward = event.shiftKey;\n\n        const next = FocusedElementState.findNextTabbable(\n            tabster,\n            ctx,\n            undefined,\n            currentElement,\n            undefined,\n            isBackward,\n            true\n        );\n\n        const rootElement = ctx.root.getElement();\n\n        if (!rootElement) {\n            return;\n        }\n\n        const nextElement = next?.element;\n        const uncontrolledCompletelyContainer =\n            getUncontrolledCompletelyContainer(tabster, currentElement);\n\n        if (nextElement) {\n            const nextUncontrolled = next.uncontrolled;\n\n            if (\n                ctx.uncontrolled ||\n                dom.nodeContains(nextUncontrolled, currentElement)\n            ) {\n                if (\n                    (!next.outOfDOMOrder &&\n                        nextUncontrolled === ctx.uncontrolled) ||\n                    (uncontrolledCompletelyContainer &&\n                        !dom.nodeContains(\n                            uncontrolledCompletelyContainer,\n                            nextElement\n                        ))\n                ) {\n                    // Nothing to do, everything will be done by the browser or something\n                    // that controls the uncontrolled area.\n                    return;\n                }\n\n                // We are in uncontrolled area. We allow whatever controls it to move\n                // focus, but we add a phantom dummy to make sure the focus is moved\n                // to the correct place if the uncontrolled area allows default action.\n                // We only need that in the controlled mode, because in uncontrolled\n                // mode we have dummy inputs around everything that redirects focus.\n                DummyInputManager.addPhantomDummyWithTarget(\n                    tabster,\n                    currentElement,\n                    isBackward,\n                    nextElement\n                );\n\n                return;\n            }\n\n            if (nextUncontrolled || nextElement.tagName === \"IFRAME\") {\n                // For iframes and uncontrolled areas we always want to use default action to\n                // move focus into.\n                if (\n                    rootElement.dispatchEvent(\n                        new TabsterMoveFocusEvent({\n                            by: \"root\",\n                            owner: rootElement,\n                            next: nextElement,\n                            relatedEvent: event,\n                        })\n                    )\n                ) {\n                    DummyInputManager.moveWithPhantomDummy(\n                        this._tabster,\n                        nextUncontrolled ?? nextElement,\n                        false,\n                        isBackward,\n                        event\n                    );\n                }\n\n                return;\n            }\n\n            if (controlTab || next?.outOfDOMOrder) {\n                if (\n                    rootElement.dispatchEvent(\n                        new TabsterMoveFocusEvent({\n                            by: \"root\",\n                            owner: rootElement,\n                            next: nextElement,\n                            relatedEvent: event,\n                        })\n                    )\n                ) {\n                    event.preventDefault();\n                    event.stopImmediatePropagation();\n\n                    nativeFocus(nextElement);\n                }\n            } else {\n                // We are in uncontrolled mode and the next element is in DOM order.\n                // Just allow the default action.\n            }\n        } else {\n            if (\n                !uncontrolledCompletelyContainer &&\n                rootElement.dispatchEvent(\n                    new TabsterMoveFocusEvent({\n                        by: \"root\",\n                        owner: rootElement,\n                        next: null,\n                        relatedEvent: event,\n                    })\n                )\n            ) {\n                ctx.root.moveOutWithDefaultAction(isBackward, event);\n            }\n        }\n    };\n\n    _onChanged = (\n        element: HTMLElement | undefined,\n        detail: Types.FocusedElementDetail\n    ): void => {\n        if (element) {\n            element.dispatchEvent(new TabsterFocusInEvent(detail));\n        } else {\n            const last = this._lastVal?.get();\n\n            if (last) {\n                const d = { ...detail };\n                const lastCtx = RootAPI.getTabsterContext(this._tabster, last);\n                const modalizerId = lastCtx?.modalizer?.userId;\n\n                if (modalizerId) {\n                    d.modalizerId = modalizerId;\n                }\n\n                last.dispatchEvent(new TabsterFocusOutEvent(d));\n            }\n        }\n    };\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { nativeFocus } from \"keyborg\";\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport { Keys } from \"./Keys\";\nimport { RootAPI } from \"./Root\";\nimport * as Types from \"./Types\";\nimport {\n    AsyncFocusSources,\n    GroupperMoveFocusActions,\n    GroupperTabbabilities,\n} from \"./Consts\";\nimport {\n    GroupperMoveFocusEvent,\n    GroupperMoveFocusEventName,\n    TabsterMoveFocusEvent,\n} from \"./Events\";\nimport { FocusedElementState } from \"./State/FocusedElement\";\nimport {\n    DummyInput,\n    DummyInputManager,\n    DummyInputManagerPriorities,\n    getAdjacentElement,\n    getDummyInputContainer,\n    TabsterPart,\n    WeakHTMLElement,\n} from \"./Utils\";\nimport { dom } from \"./DOMAPI\";\n\nclass GroupperDummyManager extends DummyInputManager {\n    constructor(\n        element: WeakHTMLElement,\n        groupper: Groupper,\n        tabster: Types.TabsterCore,\n        sys: Types.SysProps | undefined\n    ) {\n        super(\n            tabster,\n            element,\n            DummyInputManagerPriorities.Groupper,\n            sys,\n            true\n        );\n\n        this._setHandlers(\n            (\n                dummyInput: DummyInput,\n                isBackward: boolean,\n                relatedTarget: HTMLElement | null\n            ) => {\n                const container = element.get();\n                const input = dummyInput.input;\n\n                if (container && input) {\n                    const ctx = RootAPI.getTabsterContext(tabster, input);\n\n                    if (ctx) {\n                        let next: HTMLElement | null | undefined;\n\n                        next = groupper.findNextTabbable(\n                            relatedTarget || undefined,\n                            undefined,\n                            isBackward,\n                            true\n                        )?.element;\n\n                        if (!next) {\n                            next = FocusedElementState.findNextTabbable(\n                                tabster,\n                                ctx,\n                                undefined,\n                                dummyInput.isOutside\n                                    ? input\n                                    : getAdjacentElement(\n                                          container,\n                                          !isBackward\n                                      ),\n                                undefined,\n                                isBackward,\n                                true\n                            )?.element;\n                        }\n\n                        if (next) {\n                            nativeFocus(next);\n                        }\n                    }\n                }\n            }\n        );\n    }\n}\n\nexport class Groupper\n    extends TabsterPart<Types.GroupperProps>\n    implements Types.Groupper\n{\n    private _shouldTabInside = false;\n    private _first: WeakHTMLElement | undefined;\n    private _onDispose: (groupper: Groupper) => void;\n\n    dummyManager: GroupperDummyManager | undefined;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        onDispose: (groupper: Groupper) => void,\n        props: Types.GroupperProps,\n        sys: Types.SysProps | undefined\n    ) {\n        super(tabster, element, props);\n        this.makeTabbable(false);\n\n        this._onDispose = onDispose;\n\n        if (!tabster.controlTab) {\n            this.dummyManager = new GroupperDummyManager(\n                this._element,\n                this,\n                tabster,\n                sys\n            );\n        }\n    }\n\n    dispose(): void {\n        this._onDispose(this);\n\n        const element = this._element.get();\n        this.dummyManager?.dispose();\n        delete this.dummyManager;\n\n        if (element) {\n            if (__DEV__) {\n                _setInformativeStyle(this._element, true);\n            }\n        }\n\n        delete this._first;\n    }\n\n    findNextTabbable(\n        currentElement?: HTMLElement,\n        referenceElement?: HTMLElement,\n        isBackward?: boolean,\n        ignoreAccessibility?: boolean\n    ): Types.NextTabbable | null {\n        const groupperElement = this.getElement();\n\n        if (!groupperElement) {\n            return null;\n        }\n\n        const currentIsDummy =\n            getDummyInputContainer(currentElement) === groupperElement;\n\n        if (\n            !this._shouldTabInside &&\n            currentElement &&\n            dom.nodeContains(groupperElement, currentElement) &&\n            !currentIsDummy\n        ) {\n            return { element: undefined, outOfDOMOrder: true };\n        }\n\n        const groupperFirstFocusable = this.getFirst(true);\n\n        if (\n            !currentElement ||\n            !dom.nodeContains(groupperElement, currentElement) ||\n            currentIsDummy\n        ) {\n            return {\n                element: groupperFirstFocusable,\n                outOfDOMOrder: true,\n            };\n        }\n\n        const tabster = this._tabster;\n        let next: HTMLElement | null | undefined = null;\n        let outOfDOMOrder = false;\n        let uncontrolled: HTMLElement | null | undefined;\n\n        if (this._shouldTabInside && groupperFirstFocusable) {\n            const findProps: Types.FindNextProps = {\n                container: groupperElement,\n                currentElement,\n                referenceElement,\n                ignoreAccessibility,\n                useActiveModalizer: true,\n            };\n\n            const findPropsOut: Types.FindFocusableOutputProps = {};\n\n            next = tabster.focusable[isBackward ? \"findPrev\" : \"findNext\"](\n                findProps,\n                findPropsOut\n            );\n\n            outOfDOMOrder = !!findPropsOut.outOfDOMOrder;\n\n            if (\n                !next &&\n                this._props.tabbability ===\n                    GroupperTabbabilities.LimitedTrapFocus\n            ) {\n                next = tabster.focusable[isBackward ? \"findLast\" : \"findFirst\"](\n                    {\n                        container: groupperElement,\n                        ignoreAccessibility,\n                        useActiveModalizer: true,\n                    },\n                    findPropsOut\n                );\n\n                outOfDOMOrder = true;\n            }\n\n            uncontrolled = findPropsOut.uncontrolled;\n        }\n\n        return {\n            element: next,\n            uncontrolled,\n            outOfDOMOrder,\n        };\n    }\n\n    makeTabbable(isTabbable: boolean): void {\n        this._shouldTabInside = isTabbable || !this._props.tabbability;\n\n        if (__DEV__) {\n            _setInformativeStyle(this._element, !this._shouldTabInside);\n        }\n    }\n\n    isActive(noIfFirstIsFocused?: boolean): boolean | undefined {\n        const element = this.getElement() || null;\n        let isParentActive = true;\n\n        for (\n            let e = dom.getParentElement(element);\n            e;\n            e = dom.getParentElement(e)\n        ) {\n            const g = getTabsterOnElement(this._tabster, e)?.groupper as\n                | Groupper\n                | undefined;\n\n            if (g) {\n                if (!g._shouldTabInside) {\n                    isParentActive = false;\n                }\n            }\n        }\n\n        let ret = isParentActive\n            ? this._props.tabbability\n                ? this._shouldTabInside\n                : false\n            : undefined;\n\n        if (ret && noIfFirstIsFocused) {\n            const focused = this._tabster.focusedElement.getFocusedElement();\n\n            if (focused) {\n                ret = focused !== this.getFirst(true);\n            }\n        }\n\n        return ret;\n    }\n\n    getFirst(orContainer: boolean): HTMLElement | undefined {\n        const groupperElement = this.getElement();\n        let first: HTMLElement | undefined;\n\n        if (groupperElement) {\n            if (\n                orContainer &&\n                this._tabster.focusable.isFocusable(groupperElement)\n            ) {\n                return groupperElement;\n            }\n\n            first = this._first?.get();\n\n            if (!first) {\n                first =\n                    this._tabster.focusable.findFirst({\n                        container: groupperElement,\n                        useActiveModalizer: true,\n                    }) || undefined;\n\n                if (first) {\n                    this.setFirst(first);\n                }\n            }\n        }\n\n        return first;\n    }\n\n    setFirst(element: HTMLElement | undefined): void {\n        if (element) {\n            this._first = new WeakHTMLElement(this._tabster.getWindow, element);\n        } else {\n            delete this._first;\n        }\n    }\n\n    acceptElement(\n        element: HTMLElement,\n        state: Types.FocusableAcceptElementState\n    ): number | undefined {\n        const cachedGrouppers = state.cachedGrouppers;\n\n        const parentElement = dom.getParentElement(this.getElement());\n        const parentCtx =\n            parentElement &&\n            RootAPI.getTabsterContext(this._tabster, parentElement);\n        const parentCtxGroupper = parentCtx?.groupper;\n        const parentGroupper = parentCtx?.groupperBeforeMover\n            ? parentCtxGroupper\n            : undefined;\n        let parentGroupperElement: HTMLElement | undefined;\n\n        const getIsActive = (groupper: Types.Groupper) => {\n            let cached = cachedGrouppers[groupper.id];\n            let isActive: boolean | undefined;\n\n            if (cached) {\n                isActive = cached.isActive;\n            } else {\n                isActive = this.isActive(true);\n\n                cached = cachedGrouppers[groupper.id] = {\n                    isActive,\n                };\n            }\n\n            return isActive;\n        };\n\n        if (parentGroupper) {\n            parentGroupperElement = parentGroupper.getElement();\n\n            if (\n                !getIsActive(parentGroupper) &&\n                parentGroupperElement &&\n                state.container !== parentGroupperElement &&\n                dom.nodeContains(state.container, parentGroupperElement)\n            ) {\n                // Do not fall into a child groupper of inactive parent groupper if it's in the scope of the search.\n                state.skippedFocusable = true;\n                return NodeFilter.FILTER_REJECT;\n            }\n        }\n\n        const isActive = getIsActive(this);\n        const groupperElement = this.getElement();\n\n        if (groupperElement) {\n            if (isActive !== true) {\n                if (groupperElement === element && parentCtxGroupper) {\n                    if (!parentGroupperElement) {\n                        parentGroupperElement = parentCtxGroupper.getElement();\n                    }\n\n                    if (\n                        parentGroupperElement &&\n                        !getIsActive(parentCtxGroupper) &&\n                        dom.nodeContains(\n                            state.container,\n                            parentGroupperElement\n                        ) &&\n                        parentGroupperElement !== state.container\n                    ) {\n                        state.skippedFocusable = true;\n                        return NodeFilter.FILTER_REJECT;\n                    }\n                }\n\n                if (\n                    groupperElement !== element &&\n                    dom.nodeContains(groupperElement, element)\n                ) {\n                    state.skippedFocusable = true;\n                    return NodeFilter.FILTER_REJECT;\n                }\n\n                const cached = cachedGrouppers[this.id];\n                let first: HTMLElement | null | undefined;\n\n                if (\"first\" in cached) {\n                    first = cached.first;\n                } else {\n                    first = cached.first = this.getFirst(true);\n                }\n\n                if (first && state.acceptCondition(first)) {\n                    state.rejectElementsFrom = groupperElement;\n                    state.skippedFocusable = true;\n\n                    if (first !== state.from) {\n                        state.found = true;\n                        state.foundElement = first;\n                        return NodeFilter.FILTER_ACCEPT;\n                    } else {\n                        return NodeFilter.FILTER_REJECT;\n                    }\n                }\n            }\n        }\n\n        return undefined;\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction validateGroupperProps(props: Types.GroupperProps): void {\n    // TODO: Implement validation.\n}\n\nexport class GroupperAPI implements Types.GroupperAPI {\n    private _tabster: Types.TabsterCore;\n    private _updateTimer: number | undefined;\n    private _win: Types.GetWindow;\n    private _current: Record<string, Types.Groupper> = {};\n    private _grouppers: Record<string, Types.Groupper> = {};\n\n    constructor(tabster: Types.TabsterCore, getWindow: Types.GetWindow) {\n        this._tabster = tabster;\n        this._win = getWindow;\n        tabster.queueInit(this._init);\n    }\n\n    private _init = (): void => {\n        const win = this._win();\n\n        // Making sure groupper's onFocus is called before modalizer's onFocus.\n        this._tabster.focusedElement.subscribeFirst(this._onFocus);\n\n        const doc = win.document;\n\n        const activeElement = dom.getActiveElement(doc);\n\n        if (activeElement) {\n            this._onFocus(activeElement as HTMLElement);\n        }\n\n        doc.addEventListener(\"mousedown\", this._onMouseDown, true);\n        win.addEventListener(\"keydown\", this._onKeyDown, true);\n        win.addEventListener(GroupperMoveFocusEventName, this._onMoveFocus);\n    };\n\n    dispose(): void {\n        const win = this._win();\n\n        this._tabster.focusedElement.cancelAsyncFocus(\n            AsyncFocusSources.EscapeGroupper\n        );\n\n        this._current = {};\n\n        if (this._updateTimer) {\n            win.clearTimeout(this._updateTimer);\n            delete this._updateTimer;\n        }\n\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n\n        win.document.removeEventListener(\"mousedown\", this._onMouseDown, true);\n        win.removeEventListener(\"keydown\", this._onKeyDown, true);\n        win.removeEventListener(GroupperMoveFocusEventName, this._onMoveFocus);\n\n        Object.keys(this._grouppers).forEach((groupperId) => {\n            if (this._grouppers[groupperId]) {\n                this._grouppers[groupperId].dispose();\n                delete this._grouppers[groupperId];\n            }\n        });\n    }\n\n    createGroupper(\n        element: HTMLElement,\n        props: Types.GroupperProps,\n        sys: Types.SysProps | undefined\n    ) {\n        if (__DEV__) {\n            validateGroupperProps(props);\n        }\n\n        const newGroupper = new Groupper(\n            this._tabster,\n            element,\n            this._onGroupperDispose,\n            props,\n            sys\n        );\n\n        this._grouppers[newGroupper.id] = newGroupper;\n\n        const focusedElement = this._tabster.focusedElement.getFocusedElement();\n\n        // Newly created groupper contains currently focused element, update the state on the next tick (to\n        // make sure all grouppers are processed).\n        if (\n            focusedElement &&\n            dom.nodeContains(element, focusedElement) &&\n            !this._updateTimer\n        ) {\n            this._updateTimer = this._win().setTimeout(() => {\n                delete this._updateTimer;\n                // Making sure the focused element hasn't changed.\n                if (\n                    focusedElement ===\n                    this._tabster.focusedElement.getFocusedElement()\n                ) {\n                    this._updateCurrent(focusedElement, true, true);\n                }\n            }, 0);\n        }\n\n        return newGroupper;\n    }\n\n    forgetCurrentGrouppers(): void {\n        this._current = {};\n    }\n\n    private _onGroupperDispose = (groupper: Groupper) => {\n        delete this._grouppers[groupper.id];\n    };\n\n    private _onFocus = (element: HTMLElement | undefined): void => {\n        if (element) {\n            this._updateCurrent(element, true, true);\n        }\n    };\n\n    private _onMouseDown = (e: MouseEvent): void => {\n        if (e.target) {\n            this._updateCurrent(e.target as HTMLElement, true);\n        }\n    };\n\n    private _updateCurrent(\n        element: HTMLElement,\n        includeTarget?: boolean,\n        checkTarget?: boolean\n    ): void {\n        if (this._updateTimer) {\n            this._win().clearTimeout(this._updateTimer);\n            delete this._updateTimer;\n        }\n\n        const newIds: Record<string, true> = {};\n\n        let isTarget = true;\n\n        for (\n            let el = element as HTMLElement | null;\n            el;\n            el = dom.getParentElement(el)\n        ) {\n            const groupper = getTabsterOnElement(this._tabster, el)?.groupper;\n\n            if (groupper) {\n                newIds[groupper.id] = true;\n\n                if (isTarget && checkTarget && el !== element) {\n                    isTarget = false;\n                }\n\n                if (includeTarget || !isTarget) {\n                    this._current[groupper.id] = groupper;\n                    const isTabbable =\n                        groupper.isActive() ||\n                        (element !== el &&\n                            (!groupper.getProps().delegated ||\n                                groupper.getFirst(false) !== element));\n\n                    groupper.makeTabbable(isTabbable);\n                }\n\n                isTarget = false;\n            }\n        }\n\n        for (const id of Object.keys(this._current)) {\n            const groupper = this._current[id];\n\n            if (!(groupper.id in newIds)) {\n                groupper.makeTabbable(false);\n                groupper.setFirst(undefined);\n                delete this._current[id];\n            }\n        }\n    }\n\n    private _onKeyDown = (event: KeyboardEvent): void => {\n        if (event.key !== Keys.Enter && event.key !== Keys.Escape) {\n            return;\n        }\n\n        // Give a chance to other listeners to handle the event.\n        if (event.ctrlKey || event.altKey || event.shiftKey || event.metaKey) {\n            return;\n        }\n\n        const element = this._tabster.focusedElement.getFocusedElement();\n\n        if (element) {\n            this.handleKeyPress(element, event);\n        }\n    };\n\n    private _onMoveFocus = (e: GroupperMoveFocusEvent): void => {\n        const element = e.composedPath()[0] as HTMLElement | null | undefined;\n        const action = e.detail?.action;\n\n        if (element && action !== undefined && !e.defaultPrevented) {\n            if (action === GroupperMoveFocusActions.Enter) {\n                this._enterGroupper(element);\n            } else {\n                this._escapeGroupper(element);\n            }\n\n            e.stopImmediatePropagation();\n        }\n    };\n\n    private _enterGroupper(\n        element: HTMLElement,\n        relatedEvent?: KeyboardEvent\n    ): HTMLElement | null {\n        const tabster = this._tabster;\n        const ctx = RootAPI.getTabsterContext(tabster, element);\n        const groupper = ctx?.groupper || ctx?.modalizerInGroupper;\n        const groupperElement = groupper?.getElement();\n\n        if (\n            groupper &&\n            groupperElement &&\n            (element === groupperElement ||\n                (groupper.getProps().delegated &&\n                    element === groupper.getFirst(false)))\n        ) {\n            const next = tabster.focusable.findNext({\n                container: groupperElement,\n                currentElement: element,\n                useActiveModalizer: true,\n            });\n\n            if (\n                next &&\n                (!relatedEvent ||\n                    (relatedEvent &&\n                        groupperElement.dispatchEvent(\n                            new TabsterMoveFocusEvent({\n                                by: \"groupper\",\n                                owner: groupperElement,\n                                next,\n                                relatedEvent,\n                            })\n                        )))\n            ) {\n                if (relatedEvent) {\n                    // When the application hasn't prevented default,\n                    // we consider the event completely handled, hence we\n                    // prevent the initial event's default action and stop\n                    // propagation.\n                    relatedEvent.preventDefault();\n                    relatedEvent.stopImmediatePropagation();\n                }\n\n                next.focus();\n\n                return next;\n            }\n        }\n\n        return null;\n    }\n\n    private _escapeGroupper(\n        element: HTMLElement,\n        relatedEvent?: KeyboardEvent,\n        fromModalizer?: boolean\n    ): HTMLElement | null {\n        const tabster = this._tabster;\n        const ctx = RootAPI.getTabsterContext(tabster, element);\n        const modalizerInGroupper = ctx?.modalizerInGroupper;\n        let groupper = ctx?.groupper || modalizerInGroupper;\n        const groupperElement = groupper?.getElement();\n\n        if (\n            groupper &&\n            groupperElement &&\n            dom.nodeContains(groupperElement, element)\n        ) {\n            let next: HTMLElement | null | undefined;\n\n            if (element !== groupperElement || fromModalizer) {\n                next = groupper.getFirst(true);\n            } else {\n                const parentElement = dom.getParentElement(groupperElement);\n                const parentCtx = parentElement\n                    ? RootAPI.getTabsterContext(tabster, parentElement)\n                    : undefined;\n\n                groupper = parentCtx?.groupper;\n                next = groupper?.getFirst(true);\n            }\n\n            if (\n                next &&\n                (!relatedEvent ||\n                    (relatedEvent &&\n                        groupperElement.dispatchEvent(\n                            new TabsterMoveFocusEvent({\n                                by: \"groupper\",\n                                owner: groupperElement,\n                                next,\n                                relatedEvent,\n                            })\n                        )))\n            ) {\n                if (groupper) {\n                    groupper.makeTabbable(false);\n\n                    if (modalizerInGroupper) {\n                        tabster.modalizer?.setActive(undefined);\n                    }\n                }\n\n                // This part happens asynchronously inside setTimeout,\n                // so no need to prevent default or stop propagation.\n                next.focus();\n\n                return next;\n            }\n        }\n\n        return null;\n    }\n\n    moveFocus(\n        element: HTMLElement,\n        action: Types.GroupperMoveFocusAction\n    ): HTMLElement | null {\n        return action === GroupperMoveFocusActions.Enter\n            ? this._enterGroupper(element)\n            : this._escapeGroupper(element);\n    }\n\n    handleKeyPress(\n        element: HTMLElement,\n        event: KeyboardEvent,\n        fromModalizer?: boolean\n    ): void {\n        const tabster = this._tabster;\n        const ctx = RootAPI.getTabsterContext(tabster, element);\n\n        if (ctx && (ctx?.groupper || ctx?.modalizerInGroupper)) {\n            tabster.focusedElement.cancelAsyncFocus(\n                AsyncFocusSources.EscapeGroupper\n            );\n\n            if (ctx.ignoreKeydown(event)) {\n                return;\n            }\n\n            if (event.key === Keys.Enter) {\n                this._enterGroupper(element, event);\n            } else if (event.key === Keys.Escape) {\n                // We will handle Esc asynchronously, if something in the application will\n                // move focus during the keypress handling, we will not interfere.\n                const focusedElement =\n                    tabster.focusedElement.getFocusedElement();\n\n                tabster.focusedElement.requestAsyncFocus(\n                    AsyncFocusSources.EscapeGroupper,\n                    () => {\n                        if (\n                            focusedElement !==\n                                tabster.focusedElement.getFocusedElement() &&\n                            // A part of Modalizer that has called this handler to escape the active groupper\n                            // might have been removed from DOM, if the focus is on body, we still want to handle Esc.\n                            ((fromModalizer && !focusedElement) ||\n                                !fromModalizer)\n                        ) {\n                            // Something else in the application has moved focus, we will not handle Esc.\n                            return;\n                        }\n\n                        this._escapeGroupper(element, event, fromModalizer);\n                    },\n                    0\n                );\n            }\n        }\n    }\n}\n\nfunction _setInformativeStyle(\n    weakElement: Types.WeakHTMLElement,\n    remove: boolean\n): void {\n    if (__DEV__) {\n        const element = weakElement.get();\n\n        if (element) {\n            if (remove) {\n                element.style.removeProperty(\"--tabster-groupper\");\n            } else {\n                element.style.setProperty(\"--tabster-groupper\", \"unlimited\");\n            }\n        }\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { createKeyborg, disposeKeyborg, Keyborg } from \"keyborg\";\n\nimport * as Types from \"../Types\";\nimport { Subscribable } from \"./Subscribable\";\n\nexport class KeyboardNavigationState\n    extends Subscribable<boolean>\n    implements Types.KeyboardNavigationState\n{\n    private _keyborg?: Keyborg;\n\n    constructor(getWindow: Types.GetWindow) {\n        super();\n        this._keyborg = createKeyborg(getWindow());\n        this._keyborg.subscribe(this._onChange);\n    }\n\n    dispose(): void {\n        super.dispose();\n\n        if (this._keyborg) {\n            this._keyborg.unsubscribe(this._onChange);\n\n            disposeKeyborg(this._keyborg);\n\n            delete this._keyborg;\n        }\n    }\n\n    private _onChange = (isNavigatingWithKeyboard: boolean) => {\n        this.setVal(isNavigatingWithKeyboard, undefined);\n    };\n\n    setNavigatingWithKeyboard(isNavigatingWithKeyboard: boolean): void {\n        this._keyborg?.setVal(isNavigatingWithKeyboard);\n    }\n\n    isNavigatingWithKeyboard(): boolean {\n        return !!this._keyborg?.isNavigatingWithKeyboard();\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { nativeFocus } from \"keyborg\";\nimport { getTabsterOnElement } from \"./Instance\";\nimport { RootAPI } from \"./Root\";\nimport { FocusedElementState } from \"./State/FocusedElement\";\nimport { Keys } from \"./Keys\";\nimport * as Types from \"./Types\";\nimport { ModalizerActiveEvent, ModalizerInactiveEvent } from \"./Events\";\nimport { ModalizerEventDetail } from \"./EventsTypes\";\nimport {\n    augmentAttribute,\n    DummyInput,\n    DummyInputManager,\n    DummyInputManagerPriorities,\n    getDummyInputContainer,\n    TabsterPart,\n    WeakHTMLElement,\n} from \"./Utils\";\nimport { dom } from \"./DOMAPI\";\n\nlet _wasFocusedCounter = 0;\n\nconst _ariaHidden = \"aria-hidden\";\n\nfunction _setInformativeStyle(\n    weakElement: WeakHTMLElement,\n    remove: boolean,\n    internalId?: string,\n    userId?: string,\n    isActive?: boolean,\n    wasFocused?: number\n): void {\n    if (__DEV__) {\n        const element = weakElement.get();\n\n        if (element) {\n            if (remove) {\n                element.style.removeProperty(\"--tabster-modalizer\");\n            } else {\n                element.style.setProperty(\n                    \"--tabster-modalizer\",\n                    internalId +\n                        \",\" +\n                        userId +\n                        \",\" +\n                        (isActive ? \"active\" : \"inactive\") +\n                        \",\" +\n                        \",\" +\n                        (wasFocused ? `focused(${wasFocused})` : \"not-focused\")\n                );\n            }\n        }\n    }\n}\n\n/**\n * Manages the dummy inputs for the Modalizer.\n */\nclass ModalizerDummyManager extends DummyInputManager {\n    constructor(\n        element: WeakHTMLElement,\n        tabster: Types.TabsterCore,\n        sys: Types.SysProps | undefined\n    ) {\n        super(tabster, element, DummyInputManagerPriorities.Modalizer, sys);\n\n        this._setHandlers((dummyInput: DummyInput, isBackward: boolean) => {\n            const el = element.get();\n            const container = el && RootAPI.getRoot(tabster, el)?.getElement();\n            const input = dummyInput.input;\n            let toFocus: HTMLElement | null | undefined;\n\n            if (container && input) {\n                const dummyContainer = getDummyInputContainer(input);\n\n                const ctx = RootAPI.getTabsterContext(\n                    tabster,\n                    dummyContainer || input\n                );\n\n                if (ctx) {\n                    toFocus = FocusedElementState.findNextTabbable(\n                        tabster,\n                        ctx,\n                        container,\n                        input,\n                        undefined,\n                        isBackward,\n                        true\n                    )?.element;\n                }\n\n                if (toFocus) {\n                    nativeFocus(toFocus);\n                }\n            }\n        });\n    }\n}\n\nexport class Modalizer\n    extends TabsterPart<Types.ModalizerProps>\n    implements Types.Modalizer\n{\n    userId: string;\n\n    private _isActive: boolean | undefined;\n    private _wasFocused = 0;\n    private _onDispose: (modalizer: Modalizer) => void;\n    private _activeElements: WeakHTMLElement<HTMLElement>[];\n\n    dummyManager: ModalizerDummyManager | undefined;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        onDispose: (modalizer: Modalizer) => void,\n        props: Types.ModalizerProps,\n        sys: Types.SysProps | undefined,\n        activeElements: WeakHTMLElement<HTMLElement>[]\n    ) {\n        super(tabster, element, props);\n\n        this.userId = props.id;\n        this._onDispose = onDispose;\n        this._activeElements = activeElements;\n\n        if (!tabster.controlTab) {\n            this.dummyManager = new ModalizerDummyManager(\n                this._element,\n                tabster,\n                sys\n            );\n        }\n\n        if (__DEV__) {\n            _setInformativeStyle(\n                this._element,\n                false,\n                this.id,\n                this.userId,\n                this._isActive,\n                this._wasFocused\n            );\n        }\n    }\n\n    makeActive(isActive: boolean): void {\n        if (this._isActive !== isActive) {\n            this._isActive = isActive;\n\n            const element = this.getElement();\n\n            if (element) {\n                const activeElements = this._activeElements;\n                const index = activeElements\n                    .map((e) => e.get())\n                    .indexOf(element);\n\n                if (isActive) {\n                    if (index < 0) {\n                        activeElements.push(\n                            new WeakHTMLElement(\n                                this._tabster.getWindow,\n                                element\n                            )\n                        );\n                    }\n                } else {\n                    if (index >= 0) {\n                        activeElements.splice(index, 1);\n                    }\n                }\n            }\n\n            if (__DEV__) {\n                _setInformativeStyle(\n                    this._element,\n                    false,\n                    this.id,\n                    this.userId,\n                    this._isActive,\n                    this._wasFocused\n                );\n            }\n\n            this._dispatchEvent(isActive);\n        }\n    }\n\n    focused(noIncrement?: boolean): number {\n        if (!noIncrement) {\n            this._wasFocused = ++_wasFocusedCounter;\n        }\n\n        return this._wasFocused;\n    }\n\n    setProps(props: Types.ModalizerProps): void {\n        if (props.id) {\n            this.userId = props.id;\n        }\n\n        this._props = { ...props };\n    }\n\n    dispose(): void {\n        this.makeActive(false);\n        this._onDispose(this);\n        this.dummyManager?.dispose();\n        delete this.dummyManager;\n        this._activeElements = [];\n        this._remove();\n    }\n\n    isActive(): boolean {\n        return !!this._isActive;\n    }\n\n    contains(element: HTMLElement) {\n        return dom.nodeContains(this.getElement(), element);\n    }\n\n    findNextTabbable(\n        currentElement?: HTMLElement,\n        referenceElement?: HTMLElement,\n        isBackward?: boolean,\n        ignoreAccessibility?: boolean\n    ): Types.NextTabbable | null {\n        const modalizerElement = this.getElement();\n\n        if (!modalizerElement) {\n            return null;\n        }\n\n        const tabster = this._tabster;\n        let next: HTMLElement | null | undefined = null;\n        let outOfDOMOrder = false;\n        let uncontrolled: HTMLElement | null | undefined;\n\n        const container =\n            currentElement &&\n            RootAPI.getRoot(tabster, currentElement)?.getElement();\n\n        if (container) {\n            const findProps: Types.FindNextProps = {\n                container,\n                currentElement,\n                referenceElement,\n                ignoreAccessibility,\n                useActiveModalizer: true,\n            };\n\n            const findPropsOut: Types.FindFocusableOutputProps = {};\n\n            next = tabster.focusable[isBackward ? \"findPrev\" : \"findNext\"](\n                findProps,\n                findPropsOut\n            );\n\n            if (!next && this._props.isTrapped && tabster.modalizer?.activeId) {\n                next = tabster.focusable[isBackward ? \"findLast\" : \"findFirst\"](\n                    {\n                        container,\n                        ignoreAccessibility,\n                        useActiveModalizer: true,\n                    },\n                    findPropsOut\n                );\n\n                if (next === null) {\n                    next = currentElement;\n                }\n\n                outOfDOMOrder = true;\n            } else {\n                outOfDOMOrder = !!findPropsOut.outOfDOMOrder;\n            }\n\n            uncontrolled = findPropsOut.uncontrolled;\n        }\n\n        return {\n            element: next,\n            uncontrolled,\n            outOfDOMOrder,\n        };\n    }\n\n    private _dispatchEvent(isActive: boolean, allElements?: boolean): boolean {\n        const element = this.getElement();\n        let defaultPrevented = false;\n\n        if (element) {\n            const elements = allElements\n                ? this._activeElements.map((e) => e.get())\n                : [element];\n\n            for (const el of elements) {\n                if (el) {\n                    const eventDetail: ModalizerEventDetail = {\n                        id: this.userId,\n                        element,\n                    };\n\n                    const event = isActive\n                        ? new ModalizerActiveEvent(eventDetail)\n                        : new ModalizerInactiveEvent(eventDetail);\n\n                    el.dispatchEvent(event);\n\n                    if (event.defaultPrevented) {\n                        defaultPrevented = true;\n                    }\n                }\n            }\n        }\n\n        return defaultPrevented;\n    }\n\n    private _remove(): void {\n        if (__DEV__) {\n            _setInformativeStyle(this._element, true);\n        }\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction validateModalizerProps(props: Types.ModalizerProps): void {\n    // TODO: Implement validation.\n}\n\nexport class ModalizerAPI implements Types.ModalizerAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    private _restoreModalizerFocusTimer: number | undefined;\n    private _modalizers: Record<string, Types.Modalizer>;\n    private _parts: Record<string, Record<string, Types.Modalizer>>;\n    private _augMap: WeakMap<HTMLElement, true>;\n    private _aug: WeakHTMLElement<HTMLElement>[];\n    private _hiddenUpdateTimer: number | undefined;\n    private _alwaysAccessibleSelector: string | undefined;\n    private _accessibleCheck: Types.ModalizerElementAccessibleCheck | undefined;\n\n    activeId: string | undefined;\n    currentIsOthersAccessible: boolean | undefined;\n    activeElements: WeakHTMLElement<HTMLElement>[];\n\n    constructor(\n        tabster: Types.TabsterCore,\n        // @deprecated use accessibleCheck.\n        alwaysAccessibleSelector?: string,\n        accessibleCheck?: Types.ModalizerElementAccessibleCheck\n    ) {\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n        this._modalizers = {};\n        this._parts = {};\n        this._augMap = new WeakMap();\n        this._aug = [];\n        this._alwaysAccessibleSelector = alwaysAccessibleSelector;\n        this._accessibleCheck = accessibleCheck;\n        this.activeElements = [];\n\n        if (!tabster.controlTab) {\n            tabster.root.addDummyInputs();\n        }\n\n        const win = this._win();\n        win.addEventListener(\"keydown\", this._onKeyDown, true);\n\n        tabster.queueInit(() => {\n            this._tabster.focusedElement.subscribe(this._onFocus);\n        });\n    }\n\n    dispose(): void {\n        const win = this._win();\n\n        win.removeEventListener(\"keydown\", this._onKeyDown, true);\n\n        // Dispose all modalizers managed by the API\n        Object.keys(this._modalizers).forEach((modalizerId) => {\n            if (this._modalizers[modalizerId]) {\n                this._modalizers[modalizerId].dispose();\n                delete this._modalizers[modalizerId];\n            }\n        });\n\n        win.clearTimeout(this._restoreModalizerFocusTimer);\n        win.clearTimeout(this._hiddenUpdateTimer);\n\n        this._parts = {};\n        delete this.activeId;\n        this.activeElements = [];\n\n        this._augMap = new WeakMap();\n        this._aug = [];\n\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n    }\n\n    createModalizer(\n        element: HTMLElement,\n        props: Types.ModalizerProps,\n        sys: Types.SysProps | undefined\n    ): Types.Modalizer {\n        if (__DEV__) {\n            validateModalizerProps(props);\n        }\n\n        const modalizer = new Modalizer(\n            this._tabster,\n            element,\n            this._onModalizerDispose,\n            props,\n            sys,\n            this.activeElements\n        );\n\n        const id = modalizer.id;\n        const userId = props.id;\n\n        this._modalizers[id] = modalizer;\n\n        let part = this._parts[userId];\n        if (!part) {\n            part = this._parts[userId] = {};\n        }\n        part[id] = modalizer;\n\n        // Adding a modalizer which is already focused, activate it\n        if (\n            dom.nodeContains(\n                element,\n                this._tabster.focusedElement.getFocusedElement() ?? null\n            )\n        ) {\n            if (userId !== this.activeId) {\n                this.setActive(modalizer);\n            } else {\n                modalizer.makeActive(true);\n            }\n        }\n\n        return modalizer;\n    }\n\n    private _onModalizerDispose = (modalizer: Modalizer) => {\n        const id = modalizer.id;\n        const userId = modalizer.userId;\n        const part = this._parts[userId];\n\n        delete this._modalizers[id];\n\n        if (part) {\n            delete part[id];\n\n            if (Object.keys(part).length === 0) {\n                delete this._parts[userId];\n\n                if (this.activeId === userId) {\n                    this.setActive(undefined);\n                }\n            }\n        }\n    };\n\n    private _onKeyDown = (event: KeyboardEvent): void => {\n        if (event.key !== Keys.Escape) {\n            return;\n        }\n\n        const tabster = this._tabster;\n        const element = tabster.focusedElement.getFocusedElement();\n\n        if (element) {\n            const ctx = RootAPI.getTabsterContext(tabster, element);\n            const modalizer = ctx?.modalizer;\n\n            if (\n                ctx &&\n                !ctx.groupper &&\n                modalizer?.isActive() &&\n                !ctx.ignoreKeydown(event)\n            ) {\n                const activeId = modalizer.userId;\n\n                if (activeId) {\n                    const part = this._parts[activeId];\n\n                    if (part) {\n                        const focusedSince = Object.keys(part)\n                            .map((id) => {\n                                const m = part[id];\n                                const el = m.getElement();\n                                let groupper: Types.Groupper | undefined;\n\n                                if (el) {\n                                    groupper = getTabsterOnElement(\n                                        this._tabster,\n                                        el\n                                    )?.groupper;\n                                }\n\n                                return m && el && groupper\n                                    ? {\n                                          el,\n                                          focusedSince: m.focused(true),\n                                      }\n                                    : { focusedSince: 0 };\n                            })\n                            .filter((f) => f.focusedSince > 0)\n                            .sort((a, b) =>\n                                a.focusedSince > b.focusedSince\n                                    ? -1\n                                    : a.focusedSince < b.focusedSince\n                                    ? 1\n                                    : 0\n                            );\n\n                        if (focusedSince.length) {\n                            const groupperElement = focusedSince[0].el;\n\n                            if (groupperElement) {\n                                tabster.groupper?.handleKeyPress(\n                                    groupperElement,\n                                    event,\n                                    true\n                                );\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    isAugmented(element: HTMLElement): boolean {\n        return this._augMap.has(element);\n    }\n\n    hiddenUpdate(): void {\n        if (this._hiddenUpdateTimer) {\n            return;\n        }\n\n        this._hiddenUpdateTimer = this._win().setTimeout(() => {\n            delete this._hiddenUpdateTimer;\n            this._hiddenUpdate();\n        }, 250);\n    }\n\n    setActive(modalizer: Types.Modalizer | undefined): void {\n        const userId = modalizer?.userId;\n        const activeId = this.activeId;\n\n        if (activeId === userId) {\n            return;\n        }\n\n        this.activeId = userId;\n\n        if (activeId) {\n            const part = this._parts[activeId];\n\n            if (part) {\n                for (const id of Object.keys(part)) {\n                    part[id].makeActive(false);\n                }\n            }\n        }\n\n        if (userId) {\n            const part = this._parts[userId];\n\n            if (part) {\n                for (const id of Object.keys(part)) {\n                    part[id].makeActive(true);\n                }\n            }\n        }\n\n        this.currentIsOthersAccessible =\n            modalizer?.getProps().isOthersAccessible;\n\n        this.hiddenUpdate();\n    }\n\n    focus(\n        elementFromModalizer: HTMLElement,\n        noFocusFirst?: boolean,\n        noFocusDefault?: boolean\n    ): boolean {\n        const ctx = RootAPI.getTabsterContext(\n            this._tabster,\n            elementFromModalizer\n        );\n\n        const modalizer = ctx?.modalizer;\n\n        if (modalizer) {\n            this.setActive(modalizer);\n\n            const props = modalizer.getProps();\n            const modalizerRoot = modalizer.getElement();\n\n            if (modalizerRoot) {\n                if (noFocusFirst === undefined) {\n                    noFocusFirst = props.isNoFocusFirst;\n                }\n\n                if (\n                    !noFocusFirst &&\n                    this._tabster.keyboardNavigation.isNavigatingWithKeyboard() &&\n                    this._tabster.focusedElement.focusFirst({\n                        container: modalizerRoot,\n                    })\n                ) {\n                    return true;\n                }\n\n                if (noFocusDefault === undefined) {\n                    noFocusDefault = props.isNoFocusDefault;\n                }\n\n                if (\n                    !noFocusDefault &&\n                    this._tabster.focusedElement.focusDefault(modalizerRoot)\n                ) {\n                    return true;\n                }\n\n                this._tabster.focusedElement.resetFocus(modalizerRoot);\n            }\n        } else if (__DEV__) {\n            console.error(\"Element is not in Modalizer.\", elementFromModalizer);\n        }\n\n        return false;\n    }\n\n    acceptElement(\n        element: HTMLElement,\n        state: Types.FocusableAcceptElementState\n    ): number | undefined {\n        const modalizerUserId = state.modalizerUserId;\n        const currentModalizer = state.currentCtx?.modalizer;\n\n        if (modalizerUserId) {\n            for (const e of this.activeElements) {\n                const el = e.get();\n\n                if (el && (dom.nodeContains(element, el) || el === element)) {\n                    // We have a part of currently active modalizer somewhere deeper in the DOM,\n                    // skipping all other checks.\n                    return NodeFilter.FILTER_SKIP;\n                }\n            }\n        }\n\n        const ret =\n            modalizerUserId === currentModalizer?.userId ||\n            (!modalizerUserId &&\n                currentModalizer?.getProps().isAlwaysAccessible)\n                ? undefined\n                : NodeFilter.FILTER_SKIP;\n\n        if (ret !== undefined) {\n            state.skippedFocusable = true;\n        }\n\n        return ret;\n    }\n\n    private _hiddenUpdate(): void {\n        const tabster = this._tabster;\n        const body = tabster.getWindow().document.body;\n        const activeId = this.activeId;\n\n        const parts = this._parts;\n        const visibleElements: HTMLElement[] = [];\n        const hiddenElements: HTMLElement[] = [];\n        const alwaysAccessibleSelector = this._alwaysAccessibleSelector;\n        const alwaysAccessibleElements: HTMLElement[] = alwaysAccessibleSelector\n            ? Array.from(\n                  dom.querySelectorAll(\n                      body,\n                      alwaysAccessibleSelector\n                  ) as HTMLElement[]\n              )\n            : [];\n        const activeModalizerElements: HTMLElement[] = [];\n\n        for (const userId of Object.keys(parts)) {\n            const modalizerParts = parts[userId];\n\n            for (const id of Object.keys(modalizerParts)) {\n                const modalizer = modalizerParts[id];\n                const el = modalizer.getElement();\n                const props = modalizer.getProps();\n                const isAlwaysAccessible = props.isAlwaysAccessible;\n\n                if (el) {\n                    if (userId === activeId) {\n                        activeModalizerElements.push(el);\n\n                        if (!this.currentIsOthersAccessible) {\n                            visibleElements.push(el);\n                        }\n                    } else if (isAlwaysAccessible) {\n                        alwaysAccessibleElements.push(el);\n                    } else {\n                        hiddenElements.push(el);\n                    }\n                }\n            }\n        }\n\n        const augmentedMap = this._augMap;\n        const allVisibleElements: HTMLElement[] | undefined =\n            visibleElements.length > 0\n                ? [...visibleElements, ...alwaysAccessibleElements]\n                : undefined;\n\n        const newAugmented: WeakHTMLElement<HTMLElement>[] = [];\n        const newAugmentedMap: WeakMap<HTMLElement, true> = new WeakMap();\n\n        const toggle = (element: HTMLElement, hide: boolean) => {\n            const tagName = element.tagName;\n\n            if (tagName === \"SCRIPT\" || tagName === \"STYLE\") {\n                return;\n            }\n\n            let isAugmented = false;\n\n            if (augmentedMap.has(element)) {\n                if (hide) {\n                    isAugmented = true;\n                } else {\n                    augmentedMap.delete(element);\n                    augmentAttribute(tabster, element, _ariaHidden);\n                }\n            } else if (\n                hide &&\n                !this._accessibleCheck?.(element, activeModalizerElements) &&\n                augmentAttribute(tabster, element, _ariaHidden, \"true\")\n            ) {\n                augmentedMap.set(element, true);\n                isAugmented = true;\n            }\n\n            if (isAugmented) {\n                newAugmented.push(\n                    new WeakHTMLElement(tabster.getWindow, element)\n                );\n                newAugmentedMap.set(element, true);\n            }\n        };\n\n        const walk = (element: HTMLElement) => {\n            for (\n                let el = dom.getFirstElementChild(\n                    element\n                ) as Types.HTMLElementWithTabsterFlags | null;\n                el;\n                el = dom.getNextElementSibling(\n                    el\n                ) as Types.HTMLElementWithTabsterFlags | null\n            ) {\n                let skip = false;\n                let containsModalizer = false;\n                let containedByModalizer = false;\n\n                if (allVisibleElements) {\n                    const elParent = tabster.getParent(el);\n\n                    for (const c of allVisibleElements) {\n                        if (el === c) {\n                            skip = true;\n                            break;\n                        }\n\n                        if (dom.nodeContains(el, c)) {\n                            containsModalizer = true;\n                            break;\n                        } else if (dom.nodeContains(c, elParent)) {\n                            // tabster.getParent() could be provided by the application to\n                            // handle, for example, virtual parents. Making sure, we are\n                            // not setting aria-hidden on elements which are virtually\n                            // inside modalizer.\n                            containedByModalizer = true;\n                        }\n                    }\n\n                    if (\n                        containsModalizer ||\n                        el.__tabsterElementFlags?.noDirectAriaHidden\n                    ) {\n                        walk(el as HTMLElement);\n                    } else if (!skip && !containedByModalizer) {\n                        toggle(el as HTMLElement, true);\n                    }\n                } else {\n                    toggle(el as HTMLElement, false);\n                }\n            }\n        };\n\n        if (!allVisibleElements) {\n            alwaysAccessibleElements.forEach((e) => toggle(e, false));\n        }\n\n        hiddenElements.forEach((e) => toggle(e, true));\n\n        if (body) {\n            walk(body);\n        }\n\n        this._aug\n            ?.map((e) => e.get())\n            .forEach((e) => {\n                if (e && !newAugmentedMap.get(e)) {\n                    toggle(e, false);\n                }\n            });\n\n        this._aug = newAugmented;\n        this._augMap = newAugmentedMap;\n    }\n\n    /**\n     * Subscribes to the focus state and handles modalizer related focus events\n     * @param focusedElement - Element that is focused\n     * @param detail - Additional data about the focus event\n     */\n    private _onFocus = (\n        focusedElement: HTMLElement | undefined,\n        detail: Types.FocusedElementDetail\n    ): void => {\n        const ctx =\n            focusedElement &&\n            RootAPI.getTabsterContext(this._tabster, focusedElement);\n\n        // Modalizer behaviour is opt in, only apply to elements that have a tabster context\n        if (!ctx || !focusedElement) {\n            return;\n        }\n\n        const augmentedMap = this._augMap;\n\n        for (\n            let e: HTMLElement | null = focusedElement;\n            e;\n            e = dom.getParentElement(e)\n        ) {\n            // If the newly focused element is inside some of the hidden containers,\n            // remove aria-hidden from those synchronously for the screen readers\n            // to be able to read the element. The rest of aria-hiddens, will be removed\n            // acynchronously for the sake of performance.\n\n            if (augmentedMap.has(e)) {\n                augmentedMap.delete(e);\n                augmentAttribute(this._tabster, e, _ariaHidden);\n            }\n        }\n\n        const modalizer = ctx.modalizer;\n\n        // An inactive groupper with the modalizer on the same node will not give the modalizer\n        // in the context, yet we still want to track that the modalizer's container was focused.\n        (\n            modalizer ||\n            getTabsterOnElement(this._tabster, focusedElement)?.modalizer\n        )?.focused();\n\n        if (modalizer?.userId === this.activeId) {\n            this.currentIsOthersAccessible =\n                modalizer?.getProps().isOthersAccessible;\n\n            return;\n        }\n\n        // Developers calling `element.focus()` should change/deactivate active modalizer\n        if (\n            detail.isFocusedProgrammatically ||\n            this.currentIsOthersAccessible ||\n            modalizer?.getProps().isAlwaysAccessible\n        ) {\n            this.setActive(modalizer);\n        } else {\n            // Focused outside of the active modalizer, try pull focus back to current modalizer\n            const win = this._win();\n            win.clearTimeout(this._restoreModalizerFocusTimer);\n            // TODO some rendering frameworks (i.e. React) might async rerender the DOM so we need to wait for a duration\n            // Figure out a better way of doing this rather than a 100ms timeout\n            this._restoreModalizerFocusTimer = win.setTimeout(\n                () => this._restoreModalizerFocus(focusedElement),\n                100\n            );\n        }\n    };\n\n    /**\n     * Called when an element is focused outside of an active modalizer.\n     * Attempts to pull focus back into the active modalizer\n     * @param outsideElement - An element being focused outside of the modalizer\n     */\n    private _restoreModalizerFocus(\n        outsideElement: HTMLElement | undefined\n    ): void {\n        const ownerDocument = outsideElement?.ownerDocument;\n\n        if (!outsideElement || !ownerDocument) {\n            return;\n        }\n\n        const ctx = RootAPI.getTabsterContext(this._tabster, outsideElement);\n        const modalizer = ctx?.modalizer;\n        const activeId = this.activeId;\n\n        if (\n            (!modalizer && !activeId) ||\n            (modalizer && activeId === modalizer.userId)\n        ) {\n            return;\n        }\n\n        const container = ctx?.root.getElement();\n\n        if (container) {\n            let toFocus = this._tabster.focusable.findFirst({\n                container,\n                useActiveModalizer: true,\n            });\n\n            if (toFocus) {\n                if (\n                    outsideElement.compareDocumentPosition(toFocus) &\n                    document.DOCUMENT_POSITION_PRECEDING\n                ) {\n                    toFocus = this._tabster.focusable.findLast({\n                        container,\n                        useActiveModalizer: true,\n                    });\n\n                    if (!toFocus) {\n                        // This only might mean that findFirst/findLast are buggy and inconsistent.\n                        throw new Error(\"Something went wrong.\");\n                    }\n                }\n\n                this._tabster.focusedElement.focus(toFocus);\n\n                return;\n            }\n        }\n\n        // Current Modalizer doesn't seem to have focusable elements.\n        // Blurring the currently focused element which is outside of the current Modalizer.\n        outsideElement.blur();\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { nativeFocus } from \"keyborg\";\nimport { FocusedElementState } from \"./State/FocusedElement\";\nimport { getTabsterOnElement } from \"./Instance\";\nimport { Keys } from \"./Keys\";\nimport { RootAPI } from \"./Root\";\nimport * as Types from \"./Types\";\nimport { Visibilities, MoverDirections, MoverKeys } from \"./Consts\";\nimport {\n    MoverMemorizedElementEvent,\n    MoverMemorizedElementEventName,\n    MoverMoveFocusEvent,\n    MoverMoveFocusEventName,\n    MoverStateEvent,\n    TabsterMoveFocusEvent,\n} from \"./Events\";\nimport {\n    createElementTreeWalker,\n    DummyInput,\n    DummyInputManager,\n    DummyInputManagerPriorities,\n    getElementUId,\n    getPromise,\n    isElementVerticallyVisibleInContainer,\n    matchesSelector,\n    scrollIntoView,\n    TabsterPart,\n    WeakHTMLElement,\n    getDummyInputContainer,\n} from \"./Utils\";\nimport { dom } from \"./DOMAPI\";\n\nconst _inputSelector = [\"input\", \"textarea\", \"*[contenteditable]\"].join(\", \");\n\nclass MoverDummyManager extends DummyInputManager {\n    private _tabster: Types.TabsterCore;\n    private _getMemorized: () => WeakHTMLElement | undefined;\n\n    constructor(\n        element: WeakHTMLElement,\n        tabster: Types.TabsterCore,\n        getMemorized: () => WeakHTMLElement | undefined,\n        sys: Types.SysProps | undefined\n    ) {\n        super(tabster, element, DummyInputManagerPriorities.Mover, sys);\n\n        this._tabster = tabster;\n        this._getMemorized = getMemorized;\n\n        this._setHandlers(this._onFocusDummyInput);\n    }\n\n    private _onFocusDummyInput = (dummyInput: DummyInput) => {\n        const container = this._element.get();\n        const input = dummyInput.input;\n\n        if (container && input) {\n            const ctx = RootAPI.getTabsterContext(this._tabster, container);\n\n            let toFocus: HTMLElement | null | undefined;\n\n            if (ctx) {\n                toFocus = FocusedElementState.findNextTabbable(\n                    this._tabster,\n                    ctx,\n                    undefined,\n                    input,\n                    undefined,\n                    !dummyInput.isFirst,\n                    true\n                )?.element;\n            }\n\n            const memorized = this._getMemorized()?.get();\n\n            if (memorized && this._tabster.focusable.isFocusable(memorized)) {\n                toFocus = memorized;\n            }\n\n            if (toFocus) {\n                nativeFocus(toFocus);\n            }\n        }\n    };\n}\n\n// TypeScript enums produce depressing JavaScript code, so, we're just using\n// a few old style constants here.\nconst _moverUpdateAdd = 1;\nconst _moverUpdateAttr = 2;\nconst _moverUpdateRemove = 3;\n\ninterface MoverUpdateQueueItem {\n    element: HTMLElement;\n    type:\n        | typeof _moverUpdateAdd\n        | typeof _moverUpdateAttr\n        | typeof _moverUpdateRemove;\n}\n\nexport class Mover\n    extends TabsterPart<Types.MoverProps>\n    implements Types.Mover\n{\n    private _unobserve: (() => void) | undefined;\n    private _intersectionObserver: IntersectionObserver | undefined;\n    private _setCurrentTimer: number | undefined;\n    private _current: WeakHTMLElement | undefined;\n    private _prevCurrent: WeakHTMLElement | undefined;\n    private _visible: Record<string, Types.Visibility> = {};\n    private _fullyVisible: string | undefined;\n    private _win: Types.GetWindow;\n    private _onDispose: (mover: Mover) => void;\n    private _allElements: WeakMap<HTMLElement, Mover> | undefined;\n    private _updateQueue: MoverUpdateQueueItem[] | undefined;\n    private _updateTimer: number | undefined;\n\n    visibilityTolerance: number;\n    dummyManager: MoverDummyManager | undefined;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        onDispose: (mover: Mover) => void,\n        props: Types.MoverProps,\n        sys: Types.SysProps | undefined\n    ) {\n        super(tabster, element, props);\n\n        this._win = tabster.getWindow;\n        this.visibilityTolerance = props.visibilityTolerance ?? 0.8;\n\n        if (this._props.trackState || this._props.visibilityAware) {\n            this._intersectionObserver = new IntersectionObserver(\n                this._onIntersection,\n                { threshold: [0, 0.25, 0.5, 0.75, 1] }\n            );\n            this._observeState();\n        }\n\n        this._onDispose = onDispose;\n        const getMemorized = () =>\n            props.memorizeCurrent ? this._current : undefined;\n\n        if (!tabster.controlTab) {\n            this.dummyManager = new MoverDummyManager(\n                this._element,\n                tabster,\n                getMemorized,\n                sys\n            );\n        }\n    }\n\n    dispose(): void {\n        this._onDispose(this);\n\n        if (this._intersectionObserver) {\n            this._intersectionObserver.disconnect();\n            delete this._intersectionObserver;\n        }\n\n        delete this._current;\n        delete this._fullyVisible;\n        delete this._allElements;\n        delete this._updateQueue;\n\n        if (this._unobserve) {\n            this._unobserve();\n            delete this._unobserve;\n        }\n\n        const win = this._win();\n\n        if (this._setCurrentTimer) {\n            win.clearTimeout(this._setCurrentTimer);\n            delete this._setCurrentTimer;\n        }\n\n        if (this._updateTimer) {\n            win.clearTimeout(this._updateTimer);\n            delete this._updateTimer;\n        }\n\n        this.dummyManager?.dispose();\n        delete this.dummyManager;\n    }\n\n    setCurrent(element: HTMLElement | undefined): void {\n        if (element) {\n            this._current = new WeakHTMLElement(this._win, element);\n        } else {\n            this._current = undefined;\n        }\n\n        if (\n            (this._props.trackState || this._props.visibilityAware) &&\n            !this._setCurrentTimer\n        ) {\n            this._setCurrentTimer = this._win().setTimeout(() => {\n                delete this._setCurrentTimer;\n\n                const changed: (WeakHTMLElement | undefined)[] = [];\n\n                if (this._current !== this._prevCurrent) {\n                    changed.push(this._current);\n                    changed.push(this._prevCurrent);\n                    this._prevCurrent = this._current;\n                }\n\n                for (const weak of changed) {\n                    const el = weak?.get();\n\n                    if (el && this._allElements?.get(el) === this) {\n                        const props = this._props;\n\n                        if (\n                            el &&\n                            (props.visibilityAware !== undefined ||\n                                props.trackState)\n                        ) {\n                            const state = this.getState(el);\n\n                            if (state) {\n                                el.dispatchEvent(new MoverStateEvent(state));\n                            }\n                        }\n                    }\n                }\n            });\n        }\n    }\n\n    getCurrent(): HTMLElement | null {\n        return this._current?.get() || null;\n    }\n\n    findNextTabbable(\n        currentElement?: HTMLElement,\n        referenceElement?: HTMLElement,\n        isBackward?: boolean,\n        ignoreAccessibility?: boolean\n    ): Types.NextTabbable | null {\n        const container = this.getElement();\n        const currentIsDummy =\n            container && getDummyInputContainer(currentElement) === container;\n\n        if (!container) {\n            return null;\n        }\n\n        let next: HTMLElement | null | undefined = null;\n        let outOfDOMOrder = false;\n        let uncontrolled: HTMLElement | null | undefined;\n\n        if (\n            this._props.tabbable ||\n            currentIsDummy ||\n            (currentElement && !dom.nodeContains(container, currentElement))\n        ) {\n            const findProps: Types.FindNextProps = {\n                currentElement,\n                referenceElement,\n                container,\n                ignoreAccessibility,\n                useActiveModalizer: true,\n            };\n\n            const findPropsOut: Types.FindFocusableOutputProps = {};\n\n            next = this._tabster.focusable[\n                isBackward ? \"findPrev\" : \"findNext\"\n            ](findProps, findPropsOut);\n\n            outOfDOMOrder = !!findPropsOut.outOfDOMOrder;\n            uncontrolled = findPropsOut.uncontrolled;\n        }\n\n        return {\n            element: next,\n            uncontrolled,\n            outOfDOMOrder,\n        };\n    }\n\n    acceptElement(\n        element: HTMLElement,\n        state: Types.FocusableAcceptElementState\n    ): number | undefined {\n        if (!FocusedElementState.isTabbing) {\n            return state.currentCtx?.excludedFromMover\n                ? NodeFilter.FILTER_REJECT\n                : undefined;\n        }\n\n        const {\n            memorizeCurrent,\n            visibilityAware,\n            hasDefault = true,\n        } = this._props;\n        const moverElement = this.getElement();\n\n        if (\n            moverElement &&\n            (memorizeCurrent || visibilityAware || hasDefault) &&\n            (!dom.nodeContains(moverElement, state.from) ||\n                getDummyInputContainer(state.from) === moverElement)\n        ) {\n            let found: HTMLElement | undefined | null;\n\n            if (memorizeCurrent) {\n                const current = this._current?.get();\n\n                if (current && state.acceptCondition(current)) {\n                    found = current;\n                }\n            }\n\n            if (!found && hasDefault) {\n                found = this._tabster.focusable.findDefault({\n                    container: moverElement,\n                    useActiveModalizer: true,\n                });\n            }\n\n            if (!found && visibilityAware) {\n                found = this._tabster.focusable.findElement({\n                    container: moverElement,\n                    useActiveModalizer: true,\n                    isBackward: state.isBackward,\n                    acceptCondition: (el) => {\n                        const id = getElementUId(this._win, el);\n                        const visibility = this._visible[id];\n\n                        return (\n                            moverElement !== el &&\n                            !!this._allElements?.get(el) &&\n                            state.acceptCondition(el) &&\n                            (visibility === Visibilities.Visible ||\n                                (visibility === Visibilities.PartiallyVisible &&\n                                    (visibilityAware ===\n                                        Visibilities.PartiallyVisible ||\n                                        !this._fullyVisible)))\n                        );\n                    },\n                });\n            }\n\n            if (found) {\n                state.found = true;\n                state.foundElement = found;\n                state.rejectElementsFrom = moverElement;\n                state.skippedFocusable = true;\n                return NodeFilter.FILTER_ACCEPT;\n            }\n        }\n\n        return undefined;\n    }\n\n    private _onIntersection = (entries: IntersectionObserverEntry[]): void => {\n        for (const entry of entries) {\n            const el = entry.target as HTMLElement;\n            const id = getElementUId(this._win, el);\n\n            let newVisibility: Types.Visibility;\n            let fullyVisible = this._fullyVisible;\n\n            if (entry.intersectionRatio >= 0.25) {\n                newVisibility =\n                    entry.intersectionRatio >= 0.75\n                        ? Visibilities.Visible\n                        : Visibilities.PartiallyVisible;\n\n                if (newVisibility === Visibilities.Visible) {\n                    fullyVisible = id;\n                }\n            } else {\n                newVisibility = Visibilities.Invisible;\n            }\n\n            if (this._visible[id] !== newVisibility) {\n                if (newVisibility === undefined) {\n                    delete this._visible[id];\n\n                    if (fullyVisible === id) {\n                        delete this._fullyVisible;\n                    }\n                } else {\n                    this._visible[id] = newVisibility;\n                    this._fullyVisible = fullyVisible;\n                }\n\n                const state = this.getState(el);\n\n                if (state) {\n                    el.dispatchEvent(new MoverStateEvent(state));\n                }\n            }\n        }\n    };\n\n    private _observeState(): void {\n        const element = this.getElement();\n\n        if (\n            this._unobserve ||\n            !element ||\n            typeof MutationObserver === \"undefined\"\n        ) {\n            return;\n        }\n\n        const win = this._win();\n        const allElements = (this._allElements = new WeakMap());\n        const tabsterFocusable = this._tabster.focusable;\n        let updateQueue: MoverUpdateQueueItem[] = (this._updateQueue = []);\n\n        const observer = dom.createMutationObserver(\n            (mutations: MutationRecord[]) => {\n                for (const mutation of mutations) {\n                    const target = mutation.target;\n                    const removed = mutation.removedNodes;\n                    const added = mutation.addedNodes;\n\n                    if (mutation.type === \"attributes\") {\n                        if (mutation.attributeName === \"tabindex\") {\n                            updateQueue.push({\n                                element: target as HTMLElement,\n                                type: _moverUpdateAttr,\n                            });\n                        }\n                    } else {\n                        for (let i = 0; i < removed.length; i++) {\n                            updateQueue.push({\n                                element: removed[\n                                    i\n                                ] as HTMLElement as HTMLElement,\n                                type: _moverUpdateRemove,\n                            });\n                        }\n\n                        for (let i = 0; i < added.length; i++) {\n                            updateQueue.push({\n                                element: added[i] as HTMLElement,\n                                type: _moverUpdateAdd,\n                            });\n                        }\n                    }\n                }\n\n                requestUpdate();\n            }\n        );\n\n        const setElement = (element: HTMLElement, remove?: boolean): void => {\n            const current = allElements.get(element);\n\n            if (current && remove) {\n                this._intersectionObserver?.unobserve(element);\n                allElements.delete(element);\n            }\n\n            if (!current && !remove) {\n                allElements.set(element, this);\n                this._intersectionObserver?.observe(element);\n            }\n        };\n\n        const updateElement = (element: HTMLElement): void => {\n            const isFocusable = tabsterFocusable.isFocusable(element);\n            const current = allElements.get(element);\n\n            if (current) {\n                if (!isFocusable) {\n                    setElement(element, true);\n                }\n            } else {\n                if (isFocusable) {\n                    setElement(element);\n                }\n            }\n        };\n\n        const addNewElements = (element: HTMLElement): void => {\n            const { mover } = getMoverGroupper(element);\n\n            if (mover && mover !== this) {\n                if (\n                    mover.getElement() === element &&\n                    tabsterFocusable.isFocusable(element)\n                ) {\n                    setElement(element);\n                } else {\n                    return;\n                }\n            }\n\n            const walker = createElementTreeWalker(\n                win.document,\n                element,\n                (node: Node): number => {\n                    const { mover, groupper } = getMoverGroupper(\n                        node as HTMLElement\n                    );\n\n                    if (mover && mover !== this) {\n                        return NodeFilter.FILTER_REJECT;\n                    }\n\n                    const groupperFirstFocusable = groupper?.getFirst(true);\n\n                    if (\n                        groupper &&\n                        groupper.getElement() !== node &&\n                        groupperFirstFocusable &&\n                        groupperFirstFocusable !== node\n                    ) {\n                        return NodeFilter.FILTER_REJECT;\n                    }\n\n                    if (tabsterFocusable.isFocusable(node as HTMLElement)) {\n                        setElement(node as HTMLElement);\n                    }\n\n                    return NodeFilter.FILTER_SKIP;\n                }\n            );\n\n            if (walker) {\n                walker.currentNode = element;\n\n                while (walker.nextNode()) {\n                    /* Iterating for the sake of calling processNode() callback. */\n                }\n            }\n        };\n\n        const removeWalk = (element: HTMLElement): void => {\n            const current = allElements.get(element);\n\n            if (current) {\n                setElement(element, true);\n            }\n\n            for (\n                let el = dom.getFirstElementChild(element);\n                el;\n                el = dom.getNextElementSibling(el)\n            ) {\n                removeWalk(el as HTMLElement);\n            }\n        };\n\n        const requestUpdate = () => {\n            if (!this._updateTimer && updateQueue.length) {\n                this._updateTimer = win.setTimeout(() => {\n                    delete this._updateTimer;\n\n                    for (const { element, type } of updateQueue) {\n                        switch (type) {\n                            case _moverUpdateAttr:\n                                updateElement(element);\n                                break;\n                            case _moverUpdateAdd:\n                                addNewElements(element);\n                                break;\n                            case _moverUpdateRemove:\n                                removeWalk(element);\n                                break;\n                        }\n                    }\n\n                    updateQueue = this._updateQueue = [];\n                }, 0);\n            }\n        };\n\n        const getMoverGroupper = (\n            element: HTMLElement\n        ): { mover?: Mover; groupper?: Types.Groupper } => {\n            const ret: {\n                mover?: Mover;\n                groupper?: Types.Groupper;\n            } = {};\n\n            for (\n                let el: HTMLElement | null = element;\n                el;\n                el = dom.getParentElement(el)\n            ) {\n                const toe = getTabsterOnElement(this._tabster, el);\n\n                if (toe) {\n                    if (toe.groupper && !ret.groupper) {\n                        ret.groupper = toe.groupper;\n                    }\n\n                    if (toe.mover) {\n                        ret.mover = toe.mover as Mover;\n                        break;\n                    }\n                }\n            }\n\n            return ret;\n        };\n\n        updateQueue.push({ element, type: _moverUpdateAdd });\n        requestUpdate();\n\n        observer.observe(element, {\n            childList: true,\n            subtree: true,\n            attributes: true,\n            attributeFilter: [\"tabindex\"],\n        });\n\n        this._unobserve = () => {\n            observer.disconnect();\n        };\n    }\n\n    getState(element: HTMLElement): Types.MoverElementState | undefined {\n        const id = getElementUId(this._win, element);\n\n        if (id in this._visible) {\n            const visibility = this._visible[id] || Visibilities.Invisible;\n            const isCurrent = this._current\n                ? this._current.get() === element\n                : undefined;\n\n            return {\n                isCurrent,\n                visibility,\n            };\n        }\n\n        return undefined;\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction validateMoverProps(props: Types.MoverProps): void {\n    // TODO: Implement validation.\n}\n\n/**\n * Calculates distance between two rectangles.\n *\n * @param ax1 first rectangle left\n * @param ay1 first rectangle top\n * @param ax2 first rectangle right\n * @param ay2 first rectangle bottom\n * @param bx1 second rectangle left\n * @param by1 second rectangle top\n * @param bx2 second rectangle right\n * @param by2 second rectangle bottom\n * @returns number, shortest distance between the rectangles.\n */\nfunction getDistance(\n    ax1: number,\n    ay1: number,\n    ax2: number,\n    ay2: number,\n    bx1: number,\n    by1: number,\n    bx2: number,\n    by2: number\n): number {\n    const xDistance = ax2 < bx1 ? bx1 - ax2 : bx2 < ax1 ? ax1 - bx2 : 0;\n    const yDistance = ay2 < by1 ? by1 - ay2 : by2 < ay1 ? ay1 - by2 : 0;\n\n    return xDistance === 0\n        ? yDistance\n        : yDistance === 0\n        ? xDistance\n        : Math.sqrt(xDistance * xDistance + yDistance * yDistance);\n}\n\nexport class MoverAPI implements Types.MoverAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    private _movers: Record<string, Mover>;\n    private _ignoredInputTimer: number | undefined;\n    private _ignoredInputResolve: ((value: boolean) => void) | undefined;\n\n    constructor(tabster: Types.TabsterCore, getWindow: Types.GetWindow) {\n        this._tabster = tabster;\n        this._win = getWindow;\n        this._movers = {};\n\n        tabster.queueInit(this._init);\n    }\n\n    private _init = (): void => {\n        const win = this._win();\n\n        win.addEventListener(\"keydown\", this._onKeyDown, true);\n        win.addEventListener(MoverMoveFocusEventName, this._onMoveFocus);\n        win.addEventListener(\n            MoverMemorizedElementEventName,\n            this._onMemorizedElement\n        );\n\n        this._tabster.focusedElement.subscribe(this._onFocus);\n    };\n\n    dispose(): void {\n        const win = this._win();\n\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n\n        this._ignoredInputResolve?.(false);\n\n        if (this._ignoredInputTimer) {\n            win.clearTimeout(this._ignoredInputTimer);\n            delete this._ignoredInputTimer;\n        }\n\n        win.removeEventListener(\"keydown\", this._onKeyDown, true);\n        win.removeEventListener(MoverMoveFocusEventName, this._onMoveFocus);\n        win.removeEventListener(\n            MoverMemorizedElementEventName,\n            this._onMemorizedElement\n        );\n\n        Object.keys(this._movers).forEach((moverId) => {\n            if (this._movers[moverId]) {\n                this._movers[moverId].dispose();\n                delete this._movers[moverId];\n            }\n        });\n    }\n\n    createMover(\n        element: HTMLElement,\n        props: Types.MoverProps,\n        sys: Types.SysProps | undefined\n    ): Types.Mover {\n        if (__DEV__) {\n            validateMoverProps(props);\n        }\n\n        const newMover = new Mover(\n            this._tabster,\n            element,\n            this._onMoverDispose,\n            props,\n            sys\n        );\n        this._movers[newMover.id] = newMover;\n        return newMover;\n    }\n\n    private _onMoverDispose = (mover: Mover) => {\n        delete this._movers[mover.id];\n    };\n\n    private _onFocus = (element: HTMLElement | undefined): void => {\n        // When something in the app gets focused, we are making sure that\n        // the relevant context Mover is aware of it.\n        // Looking for the relevant context Mover from the currently\n        // focused element parent, not from the element itself, because the\n        // Mover element itself cannot be its own current (but might be\n        // current for its parent Mover).\n        let currentFocusableElement = element;\n        let deepestFocusableElement = element;\n\n        for (\n            let el: HTMLElement | null | undefined =\n                dom.getParentElement(element);\n            el;\n            el = dom.getParentElement(el)\n        ) {\n            // We go through all Movers up from the focused element and\n            // set their current element to the deepest focusable of that\n            // Mover.\n            const mover = getTabsterOnElement(this._tabster, el)?.mover;\n\n            if (mover) {\n                mover.setCurrent(deepestFocusableElement);\n                currentFocusableElement = undefined;\n            }\n\n            if (\n                !currentFocusableElement &&\n                this._tabster.focusable.isFocusable(el)\n            ) {\n                currentFocusableElement = deepestFocusableElement = el;\n            }\n        }\n    };\n\n    moveFocus(\n        fromElement: HTMLElement,\n        key: Types.MoverKey\n    ): HTMLElement | null {\n        return this._moveFocus(fromElement, key);\n    }\n\n    private _moveFocus(\n        fromElement: HTMLElement,\n        key: Types.MoverKey,\n        relatedEvent?: KeyboardEvent\n    ): HTMLElement | null {\n        const tabster = this._tabster;\n        const ctx = RootAPI.getTabsterContext(tabster, fromElement, {\n            checkRtl: true,\n        });\n\n        if (\n            !ctx ||\n            !ctx.mover ||\n            ctx.excludedFromMover ||\n            (relatedEvent && ctx.ignoreKeydown(relatedEvent))\n        ) {\n            return null;\n        }\n\n        const mover = ctx.mover;\n        const container = mover.getElement();\n\n        if (ctx.groupperBeforeMover) {\n            const groupper = ctx.groupper;\n\n            if (groupper && !groupper.isActive(true)) {\n                // For the cases when we have Mover/Active Groupper/Inactive Groupper, we need to check\n                // the grouppers between the current element and the current mover.\n                for (\n                    let el: HTMLElement | null | undefined =\n                        dom.getParentElement(groupper.getElement());\n                    el && el !== container;\n                    el = dom.getParentElement(el)\n                ) {\n                    if (\n                        getTabsterOnElement(tabster, el)?.groupper?.isActive(\n                            true\n                        )\n                    ) {\n                        return null;\n                    }\n                }\n            } else {\n                return null;\n            }\n        }\n\n        if (!container) {\n            return null;\n        }\n\n        const focusable = tabster.focusable;\n        const moverProps = mover.getProps();\n        const direction = moverProps.direction || MoverDirections.Both;\n        const isBoth = direction === MoverDirections.Both;\n        const isVertical = isBoth || direction === MoverDirections.Vertical;\n        const isHorizontal = isBoth || direction === MoverDirections.Horizontal;\n        const isGridLinear = direction === MoverDirections.GridLinear;\n        const isGrid = isGridLinear || direction === MoverDirections.Grid;\n        const isCyclic = moverProps.cyclic;\n\n        let next: HTMLElement | null | undefined;\n        let scrollIntoViewArg: boolean | undefined;\n\n        let focusedElementRect: DOMRect;\n        let focusedElementX1 = 0;\n        let focusedElementX2 = 0;\n\n        if (isGrid) {\n            focusedElementRect = fromElement.getBoundingClientRect();\n            focusedElementX1 = Math.ceil(focusedElementRect.left);\n            focusedElementX2 = Math.floor(focusedElementRect.right);\n        }\n\n        if (ctx.rtl) {\n            if (key === MoverKeys.ArrowRight) {\n                key = MoverKeys.ArrowLeft;\n            } else if (key === MoverKeys.ArrowLeft) {\n                key = MoverKeys.ArrowRight;\n            }\n        }\n\n        if (\n            (key === MoverKeys.ArrowDown && isVertical) ||\n            (key === MoverKeys.ArrowRight && (isHorizontal || isGrid))\n        ) {\n            next = focusable.findNext({\n                currentElement: fromElement,\n                container,\n                useActiveModalizer: true,\n            });\n\n            if (next && isGrid) {\n                const nextElementX1 = Math.ceil(\n                    next.getBoundingClientRect().left\n                );\n\n                if (!isGridLinear && focusedElementX2 > nextElementX1) {\n                    next = undefined;\n                }\n            } else if (!next && isCyclic) {\n                next = focusable.findFirst({\n                    container,\n                    useActiveModalizer: true,\n                });\n            }\n        } else if (\n            (key === MoverKeys.ArrowUp && isVertical) ||\n            (key === MoverKeys.ArrowLeft && (isHorizontal || isGrid))\n        ) {\n            next = focusable.findPrev({\n                currentElement: fromElement,\n                container,\n                useActiveModalizer: true,\n            });\n\n            if (next && isGrid) {\n                const nextElementX2 = Math.floor(\n                    next.getBoundingClientRect().right\n                );\n\n                if (!isGridLinear && nextElementX2 > focusedElementX1) {\n                    next = undefined;\n                }\n            } else if (!next && isCyclic) {\n                next = focusable.findLast({\n                    container,\n                    useActiveModalizer: true,\n                });\n            }\n        } else if (key === MoverKeys.Home) {\n            if (isGrid) {\n                focusable.findElement({\n                    container,\n                    currentElement: fromElement,\n                    useActiveModalizer: true,\n                    isBackward: true,\n                    acceptCondition: (el) => {\n                        if (!focusable.isFocusable(el)) {\n                            return false;\n                        }\n\n                        const nextElementX1 = Math.ceil(\n                            el.getBoundingClientRect().left ?? 0\n                        );\n\n                        if (\n                            el !== fromElement &&\n                            focusedElementX1 <= nextElementX1\n                        ) {\n                            return true;\n                        }\n\n                        next = el;\n                        return false;\n                    },\n                });\n            } else {\n                next = focusable.findFirst({\n                    container,\n                    useActiveModalizer: true,\n                });\n            }\n        } else if (key === MoverKeys.End) {\n            if (isGrid) {\n                focusable.findElement({\n                    container,\n                    currentElement: fromElement,\n                    useActiveModalizer: true,\n                    acceptCondition: (el) => {\n                        if (!focusable.isFocusable(el)) {\n                            return false;\n                        }\n\n                        const nextElementX1 = Math.ceil(\n                            el.getBoundingClientRect().left ?? 0\n                        );\n\n                        if (\n                            el !== fromElement &&\n                            focusedElementX1 >= nextElementX1\n                        ) {\n                            return true;\n                        }\n\n                        next = el;\n                        return false;\n                    },\n                });\n            } else {\n                next = focusable.findLast({\n                    container,\n                    useActiveModalizer: true,\n                });\n            }\n        } else if (key === MoverKeys.PageUp) {\n            focusable.findElement({\n                currentElement: fromElement,\n                container,\n                useActiveModalizer: true,\n                isBackward: true,\n                acceptCondition: (el) => {\n                    if (!focusable.isFocusable(el)) {\n                        return false;\n                    }\n\n                    if (\n                        isElementVerticallyVisibleInContainer(\n                            this._win,\n                            el,\n                            mover.visibilityTolerance\n                        )\n                    ) {\n                        next = el;\n                        return false;\n                    }\n\n                    return true;\n                },\n            });\n\n            // will be on the first column move forward and preserve previous column\n            if (isGrid && next) {\n                const firstColumnX1 = Math.ceil(\n                    next.getBoundingClientRect().left\n                );\n                focusable.findElement({\n                    currentElement: next,\n                    container,\n                    useActiveModalizer: true,\n                    acceptCondition: (el) => {\n                        if (!focusable.isFocusable(el)) {\n                            return false;\n                        }\n\n                        const nextElementX1 = Math.ceil(\n                            el.getBoundingClientRect().left\n                        );\n                        if (\n                            focusedElementX1 < nextElementX1 ||\n                            firstColumnX1 >= nextElementX1\n                        ) {\n                            return true;\n                        }\n                        next = el;\n                        return false;\n                    },\n                });\n            }\n\n            scrollIntoViewArg = false;\n        } else if (key === MoverKeys.PageDown) {\n            focusable.findElement({\n                currentElement: fromElement,\n                container,\n                useActiveModalizer: true,\n                acceptCondition: (el) => {\n                    if (!focusable.isFocusable(el)) {\n                        return false;\n                    }\n\n                    if (\n                        isElementVerticallyVisibleInContainer(\n                            this._win,\n                            el,\n                            mover.visibilityTolerance\n                        )\n                    ) {\n                        next = el;\n                        return false;\n                    }\n\n                    return true;\n                },\n            });\n\n            // will be on the last column move backwards and preserve previous column\n            if (isGrid && next) {\n                const lastColumnX1 = Math.ceil(\n                    next.getBoundingClientRect().left\n                );\n                focusable.findElement({\n                    currentElement: next,\n                    container,\n                    useActiveModalizer: true,\n                    isBackward: true,\n                    acceptCondition: (el) => {\n                        if (!focusable.isFocusable(el)) {\n                            return false;\n                        }\n\n                        const nextElementX1 = Math.ceil(\n                            el.getBoundingClientRect().left\n                        );\n                        if (\n                            focusedElementX1 > nextElementX1 ||\n                            lastColumnX1 <= nextElementX1\n                        ) {\n                            return true;\n                        }\n                        next = el;\n                        return false;\n                    },\n                });\n            }\n\n            scrollIntoViewArg = true;\n        } else if (isGrid) {\n            const isBackward = key === MoverKeys.ArrowUp;\n            const ax1 = focusedElementX1;\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const ay1 = Math.ceil(focusedElementRect!.top);\n            const ax2 = focusedElementX2;\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const ay2 = Math.floor(focusedElementRect!.bottom);\n            let targetElement: HTMLElement | undefined;\n            let lastDistance: number | undefined;\n            let lastIntersection = 0;\n\n            focusable.findAll({\n                container,\n                currentElement: fromElement,\n                isBackward,\n                onElement: (el) => {\n                    // Find element which has maximal intersection with the focused element horizontally,\n                    // or the closest one.\n                    const rect = el.getBoundingClientRect();\n\n                    const bx1 = Math.ceil(rect.left);\n                    const by1 = Math.ceil(rect.top);\n                    const bx2 = Math.floor(rect.right);\n                    const by2 = Math.floor(rect.bottom);\n\n                    if (\n                        (isBackward && ay1 < by2) ||\n                        (!isBackward && ay2 > by1)\n                    ) {\n                        // Only consider elements which are below/above curretly focused.\n                        return true;\n                    }\n\n                    const xIntersectionWidth =\n                        Math.ceil(Math.min(ax2, bx2)) -\n                        Math.floor(Math.max(ax1, bx1));\n                    const minWidth = Math.ceil(Math.min(ax2 - ax1, bx2 - bx1));\n\n                    if (\n                        xIntersectionWidth > 0 &&\n                        minWidth >= xIntersectionWidth\n                    ) {\n                        // Element intersects with the focused element on X axis.\n                        const intersection = xIntersectionWidth / minWidth;\n\n                        if (intersection > lastIntersection) {\n                            targetElement = el;\n                            lastIntersection = intersection;\n                        }\n                    } else if (lastIntersection === 0) {\n                        // If we didn't have intersection, try just the closest one.\n                        const distance = getDistance(\n                            ax1,\n                            ay1,\n                            ax2,\n                            ay2,\n                            bx1,\n                            by1,\n                            bx2,\n                            by2\n                        );\n\n                        if (\n                            lastDistance === undefined ||\n                            distance < lastDistance\n                        ) {\n                            lastDistance = distance;\n                            targetElement = el;\n                        }\n                    } else if (lastIntersection > 0) {\n                        // Element doesn't intersect, but we had intersection already, stop search.\n                        return false;\n                    }\n\n                    return true;\n                },\n            });\n\n            next = targetElement;\n        }\n\n        if (\n            next &&\n            (!relatedEvent ||\n                (relatedEvent &&\n                    container.dispatchEvent(\n                        new TabsterMoveFocusEvent({\n                            by: \"mover\",\n                            owner: container,\n                            next,\n                            relatedEvent,\n                        })\n                    )))\n        ) {\n            if (scrollIntoViewArg !== undefined) {\n                scrollIntoView(this._win, next, scrollIntoViewArg);\n            }\n\n            if (relatedEvent) {\n                relatedEvent.preventDefault();\n                relatedEvent.stopImmediatePropagation();\n            }\n\n            nativeFocus(next);\n\n            return next;\n        }\n\n        return null;\n    }\n\n    private _onKeyDown = async (event: KeyboardEvent): Promise<void> => {\n        if (this._ignoredInputTimer) {\n            this._win().clearTimeout(this._ignoredInputTimer);\n            delete this._ignoredInputTimer;\n        }\n\n        this._ignoredInputResolve?.(false);\n\n        // Give a chance to other listeners to handle the event (for example,\n        // to scroll instead of moving focus).\n        if (event.ctrlKey || event.altKey || event.shiftKey || event.metaKey) {\n            return;\n        }\n\n        const key = event.key;\n        let moverKey: Types.MoverKey | undefined;\n\n        if (key === Keys.ArrowDown) {\n            moverKey = MoverKeys.ArrowDown;\n        } else if (key === Keys.ArrowRight) {\n            moverKey = MoverKeys.ArrowRight;\n        } else if (key === Keys.ArrowUp) {\n            moverKey = MoverKeys.ArrowUp;\n        } else if (key === Keys.ArrowLeft) {\n            moverKey = MoverKeys.ArrowLeft;\n        } else if (key === Keys.PageDown) {\n            moverKey = MoverKeys.PageDown;\n        } else if (key === Keys.PageUp) {\n            moverKey = MoverKeys.PageUp;\n        } else if (key === Keys.Home) {\n            moverKey = MoverKeys.Home;\n        } else if (key === Keys.End) {\n            moverKey = MoverKeys.End;\n        }\n\n        if (!moverKey) {\n            return;\n        }\n\n        const focused = this._tabster.focusedElement.getFocusedElement();\n\n        if (!focused || (await this._isIgnoredInput(focused, key))) {\n            return;\n        }\n\n        this._moveFocus(focused, moverKey, event);\n    };\n\n    private _onMoveFocus = (e: MoverMoveFocusEvent): void => {\n        const element = e.composedPath()[0] as HTMLElement | null | undefined;\n        const key = e.detail?.key;\n\n        if (element && key !== undefined && !e.defaultPrevented) {\n            this._moveFocus(element, key);\n            e.stopImmediatePropagation();\n        }\n    };\n\n    private _onMemorizedElement = (e: MoverMemorizedElementEvent): void => {\n        const target = e.composedPath()[0] as HTMLElement | null | undefined;\n        let memorizedElement = e.detail?.memorizedElement;\n\n        if (target) {\n            const ctx = RootAPI.getTabsterContext(this._tabster, target);\n            const mover = ctx?.mover;\n\n            if (mover) {\n                if (\n                    memorizedElement &&\n                    !dom.nodeContains(mover.getElement(), memorizedElement)\n                ) {\n                    memorizedElement = undefined;\n                }\n\n                mover.setCurrent(memorizedElement);\n\n                e.stopImmediatePropagation();\n            }\n        }\n    };\n\n    private async _isIgnoredInput(\n        element: HTMLElement,\n        key: string\n    ): Promise<boolean> {\n        if (\n            element.getAttribute(\"aria-expanded\") === \"true\" &&\n            element.hasAttribute(\"aria-activedescendant\")\n        ) {\n            // It is likely a combobox with expanded options and arrow keys are\n            // controlled by it.\n            return true;\n        }\n\n        if (matchesSelector(element, _inputSelector)) {\n            let selectionStart = 0;\n            let selectionEnd = 0;\n            let textLength = 0;\n            let asyncRet: Promise<boolean> | undefined;\n\n            if (element.tagName === \"INPUT\" || element.tagName === \"TEXTAREA\") {\n                const type = (element as HTMLInputElement).type;\n                const value = (element as HTMLInputElement).value;\n\n                textLength = (value || \"\").length;\n\n                if (type === \"email\" || type === \"number\") {\n                    // For these types Chromium doesn't provide selectionStart and selectionEnd.\n                    // Hence the ugly workaround to find if the caret position is changed with\n                    // the keypress.\n                    // TODO: Have a look at range, week, time, time, date, datetime-local.\n                    if (textLength) {\n                        const selection = dom.getSelection(element);\n\n                        if (selection) {\n                            const initialLength = selection.toString().length;\n                            const isBackward =\n                                key === Keys.ArrowLeft || key === Keys.ArrowUp;\n\n                            selection.modify(\n                                \"extend\",\n                                isBackward ? \"backward\" : \"forward\",\n                                \"character\"\n                            );\n\n                            if (initialLength !== selection.toString().length) {\n                                // The caret is moved, so, we're not on the edge of the value.\n                                // Restore original selection.\n                                selection.modify(\n                                    \"extend\",\n                                    isBackward ? \"forward\" : \"backward\",\n                                    \"character\"\n                                );\n\n                                return true;\n                            } else {\n                                textLength = 0;\n                            }\n                        }\n                    }\n                } else {\n                    const selStart = (element as HTMLInputElement)\n                        .selectionStart;\n\n                    if (selStart === null) {\n                        // Do not ignore not text editable inputs like checkboxes and radios (but ignore hidden).\n                        return type === \"hidden\";\n                    }\n\n                    selectionStart = selStart || 0;\n                    selectionEnd =\n                        (element as HTMLInputElement).selectionEnd || 0;\n                }\n            } else if (element.contentEditable === \"true\") {\n                asyncRet = new (getPromise(this._win))((resolve) => {\n                    this._ignoredInputResolve = (value: boolean) => {\n                        delete this._ignoredInputResolve;\n                        resolve(value);\n                    };\n\n                    const win = this._win();\n\n                    if (this._ignoredInputTimer) {\n                        win.clearTimeout(this._ignoredInputTimer);\n                    }\n\n                    const {\n                        anchorNode: prevAnchorNode,\n                        focusNode: prevFocusNode,\n                        anchorOffset: prevAnchorOffset,\n                        focusOffset: prevFocusOffset,\n                    } = dom.getSelection(element) || {};\n\n                    // Get selection gives incorrect value if we call it syncronously onKeyDown.\n                    this._ignoredInputTimer = win.setTimeout(() => {\n                        delete this._ignoredInputTimer;\n\n                        const {\n                            anchorNode,\n                            focusNode,\n                            anchorOffset,\n                            focusOffset,\n                        } = dom.getSelection(element) || {};\n\n                        if (\n                            anchorNode !== prevAnchorNode ||\n                            focusNode !== prevFocusNode ||\n                            anchorOffset !== prevAnchorOffset ||\n                            focusOffset !== prevFocusOffset\n                        ) {\n                            this._ignoredInputResolve?.(false);\n                            return;\n                        }\n\n                        selectionStart = anchorOffset || 0;\n                        selectionEnd = focusOffset || 0;\n                        textLength = element.textContent?.length || 0;\n\n                        if (anchorNode && focusNode) {\n                            if (\n                                dom.nodeContains(element, anchorNode) &&\n                                dom.nodeContains(element, focusNode)\n                            ) {\n                                if (anchorNode !== element) {\n                                    let anchorFound = false;\n\n                                    const addOffsets = (\n                                        node: ChildNode\n                                    ): boolean => {\n                                        if (node === anchorNode) {\n                                            anchorFound = true;\n                                        } else if (node === focusNode) {\n                                            return true;\n                                        }\n\n                                        const nodeText = node.textContent;\n\n                                        if (\n                                            nodeText &&\n                                            !dom.getFirstChild(node)\n                                        ) {\n                                            const len = nodeText.length;\n\n                                            if (anchorFound) {\n                                                if (focusNode !== anchorNode) {\n                                                    selectionEnd += len;\n                                                }\n                                            } else {\n                                                selectionStart += len;\n                                                selectionEnd += len;\n                                            }\n                                        }\n\n                                        let stop = false;\n\n                                        for (\n                                            let e = dom.getFirstChild(node);\n                                            e && !stop;\n                                            e = e.nextSibling\n                                        ) {\n                                            stop = addOffsets(e);\n                                        }\n\n                                        return stop;\n                                    };\n\n                                    addOffsets(element);\n                                }\n                            }\n                        }\n\n                        this._ignoredInputResolve?.(true);\n                    }, 0);\n                });\n            }\n\n            if (asyncRet && !(await asyncRet)) {\n                return true;\n            }\n\n            if (selectionStart !== selectionEnd) {\n                return true;\n            }\n\n            if (\n                selectionStart > 0 &&\n                (key === Keys.ArrowLeft ||\n                    key === Keys.ArrowUp ||\n                    key === Keys.Home)\n            ) {\n                return true;\n            }\n\n            if (\n                selectionStart < textLength &&\n                (key === Keys.ArrowRight ||\n                    key === Keys.ArrowDown ||\n                    key === Keys.End)\n            ) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport * as Types from \"./Types\";\nimport { TABSTER_ATTRIBUTE_NAME } from \"./Consts\";\nimport {\n    createElementTreeWalker,\n    getInstanceContext,\n    HTMLElementWithUID,\n    InstanceContext,\n    WeakHTMLElement,\n} from \"./Utils\";\nimport { dom } from \"./DOMAPI\";\n\nexport function observeMutations(\n    doc: Document,\n    tabster: Types.TabsterCore,\n    updateTabsterByAttribute: (\n        tabster: Types.TabsterCore,\n        element: HTMLElementWithUID,\n        dispose?: boolean\n    ) => void,\n    syncState: boolean\n): () => void {\n    if (typeof MutationObserver === \"undefined\") {\n        return () => {\n            /* Noop */\n        };\n    }\n\n    const getWindow = tabster.getWindow;\n\n    let elementByUId: InstanceContext[\"elementByUId\"] | undefined;\n\n    const onMutation = (mutations: MutationRecord[]) => {\n        const removedNodes = new Set<Node>();\n\n        for (const mutation of mutations) {\n            const target = mutation.target;\n            const removed = mutation.removedNodes;\n            const added = mutation.addedNodes;\n\n            if (mutation.type === \"attributes\") {\n                if (mutation.attributeName === TABSTER_ATTRIBUTE_NAME) {\n                    // removedNodes helps to make sure we are not recreating things\n                    // for the removed elements.\n                    // For some reason, if we do removeChild() and setAttribute() on the\n                    // removed child in the same tick, both the child removal and the attribute\n                    // change will be present in the mutation records. And the attribute change\n                    // will follow the child removal.\n                    // So, we remember the removed nodes and ignore attribute changes for them.\n                    if (!removedNodes.has(target)) {\n                        updateTabsterByAttribute(\n                            tabster,\n                            target as HTMLElement\n                        );\n                    }\n                }\n            } else {\n                for (let i = 0; i < removed.length; i++) {\n                    const removedNode = removed[i];\n                    removedNodes.add(removedNode);\n                    updateTabsterElements(removedNode, true);\n                    tabster._dummyObserver.domChanged?.(target as HTMLElement);\n                }\n\n                for (let i = 0; i < added.length; i++) {\n                    updateTabsterElements(added[i]);\n                    tabster._dummyObserver.domChanged?.(target as HTMLElement);\n                }\n            }\n        }\n\n        removedNodes.clear();\n\n        tabster.modalizer?.hiddenUpdate();\n    };\n\n    function updateTabsterElements(node: Node, removed?: boolean): void {\n        if (!elementByUId) {\n            elementByUId = getInstanceContext(getWindow).elementByUId;\n        }\n\n        processNode(node as HTMLElement, removed);\n\n        const walker = createElementTreeWalker(\n            doc,\n            node,\n            (element: Node): number => {\n                return processNode(element as HTMLElement, removed);\n            }\n        );\n\n        if (walker) {\n            while (walker.nextNode()) {\n                /* Iterating for the sake of calling processNode() callback. */\n            }\n        }\n    }\n\n    function processNode(element: HTMLElement, removed?: boolean): number {\n        if (!element.getAttribute) {\n            // It might actually be a text node.\n            return NodeFilter.FILTER_SKIP;\n        }\n\n        const uid = (element as HTMLElementWithUID).__tabsterElementUID;\n\n        if (uid && elementByUId) {\n            if (removed) {\n                delete elementByUId[uid];\n            } else {\n                elementByUId[uid] ??= new WeakHTMLElement(getWindow, element);\n            }\n        }\n\n        if (\n            getTabsterOnElement(tabster, element) ||\n            element.hasAttribute(TABSTER_ATTRIBUTE_NAME)\n        ) {\n            updateTabsterByAttribute(tabster, element, removed);\n        }\n\n        return NodeFilter.FILTER_SKIP;\n    }\n\n    const observer = dom.createMutationObserver(onMutation);\n\n    if (syncState) {\n        updateTabsterElements(getWindow().document.body);\n    }\n\n    observer.observe(doc, {\n        childList: true,\n        subtree: true,\n        attributes: true,\n        attributeFilter: [TABSTER_ATTRIBUTE_NAME],\n    });\n\n    return () => {\n        observer.disconnect();\n    };\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"../Instance\";\nimport * as Types from \"../Types\";\nimport { ObservedElementAccessibilities } from \"../Consts\";\nimport {\n    documentContains,\n    getElementUId,\n    getPromise,\n    WeakHTMLElement,\n} from \"../Utils\";\nimport { Subscribable } from \"./Subscribable\";\n\nconst _conditionCheckTimeout = 100;\n\ninterface ObservedElementInfo {\n    element: WeakHTMLElement;\n    prevNames?: string[];\n}\n\ninterface ObservedWaiting {\n    timer?: number;\n    conditionTimer?: number;\n    request?: Types.ObservedElementAsyncRequest<HTMLElement | null>;\n    resolve?: (value: HTMLElement | null) => void;\n    reject?: () => void;\n}\n\nexport class ObservedElementAPI\n    extends Subscribable<HTMLElement, Types.ObservedElementDetails>\n    implements Types.ObservedElementAPI\n{\n    private _win: Types.GetWindow;\n    private _tabster: Types.TabsterCore;\n    private _waiting: Record<string, ObservedWaiting> = {};\n    private _lastRequestFocusId = 0;\n    private _observedById: { [uid: string]: ObservedElementInfo } = {};\n    private _observedByName: {\n        [name: string]: { [uid: string]: ObservedElementInfo };\n    } = {};\n    private _currentRequest:\n        | Types.ObservedElementAsyncRequest<HTMLElement | null>\n        | undefined;\n    private _currentRequestTimestamp = 0;\n\n    constructor(tabster: Types.TabsterCore) {\n        super();\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n\n        tabster.queueInit(() => {\n            this._tabster.focusedElement.subscribe(this._onFocus);\n        });\n    }\n\n    dispose(): void {\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n\n        for (const key of Object.keys(this._waiting)) {\n            this._rejectWaiting(key);\n        }\n\n        this._observedById = {};\n        this._observedByName = {};\n    }\n\n    private _onFocus = (e: HTMLElement | undefined): void => {\n        if (e) {\n            const current = this._currentRequest;\n\n            if (current) {\n                const delta = Date.now() - this._currentRequestTimestamp;\n                const settleTime = 300;\n\n                if (delta >= settleTime) {\n                    // Giving some time for the focus to settle before\n                    // automatically cancelling the current request on focus change.\n                    delete this._currentRequest;\n                    current.cancel();\n                }\n            }\n        }\n    };\n\n    private _rejectWaiting(key: string, shouldResolve?: boolean): void {\n        const w = this._waiting[key];\n\n        if (w) {\n            const win = this._win();\n\n            if (w.timer) {\n                win.clearTimeout(w.timer);\n            }\n\n            if (w.conditionTimer) {\n                win.clearTimeout(w.conditionTimer);\n            }\n\n            if (!shouldResolve && w.reject) {\n                w.reject();\n            } else if (shouldResolve && w.resolve) {\n                w.resolve(null);\n            }\n\n            delete this._waiting[key];\n        }\n    }\n\n    private _isObservedNamesUpdated(cur: string[], prev?: string[]) {\n        if (!prev || cur.length !== prev.length) {\n            return true;\n        }\n        for (let i = 0; i < cur.length; ++i) {\n            if (cur[i] !== prev[i]) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Returns existing element by observed name\n     *\n     * @param observedName An observed name\n     * @param accessibility Optionally, return only if the element is accessible or focusable\n     * @returns HTMLElement | null\n     */\n    getElement(\n        observedName: string,\n        accessibility?: Types.ObservedElementAccessibility\n    ): HTMLElement | null {\n        const o = this._observedByName[observedName];\n\n        if (o) {\n            for (const uid of Object.keys(o)) {\n                let el = o[uid].element.get() || null;\n                if (el) {\n                    if (\n                        (accessibility ===\n                            ObservedElementAccessibilities.Accessible &&\n                            !this._tabster.focusable.isAccessible(el)) ||\n                        (accessibility ===\n                            ObservedElementAccessibilities.Focusable &&\n                            !this._tabster.focusable.isFocusable(el, true))\n                    ) {\n                        el = null;\n                    }\n                } else {\n                    delete o[uid];\n                    delete this._observedById[uid];\n                }\n\n                return el;\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Waits for the element to appear in the DOM and returns it.\n     *\n     * @param observedName An observed name\n     * @param timeout Wait no longer than this timeout\n     * @param accessibility Optionally, wait for the element to also become accessible or focusable before returning it\n     * @returns Promise<HTMLElement | null>\n     */\n    waitElement(\n        observedName: string,\n        timeout: number,\n        accessibility?: Types.ObservedElementAccessibility\n    ): Types.ObservedElementAsyncRequest<HTMLElement | null> {\n        const el = this.getElement(observedName, accessibility);\n\n        if (el) {\n            return {\n                result: getPromise(this._win).resolve(el),\n                cancel: () => {\n                    /**/\n                },\n            };\n        }\n\n        let prefix: string;\n\n        if (accessibility === ObservedElementAccessibilities.Accessible) {\n            prefix = \"a\";\n        } else if (accessibility === ObservedElementAccessibilities.Focusable) {\n            prefix = \"f\";\n        } else {\n            prefix = \"_\";\n        }\n\n        const key = prefix + observedName;\n        let w = this._waiting[key];\n\n        if (w && w.request) {\n            return w.request;\n        }\n\n        w = this._waiting[key] = {\n            timer: this._win().setTimeout(() => {\n                if (w.conditionTimer) {\n                    this._win().clearTimeout(w.conditionTimer);\n                }\n\n                delete this._waiting[key];\n\n                if (w.resolve) {\n                    w.resolve(null);\n                }\n            }, timeout),\n        };\n\n        const promise = new (getPromise(this._win))<HTMLElement | null>(\n            (resolve, reject) => {\n                w.resolve = resolve;\n                w.reject = reject;\n            }\n        );\n\n        w.request = {\n            result: promise,\n            cancel: () => {\n                this._rejectWaiting(key, true);\n            },\n        };\n\n        if (accessibility && this.getElement(observedName)) {\n            // If the observed element is alread in DOM, but not accessible yet,\n            // we need to run the wait logic.\n            this._waitConditional(observedName);\n        }\n\n        return w.request;\n    }\n\n    requestFocus(\n        observedName: string,\n        timeout: number,\n        options: Pick<FocusOptions, \"preventScroll\"> = {}\n    ): Types.ObservedElementAsyncRequest<boolean> {\n        const requestId = ++this._lastRequestFocusId;\n        const currentRequestFocus = this._currentRequest;\n\n        if (currentRequestFocus) {\n            currentRequestFocus.cancel();\n        }\n\n        const request = this.waitElement(\n            observedName,\n            timeout,\n            ObservedElementAccessibilities.Focusable\n        );\n\n        this._currentRequest = request;\n        this._currentRequestTimestamp = Date.now();\n\n        request.result.finally(() => {\n            if (this._currentRequest === request) {\n                delete this._currentRequest;\n            }\n        });\n\n        return {\n            result: request.result.then((element) =>\n                this._lastRequestFocusId === requestId && element\n                    ? this._tabster.focusedElement.focus(\n                          element,\n                          true,\n                          undefined,\n                          options.preventScroll\n                      )\n                    : false\n            ),\n            cancel: () => {\n                request.cancel();\n            },\n        };\n    }\n\n    onObservedElementUpdate = (element: HTMLElement): void => {\n        const observed = getTabsterOnElement(this._tabster, element)?.observed;\n        const uid = getElementUId(this._win, element);\n        let info: ObservedElementInfo | undefined = this._observedById[uid];\n\n        if (observed && documentContains(element.ownerDocument, element)) {\n            if (!info) {\n                info = this._observedById[uid] = {\n                    element: new WeakHTMLElement(this._win, element),\n                };\n            }\n\n            observed.names.sort();\n            const observedNames = observed.names;\n            const prevNames = info.prevNames; // prevNames are already sorted\n\n            if (this._isObservedNamesUpdated(observedNames, prevNames)) {\n                if (prevNames) {\n                    prevNames.forEach((prevName) => {\n                        const obn = this._observedByName[prevName];\n\n                        if (obn && obn[uid]) {\n                            if (Object.keys(obn).length > 1) {\n                                delete obn[uid];\n                            } else {\n                                delete this._observedByName[prevName];\n                            }\n                        }\n                    });\n                }\n\n                info.prevNames = observedNames;\n            }\n\n            observedNames.forEach((observedName) => {\n                let obn = this._observedByName[observedName];\n\n                if (!obn) {\n                    obn = this._observedByName[observedName] = {};\n                }\n\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                obn[uid] = info!;\n\n                this._waitConditional(observedName);\n            });\n        } else if (info) {\n            const prevNames = info.prevNames;\n\n            if (prevNames) {\n                prevNames.forEach((prevName) => {\n                    const obn = this._observedByName[prevName];\n\n                    if (obn && obn[uid]) {\n                        if (Object.keys(obn).length > 1) {\n                            delete obn[uid];\n                        } else {\n                            delete this._observedByName[prevName];\n                        }\n                    }\n                });\n            }\n\n            delete this._observedById[uid];\n        }\n    };\n\n    private _waitConditional(observedName: string): void {\n        const waitingElementKey = \"_\" + observedName;\n        const waitingAccessibleElementKey = \"a\" + observedName;\n        const waitingFocusableElementKey = \"f\" + observedName;\n        const waitingElement = this._waiting[waitingElementKey];\n        const waitingAccessibleElement =\n            this._waiting[waitingAccessibleElementKey];\n        const waitingFocusableElement =\n            this._waiting[waitingFocusableElementKey];\n        const win = this._win();\n\n        const resolve = (\n            element: HTMLElement,\n            key: string,\n            waiting: ObservedWaiting,\n            accessibility: Types.ObservedElementAccessibility\n        ) => {\n            const observed = getTabsterOnElement(\n                this._tabster,\n                element\n            )?.observed;\n\n            if (!observed || !observed.names.includes(observedName)) {\n                return;\n            }\n\n            if (waiting.timer) {\n                win.clearTimeout(waiting.timer);\n            }\n\n            delete this._waiting[key];\n\n            if (waiting.resolve) {\n                waiting.resolve(element);\n            }\n\n            this.trigger(element, {\n                names: [observedName],\n                details: observed.details,\n                accessibility,\n            });\n        };\n\n        if (waitingElement) {\n            const element = this.getElement(observedName);\n\n            if (element && documentContains(element.ownerDocument, element)) {\n                resolve(\n                    element,\n                    waitingElementKey,\n                    waitingElement,\n                    ObservedElementAccessibilities.Any\n                );\n            }\n        }\n\n        if (\n            waitingAccessibleElement &&\n            !waitingAccessibleElement.conditionTimer\n        ) {\n            const resolveAccessible = () => {\n                const element = this.getElement(observedName);\n\n                if (\n                    element &&\n                    documentContains(element.ownerDocument, element) &&\n                    this._tabster.focusable.isAccessible(element)\n                ) {\n                    resolve(\n                        element,\n                        waitingAccessibleElementKey,\n                        waitingAccessibleElement,\n                        ObservedElementAccessibilities.Accessible\n                    );\n                } else {\n                    waitingAccessibleElement.conditionTimer = win.setTimeout(\n                        resolveAccessible,\n                        _conditionCheckTimeout\n                    );\n                }\n            };\n\n            resolveAccessible();\n        }\n\n        if (\n            waitingFocusableElement &&\n            !waitingFocusableElement.conditionTimer\n        ) {\n            const resolveFocusable = () => {\n                const element = this.getElement(observedName);\n\n                if (\n                    element &&\n                    documentContains(element.ownerDocument, element) &&\n                    this._tabster.focusable.isFocusable(element, true)\n                ) {\n                    resolve(\n                        element,\n                        waitingFocusableElementKey,\n                        waitingFocusableElement,\n                        ObservedElementAccessibilities.Focusable\n                    );\n                } else {\n                    waitingFocusableElement.conditionTimer = win.setTimeout(\n                        resolveFocusable,\n                        _conditionCheckTimeout\n                    );\n                }\n            };\n\n            resolveFocusable();\n        }\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport * as Types from \"./Types\";\nimport { getBoundingRect } from \"./Utils\";\n\ninterface WindowWithOutlineStyle extends Window {\n    __tabsterOutline?: {\n        style?: HTMLStyleElement;\n        elements?: Types.OutlineElements;\n    };\n}\n\nconst defaultProps: Types.OutlineProps = {\n    areaClass: \"tabster-focus-outline-area\",\n    outlineClass: \"tabster-focus-outline\",\n    outlineColor: \"#ff4500\",\n    outlineWidth: 2,\n    zIndex: 2147483647,\n};\n\nlet _props: Types.OutlineProps = defaultProps;\n\nclass OutlinePosition {\n    public left: number;\n    public top: number;\n    public right: number;\n    public bottom: number;\n\n    constructor(left: number, top: number, right: number, bottom: number) {\n        this.left = left;\n        this.top = top;\n        this.right = right;\n        this.bottom = bottom;\n    }\n\n    public equalsTo(other: OutlinePosition): boolean {\n        return (\n            this.left === other.left &&\n            this.top === other.top &&\n            this.right === other.right &&\n            this.bottom === other.bottom\n        );\n    }\n\n    public clone(): OutlinePosition {\n        return new OutlinePosition(\n            this.left,\n            this.top,\n            this.right,\n            this.bottom\n        );\n    }\n}\n\nexport class OutlineAPI implements Types.OutlineAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    private _updateTimer: number | undefined;\n    private _outlinedElement: HTMLElement | undefined;\n    private _curPos: OutlinePosition | undefined;\n    private _isVisible = false;\n    private _curOutlineElements: Types.OutlineElements | undefined;\n    private _allOutlineElements: Types.OutlineElements[] = [];\n    private _fullScreenElement: HTMLElement | undefined;\n    private _fullScreenEventName: string | undefined;\n    private _fullScreenElementName: string | undefined;\n\n    constructor(tabster: Types.TabsterCore) {\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n\n        tabster.queueInit(this._init);\n\n        if (typeof document !== \"undefined\") {\n            if (\"onfullscreenchange\" in document) {\n                this._fullScreenEventName = \"fullscreenchange\";\n                this._fullScreenElementName = \"fullscreenElement\";\n            } else if (\"onwebkitfullscreenchange\" in document) {\n                this._fullScreenEventName = \"webkitfullscreenchange\";\n                this._fullScreenElementName = \"webkitFullscreenElement\";\n            } else if (\"onmozfullscreenchange\" in document) {\n                this._fullScreenEventName = \"mozfullscreenchange\";\n                this._fullScreenElementName = \"mozFullScreenElement\";\n            } else if (\"onmsfullscreenchange\" in document) {\n                this._fullScreenEventName = \"msfullscreenchange\";\n                this._fullScreenElementName = \"msFullscreenElement\";\n            }\n        }\n    }\n\n    private _init = (): void => {\n        this._tabster.keyboardNavigation.subscribe(\n            this._onKeyboardNavigationStateChanged\n        );\n        this._tabster.focusedElement.subscribe(this._onFocus);\n\n        const win = this._win();\n\n        win.addEventListener(\"scroll\", this._onScroll, true); // Capture!\n\n        if (this._fullScreenEventName) {\n            win.document.addEventListener(\n                this._fullScreenEventName,\n                this._onFullScreenChanged\n            );\n        }\n    };\n\n    setup(props?: Partial<Types.OutlineProps>): void {\n        _props = { ..._props, ...props };\n\n        const win = this._win() as WindowWithOutlineStyle;\n\n        if (!win.__tabsterOutline) {\n            win.__tabsterOutline = {};\n        }\n\n        if (!win.__tabsterOutline.style) {\n            win.__tabsterOutline.style = appendStyles(win.document, _props);\n        }\n\n        if (!props || !props.areaClass) {\n            win.document.body.classList.add(defaultProps.areaClass);\n        } else {\n            win.document.body.classList.remove(defaultProps.areaClass);\n        }\n    }\n\n    dispose(): void {\n        const win = this._win();\n\n        if (this._updateTimer) {\n            win.clearTimeout(this._updateTimer);\n            this._updateTimer = undefined;\n        }\n\n        this._tabster.keyboardNavigation.unsubscribe(\n            this._onKeyboardNavigationStateChanged\n        );\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n\n        win.removeEventListener(\"scroll\", this._onScroll, true);\n\n        if (this._fullScreenEventName) {\n            win.document.removeEventListener(\n                this._fullScreenEventName,\n                this._onFullScreenChanged\n            );\n        }\n\n        this._allOutlineElements.forEach((outlineElements) =>\n            this._removeDOM(outlineElements.container)\n        );\n        this._allOutlineElements = [];\n\n        delete this._outlinedElement;\n        delete this._curPos;\n        delete this._curOutlineElements;\n        delete this._fullScreenElement;\n    }\n\n    private _onFullScreenChanged = (e: Event): void => {\n        if (!this._fullScreenElementName || !e.target) {\n            return;\n        }\n\n        const target = (e.target as Document).body || (e.target as HTMLElement);\n        const outlineElements = this._getDOM(target);\n\n        if (target.ownerDocument && outlineElements) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const fsElement: HTMLElement | null = (target.ownerDocument as any)[\n                this._fullScreenElementName\n            ];\n\n            if (fsElement) {\n                fsElement.appendChild(outlineElements.container);\n                this._fullScreenElement = fsElement;\n            } else {\n                target.ownerDocument.body.appendChild(\n                    outlineElements.container\n                );\n                this._fullScreenElement = undefined;\n            }\n        }\n    };\n\n    private _onKeyboardNavigationStateChanged = (): void => {\n        this._onFocus(this._tabster.focusedElement.getFocusedElement());\n    };\n\n    private _shouldShowCustomOutline(element: HTMLElement): boolean {\n        const tabsterOnElement = getTabsterOnElement(this._tabster, element);\n\n        if (\n            tabsterOnElement &&\n            tabsterOnElement.outline &&\n            tabsterOnElement.outline.isIgnored\n        ) {\n            return false;\n        }\n\n        for (let i: HTMLElement | null = element; i; i = i.parentElement) {\n            if (i.classList && i.classList.contains(_props.areaClass)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    private _onFocus = (e: HTMLElement | undefined): void => {\n        if (!this._updateElement(e) && this._isVisible) {\n            this._setVisibility(false);\n        }\n    };\n\n    private _updateElement(e: HTMLElement | undefined): boolean {\n        this._outlinedElement = undefined;\n\n        if (this._updateTimer) {\n            this._win().clearTimeout(this._updateTimer);\n            this._updateTimer = undefined;\n        }\n\n        this._curPos = undefined;\n\n        if (!this._tabster.keyboardNavigation.isNavigatingWithKeyboard()) {\n            return false;\n        }\n\n        if (e) {\n            // TODO: It's hard (and not necessary) to come up with every possible\n            // condition when there should be no outline, it's better to add an\n            // API to customize the ignores.\n            if (e.tagName === \"INPUT\") {\n                const inputType = (e as HTMLInputElement).type;\n                const outlinedInputTypes = {\n                    button: true,\n                    checkbox: true,\n                    file: true,\n                    image: true,\n                    radio: true,\n                    range: true,\n                    reset: true,\n                    submit: true,\n                };\n\n                if (!(inputType in outlinedInputTypes)) {\n                    return false;\n                }\n            } else if (\n                e.tagName === \"TEXTAREA\" ||\n                e.contentEditable === \"true\" ||\n                e.tagName === \"IFRAME\"\n            ) {\n                return false;\n            }\n\n            if (!this._shouldShowCustomOutline(e)) {\n                return false;\n            }\n\n            if (this._tabster.keyboardNavigation.isNavigatingWithKeyboard()) {\n                this._outlinedElement = e;\n                this._updateOutline();\n            }\n\n            return true;\n        }\n\n        return false;\n    }\n\n    private _onScroll = (e: UIEvent): void => {\n        if (\n            !this._outlinedElement ||\n            !OutlineAPI._isParentChild(\n                e.target as HTMLElement,\n                this._outlinedElement\n            )\n        ) {\n            return;\n        }\n\n        this._curPos = undefined;\n\n        this._setOutlinePosition();\n    };\n\n    private _updateOutline(): void {\n        this._setOutlinePosition();\n\n        if (this._updateTimer) {\n            this._win().clearTimeout(this._updateTimer);\n            this._updateTimer = undefined;\n        }\n\n        if (!this._outlinedElement) {\n            return;\n        }\n\n        this._updateTimer = this._win().setTimeout(() => {\n            this._updateTimer = undefined;\n            this._updateOutline();\n        }, 30);\n    }\n\n    private _setVisibility(visible: boolean): void {\n        this._isVisible = visible;\n\n        if (this._curOutlineElements) {\n            if (visible) {\n                this._curOutlineElements.container.classList.add(\n                    `${_props.outlineClass}_visible`\n                );\n            } else {\n                this._curOutlineElements.container.classList.remove(\n                    `${_props.outlineClass}_visible`\n                );\n                this._curPos = undefined;\n            }\n        }\n    }\n\n    private _setOutlinePosition(): void {\n        if (!this._outlinedElement) {\n            return;\n        }\n\n        let boundingRect = getBoundingRect(this._win, this._outlinedElement);\n\n        const position = new OutlinePosition(\n            boundingRect.left,\n            boundingRect.top,\n            boundingRect.right,\n            boundingRect.bottom\n        );\n\n        if (this._curPos && position.equalsTo(this._curPos)) {\n            return;\n        }\n\n        const outlineElements = this._getDOM(this._outlinedElement);\n        const win =\n            this._outlinedElement.ownerDocument &&\n            this._outlinedElement.ownerDocument.defaultView;\n\n        if (!outlineElements || !win) {\n            return;\n        }\n\n        if (this._curOutlineElements !== outlineElements) {\n            this._setVisibility(false);\n            this._curOutlineElements = outlineElements;\n        }\n\n        this._curPos = position;\n\n        const p = position.clone();\n        let hasAbsolutePositionedParent = false;\n        let hasFixedPositionedParent = false;\n\n        const container = outlineElements.container;\n        const scrollingElement =\n            container &&\n            container.ownerDocument &&\n            (container.ownerDocument.scrollingElement as HTMLElement);\n\n        if (!scrollingElement) {\n            return;\n        }\n\n        for (\n            let parent = this._outlinedElement.parentElement;\n            parent && parent.nodeType === Node.ELEMENT_NODE;\n            parent = parent.parentElement\n        ) {\n            // The element might be partially visible within its scrollable parent,\n            // reduce the bounding rect if this is the case.\n\n            if (parent === this._fullScreenElement) {\n                break;\n            }\n\n            boundingRect = getBoundingRect(this._win, parent);\n\n            const win =\n                parent.ownerDocument && parent.ownerDocument.defaultView;\n\n            if (!win) {\n                return;\n            }\n\n            const computedStyle = win.getComputedStyle(parent);\n            const position = computedStyle.position;\n\n            if (position === \"absolute\") {\n                hasAbsolutePositionedParent = true;\n            } else if (position === \"fixed\" || position === \"sticky\") {\n                hasFixedPositionedParent = true;\n            }\n\n            if (computedStyle.overflow === \"visible\") {\n                continue;\n            }\n\n            if (\n                (!hasAbsolutePositionedParent && !hasFixedPositionedParent) ||\n                computedStyle.overflow === \"hidden\"\n            ) {\n                if (boundingRect.left > p.left) {\n                    p.left = boundingRect.left;\n                }\n                if (boundingRect.top > p.top) {\n                    p.top = boundingRect.top;\n                }\n                if (boundingRect.right < p.right) {\n                    p.right = boundingRect.right;\n                }\n                if (boundingRect.bottom < p.bottom) {\n                    p.bottom = boundingRect.bottom;\n                }\n            }\n        }\n\n        const allRect = getBoundingRect(this._win, scrollingElement);\n        const allWidth = allRect.left + allRect.right;\n        const allHeight = allRect.top + allRect.bottom;\n        const ow = _props.outlineWidth;\n\n        p.left = p.left > ow ? p.left - ow : 0;\n        p.top = p.top > ow ? p.top - ow : 0;\n        p.right = p.right < allWidth - ow ? p.right + ow : allWidth;\n        p.bottom = p.bottom < allHeight - ow ? p.bottom + ow : allHeight;\n\n        const width = p.right - p.left;\n        const height = p.bottom - p.top;\n\n        if (width > ow * 2 && height > ow * 2) {\n            const leftBorderNode = outlineElements.left;\n            const topBorderNode = outlineElements.top;\n            const rightBorderNode = outlineElements.right;\n            const bottomBorderNode = outlineElements.bottom;\n            const sx =\n                this._fullScreenElement || hasFixedPositionedParent\n                    ? 0\n                    : win.pageXOffset;\n            const sy =\n                this._fullScreenElement || hasFixedPositionedParent\n                    ? 0\n                    : win.pageYOffset;\n\n            container.style.position = hasFixedPositionedParent\n                ? \"fixed\"\n                : \"absolute\";\n\n            container.style.background = _props.outlineColor;\n\n            leftBorderNode.style.width =\n                rightBorderNode.style.width =\n                topBorderNode.style.height =\n                bottomBorderNode.style.height =\n                    _props.outlineWidth + \"px\";\n\n            leftBorderNode.style.left =\n                topBorderNode.style.left =\n                bottomBorderNode.style.left =\n                    p.left + sx + \"px\";\n            rightBorderNode.style.left = p.left + sx + width - ow + \"px\";\n\n            leftBorderNode.style.top =\n                rightBorderNode.style.top =\n                topBorderNode.style.top =\n                    p.top + sy + \"px\";\n            bottomBorderNode.style.top = p.top + sy + height - ow + \"px\";\n\n            leftBorderNode.style.height = rightBorderNode.style.height =\n                height + \"px\";\n\n            topBorderNode.style.width = bottomBorderNode.style.width =\n                width + \"px\";\n\n            this._setVisibility(true);\n        } else {\n            this._setVisibility(false);\n        }\n    }\n\n    private _getDOM(\n        contextElement: HTMLElement\n    ): Types.OutlineElements | undefined {\n        const doc = contextElement.ownerDocument;\n        const win = (doc && doc.defaultView) as WindowWithOutlineStyle;\n\n        if (!doc || !win || !win.__tabsterOutline) {\n            return undefined;\n        }\n\n        if (!win.__tabsterOutline.style) {\n            win.__tabsterOutline.style = appendStyles(doc, _props);\n        }\n\n        if (!win.__tabsterOutline.elements) {\n            const outlineElements: Types.OutlineElements = {\n                container: doc.createElement(\"div\"),\n                left: doc.createElement(\"div\"),\n                top: doc.createElement(\"div\"),\n                right: doc.createElement(\"div\"),\n                bottom: doc.createElement(\"div\"),\n            };\n\n            outlineElements.container.className = _props.outlineClass;\n            outlineElements.left.className = `${_props.outlineClass}__left`;\n            outlineElements.top.className = `${_props.outlineClass}__top`;\n            outlineElements.right.className = `${_props.outlineClass}__right`;\n            outlineElements.bottom.className = `${_props.outlineClass}__bottom`;\n\n            outlineElements.container.appendChild(outlineElements.left);\n            outlineElements.container.appendChild(outlineElements.top);\n            outlineElements.container.appendChild(outlineElements.right);\n            outlineElements.container.appendChild(outlineElements.bottom);\n\n            doc.body.appendChild(outlineElements.container);\n\n            win.__tabsterOutline.elements = outlineElements;\n\n            // TODO: Make a garbage collector to remove the references\n            // to the outlines which are nowhere in the DOM anymore.\n            this._allOutlineElements.push(outlineElements);\n        }\n\n        return win.__tabsterOutline.elements;\n    }\n\n    private _removeDOM(contextElement: HTMLElement): void {\n        const win = (contextElement.ownerDocument &&\n            contextElement.ownerDocument.defaultView) as WindowWithOutlineStyle;\n        const outline = win && win.__tabsterOutline;\n\n        if (!outline) {\n            return;\n        }\n\n        if (outline.style && outline.style.parentNode) {\n            outline.style.parentNode.removeChild(outline.style);\n\n            delete outline.style;\n        }\n\n        const outlineElements = outline && outline.elements;\n\n        if (outlineElements) {\n            if (outlineElements.container.parentNode) {\n                outlineElements.container.parentNode.removeChild(\n                    outlineElements.container\n                );\n            }\n\n            delete outline.elements;\n        }\n    }\n\n    private static _isParentChild(\n        parent: HTMLElement,\n        child: HTMLElement\n    ): boolean {\n        return (\n            child === parent ||\n            // tslint:disable-next-line:no-bitwise\n            !!(\n                parent.compareDocumentPosition(child) &\n                document.DOCUMENT_POSITION_CONTAINED_BY\n            )\n        );\n    }\n}\n\nfunction appendStyles(\n    document: HTMLDocument,\n    props: Types.OutlineProps\n): HTMLStyleElement {\n    const style = document.createElement(\"style\");\n    style.type = \"text/css\";\n    style.appendChild(document.createTextNode(getOutlineStyles(props)));\n    document.head.appendChild(style);\n    return style;\n}\n\nfunction getOutlineStyles(props: Types.OutlineProps): string {\n    return `\n.${props.areaClass} *, .${props.areaClass} *:focus {\noutline: none !important;\n}\n\n.${props.outlineClass} {\ndisplay: none;\nposition: absolute;\nwidth: 0;\nheight: 0;\nleft: 0;\ntop: 0;\nz-index: ${props.zIndex};\n}\n\n.${props.outlineClass}.${props.outlineClass}_visible {\ndisplay: block;\n}\n\n.${props.outlineClass}__left,\n.${props.outlineClass}__top,\n.${props.outlineClass}__right,\n.${props.outlineClass}__bottom {\nposition: absolute;\nbackground: inherit;\n}`;\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as Types from \"./Types\";\n\n/**\n * Allows default or user focus behaviour on the DOM subtree\n * i.e. Tabster will not control focus events within an uncontrolled area\n */\nexport class UncontrolledAPI implements Types.UncontrolledAPI {\n    private _isUncontrolledCompletely?: (\n        element: HTMLElement,\n        completely: boolean\n    ) => boolean | undefined;\n\n    constructor(\n        isUncontrolledCompletely?: (\n            element: HTMLElement,\n            completely: boolean\n        ) => boolean | undefined\n    ) {\n        this._isUncontrolledCompletely = isUncontrolledCompletely;\n    }\n\n    isUncontrolledCompletely(\n        element: HTMLElement,\n        completely: boolean\n    ): boolean {\n        const isUncontrolledCompletely = this._isUncontrolledCompletely?.(\n            element,\n            completely\n        );\n        // If isUncontrolledCompletely callback is not defined or returns undefined, then the default\n        // behaviour is to return the uncontrolled.completely value from the element.\n        return isUncontrolledCompletely === undefined\n            ? completely\n            : isUncontrolledCompletely;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport type {\n    FocusedElementState,\n    GetWindow,\n    KeyboardNavigationState,\n    Restorer as RestorerInterface,\n    RestorerAPI as RestorerAPIType,\n    RestorerProps,\n    TabsterCore,\n} from \"./Types\";\nimport { RestorerTypes, AsyncFocusSources } from \"./Consts\";\nimport {\n    RestorerRestoreFocusEvent,\n    RestorerRestoreFocusEventName,\n} from \"./Events\";\nimport { TabsterPart, WeakHTMLElement } from \"./Utils\";\nimport { dom } from \"./DOMAPI\";\n\nclass Restorer extends TabsterPart<RestorerProps> implements RestorerInterface {\n    private _hasFocus = false;\n\n    constructor(\n        tabster: TabsterCore,\n        element: HTMLElement,\n        props: RestorerProps\n    ) {\n        super(tabster, element, props);\n\n        if (this._props.type === RestorerTypes.Source) {\n            const element = this._element?.get();\n            element?.addEventListener(\"focusout\", this._onFocusOut);\n            element?.addEventListener(\"focusin\", this._onFocusIn);\n\n            // set hasFocus when the instance is created, in case focus has already moved within it\n            this._hasFocus = dom.nodeContains(\n                element,\n                element && dom.getActiveElement(element.ownerDocument)\n            );\n        }\n    }\n\n    dispose(): void {\n        if (this._props.type === RestorerTypes.Source) {\n            const element = this._element?.get();\n            element?.removeEventListener(\"focusout\", this._onFocusOut);\n            element?.removeEventListener(\"focusin\", this._onFocusIn);\n\n            if (this._hasFocus) {\n                const doc = this._tabster.getWindow().document;\n                doc.body.dispatchEvent(new RestorerRestoreFocusEvent());\n            }\n        }\n    }\n\n    private _onFocusOut = (e: FocusEvent) => {\n        const element = this._element?.get();\n        if (element && e.relatedTarget === null) {\n            element.dispatchEvent(new RestorerRestoreFocusEvent());\n        }\n        if (\n            element &&\n            !dom.nodeContains(element, e.relatedTarget as HTMLElement | null)\n        ) {\n            this._hasFocus = false;\n        }\n    };\n\n    private _onFocusIn = () => {\n        this._hasFocus = true;\n    };\n}\n\nclass History {\n    private static readonly DEPTH = 10;\n    private _stack: WeakHTMLElement<HTMLElement>[] = [];\n    private _getWindow: GetWindow;\n    constructor(getWindow: GetWindow) {\n        this._getWindow = getWindow;\n    }\n    /**\n     * Push a weak element to the top of the history stack.\n     * If the stack is full, the bottom weak element is removed.\n     * If the element is already at the top of the stack, it is not duplicated.\n     */\n    push(element: HTMLElement): void {\n        // Don't duplicate the top of history\n        if (this._stack[this._stack.length - 1]?.get() === element) {\n            return;\n        }\n\n        if (this._stack.length > History.DEPTH) {\n            this._stack.shift();\n        }\n        this._stack.push(\n            new WeakHTMLElement<HTMLElement>(this._getWindow, element)\n        );\n    }\n    /**\n     * Pop the first element from the history that satisfies the callback.\n     * The history is searched from the top to the bottom (from the most recent to the least recent).\n     *\n     * If a weak reference to the element is broken,\n     * or the element is no longer in the DOM,\n     * the element is removed from the top of the stack while popping.\n     *\n     * If no matching element is found, undefined is returned.\n     * If the stack is empty, undefined is returned.\n     */\n    pop(\n        filter: (element: HTMLElement) => boolean = () => true\n    ): HTMLElement | undefined {\n        const doc = this._getWindow().document;\n        for (let index = this._stack.length - 1; index >= 0; index--) {\n            const maybeElement = this._stack.pop()?.get();\n            if (\n                maybeElement &&\n                dom.nodeContains(\n                    doc.body,\n                    dom.getParentElement(maybeElement)\n                ) &&\n                filter(maybeElement)\n            ) {\n                return maybeElement;\n            }\n        }\n        return undefined;\n    }\n}\n\nexport class RestorerAPI implements RestorerAPIType {\n    private _tabster: TabsterCore;\n    private _history: History;\n    private _keyboardNavState: KeyboardNavigationState;\n    private _focusedElementState: FocusedElementState;\n    private _getWindow: GetWindow;\n\n    constructor(tabster: TabsterCore) {\n        this._tabster = tabster;\n        this._getWindow = tabster.getWindow;\n        this._getWindow().addEventListener(\n            RestorerRestoreFocusEventName,\n            this._onRestoreFocus\n        );\n        this._history = new History(this._getWindow);\n\n        this._keyboardNavState = tabster.keyboardNavigation;\n        this._focusedElementState = tabster.focusedElement;\n\n        this._focusedElementState.subscribe(this._onFocusIn);\n    }\n\n    dispose(): void {\n        const win = this._getWindow();\n        this._focusedElementState.unsubscribe(this._onFocusIn);\n\n        this._focusedElementState.cancelAsyncFocus(AsyncFocusSources.Restorer);\n\n        win.removeEventListener(\n            RestorerRestoreFocusEventName,\n            this._onRestoreFocus\n        );\n    }\n\n    private _onRestoreFocus = (e: Event) => {\n        this._focusedElementState.cancelAsyncFocus(AsyncFocusSources.Restorer);\n\n        // ShadowDOM will have shadowRoot as e.target.\n        const source = e.composedPath()[0] as HTMLElement | undefined;\n\n        if (source) {\n            // source id must be recovered before source is removed from DOM\n            // otherwise it'll be unreachable\n            // (as tabster on element will not be available through getTabsterOnElement)\n            const sourceId = getTabsterOnElement(\n                this._tabster,\n                source\n            )?.restorer?.getProps().id;\n\n            this._focusedElementState.requestAsyncFocus(\n                AsyncFocusSources.Restorer,\n                () => this._restoreFocus(source, sourceId),\n                0\n            );\n        }\n    };\n\n    private _onFocusIn = (element: HTMLElement | undefined) => {\n        if (!element) {\n            return;\n        }\n\n        const tabsterAttribute = getTabsterOnElement(this._tabster, element);\n        if (\n            tabsterAttribute?.restorer?.getProps().type !== RestorerTypes.Target\n        ) {\n            return;\n        }\n\n        this._history.push(element);\n    };\n\n    private _restoreFocus = (source: HTMLElement, sourceId?: string) => {\n        // don't restore focus if focus isn't lost to body\n        const doc = this._getWindow().document;\n        if (dom.getActiveElement(doc) !== doc.body) {\n            return;\n        }\n        if (\n            // clicking on any empty space focuses body - this is can be a false positive\n            !this._keyboardNavState.isNavigatingWithKeyboard() &&\n            // Source no longer exists on DOM - always restore focus\n            dom.nodeContains(doc.body, source)\n        ) {\n            return;\n        }\n\n        const getId = (element: HTMLElement) =>\n            getTabsterOnElement(this._tabster, element)?.restorer?.getProps()\n                .id;\n\n        this._history.pop((target) => sourceId === getId(target))?.focus();\n    };\n\n    public createRestorer(element: HTMLElement, props: RestorerProps) {\n        const restorer = new Restorer(this._tabster, element, props);\n        // Focus might already be on a restorer target when it gets created so the focusin will not do anything\n        if (\n            props.type === RestorerTypes.Target &&\n            dom.getActiveElement(element.ownerDocument) === element\n        ) {\n            this._history.push(element);\n        }\n\n        return restorer;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport function getActiveElement(doc: Document): Element | null {\n    let activeElement = doc.activeElement;\n\n    while (activeElement?.shadowRoot?.activeElement) {\n        activeElement = activeElement.shadowRoot.activeElement;\n    }\n\n    return activeElement;\n}\n\nexport function nodeContains(\n    node: Node | null | undefined,\n    otherNode: Node | null | undefined\n): boolean {\n    if (!node || !otherNode) {\n        return false;\n    }\n\n    let currentNode: HTMLElement | Node | null | undefined = otherNode;\n\n    while (currentNode) {\n        if (currentNode === node) {\n            return true;\n        }\n\n        if (\n            typeof (currentNode as HTMLSlotElement).assignedElements !==\n                \"function\" &&\n            (currentNode as HTMLElement).assignedSlot?.parentNode\n        ) {\n            // Element is slotted\n            currentNode = (currentNode as HTMLElement).assignedSlot?.parentNode;\n        } else if (currentNode.nodeType === document.DOCUMENT_FRAGMENT_NODE) {\n            // Element is in shadow root\n            currentNode = (currentNode as ShadowRoot).host;\n        } else {\n            currentNode = currentNode.parentNode;\n        }\n    }\n\n    return false;\n}\n\nexport function getParentNode(\n    node: Node | null | undefined\n): ParentNode | null {\n    if (!node) {\n        return null;\n    }\n\n    if (\n        node.nodeType === Node.DOCUMENT_FRAGMENT_NODE &&\n        (node as ShadowRoot).host\n    ) {\n        return (node as ShadowRoot).host;\n    }\n\n    return node.parentNode;\n}\n\nexport function getParentElement(\n    element: HTMLElement | null | undefined\n): HTMLElement | null {\n    for (\n        let parentNode = getParentNode(element);\n        parentNode;\n        parentNode = getParentNode(parentNode)\n    ) {\n        if (parentNode.nodeType === Node.ELEMENT_NODE) {\n            return parentNode as HTMLElement;\n        }\n    }\n\n    return null;\n}\n\nexport function getFirstChild(node: Node | null | undefined): ChildNode | null {\n    if (!node) {\n        return null;\n    }\n\n    if ((node as Element).shadowRoot) {\n        const child = getFirstChild((node as Element).shadowRoot);\n\n        if (child) {\n            return child;\n        }\n\n        // If the attached shadowRoot has no children, just try ordinary children,\n        // that might come after.\n    }\n\n    return node.firstChild;\n}\n\nexport function getLastChild(node: Node | null | undefined): ChildNode | null {\n    if (!node) {\n        return null;\n    }\n\n    if (!node.lastChild && (node as Element).shadowRoot) {\n        return getLastChild((node as Element).shadowRoot);\n    }\n\n    return node.lastChild;\n}\n\nexport function getNextSibling(\n    node: Node | null | undefined\n): ChildNode | null {\n    return node?.nextSibling || null;\n}\n\nexport function getPreviousSibling(\n    node: Node | null | undefined\n): ChildNode | null {\n    if (!node) {\n        return null;\n    }\n\n    let sibling = node.previousSibling;\n\n    if (!sibling && node.parentElement?.shadowRoot) {\n        sibling = getLastChild(node.parentElement.shadowRoot);\n    }\n\n    return sibling;\n}\n\nexport function getFirstElementChild(\n    element: Element | null | undefined\n): Element | null {\n    let child = getFirstChild(element);\n\n    while (child && child.nodeType !== Node.ELEMENT_NODE) {\n        child = getNextSibling(child);\n    }\n\n    return child as Element | null;\n}\n\nexport function getLastElementChild(\n    element: Element | null | undefined\n): Element | null {\n    let child = getLastChild(element);\n\n    while (child && child.nodeType !== Node.ELEMENT_NODE) {\n        child = getPreviousSibling(child);\n    }\n\n    return child as Element | null;\n}\n\nexport function getNextElementSibling(\n    element: Element | null | undefined\n): Element | null {\n    let sibling = getNextSibling(element);\n\n    while (sibling && sibling.nodeType !== Node.ELEMENT_NODE) {\n        sibling = getNextSibling(sibling);\n    }\n\n    return sibling as Element | null;\n}\n\nexport function getPreviousElementSibling(\n    element: Element | null | undefined\n): Element | null {\n    let sibling = getPreviousSibling(element);\n\n    while (sibling && sibling.nodeType !== Node.ELEMENT_NODE) {\n        sibling = getPreviousSibling(sibling);\n    }\n\n    return sibling as Element | null;\n}\n\nexport function appendChild(parent: Node, child: Node): Node {\n    const shadowRoot = (parent as Element).shadowRoot;\n    return shadowRoot\n        ? shadowRoot.appendChild(child)\n        : parent.appendChild(child);\n}\n\nexport function insertBefore(\n    parent: Node,\n    child: Node,\n    referenceChild: Node | null\n): Node {\n    const shadowRoot = (parent as Element).shadowRoot;\n    return shadowRoot\n        ? shadowRoot.insertBefore(child, referenceChild)\n        : parent.insertBefore(child, referenceChild);\n}\n\ninterface ShadowRootWithGetSelection extends ShadowRoot {\n    getSelection?: typeof Window.prototype.getSelection;\n}\n\nexport function getSelection(ref: Node): Selection | null {\n    const win = ref.ownerDocument?.defaultView;\n\n    if (!win) {\n        return null;\n    }\n\n    for (let el: Node | null = ref; el; el = el.parentNode) {\n        if (el.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            const tmp = el as ShadowRootWithGetSelection;\n\n            // ShadowRoot.getSelection() exists only in Chrome.\n            if (tmp.getSelection) {\n                return tmp.getSelection() || null;\n            }\n\n            break;\n        }\n    }\n\n    return win.getSelection() || null;\n}\n\nexport function getElementsByName(\n    referenceElement: HTMLElement,\n    name: string\n): NodeListOf<HTMLElement> {\n    for (let el: Node | null = referenceElement; el; el = el.parentNode) {\n        if (el.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            // Shadow root doesn't have getElementsByName()...\n            return (el as ShadowRoot).querySelectorAll(`[name=${name}]`);\n        }\n    }\n\n    return referenceElement.ownerDocument.getElementsByName(name);\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getLastElementChild, nodeContains } from \"./DOMFunctions\";\n\nfunction getLastChild(container: HTMLElement): HTMLElement | undefined {\n    let lastChild: HTMLElement | null = null;\n\n    for (\n        let i = getLastElementChild(container);\n        i;\n        i = getLastElementChild(i)\n    ) {\n        lastChild = i as HTMLElement;\n    }\n\n    return lastChild || undefined;\n}\n\nexport class ShadowTreeWalker implements TreeWalker {\n    public readonly filter: NodeFilter | null;\n    public readonly root: Node;\n    public readonly whatToShow: number;\n\n    private _doc: Document;\n    private _walkerStack: TreeWalker[] = [];\n    private _currentNode: Node;\n    private _currentSetFor: Set<TreeWalker> = new Set();\n\n    constructor(\n        doc: Document,\n        root: Node,\n        whatToShow?: number,\n        filter?: NodeFilter | null\n    ) {\n        this._doc = doc;\n        this.root = root;\n        this.filter = filter ?? null;\n        this.whatToShow = whatToShow ?? NodeFilter.SHOW_ALL;\n        this._currentNode = root;\n\n        this._walkerStack.unshift(\n            doc.createTreeWalker(root, whatToShow, this._acceptNode)\n        );\n\n        const shadowRoot = (root as Element).shadowRoot;\n\n        if (shadowRoot) {\n            const walker = this._doc.createTreeWalker(\n                shadowRoot,\n                this.whatToShow,\n                { acceptNode: this._acceptNode }\n            );\n\n            this._walkerStack.unshift(walker);\n        }\n    }\n\n    private _acceptNode = (node: Node): number => {\n        if (node.nodeType === Node.ELEMENT_NODE) {\n            const shadowRoot = (node as Element).shadowRoot;\n\n            if (shadowRoot) {\n                const walker = this._doc.createTreeWalker(\n                    shadowRoot,\n                    this.whatToShow,\n                    { acceptNode: this._acceptNode }\n                );\n\n                this._walkerStack.unshift(walker);\n\n                return NodeFilter.FILTER_ACCEPT;\n            } else {\n                if (typeof this.filter === \"function\") {\n                    return this.filter(node);\n                } else if (this.filter?.acceptNode) {\n                    return this.filter.acceptNode(node);\n                } else if (this.filter === null) {\n                    return NodeFilter.FILTER_ACCEPT;\n                }\n            }\n        }\n\n        return NodeFilter.FILTER_SKIP;\n    };\n\n    public get currentNode(): Node {\n        return this._currentNode;\n    }\n\n    public set currentNode(node: Node) {\n        if (!nodeContains(this.root, node)) {\n            throw new Error(\n                \"Cannot set currentNode to a node that is not contained by the root node.\"\n            );\n        }\n\n        const walkers: TreeWalker[] = [];\n        let curNode: Node | null | undefined = node;\n        let currentWalkerCurrentNode = node;\n\n        this._currentNode = node;\n\n        while (curNode && curNode !== this.root) {\n            if (curNode.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n                const shadowRoot = curNode as ShadowRoot;\n\n                const walker = this._doc.createTreeWalker(\n                    shadowRoot,\n                    this.whatToShow,\n                    { acceptNode: this._acceptNode }\n                );\n\n                walkers.push(walker);\n\n                walker.currentNode = currentWalkerCurrentNode;\n\n                this._currentSetFor.add(walker);\n\n                curNode = currentWalkerCurrentNode = shadowRoot.host;\n            } else {\n                curNode = curNode.parentNode;\n            }\n        }\n\n        const walker = this._doc.createTreeWalker(this.root, this.whatToShow, {\n            acceptNode: this._acceptNode,\n        });\n\n        walkers.push(walker);\n\n        walker.currentNode = currentWalkerCurrentNode;\n\n        this._currentSetFor.add(walker);\n\n        this._walkerStack = walkers;\n    }\n\n    public firstChild(): Node | null {\n        if (__DEV__) {\n            throw new Error(\"Method not implemented.\");\n        }\n\n        return null;\n    }\n\n    public lastChild(): Node | null {\n        if (__DEV__) {\n            throw new Error(\"Method not implemented.\");\n        }\n\n        return null;\n    }\n\n    public nextNode(): Node | null {\n        const nextNode = this._walkerStack[0].nextNode();\n\n        if (nextNode) {\n            const shadowRoot = (nextNode as Element).shadowRoot;\n\n            if (shadowRoot) {\n                let nodeResult: number | undefined;\n\n                if (typeof this.filter === \"function\") {\n                    nodeResult = this.filter(nextNode);\n                } else if (this.filter?.acceptNode) {\n                    nodeResult = this.filter.acceptNode(nextNode);\n                }\n\n                if (nodeResult === NodeFilter.FILTER_ACCEPT) {\n                    return nextNode;\n                }\n\n                // _acceptNode should have added new walker for this shadow,\n                // go in recursively.\n                return this.nextNode();\n            }\n\n            return nextNode;\n        } else {\n            if (this._walkerStack.length > 1) {\n                this._walkerStack.shift();\n\n                return this.nextNode();\n            } else {\n                return null;\n            }\n        }\n    }\n\n    public previousNode(): Node | null {\n        const currentWalker = this._walkerStack[0];\n\n        if (currentWalker.currentNode === currentWalker.root) {\n            if (this._currentSetFor.has(currentWalker)) {\n                this._currentSetFor.delete(currentWalker);\n\n                if (this._walkerStack.length > 1) {\n                    this._walkerStack.shift();\n                    return this.previousNode();\n                } else {\n                    return null;\n                }\n            }\n\n            const lastChild = getLastChild(currentWalker.root as HTMLElement);\n\n            if (lastChild) {\n                currentWalker.currentNode = lastChild;\n\n                let nodeResult: number | undefined;\n\n                if (typeof this.filter === \"function\") {\n                    nodeResult = this.filter(lastChild);\n                } else if (this.filter?.acceptNode) {\n                    nodeResult = this.filter.acceptNode(lastChild);\n                }\n\n                if (nodeResult === NodeFilter.FILTER_ACCEPT) {\n                    return lastChild;\n                }\n            }\n        }\n\n        const previousNode = currentWalker.previousNode();\n\n        if (previousNode) {\n            const shadowRoot = (previousNode as Element).shadowRoot;\n\n            if (shadowRoot) {\n                let nodeResult: number | undefined;\n\n                if (typeof this.filter === \"function\") {\n                    nodeResult = this.filter(previousNode);\n                } else if (this.filter?.acceptNode) {\n                    nodeResult = this.filter.acceptNode(previousNode);\n                }\n\n                if (nodeResult === NodeFilter.FILTER_ACCEPT) {\n                    return previousNode;\n                }\n\n                // _acceptNode should have added new walker for this shadow,\n                // go in recursively.\n                return this.previousNode();\n            }\n\n            return previousNode;\n        } else {\n            if (this._walkerStack.length > 1) {\n                this._walkerStack.shift();\n\n                return this.previousNode();\n            } else {\n                return null;\n            }\n        }\n    }\n\n    public nextSibling(): Node | null {\n        if (__DEV__) {\n            throw new Error(\"Method not implemented.\");\n        }\n\n        return null;\n    }\n\n    public previousSibling(): Node | null {\n        if (__DEV__) {\n            throw new Error(\"Method not implemented.\");\n        }\n\n        return null;\n    }\n\n    public parentNode(): Node | null {\n        if (__DEV__) {\n            throw new Error(\"Method not implemented.\");\n        }\n\n        return null;\n    }\n}\n\nexport function createShadowTreeWalker(\n    doc: Document,\n    root: Node,\n    whatToShow?: number,\n    filter?: NodeFilter | null\n) {\n    return new ShadowTreeWalker(doc, root, whatToShow, filter);\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { nodeContains } from \"./DOMFunctions\";\n\ninterface OverridenAttachShadow {\n    __origAttachShadow?: typeof Element.prototype.attachShadow;\n}\n\nexport class ShadowMutationObserver implements MutationObserver {\n    private static _shadowObservers: Set<ShadowMutationObserver> = new Set();\n\n    private _root?: Node;\n    private _options?: MutationObserverInit;\n    private _callback: MutationCallback;\n    private _observer: MutationObserver;\n    private _subObservers: Map<Node, MutationObserver>;\n    private _isObserving = false;\n\n    private static _overrideAttachShadow(\n        win: Window & typeof globalThis\n    ): void {\n        const origAttachShadow = win.Element.prototype.attachShadow;\n\n        if ((origAttachShadow as OverridenAttachShadow).__origAttachShadow) {\n            return;\n        }\n\n        Element.prototype.attachShadow = function (\n            this: Element,\n            options?: ShadowRootInit\n        ): ShadowRoot {\n            const shadowRoot = origAttachShadow.call(this, options);\n\n            for (const shadowObserver of ShadowMutationObserver._shadowObservers) {\n                shadowObserver._addSubObserver(shadowRoot);\n            }\n\n            return shadowRoot;\n        };\n\n        (\n            Element.prototype.attachShadow as OverridenAttachShadow\n        ).__origAttachShadow = origAttachShadow;\n    }\n\n    constructor(callback: MutationCallback) {\n        this._callback = callback;\n        this._observer = new MutationObserver(this._callbackWrapper);\n        this._subObservers = new Map();\n    }\n\n    private _callbackWrapper = (\n        mutations: MutationRecord[],\n        observer: MutationObserver\n    ): void => {\n        for (const mutation of mutations) {\n            if (mutation.type === \"childList\") {\n                const removed = mutation.removedNodes;\n                const added = mutation.addedNodes;\n\n                for (let i = 0; i < removed.length; i++) {\n                    this._walkShadows(removed[i], true);\n                }\n\n                for (let i = 0; i < added.length; i++) {\n                    this._walkShadows(added[i]);\n                }\n            }\n        }\n\n        this._callback(mutations, observer);\n    };\n\n    private _addSubObserver(shadowRoot: ShadowRoot): void {\n        if (\n            !this._options ||\n            !this._callback ||\n            this._subObservers.has(shadowRoot)\n        ) {\n            return;\n        }\n\n        if (this._options.subtree && nodeContains(this._root, shadowRoot)) {\n            const subObserver = new MutationObserver(this._callbackWrapper);\n\n            this._subObservers.set(shadowRoot, subObserver);\n\n            if (this._isObserving) {\n                subObserver.observe(shadowRoot, this._options);\n            }\n\n            this._walkShadows(shadowRoot);\n        }\n    }\n\n    public disconnect(): void {\n        this._isObserving = false;\n\n        delete this._options;\n\n        ShadowMutationObserver._shadowObservers.delete(this);\n\n        for (const subObserver of this._subObservers.values()) {\n            subObserver.disconnect();\n        }\n\n        this._subObservers.clear();\n\n        this._observer.disconnect();\n    }\n\n    public observe(target: Node, options?: MutationObserverInit): void {\n        const doc =\n            target.nodeType === Node.DOCUMENT_NODE\n                ? (target as Document)\n                : target.ownerDocument;\n        const win = doc?.defaultView as Window & typeof globalThis;\n\n        if (!doc || !win) {\n            return;\n        }\n\n        ShadowMutationObserver._overrideAttachShadow(win);\n        ShadowMutationObserver._shadowObservers.add(this);\n\n        this._root = target;\n        this._options = options;\n\n        this._isObserving = true;\n\n        this._observer.observe(target, options);\n\n        this._walkShadows(target);\n    }\n\n    private _walkShadows(target: Node, remove?: boolean): void {\n        const doc =\n            target.nodeType === Node.DOCUMENT_NODE\n                ? (target as Document)\n                : target.ownerDocument;\n\n        if (!doc) {\n            return;\n        }\n\n        if (target === doc) {\n            target = doc.body;\n        } else {\n            const shadowRoot = (target as Element).shadowRoot;\n\n            if (shadowRoot) {\n                this._addSubObserver(shadowRoot);\n                return;\n            }\n        }\n\n        const walker = doc.createTreeWalker(target, NodeFilter.SHOW_ELEMENT, {\n            acceptNode: (node) => {\n                if (node.nodeType === Node.ELEMENT_NODE) {\n                    if (remove) {\n                        const subObserver = this._subObservers.get(node);\n\n                        if (subObserver) {\n                            subObserver.disconnect();\n                            this._subObservers.delete(node);\n                        }\n                    } else {\n                        const shadowRoot = (node as Element).shadowRoot;\n\n                        if (shadowRoot) {\n                            this._addSubObserver(shadowRoot);\n                        }\n                    }\n                }\n\n                return NodeFilter.FILTER_SKIP;\n            },\n        });\n\n        walker.nextNode();\n    }\n\n    public takeRecords(): MutationRecord[] {\n        const records = this._observer.takeRecords();\n\n        for (const subObserver of this._subObservers.values()) {\n            records.push(...subObserver.takeRecords());\n        }\n\n        return records;\n    }\n}\n\nexport function createShadowMutationObserver(\n    callback: MutationCallback\n): MutationObserver {\n    return new ShadowMutationObserver(callback);\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nfunction shadowQuerySelector(\n    node: ParentNode,\n    selector: string,\n    all: boolean\n): Element[] {\n    // TODO: This is probably slow. Optimize to use each shadowRoot's querySelector/querySelectorAll\n    //       instead of walking the tree.\n\n    const elements: Element[] = [];\n\n    walk(node, selector);\n\n    return elements;\n\n    function walk(from: Node, selector: string): void {\n        let el: Element | null = null;\n\n        const walker = document.createTreeWalker(\n            from,\n            NodeFilter.SHOW_ELEMENT,\n            {\n                acceptNode: (n) => {\n                    if (n.nodeType === Node.ELEMENT_NODE) {\n                        if ((n as Element).matches(selector)) {\n                            el = n as Element;\n                            elements.push(el);\n                            return all\n                                ? NodeFilter.FILTER_SKIP\n                                : NodeFilter.FILTER_ACCEPT;\n                        }\n\n                        const shadowRoot = (n as Element).shadowRoot;\n\n                        if (shadowRoot) {\n                            walk(shadowRoot, selector);\n                            return !all && elements.length\n                                ? NodeFilter.FILTER_ACCEPT\n                                : NodeFilter.FILTER_SKIP;\n                        }\n                    }\n                    return NodeFilter.FILTER_SKIP;\n                },\n            }\n        );\n\n        walker.nextNode();\n    }\n}\n\nexport function querySelectorAll(\n    node: ParentNode,\n    selector: string\n): Element[] {\n    return shadowQuerySelector(node, selector, true);\n}\n\nexport function querySelector(\n    node: ParentNode,\n    selector: string\n): Element | null {\n    return shadowQuerySelector(node, selector, false)[0] || null;\n}\n\nexport function getElementById(doc: Document, id: string): HTMLElement | null {\n    return querySelector(doc, \"#\" + id) as HTMLElement | null;\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n// TODO: The functions below do not consider Shadow DOM slots yet. We will be adding\n// support for slots as the need arises.\n\nexport { createShadowTreeWalker as createTreeWalker } from \"./ShadowTreeWalker\";\nexport { createShadowMutationObserver as createMutationObserver } from \"./ShadowMutationObserver\";\nexport {\n    appendChild,\n    getActiveElement,\n    getFirstChild,\n    getFirstElementChild,\n    getLastChild,\n    getLastElementChild,\n    getNextElementSibling,\n    getNextSibling,\n    getParentElement,\n    getParentNode,\n    getPreviousElementSibling,\n    getPreviousSibling,\n    getSelection,\n    getElementsByName,\n    insertBefore,\n    nodeContains,\n} from \"./DOMFunctions\";\nexport {\n    getElementById,\n    querySelector,\n    querySelectorAll,\n} from \"./querySelector\";\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { CrossOriginAPI } from \"./CrossOrigin\";\nimport { DeloserAPI } from \"./Deloser\";\nimport { FocusableAPI } from \"./Focusable\";\nimport { FocusedElementState } from \"./State/FocusedElement\";\nimport { GroupperAPI } from \"./Groupper\";\nimport { getTabsterOnElement, updateTabsterByAttribute } from \"./Instance\";\nimport { KeyboardNavigationState } from \"./State/KeyboardNavigation\";\nimport { ModalizerAPI } from \"./Modalizer\";\nimport { MoverAPI } from \"./Mover\";\nimport { observeMutations } from \"./MutationEvent\";\nimport { ObservedElementAPI } from \"./State/ObservedElement\";\nimport { OutlineAPI } from \"./Outline\";\nimport { RootAPI, WindowWithTabsterInstance } from \"./Root\";\nimport * as Types from \"./Types\";\nimport { TABSTER_ATTRIBUTE_NAME } from \"./Consts\";\nimport { UncontrolledAPI } from \"./Uncontrolled\";\nimport {\n    cleanupFakeWeakRefs,\n    clearElementCache,\n    createElementTreeWalker,\n    createWeakMap,\n    disposeInstanceContext,\n    DummyInputObserver,\n    getDummyInputContainer,\n    startFakeWeakRefsCleanup,\n    stopFakeWeakRefsCleanupAndClearStorage,\n} from \"./Utils\";\nimport { RestorerAPI } from \"./Restorer\";\nimport { dom, setDOMAPI } from \"./DOMAPI\";\nimport * as shadowDOMAPI from \"./Shadowdomize\";\n\nexport { getDummyInputContainer };\n\nclass Tabster implements Types.Tabster {\n    keyboardNavigation: Types.KeyboardNavigationState;\n    focusedElement: Types.FocusedElementState;\n    focusable: Types.FocusableAPI;\n    root: Types.RootAPI;\n    uncontrolled: Types.UncontrolledAPI;\n    core: Types.TabsterCore;\n\n    constructor(tabster: Types.TabsterCore) {\n        this.keyboardNavigation = tabster.keyboardNavigation;\n        this.focusedElement = tabster.focusedElement;\n        this.focusable = tabster.focusable;\n        this.root = tabster.root;\n        this.uncontrolled = tabster.uncontrolled;\n        this.core = tabster;\n    }\n}\n\n/**\n * Extends Window to include an internal Tabster instance.\n */\nclass TabsterCore implements Types.TabsterCore {\n    private _storage: WeakMap<HTMLElement, Types.TabsterElementStorage>;\n    private _unobserve: (() => void) | undefined;\n    private _win: WindowWithTabsterInstance | undefined;\n    private _forgetMemorizedTimer: number | undefined;\n    private _forgetMemorizedElements: HTMLElement[] = [];\n    private _wrappers: Set<Tabster> = new Set<Tabster>();\n    private _initTimer: number | undefined;\n    private _initQueue: (() => void)[] = [];\n\n    _version: string = __VERSION__;\n    _noop = false;\n    controlTab: boolean;\n    rootDummyInputs: boolean;\n\n    // Core APIs\n    keyboardNavigation: Types.KeyboardNavigationState;\n    focusedElement: Types.FocusedElementState;\n    focusable: Types.FocusableAPI;\n    root: Types.RootAPI;\n    uncontrolled: Types.UncontrolledAPI;\n    internal: Types.InternalAPI;\n    _dummyObserver: Types.DummyInputObserver;\n\n    // Extended APIs\n    groupper?: Types.GroupperAPI;\n    mover?: Types.MoverAPI;\n    outline?: Types.OutlineAPI;\n    deloser?: Types.DeloserAPI;\n    modalizer?: Types.ModalizerAPI;\n    observedElement?: Types.ObservedElementAPI;\n    crossOrigin?: Types.CrossOriginAPI;\n    restorer?: Types.RestorerAPI;\n    getParent: (el: Node) => Node | null;\n\n    constructor(win: Window, props?: Types.TabsterCoreProps) {\n        this._storage = createWeakMap(win);\n        this._win = win;\n\n        const getWindow = this.getWindow;\n\n        if (props?.DOMAPI) {\n            setDOMAPI({ ...props.DOMAPI });\n        }\n\n        this.keyboardNavigation = new KeyboardNavigationState(getWindow);\n        this.focusedElement = new FocusedElementState(this, getWindow);\n        this.focusable = new FocusableAPI(this);\n        this.root = new RootAPI(this, props?.autoRoot);\n        this.uncontrolled = new UncontrolledAPI(\n            // TODO: Remove checkUncontrolledTrappingFocus in the next major version.\n            props?.checkUncontrolledCompletely ||\n                props?.checkUncontrolledTrappingFocus\n        );\n        this.controlTab = props?.controlTab ?? true;\n        this.rootDummyInputs = !!props?.rootDummyInputs;\n\n        this._dummyObserver = new DummyInputObserver(getWindow);\n\n        this.getParent = props?.getParent ?? dom.getParentNode;\n\n        this.internal = {\n            stopObserver: (): void => {\n                if (this._unobserve) {\n                    this._unobserve();\n                    delete this._unobserve;\n                }\n            },\n\n            resumeObserver: (syncState: boolean): void => {\n                if (!this._unobserve) {\n                    const doc = getWindow().document;\n                    this._unobserve = observeMutations(\n                        doc,\n                        this,\n                        updateTabsterByAttribute,\n                        syncState\n                    );\n                }\n            },\n        };\n\n        startFakeWeakRefsCleanup(getWindow);\n\n        // Gives a tick to the host app to initialize other tabster\n        // APIs before tabster starts observing attributes.\n        this.queueInit(() => {\n            this.internal.resumeObserver(true);\n        });\n    }\n\n    /**\n     * Merges external props with the current props. Not all\n     * props can/should be mergeable, so let's add more as we move on.\n     * @param props Tabster props\n     */\n    private _mergeProps(props?: Types.TabsterCoreProps) {\n        if (!props) {\n            return;\n        }\n\n        this.getParent = props.getParent ?? this.getParent;\n    }\n\n    createTabster(\n        noRefCount?: boolean,\n        props?: Types.TabsterCoreProps\n    ): Types.Tabster {\n        const wrapper = new Tabster(this);\n\n        if (!noRefCount) {\n            this._wrappers.add(wrapper);\n        }\n\n        this._mergeProps(props);\n\n        return wrapper;\n    }\n\n    disposeTabster(wrapper: Types.Tabster, allInstances?: boolean) {\n        if (allInstances) {\n            this._wrappers.clear();\n        } else {\n            this._wrappers.delete(wrapper);\n        }\n\n        if (this._wrappers.size === 0) {\n            this.dispose();\n        }\n    }\n\n    dispose(): void {\n        this.internal.stopObserver();\n\n        const win = this._win;\n\n        win?.clearTimeout(this._initTimer);\n        delete this._initTimer;\n        this._initQueue = [];\n\n        this._forgetMemorizedElements = [];\n\n        if (win && this._forgetMemorizedTimer) {\n            win.clearTimeout(this._forgetMemorizedTimer);\n            delete this._forgetMemorizedTimer;\n        }\n\n        this.outline?.dispose();\n        this.crossOrigin?.dispose();\n        this.deloser?.dispose();\n        this.groupper?.dispose();\n        this.mover?.dispose();\n        this.modalizer?.dispose();\n        this.observedElement?.dispose();\n        this.restorer?.dispose();\n\n        this.keyboardNavigation.dispose();\n        this.focusable.dispose();\n        this.focusedElement.dispose();\n        this.root.dispose();\n\n        this._dummyObserver.dispose();\n\n        stopFakeWeakRefsCleanupAndClearStorage(this.getWindow);\n        clearElementCache(this.getWindow);\n\n        this._storage = new WeakMap();\n        this._wrappers.clear();\n\n        if (win) {\n            disposeInstanceContext(win);\n            delete win.__tabsterInstance;\n            delete this._win;\n        }\n    }\n\n    storageEntry(\n        element: HTMLElement,\n        addremove?: boolean\n    ): Types.TabsterElementStorageEntry | undefined {\n        const storage = this._storage;\n        let entry = storage.get(element);\n\n        if (entry) {\n            if (addremove === false && Object.keys(entry).length === 0) {\n                storage.delete(element);\n            }\n        } else if (addremove === true) {\n            entry = {};\n            storage.set(element, entry);\n        }\n\n        return entry;\n    }\n\n    getWindow = () => {\n        if (!this._win) {\n            throw new Error(\"Using disposed Tabster.\");\n        }\n\n        return this._win;\n    };\n\n    forceCleanup(): void {\n        if (!this._win) {\n            return;\n        }\n\n        this._forgetMemorizedElements.push(this._win.document.body);\n\n        if (this._forgetMemorizedTimer) {\n            return;\n        }\n\n        this._forgetMemorizedTimer = this._win.setTimeout(() => {\n            delete this._forgetMemorizedTimer;\n\n            for (\n                let el: HTMLElement | undefined =\n                    this._forgetMemorizedElements.shift();\n                el;\n                el = this._forgetMemorizedElements.shift()\n            ) {\n                clearElementCache(this.getWindow, el);\n                FocusedElementState.forgetMemorized(this.focusedElement, el);\n            }\n        }, 0);\n\n        cleanupFakeWeakRefs(this.getWindow, true);\n    }\n\n    queueInit(callback: () => void): void {\n        if (!this._win) {\n            return;\n        }\n\n        this._initQueue.push(callback);\n\n        if (!this._initTimer) {\n            this._initTimer = this._win?.setTimeout(() => {\n                delete this._initTimer;\n                this.drainInitQueue();\n            }, 0);\n        }\n    }\n\n    drainInitQueue(): void {\n        if (!this._win) {\n            return;\n        }\n\n        const queue = this._initQueue;\n        // Resetting the queue before calling the callbacks to avoid recursion.\n        this._initQueue = [];\n        queue.forEach((callback) => callback());\n    }\n}\n\nexport function forceCleanup(tabster: Types.Tabster): void {\n    // The only legit case for calling this method is when you've completely removed\n    // the application DOM and not going to add the new one for a while.\n    const tabsterCore = tabster.core;\n    tabsterCore.forceCleanup();\n}\n\n/**\n * Creates an instance of Tabster, returns the current window instance if it already exists.\n */\nexport function createTabster(\n    win: Window,\n    props?: Types.TabsterCoreProps\n): Types.Tabster {\n    let tabster = getCurrentTabster(win as WindowWithTabsterInstance);\n\n    if (tabster) {\n        return tabster.createTabster(false, props);\n    }\n\n    tabster = new TabsterCore(win, props);\n\n    (win as WindowWithTabsterInstance).__tabsterInstance = tabster;\n\n    return tabster.createTabster();\n}\n\n/**\n * Returns an instance of Tabster if it was created before or null.\n */\nexport function getTabster(win: Window): Types.Tabster | null {\n    const tabster = getCurrentTabster(win as WindowWithTabsterInstance);\n\n    return tabster ? tabster.createTabster(true) : null;\n}\n\nexport function getShadowDOMAPI(): Types.DOMAPI {\n    return shadowDOMAPI;\n}\n\n/**\n * Creates a new groupper instance or returns an existing one\n * @param tabster Tabster instance\n */\nexport function getGroupper(tabster: Types.Tabster): Types.GroupperAPI {\n    const tabsterCore = tabster.core;\n\n    if (!tabsterCore.groupper) {\n        tabsterCore.groupper = new GroupperAPI(\n            tabsterCore,\n            tabsterCore.getWindow\n        );\n    }\n\n    return tabsterCore.groupper;\n}\n\n/**\n * Creates a new mover instance or returns an existing one\n * @param tabster Tabster instance\n */\nexport function getMover(tabster: Types.Tabster): Types.MoverAPI {\n    const tabsterCore = tabster.core;\n\n    if (!tabsterCore.mover) {\n        tabsterCore.mover = new MoverAPI(tabsterCore, tabsterCore.getWindow);\n    }\n\n    return tabsterCore.mover;\n}\n\nexport function getOutline(tabster: Types.Tabster): Types.OutlineAPI {\n    const tabsterCore = tabster.core;\n\n    if (!tabsterCore.outline) {\n        tabsterCore.outline = new OutlineAPI(tabsterCore);\n    }\n\n    return tabsterCore.outline;\n}\n\n/**\n * Creates a new new deloser instance or returns an existing one\n * @param tabster Tabster instance\n * @param props Deloser props\n */\nexport function getDeloser(\n    tabster: Types.Tabster,\n    props?: { autoDeloser: Types.DeloserProps }\n): Types.DeloserAPI {\n    const tabsterCore = tabster.core;\n\n    if (!tabsterCore.deloser) {\n        tabsterCore.deloser = new DeloserAPI(tabsterCore, props);\n    }\n\n    return tabsterCore.deloser;\n}\n\n/**\n * Creates a new modalizer instance or returns an existing one\n * @param tabster Tabster instance\n * @param alwaysAccessibleSelector When Modalizer is active, we put\n * aria-hidden to everything else to hide it from screen readers. This CSS\n * selector allows to exclude some elements from this behaviour. For example,\n * this could be used to exclude aria-live region with the application-wide\n * status announcements.\n * @param accessibleCheck An optional callback that will be called when\n * active Modalizer wants to hide an element that doesn't belong to it from\n * the screen readers by setting aria-hidden. Similar to alwaysAccessibleSelector\n * but allows to address the elements programmatically rather than with a selector.\n * If the callback returns true, the element will not receive aria-hidden.\n */\nexport function getModalizer(\n    tabster: Types.Tabster,\n    // @deprecated use accessibleCheck.\n    alwaysAccessibleSelector?: string,\n    accessibleCheck?: Types.ModalizerElementAccessibleCheck\n): Types.ModalizerAPI {\n    const tabsterCore = tabster.core;\n\n    if (!tabsterCore.modalizer) {\n        tabsterCore.modalizer = new ModalizerAPI(\n            tabsterCore,\n            alwaysAccessibleSelector,\n            accessibleCheck\n        );\n    }\n\n    return tabsterCore.modalizer;\n}\n\nexport function getObservedElement(\n    tabster: Types.Tabster\n): Types.ObservedElementAPI {\n    const tabsterCore = tabster.core;\n\n    if (!tabsterCore.observedElement) {\n        tabsterCore.observedElement = new ObservedElementAPI(tabsterCore);\n    }\n\n    return tabsterCore.observedElement;\n}\n\nexport function getCrossOrigin(tabster: Types.Tabster): Types.CrossOriginAPI {\n    const tabsterCore = tabster.core;\n    if (!tabsterCore.crossOrigin) {\n        getDeloser(tabster);\n        getModalizer(tabster);\n        getMover(tabster);\n        getGroupper(tabster);\n        getOutline(tabster);\n        getObservedElement(tabster);\n        tabsterCore.crossOrigin = new CrossOriginAPI(tabsterCore);\n    }\n\n    return tabsterCore.crossOrigin;\n}\n\nexport function getInternal(tabster: Types.Tabster): Types.InternalAPI {\n    const tabsterCore = tabster.core;\n    return tabsterCore.internal;\n}\n\nexport function getRestorer(tabster: Types.Tabster): Types.RestorerAPI {\n    const tabsterCore = tabster.core;\n    if (!tabsterCore.restorer) {\n        tabsterCore.restorer = new RestorerAPI(tabsterCore);\n    }\n\n    return tabsterCore.restorer;\n}\n\nexport function disposeTabster(\n    tabster: Types.Tabster,\n    allInstances?: boolean\n): void {\n    tabster.core.disposeTabster(tabster, allInstances);\n}\n\n/**\n * Returns an instance of Tabster if it already exists on the window .\n * @param win window instance that could contain an Tabster instance.\n */\nexport function getCurrentTabster(win: Window): Types.TabsterCore | undefined {\n    return (win as WindowWithTabsterInstance).__tabsterInstance;\n}\n\n/**\n * Allows to make Tabster non operational. Intended for performance debugging (and other\n * kinds of debugging), you can switch Tabster off without changing the application code\n * that consumes it.\n * @param tabster a reference created by createTabster().\n * @param noop true if you want to make Tabster noop, false if you want to turn it back.\n */\nexport function makeNoOp(tabster: Types.Tabster, noop: boolean): void {\n    const core = tabster.core;\n\n    if (core._noop !== noop) {\n        core._noop = noop;\n\n        const processNode = (element: HTMLElement): number => {\n            if (!element.getAttribute) {\n                return NodeFilter.FILTER_SKIP;\n            }\n\n            if (\n                getTabsterOnElement(core, element) ||\n                element.hasAttribute(TABSTER_ATTRIBUTE_NAME)\n            ) {\n                updateTabsterByAttribute(core, element);\n            }\n\n            return NodeFilter.FILTER_SKIP;\n        };\n\n        const doc = core.getWindow().document;\n        const body = doc.body;\n\n        processNode(body);\n\n        const walker = createElementTreeWalker(doc, body, processNode);\n\n        if (walker) {\n            while (walker.nextNode()) {\n                /* Iterating for the sake of calling processNode() callback. */\n            }\n        }\n    }\n}\n\nexport function isNoOp(tabster: Types.TabsterCore): boolean {\n    return (tabster as TabsterCore)._noop;\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport type { TABSTER_ATTRIBUTE_NAME } from \"./Consts\";\n\nexport interface HTMLElementWithTabsterFlags extends HTMLElement {\n    __tabsterElementFlags?: {\n        /**\n         * @deprecated This option is added to support interop between Fluent UI V9 and Fluent UI V8.\n         * Once Fluent UI V8 is not supported anymore, this option should be removed.\n         */\n        noDirectAriaHidden?: boolean; // When Modalizer sets aria-hidden on everything outside of the modal,\n        // do not set aria-hidden directly on this element, go inside and check its children,\n        // and set aria-hidden on the children. This is to be set on a container that hosts\n        // elements which have the active modal dialog as virtual parent.\n    };\n}\n\nexport interface TabsterDOMAttribute {\n    [TABSTER_ATTRIBUTE_NAME]: string | undefined;\n}\n\nexport interface TabsterCoreProps {\n    autoRoot?: RootProps;\n    /**\n     * Allows all tab key presses under the tabster root to be controlled by tabster\n     * @default true\n     */\n    controlTab?: boolean;\n    /**\n     * When controlTab is false, Root doesn't have dummy inputs by default.\n     * This option allows to enable dummy inputs on Root.\n     */\n    rootDummyInputs?: boolean;\n    /**\n     * A callback that will be called for the uncontrolled areas when Tabster wants\n     * to know is the uncontrolled element wants complete control (for example it\n     * is trapping focus) and Tabster should not interfere with handling Tab.\n     * If the callback returns undefined, then the default behaviour is to return\n     * the uncontrolled.completely value from the element. If the callback returns\n     * non-undefined value, the callback's value will dominate the element's\n     * uncontrolled.completely value.\n     */\n    checkUncontrolledCompletely?: (\n        element: HTMLElement,\n        completely: boolean // A uncontrolled.completely value from the element.\n    ) => boolean | undefined;\n    /**\n     * @deprecated use checkUncontrolledCompletely.\n     */\n    checkUncontrolledTrappingFocus?: (element: HTMLElement) => boolean;\n    /**\n     * Custom getter for parent elements. Defaults to the default .parentElement call\n     * Currently only used to detect tabster contexts\n     */\n    getParent?(el: Node): Node | null;\n    /**\n     * Ability to redefine all DOM API calls used by Tabster. For example, for\n     * ShadowDOM support.\n     */\n    DOMAPI?: Partial<DOMAPI>;\n}\n\nexport interface DOMAPI {\n    createMutationObserver: (callback: MutationCallback) => MutationObserver;\n    createTreeWalker(\n        doc: Document,\n        root: Node,\n        whatToShow?: number,\n        filter?: NodeFilter | null\n    ): TreeWalker;\n    getParentNode(node: Node | null | undefined): ParentNode | null;\n    getParentElement(\n        element: HTMLElement | null | undefined\n    ): HTMLElement | null;\n    nodeContains(\n        parent: Node | null | undefined,\n        child: Node | null | undefined\n    ): boolean;\n    getActiveElement(doc: Document): Element | null;\n    querySelector(element: ParentNode, selector: string): Element | null;\n    querySelectorAll(element: ParentNode, selector: string): Element[];\n    getElementById(doc: Document, id: string): HTMLElement | null;\n    getFirstChild(node: Node | null | undefined): ChildNode | null;\n    getLastChild(node: Node | null | undefined): ChildNode | null;\n    getNextSibling(node: Node | null | undefined): ChildNode | null;\n    getPreviousSibling(node: Node | null | undefined): ChildNode | null;\n    getFirstElementChild(element: Element | null | undefined): Element | null;\n    getLastElementChild(element: Element | null | undefined): Element | null;\n    getNextElementSibling(element: Element | null | undefined): Element | null;\n    getPreviousElementSibling(\n        element: Element | null | undefined\n    ): Element | null;\n    appendChild(parent: Node, child: Node): Node;\n    insertBefore(parent: Node, child: Node, referenceChild: Node | null): Node;\n    getSelection(ref: Node): Selection | null;\n    getElementsByName(\n        referenceElement: HTMLElement,\n        name: string\n    ): NodeListOf<HTMLElement>;\n}\n\nexport type GetTabster = () => TabsterCore;\nexport type GetWindow = () => Window;\n\nexport type SubscribableCallback<A, B = undefined> = (\n    val: A,\n    detail: B\n) => void;\n\nexport interface Disposable {\n    /** @internal */\n    dispose(): void;\n}\n\nexport interface Subscribable<A, B = undefined> {\n    subscribe(callback: SubscribableCallback<A, B>): void;\n    /** @internal */\n    subscribeFirst(callback: SubscribableCallback<A, B>): void;\n    unsubscribe(callback: SubscribableCallback<A, B>): void;\n}\n\nexport interface KeyboardNavigationState\n    extends Subscribable<boolean>,\n        Disposable {\n    isNavigatingWithKeyboard(): boolean;\n    setNavigatingWithKeyboard(isNavigatingWithKeyboard: boolean): void;\n}\n\nexport interface FocusedElementDetail {\n    relatedTarget?: HTMLElement;\n    isFocusedProgrammatically?: boolean;\n    modalizerId?: string;\n}\n\nimport { AsyncFocusSources as _AsyncFocusSources } from \"./Consts\";\nexport type AsyncFocusSources = typeof _AsyncFocusSources;\n\nexport type AsyncFocusSource = AsyncFocusSources[keyof AsyncFocusSources];\n\nexport interface FocusedElementState\n    extends Subscribable<HTMLElement | undefined, FocusedElementDetail>,\n        Disposable {\n    getFocusedElement(): HTMLElement | undefined;\n    getLastFocusedElement(): HTMLElement | undefined;\n    focus(\n        element: HTMLElement,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean,\n        preventScroll?: boolean\n    ): boolean;\n    focusDefault(container: HTMLElement): boolean;\n    /** @internal */\n    getFirstOrLastTabbable(\n        isFirst: boolean,\n        props: Pick<FindFocusableProps, \"container\" | \"ignoreAccessibility\">\n    ): HTMLElement | undefined;\n    focusFirst(props: FindFirstProps): boolean;\n    focusLast(props: FindFirstProps): boolean;\n    resetFocus(container: HTMLElement): boolean;\n    /**\n     * When Tabster wants to move focus asynchronously, it it should call this method to register its intent.\n     * This is a way to avoid conflicts between different parts that might want to move focus asynchronously\n     * at the same moment (for example when both Deloser and Restorer want to move focus when the focused element\n     * is removed from DOM).\n     */\n    /** @internal */\n    requestAsyncFocus(\n        source: AsyncFocusSource,\n        callback: () => void,\n        delay: number\n    ): void;\n    /** @internal */\n    cancelAsyncFocus(source: AsyncFocusSource): void;\n}\n\nexport interface WeakHTMLElement<D = undefined> {\n    get(): HTMLElement | undefined;\n    getData(): D | undefined;\n}\n\nexport interface TabsterPart<P> {\n    readonly id: string;\n    getElement(): HTMLElement | undefined;\n    getProps(): P;\n    setProps(props: P): void;\n}\n\nexport interface TabsterPartWithFindNextTabbable {\n    findNextTabbable(\n        current?: HTMLElement,\n        reference?: HTMLElement,\n        isBackward?: boolean,\n        ignoreAccessibility?: boolean\n    ): NextTabbable | null;\n}\n\nexport interface TabsterPartWithAcceptElement {\n    acceptElement(\n        element: HTMLElement,\n        state: FocusableAcceptElementState\n    ): number | undefined;\n}\n\nexport interface ObservedElementProps {\n    names: string[];\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    details?: any;\n}\n\nexport interface ObservedElementDetails extends ObservedElementProps {\n    accessibility?: ObservedElementAccessibility;\n}\n\nimport { ObservedElementAccessibilities as _ObservedElementAccessibilities } from \"./Consts\";\nexport type ObservedElementAccessibilities =\n    typeof _ObservedElementAccessibilities;\n\nexport type ObservedElementAccessibility =\n    ObservedElementAccessibilities[keyof ObservedElementAccessibilities];\n\nexport interface ObservedElementAsyncRequest<T> {\n    result: Promise<T>;\n    cancel(): void;\n}\n\ninterface ObservedElementAPIInternal {\n    /** @internal */\n    onObservedElementUpdate(element: HTMLElement): void;\n}\n\nexport interface ObservedElementAPI\n    extends Subscribable<HTMLElement, ObservedElementDetails>,\n        Disposable,\n        ObservedElementAPIInternal {\n    getElement(\n        observedName: string,\n        accessibility?: ObservedElementAccessibility\n    ): HTMLElement | null;\n    waitElement(\n        observedName: string,\n        timeout: number,\n        accessibility?: ObservedElementAccessibility\n    ): ObservedElementAsyncRequest<HTMLElement | null>;\n    requestFocus(\n        observedName: string,\n        timeout: number\n    ): ObservedElementAsyncRequest<boolean>;\n}\n\nexport interface CrossOriginElement {\n    readonly uid: string;\n    readonly ownerId: string;\n    readonly id?: string;\n    readonly rootId?: string;\n    readonly observedName?: string;\n    readonly observedDetails?: string;\n    focus(\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean>;\n}\n\nexport interface CrossOriginSentTo {\n    [id: string]: true;\n}\n\nexport interface CrossOriginTransactionTypes {\n    Bootstrap: 1;\n    FocusElement: 2;\n    State: 3;\n    GetElement: 4;\n    RestoreFocusInDeloser: 5;\n    Ping: 6;\n}\nexport type CrossOriginTransactionType =\n    CrossOriginTransactionTypes[keyof CrossOriginTransactionTypes];\n\nexport interface CrossOriginTransactionData<I, O> {\n    transaction: string;\n    type: CrossOriginTransactionType;\n    isResponse: boolean;\n    timestamp: number;\n    owner: string;\n    sentto: CrossOriginSentTo;\n    timeout?: number;\n    target?: string;\n    beginData?: I;\n    endData?: O;\n}\n\nexport type CrossOriginTransactionSend = (\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data: CrossOriginTransactionData<any, any>\n) => void;\n\nexport interface CrossOriginMessage {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data: CrossOriginTransactionData<any, any>;\n    send: CrossOriginTransactionSend;\n}\n\nexport interface CrossOriginFocusedElementState\n    extends Subscribable<CrossOriginElement | undefined, FocusedElementDetail>,\n        Disposable {\n    focus(\n        element: CrossOriginElement,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean>;\n    focusById(\n        elementId: string,\n        rootId?: string,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean>;\n    focusByObservedName(\n        observedName: string,\n        timeout?: number,\n        rootId?: string,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean>;\n}\n\nexport interface CrossOriginObservedElementState\n    extends Subscribable<CrossOriginElement, ObservedElementProps>,\n        Disposable {\n    getElement(\n        observedName: string,\n        accessibility?: ObservedElementAccessibility\n    ): Promise<CrossOriginElement | null>;\n    waitElement(\n        observedName: string,\n        timeout: number,\n        accessibility?: ObservedElementAccessibility\n    ): Promise<CrossOriginElement | null>;\n    requestFocus(observedName: string, timeout: number): Promise<boolean>;\n}\n\nexport interface CrossOriginAPI {\n    focusedElement: CrossOriginFocusedElementState;\n    observedElement: CrossOriginObservedElementState;\n\n    setup(\n        sendUp?: CrossOriginTransactionSend | null\n    ): (msg: CrossOriginMessage) => void;\n    isSetUp(): boolean;\n    dispose(): void;\n}\n\nexport interface OutlineProps {\n    areaClass: string;\n    outlineClass: string;\n    outlineColor: string;\n    outlineWidth: number;\n    zIndex: number;\n}\n\nexport interface OutlinedElementProps {\n    isIgnored?: boolean;\n}\n\nexport interface OutlineAPI extends Disposable {\n    setup(props?: Partial<OutlineProps>): void;\n}\n\nexport interface DeloserElementActions {\n    focusDefault: () => boolean;\n    focusFirst: () => boolean;\n    resetFocus: () => boolean;\n    clearHistory: (preserveExisting?: boolean) => void;\n    setSnapshot: (index: number) => void;\n    isActive: () => boolean;\n}\n\nimport { RestoreFocusOrders as _RestoreFocusOrders } from \"./Consts\";\nexport type RestoreFocusOrders = typeof _RestoreFocusOrders;\n\nexport type RestoreFocusOrder = RestoreFocusOrders[keyof RestoreFocusOrders];\n\nimport { DeloserStrategies as _DeloserStrategies } from \"./Consts\";\nexport type DeloserStrategies = typeof _DeloserStrategies;\n\nexport type DeloserStrategy = DeloserStrategies[keyof DeloserStrategies];\n\nexport interface DeloserProps {\n    restoreFocusOrder?: RestoreFocusOrder;\n    noSelectorCheck?: boolean;\n    strategy?: DeloserStrategy;\n}\n\nexport interface Deloser extends TabsterPart<DeloserProps> {\n    readonly uid: string;\n    readonly strategy: DeloserStrategy;\n    dispose(): void;\n    isActive(): boolean;\n    setActive(active: boolean): void;\n    getActions(): DeloserElementActions;\n    setSnapshot(index: number): void;\n    focusFirst(): boolean;\n    unshift(element: HTMLElement): void;\n    focusDefault(): boolean;\n    resetFocus(): boolean;\n    findAvailable(): HTMLElement | null;\n    clearHistory(preserveExisting?: boolean): void;\n    customFocusLostHandler(element: HTMLElement): boolean;\n}\n\nexport type DeloserConstructor = (\n    element: HTMLElement,\n    props: DeloserProps\n) => Deloser;\n\ninterface DeloserInterfaceInternal {\n    /** @internal */\n    createDeloser(element: HTMLElement, props: DeloserProps): Deloser;\n}\n\nexport interface DeloserAPI extends DeloserInterfaceInternal, Disposable {\n    getActions(element: HTMLElement): DeloserElementActions | undefined;\n    pause(): void;\n    resume(restore?: boolean): void;\n}\n\nexport interface FocusableProps {\n    isDefault?: boolean;\n    isIgnored?: boolean;\n    /**\n     * Do not determine an element's focusability based on aria-disabled.\n     */\n    ignoreAriaDisabled?: boolean;\n    /**\n     * Exclude element (and all subelements) from Mover navigation.\n     */\n    excludeFromMover?: boolean;\n    /**\n     * Prevents tabster from handling the keydown event\n     */\n    ignoreKeydown?: {\n        Tab?: boolean;\n        Escape?: boolean;\n        Enter?: boolean;\n        ArrowUp?: boolean;\n        ArrowDown?: boolean;\n        ArrowLeft?: boolean;\n        ArrowRight?: boolean;\n        PageUp?: boolean;\n        PageDown?: boolean;\n        Home?: boolean;\n        End?: boolean;\n    };\n}\n\nexport interface RadioButtonGroup {\n    name: string;\n    buttons: Set<HTMLInputElement>;\n    checked?: HTMLInputElement;\n}\n\nexport interface FocusableAcceptElementState {\n    container: HTMLElement;\n    modalizerUserId?: string;\n    currentCtx?: TabsterContext;\n    from: HTMLElement;\n    fromCtx?: TabsterContext;\n    isBackward?: boolean;\n    found?: boolean;\n    foundElement?: HTMLElement;\n    foundBackward?: HTMLElement;\n    rejectElementsFrom?: HTMLElement;\n    uncontrolled?: HTMLElement;\n    acceptCondition: (el: HTMLElement) => boolean;\n    hasCustomCondition?: boolean;\n    includeProgrammaticallyFocusable?: boolean;\n    ignoreAccessibility?: boolean;\n    cachedGrouppers: {\n        [id: string]: {\n            isActive: boolean | undefined;\n            first?: HTMLElement | null;\n        };\n    };\n    cachedRadioGroups: {\n        [name: string]: RadioButtonGroup;\n    };\n    isFindAll?: boolean;\n    /**\n     * A flag that indicates that some focusable elements were skipped\n     * during the search and the found element is not the one the browser\n     * would normally focus if the user pressed Tab.\n     */\n    skippedFocusable?: boolean;\n}\n\nexport interface FindFocusableProps {\n    /**\n     * The container used for the search.\n     */\n    container: HTMLElement;\n    /**\n     * The elemet to start from.\n     */\n    currentElement?: HTMLElement;\n    /**\n     * See `referenceElement` of GetTabsterContextOptions for description.\n     */\n    referenceElement?: HTMLElement;\n    /**\n     * Includes elements that can be focused programmatically.\n     */\n    includeProgrammaticallyFocusable?: boolean;\n    /**\n     * Ignore accessibility check.\n     */\n    ignoreAccessibility?: boolean;\n    /**\n     * Take active modalizer into account when searching for elements\n     * (the elements out of active modalizer will not be returned).\n     */\n    useActiveModalizer?: boolean;\n    /**\n     * Search withing the specified modality, null for everything outside of modalizers, string within\n     * a specific id, undefined for search within the current application state.\n     */\n    modalizerId?: string | null;\n    /**\n     * If true, find previous element instead of the next one.\n     */\n    isBackward?: boolean;\n    /**\n     * @param el element visited.\n     * @returns if an element should be accepted.\n     */\n    acceptCondition?(el: HTMLElement): boolean;\n    /**\n     * A callback that will be called for every focusable element found during findAll().\n     * If false is returned from this callback, the search will stop.\n     */\n    onElement?: FindElementCallback;\n}\n\nexport interface FindFocusableOutputProps {\n    /**\n     * An output parameter. Will be true after the findNext/findPrev() call if some focusable\n     * elements were skipped during the search and the result element not immediately next\n     * focusable after the currentElement.\n     */\n    outOfDOMOrder?: boolean;\n    /**\n     * An output parameter. Will be true if the found element is uncontrolled.\n     */\n    uncontrolled?: HTMLElement | null;\n}\n\nexport type FindFirstProps = Pick<\n    FindFocusableProps,\n    | \"container\"\n    | \"modalizerId\"\n    | \"includeProgrammaticallyFocusable\"\n    | \"useActiveModalizer\"\n    | \"ignoreAccessibility\"\n>;\n\nexport type FindNextProps = Pick<\n    FindFocusableProps,\n    | \"currentElement\"\n    | \"referenceElement\"\n    | \"container\"\n    | \"modalizerId\"\n    | \"includeProgrammaticallyFocusable\"\n    | \"useActiveModalizer\"\n    | \"ignoreAccessibility\"\n>;\n\nexport type FindDefaultProps = Pick<\n    FindFocusableProps,\n    | \"container\"\n    | \"modalizerId\"\n    | \"includeProgrammaticallyFocusable\"\n    | \"useActiveModalizer\"\n    | \"ignoreAccessibility\"\n>;\n\nexport type FindAllProps = Pick<\n    FindFocusableProps,\n    | \"container\"\n    | \"modalizerId\"\n    | \"currentElement\"\n    | \"isBackward\"\n    | \"includeProgrammaticallyFocusable\"\n    | \"useActiveModalizer\"\n    | \"acceptCondition\"\n    | \"ignoreAccessibility\"\n    | \"onElement\"\n>;\n\n/**\n * A callback that is called for every found element during search. Returning false stops search.\n */\nexport type FindElementCallback = (element: HTMLElement) => boolean;\n\nexport interface FocusableAPI extends Disposable {\n    getProps(element: HTMLElement): FocusableProps;\n\n    isFocusable(\n        element: HTMLElement,\n        includeProgrammaticallyFocusable?: boolean,\n        noVisibleCheck?: boolean,\n        noAccessibleCheck?: boolean\n    ): boolean;\n    isVisible(element: HTMLElement): boolean;\n    isAccessible(element: HTMLElement): boolean;\n    // find* return null when there is no element and undefined when there is an uncontrolled area.\n    findFirst(\n        options: FindFirstProps,\n        out?: FindFocusableOutputProps\n    ): HTMLElement | null | undefined;\n    findLast(\n        options: FindFirstProps,\n        out?: FindFocusableOutputProps\n    ): HTMLElement | null | undefined;\n    findNext(\n        options: FindNextProps,\n        out?: FindFocusableOutputProps\n    ): HTMLElement | null | undefined;\n    findPrev(\n        options: FindNextProps,\n        out?: FindFocusableOutputProps\n    ): HTMLElement | null | undefined;\n    findDefault(\n        options: FindDefaultProps,\n        out?: FindFocusableOutputProps\n    ): HTMLElement | null;\n    /**\n     * @returns All focusables in a given context that satisfy an given condition\n     */\n    findAll(options: FindAllProps): HTMLElement[];\n    findElement(\n        options: FindFocusableProps,\n        out?: FindFocusableOutputProps\n    ): HTMLElement | null | undefined;\n}\n\nexport interface DummyInputManager {\n    moveOut: (backwards: boolean) => void;\n    moveOutWithDefaultAction: (\n        backwards: boolean,\n        relatedEvent: KeyboardEvent\n    ) => void;\n}\n\nimport { Visibilities as _Visibilities } from \"./Consts\";\nexport type Visibilities = typeof _Visibilities;\n\nexport type Visibility = Visibilities[keyof Visibilities];\n\nexport interface MoverElementState {\n    isCurrent: boolean | undefined; // Tri-state bool. Undefined when there is no current in the container.\n    visibility: Visibility;\n}\n\nimport { RestorerTypes as _RestorerTypes } from \"./Consts\";\nexport type RestorerTypes = typeof _RestorerTypes;\n\nexport type RestorerType = RestorerTypes[keyof RestorerTypes];\n\nimport { MoverDirections as _MoverDirections } from \"./Consts\";\nexport type MoverDirections = typeof _MoverDirections;\n\nexport type MoverDirection = MoverDirections[keyof MoverDirections];\n\nexport interface NextTabbable {\n    element: HTMLElement | null | undefined;\n    uncontrolled?: HTMLElement | null;\n    outOfDOMOrder?: boolean;\n}\n\nexport interface MoverProps {\n    direction?: MoverDirection;\n    memorizeCurrent?: boolean;\n    tabbable?: boolean;\n    /**\n     * Whether to allow cyclic navigation in the mover\n     * Can only be applied if navigationType is MoverKeys.Arrows\n     *\n     * @defaultValue false\n     */\n    cyclic?: boolean;\n    /**\n     * In case we need a rich state of the elements inside a Mover,\n     * we can track it. It takes extra resourses and might affect\n     * performance when a Mover has many elements inside, so make sure\n     * you use this prop when it is really needed.\n     */\n    trackState?: boolean;\n    /**\n     * When set to Visibility.Visible or Visibility.PartiallyVisible,\n     * uses the visibility part of the trackState prop to be able to\n     * go to first/last visible element (instead of first/last focusable\n     * element in DOM) when tabbing from outside of the mover.\n     */\n    visibilityAware?: Visibility;\n    /**\n     * When true, Mover will try to locate a focusable with Focusable.isDefault\n     * property as a prioritized element to focus. True by default.\n     */\n    hasDefault?: boolean;\n    /**\n     * A value between 0 and 1 that specifies the tolerance allowed\n     * when testing for visibility.\n     *\n     * @example\n     * an element of height 100px has 10px that are above the viewport\n     * hidden by scroll. This element is a valid visible element to focus.\n     *\n     * @default 0.8\n     */\n    visibilityTolerance?: number;\n}\n\nexport interface Mover\n    extends TabsterPart<MoverProps>,\n        TabsterPartWithFindNextTabbable,\n        TabsterPartWithAcceptElement {\n    readonly id: string;\n    readonly dummyManager: DummyInputManager | undefined;\n    readonly visibilityTolerance: NonNullable<\n        MoverProps[\"visibilityTolerance\"]\n    >;\n    dispose(): void;\n    setCurrent(element: HTMLElement | undefined): void;\n    getCurrent(): HTMLElement | null;\n    getState(element: HTMLElement): MoverElementState | undefined;\n}\n\nexport type MoverConstructor = (\n    tabster: TabsterCore,\n    element: HTMLElement,\n    props: MoverProps\n) => Mover;\n\ninterface MoverAPIInternal {\n    /** @internal */\n    createMover(\n        element: HTMLElement,\n        props: MoverProps,\n        sys: SysProps | undefined\n    ): Mover;\n}\n\nimport { MoverKeys as _MoverKeys } from \"./Consts\";\nexport type MoverKeys = typeof _MoverKeys;\n\nexport type MoverKey = MoverKeys[keyof MoverKeys];\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface MoverAPI extends MoverAPIInternal, Disposable {\n    /** @internal (will likely be exposed once the API is fully stable) */\n    moveFocus(fromElement: HTMLElement, key: MoverKey): HTMLElement | null;\n}\n\nimport { GroupperTabbabilities as _GroupperTabbabilities } from \"./Consts\";\nexport type GroupperTabbabilities = typeof _GroupperTabbabilities;\n\nexport type GroupperTabbability =\n    GroupperTabbabilities[keyof GroupperTabbabilities];\n\nexport interface GroupperProps {\n    tabbability?: GroupperTabbability;\n    delegated?: boolean; // This allows to tweak the groupper behaviour for the cases when\n    // the groupper container is not focusable and groupper has Limited or LimitedTrapFocus\n    // tabbability. By default, the groupper will automatically become active once the focus\n    // goes to first focusable element inside the groupper during tabbing. When true, the\n    // groupper will become active only after Enter is pressed on first focusable element\n    // inside the groupper.\n}\n\nexport interface Groupper\n    extends TabsterPart<GroupperProps>,\n        TabsterPartWithFindNextTabbable,\n        TabsterPartWithAcceptElement {\n    readonly id: string;\n    readonly dummyManager: DummyInputManager | undefined;\n    dispose(): void;\n    makeTabbable(isUnlimited: boolean): void;\n    isActive(noIfFirstIsFocused?: boolean): boolean | undefined; // Tri-state boolean, undefined when parent is not active, false when parent is active.\n    setFirst(element: HTMLElement | undefined): void;\n    getFirst(orContainer: boolean): HTMLElement | undefined;\n}\n\nexport type GroupperConstructor = (\n    tabster: TabsterCore,\n    element: HTMLElement,\n    props: GroupperProps\n) => Groupper;\n\nexport interface GroupperAPIInternal {\n    /** @internal */\n    createGroupper(\n        element: HTMLElement,\n        props: GroupperProps,\n        sys: SysProps | undefined\n    ): Groupper;\n    /** @internal */\n    handleKeyPress(\n        element: HTMLElement,\n        event: KeyboardEvent,\n        fromModalizer?: boolean\n    ): void;\n}\n\nimport { GroupperMoveFocusActions as _GroupperMoveFocusActions } from \"./Consts\";\nexport type GroupperMoveFocusActions = typeof _GroupperMoveFocusActions;\n\nexport type GroupperMoveFocusAction =\n    GroupperMoveFocusActions[keyof GroupperMoveFocusActions];\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface GroupperAPI extends GroupperAPIInternal, Disposable {\n    /** @internal (will likely be exposed once the API is fully stable) */\n    moveFocus(\n        element: HTMLElement,\n        action: GroupperMoveFocusAction\n    ): HTMLElement | null;\n}\n\nexport interface GroupperAPIInternal {\n    forgetCurrentGrouppers(): void;\n}\n\nexport interface ModalizerProps {\n    id: string;\n    isOthersAccessible?: boolean;\n    isAlwaysAccessible?: boolean;\n    isNoFocusFirst?: boolean;\n    isNoFocusDefault?: boolean;\n    /** A focus trap variant, keeps focus inside the modal when tabbing */\n    isTrapped?: boolean;\n}\n\nexport interface Modalizer\n    extends TabsterPart<ModalizerProps>,\n        TabsterPartWithFindNextTabbable {\n    readonly userId: string;\n    readonly dummyManager: DummyInputManager | undefined;\n    /**\n     * @returns - Whether the element is inside the modalizer\n     */\n    contains(element: HTMLElement): boolean;\n    dispose(): void;\n    isActive(): boolean;\n    makeActive(isActive: boolean): void;\n    focused(noIncrement?: boolean): number;\n}\n\nexport type ModalizerConstructor = (\n    tabster: TabsterCore,\n    element: HTMLElement,\n    props: ModalizerProps\n) => Modalizer;\n\nexport interface RootProps {\n    restoreFocusOrder?: RestoreFocusOrder;\n}\n\nexport interface Root extends TabsterPart<RootProps> {\n    /**@internal*/\n    addDummyInputs(): void;\n\n    readonly uid: string;\n    dispose(): void;\n    moveOutWithDefaultAction(\n        backwards: boolean,\n        relatedEvent: KeyboardEvent\n    ): void;\n}\n\nexport type RootConstructor = (\n    tabster: TabsterCore,\n    element: HTMLElement,\n    props: RootProps\n) => Root;\n\nimport { SysDummyInputsPositions as _SysDummyInputsPositions } from \"./Consts\";\nexport type SysDummyInputsPositions = typeof _SysDummyInputsPositions;\n\nexport type SysDummyInputsPosition =\n    SysDummyInputsPositions[keyof SysDummyInputsPositions];\n\n/**\n * Ability to fine-tune Tabster internal behaviour in rare cases of need.\n * Normally, should not be used. A deep understanding of the intention and the effect\n * is required.\n */\nexport interface SysProps {\n    /**\n     * Force dummy input position outside or inside of the element.\n     * By default (when undefined), the position is determined dynamically\n     * (for example inside for <li> elements and outside for <table> elements,\n     * plus a default Groupper/Mover/Modalizer implementation position).\n     * Setting to true will force the dummy inputs to be always outside of the element,\n     * setting to false will force the dummy inputs to be always inside.\n     */\n    dummyInputsPosition?: SysDummyInputsPosition;\n}\n\nexport interface GetTabsterContextOptions {\n    /**\n     * Should visit **all** element ancestors to verify if `dir='rtl'` is set\n     */\n    checkRtl?: boolean;\n    /**\n     * The element to start computing the context from. Useful when dealing\n     * with nested structures. For example, if we have an element inside a groupper\n     * inside another groupper, the `groupper` prop in this element's contexts will\n     * be the inner groupper, but when we pass the inner groupper's parent element\n     * as `referenceElement`, the context groupper will be the outer one. Having\n     * this option simplifies searching for the next tabbable element in the\n     * environment of nested movers and grouppers.\n     */\n    referenceElement?: HTMLElement;\n}\n\nexport type TabsterContextMoverGroupper =\n    | { isMover: true; mover: Mover }\n    | { isMover: false; groupper: Groupper };\n\nexport interface TabsterContext {\n    root: Root;\n    modalizer?: Modalizer;\n    groupper?: Groupper;\n    mover?: Mover;\n    groupperBeforeMover?: boolean;\n    modalizerInGroupper?: Groupper;\n    /**\n     * Whether `dir='rtl'` is set on an ancestor\n     */\n    rtl?: boolean;\n    excludedFromMover?: boolean;\n    uncontrolled?: HTMLElement | null;\n    ignoreKeydown: (e: KeyboardEvent) => boolean;\n}\n\ninterface RootAPIInternal {\n    /**@internal*/\n    createRoot(\n        element: HTMLElement,\n        props: RootProps,\n        sys: SysProps | undefined\n    ): Root;\n    /**@internal*/\n    onRoot(root: Root, removed?: boolean): void;\n    /**@internal*/\n    addDummyInputs(): void;\n}\n\nexport interface RootAPI extends Disposable, RootAPIInternal {}\n\nexport interface UncontrolledAPI {\n    isUncontrolledCompletely(\n        element: HTMLElement,\n        completely: boolean\n    ): boolean;\n}\n\ninterface ModalizerAPIInternal extends TabsterPartWithAcceptElement {\n    /** @internal */\n    activeId: string | undefined; // currently active Modalizer user id.\n    /** @internal */\n    currentIsOthersAccessible: boolean | undefined; // isOthersAccessible value of the currently active Modalizer.\n    /** @internal */\n    activeElements: WeakHTMLElement<HTMLElement>[];\n    /** @internal */\n    createModalizer(\n        element: HTMLElement,\n        props: ModalizerProps,\n        sys: SysProps | undefined\n    ): Modalizer;\n    /**\n     * Sets active modalizers.\n     * When active, everything outside of the modalizers with the specific user\n     * defined id gets `aria-hidden`.\n     *\n     * @param userId user defined identifier or undefined (if nothing is modal).\n     */\n    /** @internal */\n    setActive(modalizer: Modalizer | undefined): void;\n    /** @internal */\n    hiddenUpdate(): void;\n    /** @internal */\n    isAugmented(element: HTMLElement): boolean;\n}\n\nexport interface ModalizerAPI extends ModalizerAPIInternal, Disposable {\n    /**\n     * Activates a Modalizer and focuses the first or default element within\n     *\n     * @param elementFromModalizer An element that belongs to a Modalizer\n     * @param noFocusFirst Do not focus on the first element in the Modalizer\n     * @param noFocusDefault Do not focus the default element in the Modalizre\n     */\n    focus(\n        elementFromModalizer: HTMLElement,\n        noFocusFirst?: boolean,\n        noFocusDefault?: boolean\n    ): boolean;\n}\n\ninterface RestorerAPIInternal {\n    /** @internal */\n    createRestorer(element: HTMLElement, props: RestorerProps): Restorer;\n}\n\nexport interface RestorerAPI extends RestorerAPIInternal, Disposable {}\n\nexport interface Restorer extends Disposable, TabsterPart<RestorerProps> {}\n/**\n * A signature for the accessibleCheck callback from getModalizer().\n * It is called when active Modalizer sets aria-hidden on elements outsidef of it.\n *\n * @param element The element that is about to receive aria-hidden.\n * @param activeModalizerElements The container elements of the active modalizer.\n * @returns true if the element should remain accessible and should not receive\n * aria-hidden.\n */\nexport type ModalizerElementAccessibleCheck = (\n    element: HTMLElement,\n    activeModalizerElements?: HTMLElement[]\n) => boolean;\n\nexport interface UncontrolledProps {\n    // Normally, even uncontrolled areas should not be completely uncontrolled\n    // to be able to interact with the rest of the application properly.\n    // For example, if an uncontrolled area implements something like\n    // roving tabindex, it should be uncontrolled inside the area, but it\n    // still should be able to be an organic part of the application.\n    // However, in some cases, third party component might want to be able\n    // to gain full control of the area, for example, if it implements\n    // some custom trap focus logic.\n    // `completely` indicates that uncontrolled area must gain full control over\n    // Tab handling. If not set, Tabster might still handle Tab in the\n    // uncontrolled area, when, for example, there is an inactive Modalizer\n    // (that needs to be skipped) after the last focusable element of the\n    // uncontrolled area.\n    // WARNING: Use with caution, as it might break the normal keyboard navigation\n    // between the uncontrolled area and the rest of the application.\n    completely?: boolean;\n}\n\nexport interface DeloserOnElement {\n    deloser: Deloser;\n}\n\nexport interface RootOnElement {\n    root: Root;\n}\n\nexport interface ModalizerOnElement {\n    modalizer: Modalizer;\n}\n\nexport interface RestorerOnElement {\n    restorer: Restorer;\n}\n\nexport interface FocusableOnElement {\n    focusable: FocusableProps;\n}\n\nexport interface MoverOnElement {\n    mover: Mover;\n}\n\nexport interface GroupperOnElement {\n    groupper: Groupper;\n}\n\nexport interface UncontrolledOnElement {\n    uncontrolled: UncontrolledProps;\n}\n\nexport interface ObservedOnElement {\n    observed: ObservedElementProps;\n}\n\nexport interface OutlineOnElement {\n    outline: OutlinedElementProps;\n}\n\nexport interface SysOnElement {\n    sys: SysProps;\n}\n\nexport interface RestorerProps {\n    type: RestorerType;\n    id?: string;\n}\n\nexport type TabsterAttributeProps = Partial<{\n    deloser: DeloserProps;\n    root: RootProps;\n    uncontrolled: UncontrolledProps;\n    modalizer: ModalizerProps;\n    focusable: FocusableProps;\n    groupper: GroupperProps;\n    mover: MoverProps;\n    observed: ObservedElementProps;\n    outline: OutlinedElementProps;\n    sys: SysProps;\n    restorer: RestorerProps;\n}>;\n\nexport interface TabsterAttributeOnElement {\n    string: string;\n    object: TabsterAttributeProps;\n}\n\nexport interface TabsterAugmentedAttributes {\n    [name: string]: string | null;\n}\n\nexport type TabsterOnElement = Partial<\n    RootOnElement &\n        DeloserOnElement &\n        ModalizerOnElement &\n        FocusableOnElement &\n        MoverOnElement &\n        GroupperOnElement &\n        ObservedOnElement &\n        OutlineOnElement &\n        UncontrolledOnElement &\n        SysOnElement &\n        RestorerOnElement\n>;\n\nexport interface OutlineElements {\n    container: HTMLDivElement;\n    left: HTMLDivElement;\n    top: HTMLDivElement;\n    right: HTMLDivElement;\n    bottom: HTMLDivElement;\n}\n\nexport interface TabsterElementStorageEntry {\n    tabster?: TabsterOnElement;\n    attr?: TabsterAttributeOnElement;\n    aug?: TabsterAugmentedAttributes;\n}\n\nexport interface TabsterElementStorage {\n    [uid: string]: TabsterElementStorageEntry;\n}\n\nexport type DisposeFunc = () => void;\n\nexport interface InternalAPI {\n    stopObserver(): void;\n    resumeObserver(syncState: boolean): void;\n}\n\nexport interface DummyInputObserver {\n    add(dummy: HTMLElement, callback: () => void): void;\n    remove(dummy: HTMLElement): void;\n    dispose(): void;\n    domChanged?(parent: HTMLElement): void;\n    updatePositions(\n        compute: (\n            scrollTopLeftCache: Map<\n                HTMLElement,\n                { scrollTop: number; scrollLeft: number } | null\n            >\n        ) => () => void\n    ): void;\n}\n\ninterface TabsterCoreInternal {\n    /** @internal */\n    groupper?: GroupperAPI;\n    /** @internal */\n    mover?: MoverAPI;\n    /** @internal */\n    outline?: OutlineAPI;\n    /** @internal */\n    deloser?: DeloserAPI;\n    /** @internal */\n    modalizer?: ModalizerAPI;\n    /** @internal */\n    observedElement?: ObservedElementAPI;\n    /** @internal */\n    crossOrigin?: CrossOriginAPI;\n    /** @internal */\n    internal: InternalAPI;\n    /** @internal */\n    restorer?: RestorerAPI;\n\n    /** @internal */\n    _dummyObserver: DummyInputObserver;\n\n    // The version of the tabster package this instance is on\n    /** @internal */\n    _version: string;\n\n    // No operation flag for the debugging purposes\n    /** @internal */\n    _noop: boolean;\n\n    /** @internal */\n    storageEntry(\n        element: HTMLElement,\n        addremove?: boolean\n    ): TabsterElementStorageEntry | undefined;\n    /** @internal */\n    getWindow: GetWindow;\n\n    /** @internal */\n    createTabster(noRefCount?: boolean, props?: TabsterCoreProps): Tabster;\n    /** @internal */\n    disposeTabster(wrapper: Tabster, allInstances?: boolean): void;\n    /** @internal */\n    forceCleanup(): void;\n\n    /** @internal */\n    queueInit(callback: () => void): void;\n    /** @internal */\n    drainInitQueue(): void;\n    /** @internal */\n    getParent: (el: Node) => Node | null;\n}\n\nexport interface Tabster {\n    keyboardNavigation: KeyboardNavigationState;\n    focusedElement: FocusedElementState;\n    focusable: FocusableAPI;\n    root: RootAPI;\n    uncontrolled: UncontrolledAPI;\n\n    /** @internal */\n    core: TabsterCore;\n}\n\nexport interface TabsterCore\n    extends Pick<TabsterCoreProps, \"controlTab\" | \"rootDummyInputs\">,\n        Disposable,\n        TabsterCoreInternal,\n        Omit<Tabster, \"core\"> {}\n\nexport interface TabsterCompat {\n    attributeTransform?: <P>(old: P) => TabsterAttributeProps;\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as Types from \"./Types\";\n\nexport interface TabsterMoveFocusEventDetail {\n    by: \"mover\" | \"groupper\" | \"modalizer\" | \"root\" | \"deloser\";\n    owner: HTMLElement; // Mover, Groupper, Modalizer or Root, the initiator.\n    next: HTMLElement | null; // Next element to focus or null if Tabster wants to go outside of Root (i.e. to the address bar of the browser).\n    relatedEvent?: KeyboardEvent; // The original keyboard event that triggered the move.\n}\n\nexport interface MoverMoveFocusEventDetail {\n    key: Types.MoverKey;\n}\n\nexport interface MoverMemorizedElementEventDetail {\n    memorizedElement: HTMLElement | undefined;\n}\n\nexport interface GroupperMoveFocusEventDetail {\n    action: Types.GroupperMoveFocusAction;\n}\n\nexport interface ModalizerEventDetail {\n    id: string;\n    element: HTMLElement;\n}\n\nexport interface RootFocusEventDetail {\n    element: HTMLElement;\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { GroupperMoveFocusAction, MoverKey } from \"./Types\";\nimport {\n    GroupperMoveFocusEvent,\n    MoverMoveFocusEvent,\n    MoverMemorizedElementEvent,\n} from \"./Events\";\n\n/** @deprecated This function is obsolete, use native element.dispatchEvent(new GroupperMoveFocusEvent(...)). */\nexport function dispatchGroupperMoveFocusEvent(\n    target: HTMLElement,\n    action: GroupperMoveFocusAction\n) {\n    return target.dispatchEvent(new GroupperMoveFocusEvent({ action }));\n}\n\n/** @deprecated This function is obsolete, use native element.dispatchEvent(new MoverMoveFocusEvent(...)). */\nexport function dispatchMoverMoveFocusEvent(\n    target: HTMLElement,\n    key: MoverKey\n) {\n    return target.dispatchEvent(new MoverMoveFocusEvent({ key }));\n}\n\n/** @deprecated This function is obsolete, use native element.dispatchEvent(new MoverMemorizedElementEvent(...)). */\nexport function dispatchMoverMemorizedElementEvent(\n    target: HTMLElement,\n    memorizedElement: HTMLElement | undefined\n) {\n    return target.dispatchEvent(\n        new MoverMemorizedElementEvent({ memorizedElement })\n    );\n}\n"],"names":["TABSTER_ATTRIBUTE_NAME","TABSTER_DUMMY_INPUT_ATTRIBUTE_NAME","FOCUSABLE_SELECTOR","join","AsyncFocusSources","EscapeGroupper","Restorer","Deloser","ObservedElementAccessibilities","Any","Accessible","Focusable","RestoreFocusOrders","History","DeloserDefault","RootDefault","DeloserFirst","RootFirst","DeloserStrategies","Auto","Manual","Visibilities","Invisible","PartiallyVisible","Visible","RestorerTypes","Source","Target","MoverDirections","Both","Vertical","Horizontal","Grid","GridLinear","MoverKeys","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","PageUp","PageDown","Home","End","GroupperTabbabilities","Unlimited","Limited","LimitedTrapFocus","GroupperMoveFocusActions","Enter","Escape","SysDummyInputsPositions","Inside","Outside","getTabsterOnElement","tabster","element","storageEntry","updateTabsterByAttribute","dispose","newAttrValue","_noop","undefined","getAttribute","entry","newAttr","attr","string","newValue","JSON","parse","Error","object","e","__DEV__","console","error","tabsterOnElement","oldTabsterProps","newTabsterProps","key","Object","keys","root","onRoot","part","observedElement","onObservedElementUpdate","sys","deloser","setProps","createDeloser","createRoot","modalizer","createModalizer","restorer","createRestorer","focusable","groupper","createGroupper","mover","createMover","observed","uncontrolled","outline","length","TabsterFocusInEventName","TabsterFocusOutEventName","TabsterMoveFocusEventName","DeloserFocusLostEventName","DeloserRestoreFocusEventName","ModalizerActiveEventName","ModalizerInactiveEventName","ModalizerFocusInEventName","ModalizerFocusOutEventName","MoverStateEventName","MoverMoveFocusEventName","MoverMemorizedElementEventName","GroupperMoveFocusEventName","RestorerRestoreFocusEventName","RootFocusEventName","RootBlurEventName","CustomEvent_","CustomEvent","TabsterCustomEvent","constructor","type","detail","bubbles","cancelable","composed","details","TabsterFocusInEvent","TabsterFocusOutEvent","TabsterMoveFocusEvent","MoverStateEvent","MoverMoveFocusEvent","MoverMemorizedElementEvent","GroupperMoveFocusEvent","ModalizerActiveEvent","ModalizerInactiveEvent","DeloserFocusLostEvent","DeloserRestoreFocusEvent","RestorerRestoreFocusEvent","RootFocusEvent","RootBlurEvent","_createMutationObserver","callback","MutationObserver","_createTreeWalker","doc","whatToShow","filter","createTreeWalker","_getParentNode","node","parentNode","_getParentElement","parentElement","_nodeContains","parent","child","contains","_getActiveElement","activeElement","_querySelector","selector","querySelector","_querySelectorAll","Array","prototype","slice","call","querySelectorAll","_getElementById","id","getElementById","_getFirstChild","firstChild","_getLastChild","lastChild","_getNextSibling","nextSibling","_getPreviousSibling","previousSibling","_getFirstElementChild","firstElementChild","_getLastElementChild","lastElementChild","_getNextElementSibling","nextElementSibling","_getPreviousElementSibling","previousElementSibling","_appendChild","appendChild","_insertBefore","referenceChild","insertBefore","_getSelection","ref","ownerDocument","getSelection","_getElementsByName","referenceElement","name","getElementsByName","dom","createMutationObserver","getParentNode","getParentElement","nodeContains","getActiveElement","getFirstChild","getLastChild","getNextSibling","getPreviousSibling","getFirstElementChild","getLastElementChild","getNextElementSibling","getPreviousElementSibling","setDOMAPI","domapi","_isBrokenIE11","_DOMRect","DOMRect","x","y","width","height","left","top","right","bottom","_uidCounter","document","NodeFilter","SHOW_ELEMENT","_updateDummyInputsTimeout","getInstanceContext","getWindow","win","ctx","__tabsterInstanceContext","elementByUId","basics","Promise","WeakRef","containerBoundingRectCache","lastContainerBoundingRectCacheId","fakeWeakRefs","fakeWeakRefsStarted","disposeInstanceContext","containerBoundingRectCacheTimer","clearTimeout","fakeWeakRefsTimer","createWeakMap","WeakMap","hasSubFocusable","FakeWeakRef","target","_target","deref","cleanup","fwr","forceRemove","documentContains","WeakHTMLElement","data","context","push","_ref","_data","get","getData","cleanupFakeWeakRefs","startFakeWeakRefsCleanup","getWeakRef","setTimeout","stopFakeWeakRefsCleanupAndClearStorage","createElementTreeWalker","acceptNode","nodeType","Node","ELEMENT_NODE","getBoundingRect","cacheId","__tabsterCacheId","cached","rect","scrollingElement","documentElement","clientWidth","clientHeight","r","getBoundingClientRect","Math","max","min","window","cId","isElementVerticallyVisibleInContainer","tolerance","container","getScrollableContainer","containerRect","elementRect","intersectionTolerance","topIntersection","bottomIntersection","totalIntersection","scrollIntoView","alignToTop","scrollTop","el","scrollWidth","scrollHeight","makeFocusIgnored","__shouldIgnoreFocus","shouldIgnoreFocus","getUId","wnd","rnd","Uint32Array","crypto","getRandomValues","msCrypto","i","random","srnd","toString","Date","now","getElementUId","uid","__tabsterElementUID","getWindowUId","__tabsterCrossOriginWindowUID","clearElementCache","wel","body","matchesSelector","matches","msMatchesSelector","webkitMatchesSelector","getPromise","_lastTabsterPartId","TabsterPart","props","_tabster","_element","_props","getElement","getProps","DummyInput","isOutside","fixedTarget","_fixedTarget","nativeFocus","input","onFocusIn","relatedTarget","_isBackward","useDefaultAction","onFocusOut","createElement","tabIndex","setAttribute","style","position","opacity","zIndex","setProperty","isFirst","_isPhantom","isPhantom","addEventListener","_focusIn","_focusOut","__tabsterDummyContainer","_disposeTimer","_clearDisposeTimeout","removeEventListener","removeChild","setTopLeft","isIn","current","previous","compareDocumentPosition","DOCUMENT_POSITION_FOLLOWING","DummyInputManagerPriorities","Root","Modalizer","Mover","Groupper","DummyInputManager","priority","outsideByDefault","callForDefaultAction","_instance","DummyInputManagerCore","_setHandlers","_onFocusIn","_onFocusOut","moveOut","backwards","moveOutWithDefaultAction","relatedEvent","getHandler","setTabbable","tabbable","moveWithPhantomDummy","moveOutOfElement","isBackward","dummy","tagName","isFocusable","potentialDummy","dummyFor","getDummyInputContainer","dispatchEvent","by","owner","next","addPhantomDummyWithTarget","sourceElement","targetElement","dummyParent","setDummyInputDebugValue","wrappers","what","map","w","DummyInputObserver","Set","WeakSet","_changedParents","has","add","_updateDummyInputsTimer","_win","_dummyElements","dummyElement","_dummyCallbacks","set","domChanged","_domChanged","remove","delete","_updateTimer","_updateQueue","clear","updatePositions","compute","_lastUpdateQueueTime","_scheduledUpdatePositions","scrollTopLeftCache","Map","setTopLeftCallbacks","manager","dummyInput","_onFocus","first","_firstDummy","last","_lastDummy","_ensurePosition","firstInput","lastInput","toFocus","_wrappers","wrapper","_getCurrent","_addTimer","_getWindow","_addTransformOffsets","_dummyObserver","_computeTransformOffsets","from","transformElements","_transformElements","newTransformElements","scrollLeft","scrollTopLeft","transform","getComputedStyle","_callForDefaultAction","instance","__tabsterDummy","forcedDummyPosition","dummyInputsPosition","_isOutside","_addDummyInputs","force","sort","a","b","firstDummyInput","lastDummyInput","elementParent","getAdjacentElement","prev","cur","adjacent","augmentAttribute","value","ret","aug","origVal","removeAttribute","origValue","isDisplayNone","elementDocument","computedStyle","defaultView","offsetParent","visibility","display","isRadio","getRadioButtonGroup","radioButtons","checked","buttons","getTabsterAttribute","plain","stringify","mergeTabsterProps","newProps","setTabsterAttribute","update","_setInformativeStyle","weakElement","removeProperty","RootDummyManager","setFocused","_setFocused","keyboardNavigation","setNavigatingWithKeyboard","focusedElement","getFirstOrLastTabbable","ignoreAccessibility","blur","_onDummyInputFocus","onDispose","hasFocused","_setFocusedTimer","_isFocused","_dummyManager","event","getParent","rootElement","curElement","composedPath","_onDispose","_sys","controlTab","rootDummyInputs","addDummyInputs","KEYBORG_FOCUSIN","KEYBORG_FOCUSOUT","_add","_remove","dummyManager","RootAPI","autoRoot","_autoRootUnwait","_autoRoot","_autoRootWaiting","_autoRootCreate","_roots","queueInit","forEach","rootId","rootById","newRoot","_onRootDispose","_forceDummy","roots","getRootByUId","__tabsterInstance","getTabsterContext","options","checkRtl","drainInitQueue","excludedFromMover","groupperBeforeMover","modalizerInGroupper","dirRightToLeft","ignoreKeydown","dir","toLowerCase","excludeFromMover","curModalizer","curGroupper","curMover","isActive","tabbability","userId","activeId","assign","rootAPI","shouldIgnoreKeydown","rtl","getRoot","removed","_containerHistoryLength","DeloserItemBase","DeloserItem","_deloser","belongsTo","unshift","focusAvailable","available","findAvailable","deloserElement","focus","resetFocus","resolve","DeloserHistoryByRootBase","rootUId","getLength","_history","removeDeloser","c","hasDeloser","some","d","DeloserHistoryByRoot","unshiftToDeloser","item","splice","skip","result","resetQueue","DeloserHistory","process","DeloserAPI","getDeloser","historyByRoot","make","createInstance","hbr","h","snapshotIndex","buildElementSelector","withClass","withIndex","escapeRegExp","escapeReplaceValue","elementId","replace","className","split","cls","trim","index","buildSelector","DOCUMENT_FRAGMENT_NODE","isBody","_isActive","_snapshotIndex","focusFirst","focusDefault","preserveExisting","we","strategy","setActive","active","getActions","clearHistory","setSnapshot","pop","isVisible","restoreFocusOrder","findDefault","_findFirst","availableInHistory","_findInHistory","availableDefault","availableFirst","customFocusLostHandler","noSelectorCheck","els","isNavigatingWithKeyboard","findFirst","useActiveModalizer","stopImmediatePropagation","_restoreFocusTimer","_scheduleRestoreFocus","_activate","_deactivate","subscribe","_onRestoreFocus","autoDeloser","_autoDeloser","_autoDeloserInstance","unsubscribe","_curDeloser","_onDeloserDispose","getFocusedElement","pause","_isPaused","resume","restore","curDeloser","_inDeloser","_isRestoringFocus","restoreFocus","lastFocused","getLastFocusedElement","isManual","curDeloserElement","deloserAPI","autoDeloserProps","getHistory","forceRestoreFocus","Subscribable","_callbacks","_val","callbacks","indexOf","subscribeFirst","setVal","val","_callCallbacks","getVal","trigger","_transactionTimeout","_pingTimeout","_targetIdUp","CrossOriginTransactionTypes","Bootstrap","FocusElement","State","GetElement","RestoreFocusInDeloser","Ping","CrossOriginDeloserItem","trasactions","_transactions","deloserUId","reset","beginTransaction","RestoreFocusInDeloserTransaction","then","CrossOriginDeloserHistoryByRoot","transactions","CrossOriginTransaction","getOwner","knownTargets","timeout","sentTo","targetId","sendUp","ownerId","beginData","_knownTargets","_sentTo","_promise","reject","_resolve","_reject","getTargets","send","begin","selfResponse","targets","transaction","isResponse","timestamp","sentto","_isSelfResponding","endData","_sentCount","end","_send","_inProgress","_isDone","onResponse","inProgressId","BootstrapTransaction","shouldForward","makeResponse","FocusElementTransaction","shouldSelfRespond","GetElementTransaction","findElement","forwardResult","CrossOriginStates","Focused","Blurred","Observed","DeadWindow","KeyboardNavigation","Outline","StateTransaction","state","isSelfResponse","_makeFocusedResponse","_makeBlurredResponse","_makeObservedResponse","_makeDeadWindowResponse","_makeKeyboardNavigationResponse","_makeOutlineResponse","CrossOriginElement","ownerUId","observedName","observedDetails","focusOwner","focusOwnerTimestamp","history","historyItem","CrossOriginFocusedElementState","crossOrigin","isFocusedProgrammatically","CrossOriginObservedElementState","names","deadUId","removeTarget","ignoreKeyboardNavigationStateUpdate","origOutlineSetup","accessibility","getElementData","getDeloserUID","dataOut","isWaitElementResolved","isForwardResolved","isResolved","waitElement","forwardRet","deloserByUId","PingTransaction","CrossOriginTransactions","_ownerUId","transactionId","knownTarget","t","Transaction","_getTransactionClass","forwardTransaction","_owner","response","_dead","source","postMessage","_onMessage","setup","isSetUp","setSendUp","_onPageHide","_ping","_isDefaultSendUp","_onBrowserMessage","_pingTimer","_deadPromise","timer","withReject","_beginTransaction","catch","finally","deadWindows","all","focused","noFocusedProgrammaticallyFlag","noAccessibleCheck","_focus","focusById","focusByObservedName","elementData","requestFocus","requestId","_lastRequestFocusId","CrossOriginAPI","_onKeyboardNavigationStateChanged","_onObserved","_ctx","_outlineSetup","_blurTimer","_init","FocusableAPI","includeProgrammaticallyFocusable","noVisibleCheck","isAccessible","_isHidden","ignoreDisabled","ignoreAriaDisabled","_isDisabled","hasAttribute","attrVal","isAugmented","out","findLast","findNext","findPrev","acceptCondition","isDefault","findAll","_findElements","found","isFindAll","currentElement","modalizerId","onElement","elements","hasCustomCondition","acceptElementState","modalizerUserId","cachedGrouppers","cachedRadioGroups","walker","_acceptElement","prepareForNextElement","shouldContinueIfNotFound","foundElement","foundBackward","fromCtx","outOfDOMOrder","currentNode","FILTER_ACCEPT","skippedFocusable","previousNode","nextNode","FILTER_SKIP","FILTER_REJECT","rejectElementsFrom","currentCtx","fromMover","acceptElement","groupperElement","fromMoverElement","moverElement","radioGroupName","radioGroup","Keys","Tab","Space","getUncontrolledCompletelyContainer","uncontrolledOnElement","isUncontrolledCompletely","completely","AsyncFocusIntentPriorityBySource","FocusedElementState","_onKeyDown","_setFocusedElement","_onChanged","originalEvent","ctrlKey","contentEditable","shiftKey","findNextTabbable","nextElement","uncontrolledCompletelyContainer","nextUncontrolled","preventDefault","_lastVal","lastCtx","asyncFocus","_asyncFocus","_lastResetElement","_nextVal","forgetMemorized","preventScroll","_focusFirstOrLast","focusLast","prevTabIndex","prevAriaHidden","_setOrRemoveAttribute","requestAsyncFocus","delay","currentAsyncFocus","cancelAsyncFocus","lastResetElement","nextVal","_validateFocusedElement","actualContainer","isTabbingTimer","_isTabbingTimer","isTabbing","callFindNext","parentCtx","currentScopeElement","newCurrent","findProps","findPropsOut","GroupperDummyManager","makeTabbable","_first","currentIsDummy","_shouldTabInside","groupperFirstFocusable","getFirst","isTabbable","noIfFirstIsFocused","isParentActive","g","orContainer","setFirst","parentCtxGroupper","parentGroupper","parentGroupperElement","getIsActive","GroupperAPI","_onMouseDown","_onMoveFocus","_grouppers","_updateCurrent","altKey","metaKey","handleKeyPress","action","defaultPrevented","_enterGroupper","_escapeGroupper","_current","groupperId","newGroupper","_onGroupperDispose","forgetCurrentGrouppers","includeTarget","checkTarget","newIds","isTarget","delegated","fromModalizer","moveFocus","KeyboardNavigationState","_keyborg","createKeyborg","_onChange","disposeKeyborg","_wasFocusedCounter","_ariaHidden","internalId","wasFocused","ModalizerDummyManager","dummyContainer","activeElements","_activeElements","_wasFocused","makeActive","_dispatchEvent","noIncrement","modalizerElement","isTrapped","allElements","eventDetail","ModalizerAPI","alwaysAccessibleSelector","accessibleCheck","_parts","_modalizers","focusedSince","m","f","augmentedMap","_augMap","currentIsOthersAccessible","isOthersAccessible","isAlwaysAccessible","_restoreModalizerFocusTimer","_restoreModalizerFocus","_aug","_alwaysAccessibleSelector","_accessibleCheck","_hiddenUpdateTimer","_onModalizerDispose","hiddenUpdate","_hiddenUpdate","elementFromModalizer","noFocusFirst","noFocusDefault","modalizerRoot","isNoFocusFirst","isNoFocusDefault","currentModalizer","parts","visibleElements","hiddenElements","alwaysAccessibleElements","activeModalizerElements","modalizerParts","allVisibleElements","newAugmented","newAugmentedMap","toggle","hide","walk","containsModalizer","containedByModalizer","elParent","__tabsterElementFlags","noDirectAriaHidden","outsideElement","DOCUMENT_POSITION_PRECEDING","_inputSelector","MoverDummyManager","getMemorized","memorized","_getMemorized","_onFocusDummyInput","_moverUpdateAdd","_moverUpdateAttr","_moverUpdateRemove","entries","newVisibility","fullyVisible","_fullyVisible","intersectionRatio","_visible","getState","visibilityTolerance","trackState","visibilityAware","_intersectionObserver","IntersectionObserver","_onIntersection","threshold","_observeState","memorizeCurrent","disconnect","_allElements","_unobserve","_setCurrentTimer","setCurrent","changed","_prevCurrent","weak","getCurrent","hasDefault","tabsterFocusable","updateQueue","observer","mutations","mutation","removedNodes","added","addedNodes","attributeName","requestUpdate","setElement","unobserve","observe","updateElement","addNewElements","getMoverGroupper","removeWalk","toe","childList","subtree","attributes","attributeFilter","isCurrent","getDistance","ax1","ay1","ax2","ay2","bx1","by1","bx2","by2","xDistance","yDistance","sqrt","MoverAPI","_onMemorizedElement","_movers","currentFocusableElement","deepestFocusableElement","_ignoredInputTimer","_ignoredInputResolve","moverKey","_isIgnoredInput","_moveFocus","memorizedElement","moverId","newMover","_onMoverDispose","fromElement","moverProps","direction","isBoth","isVertical","isHorizontal","isGridLinear","isGrid","isCyclic","cyclic","scrollIntoViewArg","focusedElementRect","focusedElementX1","focusedElementX2","ceil","floor","nextElementX1","nextElementX2","firstColumnX1","lastColumnX1","lastDistance","lastIntersection","xIntersectionWidth","minWidth","intersection","distance","selectionStart","selectionEnd","textLength","asyncRet","selection","initialLength","modify","selStart","anchorNode","prevAnchorNode","focusNode","prevFocusNode","anchorOffset","prevAnchorOffset","focusOffset","prevFocusOffset","textContent","anchorFound","addOffsets","nodeText","len","stop","observeMutations","syncState","onMutation","removedNode","updateTabsterElements","processNode","_conditionCheckTimeout","ObservedElementAPI","_currentRequest","delta","_currentRequestTimestamp","settleTime","cancel","info","_observedById","observedNames","prevNames","_isObservedNamesUpdated","prevName","obn","_observedByName","_waitConditional","_waiting","_rejectWaiting","shouldResolve","conditionTimer","o","prefix","request","promise","currentRequestFocus","waitingElementKey","waitingAccessibleElementKey","waitingFocusableElementKey","waitingElement","waitingAccessibleElement","waitingFocusableElement","waiting","includes","resolveAccessible","resolveFocusable","defaultProps","areaClass","outlineClass","outlineColor","outlineWidth","OutlinePosition","equalsTo","other","clone","OutlineAPI","_onScroll","_fullScreenEventName","_onFullScreenChanged","_fullScreenElementName","outlineElements","_getDOM","fsElement","_fullScreenElement","_updateElement","_isVisible","_setVisibility","_outlinedElement","_isParentChild","_curPos","_setOutlinePosition","__tabsterOutline","appendStyles","classList","_allOutlineElements","_removeDOM","_curOutlineElements","_shouldShowCustomOutline","isIgnored","inputType","outlinedInputTypes","button","checkbox","file","image","radio","range","submit","_updateOutline","visible","boundingRect","p","hasAbsolutePositionedParent","hasFixedPositionedParent","overflow","allRect","allWidth","allHeight","ow","leftBorderNode","topBorderNode","rightBorderNode","bottomBorderNode","sx","pageXOffset","sy","pageYOffset","background","contextElement","DOCUMENT_POSITION_CONTAINED_BY","createTextNode","getOutlineStyles","head","UncontrolledAPI","_isUncontrolledCompletely","_hasFocus","_stack","DEPTH","shift","maybeElement","RestorerAPI","_focusedElementState","sourceId","_restoreFocus","tabsterAttribute","_keyboardNavState","getId","shadowRoot","otherNode","assignedElements","assignedSlot","host","sibling","tmp","ShadowTreeWalker","_doc","_acceptNode","_walkerStack","SHOW_ALL","_currentNode","walkers","curNode","currentWalkerCurrentNode","_currentSetFor","nodeResult","currentWalker","createShadowTreeWalker","ShadowMutationObserver","_overrideAttachShadow","origAttachShadow","Element","attachShadow","__origAttachShadow","shadowObserver","_shadowObservers","_addSubObserver","_walkShadows","_callback","_observer","_callbackWrapper","_subObservers","_options","_root","subObserver","_isObserving","values","DOCUMENT_NODE","takeRecords","records","createShadowMutationObserver","shadowQuerySelector","n","Tabster","core","TabsterCore","__VERSION__","_storage","DOMAPI","checkUncontrolledCompletely","checkUncontrolledTrappingFocus","internal","stopObserver","resumeObserver","_mergeProps","createTabster","noRefCount","disposeTabster","allInstances","size","_initTimer","_initQueue","_forgetMemorizedElements","_forgetMemorizedTimer","addremove","storage","forceCleanup","queue","tabsterCore","getCurrentTabster","getTabster","getShadowDOMAPI","shadowDOMAPI","getGroupper","getMover","getOutline","getModalizer","getObservedElement","getCrossOrigin","getInternal","getRestorer","makeNoOp","noop","isNoOp","dispatchGroupperMoveFocusEvent","dispatchMoverMoveFocusEvent","dispatchMoverMemorizedElementEvent"],"mappings":"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"}